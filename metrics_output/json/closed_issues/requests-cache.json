{"total_count": 69, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/150", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/150/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/150/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/150", "id": 602161870, "node_id": "MDU6SXNzdWU2MDIxNjE4NzA=", "number": 150, "title": "'Response' object has no attribute 'from_cache' inside hook", "user": {"login": "januszm", "id": 864446, "node_id": "MDQ6VXNlcjg2NDQ0Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/864446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/januszm", "html_url": "https://github.com/januszm", "followers_url": "https://api.github.com/users/januszm/followers", "following_url": "https://api.github.com/users/januszm/following{/other_user}", "gists_url": "https://api.github.com/users/januszm/gists{/gist_id}", "starred_url": "https://api.github.com/users/januszm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/januszm/subscriptions", "organizations_url": "https://api.github.com/users/januszm/orgs", "repos_url": "https://api.github.com/users/januszm/repos", "events_url": "https://api.github.com/users/januszm/events{/privacy}", "received_events_url": "https://api.github.com/users/januszm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-17T18:38:25Z", "updated_at": "2020-04-17T19:40:47Z", "closed_at": "2020-04-17T19:40:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using requests / session hooks, it appears that the `from_cache` attribute is not available on the Response object that is passed to the hook.\r\n\r\n```python\r\ndef _cache_hit_hook(response, *args, **kwargs):\r\n    if response.from_cache:\r\n        cache_hit()\r\n\r\nsession = requests_cache.CachedSession(\r\n    backend='redis',\r\n    connection=redis.StrictRedis.from_url(REDIS_URL),\r\n    allowable_codes=(200, 404),\r\n    allowable_methods=('GET', 'POST')\r\n)\r\nsession.hooks['response'].append(_cache_hit_hook)\r\n```\r\n\r\n```sh\r\n.venv/lib/python3.7/site-packages/requests/sessions.py:530: in request\r\n    resp = self.send(prep, **send_kwargs)\r\n\r\n.venv/lib/python3.7/site-packages/requests_cache/core.py:109: in send\r\n    return send_request_and_cache_response()\r\n\r\n.venv/lib/python3.7/site-packages/requests_cache/core.py:97: in send_request_and_cache_response\r\n    response = super(CachedSession, self).send(request, **kwargs)\r\n\r\n.venv/lib/python3.7/site-packages/requests/sessions.py:650: in send\r\n    r = dispatch_hook('response', hooks, r, **kwargs)\r\n\r\n.venv/lib/python3.7/site-packages/requests/hooks.py:31: in dispatch_hook\r\n    _hook_data = hook(hook_data, **kwargs)\r\n\r\n----------\r\nresponse = <Response [400]>, args = (), kwargs = {'cert': None, 'proxies': OrderedDict(), 'stream': False, 'timeout': None, ...}\r\n\r\n    def _cache_metric(response, *args, **kwargs):\r\n>       if response.from_cache:        \r\nE       AttributeError: 'Response' object has no attribute 'from_cache'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/145", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/145/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/145/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/145", "id": 512487994, "node_id": "MDU6SXNzdWU1MTI0ODc5OTQ=", "number": 145, "title": "Can I store negative responses?", "user": {"login": "marcvs", "id": 2298166, "node_id": "MDQ6VXNlcjIyOTgxNjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2298166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcvs", "html_url": "https://github.com/marcvs", "followers_url": "https://api.github.com/users/marcvs/followers", "following_url": "https://api.github.com/users/marcvs/following{/other_user}", "gists_url": "https://api.github.com/users/marcvs/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcvs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcvs/subscriptions", "organizations_url": "https://api.github.com/users/marcvs/orgs", "repos_url": "https://api.github.com/users/marcvs/repos", "events_url": "https://api.github.com/users/marcvs/events{/privacy}", "received_events_url": "https://api.github.com/users/marcvs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-25T12:26:44Z", "updated_at": "2020-04-27T06:31:39Z", "closed_at": "2020-04-27T06:31:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm querying a number of hosts multiple times. It would be useful if requests_cache also cached negative hits, likely with a different cache time.\r\n\r\nI know how to help myself otherwise, still I think this might be a useful feature.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/140", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/140/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/140/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/140", "id": 480237183, "node_id": "MDU6SXNzdWU0ODAyMzcxODM=", "number": 140, "title": "DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated", "user": {"login": "mgedmin", "id": 159967, "node_id": "MDQ6VXNlcjE1OTk2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/159967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgedmin", "html_url": "https://github.com/mgedmin", "followers_url": "https://api.github.com/users/mgedmin/followers", "following_url": "https://api.github.com/users/mgedmin/following{/other_user}", "gists_url": "https://api.github.com/users/mgedmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgedmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgedmin/subscriptions", "organizations_url": "https://api.github.com/users/mgedmin/orgs", "repos_url": "https://api.github.com/users/mgedmin/repos", "events_url": "https://api.github.com/users/mgedmin/events{/privacy}", "received_events_url": "https://api.github.com/users/mgedmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-13T15:57:02Z", "updated_at": "2019-08-14T13:54:44Z", "closed_at": "2019-08-14T13:54:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The DeprecationWarning that doesn't go away :)\r\n\r\nIt's been fixed twice already: #122, #126.  Unfortunately Python displays the warning only once, even if the line that would cause it is present in several places.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/139", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/139/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/139/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/139", "id": 480189805, "node_id": "MDU6SXNzdWU0ODAxODk4MDU=", "number": 139, "title": "New release?", "user": {"login": "mgedmin", "id": 159967, "node_id": "MDQ6VXNlcjE1OTk2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/159967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgedmin", "html_url": "https://github.com/mgedmin", "followers_url": "https://api.github.com/users/mgedmin/followers", "following_url": "https://api.github.com/users/mgedmin/following{/other_user}", "gists_url": "https://api.github.com/users/mgedmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgedmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgedmin/subscriptions", "organizations_url": "https://api.github.com/users/mgedmin/orgs", "repos_url": "https://api.github.com/users/mgedmin/repos", "events_url": "https://api.github.com/users/mgedmin/events{/privacy}", "received_events_url": "https://api.github.com/users/mgedmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-13T14:29:09Z", "updated_at": "2019-08-14T14:00:18Z", "closed_at": "2019-08-13T14:43:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Any chance of a new release on PyPI?  The collections.abc deprecation warnings are bugging me, but I see the fix was already merged to git master (#131).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/130", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/130/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/130/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/130", "id": 442683571, "node_id": "MDU6SXNzdWU0NDI2ODM1NzE=", "number": 130, "title": "Helper function returning whether next/last call is/was cached", "user": {"login": "olivierdalang", "id": 1894106, "node_id": "MDQ6VXNlcjE4OTQxMDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1894106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olivierdalang", "html_url": "https://github.com/olivierdalang", "followers_url": "https://api.github.com/users/olivierdalang/followers", "following_url": "https://api.github.com/users/olivierdalang/following{/other_user}", "gists_url": "https://api.github.com/users/olivierdalang/gists{/gist_id}", "starred_url": "https://api.github.com/users/olivierdalang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olivierdalang/subscriptions", "organizations_url": "https://api.github.com/users/olivierdalang/orgs", "repos_url": "https://api.github.com/users/olivierdalang/repos", "events_url": "https://api.github.com/users/olivierdalang/events{/privacy}", "received_events_url": "https://api.github.com/users/olivierdalang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-10T12:02:14Z", "updated_at": "2019-05-10T12:33:58Z", "closed_at": "2019-05-10T12:33:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi !\r\n\r\nIt would be good to a function to easily determine whether the last call was cached or not.\r\nSomething like \r\n```python\r\ncached_requests = requests_cache.core.CachedSession(...)\r\ncached_requests.post('http://example.com', data={'abc':'def'})\r\nif cached_requests.was_last_call_retrieved_from_cache():\r\n    print(\"Last request was retrived from cache :-)\")\r\n```\r\nCould be useful for requests counters or otherwise user feedback.\r\n\r\nThanks !\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/126", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/126/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/126/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/126", "id": 434282492, "node_id": "MDU6SXNzdWU0MzQyODI0OTI=", "number": 126, "title": "Fix DeprecationWarning from collections", "user": {"login": "turicas", "id": 186126, "node_id": "MDQ6VXNlcjE4NjEyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/186126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/turicas", "html_url": "https://github.com/turicas", "followers_url": "https://api.github.com/users/turicas/followers", "following_url": "https://api.github.com/users/turicas/following{/other_user}", "gists_url": "https://api.github.com/users/turicas/gists{/gist_id}", "starred_url": "https://api.github.com/users/turicas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/turicas/subscriptions", "organizations_url": "https://api.github.com/users/turicas/orgs", "repos_url": "https://api.github.com/users/turicas/repos", "events_url": "https://api.github.com/users/turicas/events{/privacy}", "received_events_url": "https://api.github.com/users/turicas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-17T13:25:57Z", "updated_at": "2019-06-25T19:26:30Z", "closed_at": "2019-06-25T13:20:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting this `DeprecationWarning` (requests-cache version 0.4.13):\r\n```\r\n[...]/requests_cache/backends/storage/dbdict.py:9: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n  from collections import MutableMapping\r\n```\r\n\r\nI think the fix is pretty simple, just replace:\r\n```python\r\nfrom collections import MutableMapping\r\n```\r\nwith:\r\n```python\r\nfrom collections.abc import MutableMapping\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/125", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/125/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/125/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/125", "id": 423207056, "node_id": "MDU6SXNzdWU0MjMyMDcwNTY=", "number": 125, "title": "response not cached in case of 404", "user": {"login": "jigarparekh80", "id": 9564573, "node_id": "MDQ6VXNlcjk1NjQ1NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9564573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jigarparekh80", "html_url": "https://github.com/jigarparekh80", "followers_url": "https://api.github.com/users/jigarparekh80/followers", "following_url": "https://api.github.com/users/jigarparekh80/following{/other_user}", "gists_url": "https://api.github.com/users/jigarparekh80/gists{/gist_id}", "starred_url": "https://api.github.com/users/jigarparekh80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jigarparekh80/subscriptions", "organizations_url": "https://api.github.com/users/jigarparekh80/orgs", "repos_url": "https://api.github.com/users/jigarparekh80/repos", "events_url": "https://api.github.com/users/jigarparekh80/events{/privacy}", "received_events_url": "https://api.github.com/users/jigarparekh80/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-20T11:43:08Z", "updated_at": "2019-03-20T11:57:02Z", "closed_at": "2019-03-20T11:57:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "If service call returns response with http code 404 then response is not cached. \r\n\r\n```\r\nimport requests\r\nimport requests_cache\r\nrequests_cache.install_cache()\r\nrequests_cache.clear()\r\n```\r\n\r\n```\r\nr = requests.get('http://httpbin.org/ge')\r\nr.from_cache\r\n```\r\nThis returns False as expected but if i execute this again then\r\n\r\n```\r\nr = requests.get('http://httpbin.org/ge')\r\nr.from_cache\r\n```\r\nThis also returns False \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/122", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/122/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/122/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/122", "id": 409801169, "node_id": "MDU6SXNzdWU0MDk4MDExNjk=", "number": 122, "title": "Warning for not using collections.abc", "user": {"login": "mbarkhau", "id": 446561, "node_id": "MDQ6VXNlcjQ0NjU2MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/446561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbarkhau", "html_url": "https://github.com/mbarkhau", "followers_url": "https://api.github.com/users/mbarkhau/followers", "following_url": "https://api.github.com/users/mbarkhau/following{/other_user}", "gists_url": "https://api.github.com/users/mbarkhau/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbarkhau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbarkhau/subscriptions", "organizations_url": "https://api.github.com/users/mbarkhau/orgs", "repos_url": "https://api.github.com/users/mbarkhau/repos", "events_url": "https://api.github.com/users/mbarkhau/events{/privacy}", "received_events_url": "https://api.github.com/users/mbarkhau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-13T13:18:52Z", "updated_at": "2019-04-13T08:22:37Z", "closed_at": "2019-04-13T08:22:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n/home/user/envs/env/lib/python3.7/site-packages/requests_cache/backends/storage/dbdict.py:9:\r\n    DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    from collections import MutableMapping\r\n```\r\n\r\nSee also https://github.com/benjaminp/six/issues/155", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/120", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/120/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/120/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/120", "id": 378076748, "node_id": "MDU6SXNzdWUzNzgwNzY3NDg=", "number": 120, "title": "Get the timestamp of when a HTTP response got cached, from request_cache", "user": {"login": "DeqingQu", "id": 2810578, "node_id": "MDQ6VXNlcjI4MTA1Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2810578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeqingQu", "html_url": "https://github.com/DeqingQu", "followers_url": "https://api.github.com/users/DeqingQu/followers", "following_url": "https://api.github.com/users/DeqingQu/following{/other_user}", "gists_url": "https://api.github.com/users/DeqingQu/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeqingQu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeqingQu/subscriptions", "organizations_url": "https://api.github.com/users/DeqingQu/orgs", "repos_url": "https://api.github.com/users/DeqingQu/repos", "events_url": "https://api.github.com/users/DeqingQu/events{/privacy}", "received_events_url": "https://api.github.com/users/DeqingQu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-06T23:22:36Z", "updated_at": "2019-04-13T08:38:02Z", "closed_at": "2019-04-13T08:38:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIs it possible to get the timestamp of when an HTTP response got cached, from request_cache?\r\n\r\nWe are using request_cache in our project and the cache file is more than 100 GB now. Some of the caches are out of date but we don't know how to identify the expired cache. Is there any idea?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/117", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/117/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/117/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/117", "id": 374045111, "node_id": "MDU6SXNzdWUzNzQwNDUxMTE=", "number": 117, "title": "Feature Request: use a function to determine whether or not to cache", "user": {"login": "AlJohri", "id": 2790092, "node_id": "MDQ6VXNlcjI3OTAwOTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2790092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlJohri", "html_url": "https://github.com/AlJohri", "followers_url": "https://api.github.com/users/AlJohri/followers", "following_url": "https://api.github.com/users/AlJohri/following{/other_user}", "gists_url": "https://api.github.com/users/AlJohri/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlJohri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlJohri/subscriptions", "organizations_url": "https://api.github.com/users/AlJohri/orgs", "repos_url": "https://api.github.com/users/AlJohri/repos", "events_url": "https://api.github.com/users/AlJohri/events{/privacy}", "received_events_url": "https://api.github.com/users/AlJohri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-25T17:07:26Z", "updated_at": "2019-04-13T08:31:34Z", "closed_at": "2019-04-13T08:31:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a weird API that always returns status code of 200 with bad responses. I want to use a function to return false given a response when the result should not be cached\r\n\r\nI currently hacked around it like this:\r\n\r\n```python\r\n    r = session.post(url, headers=headers, data=payload)\r\n\r\n    # HACK: clear if cached error and repeat request\r\n    if r.from_cache and r.json()['status']['code'] != 0:\r\n        key = session.cache.create_key(r.request)\r\n        session.cache.delete(key)\r\n        r = session.post(url, headers=headers, data=payload)\r\n```\r\n\r\n@reclosedev I can submit a PR for this if you're amenable", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/111", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/111/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/111/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/111", "id": 345087844, "node_id": "MDU6SXNzdWUzNDUwODc4NDQ=", "number": 111, "title": "AttributeError: module 'requests_cache' has no attribute 'delete_url'", "user": {"login": "monkeysuffrage", "id": 875132, "node_id": "MDQ6VXNlcjg3NTEzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/875132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/monkeysuffrage", "html_url": "https://github.com/monkeysuffrage", "followers_url": "https://api.github.com/users/monkeysuffrage/followers", "following_url": "https://api.github.com/users/monkeysuffrage/following{/other_user}", "gists_url": "https://api.github.com/users/monkeysuffrage/gists{/gist_id}", "starred_url": "https://api.github.com/users/monkeysuffrage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/monkeysuffrage/subscriptions", "organizations_url": "https://api.github.com/users/monkeysuffrage/orgs", "repos_url": "https://api.github.com/users/monkeysuffrage/repos", "events_url": "https://api.github.com/users/monkeysuffrage/events{/privacy}", "received_events_url": "https://api.github.com/users/monkeysuffrage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-27T04:36:29Z", "updated_at": "2019-07-25T06:53:16Z", "closed_at": "2019-07-25T06:53:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can someone tell me why I'm seeing this? I see that function in the docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/93", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/93/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/93/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/93", "id": 230418073, "node_id": "MDU6SXNzdWUyMzA0MTgwNzM=", "number": 93, "title": "remove_expired_responses() not imported in __init__.py", "user": {"login": "adargu", "id": 26898753, "node_id": "MDQ6VXNlcjI2ODk4NzUz", "avatar_url": "https://avatars3.githubusercontent.com/u/26898753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adargu", "html_url": "https://github.com/adargu", "followers_url": "https://api.github.com/users/adargu/followers", "following_url": "https://api.github.com/users/adargu/following{/other_user}", "gists_url": "https://api.github.com/users/adargu/gists{/gist_id}", "starred_url": "https://api.github.com/users/adargu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adargu/subscriptions", "organizations_url": "https://api.github.com/users/adargu/orgs", "repos_url": "https://api.github.com/users/adargu/repos", "events_url": "https://api.github.com/users/adargu/events{/privacy}", "received_events_url": "https://api.github.com/users/adargu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-22T14:40:54Z", "updated_at": "2017-07-16T18:47:52Z", "closed_at": "2017-06-01T11:32:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Wanted to `remove_expired_responses()` like you wrote in your [Documentation](https://requests-cache.readthedocs.io/en/latest/user_guide.html#expiration), but got the Error:\r\n`AttributeError: 'module' object has no attribute 'remove_expired_responses'`\r\n\r\nBecause `remove_expired_responses()` is not imported in `__init__.py`\r\n\r\nMy workaround:\r\n```\r\nfrom requests_cache import core\r\ncore.remove_expired_responses()\r\n```\r\nChecked the sqlite library and I think it's working.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/86", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/86/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/86/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/86", "id": 211701745, "node_id": "MDU6SXNzdWUyMTE3MDE3NDU=", "number": 86, "title": "Problems with read only MongoCache", "user": {"login": "tschm", "id": 2046079, "node_id": "MDQ6VXNlcjIwNDYwNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2046079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschm", "html_url": "https://github.com/tschm", "followers_url": "https://api.github.com/users/tschm/followers", "following_url": "https://api.github.com/users/tschm/following{/other_user}", "gists_url": "https://api.github.com/users/tschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschm/subscriptions", "organizations_url": "https://api.github.com/users/tschm/orgs", "repos_url": "https://api.github.com/users/tschm/repos", "events_url": "https://api.github.com/users/tschm/events{/privacy}", "received_events_url": "https://api.github.com/users/tschm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-03T14:26:35Z", "updated_at": "2017-03-03T18:17:12Z", "closed_at": "2017-03-03T18:17:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI install a request_cache like that:\r\n```\r\n    client = MongoClient(host=\"quantsrv\", port=27017)\r\n    client.admin.authenticate(name=\"read\", password=\"123\")\r\n\r\n    # can only read from database!\r\n    requests_cache.install_cache(backend=MongoCache(connection=client),  allowable_methods=('GET',))\r\n```\r\nThere is a different process with write access to quantsrv. This process flushes the cache and updates all entries every morning. This works.\r\n\r\nHowever, our core webpage has only read access to the database. It has however, a POST method calling a routine on a restserver. Whenever I use this method the webpage falls over as the requests_cache is trying to write the POST request into the database. This behaviour is bizarre in particular given we explicitly state in allowable methods that only GET methods should be stored. Note that all possible GET methods are precomputed by the external process and hence GET will never try to write into our database\r\n\r\nThomas\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/83", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/83/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/83/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/83", "id": 208622283, "node_id": "MDU6SXNzdWUyMDg2MjIyODM=", "number": 83, "title": "Fails with Python 3.4", "user": {"login": "chrisspen", "id": 116631, "node_id": "MDQ6VXNlcjExNjYzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/116631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisspen", "html_url": "https://github.com/chrisspen", "followers_url": "https://api.github.com/users/chrisspen/followers", "following_url": "https://api.github.com/users/chrisspen/following{/other_user}", "gists_url": "https://api.github.com/users/chrisspen/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisspen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisspen/subscriptions", "organizations_url": "https://api.github.com/users/chrisspen/orgs", "repos_url": "https://api.github.com/users/chrisspen/repos", "events_url": "https://api.github.com/users/chrisspen/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisspen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3068697, "node_id": "MDU6TGFiZWwzMDY4Njk3", "url": "https://api.github.com/repos/reclosedev/requests-cache/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-02-18T07:36:53Z", "updated_at": "2019-06-25T13:42:29Z", "closed_at": "2019-06-25T13:42:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I attempt to use requests with caching enabled in Python 3.4, I get this traceback:\r\n\r\n        return requests.get(url).text\r\n      File \"/myproject/.tox/py34/lib/python3.4/site-packages/requests/api.py\", line 70, in get\r\n        return request('get', url, params=params, **kwargs)\r\n      File \"/myproject/.tox/py34/lib/python3.4/site-packages/requests/api.py\", line 56, in request\r\n        return session.request(method=method, url=url, **kwargs)\r\n      File \"/myproject/.tox/py34/lib/python3.4/site-packages/requests_cache/core.py\", line 126, in request\r\n        **kwargs\r\n      File \"/myproject/.tox/py34/lib/python3.4/site-packages/requests/sessions.py\", line 488, in request\r\n        resp = self.send(prep, **send_kwargs)\r\n      File \"/myproject/.tox/py34/lib/python3.4/site-packages/requests_cache/core.py\", line 97, in send\r\n        response, timestamp = self.cache.get_response_and_time(cache_key)\r\n      File \"/myproject/.tox/py34/lib/python3.4/site-packages/requests_cache/backends/base.py\", line 70, in get_response_and_time\r\n        if key not in self.responses:\r\n      File \"/myproject/.tox/py34/lib/python3.4/_collections_abc.py\", line 428, in __contains__\r\n        self[key]\r\n      File \"/myproject/.tox/py34/lib/python3.4/site-packages/requests_cache/backends/storage/dbdict.py\", line 163, in __getitem__\r\n        return pickle.loads(bytes(super(DbPickleDict, self).__getitem__(key)))\r\n      File \"/myproject/.tox/py34/lib/python3.4/site-packages/requests/packages/urllib3/packages/ordered_dict.py\", line 8, in <module>\r\n        from dummy_thread import get_ident as _get_ident\r\n    nose.proxy.ImportError: No module named 'dummy_thread'\r\n\r\nAs far as I can tell, dummy_thread is a Python 2.7 module, which doesn't exist in Python 3.*, so I'm not sure what would be trying to use it, much less for retrieving URLs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/79", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/79/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/79/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/79", "id": 198396391, "node_id": "MDU6SXNzdWUxOTgzOTYzOTE=", "number": 79, "title": "session cache and expire only when session expires", "user": {"login": "hemulin", "id": 1885510, "node_id": "MDQ6VXNlcjE4ODU1MTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1885510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hemulin", "html_url": "https://github.com/hemulin", "followers_url": "https://api.github.com/users/hemulin/followers", "following_url": "https://api.github.com/users/hemulin/following{/other_user}", "gists_url": "https://api.github.com/users/hemulin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hemulin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hemulin/subscriptions", "organizations_url": "https://api.github.com/users/hemulin/orgs", "repos_url": "https://api.github.com/users/hemulin/repos", "events_url": "https://api.github.com/users/hemulin/events{/privacy}", "received_events_url": "https://api.github.com/users/hemulin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-03T01:00:58Z", "updated_at": "2017-01-06T00:54:47Z", "closed_at": "2017-01-06T00:54:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Assuming I have initialization of the cache as follows:\r\n\r\n```python\r\nself_cache_path = os.path.join(self.cache_dir, \"mysite_cache\")\r\nrequests_cache.install_cache(self_cache_path, backend='sqlite)\r\nself.web_session = requests.Session()\r\n```\r\nAnd as part of the session operation, the first action is to login into some page.\r\n\r\nLooking from  a browser, the login process stores a logged-in cookie that expires when the session expires.\r\n\r\nI wish to imitate this and limit all the requests to expire at the end of the created session. How should I accomplish that?\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/78", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/78/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/78/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/78", "id": 197956896, "node_id": "MDU6SXNzdWUxOTc5NTY4OTY=", "number": 78, "title": "DbDict bulk_commit error", "user": {"login": "panda-34", "id": 10416599, "node_id": "MDQ6VXNlcjEwNDE2NTk5", "avatar_url": "https://avatars3.githubusercontent.com/u/10416599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panda-34", "html_url": "https://github.com/panda-34", "followers_url": "https://api.github.com/users/panda-34/followers", "following_url": "https://api.github.com/users/panda-34/following{/other_user}", "gists_url": "https://api.github.com/users/panda-34/gists{/gist_id}", "starred_url": "https://api.github.com/users/panda-34/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panda-34/subscriptions", "organizations_url": "https://api.github.com/users/panda-34/orgs", "repos_url": "https://api.github.com/users/panda-34/repos", "events_url": "https://api.github.com/users/panda-34/events{/privacy}", "received_events_url": "https://api.github.com/users/panda-34/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-12-29T05:47:13Z", "updated_at": "2017-06-01T11:30:50Z", "closed_at": "2017-06-01T11:30:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "This code:\r\n```\r\nd = requests_cache.backends.storage.dbdict.DbDict('test')\r\nwith d.bulk_commit():\r\n    pass\r\n```\r\n\r\nproduces an error because self._pending_connection hasn't been created yet and in bulk_commit finalizing .close() is called on it without checking that it is still None.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/77", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/77/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/77/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/77", "id": 197336174, "node_id": "MDU6SXNzdWUxOTczMzYxNzQ=", "number": 77, "title": "Please make a new release", "user": {"login": "tschm", "id": 2046079, "node_id": "MDQ6VXNlcjIwNDYwNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2046079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschm", "html_url": "https://github.com/tschm", "followers_url": "https://api.github.com/users/tschm/followers", "following_url": "https://api.github.com/users/tschm/following{/other_user}", "gists_url": "https://api.github.com/users/tschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschm/subscriptions", "organizations_url": "https://api.github.com/users/tschm/orgs", "repos_url": "https://api.github.com/users/tschm/repos", "events_url": "https://api.github.com/users/tschm/events{/privacy}", "received_events_url": "https://api.github.com/users/tschm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-23T09:19:03Z", "updated_at": "2016-12-23T09:41:58Z", "closed_at": "2016-12-23T09:41:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Roman,\r\nWe use Mongo to cache the responses. We use currently pymongo 3.3.    Your most recent release fails on that. Howeve, the problems are fixed in the current state of git repo. Could you please therefore make a new release. Merry Xmas\r\nThomas\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/75", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/75/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/75/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/75", "id": 187217457, "node_id": "MDU6SXNzdWUxODcyMTc0NTc=", "number": 75, "title": "requests_cache.disabled() not working with sessions", "user": {"login": "xocoatzin", "id": 1660999, "node_id": "MDQ6VXNlcjE2NjA5OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1660999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xocoatzin", "html_url": "https://github.com/xocoatzin", "followers_url": "https://api.github.com/users/xocoatzin/followers", "following_url": "https://api.github.com/users/xocoatzin/following{/other_user}", "gists_url": "https://api.github.com/users/xocoatzin/gists{/gist_id}", "starred_url": "https://api.github.com/users/xocoatzin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xocoatzin/subscriptions", "organizations_url": "https://api.github.com/users/xocoatzin/orgs", "repos_url": "https://api.github.com/users/xocoatzin/repos", "events_url": "https://api.github.com/users/xocoatzin/events{/privacy}", "received_events_url": "https://api.github.com/users/xocoatzin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-03T23:30:41Z", "updated_at": "2017-06-01T11:21:18Z", "closed_at": "2017-06-01T11:21:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code fails:\r\n\r\n```\r\ns = requests.Session()\r\ns.auth = ('####', '-')\r\ns.headers.update({'User-Agent': 'XYZ'})\r\n\r\n#...\r\n\r\nwith requests_cache.disabled():\r\n    r = s.get(url, stream=True)\r\n```\r\n\r\n`url` returns a 302 to a signed URL in Cloud Storage. It fails when the referenced file is large (this was 800 Mb or so)\r\n\r\n**The disturbing part is that the traceback shows that the cache is not actually being disabled**. \r\nI fixed it by changing `s.get()` to `requests.get()`.\r\n\r\n```\r\nTraceback (most recent call last): \r\n  File \"/lib/recording_processor.py\", line 464, in get_single_file\r\n    r = self.s.get(url, stream=True)\r\n  File \"/venv/local/lib/python2.7/site-packages/requests/sessions.py\", line 487, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/venv/local/lib/python2.7/site-packages/requests_cache/core.py\", line 126, in request\r\n    **kwargs\r\n  File \"/venv/local/lib/python2.7/site-packages/requests/sessions.py\", line 475, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/venv/local/lib/python2.7/site-packages/requests_cache/core.py\", line 99, in send\r\n    return send_request_and_cache_response()\r\n  File \"/venv/local/lib/python2.7/site-packages/requests_cache/core.py\", line 91, in send_request_and_cache_response\r\n    response = super(CachedSession, self).send(request, **kwargs)\r\n  File \"/venv/local/lib/python2.7/site-packages/requests/sessions.py\", line 606, in send\r\n    history = [resp for resp in gen] if allow_redirects else []\r\n  File \"/venv/local/lib/python2.7/site-packages/requests/sessions.py\", line 179, in resolve_redirects\r\n    **adapter_kwargs\r\n  File \"/venv/local/lib/python2.7/site-packages/requests_cache/core.py\", line 99, in send\r\n    return send_request_and_cache_response()\r\n  File \"/venv/local/lib/python2.7/site-packages/requests_cache/core.py\", line 93, in send_request_and_cache_response\r\n    self.cache.save_response(cache_key, response)\r\n  File \"/venv/local/lib/python2.7/site-packages/requests_cache/backends/base.py\", line 46, in save_response\r\n    self.responses[key] = self.reduce_response(response), datetime.utcnow()\r\n  File \"/venv/local/lib/python2.7/site-packages/requests_cache/backends/storage/dbdict.py\", line 160, in __setitem__\r\n    sqlite.Binary(pickle.dumps(item)))\r\n  File \"/venv/local/lib/python2.7/site-packages/requests_cache/backends/storage/dbdict.py\", line 125, in __setitem__\r\n    self.table_name, (key, item))\r\nInterfaceError: Error binding parameter 1 - probably unsupported type.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/73", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/73/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/73/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/73", "id": 174533269, "node_id": "MDU6SXNzdWUxNzQ1MzMyNjk=", "number": 73, "title": "Error received after updating the requests package", "user": {"login": "MehmetAzizYirik", "id": 15614358, "node_id": "MDQ6VXNlcjE1NjE0MzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/15614358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MehmetAzizYirik", "html_url": "https://github.com/MehmetAzizYirik", "followers_url": "https://api.github.com/users/MehmetAzizYirik/followers", "following_url": "https://api.github.com/users/MehmetAzizYirik/following{/other_user}", "gists_url": "https://api.github.com/users/MehmetAzizYirik/gists{/gist_id}", "starred_url": "https://api.github.com/users/MehmetAzizYirik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MehmetAzizYirik/subscriptions", "organizations_url": "https://api.github.com/users/MehmetAzizYirik/orgs", "repos_url": "https://api.github.com/users/MehmetAzizYirik/repos", "events_url": "https://api.github.com/users/MehmetAzizYirik/events{/privacy}", "received_events_url": "https://api.github.com/users/MehmetAzizYirik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-09-01T14:08:21Z", "updated_at": "2019-06-25T13:42:29Z", "closed_at": "2019-06-25T13:42:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys;\n\nI just tried to extract data by using the URL of the webservices; moreover, I used the requests package however it returned the error \"TypeError: str returned non-string (type SysCallError)\" according to that; I just read the section for the issue at GitHub and upgraded the requests package. However, it returned another error. Before updating the code worked for an hour and stopped and gave the error as I shared \"TypeError: str returned non-string (type SysCallError)\" however right now it does not work; moreover jit just returns the traceback:\n\nTraceback (most recent call last):\nFile \"C:\\Users\\may\\Desktop\\Documents\\BOUN-CSE\\Master Thesis\\Project Code Files\\pubchem\\PubchemMapping.py\", line 35, in \nactivities = new_client.activity.filter(target_chembl_id__in=[target['target_chembl_id'] for target in targets])\nFile \"C:\\Python27\\lib\\site-packages\\chembl_webresource_client\\query_set.py\", line 114, in next\nself.chunk = self.query.get_page()\nFile \"C:\\Python27\\lib\\site-packages\\chembl_webresource_client\\url_query.py\", line 390, in get_page\nres = session.post(self.base_url + '.' + self.frmt, data=data, timeout=self.timeout)\nFile \"C:\\Python27\\lib\\site-packages\\requests\\sessions.py\", line 522, in post\nreturn self.request('POST', url, data=data, json=json, _kwargs)\nFile \"C:\\Python27\\lib\\site-packages\\requests_cache\\core.py\", line 126, in request\n*kwargs\nFile \"C:\\Python27\\lib\\site-packages\\requests\\sessions.py\", line 475, in request\nresp = self.send(prep, *_send_kwargs)\nFile \"C:\\Python27\\lib\\site-packages\\requests_cache\\core.py\", line 97, in send\nresponse, timestamp = self.cache.get_response_and_time(cache_key)\nFile \"C:\\Python27\\lib\\site-packages\\requests_cache\\backends\\base.py\", line 70, in get_response_and_time\nif key not in self.responses:\nFile \"C:\\Python27\\lib_abcoll.py\", line 388, in contains\nself[key]\nFile \"C:\\Python27\\lib\\site-packages\\requests_cache\\backends\\storage\\dbdict.py\", line 163, in getitem\nreturn pickle.loads(bytes(super(DbPickleDict, self).getitem(key)))\nFile \"C:\\Python27\\lib\\copy_reg.py\", line 50, in reconstructor\nobj = base.__new_(cls, state)\nTypeError: ('dict.new(HTTPHeaderDict): HTTPHeaderDict is not a subtype of dict', , (, , {'date': ('date', 'Thu, 01 Sep 2016 08:24:03 GMT'), 'transfer-encoding': ('transfer-encoding', 'chunked'), 'vary': ('vary', 'Accept'), 'server': ('server', 'gunicorn/19.1.1'), 'x-chembl-retrieval-time': ('x-chembl-retrieval-time', '0.00829792022705'), 'connection': ('connection', 'Keep-Alive'), 'cache-control': ('cache-control', 's-maxage=30000000, max-age=30000000'), 'x-chembl-in-cache': ('x-chembl-in-cache', 'True'), 'content-type': ('content-type', 'application/json')}))\n\nCan you help to solve the problem please ?\n\nIn addition; I also upgraded the requests-cache however the code returned the same error. Please show me how to solve the problem.\n\nAll the Best;\nAziz\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/68", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/68/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/68/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/68", "id": 168002759, "node_id": "MDU6SXNzdWUxNjgwMDI3NTk=", "number": 68, "title": "Streaming responses for file backend fails if not already in the cache", "user": {"login": "davidmegginson", "id": 2810060, "node_id": "MDQ6VXNlcjI4MTAwNjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2810060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmegginson", "html_url": "https://github.com/davidmegginson", "followers_url": "https://api.github.com/users/davidmegginson/followers", "following_url": "https://api.github.com/users/davidmegginson/following{/other_user}", "gists_url": "https://api.github.com/users/davidmegginson/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmegginson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmegginson/subscriptions", "organizations_url": "https://api.github.com/users/davidmegginson/orgs", "repos_url": "https://api.github.com/users/davidmegginson/repos", "events_url": "https://api.github.com/users/davidmegginson/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmegginson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-28T02:49:58Z", "updated_at": "2016-08-02T18:23:05Z", "closed_at": "2016-07-30T13:49:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a remote resource is not already in the cache for the file backend, the following will return no content:\n\n```\nresponse = requests.get('http://ourairports.com/countries/CA/PE/airports.csv', stream=True)\n```\n\nOnce it's already cached (and not expired), it returns the proper content.  Here's the full test script (on first run, it will print empty content; on second run, within 60 seconds, it will dump the full remote content).\n\n```\nimport requests, requests_cache\n\n# Use a file backend with 10-second timeout\nrequests_cache.install_cache(\n    '/tmp/test-requests',\n    expire_after=60\n)\n\n# Get a streaming response, and try reading the raw stream\nresponse = requests.get('http://ourairports.com/countries/CA/PE/airports.csv', stream=True)\n\n# Will be empty if not already in the cache\nprint(response.raw.read(-1))\n```\n\n(Python 3.5.1, requests-cache 0.4.12)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/67", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/67/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/67/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/67", "id": 166015422, "node_id": "MDU6SXNzdWUxNjYwMTU0MjI=", "number": 67, "title": "multiprocessing.RLock ?", "user": {"login": "chengguangnan", "id": 861069, "node_id": "MDQ6VXNlcjg2MTA2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/861069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengguangnan", "html_url": "https://github.com/chengguangnan", "followers_url": "https://api.github.com/users/chengguangnan/followers", "following_url": "https://api.github.com/users/chengguangnan/following{/other_user}", "gists_url": "https://api.github.com/users/chengguangnan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengguangnan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengguangnan/subscriptions", "organizations_url": "https://api.github.com/users/chengguangnan/orgs", "repos_url": "https://api.github.com/users/chengguangnan/repos", "events_url": "https://api.github.com/users/chengguangnan/events{/privacy}", "received_events_url": "https://api.github.com/users/chengguangnan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-18T03:59:51Z", "updated_at": "2019-03-13T18:11:00Z", "closed_at": "2017-01-06T14:10:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I see that we are using threading.RLock().\n\nI was spawn requests with joblib multi-process mode and there are duplicated write requests (I think) which produced a locked sqlite database error. \n\nWhat's the best way to handle the problem above? Using `multiprocessing.RLock()`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/66", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/66/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/66/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/66", "id": 165984906, "node_id": "MDU6SXNzdWUxNjU5ODQ5MDY=", "number": 66, "title": "No way to cache only subset of URLs", "user": {"login": "QtRoS", "id": 1700047, "node_id": "MDQ6VXNlcjE3MDAwNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1700047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QtRoS", "html_url": "https://github.com/QtRoS", "followers_url": "https://api.github.com/users/QtRoS/followers", "following_url": "https://api.github.com/users/QtRoS/following{/other_user}", "gists_url": "https://api.github.com/users/QtRoS/gists{/gist_id}", "starred_url": "https://api.github.com/users/QtRoS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QtRoS/subscriptions", "organizations_url": "https://api.github.com/users/QtRoS/orgs", "repos_url": "https://api.github.com/users/QtRoS/repos", "events_url": "https://api.github.com/users/QtRoS/events{/privacy}", "received_events_url": "https://api.github.com/users/QtRoS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-17T16:52:41Z", "updated_at": "2016-07-30T14:15:48Z", "closed_at": "2016-07-30T14:15:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any ability to cache (or do not cache) URLs which match regex?\n\nI am writing Telegram bot which can be used to search for MOOC from multiple sources. I want to cache search requests but do not cache API requests. Can I do this with this library?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/65", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/65/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/65/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/65", "id": 165254274, "node_id": "MDU6SXNzdWUxNjUyNTQyNzQ=", "number": 65, "title": "requests.post()", "user": {"login": "maximedb", "id": 6787714, "node_id": "MDQ6VXNlcjY3ODc3MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/6787714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maximedb", "html_url": "https://github.com/maximedb", "followers_url": "https://api.github.com/users/maximedb/followers", "following_url": "https://api.github.com/users/maximedb/following{/other_user}", "gists_url": "https://api.github.com/users/maximedb/gists{/gist_id}", "starred_url": "https://api.github.com/users/maximedb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maximedb/subscriptions", "organizations_url": "https://api.github.com/users/maximedb/orgs", "repos_url": "https://api.github.com/users/maximedb/repos", "events_url": "https://api.github.com/users/maximedb/events{/privacy}", "received_events_url": "https://api.github.com/users/maximedb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-13T07:24:58Z", "updated_at": "2016-07-30T13:54:33Z", "closed_at": "2016-07-30T13:54:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nFor some reasons when I init the request_cache plugin, the following request fails:\n\n```\nrequests_cache.install_cache(cache_name='seo_cache', backend='sqlite', expire_after=86400)\nrequests.post(url, json=data, headers=headers)\n```\n\nIf I comment the first line, it works great... Any idea on how to fix this ? \n\nThanks!\n\nHere is the error log:\n\n```\n2016-07-13 07:21:12 r = requests.post(URL, json=data, headers=headers)\n2016-07-13 07:21:12   File \"/usr/local/lib/python2.7/dist-packages/requests/api.py\", line 94, in post\n2016-07-13 07:21:12     \n2016-07-13 07:21:12 return request('post', url, data=data, json=json, **kwargs)\n2016-07-13 07:21:12   File \"/usr/local/lib/python2.7/dist-packages/requests/api.py\", line 49, in request\n2016-07-13 07:21:12     \n2016-07-13 07:21:12 return session.request(method=method, url=url, **kwargs)\n2016-07-13 07:21:12 TypeError\n2016-07-13 07:21:12 : \n2016-07-13 07:21:12 request() got an unexpected keyword argument 'json'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/64", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/64/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/64/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/64", "id": 161593410, "node_id": "MDU6SXNzdWUxNjE1OTM0MTA=", "number": 64, "title": "Using mongodb gridfs as a backend?", "user": {"login": "chengguangnan", "id": 861069, "node_id": "MDQ6VXNlcjg2MTA2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/861069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengguangnan", "html_url": "https://github.com/chengguangnan", "followers_url": "https://api.github.com/users/chengguangnan/followers", "following_url": "https://api.github.com/users/chengguangnan/following{/other_user}", "gists_url": "https://api.github.com/users/chengguangnan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengguangnan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengguangnan/subscriptions", "organizations_url": "https://api.github.com/users/chengguangnan/orgs", "repos_url": "https://api.github.com/users/chengguangnan/repos", "events_url": "https://api.github.com/users/chengguangnan/events{/privacy}", "received_events_url": "https://api.github.com/users/chengguangnan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-22T04:51:04Z", "updated_at": "2017-06-03T00:27:38Z", "closed_at": "2017-06-03T00:27:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Mongo GridFS supports documents that are more than 16MB. \r\n\r\nHere are some code snippets. \r\n\r\n```\r\n        from pymongo import MongoClient\r\n        db = MongoClient().gridfs\r\n        fs = gridfs.GridFS(db)\r\n```\r\n\r\n```\r\nfs.put(resp.content, url=doc['url'], status_code=resp.status_code)\r\n```\r\n\r\n```\r\nfs.find_one({'url': doc['url'], 'status_code': 200})\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/63", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/63/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/63/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/63", "id": 149480376, "node_id": "MDU6SXNzdWUxNDk0ODAzNzY=", "number": 63, "title": "module object has no attribute _RawStore", "user": {"login": "vindarel", "id": 3721004, "node_id": "MDQ6VXNlcjM3MjEwMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3721004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vindarel", "html_url": "https://github.com/vindarel", "followers_url": "https://api.github.com/users/vindarel/followers", "following_url": "https://api.github.com/users/vindarel/following{/other_user}", "gists_url": "https://api.github.com/users/vindarel/gists{/gist_id}", "starred_url": "https://api.github.com/users/vindarel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vindarel/subscriptions", "organizations_url": "https://api.github.com/users/vindarel/orgs", "repos_url": "https://api.github.com/users/vindarel/repos", "events_url": "https://api.github.com/users/vindarel/events{/privacy}", "received_events_url": "https://api.github.com/users/vindarel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-19T14:38:11Z", "updated_at": "2016-08-22T12:34:23Z", "closed_at": "2016-07-30T13:52:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi !\nI\u00a0was hit by this issue that I\u00a0solved by deleting my caches :/ I'd like to know if there's a way to avoid that.\nI was refactoring my code, moving a module up to another one. Suddenly when I ran my scripts I got:\n\n```\nFile \"/home/vince/.virtualenvs/abelujo/local/lib/python2.7/site-packages/requests/api.py\", line 50, in request\n    response = session.request(method=method, url=url, **kwargs)\n  File \"/home/vince/.virtualenvs/abelujo/local/lib/python2.7/site-packages/requests_cache/core.py\", line 111, in request\n    hooks, stream, verify, cert)\n  File \"/home/vince/.virtualenvs/abelujo/local/lib/python2.7/site-packages/requests/sessions.py\", line 465, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/home/vince/.virtualenvs/abelujo/local/lib/python2.7/site-packages/requests_cache/core.py\", line 89, in send\n    response, timestamp = self.cache.get_response_and_time(cache_key)\n  File \"/home/vince/.virtualenvs/abelujo/local/lib/python2.7/site-packages/requests_cache/backends/base.py\", line 64, in get_response_and_time\n    if key not in self.responses:\n  File \"/home/vince/.virtualenvs/abelujo/lib/python2.7/_abcoll.py\", line 388, in __contains__\n    self[key]\n  File \"/home/vince/.virtualenvs/abelujo/local/lib/python2.7/site-packages/requests_cache/backends/storage/dbdict.py\", line 171, in __getitem__\n    return pickle.loads(bytes(super(DbPickleDict, self).__getitem__(key)))\nAttributeError: 'module' object has no attribute '_RawStore'\n```\n\nThat problem goes away if I delete my cache databases. It looks like the database had information about a module or about a path and didn't find it back when unpickling an object. Fortunately they're not vital but still, I'd like to keep them. Do you have an idea of why this pb occured, and how I could keep my cached content ?\n\nRegards,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/62", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/62/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/62/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/62", "id": 144294565, "node_id": "MDU6SXNzdWUxNDQyOTQ1NjU=", "number": 62, "title": "Request throttling example is broken in Python 3", "user": {"login": "danvk", "id": 98301, "node_id": "MDQ6VXNlcjk4MzAx", "avatar_url": "https://avatars1.githubusercontent.com/u/98301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danvk", "html_url": "https://github.com/danvk", "followers_url": "https://api.github.com/users/danvk/followers", "following_url": "https://api.github.com/users/danvk/following{/other_user}", "gists_url": "https://api.github.com/users/danvk/gists{/gist_id}", "starred_url": "https://api.github.com/users/danvk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danvk/subscriptions", "organizations_url": "https://api.github.com/users/danvk/orgs", "repos_url": "https://api.github.com/users/danvk/repos", "events_url": "https://api.github.com/users/danvk/events{/privacy}", "received_events_url": "https://api.github.com/users/danvk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-29T15:09:08Z", "updated_at": "2016-03-29T18:48:10Z", "closed_at": "2016-03-29T18:43:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I added `()` to the `print` statement in the throttling example here:\nhttps://requests-cache.readthedocs.org/en/latest/user_guide.html#usage\n\n(see https://gist.github.com/danvk/f8c4d9d5cf9fde627ebb)\n\nI'm getting this error:\n\n```\n$ python cache-issue.py\nTraceback (most recent call last):\n  File \"cache-issue.py\", line 23, in <module>\n    s.get('http://httpbin.org/delay/get')\n  File \"/Users/danvk/.virtualenvs/osm-segments/lib/python3.5/site-packages/requests/sessions.py\", line 480, in get\n    return self.request('GET', url, **kwargs)\n  File \"/Users/danvk/.virtualenvs/osm-segments/lib/python3.5/site-packages/requests_cache/core.py\", line 126, in request\n    **kwargs\n  File \"/Users/danvk/.virtualenvs/osm-segments/lib/python3.5/site-packages/requests/sessions.py\", line 468, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/Users/danvk/.virtualenvs/osm-segments/lib/python3.5/site-packages/requests_cache/core.py\", line 99, in send\n    return send_request_and_cache_response()\n  File \"/Users/danvk/.virtualenvs/osm-segments/lib/python3.5/site-packages/requests_cache/core.py\", line 91, in send_request_and_cache_response\n    response = super(CachedSession, self).send(request, **kwargs)\n  File \"/Users/danvk/.virtualenvs/osm-segments/lib/python3.5/site-packages/requests/sessions.py\", line 582, in send\n    r = dispatch_hook('response', hooks, r, **kwargs)\n  File \"/Users/danvk/.virtualenvs/osm-segments/lib/python3.5/site-packages/requests/hooks.py\", line 31, in dispatch_hook\n    _hook_data = hook(hook_data, **kwargs)\nTypeError: hook() got an unexpected keyword argument 'proxies'\n```\n\nI'm using `requests` 2.9.1 and `requests_cache` 0.4.12.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/61", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/61/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/61/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/61", "id": 141816170, "node_id": "MDU6SXNzdWUxNDE4MTYxNzA=", "number": 61, "title": "Can't create a backend using a backend instance.", "user": {"login": "withrocks", "id": 800390, "node_id": "MDQ6VXNlcjgwMDM5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/800390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/withrocks", "html_url": "https://github.com/withrocks", "followers_url": "https://api.github.com/users/withrocks/followers", "following_url": "https://api.github.com/users/withrocks/following{/other_user}", "gists_url": "https://api.github.com/users/withrocks/gists{/gist_id}", "starred_url": "https://api.github.com/users/withrocks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/withrocks/subscriptions", "organizations_url": "https://api.github.com/users/withrocks/orgs", "repos_url": "https://api.github.com/users/withrocks/repos", "events_url": "https://api.github.com/users/withrocks/events{/privacy}", "received_events_url": "https://api.github.com/users/withrocks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-18T09:34:43Z", "updated_at": "2016-03-19T11:33:36Z", "closed_at": "2016-03-19T07:42:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the documentation, I should be able to pass an instance of a custom backend to `install_cache` (http://requests-cache.readthedocs.org/en/latest/user_guide.html#persistence).\n\nHowever, `install_cache` calls `backends.create_backend` which only seems to support the registered names, so a `ValueError` is thrown:\n\n```\ndef create_backend(backend_name, cache_name, options):\n    if backend_name is None:\n        backend_name = _get_default_backend_name()\n    try:\n        return registry[backend_name](cache_name, **options)\n    except KeyError:\n        raise ValueError('Unsupported backend \"%s\" try one of: %s' %\n                         (backend_name, ', '.join(registry.keys())))\n```\n\nAm I missing something?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/59", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/59/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/59/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/59", "id": 127647647, "node_id": "MDU6SXNzdWUxMjc2NDc2NDc=", "number": 59, "title": "Make redislite optional", "user": {"login": "ldng", "id": 781064, "node_id": "MDQ6VXNlcjc4MTA2NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/781064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldng", "html_url": "https://github.com/ldng", "followers_url": "https://api.github.com/users/ldng/followers", "following_url": "https://api.github.com/users/ldng/following{/other_user}", "gists_url": "https://api.github.com/users/ldng/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldng/subscriptions", "organizations_url": "https://api.github.com/users/ldng/orgs", "repos_url": "https://api.github.com/users/ldng/repos", "events_url": "https://api.github.com/users/ldng/events{/privacy}", "received_events_url": "https://api.github.com/users/ldng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-20T10:09:47Z", "updated_at": "2016-07-30T13:51:57Z", "closed_at": "2016-07-30T13:51:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nwould it be possible to make the dependency on redislite optional ?\nIt be can be difficult to compile on some platforms.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/58", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/58/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/58/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/58", "id": 121968026, "node_id": "MDU6SXNzdWUxMjE5NjgwMjY=", "number": 58, "title": "What happens to expired items?", "user": {"login": "toddpi314", "id": 251627, "node_id": "MDQ6VXNlcjI1MTYyNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/251627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toddpi314", "html_url": "https://github.com/toddpi314", "followers_url": "https://api.github.com/users/toddpi314/followers", "following_url": "https://api.github.com/users/toddpi314/following{/other_user}", "gists_url": "https://api.github.com/users/toddpi314/gists{/gist_id}", "starred_url": "https://api.github.com/users/toddpi314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toddpi314/subscriptions", "organizations_url": "https://api.github.com/users/toddpi314/orgs", "repos_url": "https://api.github.com/users/toddpi314/repos", "events_url": "https://api.github.com/users/toddpi314/events{/privacy}", "received_events_url": "https://api.github.com/users/toddpi314/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-14T03:27:06Z", "updated_at": "2016-03-19T07:57:29Z", "closed_at": "2016-03-19T07:57:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Great module. Works as expected and is very performant.\n\nWhen using with Sqlite, when a record expires, does the module manage purging those records in the underlying data-store?\n\nif so, is there an API to some details of when we should expect the cycles to be spent to do that?\nIf not, it might be useful to post some code samples to the docs to help people manage the expired items, since the store sizes can get out of control pretty quickly with expired items.\n\nThanks!\nTodd\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/56", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/56/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/56/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/56", "id": 119600153, "node_id": "MDU6SXNzdWUxMTk2MDAxNTM=", "number": 56, "title": "TypeError: HTTPHeaderDict is not a subtype of dict", "user": {"login": "tfmorris", "id": 82178, "node_id": "MDQ6VXNlcjgyMTc4", "avatar_url": "https://avatars2.githubusercontent.com/u/82178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfmorris", "html_url": "https://github.com/tfmorris", "followers_url": "https://api.github.com/users/tfmorris/followers", "following_url": "https://api.github.com/users/tfmorris/following{/other_user}", "gists_url": "https://api.github.com/users/tfmorris/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfmorris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfmorris/subscriptions", "organizations_url": "https://api.github.com/users/tfmorris/orgs", "repos_url": "https://api.github.com/users/tfmorris/repos", "events_url": "https://api.github.com/users/tfmorris/events{/privacy}", "received_events_url": "https://api.github.com/users/tfmorris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-11-30T22:55:24Z", "updated_at": "2015-12-14T17:43:17Z", "closed_at": "2015-12-14T17:43:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that some time in the last couple of months something changed within the Python/Requests/Requests-Cache stack which caused this error to be thrown for all of my apps which use requests-cache and which had caches which were created before the change.\n\nDeleting all the caches caused the problems to go away, but cleaner handling would be nice.  If the cache can't be made robust to changes to the underlying stack, perhaps at least a better error message could be given.\n\nAt a glance it appears that the problem is likely related to this PR & commit for urllib3 which changed the superclass of `HTTPHeaderDict` from `dict` to `MutableMapping`: \n  https://github.com/shazow/urllib3/pull/679\n  https://github.com/shazow/urllib3/commit/64adf9f9df6a4e76f921a13ec81744af7438c4b2\nbut it's not clear to me if the breaking change that they made was to a public API and whether it was avoidable, so I'm just going to dump my report here and let the two projects hash it out.\n\n```\n  File \"/Users/tfmorris/anaconda/lib/python2.7/site-packages/requests/api.py\", line 69, in get\n    return request('get', url, params=params, **kwargs)\n  File \"/Users/tfmorris/anaconda/lib/python2.7/site-packages/requests/api.py\", line 50, in request\n    response = session.request(method=method, url=url, **kwargs)\n  File \"/Users/tfmorris/anaconda/lib/python2.7/site-packages/requests_cache/core.py\", line 128, in request\n    **kwargs\n  File \"/Users/tfmorris/anaconda/lib/python2.7/site-packages/requests/sessions.py\", line 468, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/Users/tfmorris/anaconda/lib/python2.7/site-packages/requests_cache/core.py\", line 99, in send\n    response, timestamp = self.cache.get_response_and_time(cache_key)\n  File \"/Users/tfmorris/anaconda/lib/python2.7/site-packages/requests_cache/backends/base.py\", line 69, in get_response_and_time\n    if key not in self.responses:\n  File \"/Users/tfmorris/anaconda/lib/python2.7/_abcoll.py\", line 388, in __contains__\n    self[key]\n  File \"/Users/tfmorris/anaconda/lib/python2.7/site-packages/requests_cache/backends/storage/dbdict.py\", line 163, in __getitem__\n    return pickle.loads(bytes(super(DbPickleDict, self).__getitem__(key)))\n  File \"/Users/tfmorris/anaconda/lib/python2.7/copy_reg.py\", line 50, in _reconstructor\n    obj = base.__new__(cls, state)\nTypeError: ('dict.__new__(HTTPHeaderDict): HTTPHeaderDict is not a subtype of dict', <function _reconstructor at 0x10073da28>, (<class 'requests.packages.urllib3._collections.HTTPHeaderDict'>, <type 'dict'>, {'access-control-max-age': ('Access-Control-Max-Age', '86400'), 'transfer-encoding': ('Transfer-Encoding', 'chunked'), 'access-control-allow-method': ('Access-Control-Allow-Method', 'GET, OPTIONS'), 'server': ('Server', 'nginx/1.1.19'), 'x-ol-stats': ('X-OL-Stats', '\"IB 1 0.005 TT 0 0.005\"'), 'connection': ('Connection', 'keep-alive'), 'date': ('Date', 'Thu, 03 Sep 2015 23:36:25 GMT'), 'access-control-allow-origin': ('Access-Control-Allow-Origin', '*'), 'content-type': ('Content-Type', 'application/json')}))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/54", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/54/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/54/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/54", "id": 107771059, "node_id": "MDU6SXNzdWUxMDc3NzEwNTk=", "number": 54, "title": "doesn't work with requests 2.7.0", "user": {"login": "walidsa3d", "id": 821918, "node_id": "MDQ6VXNlcjgyMTkxOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/821918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walidsa3d", "html_url": "https://github.com/walidsa3d", "followers_url": "https://api.github.com/users/walidsa3d/followers", "following_url": "https://api.github.com/users/walidsa3d/following{/other_user}", "gists_url": "https://api.github.com/users/walidsa3d/gists{/gist_id}", "starred_url": "https://api.github.com/users/walidsa3d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walidsa3d/subscriptions", "organizations_url": "https://api.github.com/users/walidsa3d/orgs", "repos_url": "https://api.github.com/users/walidsa3d/repos", "events_url": "https://api.github.com/users/walidsa3d/events{/privacy}", "received_events_url": "https://api.github.com/users/walidsa3d/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-22T18:21:46Z", "updated_at": "2015-09-22T19:13:23Z", "closed_at": "2015-09-22T19:13:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting errors when I use requests-cache with the newest version of requests (2.7.0)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/53", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/53/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/53/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/53", "id": 107324930, "node_id": "MDU6SXNzdWUxMDczMjQ5MzA=", "number": 53, "title": "`pymongo (3.0.3)` does not have `Connection` class", "user": {"login": "char101", "id": 71255, "node_id": "MDQ6VXNlcjcxMjU1", "avatar_url": "https://avatars3.githubusercontent.com/u/71255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/char101", "html_url": "https://github.com/char101", "followers_url": "https://api.github.com/users/char101/followers", "following_url": "https://api.github.com/users/char101/following{/other_user}", "gists_url": "https://api.github.com/users/char101/gists{/gist_id}", "starred_url": "https://api.github.com/users/char101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/char101/subscriptions", "organizations_url": "https://api.github.com/users/char101/orgs", "repos_url": "https://api.github.com/users/char101/repos", "events_url": "https://api.github.com/users/char101/events{/privacy}", "received_events_url": "https://api.github.com/users/char101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 3068697, "node_id": "MDU6TGFiZWwzMDY4Njk3", "url": "https://api.github.com/repos/reclosedev/requests-cache/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-09-19T11:00:46Z", "updated_at": "2017-03-31T03:11:16Z", "closed_at": "2016-08-18T19:27:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nPython 3.4.3 (default, Mar 25 2015, 17:13:50) \n[GCC 4.9.2 20150304 (prerelease)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import requests_cache.backends.mongo\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/root/projects/citation/env/lib/python3.4/site-packages/requests_cache/backends/mongo.py\", line 10, in <module>\n    from .storage.mongodict import MongoDict, MongoPickleDict\n  File \"/root/projects/citation/env/lib/python3.4/site-packages/requests_cache/backends/storage/mongodict.py\", line 15, in <module>\n    from pymongo import Connection\nImportError: cannot import name 'Connection'\n>>> import pymongo\n>>> dir(pymongo)\n['ALL', 'ASCENDING', 'CursorType', 'DESCENDING', 'DeleteMany', 'DeleteOne', 'GEO2D', 'GEOHAYSTACK', 'GEOSPHERE', 'HASHED', 'IndexModel', 'InsertOne', 'MAX_SUPPORTED_WIRE_VERSION', 'MIN_SUPPORTED_WIRE_VERSION', 'MongoClient', 'MongoReplicaSetClient', 'OFF', 'ReadPreference', 'ReplaceOne', 'ReturnDocument', 'SLOW_ONLY', 'TEXT', 'UpdateMany', 'UpdateOne', 'WriteConcern', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', '_cmessage', 'auth', 'bulk', 'client_options', 'collection', 'command_cursor', 'common', 'cursor', 'cursor_manager', 'database', 'errors', 'get_version_string', 'has_c', 'helpers', 'ismaster', 'message', 'mongo_client', 'mongo_replica_set_client', 'monitor', 'monotonic', 'network', 'operations', 'periodic_executor', 'pool', 'read_preferences', 'response', 'results', 'server', 'server_description', 'server_selectors', 'server_type', 'settings', 'son_manipulator', 'ssl_support', 'thread_util', 'topology', 'topology_description', 'uri_parser', 'version', 'version_tuple', 'write_concern']\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/51", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/51/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/51/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/51", "id": 72765955, "node_id": "MDU6SXNzdWU3Mjc2NTk1NQ==", "number": 51, "title": "TypeError: a class that defines __slots__ without defining __getstate__ cannot be pickled", "user": {"login": "scls19fr", "id": 109167, "node_id": "MDQ6VXNlcjEwOTE2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scls19fr", "html_url": "https://github.com/scls19fr", "followers_url": "https://api.github.com/users/scls19fr/followers", "following_url": "https://api.github.com/users/scls19fr/following{/other_user}", "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}", "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions", "organizations_url": "https://api.github.com/users/scls19fr/orgs", "repos_url": "https://api.github.com/users/scls19fr/repos", "events_url": "https://api.github.com/users/scls19fr/events{/privacy}", "received_events_url": "https://api.github.com/users/scls19fr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-03T07:38:29Z", "updated_at": "2015-05-03T09:09:46Z", "closed_at": "2015-05-03T09:09:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI get this strange error\n`TypeError: a class that defines __slots__ without defining __getstate__ cannot be pickled`\n\n```\nimport requests\nimport requests_cache\n\nfilename_cache = \"cache\"\nrequests_cache.install_cache(filename_cache, backend='sqlite', expire_after=60) # expiration seconds\nurl = \"http://www.google.fr\"\nresponse = requests.get(url)\nprint(response.text)\n```\n\nAny idea ?\n\nKind regards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/49", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/49/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/49/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/49", "id": 67908132, "node_id": "MDU6SXNzdWU2NzkwODEzMg==", "number": 49, "title": "simplify HTTPBIN_URL definition", "user": {"login": "sandrotosi", "id": 346648, "node_id": "MDQ6VXNlcjM0NjY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/346648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandrotosi", "html_url": "https://github.com/sandrotosi", "followers_url": "https://api.github.com/users/sandrotosi/followers", "following_url": "https://api.github.com/users/sandrotosi/following{/other_user}", "gists_url": "https://api.github.com/users/sandrotosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandrotosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandrotosi/subscriptions", "organizations_url": "https://api.github.com/users/sandrotosi/orgs", "repos_url": "https://api.github.com/users/sandrotosi/repos", "events_url": "https://api.github.com/users/sandrotosi/events{/privacy}", "received_events_url": "https://api.github.com/users/sandrotosi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-12T12:21:24Z", "updated_at": "2016-07-30T13:41:19Z", "closed_at": "2016-07-30T13:41:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nin tests/test_cache.py this can be applied to simplify HTTPBIN_URL definition:\n\n```\n-if 'HTTPBIN_URL' not in os.environ:\n-    os.environ['HTTPBIN_URL'] = 'http://httpbin.org/'\n-\n-HTTPBIN_URL = os.environ.get('HTTPBIN_URL')\n+HTTPBIN_URL = os.getenv('HTTPBIN_URL', 'http://httpbin.org/')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/48", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/48/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/48/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/48", "id": 67904132, "node_id": "MDU6SXNzdWU2NzkwNDEzMg==", "number": 48, "title": "test suite leaves temp cache file behind", "user": {"login": "sandrotosi", "id": 346648, "node_id": "MDQ6VXNlcjM0NjY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/346648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandrotosi", "html_url": "https://github.com/sandrotosi", "followers_url": "https://api.github.com/users/sandrotosi/followers", "following_url": "https://api.github.com/users/sandrotosi/following{/other_user}", "gists_url": "https://api.github.com/users/sandrotosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandrotosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandrotosi/subscriptions", "organizations_url": "https://api.github.com/users/sandrotosi/orgs", "repos_url": "https://api.github.com/users/sandrotosi/repos", "events_url": "https://api.github.com/users/sandrotosi/events{/privacy}", "received_events_url": "https://api.github.com/users/sandrotosi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-12T11:41:18Z", "updated_at": "2016-07-30T13:50:41Z", "closed_at": "2016-07-30T13:50:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nafter running the test suite, the file requests_cache_test.sqlite is not deleted\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/47", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/47/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/47/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/47", "id": 67900157, "node_id": "MDU6SXNzdWU2NzkwMDE1Nw==", "number": 47, "title": "testing redis and mongo", "user": {"login": "sandrotosi", "id": 346648, "node_id": "MDQ6VXNlcjM0NjY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/346648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandrotosi", "html_url": "https://github.com/sandrotosi", "followers_url": "https://api.github.com/users/sandrotosi/followers", "following_url": "https://api.github.com/users/sandrotosi/following{/other_user}", "gists_url": "https://api.github.com/users/sandrotosi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandrotosi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandrotosi/subscriptions", "organizations_url": "https://api.github.com/users/sandrotosi/orgs", "repos_url": "https://api.github.com/users/sandrotosi/repos", "events_url": "https://api.github.com/users/sandrotosi/events{/privacy}", "received_events_url": "https://api.github.com/users/sandrotosi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-12T10:50:44Z", "updated_at": "2016-03-19T07:56:22Z", "closed_at": "2016-03-19T07:56:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nit seems the tests for redis and mongo just try to access those 2 application on their default address/port (as no specific connection is specified nor it's possible to do so). I think the best way is to create and ad-hoc instance for both redis and mongo (just for the tests) and destroy it right after they are finished - what do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/46", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/46/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/46/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/46", "id": 65268122, "node_id": "MDU6SXNzdWU2NTI2ODEyMg==", "number": 46, "title": "Cache images", "user": {"login": "toxinu", "id": 293337, "node_id": "MDQ6VXNlcjI5MzMzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/293337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toxinu", "html_url": "https://github.com/toxinu", "followers_url": "https://api.github.com/users/toxinu/followers", "following_url": "https://api.github.com/users/toxinu/following{/other_user}", "gists_url": "https://api.github.com/users/toxinu/gists{/gist_id}", "starred_url": "https://api.github.com/users/toxinu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toxinu/subscriptions", "organizations_url": "https://api.github.com/users/toxinu/orgs", "repos_url": "https://api.github.com/users/toxinu/repos", "events_url": "https://api.github.com/users/toxinu/events{/privacy}", "received_events_url": "https://api.github.com/users/toxinu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-30T18:04:23Z", "updated_at": "2015-05-11T11:40:21Z", "closed_at": "2015-05-11T11:40:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIs it ok to cache requests that return images ?\nOr sqlite will just explose when it will have 50k cached requests ?\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/45", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/45/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/45/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/45", "id": 64723987, "node_id": "MDU6SXNzdWU2NDcyMzk4Nw==", "number": 45, "title": "Make it compatible with requests_future", "user": {"login": "gtnx", "id": 1455367, "node_id": "MDQ6VXNlcjE0NTUzNjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1455367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gtnx", "html_url": "https://github.com/gtnx", "followers_url": "https://api.github.com/users/gtnx/followers", "following_url": "https://api.github.com/users/gtnx/following{/other_user}", "gists_url": "https://api.github.com/users/gtnx/gists{/gist_id}", "starred_url": "https://api.github.com/users/gtnx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gtnx/subscriptions", "organizations_url": "https://api.github.com/users/gtnx/orgs", "repos_url": "https://api.github.com/users/gtnx/repos", "events_url": "https://api.github.com/users/gtnx/events{/privacy}", "received_events_url": "https://api.github.com/users/gtnx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-27T09:09:42Z", "updated_at": "2015-03-29T17:19:51Z", "closed_at": "2015-03-29T17:19:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/ross/requests-futures allows you to do http requests asynchronously. It would be nice to handle the http calls made with this library\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/44", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/44/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/44/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/44", "id": 60282690, "node_id": "MDU6SXNzdWU2MDI4MjY5MA==", "number": 44, "title": "Ignore some parameters", "user": {"login": "themiurgo", "id": 920728, "node_id": "MDQ6VXNlcjkyMDcyOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/920728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/themiurgo", "html_url": "https://github.com/themiurgo", "followers_url": "https://api.github.com/users/themiurgo/followers", "following_url": "https://api.github.com/users/themiurgo/following{/other_user}", "gists_url": "https://api.github.com/users/themiurgo/gists{/gist_id}", "starred_url": "https://api.github.com/users/themiurgo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/themiurgo/subscriptions", "organizations_url": "https://api.github.com/users/themiurgo/orgs", "repos_url": "https://api.github.com/users/themiurgo/repos", "events_url": "https://api.github.com/users/themiurgo/events{/privacy}", "received_events_url": "https://api.github.com/users/themiurgo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-08T23:29:57Z", "updated_at": "2016-03-19T07:55:40Z", "closed_at": "2016-03-19T07:55:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In my project I need a cache that ignores some parameters and hits even if those are different from a previous request. In my specific case, the parameter to be ignored is an api_key of an external service (requests with different api_keys return the same answer).\n\nI am forking and adding this feature. Let me know if you'd like to see this upstream and I'll make a pull-request.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/41", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/41/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/41/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/41", "id": 55429691, "node_id": "MDU6SXNzdWU1NTQyOTY5MQ==", "number": 41, "title": "expire_after parameter, Timestamp and Python 3 (vs Py2)", "user": {"login": "femtotrader", "id": 5049737, "node_id": "MDQ6VXNlcjUwNDk3Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/femtotrader", "html_url": "https://github.com/femtotrader", "followers_url": "https://api.github.com/users/femtotrader/followers", "following_url": "https://api.github.com/users/femtotrader/following{/other_user}", "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}", "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions", "organizations_url": "https://api.github.com/users/femtotrader/orgs", "repos_url": "https://api.github.com/users/femtotrader/repos", "events_url": "https://api.github.com/users/femtotrader/events{/privacy}", "received_events_url": "https://api.github.com/users/femtotrader/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-25T20:50:39Z", "updated_at": "2015-01-25T20:54:46Z", "closed_at": "2015-01-25T20:54:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\n\nI noticed something interesting but I can't say if it's a `Pandas` bug, a `Numpy` bug (about `timedelta64`) or a `requests-cache` bug:\n\n```\nimport pandas as pd\ntd=pd.to_timedelta('00:00:15')\nimport requests_cache\nsession = requests_cache.CachedSession(cache_name='cache', expire_after=td)\n```\n\nworks fine with Python 2 but with Python 3, it raises :\n\n```\nTypeError: unsupported type for timedelta seconds component: numpy.timedelta64\n```\n\nsee https://github.com/pydata/pandas/issues/9353\n\nKind regards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/40", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/40/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/40/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/40", "id": 54846724, "node_id": "MDU6SXNzdWU1NDg0NjcyNA==", "number": 40, "title": "Do not invalidate cache if update fails", "user": {"login": "sharkone", "id": 324894, "node_id": "MDQ6VXNlcjMyNDg5NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/324894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharkone", "html_url": "https://github.com/sharkone", "followers_url": "https://api.github.com/users/sharkone/followers", "following_url": "https://api.github.com/users/sharkone/following{/other_user}", "gists_url": "https://api.github.com/users/sharkone/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharkone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharkone/subscriptions", "organizations_url": "https://api.github.com/users/sharkone/orgs", "repos_url": "https://api.github.com/users/sharkone/repos", "events_url": "https://api.github.com/users/sharkone/events{/privacy}", "received_events_url": "https://api.github.com/users/sharkone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-01-20T05:55:56Z", "updated_at": "2016-03-19T07:54:27Z", "closed_at": "2016-03-19T07:54:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI started using your great library and had an idea. Right now it seems that when the cache of a request is found expired, we immediately delete it and try to update it right away, but this could eventually fail, leaving us with no data at all. Would it be possible to only delete the existing cache if the update is successful? This way we could still rely on older data.\n\nLooking at the code in core.py lines 103-104, this looks like a trivial change. This behavior could even be optional.\n\nWhat do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/39", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/39/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/39/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/39", "id": 54626609, "node_id": "MDU6SXNzdWU1NDYyNjYwOQ==", "number": 39, "title": "Add __repr__ (and/or __str__) method", "user": {"login": "femtotrader", "id": 5049737, "node_id": "MDQ6VXNlcjUwNDk3Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/femtotrader", "html_url": "https://github.com/femtotrader", "followers_url": "https://api.github.com/users/femtotrader/followers", "following_url": "https://api.github.com/users/femtotrader/following{/other_user}", "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}", "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions", "organizations_url": "https://api.github.com/users/femtotrader/orgs", "repos_url": "https://api.github.com/users/femtotrader/repos", "events_url": "https://api.github.com/users/femtotrader/events{/privacy}", "received_events_url": "https://api.github.com/users/femtotrader/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-16T21:23:07Z", "updated_at": "2015-01-17T09:14:19Z", "closed_at": "2015-01-17T09:07:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\n\nit will be nice to provide a `__repr__` (and/or `__str__`) method (at least for `CachedSession`)\nfor example it should display expire_after, backend, cache_name in a \"human\" way.\n\nit will help when dealing with requests-cache in IPython notebooks\n\nKind regards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/35", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/35/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/35/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/35", "id": 51894082, "node_id": "MDU6SXNzdWU1MTg5NDA4Mg==", "number": 35, "title": "expire_after parameter should also accept datetime.timedelta", "user": {"login": "femtotrader", "id": 5049737, "node_id": "MDQ6VXNlcjUwNDk3Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/femtotrader", "html_url": "https://github.com/femtotrader", "followers_url": "https://api.github.com/users/femtotrader/followers", "following_url": "https://api.github.com/users/femtotrader/following{/other_user}", "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}", "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions", "organizations_url": "https://api.github.com/users/femtotrader/orgs", "repos_url": "https://api.github.com/users/femtotrader/repos", "events_url": "https://api.github.com/users/femtotrader/events{/privacy}", "received_events_url": "https://api.github.com/users/femtotrader/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-13T17:35:32Z", "updated_at": "2015-01-17T09:34:19Z", "closed_at": "2015-01-17T09:16:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\n\nit will be nice if `expire_after` parameter could also accept `datetime.timedelta`\n(instead of seconds).\n\n```\nimport requests\nimport requests_cache\nimport datetime\nrequests_cache.install_cache('cache', backend='sqlite', expire_after=datetime.timedelta(hours=1))\nrequest.get('http://www.google.fr')\nrequest.get('http://www.google.fr')\n```\n\nYou should modify `core.py`\n\n```\n    if self._cache_expire_after is not None:\n        difference = datetime.utcnow() - timestamp\n        if difference > timedelta(seconds=self._cache_expire_after):\n            self.cache.delete(cache_key)\n            return send_request_and_cache_response()\n```\n\nto\n\n```\n    if self._cache_expire_after is not None:\n        difference = datetime.utcnow() - timestamp\n        if difference > self._cache_expire_after:\n            self.cache.delete(cache_key)\n            return send_request_and_cache_response()\n```\n\nassuming (that `self._cache_expire_after` is a `timedelta`)\n\nand \n\n```\nclass CachedSession(OriginalSession):\n    def __init__(self, ...):\n        ...\n        self._cache_expire_after = expire_after\n        ...\n```\n\nto\n\n```\nclass CachedSession(OriginalSession):\n    def __init__(self, ...):\n        ...\n        try:\n            self._cache_expire_after = timedelta(seconds=expire_after)\n        except:\n            self._cache_expire_after = expire_after\n        ...\n```\n\nKind regards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/33", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/33/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/33/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/33", "id": 51785886, "node_id": "MDU6SXNzdWU1MTc4NTg4Ng==", "number": 33, "title": "AttributeError: '_Store' object has no attribute 'read' when stream argument is passed to get", "user": {"login": "femtotrader", "id": 5049737, "node_id": "MDQ6VXNlcjUwNDk3Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/femtotrader", "html_url": "https://github.com/femtotrader", "followers_url": "https://api.github.com/users/femtotrader/followers", "following_url": "https://api.github.com/users/femtotrader/following{/other_user}", "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}", "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions", "organizations_url": "https://api.github.com/users/femtotrader/orgs", "repos_url": "https://api.github.com/users/femtotrader/repos", "events_url": "https://api.github.com/users/femtotrader/events{/privacy}", "received_events_url": "https://api.github.com/users/femtotrader/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-12T09:29:40Z", "updated_at": "2015-01-17T09:16:43Z", "closed_at": "2015-01-17T09:16:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\n\nRun this code 2 times\n\n```\nimport requests\nimport requests_cache\n\nrequests_cache.install_cache('cache', backend='sqlite', expire_after=60*5)\n\nresponse = requests.get('http://finance.yahoo.com/d/quotes.csv?s=AAPL+F&f=l1srs7t1p2', stream=True)\n\nfor line in response.iter_lines():\n    print(line)\n```\n\nIt will run fine at first try but it will raise `AttributeError: '_Store' object has no attribute 'read'`\n\nKind regards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/32", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/32/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/32/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/32", "id": 51441671, "node_id": "MDU6SXNzdWU1MTQ0MTY3MQ==", "number": 32, "title": "Choosing home folder for cache", "user": {"login": "salahsheikh", "id": 6253904, "node_id": "MDQ6VXNlcjYyNTM5MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6253904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salahsheikh", "html_url": "https://github.com/salahsheikh", "followers_url": "https://api.github.com/users/salahsheikh/followers", "following_url": "https://api.github.com/users/salahsheikh/following{/other_user}", "gists_url": "https://api.github.com/users/salahsheikh/gists{/gist_id}", "starred_url": "https://api.github.com/users/salahsheikh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salahsheikh/subscriptions", "organizations_url": "https://api.github.com/users/salahsheikh/orgs", "repos_url": "https://api.github.com/users/salahsheikh/repos", "events_url": "https://api.github.com/users/salahsheikh/events{/privacy}", "received_events_url": "https://api.github.com/users/salahsheikh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-09T15:37:52Z", "updated_at": "2014-12-10T16:08:08Z", "closed_at": "2014-12-10T16:08:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there!!\n\nThis isn't much of an issue as I am making do by simply giving the cache files unique names, but I am working on a server that manages sessions for multiple uses and so I'd like to store the cache files in their own user directories. I wonder if this is manageable. \n\nedit: I'm using sqlite\n\nThank you\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/31", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/31/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/31/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/31", "id": 51154962, "node_id": "MDU6SXNzdWU1MTE1NDk2Mg==", "number": 31, "title": "Incompatible with requests > 2.4.1 due to new json param", "user": {"login": "guykisel", "id": 6760519, "node_id": "MDQ6VXNlcjY3NjA1MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6760519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guykisel", "html_url": "https://github.com/guykisel", "followers_url": "https://api.github.com/users/guykisel/followers", "following_url": "https://api.github.com/users/guykisel/following{/other_user}", "gists_url": "https://api.github.com/users/guykisel/gists{/gist_id}", "starred_url": "https://api.github.com/users/guykisel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guykisel/subscriptions", "organizations_url": "https://api.github.com/users/guykisel/orgs", "repos_url": "https://api.github.com/users/guykisel/repos", "events_url": "https://api.github.com/users/guykisel/events{/privacy}", "received_events_url": "https://api.github.com/users/guykisel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-05T22:42:58Z", "updated_at": "2014-12-06T07:50:09Z", "closed_at": "2014-12-06T07:44:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "This PR seems to have broken compatibility - https://github.com/kennethreitz/requests/pull/2258\n\n```\n  File \"/Users/gkisel/.virtualenvs/my_venv/lib/python2.7/site-packages/requests/api.py\", line 99, in post\n    return request('post', url, data=data, json=json, **kwargs)\n  File \"/Users/gkisel/.virtualenvs/my_venv/lib/python2.7/site-packages/requests/api.py\", line 49, in request\n    response = session.request(method=method, url=url, **kwargs)\nTypeError: request() got an unexpected keyword argument 'json'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/29", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/29/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/29/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/29", "id": 45618058, "node_id": "MDU6SXNzdWU0NTYxODA1OA==", "number": 29, "title": "Caching a query ignoring params order", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-13T08:08:31Z", "updated_at": "2014-11-07T17:48:55Z", "closed_at": "2014-11-07T17:48:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, the following query has to be cached twice due to python's non-deterministic dict ordering: `requests.get(\"http://example.com/\", params={\"max\": 10, \"start\": 0})`\n\nHow can I get around this in requests-cache? I have very large queries with half a dozen params and I'm doing hundreds of them; every time I run my tests again, everything gets cached again and the db contains massive duplicated data.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/28", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/28/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/28/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/28", "id": 44331010, "node_id": "MDU6SXNzdWU0NDMzMTAxMA==", "number": 28, "title": "Monkey patched session giving other requests wrappers heartache", "user": {"login": "jharmn", "id": 1305160, "node_id": "MDQ6VXNlcjEzMDUxNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1305160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jharmn", "html_url": "https://github.com/jharmn", "followers_url": "https://api.github.com/users/jharmn/followers", "following_url": "https://api.github.com/users/jharmn/following{/other_user}", "gists_url": "https://api.github.com/users/jharmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jharmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jharmn/subscriptions", "organizations_url": "https://api.github.com/users/jharmn/orgs", "repos_url": "https://api.github.com/users/jharmn/repos", "events_url": "https://api.github.com/users/jharmn/events{/privacy}", "received_events_url": "https://api.github.com/users/jharmn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-09-29T18:18:14Z", "updated_at": "2014-09-29T20:58:55Z", "closed_at": "2014-09-29T20:58:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I detailed this issue on the Rauth repo, which was the specific issue I had. It seems that something with the monkey patching is breaking compatibility with other libraries which leverage requests.\nhttps://github.com/litl/rauth/issues/170\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/27", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/27/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/27/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/27", "id": 41480923, "node_id": "MDU6SXNzdWU0MTQ4MDkyMw==", "number": 27, "title": "Feature request: ability to distinguish between cached and not cached requests", "user": {"login": "mnowotka", "id": 837119, "node_id": "MDQ6VXNlcjgzNzExOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/837119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mnowotka", "html_url": "https://github.com/mnowotka", "followers_url": "https://api.github.com/users/mnowotka/followers", "following_url": "https://api.github.com/users/mnowotka/following{/other_user}", "gists_url": "https://api.github.com/users/mnowotka/gists{/gist_id}", "starred_url": "https://api.github.com/users/mnowotka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mnowotka/subscriptions", "organizations_url": "https://api.github.com/users/mnowotka/orgs", "repos_url": "https://api.github.com/users/mnowotka/repos", "events_url": "https://api.github.com/users/mnowotka/events{/privacy}", "received_events_url": "https://api.github.com/users/mnowotka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-29T08:37:39Z", "updated_at": "2014-08-29T20:05:32Z", "closed_at": "2014-08-29T20:05:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to have some kind of debug mode in which requests_cache will add some special header ('X-From-Cache' ?) indicating if result of this request was taken from cache or directly from network.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/26", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/26/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/26/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/26", "id": 40975873, "node_id": "MDU6SXNzdWU0MDk3NTg3Mw==", "number": 26, "title": "No caching of 3xx responses", "user": {"login": "gwillem", "id": 1145479, "node_id": "MDQ6VXNlcjExNDU0Nzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1145479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwillem", "html_url": "https://github.com/gwillem", "followers_url": "https://api.github.com/users/gwillem/followers", "following_url": "https://api.github.com/users/gwillem/following{/other_user}", "gists_url": "https://api.github.com/users/gwillem/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwillem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwillem/subscriptions", "organizations_url": "https://api.github.com/users/gwillem/orgs", "repos_url": "https://api.github.com/users/gwillem/repos", "events_url": "https://api.github.com/users/gwillem/events{/privacy}", "received_events_url": "https://api.github.com/users/gwillem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-23T13:42:17Z", "updated_at": "2014-11-07T17:49:35Z", "closed_at": "2014-11-07T17:49:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi & thanks for making requests-cache! I noticed that 3xx are not cached*, probably because they are handled internally by the requests module. Haven't looked into it due to lack of time, will possibly do so later. \n- Even though installed_cache is called with allowable_codes=(200,403,404,301,302,303,401,500,503)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/24", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/24/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/24/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/24", "id": 38869246, "node_id": "MDU6SXNzdWUzODg2OTI0Ng==", "number": 24, "title": "No expiry date on requests and no access/update times in the DB", "user": {"login": "iwonbigbro", "id": 4006083, "node_id": "MDQ6VXNlcjQwMDYwODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4006083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iwonbigbro", "html_url": "https://github.com/iwonbigbro", "followers_url": "https://api.github.com/users/iwonbigbro/followers", "following_url": "https://api.github.com/users/iwonbigbro/following{/other_user}", "gists_url": "https://api.github.com/users/iwonbigbro/gists{/gist_id}", "starred_url": "https://api.github.com/users/iwonbigbro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iwonbigbro/subscriptions", "organizations_url": "https://api.github.com/users/iwonbigbro/orgs", "repos_url": "https://api.github.com/users/iwonbigbro/repos", "events_url": "https://api.github.com/users/iwonbigbro/events{/privacy}", "received_events_url": "https://api.github.com/users/iwonbigbro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-28T08:10:11Z", "updated_at": "2014-11-07T17:50:28Z", "closed_at": "2014-11-07T17:50:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Without an expiry date or last access/update time in the DB, I can perform any house keeping.  I have a sqlite DB that is growing infinitely, with void requests being retained forever.  Can we have a column added to the DB that records when the entry was accessed or when it will expire, updating it each time the data is loaded from cache?  I could then setup a house keeping cron to discard invalid request items from the cache.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/23", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/23/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/23/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/23", "id": 36615694, "node_id": "MDU6SXNzdWUzNjYxNTY5NA==", "number": 23, "title": "POST that sets cookies will not cache", "user": {"login": "saulshanabrook", "id": 1186124, "node_id": "MDQ6VXNlcjExODYxMjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1186124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saulshanabrook", "html_url": "https://github.com/saulshanabrook", "followers_url": "https://api.github.com/users/saulshanabrook/followers", "following_url": "https://api.github.com/users/saulshanabrook/following{/other_user}", "gists_url": "https://api.github.com/users/saulshanabrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/saulshanabrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saulshanabrook/subscriptions", "organizations_url": "https://api.github.com/users/saulshanabrook/orgs", "repos_url": "https://api.github.com/users/saulshanabrook/repos", "events_url": "https://api.github.com/users/saulshanabrook/events{/privacy}", "received_events_url": "https://api.github.com/users/saulshanabrook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-06-26T21:14:44Z", "updated_at": "2014-06-27T17:01:19Z", "closed_at": "2014-06-27T17:01:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "This will not cache, for some reason\n`requests.post(\"http://httpbin.org/cookies/set?name=dfd\")`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/22", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/22/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/22/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/22", "id": 36541052, "node_id": "MDU6SXNzdWUzNjU0MTA1Mg==", "number": 22, "title": "Python 3.4 Not Working", "user": {"login": "saulshanabrook", "id": 1186124, "node_id": "MDQ6VXNlcjExODYxMjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1186124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saulshanabrook", "html_url": "https://github.com/saulshanabrook", "followers_url": "https://api.github.com/users/saulshanabrook/followers", "following_url": "https://api.github.com/users/saulshanabrook/following{/other_user}", "gists_url": "https://api.github.com/users/saulshanabrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/saulshanabrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saulshanabrook/subscriptions", "organizations_url": "https://api.github.com/users/saulshanabrook/orgs", "repos_url": "https://api.github.com/users/saulshanabrook/repos", "events_url": "https://api.github.com/users/saulshanabrook/events{/privacy}", "received_events_url": "https://api.github.com/users/saulshanabrook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-06-26T02:52:34Z", "updated_at": "2014-06-26T18:51:09Z", "closed_at": "2014-06-26T18:51:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does this package work on 3.4? I am trying it and it seems to not be caching anything when I use python 3.4\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/21", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/21/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/21/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/21", "id": 33991664, "node_id": "MDU6SXNzdWUzMzk5MTY2NA==", "number": 21, "title": "Race condition sqlite dbdict saving", "user": {"login": "ddaan", "id": 6792282, "node_id": "MDQ6VXNlcjY3OTIyODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6792282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddaan", "html_url": "https://github.com/ddaan", "followers_url": "https://api.github.com/users/ddaan/followers", "following_url": "https://api.github.com/users/ddaan/following{/other_user}", "gists_url": "https://api.github.com/users/ddaan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddaan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddaan/subscriptions", "organizations_url": "https://api.github.com/users/ddaan/orgs", "repos_url": "https://api.github.com/users/ddaan/repos", "events_url": "https://api.github.com/users/ddaan/events{/privacy}", "received_events_url": "https://api.github.com/users/ddaan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-21T15:10:21Z", "updated_at": "2014-11-07T17:51:01Z", "closed_at": "2014-11-07T17:51:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "When stress testing my site I found a small race condition. I found some errors in my log `IntegrityError: column key is not unique.` This happens when some concurrent users request the same url. \n\nI fixed it with this monkey patch for now. \n\n```\ndef fixes_race_condition__setitem__(self, key, item):\n    \"\"\"\n    Monkey patch to prevent a race condition where for two keys are tried to save at the same time\n    \"\"\"\n    with self.connection(True) as con:\n        if con.execute(\"select key from `%s` where key=?\" %\n                       self.table_name, (key,)).fetchone():\n            con.execute(\"update `%s` set value=? where key=?\" %\n                        self.table_name, (item, key))\n        else:\n            try:\n                con.execute(\"insert into `%s` (key,value) values (?,?)\" %\n                            self.table_name, (key, item))\n            except IntegrityError, e:\n                # Will only happen when at the exact same time two keys are saved, so we are save to just skip this\n                pass\n\nrequests_cache.backends.storage.dbdict.DbDict.__setitem__ = fixes_race_condition__setitem__\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/19", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/19/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/19/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/19", "id": 28490219, "node_id": "MDU6SXNzdWUyODQ5MDIxOQ==", "number": 19, "title": "Forcibly refresh existing request in cache", "user": {"login": "scraperdragon", "id": 1957682, "node_id": "MDQ6VXNlcjE5NTc2ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1957682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scraperdragon", "html_url": "https://github.com/scraperdragon", "followers_url": "https://api.github.com/users/scraperdragon/followers", "following_url": "https://api.github.com/users/scraperdragon/following{/other_user}", "gists_url": "https://api.github.com/users/scraperdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/scraperdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scraperdragon/subscriptions", "organizations_url": "https://api.github.com/users/scraperdragon/orgs", "repos_url": "https://api.github.com/users/scraperdragon/repos", "events_url": "https://api.github.com/users/scraperdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/scraperdragon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-02-28T10:13:24Z", "updated_at": "2014-04-14T10:56:32Z", "closed_at": "2014-04-14T10:56:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using requests_cache to access a website, which gives me a transient \"We're down for scheduled maintenance!\" message, which is now in the cache.\n\nI'd like to retry if I get that message - which I could do by turning the cache off - but that doesn't fix the cache.\n\nSo I'd like to be able to say to requests-cache: \"The cache is wrong: fetch a fresh version and cache that.\"\n\nI suspect the best way of doing this is to pass a parameter to `request` (core:105) and then if that's true, `send` (around about core:90ish) should just return `send_request_and_cache_response`.\n\nI don't feel confident that this approach wouldn't have subtle issues, so I'm mostly wondering whether this sounds like a reasonable approach?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/18", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/18/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/18/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/18", "id": 27171702, "node_id": "MDU6SXNzdWUyNzE3MTcwMg==", "number": 18, "title": "Conditionally cache responses?", "user": {"login": "wkmanire", "id": 217010, "node_id": "MDQ6VXNlcjIxNzAxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/217010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wkmanire", "html_url": "https://github.com/wkmanire", "followers_url": "https://api.github.com/users/wkmanire/followers", "following_url": "https://api.github.com/users/wkmanire/following{/other_user}", "gists_url": "https://api.github.com/users/wkmanire/gists{/gist_id}", "starred_url": "https://api.github.com/users/wkmanire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wkmanire/subscriptions", "organizations_url": "https://api.github.com/users/wkmanire/orgs", "repos_url": "https://api.github.com/users/wkmanire/repos", "events_url": "https://api.github.com/users/wkmanire/events{/privacy}", "received_events_url": "https://api.github.com/users/wkmanire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-07T21:07:58Z", "updated_at": "2014-02-19T04:13:42Z", "closed_at": "2014-02-19T04:13:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI'm excited to find the requests-cache module! It's (almost) exactly what I've been looking for.\n\nI have a sort of special use case for this and I'm not quite sure how to proceed.\n\nI'm developing a client for a web service. In the event that my client should throw an exception I would like to associate the exception data, any logs I've accumulated and the cached response together into the sqlite database for debugging and unit testing purposes. I do not want to cache the responses for normal operation because the data is very volatile.\n\nEssentially, I'm only trying to reproduce the environment in which the exception was thrown for unit testing and I think that requests-cache can do 90% of this work for me.\n\nI'm considering doing the following:\n\n1) Sub-class CachedSession to only store responses but never retrieve them from the cache for normal operation.\n2) Sub-class one of the back-ends to store the extra fields that I need.\n\nIs there an easier, or better way to do this? Any advice would be greatly appreciated.\n\nThank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/17", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/17/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/17/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/17", "id": 21009612, "node_id": "MDU6SXNzdWUyMTAwOTYxMg==", "number": 17, "title": "Regression: 0.4.1 appears to blow up when caching compressed objects", "user": {"login": "fawkesley", "id": 254290, "node_id": "MDQ6VXNlcjI1NDI5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/254290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fawkesley", "html_url": "https://github.com/fawkesley", "followers_url": "https://api.github.com/users/fawkesley/followers", "following_url": "https://api.github.com/users/fawkesley/following{/other_user}", "gists_url": "https://api.github.com/users/fawkesley/gists{/gist_id}", "starred_url": "https://api.github.com/users/fawkesley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fawkesley/subscriptions", "organizations_url": "https://api.github.com/users/fawkesley/orgs", "repos_url": "https://api.github.com/users/fawkesley/repos", "events_url": "https://api.github.com/users/fawkesley/events{/privacy}", "received_events_url": "https://api.github.com/users/fawkesley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-10-15T11:06:15Z", "updated_at": "2013-10-15T12:27:32Z", "closed_at": "2013-10-15T12:27:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've verified that this bug doesn't occur in 0.4.0.\n\nVersions from `pip freeze`:\n\n```\nrequests==1.2.3\nrequests-cache==0.4.1\n```\n\nCode to reproduce:\n\n```\nimport requests\nimport requests_cache\nrequests_cache.install_cache()\nrequests.get('http://www.eurococoa.com/en/x/271/latest-stats')\n```\n\nException encountered:\n\n```\nTraceback (most recent call last):\n  File \"tool/main.py\", line 156, in <module>\n    sys.exit(main())\n  File \"tool/main.py\", line 56, in main\n    pdf_url = extract_pdf_url(download_url(INDEX_URL))\n  File \"tool/main.py\", line 93, in download_url\n    response = requests.get(url)\n  File \"/usr/local/lib/python2.7/dist-packages/requests/api.py\", line 55, in get\n    return request('get', url, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/requests/api.py\", line 44, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/requests_cache/core.py\", line 111, in request\n    hooks, stream, verify, cert)\n  File \"/usr/local/lib/python2.7/dist-packages/requests/sessions.py\", line 335, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/requests_cache/core.py\", line 91, in send\n    return send_request_and_cache_response()\n  File \"/usr/local/lib/python2.7/dist-packages/requests_cache/core.py\", line 85, in send_request_and_cache_response\n    self.cache.save_response(cache_key, response)\n  File \"/usr/local/lib/python2.7/dist-packages/requests_cache/backends/base.py\", line 40, in save_response\n    self.responses[key] = self.reduce_response(response), datetime.utcnow()\n  File \"/usr/local/lib/python2.7/dist-packages/requests_cache/backends/storage/dbdict.py\", line 168, in __setitem__\n    sqlite.Binary(pickle.dumps(item)))\ncPickle.UnpickleableError: Cannot pickle <type 'zlib.Decompress'> objects\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/16", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/16/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/16/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/16", "id": 20735773, "node_id": "MDU6SXNzdWUyMDczNTc3Mw==", "number": 16, "title": "doc correction: enabled context manager not deleted", "user": {"login": "evdb", "id": 187630, "node_id": "MDQ6VXNlcjE4NzYzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/187630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evdb", "html_url": "https://github.com/evdb", "followers_url": "https://api.github.com/users/evdb/followers", "following_url": "https://api.github.com/users/evdb/following{/other_user}", "gists_url": "https://api.github.com/users/evdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/evdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evdb/subscriptions", "organizations_url": "https://api.github.com/users/evdb/orgs", "repos_url": "https://api.github.com/users/evdb/repos", "events_url": "https://api.github.com/users/evdb/events{/privacy}", "received_events_url": "https://api.github.com/users/evdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-10-09T11:12:16Z", "updated_at": "2013-10-09T17:01:32Z", "closed_at": "2013-10-09T16:57:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "In https://github.com/reclosedev/requests-cache/blob/master/docs/user_guide.rst#backward-incompatible-changes it is stated that `requests_cache.enabled()` has been deleted. But it was reintroduced in a8ed0932c1f9622cbb14cb3c4e16bac1c028ca86.\n\nPerhaps the whole \"Backward incompatible changes\" section should be removed in favour of pointing people at the \"HISTORY.rst\" document?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/15", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/15/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/15/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/15", "id": 20154025, "node_id": "MDU6SXNzdWUyMDE1NDAyNQ==", "number": 15, "title": "Default Cache", "user": {"login": "liyanchang", "id": 328073, "node_id": "MDQ6VXNlcjMyODA3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/328073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liyanchang", "html_url": "https://github.com/liyanchang", "followers_url": "https://api.github.com/users/liyanchang/followers", "following_url": "https://api.github.com/users/liyanchang/following{/other_user}", "gists_url": "https://api.github.com/users/liyanchang/gists{/gist_id}", "starred_url": "https://api.github.com/users/liyanchang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liyanchang/subscriptions", "organizations_url": "https://api.github.com/users/liyanchang/orgs", "repos_url": "https://api.github.com/users/liyanchang/repos", "events_url": "https://api.github.com/users/liyanchang/events{/privacy}", "received_events_url": "https://api.github.com/users/liyanchang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-09-27T06:12:43Z", "updated_at": "2013-10-31T18:22:05Z", "closed_at": "2013-10-09T16:57:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running requests on a machine without sqllite properly installed:\n\n``` python\nPython 2.7.5 (default, Jun 24 2013, 23:19:27)\n[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import requests, requests_cache\n>>> requests.get('http://www.google.com')\n<Response [200]>\n>>> requests_cache.install_cache('/tmp/requests_cache')\n>>> requests.get('http://www.google.com')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/site-packages/requests/api.py\", line 55, in get\n    return request('get', url, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/requests/api.py\", line 43, in request\n    session = sessions.Session()\n  File \"/usr/local/lib/python2.7/site-packages/requests_cache/core.py\", line 155, in <lambda>\n    **backend_options)\n  File \"/usr/local/lib/python2.7/site-packages/requests_cache/core.py\", line 63, in __init__\n    (backend, ', '.join(backends.registry.keys())))\nValueError: Unsupported backend \"sqllite\" try one of: memory\n```\n\nFrom what I understand, 'sqllite' is being used as the [default](https://github.com/reclosedev/requests-cache/blob/master/requests_cache/core.py#L139):\n\n``` python\ndef install_cache(cache_name='cache', backend='sqlite', ...\n```\n\nHowever, sqllite is [not guaranteed to be installed](https://github.com/reclosedev/requests-cache/blob/master/requests_cache/backends/__init__.py):\n\n``` python\ntry:\n    # Heroku doesn't allow the SQLite3 module to be installed\n    from .sqlite import DbCache\n    registry['sqlite'] = DbCache\nexcept ImportError:\n    DbCache = None\n```\n\nCouple ways to move forward:\n1. make `memory` default\n2. error out earlier when they specify an unsupported backend (as you can see from the example, it errors out on the request call, not the install_cache)\n3. other thoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/13", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/13/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/13/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/13", "id": 18522879, "node_id": "MDU6SXNzdWUxODUyMjg3OQ==", "number": 13, "title": "cPickle.UnpickleableError since 0.4.1", "user": {"login": "kensington", "id": 1152355, "node_id": "MDQ6VXNlcjExNTIzNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1152355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kensington", "html_url": "https://github.com/kensington", "followers_url": "https://api.github.com/users/kensington/followers", "following_url": "https://api.github.com/users/kensington/following{/other_user}", "gists_url": "https://api.github.com/users/kensington/gists{/gist_id}", "starred_url": "https://api.github.com/users/kensington/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kensington/subscriptions", "organizations_url": "https://api.github.com/users/kensington/orgs", "repos_url": "https://api.github.com/users/kensington/repos", "events_url": "https://api.github.com/users/kensington/events{/privacy}", "received_events_url": "https://api.github.com/users/kensington/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-08-25T16:13:01Z", "updated_at": "2013-10-15T12:27:32Z", "closed_at": "2013-08-25T17:23:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since 0.4.1, I hit this error:\n\nTraceback (most recent call last):\n  File \"/usr/bin/howdoi-python2.7\", line 9, in <module>\n    load_entry_point('howdoi==1.1.4', 'console_scripts', 'howdoi')()\n  File \"/usr/lib64/python2.7/site-packages/howdoi/howdoi.py\", line 217, in command_line_runner\n    print(howdoi(args).encode('utf-8', 'ignore'))\n  File \"/usr/lib64/python2.7/site-packages/howdoi/howdoi.py\", line 176, in howdoi\n    return get_instructions(args) or 'Sorry, couldn\\'t find any help with that topic\\n'\n  File \"/usr/lib64/python2.7/site-packages/howdoi/howdoi.py\", line 143, in get_instructions\n    links = get_links(args['query'])\n  File \"/usr/lib64/python2.7/site-packages/howdoi/howdoi.py\", line 68, in get_links\n    result = get_result(url)\n  File \"/usr/lib64/python2.7/site-packages/howdoi/howdoi.py\", line 59, in get_result\n    return requests.get(url, headers={'User-Agent': random.choice(USER_AGENTS)}, proxies=get_proxies()).text\n  File \"/usr/lib64/python2.7/site-packages/requests/api.py\", line 55, in get\n    return request('get', url, *_kwargs)\n  File \"/usr/lib64/python2.7/site-packages/requests/api.py\", line 44, in request\n    return session.request(method=method, url=url, *_kwargs)\n  File \"/usr/lib64/python2.7/site-packages/requests_cache/core.py\", line 111, in request\n    hooks, stream, verify, cert)\n  File \"/usr/lib64/python2.7/site-packages/requests/sessions.py\", line 335, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/usr/lib64/python2.7/site-packages/requests_cache/core.py\", line 91, in send\n    return send_request_and_cache_response()\n  File \"/usr/lib64/python2.7/site-packages/requests_cache/core.py\", line 85, in send_request_and_cache_response\n    self.cache.save_response(cache_key, response)\n  File \"/usr/lib64/python2.7/site-packages/requests_cache/backends/base.py\", line 40, in save_response\n    self.responses[key] = self.reduce_response(response), datetime.utcnow()\n  File \"/usr/lib64/python2.7/site-packages/requests_cache/backends/storage/dbdict.py\", line 168, in **setitem**\n    sqlite.Binary(pickle.dumps(item)))\ncPickle.UnpickleableError: Cannot pickle <type 'zlib.Decompress'> objects\n\nThe howdoi developers asked me to report this upstream.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/12", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/12/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/12/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/12", "id": 18233615, "node_id": "MDU6SXNzdWUxODIzMzYxNQ==", "number": 12, "title": "Request: A cache_enabled context manager would be extremely useful", "user": {"login": "fawkesley", "id": 254290, "node_id": "MDQ6VXNlcjI1NDI5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/254290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fawkesley", "html_url": "https://github.com/fawkesley", "followers_url": "https://api.github.com/users/fawkesley/followers", "following_url": "https://api.github.com/users/fawkesley/following{/other_user}", "gists_url": "https://api.github.com/users/fawkesley/gists{/gist_id}", "starred_url": "https://api.github.com/users/fawkesley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fawkesley/subscriptions", "organizations_url": "https://api.github.com/users/fawkesley/orgs", "repos_url": "https://api.github.com/users/fawkesley/repos", "events_url": "https://api.github.com/users/fawkesley/events{/privacy}", "received_events_url": "https://api.github.com/users/fawkesley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-08-19T10:59:50Z", "updated_at": "2013-08-19T16:24:18Z", "closed_at": "2013-08-19T16:07:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I find myself often turning the cache on and off for different types of request (ie don't cache index pages, but do cache links from them)\n\nThe cache_disabled context manager is great!\n\nA symmetric cache_enabled one would be fantastic :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/11", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/11/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/11/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/11", "id": 16743598, "node_id": "MDU6SXNzdWUxNjc0MzU5OA==", "number": 11, "title": "Something breaks my cache file, then exceptions are encountered", "user": {"login": "fawkesley", "id": 254290, "node_id": "MDQ6VXNlcjI1NDI5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/254290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fawkesley", "html_url": "https://github.com/fawkesley", "followers_url": "https://api.github.com/users/fawkesley/followers", "following_url": "https://api.github.com/users/fawkesley/following{/other_user}", "gists_url": "https://api.github.com/users/fawkesley/gists{/gist_id}", "starred_url": "https://api.github.com/users/fawkesley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fawkesley/subscriptions", "organizations_url": "https://api.github.com/users/fawkesley/orgs", "repos_url": "https://api.github.com/users/fawkesley/repos", "events_url": "https://api.github.com/users/fawkesley/events{/privacy}", "received_events_url": "https://api.github.com/users/fawkesley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-07-15T08:27:59Z", "updated_at": "2013-10-09T17:09:58Z", "closed_at": "2013-10-09T17:09:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I haven't yet worked out what triggers this, but from time to time my my sqlite cache appears to break, after which all calls to requests.get fail with the exception below. Deleting the cache file obviously fixes the problem but that's not ideal! Have you seen this before?\n\n```\nTraceback (most recent call last):\n  File \"tool/main.py\", line 188, in <module>\n    main()\n  File \"tool/main.py\", line 62, in main\n    for xls_url in get_excel_urls(download_url(INDEX_URL)):\n  File \"tool/main.py\", line 101, in download_url\n    response = requests.get(url)\n  File \"/home/venv/local/lib/python2.7/site-packages/requests/api.py\", line 55, in get\n    return request('get', url, **kwargs)\n  File \"/home/venv/local/lib/python2.7/site-packages/requests/api.py\", line 44, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"/home/venv/local/lib/python2.7/site-packages/requests_cache/core.py\", line 111, in request\n    hooks, stream, verify, cert)\n  File \"/home/venv/local/lib/python2.7/site-packages/requests/sessions.py\", line 335, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/home/venv/local/lib/python2.7/site-packages/requests_cache/core.py\", line 89, in send\n    response, timestamp = self.cache.get_response_and_time(cache_key)\n  File \"/home/venv/local/lib/python2.7/site-packages/requests_cache/backends/base.py\", line 64, in get_response_and_time\n    if key not in self.responses:\n  File \"/home/venv/lib/python2.7/_abcoll.py\", line 348, in __contains__\n    self[key]\n  File \"/home/venv/local/lib/python2.7/site-packages/requests_cache/backends/storage/dbdict.py\", line 171, in __getitem__\n    return pickle.loads(bytes(super(DbPickleDict, self).__getitem__(key)))\n  File \"/home/venv/lib/python2.7/copy_reg.py\", line 50, in _reconstructor\n    obj = base.__new__(cls, state)\nTypeError: ('dict.__new__(CaseInsensitiveDict): CaseInsensitiveDict is not a subtype of dict', <function _reconstructor at 0x7fe49d3039b0>, (<class 'requests.structures.CaseInsensitiveDict'>, <type 'dict'>, {'Accept-Encoding': 'gzip, deflate, compress', 'Accept': '*/*', 'User-Agent': 'python-requests/1.2.0 CPython/2.7.4 Linux/3.8.0-23-generic'}))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/9", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/9/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/9/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/9", "id": 9919160, "node_id": "MDU6SXNzdWU5OTE5MTYw", "number": 9, "title": "pypi v0.2.0 package broken", "user": {"login": "dustinwhittle", "id": 12161, "node_id": "MDQ6VXNlcjEyMTYx", "avatar_url": "https://avatars1.githubusercontent.com/u/12161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dustinwhittle", "html_url": "https://github.com/dustinwhittle", "followers_url": "https://api.github.com/users/dustinwhittle/followers", "following_url": "https://api.github.com/users/dustinwhittle/following{/other_user}", "gists_url": "https://api.github.com/users/dustinwhittle/gists{/gist_id}", "starred_url": "https://api.github.com/users/dustinwhittle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dustinwhittle/subscriptions", "organizations_url": "https://api.github.com/users/dustinwhittle/orgs", "repos_url": "https://api.github.com/users/dustinwhittle/repos", "events_url": "https://api.github.com/users/dustinwhittle/events{/privacy}", "received_events_url": "https://api.github.com/users/dustinwhittle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-13T06:37:20Z", "updated_at": "2013-01-13T07:48:26Z", "closed_at": "2013-01-13T07:48:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "The history.rst file is missing so pypi no longer works for this package.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/8", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/8/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/8/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/8", "id": 9910431, "node_id": "MDU6SXNzdWU5OTEwNDMx", "number": 8, "title": "Redis storage", "user": {"login": "honzajavorek", "id": 283441, "node_id": "MDQ6VXNlcjI4MzQ0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/283441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzajavorek", "html_url": "https://github.com/honzajavorek", "followers_url": "https://api.github.com/users/honzajavorek/followers", "following_url": "https://api.github.com/users/honzajavorek/following{/other_user}", "gists_url": "https://api.github.com/users/honzajavorek/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzajavorek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzajavorek/subscriptions", "organizations_url": "https://api.github.com/users/honzajavorek/orgs", "repos_url": "https://api.github.com/users/honzajavorek/repos", "events_url": "https://api.github.com/users/honzajavorek/events{/privacy}", "received_events_url": "https://api.github.com/users/honzajavorek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-01-12T13:18:00Z", "updated_at": "2013-04-18T16:49:29Z", "closed_at": "2013-04-18T16:49:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think Redis storage for this cache would be great. I am willing to write one in the future, but I'll probably wait for #7 to be resolved first. I am filling this issue also as a reminder for myself / opportunity for others to express support for this feature / opportunity for others to implement it & contribute faster than me ;-)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/7", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/7/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/7/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/7", "id": 9684531, "node_id": "MDU6SXNzdWU5Njg0NTMx", "number": 7, "title": "Requests API changed", "user": {"login": "honzajavorek", "id": 283441, "node_id": "MDQ6VXNlcjI4MzQ0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/283441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzajavorek", "html_url": "https://github.com/honzajavorek", "followers_url": "https://api.github.com/users/honzajavorek/followers", "following_url": "https://api.github.com/users/honzajavorek/following{/other_user}", "gists_url": "https://api.github.com/users/honzajavorek/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzajavorek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzajavorek/subscriptions", "organizations_url": "https://api.github.com/users/honzajavorek/orgs", "repos_url": "https://api.github.com/users/honzajavorek/repos", "events_url": "https://api.github.com/users/honzajavorek/events{/privacy}", "received_events_url": "https://api.github.com/users/honzajavorek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2013-01-04T15:55:22Z", "updated_at": "2013-10-09T17:02:55Z", "closed_at": "2013-10-09T17:02:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using with `requests==1.0.3`, I got an error on import time:\n\n```\n...\nimport requests_cache\n  File \"/home/.../local/lib/python2.7/site-packages/requests_cache/__init__.py\", line 28, in <module>\n    from requests_cache.core import(\n  File \"/home/.../local/lib/python2.7/site-packages/requests_cache/core.py\", line 22, in <module>\n    _original_request_send = Request.send\nAttributeError: type object 'Request' has no attribute 'send'\n```\n\nAs Requests are now in version 1 and [that means](http://semver.org/) API should not change any more, I think `requests-cache` can be safely updated for the future. It is even possible that the API changed in such way monkey patching is not necessary any more, but I did not explored it in detail.\n\n---\n\nAnyway, this is a problem that could (and should) be fixed immediately at least by pinning `install_requires=['requests']` in `setup.py` to the last version of Requests which works with `requests-cache` smoothly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/6", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/6/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/6/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/6", "id": 8451834, "node_id": "MDU6SXNzdWU4NDUxODM0", "number": 6, "title": "Take into account content negotiation with GET-requests", "user": {"login": "mhermans", "id": 41405, "node_id": "MDQ6VXNlcjQxNDA1", "avatar_url": "https://avatars3.githubusercontent.com/u/41405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhermans", "html_url": "https://github.com/mhermans", "followers_url": "https://api.github.com/users/mhermans/followers", "following_url": "https://api.github.com/users/mhermans/following{/other_user}", "gists_url": "https://api.github.com/users/mhermans/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhermans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhermans/subscriptions", "organizations_url": "https://api.github.com/users/mhermans/orgs", "repos_url": "https://api.github.com/users/mhermans/repos", "events_url": "https://api.github.com/users/mhermans/events{/privacy}", "received_events_url": "https://api.github.com/users/mhermans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-11-18T17:19:47Z", "updated_at": "2015-01-17T09:20:37Z", "closed_at": "2015-01-17T09:20:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "POST-headers are apparently taken into account when caching requests, but not for GET-requests.\n\nIn the case of content negotiation with GET-requests, it would be useful if the cache could take into account at least the Accept-header, allowing to case responses in different formats for the same URI.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/5", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/5/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/5/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/5", "id": 6740865, "node_id": "MDU6SXNzdWU2NzQwODY1", "number": 5, "title": "Doesn't work out of the box with Heroku", "user": {"login": "nathancahill", "id": 1383872, "node_id": "MDQ6VXNlcjEzODM4NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1383872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathancahill", "html_url": "https://github.com/nathancahill", "followers_url": "https://api.github.com/users/nathancahill/followers", "following_url": "https://api.github.com/users/nathancahill/following{/other_user}", "gists_url": "https://api.github.com/users/nathancahill/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathancahill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathancahill/subscriptions", "organizations_url": "https://api.github.com/users/nathancahill/orgs", "repos_url": "https://api.github.com/users/nathancahill/repos", "events_url": "https://api.github.com/users/nathancahill/events{/privacy}", "received_events_url": "https://api.github.com/users/nathancahill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-09-09T08:00:59Z", "updated_at": "2012-09-09T08:46:38Z", "closed_at": "2012-09-09T08:01:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not an issue really, but it requires some tweaking to get it to work since Heroku doesn't support SQLite. \n\nHere's [my notes](http://nathancahill.github.com/make-requests-cache-play-nicely-with-heroku/), and here is [my fork of the repo with changes](https://github.com/nathancahill/requests-cache). \n\nHope this helps someone out.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/3", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/3/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/3/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/3", "id": 4409434, "node_id": "MDU6SXNzdWU0NDA5NDM0", "number": 3, "title": "Thread safety for sqlite backend", "user": {"login": "reclosedev", "id": 660112, "node_id": "MDQ6VXNlcjY2MDExMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/660112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reclosedev", "html_url": "https://github.com/reclosedev", "followers_url": "https://api.github.com/users/reclosedev/followers", "following_url": "https://api.github.com/users/reclosedev/following{/other_user}", "gists_url": "https://api.github.com/users/reclosedev/gists{/gist_id}", "starred_url": "https://api.github.com/users/reclosedev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reclosedev/subscriptions", "organizations_url": "https://api.github.com/users/reclosedev/orgs", "repos_url": "https://api.github.com/users/reclosedev/repos", "events_url": "https://api.github.com/users/reclosedev/events{/privacy}", "received_events_url": "https://api.github.com/users/reclosedev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "reclosedev", "id": 660112, "node_id": "MDQ6VXNlcjY2MDExMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/660112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reclosedev", "html_url": "https://github.com/reclosedev", "followers_url": "https://api.github.com/users/reclosedev/followers", "following_url": "https://api.github.com/users/reclosedev/following{/other_user}", "gists_url": "https://api.github.com/users/reclosedev/gists{/gist_id}", "starred_url": "https://api.github.com/users/reclosedev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reclosedev/subscriptions", "organizations_url": "https://api.github.com/users/reclosedev/orgs", "repos_url": "https://api.github.com/users/reclosedev/repos", "events_url": "https://api.github.com/users/reclosedev/events{/privacy}", "received_events_url": "https://api.github.com/users/reclosedev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "reclosedev", "id": 660112, "node_id": "MDQ6VXNlcjY2MDExMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/660112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reclosedev", "html_url": "https://github.com/reclosedev", "followers_url": "https://api.github.com/users/reclosedev/followers", "following_url": "https://api.github.com/users/reclosedev/following{/other_user}", "gists_url": "https://api.github.com/users/reclosedev/gists{/gist_id}", "starred_url": "https://api.github.com/users/reclosedev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reclosedev/subscriptions", "organizations_url": "https://api.github.com/users/reclosedev/orgs", "repos_url": "https://api.github.com/users/reclosedev/repos", "events_url": "https://api.github.com/users/reclosedev/events{/privacy}", "received_events_url": "https://api.github.com/users/reclosedev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2012-05-03T17:13:28Z", "updated_at": "2012-05-04T12:18:09Z", "closed_at": "2012-05-04T12:18:09Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Following exception is raised when `request_cache` with `sqlite` backend is used in multithreaded environment:\n\n```\nProgrammingError: SQLite objects created in a thread can only be used in that same thread....\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/reclosedev/requests-cache/issues/2", "repository_url": "https://api.github.com/repos/reclosedev/requests-cache", "labels_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/2/comments", "events_url": "https://api.github.com/repos/reclosedev/requests-cache/issues/2/events", "html_url": "https://github.com/reclosedev/requests-cache/issues/2", "id": 4405770, "node_id": "MDU6SXNzdWU0NDA1Nzcw", "number": 2, "title": "Caching POST-requests does not take into account the POST-params", "user": {"login": "WouterVH", "id": 469509, "node_id": "MDQ6VXNlcjQ2OTUwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/469509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WouterVH", "html_url": "https://github.com/WouterVH", "followers_url": "https://api.github.com/users/WouterVH/followers", "following_url": "https://api.github.com/users/WouterVH/following{/other_user}", "gists_url": "https://api.github.com/users/WouterVH/gists{/gist_id}", "starred_url": "https://api.github.com/users/WouterVH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WouterVH/subscriptions", "organizations_url": "https://api.github.com/users/WouterVH/orgs", "repos_url": "https://api.github.com/users/WouterVH/repos", "events_url": "https://api.github.com/users/WouterVH/events{/privacy}", "received_events_url": "https://api.github.com/users/WouterVH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-05-03T14:15:48Z", "updated_at": "2012-09-23T16:23:23Z", "closed_at": "2012-05-15T15:55:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using a webservice where there are no GET-request, only POSTs. the situation is that for the same payload, you get the same results back. It would be very handy to be able to cache these POST-requests, \nThis seems already supported by allowable_methods=('GET', 'POST'),  but the POST-params are not taken into account.\n", "performed_via_github_app": null, "score": 1.0}]}