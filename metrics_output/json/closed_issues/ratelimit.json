{"total_count": 17, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/46", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/46/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/46/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/46", "id": 586912197, "node_id": "MDU6SXNzdWU1ODY5MTIxOTc=", "number": 46, "title": "ProcessPoolExecutor support", "user": {"login": "alexcombessie", "id": 4739848, "node_id": "MDQ6VXNlcjQ3Mzk4NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4739848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcombessie", "html_url": "https://github.com/alexcombessie", "followers_url": "https://api.github.com/users/alexcombessie/followers", "following_url": "https://api.github.com/users/alexcombessie/following{/other_user}", "gists_url": "https://api.github.com/users/alexcombessie/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcombessie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcombessie/subscriptions", "organizations_url": "https://api.github.com/users/alexcombessie/orgs", "repos_url": "https://api.github.com/users/alexcombessie/repos", "events_url": "https://api.github.com/users/alexcombessie/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcombessie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-24T12:07:55Z", "updated_at": "2020-07-23T16:04:18Z", "closed_at": "2020-07-23T16:04:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nThanks for this work, really helpful.\r\n\r\nHowever, I am running into an issue. I need to use ratelimit with `concurrent.futures.ProcessPoolExecutor`.\r\n\r\nSadly, I am observing that the decorator is not aware of the function invocations going on on these parallel processes.\r\n\r\nDo you have plans to support such use case? Or could you maybe point me to related work which supports concurrent processes?\r\n\r\nThanks,\r\n\r\nAlex", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/42", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/42/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/42/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/42", "id": 564676921, "node_id": "MDU6SXNzdWU1NjQ2NzY5MjE=", "number": 42, "title": "How to reset the limit ?", "user": {"login": "stuaxo", "id": 179677, "node_id": "MDQ6VXNlcjE3OTY3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/179677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuaxo", "html_url": "https://github.com/stuaxo", "followers_url": "https://api.github.com/users/stuaxo/followers", "following_url": "https://api.github.com/users/stuaxo/following{/other_user}", "gists_url": "https://api.github.com/users/stuaxo/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuaxo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuaxo/subscriptions", "organizations_url": "https://api.github.com/users/stuaxo/orgs", "repos_url": "https://api.github.com/users/stuaxo/repos", "events_url": "https://api.github.com/users/stuaxo/events{/privacy}", "received_events_url": "https://api.github.com/users/stuaxo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-13T13:18:36Z", "updated_at": "2020-02-13T13:19:18Z", "closed_at": "2020-02-13T13:19:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n   It would be good if there was an API to reset the ratelimit, this would be handy when writing unittests.\r\n\r\nCheers\r\nS", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/41", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/41/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/41/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/41", "id": 546836510, "node_id": "MDU6SXNzdWU1NDY4MzY1MTA=", "number": 41, "title": "Multiprocess aware rate limit - Redis or Django DB backend ?", "user": {"login": "stuaxo", "id": 179677, "node_id": "MDQ6VXNlcjE3OTY3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/179677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuaxo", "html_url": "https://github.com/stuaxo", "followers_url": "https://api.github.com/users/stuaxo/followers", "following_url": "https://api.github.com/users/stuaxo/following{/other_user}", "gists_url": "https://api.github.com/users/stuaxo/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuaxo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuaxo/subscriptions", "organizations_url": "https://api.github.com/users/stuaxo/orgs", "repos_url": "https://api.github.com/users/stuaxo/repos", "events_url": "https://api.github.com/users/stuaxo/events{/privacy}", "received_events_url": "https://api.github.com/users/stuaxo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-08T12:41:28Z", "updated_at": "2020-03-07T16:24:08Z", "closed_at": "2020-03-07T16:24:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be good if ratelimit could store it's ratelimit somewhere like Redis or the database, this would make it more useful under Django, where there can be more than one process running.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/36", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/36/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/36/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/36", "id": 514757088, "node_id": "MDU6SXNzdWU1MTQ3NTcwODg=", "number": 36, "title": "How to specify no rate limit ?", "user": {"login": "stuaxo", "id": 179677, "node_id": "MDQ6VXNlcjE3OTY3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/179677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuaxo", "html_url": "https://github.com/stuaxo", "followers_url": "https://api.github.com/users/stuaxo/followers", "following_url": "https://api.github.com/users/stuaxo/following{/other_user}", "gists_url": "https://api.github.com/users/stuaxo/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuaxo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuaxo/subscriptions", "organizations_url": "https://api.github.com/users/stuaxo/orgs", "repos_url": "https://api.github.com/users/stuaxo/repos", "events_url": "https://api.github.com/users/stuaxo/events{/privacy}", "received_events_url": "https://api.github.com/users/stuaxo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-30T15:19:44Z", "updated_at": "2020-02-13T13:34:17Z", "closed_at": "2020-02-13T13:34:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I pass in the rate limit from settings, but I'd like the option of having no limit - is it as simple as passing `calls=1, period=0` ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/29", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/29/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/29/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/29", "id": 382450783, "node_id": "MDU6SXNzdWUzODI0NTA3ODM=", "number": 29, "title": "How to make this work for multiple threads?", "user": {"login": "tianbingleng", "id": 17739932, "node_id": "MDQ6VXNlcjE3NzM5OTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/17739932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tianbingleng", "html_url": "https://github.com/tianbingleng", "followers_url": "https://api.github.com/users/tianbingleng/followers", "following_url": "https://api.github.com/users/tianbingleng/following{/other_user}", "gists_url": "https://api.github.com/users/tianbingleng/gists{/gist_id}", "starred_url": "https://api.github.com/users/tianbingleng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tianbingleng/subscriptions", "organizations_url": "https://api.github.com/users/tianbingleng/orgs", "repos_url": "https://api.github.com/users/tianbingleng/repos", "events_url": "https://api.github.com/users/tianbingleng/events{/privacy}", "received_events_url": "https://api.github.com/users/tianbingleng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-20T00:39:19Z", "updated_at": "2018-12-16T00:13:12Z", "closed_at": "2018-12-16T00:13:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is the code I used, I have two threads to make calls and I applied sleep and retry logic:\r\n\r\n```from ratelimit import limits, sleep_and_retry, RateLimitException\r\n\r\nfrom datetime import datetime\r\nimport _thread\r\nimport time\r\n\r\n\r\nSECONDS = 1\r\ncounter = 0\r\n\r\n\r\n@sleep_and_retry\r\n@limits(calls=10, period=SECONDS)\r\ndef call_api():\r\n    global counter\r\n    counter += 1\r\n    print(str(datetime.now()) + \" calling now \" + str(counter))\r\n\r\n\r\ndef loop(threadName):\r\n    for i in range(20): #0-19\r\n        call_api()\r\n\r\n\r\n\r\n# Create two threads as follows\r\n_thread.start_new_thread(loop, (\"thread-1\",))\r\n_thread.start_new_thread(loop, (\"thread-2\",))\r\n\r\n\r\nwhile 1:\r\n   pass\r\n```\r\n\r\nHowever, I still get the RateLimit Exception:\r\n```\r\n/Users/Documents/PythonWorkSpace/App/test.py\r\n2018-11-19 19:35:58.731326 calling now 1\r\n2018-11-19 19:35:58.731413 calling now 2\r\n2018-11-19 19:35:58.731442 calling now 3\r\n2018-11-19 19:35:58.731461 calling now 4\r\n2018-11-19 19:35:58.731477 calling now 5\r\n2018-11-19 19:35:58.731492 calling now 6\r\n2018-11-19 19:35:58.731506 calling now 7\r\n2018-11-19 19:35:58.731520 calling now 8\r\n2018-11-19 19:35:58.731535 calling now 9\r\n2018-11-19 19:35:58.731563 calling now 10\r\n2018-11-19 19:35:59.735203 calling now 11\r\n2018-11-19 19:35:59.735256 calling now 12\r\n2018-11-19 19:35:59.735278 calling now 13\r\n2018-11-19 19:35:59.735296 calling now 14\r\n2018-11-19 19:35:59.735314 calling now 15\r\n2018-11-19 19:35:59.735332 calling now 16\r\n2018-11-19 19:35:59.735349 calling now 17\r\n2018-11-19 19:35:59.735366 calling now 18\r\n2018-11-19 19:35:59.735382 calling now 19\r\n2018-11-19 19:35:59.735398 calling now 20\r\nUnhandled exception in thread started by <function loop at 0x10a80c9d8>\r\nTraceback (most recent call last):\r\n  File \"/Users/tianbingleng/Documents/PythonWorkSpace/App/venv/lib/python3.6/site-packages/ratelimit/decorators.py\", line 112, in wrapper\r\n    return func(*args, **kargs)\r\n  File \"/Users/tianbingleng/Documents/PythonWorkSpace/App/venv/lib/python3.6/site-packages/ratelimit/decorators.py\", line 77, in wrapper\r\n    raise RateLimitException('too many calls', period_remaining)\r\nratelimit.exception.RateLimitException: too many calls\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/tianbingleng/Documents/PythonWorkSpace/App/test.py\", line 22, in loop\r\n    call_api()\r\n  File \"/Users/tianbingleng/Documents/PythonWorkSpace/App/venv/lib/python3.6/site-packages/ratelimit/decorators.py\", line 115, in wrapper\r\n    return func(*args, **kargs)\r\n  File \"/Users/tianbingleng/Documents/PythonWorkSpace/App/venv/lib/python3.6/site-packages/ratelimit/decorators.py\", line 77, in wrapper\r\n    raise RateLimitException('too many calls', period_remaining)\r\nratelimit.exception.RateLimitException: too many calls\r\n2018-11-19 19:36:00.743977 calling now 21\r\n2018-11-19 19:36:00.744033 calling now 22\r\n2018-11-19 19:36:00.744054 calling now 23\r\n2018-11-19 19:36:00.744071 calling now 24\r\n2018-11-19 19:36:00.744087 calling now 25\r\n2018-11-19 19:36:00.744103 calling now 26\r\n2018-11-19 19:36:00.744119 calling now 27\r\n2018-11-19 19:36:00.744136 calling now 28\r\n2018-11-19 19:36:00.744151 calling now 29\r\n```\r\n\r\nHere, my total tasks should be 40, however, looks like one thread was broken and never retry.\r\n(I know this is work for single thread, and I have tested it worked.)\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/27", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/27/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/27/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/27", "id": 379099399, "node_id": "MDU6SXNzdWUzNzkwOTkzOTk=", "number": 27, "title": "How about a 'space out' or 'nice' mode", "user": {"login": "alexhunsley", "id": 793071, "node_id": "MDQ6VXNlcjc5MzA3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/793071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexhunsley", "html_url": "https://github.com/alexhunsley", "followers_url": "https://api.github.com/users/alexhunsley/followers", "following_url": "https://api.github.com/users/alexhunsley/following{/other_user}", "gists_url": "https://api.github.com/users/alexhunsley/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexhunsley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexhunsley/subscriptions", "organizations_url": "https://api.github.com/users/alexhunsley/orgs", "repos_url": "https://api.github.com/users/alexhunsley/repos", "events_url": "https://api.github.com/users/alexhunsley/events{/privacy}", "received_events_url": "https://api.github.com/users/alexhunsley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-09T10:09:41Z", "updated_at": "2018-11-09T10:51:32Z", "closed_at": "2018-11-09T10:51:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently if I call a limited function continuously, it will execute as much as fast as you want until the limit is hit, and then stop (or exception). Does it make sense to have a 'nice' option for the sleeping, whereby each call will have a pause, so the calls are forced to be equally spaced out during the time period?\r\n\r\nIt just seems nice on the service you're using (I'm using flickr, not twitter) to space out requests, and I think it's nicer to see continuous slower progress, rather than a burst of activity and then a long time doing nothing. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/24", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/24/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/24/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/24", "id": 358322151, "node_id": "MDU6SXNzdWUzNTgzMjIxNTE=", "number": 24, "title": "Best approach to call call_api function", "user": {"login": "argenisleon", "id": 37144, "node_id": "MDQ6VXNlcjM3MTQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/37144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/argenisleon", "html_url": "https://github.com/argenisleon", "followers_url": "https://api.github.com/users/argenisleon/followers", "following_url": "https://api.github.com/users/argenisleon/following{/other_user}", "gists_url": "https://api.github.com/users/argenisleon/gists{/gist_id}", "starred_url": "https://api.github.com/users/argenisleon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/argenisleon/subscriptions", "organizations_url": "https://api.github.com/users/argenisleon/orgs", "repos_url": "https://api.github.com/users/argenisleon/repos", "events_url": "https://api.github.com/users/argenisleon/events{/privacy}", "received_events_url": "https://api.github.com/users/argenisleon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-08T19:34:33Z", "updated_at": "2018-09-13T06:42:26Z", "closed_at": "2018-09-13T06:42:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nIn the documentation, the @limits decorator limits the number of calls that a function can process, but what is the best approach to call call_api() to not fire the ratelimit.RateLimitException?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/21", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/21/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/21/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/21", "id": 346185776, "node_id": "MDU6SXNzdWUzNDYxODU3NzY=", "number": 21, "title": "Accept arg for exponential backoff on retries", "user": {"login": "stevenwu4", "id": 5463865, "node_id": "MDQ6VXNlcjU0NjM4NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5463865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevenwu4", "html_url": "https://github.com/stevenwu4", "followers_url": "https://api.github.com/users/stevenwu4/followers", "following_url": "https://api.github.com/users/stevenwu4/following{/other_user}", "gists_url": "https://api.github.com/users/stevenwu4/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevenwu4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevenwu4/subscriptions", "organizations_url": "https://api.github.com/users/stevenwu4/orgs", "repos_url": "https://api.github.com/users/stevenwu4/repos", "events_url": "https://api.github.com/users/stevenwu4/events{/privacy}", "received_events_url": "https://api.github.com/users/stevenwu4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-31T13:23:53Z", "updated_at": "2018-07-31T13:34:12Z", "closed_at": "2018-07-31T13:34:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some APIs, like Lever, recommend/request for exponential backoff\r\n\r\nhttps://hire.lever.co/developer/documentation#rate-limits", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/19", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/19/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/19/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/19", "id": 325311347, "node_id": "MDU6SXNzdWUzMjUzMTEzNDc=", "number": 19, "title": "BUG? sleep_and_retry only retries once", "user": {"login": "aarcro", "id": 279725, "node_id": "MDQ6VXNlcjI3OTcyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/279725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aarcro", "html_url": "https://github.com/aarcro", "followers_url": "https://api.github.com/users/aarcro/followers", "following_url": "https://api.github.com/users/aarcro/following{/other_user}", "gists_url": "https://api.github.com/users/aarcro/gists{/gist_id}", "starred_url": "https://api.github.com/users/aarcro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aarcro/subscriptions", "organizations_url": "https://api.github.com/users/aarcro/orgs", "repos_url": "https://api.github.com/users/aarcro/repos", "events_url": "https://api.github.com/users/aarcro/events{/privacy}", "received_events_url": "https://api.github.com/users/aarcro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-22T14:08:46Z", "updated_at": "2018-11-10T23:01:54Z", "closed_at": "2018-11-10T23:01:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you're really hammering a rate limited call with multiple threads, the retry can also raise RateLimitException. I'm using this now, and might add a `max_retries` parameter\r\n\r\n```python\r\ndef sleep_and_retry_forever(func):\r\n    '''\r\n    Return a wrapped function that retries rate limit exceptions, sleeping the\r\n    current thread until rate limit resets. Continues to retry until the call makes\r\n    it through.\r\n\r\n    :param function func: The function to decorate.\r\n    :return: Decorated function.\r\n    :rtype: function\r\n    '''\r\n    @wraps(func)\r\n    def wrapper(*args, **kargs):\r\n        '''\r\n        Call the rate limited function. If the function raises a rate limit\r\n        exception sleep for the remaing time period and retry the function, until it succeeds.\r\n        :param args: non-keyword variable length argument list to the decorated function.\r\n        :param kargs: keyworded variable length argument list to the decorated function.\r\n        '''\r\n        done = False\r\n        while not done:\r\n            try:\r\n                return func(*args, **kargs)\r\n                done = True\r\n            except RateLimitException as exception:\r\n                time.sleep(exception.period_remaining)\r\n    return wrapper\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/17", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/17/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/17/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/17", "id": 317603905, "node_id": "MDU6SXNzdWUzMTc2MDM5MDU=", "number": 17, "title": "Reinstate backwards-compatible `rate_limited` function?", "user": {"login": "fawkesley", "id": 254290, "node_id": "MDQ6VXNlcjI1NDI5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/254290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fawkesley", "html_url": "https://github.com/fawkesley", "followers_url": "https://api.github.com/users/fawkesley/followers", "following_url": "https://api.github.com/users/fawkesley/following{/other_user}", "gists_url": "https://api.github.com/users/fawkesley/gists{/gist_id}", "starred_url": "https://api.github.com/users/fawkesley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fawkesley/subscriptions", "organizations_url": "https://api.github.com/users/fawkesley/orgs", "repos_url": "https://api.github.com/users/fawkesley/repos", "events_url": "https://api.github.com/users/fawkesley/events{/privacy}", "received_events_url": "https://api.github.com/users/fawkesley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-25T12:21:06Z", "updated_at": "2018-04-26T20:26:18Z", "closed_at": "2018-04-26T20:26:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems the decorator is now called `limits` and `rate_limited` has disappeared, breaking old code.\r\n\r\nIs it possible to reinstate the old decorator for backwards compatibility?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/16", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/16/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/16/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/16", "id": 312051341, "node_id": "MDU6SXNzdWUzMTIwNTEzNDE=", "number": 16, "title": "Return error instead of waiting", "user": {"login": "ZelphirKaltstahl", "id": 11130348, "node_id": "MDQ6VXNlcjExMTMwMzQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/11130348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZelphirKaltstahl", "html_url": "https://github.com/ZelphirKaltstahl", "followers_url": "https://api.github.com/users/ZelphirKaltstahl/followers", "following_url": "https://api.github.com/users/ZelphirKaltstahl/following{/other_user}", "gists_url": "https://api.github.com/users/ZelphirKaltstahl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZelphirKaltstahl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZelphirKaltstahl/subscriptions", "organizations_url": "https://api.github.com/users/ZelphirKaltstahl/orgs", "repos_url": "https://api.github.com/users/ZelphirKaltstahl/repos", "events_url": "https://api.github.com/users/ZelphirKaltstahl/events{/privacy}", "received_events_url": "https://api.github.com/users/ZelphirKaltstahl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tomasbasham", "id": 3389856, "node_id": "MDQ6VXNlcjMzODk4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3389856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbasham", "html_url": "https://github.com/tomasbasham", "followers_url": "https://api.github.com/users/tomasbasham/followers", "following_url": "https://api.github.com/users/tomasbasham/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbasham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbasham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbasham/subscriptions", "organizations_url": "https://api.github.com/users/tomasbasham/orgs", "repos_url": "https://api.github.com/users/tomasbasham/repos", "events_url": "https://api.github.com/users/tomasbasham/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbasham/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tomasbasham", "id": 3389856, "node_id": "MDQ6VXNlcjMzODk4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3389856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbasham", "html_url": "https://github.com/tomasbasham", "followers_url": "https://api.github.com/users/tomasbasham/followers", "following_url": "https://api.github.com/users/tomasbasham/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbasham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbasham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbasham/subscriptions", "organizations_url": "https://api.github.com/users/tomasbasham/orgs", "repos_url": "https://api.github.com/users/tomasbasham/repos", "events_url": "https://api.github.com/users/tomasbasham/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbasham/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-04-06T17:12:21Z", "updated_at": "2018-04-23T06:56:14Z", "closed_at": "2018-04-23T06:56:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a feature request.\r\n\r\nIt would be great, if there was a way to return an error, if there are too many calls of the limited function, instead of simply waiting and still doing the requested thing later. Perhaps a third parameter in the decorator, which takes an error class?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/15", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/15/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/15/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/15", "id": 303523085, "node_id": "MDU6SXNzdWUzMDM1MjMwODU=", "number": 15, "title": "Running once in x time instead of up to y times in x time", "user": {"login": "rola93", "id": 25650996, "node_id": "MDQ6VXNlcjI1NjUwOTk2", "avatar_url": "https://avatars2.githubusercontent.com/u/25650996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rola93", "html_url": "https://github.com/rola93", "followers_url": "https://api.github.com/users/rola93/followers", "following_url": "https://api.github.com/users/rola93/following{/other_user}", "gists_url": "https://api.github.com/users/rola93/gists{/gist_id}", "starred_url": "https://api.github.com/users/rola93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rola93/subscriptions", "organizations_url": "https://api.github.com/users/rola93/orgs", "repos_url": "https://api.github.com/users/rola93/repos", "events_url": "https://api.github.com/users/rola93/events{/privacy}", "received_events_url": "https://api.github.com/users/rola93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tomasbasham", "id": 3389856, "node_id": "MDQ6VXNlcjMzODk4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3389856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbasham", "html_url": "https://github.com/tomasbasham", "followers_url": "https://api.github.com/users/tomasbasham/followers", "following_url": "https://api.github.com/users/tomasbasham/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbasham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbasham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbasham/subscriptions", "organizations_url": "https://api.github.com/users/tomasbasham/orgs", "repos_url": "https://api.github.com/users/tomasbasham/repos", "events_url": "https://api.github.com/users/tomasbasham/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbasham/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tomasbasham", "id": 3389856, "node_id": "MDQ6VXNlcjMzODk4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3389856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbasham", "html_url": "https://github.com/tomasbasham", "followers_url": "https://api.github.com/users/tomasbasham/followers", "following_url": "https://api.github.com/users/tomasbasham/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbasham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbasham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbasham/subscriptions", "organizations_url": "https://api.github.com/users/tomasbasham/orgs", "repos_url": "https://api.github.com/users/tomasbasham/repos", "events_url": "https://api.github.com/users/tomasbasham/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbasham/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-03-08T15:34:59Z", "updated_at": "2018-04-25T20:26:14Z", "closed_at": "2018-04-25T20:26:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just to clarify, let me show an example: wheen you set it up for 10 calls in 100 seconds, it lets you call it once every ten seconds, which is not exactly the same. See the following example:\r\n\r\n```\r\n>>> from ratelimit import rate_limited\r\n>>> import datetime\r\n>>> import time\r\n>>> @rate_limited(10,100)\r\n... def test(i=1):\r\n...     ts = time.time()\r\n...     st = datetime.datetime.fromtimestamp(ts).strftime('%H:%M:%S')\r\n...     print(\"{}::  {}\".format(i, st))\r\n... \r\n>>> for i in range(12):\r\n...     test()\r\n... \r\n1::  12:14:05\r\n1::  12:14:15\r\n1::  12:14:25\r\n1::  12:14:35\r\n1::  12:14:45\r\n1::  12:14:55\r\n1::  12:15:05\r\n1::  12:15:15\r\n1::  12:15:25\r\n1::  12:15:35\r\n1::  12:15:45\r\n1::  12:15:55\r\n>>>\r\n\r\n\r\n```\r\n\r\nI was expecting test() function to be called 10 times and then be blocked, but instead, there is only one call in 10 seconds. Is there a way to get the behaviour I'm expecting?\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/11", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/11/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/11/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/11", "id": 259903871, "node_id": "MDU6SXNzdWUyNTk5MDM4NzE=", "number": 11, "title": "Use monotonic time when available", "user": {"login": "joell", "id": 840599, "node_id": "MDQ6VXNlcjg0MDU5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/840599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joell", "html_url": "https://github.com/joell", "followers_url": "https://api.github.com/users/joell/followers", "following_url": "https://api.github.com/users/joell/following{/other_user}", "gists_url": "https://api.github.com/users/joell/gists{/gist_id}", "starred_url": "https://api.github.com/users/joell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joell/subscriptions", "organizations_url": "https://api.github.com/users/joell/orgs", "repos_url": "https://api.github.com/users/joell/repos", "events_url": "https://api.github.com/users/joell/events{/privacy}", "received_events_url": "https://api.github.com/users/joell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tomasbasham", "id": 3389856, "node_id": "MDQ6VXNlcjMzODk4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3389856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbasham", "html_url": "https://github.com/tomasbasham", "followers_url": "https://api.github.com/users/tomasbasham/followers", "following_url": "https://api.github.com/users/tomasbasham/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbasham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbasham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbasham/subscriptions", "organizations_url": "https://api.github.com/users/tomasbasham/orgs", "repos_url": "https://api.github.com/users/tomasbasham/repos", "events_url": "https://api.github.com/users/tomasbasham/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbasham/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tomasbasham", "id": 3389856, "node_id": "MDQ6VXNlcjMzODk4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3389856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbasham", "html_url": "https://github.com/tomasbasham", "followers_url": "https://api.github.com/users/tomasbasham/followers", "following_url": "https://api.github.com/users/tomasbasham/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbasham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbasham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbasham/subscriptions", "organizations_url": "https://api.github.com/users/tomasbasham/orgs", "repos_url": "https://api.github.com/users/tomasbasham/repos", "events_url": "https://api.github.com/users/tomasbasham/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbasham/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-09-22T18:46:29Z", "updated_at": "2018-04-17T20:44:27Z", "closed_at": "2018-04-17T20:44:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/tomasbasham/ratelimit/blob/fcdead12d0e90741fb04f391409b4dee04804207/ratelimit/__init__.py#L48\r\n\r\nWhen using `time.time()`, algorithms like rate limiting are susceptible to violent changes to the system clock, including things like the system time moving backwards.  It turns out the system clock is a [lot less](http://infiniteundo.com/post/25326999628/falsehoods-programmers-believe-about-time) [reliable](http://infiniteundo.com/post/25509354022/more-falsehoods-programmers-believe-about-time) than we often presume.  Examples of this can be from things like VMs being resumed from suspension and correcting their clock, to NTP making large clock adjustments, to UTC leap seconds.\r\n\r\nIn Python 3.3, a [`time.monotonic`](https://docs.python.org/3/library/time.html#time.monotonic) function was introduced, and in Python 3.5, it was made available on all platforms.  This function will use the system monotonic clock, which -- while not suitable for algorithms that make calendar computations -- works reliably for algorithms making time-offset computations, such as rate limiting.  It has the advantage of avoiding some of the worst of the system clock changes I mentioned above, thereby making rate limiting more reliable.\r\n\r\nMy suggestion would be to do a check just after module imports for the `time.monotonic` function if it is available and to use it if it is; possibly something like this at the top of the module:\r\n```python\r\nimport time\r\nget_time = time.monotonic if hasattr(time, 'monotonic') else time.time\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/9", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/9/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/9/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/9", "id": 248250152, "node_id": "MDU6SXNzdWUyNDgyNTAxNTI=", "number": 9, "title": "Concurrency issues", "user": {"login": "ginward", "id": 6193977, "node_id": "MDQ6VXNlcjYxOTM5Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6193977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ginward", "html_url": "https://github.com/ginward", "followers_url": "https://api.github.com/users/ginward/followers", "following_url": "https://api.github.com/users/ginward/following{/other_user}", "gists_url": "https://api.github.com/users/ginward/gists{/gist_id}", "starred_url": "https://api.github.com/users/ginward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ginward/subscriptions", "organizations_url": "https://api.github.com/users/ginward/orgs", "repos_url": "https://api.github.com/users/ginward/repos", "events_url": "https://api.github.com/users/ginward/events{/privacy}", "received_events_url": "https://api.github.com/users/ginward/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-06T14:23:27Z", "updated_at": "2017-08-06T19:25:50Z", "closed_at": "2017-08-06T19:25:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed the code [here](https://github.com/tomasbasham/ratelimit/blob/1f921dedc8286363e5c355ba0188b6ed6a95b740/ratelimit/__init__.py#L40-L46) has been changed since my [last commit](https://github.com/tomasbasham/ratelimit/blob/ea16e71bb635499ff5701f20817391fda246ed94/ratelimit/__init__.py#L32-L38). \r\n\r\nI do realize that my version will probably block 2 or more threads from accessing the API call at the same time, thus compromising my intention of multithreading. However, it seems that the new code might have issues on that subject too.\r\n\r\n            with lock:\r\n                elapsed = time.time() - last_called[0]\r\n            left_to_wait = frequency - elapsed\r\n            if left_to_wait > 0:\r\n                time.sleep(left_to_wait)\r\n            ret = func(*args, **kargs)\r\n            last_called[0] = time.time()\r\n            return ret\r\n\r\nThe above code only locks the operation `elapsed = time.time() - last_called[0]`, but not the operation `last_called[0] = time.time()`. Now, for example, if `func` call is an operation that blocks for 20 seconds (maybe due to slow API communications), and my frequency is 1 second, and I have 10 threads at the same time. What is going to happen?\r\n\r\nThe first thread will acquire the lock, calculate the elapsed, release the lock, run `func`, which will block for 20 seconds. Note that last_called[0] will not be updated during the 20 seconds! Therefore, during the 20 seconds, all of my other 9 threads will be able to acquire and release the lock, call func. If more than 2 threads call `func` in one second, the effect of the rate limiter will be compromised. \r\n\r\nTherefore, I propose the [change](https://github.com/tomasbasham/ratelimit/pull/8). \r\n\r\nNote that I [moved](https://github.com/ginward/ratelimit/blob/0505cdb0f687b3b9f60923672462a598a7dfc043/ratelimit/__init__.py#L41-L45) the last_called[0] within the lock structure. The advantage is that if func blocks for a bit, the threads won't block. \r\n\r\nI tested the code with the following code: \r\n```\r\nimport time\r\nimport threading\r\n@rate_limited(2, 1)\r\ndef increment():\r\n    '''\r\n    Increment the counter at most twice every second.\r\n    '''\r\n    time.sleep(5)\r\n    print time.time()\r\n\r\nthread1 = threading.Thread(target = increment)\r\nthread2 = threading.Thread(target = increment)\r\nthread3 = threading.Thread(target = increment)\r\n\r\nthread1.start()\r\nthread2.start()\r\nthread3.start()\r\n```\r\nThe output of the [old commit](https://github.com/tomasbasham/ratelimit/blob/1f921dedc8286363e5c355ba0188b6ed6a95b740/ratelimit/__init__.py) is: \r\n\r\n`1502028965.591502028965.591502028965.59`\r\n\r\nThe output of my [new commit](https://github.com/ginward/ratelimit/blob/0505cdb0f687b3b9f60923672462a598a7dfc043/ratelimit/__init__.py) is: \r\n\r\n```\r\n1502029318.34\r\n1502029318.84\r\n1502029319.35\r\n```\r\nApparently, all three threads called the same function at the same seconds in the old commit, which broke the limit. While the new commit ensures the limit. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/3", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/3/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/3/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/3", "id": 227806069, "node_id": "MDU6SXNzdWUyMjc4MDYwNjk=", "number": 3, "title": "caller is also blocked?", "user": {"login": "mangodan2003", "id": 2872937, "node_id": "MDQ6VXNlcjI4NzI5Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2872937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mangodan2003", "html_url": "https://github.com/mangodan2003", "followers_url": "https://api.github.com/users/mangodan2003/followers", "following_url": "https://api.github.com/users/mangodan2003/following{/other_user}", "gists_url": "https://api.github.com/users/mangodan2003/gists{/gist_id}", "starred_url": "https://api.github.com/users/mangodan2003/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mangodan2003/subscriptions", "organizations_url": "https://api.github.com/users/mangodan2003/orgs", "repos_url": "https://api.github.com/users/mangodan2003/repos", "events_url": "https://api.github.com/users/mangodan2003/events{/privacy}", "received_events_url": "https://api.github.com/users/mangodan2003/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tomasbasham", "id": 3389856, "node_id": "MDQ6VXNlcjMzODk4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3389856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbasham", "html_url": "https://github.com/tomasbasham", "followers_url": "https://api.github.com/users/tomasbasham/followers", "following_url": "https://api.github.com/users/tomasbasham/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbasham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbasham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbasham/subscriptions", "organizations_url": "https://api.github.com/users/tomasbasham/orgs", "repos_url": "https://api.github.com/users/tomasbasham/repos", "events_url": "https://api.github.com/users/tomasbasham/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbasham/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tomasbasham", "id": 3389856, "node_id": "MDQ6VXNlcjMzODk4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3389856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbasham", "html_url": "https://github.com/tomasbasham", "followers_url": "https://api.github.com/users/tomasbasham/followers", "following_url": "https://api.github.com/users/tomasbasham/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbasham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbasham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbasham/subscriptions", "organizations_url": "https://api.github.com/users/tomasbasham/orgs", "repos_url": "https://api.github.com/users/tomasbasham/repos", "events_url": "https://api.github.com/users/tomasbasham/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbasham/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-05-10T20:48:54Z", "updated_at": "2018-04-17T20:46:32Z", "closed_at": "2018-04-17T20:46:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following :\r\n```\r\nfrom ratelimit import *\r\nfrom time import sleep\r\nimport datetime\r\n\r\nclass Foo(object):\r\n  def A(self):\r\n    print('A called at {}'.format(datetime.datetime.now()))\r\n    self.B()\r\n\r\n  @rate_limited(1,10)\r\n  def B(self):\r\n    print('B called at {}'.format(datetime.datetime.now()))\r\n\r\n\r\nfoo = Foo()\r\n\r\nwhile True:\r\n  foo.A()\r\n  sleep(1)\r\n```\r\n\r\nI don't think this behaves as intended?\r\n```\r\npython2 testratelimit.py \r\nA called at 2017-05-10 21:47:26.014120\r\nB called at 2017-05-10 21:47:35.957787\r\nA called at 2017-05-10 21:47:36.958130\r\nB called at 2017-05-10 21:47:46.960392\r\nA called at 2017-05-10 21:47:47.961745\r\n```\r\n\r\nOh, maybe the call to B is limited by sleeping rather than just doesn't happen - this makes more sense come to think of it - just not what i needed. nevermind.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/2", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/2/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/2/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/2", "id": 227802442, "node_id": "MDU6SXNzdWUyMjc4MDI0NDI=", "number": 2, "title": "First call is blocked.", "user": {"login": "mangodan2003", "id": 2872937, "node_id": "MDQ6VXNlcjI4NzI5Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2872937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mangodan2003", "html_url": "https://github.com/mangodan2003", "followers_url": "https://api.github.com/users/mangodan2003/followers", "following_url": "https://api.github.com/users/mangodan2003/following{/other_user}", "gists_url": "https://api.github.com/users/mangodan2003/gists{/gist_id}", "starred_url": "https://api.github.com/users/mangodan2003/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mangodan2003/subscriptions", "organizations_url": "https://api.github.com/users/mangodan2003/orgs", "repos_url": "https://api.github.com/users/mangodan2003/repos", "events_url": "https://api.github.com/users/mangodan2003/events{/privacy}", "received_events_url": "https://api.github.com/users/mangodan2003/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tomasbasham", "id": 3389856, "node_id": "MDQ6VXNlcjMzODk4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3389856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbasham", "html_url": "https://github.com/tomasbasham", "followers_url": "https://api.github.com/users/tomasbasham/followers", "following_url": "https://api.github.com/users/tomasbasham/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbasham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbasham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbasham/subscriptions", "organizations_url": "https://api.github.com/users/tomasbasham/orgs", "repos_url": "https://api.github.com/users/tomasbasham/repos", "events_url": "https://api.github.com/users/tomasbasham/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbasham/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tomasbasham", "id": 3389856, "node_id": "MDQ6VXNlcjMzODk4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3389856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbasham", "html_url": "https://github.com/tomasbasham", "followers_url": "https://api.github.com/users/tomasbasham/followers", "following_url": "https://api.github.com/users/tomasbasham/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbasham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbasham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbasham/subscriptions", "organizations_url": "https://api.github.com/users/tomasbasham/orgs", "repos_url": "https://api.github.com/users/tomasbasham/repos", "events_url": "https://api.github.com/users/tomasbasham/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbasham/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-05-10T20:34:45Z", "updated_at": "2018-04-17T20:47:48Z", "closed_at": "2018-04-17T20:47:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "As mentioned in https://github.com/tomasbasham/ratelimit/issues/1 - the first call gets blocked.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/1", "repository_url": "https://api.github.com/repos/tomasbasham/ratelimit", "labels_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/1/comments", "events_url": "https://api.github.com/repos/tomasbasham/ratelimit/issues/1/events", "html_url": "https://github.com/tomasbasham/ratelimit/issues/1", "id": 204866798, "node_id": "MDU6SXNzdWUyMDQ4NjY3OTg=", "number": 1, "title": "The rate limit `period` appears to be a `frequency` (inverted logic)", "user": {"login": "fawkesley", "id": 254290, "node_id": "MDQ6VXNlcjI1NDI5MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/254290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fawkesley", "html_url": "https://github.com/fawkesley", "followers_url": "https://api.github.com/users/fawkesley/followers", "following_url": "https://api.github.com/users/fawkesley/following{/other_user}", "gists_url": "https://api.github.com/users/fawkesley/gists{/gist_id}", "starred_url": "https://api.github.com/users/fawkesley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fawkesley/subscriptions", "organizations_url": "https://api.github.com/users/fawkesley/orgs", "repos_url": "https://api.github.com/users/fawkesley/repos", "events_url": "https://api.github.com/users/fawkesley/events{/privacy}", "received_events_url": "https://api.github.com/users/fawkesley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tomasbasham", "id": 3389856, "node_id": "MDQ6VXNlcjMzODk4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3389856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbasham", "html_url": "https://github.com/tomasbasham", "followers_url": "https://api.github.com/users/tomasbasham/followers", "following_url": "https://api.github.com/users/tomasbasham/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbasham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbasham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbasham/subscriptions", "organizations_url": "https://api.github.com/users/tomasbasham/orgs", "repos_url": "https://api.github.com/users/tomasbasham/repos", "events_url": "https://api.github.com/users/tomasbasham/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbasham/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tomasbasham", "id": 3389856, "node_id": "MDQ6VXNlcjMzODk4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/3389856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasbasham", "html_url": "https://github.com/tomasbasham", "followers_url": "https://api.github.com/users/tomasbasham/followers", "following_url": "https://api.github.com/users/tomasbasham/following{/other_user}", "gists_url": "https://api.github.com/users/tomasbasham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasbasham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasbasham/subscriptions", "organizations_url": "https://api.github.com/users/tomasbasham/orgs", "repos_url": "https://api.github.com/users/tomasbasham/repos", "events_url": "https://api.github.com/users/tomasbasham/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasbasham/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-02-02T13:02:31Z", "updated_at": "2017-02-16T10:09:07Z", "closed_at": "2017-02-16T10:09:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I just scratched my head over this for a while then I made the following simple test:\r\n\r\n```python\r\nimport datetime\r\n\r\nfrom ratelimit import rate_limited\r\n\r\n\r\n@rate_limited(2)\r\ndef rate_limited_function():\r\n    print(\"function called at: {}\".format(datetime.datetime.now()))\r\n\r\nif __name__ == '__main__':\r\n    while True:\r\n        rate_limited_function()\r\n```\r\n\r\nwhich produces the following output:\r\n\r\n```\r\nfunction called at: 2017-02-02 12:51:00.969778\r\nfunction called at: 2017-02-02 12:51:01.470701\r\nfunction called at: 2017-02-02 12:51:01.971523\r\nfunction called at: 2017-02-02 12:51:02.472208\r\nfunction called at: 2017-02-02 12:51:02.972889\r\nfunction called at: 2017-02-02 12:51:03.473723\r\n```\r\ne.g. the it's rate limiting the function call to once every 0.5 seconds, not once every 2 seconds.\r\n\r\nconversely, passing a period of `0.5` runs the function every 2 seconds: (and curiously it doesn't do the first call for 2 seconds)\r\n\r\n```\r\nfunction called at: 2017-02-02 12:58:56.494749\r\nfunction called at: 2017-02-02 12:58:58.496957\r\nfunction called at: 2017-02-02 12:59:00.499353\r\nfunction called at: 2017-02-02 12:59:02.501679\r\n```\r\n\r\n\r\nThe README says \"The argument passed into the decorator imposes the time that must elapse before a method can be called again.\" and the argument is called `period` so I believe passing `period=2` is supposed to mean \"no more than every 2 seconds\". But seemingly the logic is inverted.\r\n\r\nThere's a very simple, thread safe, [imer-based approach you might like to consider at [http://stackoverflow.com/questions/30918772/rate-limiting-python-decorator/30918773#30918773](http://stackoverflow.com/questions/30918772/rate-limiting-python-decorator/30918773#30918773)", "performed_via_github_app": null, "score": 1.0}]}