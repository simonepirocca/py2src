{"total_count": 62, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/246", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/246/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/246/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/246", "id": 676368910, "node_id": "MDU6SXNzdWU2NzYzNjg5MTA=", "number": 246, "title": "Avoid losing metrics", "user": {"login": "marianobianchi", "id": 1700075, "node_id": "MDQ6VXNlcjE3MDAwNzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1700075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marianobianchi", "html_url": "https://github.com/marianobianchi", "followers_url": "https://api.github.com/users/marianobianchi/followers", "following_url": "https://api.github.com/users/marianobianchi/following{/other_user}", "gists_url": "https://api.github.com/users/marianobianchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/marianobianchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marianobianchi/subscriptions", "organizations_url": "https://api.github.com/users/marianobianchi/orgs", "repos_url": "https://api.github.com/users/marianobianchi/repos", "events_url": "https://api.github.com/users/marianobianchi/events{/privacy}", "received_events_url": "https://api.github.com/users/marianobianchi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-10T19:38:06Z", "updated_at": "2020-08-10T20:06:55Z", "closed_at": "2020-08-10T20:06:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to avoid losing metrics after restarting the server?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/232", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/232/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/232/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/232", "id": 648871077, "node_id": "MDU6SXNzdWU2NDg4NzEwNzc=", "number": 232, "title": "Documentation comparison to alternative tools", "user": {"login": "dnk8n", "id": 3307753, "node_id": "MDQ6VXNlcjMzMDc3NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3307753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnk8n", "html_url": "https://github.com/dnk8n", "followers_url": "https://api.github.com/users/dnk8n/followers", "following_url": "https://api.github.com/users/dnk8n/following{/other_user}", "gists_url": "https://api.github.com/users/dnk8n/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnk8n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnk8n/subscriptions", "organizations_url": "https://api.github.com/users/dnk8n/orgs", "repos_url": "https://api.github.com/users/dnk8n/repos", "events_url": "https://api.github.com/users/dnk8n/events{/privacy}", "received_events_url": "https://api.github.com/users/dnk8n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-01T10:32:04Z", "updated_at": "2020-07-02T01:58:33Z", "closed_at": "2020-07-02T01:58:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reading through the docs I have a few questions about how this system can interact with other systems like Sentry, Rollbar, etc.\r\n\r\nIs this a direct competitor and therefore should be chosen instead of the above?\r\n\r\nJust a few lines explaining things to potential users.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/219", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/219/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/219/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/219", "id": 624374891, "node_id": "MDU6SXNzdWU2MjQzNzQ4OTE=", "number": 219, "title": "Pin Dependencies to Minor Versions", "user": {"login": "nils-wisiol", "id": 1026940, "node_id": "MDQ6VXNlcjEwMjY5NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1026940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-wisiol", "html_url": "https://github.com/nils-wisiol", "followers_url": "https://api.github.com/users/nils-wisiol/followers", "following_url": "https://api.github.com/users/nils-wisiol/following{/other_user}", "gists_url": "https://api.github.com/users/nils-wisiol/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-wisiol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-wisiol/subscriptions", "organizations_url": "https://api.github.com/users/nils-wisiol/orgs", "repos_url": "https://api.github.com/users/nils-wisiol/repos", "events_url": "https://api.github.com/users/nils-wisiol/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-wisiol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-25T15:47:47Z", "updated_at": "2020-05-25T16:25:25Z", "closed_at": "2020-05-25T16:25:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, requirements.txt pulls the newest version of many dependencies, e.g. prometheus-client. The latest update of prometheus-client from 0.7.1 to 0.8.0 changed a public API on which my application relied on. While I'm pulling django-prometheus~=2.0.0 for my application, I received unknowingly 0.8.0 of prometheus-client, which broke my application. \r\n\r\nThis is to propose that all dependencies of django-prometheus are fixed on their current minor* releases and regularily updated, together with new relases of django-prometheus.\r\n\r\n*Edited for clarity: by minor version, I mean the second part of the typical Python versioning scheme, e.g. 2 in 1.2.3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/214", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/214/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/214/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/214", "id": 579291541, "node_id": "MDU6SXNzdWU1NzkyOTE1NDE=", "number": 214, "title": "Prefix metrics", "user": {"login": "jadolg", "id": 5427672, "node_id": "MDQ6VXNlcjU0Mjc2NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5427672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jadolg", "html_url": "https://github.com/jadolg", "followers_url": "https://api.github.com/users/jadolg/followers", "following_url": "https://api.github.com/users/jadolg/following{/other_user}", "gists_url": "https://api.github.com/users/jadolg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jadolg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jadolg/subscriptions", "organizations_url": "https://api.github.com/users/jadolg/orgs", "repos_url": "https://api.github.com/users/jadolg/repos", "events_url": "https://api.github.com/users/jadolg/events{/privacy}", "received_events_url": "https://api.github.com/users/jadolg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-11T14:08:20Z", "updated_at": "2020-04-25T15:21:17Z", "closed_at": "2020-04-25T15:21:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to prefix every metric of my project so instead of, for instance, `django_http_responses_total_by_status_view_method_total` I could have `myproject_django_http_responses_total_by_status_view_method_total` ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/213", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/213/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/213/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/213", "id": 578039081, "node_id": "MDU6SXNzdWU1NzgwMzkwODE=", "number": 213, "title": "django_http_requests_latency_seconds_by_view_method_count", "user": {"login": "dezmaeth", "id": 995012, "node_id": "MDQ6VXNlcjk5NTAxMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/995012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dezmaeth", "html_url": "https://github.com/dezmaeth", "followers_url": "https://api.github.com/users/dezmaeth/followers", "following_url": "https://api.github.com/users/dezmaeth/following{/other_user}", "gists_url": "https://api.github.com/users/dezmaeth/gists{/gist_id}", "starred_url": "https://api.github.com/users/dezmaeth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dezmaeth/subscriptions", "organizations_url": "https://api.github.com/users/dezmaeth/orgs", "repos_url": "https://api.github.com/users/dezmaeth/repos", "events_url": "https://api.github.com/users/dezmaeth/events{/privacy}", "received_events_url": "https://api.github.com/users/dezmaeth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T16:38:27Z", "updated_at": "2020-04-25T15:21:50Z", "closed_at": "2020-04-25T15:21:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "what is the metric unit here? i receive values ranging from 1 to 50, which if seconds , it doesnt make any sense", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/207", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/207/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/207/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/207", "id": 554175719, "node_id": "MDU6SXNzdWU1NTQxNzU3MTk=", "number": 207, "title": "Upgrade middleware to `MIDDLEWARE`", "user": {"login": "puittenbroek", "id": 1254185, "node_id": "MDQ6VXNlcjEyNTQxODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1254185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puittenbroek", "html_url": "https://github.com/puittenbroek", "followers_url": "https://api.github.com/users/puittenbroek/followers", "following_url": "https://api.github.com/users/puittenbroek/following{/other_user}", "gists_url": "https://api.github.com/users/puittenbroek/gists{/gist_id}", "starred_url": "https://api.github.com/users/puittenbroek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puittenbroek/subscriptions", "organizations_url": "https://api.github.com/users/puittenbroek/orgs", "repos_url": "https://api.github.com/users/puittenbroek/repos", "events_url": "https://api.github.com/users/puittenbroek/events{/privacy}", "received_events_url": "https://api.github.com/users/puittenbroek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "asherf", "id": 1268088, "node_id": "MDQ6VXNlcjEyNjgwODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1268088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asherf", "html_url": "https://github.com/asherf", "followers_url": "https://api.github.com/users/asherf/followers", "following_url": "https://api.github.com/users/asherf/following{/other_user}", "gists_url": "https://api.github.com/users/asherf/gists{/gist_id}", "starred_url": "https://api.github.com/users/asherf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asherf/subscriptions", "organizations_url": "https://api.github.com/users/asherf/orgs", "repos_url": "https://api.github.com/users/asherf/repos", "events_url": "https://api.github.com/users/asherf/events{/privacy}", "received_events_url": "https://api.github.com/users/asherf/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asherf", "id": 1268088, "node_id": "MDQ6VXNlcjEyNjgwODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1268088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asherf", "html_url": "https://github.com/asherf", "followers_url": "https://api.github.com/users/asherf/followers", "following_url": "https://api.github.com/users/asherf/following{/other_user}", "gists_url": "https://api.github.com/users/asherf/gists{/gist_id}", "starred_url": "https://api.github.com/users/asherf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asherf/subscriptions", "organizations_url": "https://api.github.com/users/asherf/orgs", "repos_url": "https://api.github.com/users/asherf/repos", "events_url": "https://api.github.com/users/asherf/events{/privacy}", "received_events_url": "https://api.github.com/users/asherf/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-01-23T14:00:55Z", "updated_at": "2020-02-03T07:32:57Z", "closed_at": "2020-01-23T19:58:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "> Old-style middleware that uses settings.MIDDLEWARE_CLASSES are deprecated. Adapt old, custom middleware and use the new MIDDLEWARE setting.\r\n\r\nCurrently the middleware is using `MiddlewareMixin` and the old `MIDDLEWARE_CLASSES`.\r\nSince the prometheus middleware doesn't do *that* much, it should be easy enough to upgrade this.\r\n\r\nSee also:\r\nhttps://docs.djangoproject.com/en/3.0/topics/http/middleware/#writing-your-own-middleware", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/202", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/202/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/202/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/202", "id": 541448858, "node_id": "MDU6SXNzdWU1NDE0NDg4NTg=", "number": 202, "title": "django.core.exceptions.ImproperlyConfigured", "user": {"login": "darkvodka", "id": 59097333, "node_id": "MDQ6VXNlcjU5MDk3MzMz", "avatar_url": "https://avatars0.githubusercontent.com/u/59097333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkvodka", "html_url": "https://github.com/darkvodka", "followers_url": "https://api.github.com/users/darkvodka/followers", "following_url": "https://api.github.com/users/darkvodka/following{/other_user}", "gists_url": "https://api.github.com/users/darkvodka/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkvodka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkvodka/subscriptions", "organizations_url": "https://api.github.com/users/darkvodka/orgs", "repos_url": "https://api.github.com/users/darkvodka/repos", "events_url": "https://api.github.com/users/darkvodka/events{/privacy}", "received_events_url": "https://api.github.com/users/darkvodka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "asherf", "id": 1268088, "node_id": "MDQ6VXNlcjEyNjgwODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1268088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asherf", "html_url": "https://github.com/asherf", "followers_url": "https://api.github.com/users/asherf/followers", "following_url": "https://api.github.com/users/asherf/following{/other_user}", "gists_url": "https://api.github.com/users/asherf/gists{/gist_id}", "starred_url": "https://api.github.com/users/asherf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asherf/subscriptions", "organizations_url": "https://api.github.com/users/asherf/orgs", "repos_url": "https://api.github.com/users/asherf/repos", "events_url": "https://api.github.com/users/asherf/events{/privacy}", "received_events_url": "https://api.github.com/users/asherf/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asherf", "id": 1268088, "node_id": "MDQ6VXNlcjEyNjgwODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1268088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asherf", "html_url": "https://github.com/asherf", "followers_url": "https://api.github.com/users/asherf/followers", "following_url": "https://api.github.com/users/asherf/following{/other_user}", "gists_url": "https://api.github.com/users/asherf/gists{/gist_id}", "starred_url": "https://api.github.com/users/asherf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asherf/subscriptions", "organizations_url": "https://api.github.com/users/asherf/orgs", "repos_url": "https://api.github.com/users/asherf/repos", "events_url": "https://api.github.com/users/asherf/events{/privacy}", "received_events_url": "https://api.github.com/users/asherf/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-12-22T13:08:53Z", "updated_at": "2020-01-20T23:41:44Z", "closed_at": "2020-01-20T23:41:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhen I add  'django_prometheus', in installed_apps, I have this error:\r\n\r\n```\r\n root@76f199f461d6:/code/c_ou# python manage.py check\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 21, in <module>\r\n    main()\r\n  File \"manage.py\", line 17, in main\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/core/management/__init__.py\", line 357, in execute\r\n    django.setup()\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/apps/registry.py\", line 122, in populate\r\n    app_config.ready()\r\n  File \"/usr/local/lib/python3.6/dist-packages/django_prometheus/apps.py\", line 24, in ready\r\n    ExportMigrations()\r\n  File \"/usr/local/lib/python3.6/dist-packages/django_prometheus/migrations.py\", line 47, in ExportMigrations\r\n    executor = MigrationExecutor(connections[alias])\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/db/migrations/executor.py\", line 18, in __init__\r\n    self.loader = MigrationLoader(self.connection)\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/db/migrations/loader.py\", line 49, in __init__\r\n    self.build_graph()\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/db/migrations/loader.py\", line 212, in build_graph\r\n    self.applied_migrations = recorder.applied_migrations()\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/db/migrations/recorder.py\", line 73, in applied_migrations\r\n    if self.has_table():\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/db/migrations/recorder.py\", line 56, in has_table\r\n    return self.Migration._meta.db_table in self.connection.introspection.table_names(self.connection.cursor())\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/db/backends/base/base.py\", line 256, in cursor\r\n    return self._cursor()\r\n  File \"/usr/local/lib/python3.6/dist-packages/django/db/backends/dummy/base.py\", line 20, in complain\r\n    raise ImproperlyConfigured(\"settings.DATABASES is improperly configured. \"\r\ndjango.core.exceptions.ImproperlyConfigured: settings.DATABASES is improperly configured. Please supply the ENGINE value. Check settings documentation for more details.\r\n```\r\n\r\nIf I remove django_prometheus, everything works.\r\n\r\nMy database configuration :\r\nDATABASES = {\r\n    'default': {\r\n        #'ENGINE': 'django.db.backends.mysql', \r\n        'ENGINE': 'django_prometheus.db.backends.mysql',\r\n        'NAME': 'dbname',\r\n        'USER': 'user',\r\n        'PASSWORD': 'password',\r\n        'HOST': 'mysql',   # Or an IP Address that your DB is hosted on\r\n        'PORT': '3306',\r\n    },\r\n    **'OPTIONS': {\r\n        'init_command': 'SET default_storage_engine=INNODB',\r\n    }**\r\n}\r\n\r\nI must remove the \"options\" part to use django-prometheus.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/200", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/200/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/200/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/200", "id": 536349534, "node_id": "MDU6SXNzdWU1MzYzNDk1MzQ=", "number": 200, "title": "Pip version install content mismatch", "user": {"login": "Julio0025", "id": 12599266, "node_id": "MDQ6VXNlcjEyNTk5MjY2", "avatar_url": "https://avatars2.githubusercontent.com/u/12599266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julio0025", "html_url": "https://github.com/Julio0025", "followers_url": "https://api.github.com/users/Julio0025/followers", "following_url": "https://api.github.com/users/Julio0025/following{/other_user}", "gists_url": "https://api.github.com/users/Julio0025/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julio0025/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julio0025/subscriptions", "organizations_url": "https://api.github.com/users/Julio0025/orgs", "repos_url": "https://api.github.com/users/Julio0025/repos", "events_url": "https://api.github.com/users/Julio0025/events{/privacy}", "received_events_url": "https://api.github.com/users/Julio0025/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-11T12:50:21Z", "updated_at": "2020-01-20T23:42:07Z", "closed_at": "2020-01-20T23:42:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have installed via pip 1.1.0 version, but the contents are diffrent. For example it doesnt have any of these  commits #193 in the pip instalation, even though they are talked about in the documentation.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/197", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/197/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/197/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/197", "id": 531077410, "node_id": "MDU6SXNzdWU1MzEwNzc0MTA=", "number": 197, "title": "MultiProcessCollector isn't used when running a dedicated server", "user": {"login": "nathanreynolds-entura", "id": 56919923, "node_id": "MDQ6VXNlcjU2OTE5OTIz", "avatar_url": "https://avatars1.githubusercontent.com/u/56919923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathanreynolds-entura", "html_url": "https://github.com/nathanreynolds-entura", "followers_url": "https://api.github.com/users/nathanreynolds-entura/followers", "following_url": "https://api.github.com/users/nathanreynolds-entura/following{/other_user}", "gists_url": "https://api.github.com/users/nathanreynolds-entura/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathanreynolds-entura/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathanreynolds-entura/subscriptions", "organizations_url": "https://api.github.com/users/nathanreynolds-entura/orgs", "repos_url": "https://api.github.com/users/nathanreynolds-entura/repos", "events_url": "https://api.github.com/users/nathanreynolds-entura/events{/privacy}", "received_events_url": "https://api.github.com/users/nathanreynolds-entura/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-02T11:50:05Z", "updated_at": "2020-01-20T23:46:24Z", "closed_at": "2020-01-20T23:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're using Celery. This starts workers in separate processes and doesn't run the Django server, so we run Celery with `prometheus_multiproc_dir` and expose metrics with `PROMETHEUS_METRICS_EXPORT_PORT`\r\n\r\nexports.py [*can* use MultiProcessCollector](https://github.com/korfuri/django-prometheus/blob/master/django_prometheus/exports.py#L120), but only when running as a Django view.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/196", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/196/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/196/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/196", "id": 529865422, "node_id": "MDU6SXNzdWU1Mjk4NjU0MjI=", "number": 196, "title": "Traefik does not have the possibility of restricting path (solution found)", "user": {"login": "scwall", "id": 30811539, "node_id": "MDQ6VXNlcjMwODExNTM5", "avatar_url": "https://avatars1.githubusercontent.com/u/30811539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scwall", "html_url": "https://github.com/scwall", "followers_url": "https://api.github.com/users/scwall/followers", "following_url": "https://api.github.com/users/scwall/following{/other_user}", "gists_url": "https://api.github.com/users/scwall/gists{/gist_id}", "starred_url": "https://api.github.com/users/scwall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scwall/subscriptions", "organizations_url": "https://api.github.com/users/scwall/orgs", "repos_url": "https://api.github.com/users/scwall/repos", "events_url": "https://api.github.com/users/scwall/events{/privacy}", "received_events_url": "https://api.github.com/users/scwall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "asherf", "id": 1268088, "node_id": "MDQ6VXNlcjEyNjgwODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1268088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asherf", "html_url": "https://github.com/asherf", "followers_url": "https://api.github.com/users/asherf/followers", "following_url": "https://api.github.com/users/asherf/following{/other_user}", "gists_url": "https://api.github.com/users/asherf/gists{/gist_id}", "starred_url": "https://api.github.com/users/asherf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asherf/subscriptions", "organizations_url": "https://api.github.com/users/asherf/orgs", "repos_url": "https://api.github.com/users/asherf/repos", "events_url": "https://api.github.com/users/asherf/events{/privacy}", "received_events_url": "https://api.github.com/users/asherf/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asherf", "id": 1268088, "node_id": "MDQ6VXNlcjEyNjgwODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1268088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asherf", "html_url": "https://github.com/asherf", "followers_url": "https://api.github.com/users/asherf/followers", "following_url": "https://api.github.com/users/asherf/following{/other_user}", "gists_url": "https://api.github.com/users/asherf/gists{/gist_id}", "starred_url": "https://api.github.com/users/asherf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asherf/subscriptions", "organizations_url": "https://api.github.com/users/asherf/orgs", "repos_url": "https://api.github.com/users/asherf/repos", "events_url": "https://api.github.com/users/asherf/events{/privacy}", "received_events_url": "https://api.github.com/users/asherf/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-11-28T11:48:54Z", "updated_at": "2019-11-28T23:59:06Z", "closed_at": "2019-11-28T23:59:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I use your package, but I found a security problem, traefik does not support path restrictions. ([issue traefik](https://github.com/containous/traefik/issues/4812)) I created a decorator and added to the base view which is a function and not a class so I had to overwrite it without being able to overload it. Here is how I proceeded if it can bring a plus to other people and maybe you could integrate it. there are probably some optimizations to make :)\r\nI have put within the decorator the possibility to choose either [\"\\*\"] for all ip ['xxx.xxx.xxx.\\*] for ip ranges or a fixed ip ['xxx.xxx.xxx.xxx'] all of which can be combined ['xxx.xxx.xxx.\\*','xxx.xxx.xxx.xxx']\r\ndecorator : \r\n```\r\nfrom django.conf import settings as settings_django\r\nfrom django.http import  HttpResponse\r\ndef prometheus_autorization_ip(function):\r\n    def wrap(request, *args, **kwargs):\r\n        ALLOWED_IP_BLOCKS = settings_django.PROMETHEUS_ALLOWED_IP_BLOCKS\r\n        ip = request.META['REMOTE_ADDR']\r\n        if '*' in ALLOWED_IP_BLOCKS:\r\n            return function(request, *args, **kwargs)\r\n        else:\r\n            for allowed_ip in ALLOWED_IP_BLOCKS:\r\n                if '*' in allowed_ip:\r\n                    if ip.split('.')[:3] == allowed_ip.split(\".\")[:3]:\r\n                        return function(request, *args, **kwargs)\r\n                else:\r\n                    if ip in allowed_ip:\r\n                        return function(request, *args, **kwargs)\r\n        return HttpResponse(status=403)\r\n    wrap.__doc__ = function.__doc__\r\n    wrap.__name__ = function.__name__\r\n    return wrap\r\n```\r\n\r\nsettings example :\r\n`PROMETHEUS_ALLOWED_IP_BLOCKS = [\"172.18.0.*\",\"172.0.0.1\"]`\r\n\r\nmy patch_view:\r\n\r\n```\r\nimport os\r\n\r\nimport prometheus_client\r\nfrom django.conf import settings as settings_django\r\nfrom django.conf.urls import url\r\nfrom django.http import HttpResponse\r\nfrom prometheus_client import multiprocess\r\n\r\nfrom config.decorators import prometheus_autorization_ip\r\n\r\n@prometheus_autorization_ip\r\ndef metric(request):\r\n    if 'prometheus_multiproc_dir' in os.environ:\r\n        registry = prometheus_client.CollectorRegistry()\r\n        multiprocess.MultiProcessCollector(registry)\r\n    else:\r\n        registry = prometheus_client.REGISTRY\r\n    metrics_page = prometheus_client.generate_latest(registry)\r\n    return HttpResponse(\r\n        metrics_page,\r\n        content_type=prometheus_client.CONTENT_TYPE_LATEST)\r\n\r\nurlpatterns = [\r\n    url(r'^metrics$', metric, name='metrics'),\r\n]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/141", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/141/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/141/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/141", "id": 516409100, "node_id": "MDU6SXNzdWU1MTY0MDkxMDA=", "number": 141, "title": "Count fluctuates & decreases", "user": {"login": "CodeSpent", "id": 7674344, "node_id": "MDQ6VXNlcjc2NzQzNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7674344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodeSpent", "html_url": "https://github.com/CodeSpent", "followers_url": "https://api.github.com/users/CodeSpent/followers", "following_url": "https://api.github.com/users/CodeSpent/following{/other_user}", "gists_url": "https://api.github.com/users/CodeSpent/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodeSpent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodeSpent/subscriptions", "organizations_url": "https://api.github.com/users/CodeSpent/orgs", "repos_url": "https://api.github.com/users/CodeSpent/repos", "events_url": "https://api.github.com/users/CodeSpent/events{/privacy}", "received_events_url": "https://api.github.com/users/CodeSpent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-02T00:07:03Z", "updated_at": "2019-11-02T10:54:41Z", "closed_at": "2019-11-02T10:54:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`django_http_responses_total_by_status_view_method_total` is labeled as a Counter, but according to Prometheus, counters are only able to increment, yet `django_http_responses_total_by_status_view_method_total` fluctuates down for me.\r\n\r\n![image](https://user-images.githubusercontent.com/7674344/68062847-27fa4680-fce3-11e9-9418-6e2e0e78a8ec.png)\r\n\r\n```\r\n\r\n# HELP django_http_responses_total_by_status_view_method_total Count of responses by status, view, method.\r\n# TYPE django_http_responses_total_by_status_view_method_total counter\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/129", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/129/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/129/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/129", "id": 502345137, "node_id": "MDU6SXNzdWU1MDIzNDUxMzc=", "number": 129, "title": "Metrics by path (latency and status code count)", "user": {"login": "gpontesss", "id": 24464586, "node_id": "MDQ6VXNlcjI0NDY0NTg2", "avatar_url": "https://avatars1.githubusercontent.com/u/24464586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpontesss", "html_url": "https://github.com/gpontesss", "followers_url": "https://api.github.com/users/gpontesss/followers", "following_url": "https://api.github.com/users/gpontesss/following{/other_user}", "gists_url": "https://api.github.com/users/gpontesss/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpontesss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpontesss/subscriptions", "organizations_url": "https://api.github.com/users/gpontesss/orgs", "repos_url": "https://api.github.com/users/gpontesss/repos", "events_url": "https://api.github.com/users/gpontesss/events{/privacy}", "received_events_url": "https://api.github.com/users/gpontesss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-03T23:19:24Z", "updated_at": "2019-11-16T07:43:13Z", "closed_at": "2019-11-16T07:43:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently there are metrics by view and method, those being:\r\n\r\n+ django_http_requests_latency_seconds_by_view_method (Histogram, labels=[view, method])\r\n+ django_http_requests_total_by_view_transport_method (Counter, labels=[view, transport, method])\r\n+ django_http_exceptions_total_by_view (Counter, labels=[view_name])\r\n\r\nIt would be nice if we could have the same type of metrics for individual paths. For example, I wish to know the latency for the `/admin/` path. It could be labeled by request method and function call. I also would like to have a Counter telling how many of a certain HTTP status code I have receive for this path.\r\n\r\nIt seems to be a simple new feature. If there are no objections, I could work on this. If it is a bad idea, I would be nice to know too.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/128", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/128/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/128/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/128", "id": 501733955, "node_id": "MDU6SXNzdWU1MDE3MzM5NTU=", "number": 128, "title": "Models .count() gauge", "user": {"login": "CodeSpent", "id": 7674344, "node_id": "MDQ6VXNlcjc2NzQzNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7674344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodeSpent", "html_url": "https://github.com/CodeSpent", "followers_url": "https://api.github.com/users/CodeSpent/followers", "following_url": "https://api.github.com/users/CodeSpent/following{/other_user}", "gists_url": "https://api.github.com/users/CodeSpent/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodeSpent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodeSpent/subscriptions", "organizations_url": "https://api.github.com/users/CodeSpent/orgs", "repos_url": "https://api.github.com/users/CodeSpent/repos", "events_url": "https://api.github.com/users/CodeSpent/events{/privacy}", "received_events_url": "https://api.github.com/users/CodeSpent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-02T21:22:52Z", "updated_at": "2019-10-25T22:17:17Z", "closed_at": "2019-10-25T04:57:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "> Note that the exported metrics are counters of creations, modifications and deletions done in the current process. They are not gauges of the number of objects in the model.\r\n\r\nPer the docs model count gauges are not exported. This seems an obvious gauge metric so I can't imagine it was missed, but I can't find any information on usage?\r\n\r\nIs there currently a solution in django-prometheus for this already, or is it left to do manually? If it is left to be done manually, what is the proper way to do so?\r\n\r\nMy initial thought is to create `exporters.py` and have that start a exporting server returning the response of `Model.objects.all().count()`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/121", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/121/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/121/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/121", "id": 496229239, "node_id": "MDU6SXNzdWU0OTYyMjkyMzk=", "number": 121, "title": "Ongoing stewardship of Django-prometheus", "user": {"login": "korfuri", "id": 1124263, "node_id": "MDQ6VXNlcjExMjQyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1124263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korfuri", "html_url": "https://github.com/korfuri", "followers_url": "https://api.github.com/users/korfuri/followers", "following_url": "https://api.github.com/users/korfuri/following{/other_user}", "gists_url": "https://api.github.com/users/korfuri/gists{/gist_id}", "starred_url": "https://api.github.com/users/korfuri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korfuri/subscriptions", "organizations_url": "https://api.github.com/users/korfuri/orgs", "repos_url": "https://api.github.com/users/korfuri/repos", "events_url": "https://api.github.com/users/korfuri/events{/privacy}", "received_events_url": "https://api.github.com/users/korfuri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-20T08:51:47Z", "updated_at": "2019-09-20T08:52:56Z", "closed_at": "2019-09-20T08:51:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Hi all, for the last 1.5 years I've been a pretty bad steward of this library. I'm sorry to anyone who's been inconvenienced by my slow response times. I just didn't have much of an interest in working on this project anymore. Fortunately @asherf has offered to take the role of maintainer of this project as well as its siblings ([pip-prometheus](https://github.com/korfuri/pip-prometheus), [logging-prometheus](https://github.com/korfuri/python-logging-prometheus), [gc-prometheus](https://github.com/korfuri/python-gc-prometheus)). This is great news for everyone who depends on this tool. Thank you Asher for your help!\r\n\r\nI will not be replying to PRs or bugs anymore here (not that I was very active in the first place). If you have any questions, the best way to reach me is by email.\r\n\r\nThanks Asher and everyone else who's helped keep this project going!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/118", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/118/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/118/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/118", "id": 490650802, "node_id": "MDU6SXNzdWU0OTA2NTA4MDI=", "number": 118, "title": "connection refused !", "user": {"login": "mmdaz", "id": 35610039, "node_id": "MDQ6VXNlcjM1NjEwMDM5", "avatar_url": "https://avatars1.githubusercontent.com/u/35610039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmdaz", "html_url": "https://github.com/mmdaz", "followers_url": "https://api.github.com/users/mmdaz/followers", "following_url": "https://api.github.com/users/mmdaz/following{/other_user}", "gists_url": "https://api.github.com/users/mmdaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmdaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmdaz/subscriptions", "organizations_url": "https://api.github.com/users/mmdaz/orgs", "repos_url": "https://api.github.com/users/mmdaz/repos", "events_url": "https://api.github.com/users/mmdaz/events{/privacy}", "received_events_url": "https://api.github.com/users/mmdaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-07T15:55:57Z", "updated_at": "2019-11-16T07:43:36Z", "closed_at": "2019-11-16T07:43:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\nI have a prometheus docker image and a django server.\r\nI am running both of them.\r\nmy django ```urls.py``` :\r\n```\r\n\r\nurlpatterns = [\r\n# other urls    \r\npath('', include('django_prometheus.urls')),\r\n]\r\n\r\n```\r\n\r\nand my prometheus.yaml file is:\r\n```\r\nglobal:\r\n    scrape_interval: 30s\r\n\r\nscrape_configs:\r\n- job_name: \"django\"\r\n  static_configs:\r\n  - targets: [\"127.0.0.1:8000\"]\r\n```\r\n\r\nevery thing is ok but when I check ```http://0.0.0.0:9090/targets```:\r\nI see this :\r\n*Get http://127.0.0.1:8000/metrics: dial tcp 127.0.0.1:8000: connect: connection refused*", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/116", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/116/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/116/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/116", "id": 488118976, "node_id": "MDU6SXNzdWU0ODgxMTg5NzY=", "number": 116, "title": "Filter metrics by gunicorn worker id", "user": {"login": "adekoder", "id": 13564723, "node_id": "MDQ6VXNlcjEzNTY0NzIz", "avatar_url": "https://avatars3.githubusercontent.com/u/13564723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adekoder", "html_url": "https://github.com/adekoder", "followers_url": "https://api.github.com/users/adekoder/followers", "following_url": "https://api.github.com/users/adekoder/following{/other_user}", "gists_url": "https://api.github.com/users/adekoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/adekoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adekoder/subscriptions", "organizations_url": "https://api.github.com/users/adekoder/orgs", "repos_url": "https://api.github.com/users/adekoder/repos", "events_url": "https://api.github.com/users/adekoder/events{/privacy}", "received_events_url": "https://api.github.com/users/adekoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-02T10:28:15Z", "updated_at": "2020-01-20T23:43:49Z", "closed_at": "2020-01-20T23:43:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does this library support exposing metrics by worker_id,  like i want to get the total number of request handle by a particular worker id \r\n\r\nsomething like this\r\n``` \r\ndjango_http_requests_total_by_transport_total{worker_id='12'}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/114", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/114/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/114/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/114", "id": 483461523, "node_id": "MDU6SXNzdWU0ODM0NjE1MjM=", "number": 114, "title": "Custom Metrics", "user": {"login": "adekoder", "id": 13564723, "node_id": "MDQ6VXNlcjEzNTY0NzIz", "avatar_url": "https://avatars3.githubusercontent.com/u/13564723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adekoder", "html_url": "https://github.com/adekoder", "followers_url": "https://api.github.com/users/adekoder/followers", "following_url": "https://api.github.com/users/adekoder/following{/other_user}", "gists_url": "https://api.github.com/users/adekoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/adekoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adekoder/subscriptions", "organizations_url": "https://api.github.com/users/adekoder/orgs", "repos_url": "https://api.github.com/users/adekoder/repos", "events_url": "https://api.github.com/users/adekoder/events{/privacy}", "received_events_url": "https://api.github.com/users/adekoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-21T14:35:58Z", "updated_at": "2019-09-02T10:24:46Z", "closed_at": "2019-09-02T10:24:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do i go about writing custom metrics", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/110", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/110/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/110/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/110", "id": 468269489, "node_id": "MDU6SXNzdWU0NjgyNjk0ODk=", "number": 110, "title": "Inconsistent metrics with Django + uwsgi", "user": {"login": "rhazdon", "id": 10563183, "node_id": "MDQ6VXNlcjEwNTYzMTgz", "avatar_url": "https://avatars3.githubusercontent.com/u/10563183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhazdon", "html_url": "https://github.com/rhazdon", "followers_url": "https://api.github.com/users/rhazdon/followers", "following_url": "https://api.github.com/users/rhazdon/following{/other_user}", "gists_url": "https://api.github.com/users/rhazdon/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhazdon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhazdon/subscriptions", "organizations_url": "https://api.github.com/users/rhazdon/orgs", "repos_url": "https://api.github.com/users/rhazdon/repos", "events_url": "https://api.github.com/users/rhazdon/events{/privacy}", "received_events_url": "https://api.github.com/users/rhazdon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-15T18:23:10Z", "updated_at": "2019-07-20T22:42:28Z", "closed_at": "2019-07-20T22:42:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nFirst of all: Thanks for the work and effort for the project. \r\n\r\nIn my last app I noticed a relatively strange behavior: Counting metrics is not consistent. \r\n\r\nAs an example I have the metric `django_http_responses_total_by_status_total`. This works as expected and then suddenly drops a few hundred to a thousand counts. With the next request on `/metrics` the count returns to the value before and keeps on counting. \r\n\r\nAs caching backend I use a Redis. \r\n\r\nThis is how the query `django_http_requests_total_by_method_total{job=\"my_app\"}` looks like:\r\n![Metrics](https://dsh.re/da80e)\r\n\r\nSince I don't want to exclude that it has something to do with my uwsgi configuration, here this one again. \r\n\r\nDoes anyone have any idea what might be going on here?\r\n\r\n\r\n```\r\n[uwsgi]\r\nmaster = true\r\n\r\nusername = www-data\r\nchdir = /opt/app/\r\n\r\nenv = DJANGO_SETTINGS_MODULE=app.settings.prod\r\nenv = SENTRY_ENVIRONMENT=production\r\nmodule = app.wsgi:application\r\n\r\npidfile = /var/run/app/uwsgi.pid\r\nsocket = /var/run/app/uwsgi.sock\r\nchown-socket = www-data:www-data\r\nchmod-socket = 660\r\n\r\nvacuum = true\r\ndie-on-term = true\r\nemperor = true\r\nenable-threads = true\r\n\r\nprocesses = 2\r\nthreads = 4\r\nworkers = 2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/109", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/109/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/109/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/109", "id": 464727546, "node_id": "MDU6SXNzdWU0NjQ3Mjc1NDY=", "number": 109, "title": "Exceptions labels not consistent with other metrics", "user": {"login": "travisgroth", "id": 6198562, "node_id": "MDQ6VXNlcjYxOTg1NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6198562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/travisgroth", "html_url": "https://github.com/travisgroth", "followers_url": "https://api.github.com/users/travisgroth/followers", "following_url": "https://api.github.com/users/travisgroth/following{/other_user}", "gists_url": "https://api.github.com/users/travisgroth/gists{/gist_id}", "starred_url": "https://api.github.com/users/travisgroth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/travisgroth/subscriptions", "organizations_url": "https://api.github.com/users/travisgroth/orgs", "repos_url": "https://api.github.com/users/travisgroth/repos", "events_url": "https://api.github.com/users/travisgroth/events{/privacy}", "received_events_url": "https://api.github.com/users/travisgroth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "asherf", "id": 1268088, "node_id": "MDQ6VXNlcjEyNjgwODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1268088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asherf", "html_url": "https://github.com/asherf", "followers_url": "https://api.github.com/users/asherf/followers", "following_url": "https://api.github.com/users/asherf/following{/other_user}", "gists_url": "https://api.github.com/users/asherf/gists{/gist_id}", "starred_url": "https://api.github.com/users/asherf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asherf/subscriptions", "organizations_url": "https://api.github.com/users/asherf/orgs", "repos_url": "https://api.github.com/users/asherf/repos", "events_url": "https://api.github.com/users/asherf/events{/privacy}", "received_events_url": "https://api.github.com/users/asherf/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asherf", "id": 1268088, "node_id": "MDQ6VXNlcjEyNjgwODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1268088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asherf", "html_url": "https://github.com/asherf", "followers_url": "https://api.github.com/users/asherf/followers", "following_url": "https://api.github.com/users/asherf/following{/other_user}", "gists_url": "https://api.github.com/users/asherf/gists{/gist_id}", "starred_url": "https://api.github.com/users/asherf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asherf/subscriptions", "organizations_url": "https://api.github.com/users/asherf/orgs", "repos_url": "https://api.github.com/users/asherf/repos", "events_url": "https://api.github.com/users/asherf/events{/privacy}", "received_events_url": "https://api.github.com/users/asherf/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-07-05T17:45:39Z", "updated_at": "2019-11-21T02:13:03Z", "closed_at": "2019-11-21T02:13:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nIt looks like the exception metrics use the label `view_name` for the django view, while other metrics use the label `view`.  This makes it difficult to join exceptions to other metrics by view.  Quick sample:\r\n\r\n```\r\ndjango_http_exceptions_total_by_view_total{instance=\"x.x.x.x:9000\",job=\"django\",view_name=\"internal:endpoint1\"}\t1\r\ndjango_http_exceptions_total_by_view_total{instance=\"x.x.x.x:9000\",job=\"django\",view_name=\"internal:endpoint2\"}\t1\r\ndjango_http_exceptions_total_by_view_total{instance=\"x.x.x.x:9000\",job=\"django\",view_name=\"internal:endpoint3\"} 1\r\n\r\ndjango_http_requests_total_by_view_transport_method_total{instance=\"x.x.x.x:9000\",job=\"django\",method=\"GET\",transport=\"http\",view=\"internal:endpoint1\"}\t534\r\ndjango_http_requests_total_by_view_transport_method_total{instance=\"x.x.x.x:9000\",job=\"django\",method=\"GET\",transport=\"https\",view=\"internal:endpoint2\"} 458\r\n```\r\nCan these be made consistent?\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/98", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/98/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/98/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/98", "id": 397145898, "node_id": "MDU6SXNzdWUzOTcxNDU4OTg=", "number": 98, "title": "How to use as a pushed based model?", "user": {"login": "gcavalcante8808", "id": 640897, "node_id": "MDQ6VXNlcjY0MDg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/640897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcavalcante8808", "html_url": "https://github.com/gcavalcante8808", "followers_url": "https://api.github.com/users/gcavalcante8808/followers", "following_url": "https://api.github.com/users/gcavalcante8808/following{/other_user}", "gists_url": "https://api.github.com/users/gcavalcante8808/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcavalcante8808/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcavalcante8808/subscriptions", "organizations_url": "https://api.github.com/users/gcavalcante8808/orgs", "repos_url": "https://api.github.com/users/gcavalcante8808/repos", "events_url": "https://api.github.com/users/gcavalcante8808/events{/privacy}", "received_events_url": "https://api.github.com/users/gcavalcante8808/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-08T23:56:16Z", "updated_at": "2019-01-21T23:46:24Z", "closed_at": "2019-01-21T23:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, \r\n\r\nThanks in advance for this great package. How do I use this lib in a pushed based model? Currently, we are using the gunicorn with sync model, but we should change it for gthread or even bjoern soon.\r\n\r\nI already tested the \"PROMETHEUS_METRICS_EXPORT_PORT_RANGE\" param with multiple ports, but still I think that will be a better job for a pushgateway model. More info at:\r\n\r\nhttps://github.com/prometheus/client_python#exporting-to-a-pushgateway\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/92", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/92/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/92/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/92", "id": 381035507, "node_id": "MDU6SXNzdWUzODEwMzU1MDc=", "number": 92, "title": "Restart the Django project and clear all metrics", "user": {"login": "aziminia", "id": 849261, "node_id": "MDQ6VXNlcjg0OTI2MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/849261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aziminia", "html_url": "https://github.com/aziminia", "followers_url": "https://api.github.com/users/aziminia/followers", "following_url": "https://api.github.com/users/aziminia/following{/other_user}", "gists_url": "https://api.github.com/users/aziminia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aziminia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aziminia/subscriptions", "organizations_url": "https://api.github.com/users/aziminia/orgs", "repos_url": "https://api.github.com/users/aziminia/repos", "events_url": "https://api.github.com/users/aziminia/events{/privacy}", "received_events_url": "https://api.github.com/users/aziminia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-15T07:37:27Z", "updated_at": "2018-11-26T14:34:09Z", "closed_at": "2018-11-26T14:34:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi\r\nWhen Django is running. Metrics work well.\r\nBut when I upgrade Django and run runerver again. All the metrics are gone.\r\nAnd all information is erased!\r\nwhere is the problem from?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/89", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/89/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/89/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/89", "id": 371993106, "node_id": "MDU6SXNzdWUzNzE5OTMxMDY=", "number": 89, "title": "Metrics page progressively slows down, causing linear increase in average response time", "user": {"login": "devmonkey22", "id": 5084545, "node_id": "MDQ6VXNlcjUwODQ1NDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5084545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devmonkey22", "html_url": "https://github.com/devmonkey22", "followers_url": "https://api.github.com/users/devmonkey22/followers", "following_url": "https://api.github.com/users/devmonkey22/following{/other_user}", "gists_url": "https://api.github.com/users/devmonkey22/gists{/gist_id}", "starred_url": "https://api.github.com/users/devmonkey22/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devmonkey22/subscriptions", "organizations_url": "https://api.github.com/users/devmonkey22/orgs", "repos_url": "https://api.github.com/users/devmonkey22/repos", "events_url": "https://api.github.com/users/devmonkey22/events{/privacy}", "received_events_url": "https://api.github.com/users/devmonkey22/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-19T14:53:56Z", "updated_at": "2020-06-26T03:35:22Z", "closed_at": "2018-10-22T14:00:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "- django-prometheus==1.0.14\r\n- prometheus_client==0.2.0\r\n\r\nI have prometheus set up with the `prometheus_multiproc_dir` environment variable to collect under gunicorn (with up to 8 workers that recycle periodically).\r\n\r\nOver the course of several hours even without much application activity, the metrics page takes progressively longer to return.  It times out the default prometheus `scrape_timeout` after a while too.\r\n\r\nMaybe I'm misconfigured, but as long as new metrics (time series) aren't being created and its just the values, why would it take progressively longer?\r\n\r\nI've attached a screenshot from grafana that graphs the avg response time systemwide (`django_http_requests_latency_including_middlewares_seconds` histogram) and the slowest API calls (`django_http_requests_latency_seconds_by_view_method` histogram) over a 12 hour period. At 19:00, I stopped all other major system activity, that's why all the other API calls dropped off.\r\n\r\n![django-prometheus-client-perfissue](https://user-images.githubusercontent.com/5084545/47225777-e3786300-d38c-11e8-8a86-6efb9ea9a19b.png)\r\n\r\n\r\nAny thoughts?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/85", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/85/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/85/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/85", "id": 370596245, "node_id": "MDU6SXNzdWUzNzA1OTYyNDU=", "number": 85, "title": "Support turning off certain metrics like django_migrations_unapplied_total, which under gunicorn can create a lot of time series", "user": {"login": "devmonkey22", "id": 5084545, "node_id": "MDQ6VXNlcjUwODQ1NDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5084545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devmonkey22", "html_url": "https://github.com/devmonkey22", "followers_url": "https://api.github.com/users/devmonkey22/followers", "following_url": "https://api.github.com/users/devmonkey22/following{/other_user}", "gists_url": "https://api.github.com/users/devmonkey22/gists{/gist_id}", "starred_url": "https://api.github.com/users/devmonkey22/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devmonkey22/subscriptions", "organizations_url": "https://api.github.com/users/devmonkey22/orgs", "repos_url": "https://api.github.com/users/devmonkey22/repos", "events_url": "https://api.github.com/users/devmonkey22/events{/privacy}", "received_events_url": "https://api.github.com/users/devmonkey22/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-16T12:51:00Z", "updated_at": "2018-10-16T17:23:36Z", "closed_at": "2018-10-16T17:23:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "- django-prometheus==1.0.14\r\n- prometheus_client==0.2.0\r\n\r\nI have a django app running behind gunicorn, where the workers recycle regularly.\r\nWhen this happens, certain time series create separate metrics because they specify a `pid` label. The `pid` changes at every recycle.  This then causes the metrics page to take a long time to return, even causing Prometheus monitoring to timeout with `context deadline exceeded`.  I know I could extend the timeout past the default 15 seconds, but that isn't ideal.\r\n\r\nOver a 12 hour period, I end up with 3000+ of time series like `django_migrations_unapplied_total{connection=\"default\",pid=\"21204\"} 0.0`\r\nand `django_migrations_applied_total{connection=\"default\",pid=\"7175\"} 0.0`\r\n \r\nIs there a way to turn off certain metrics, or remove the `pid` label, so it can be collected within a single series?  I'm sure `pid` can be valuable in certain situations, but in this case, its causing performance issues.\r\n\r\nI haven't seen a way to dump or ignore them at the prometheus-client level, but I apologize if there is, as I don't have in-depth knowledge of these libraries.\r\n\r\nThanks!\r\nMike\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/83", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/83/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/83/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/83", "id": 367079478, "node_id": "MDU6SXNzdWUzNjcwNzk0Nzg=", "number": 83, "title": "Django-prometheus breaks due to  prometheus-client python package release 0.4.0 on Oct 04 2018", "user": {"login": "billaram", "id": 10163424, "node_id": "MDQ6VXNlcjEwMTYzNDI0", "avatar_url": "https://avatars0.githubusercontent.com/u/10163424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billaram", "html_url": "https://github.com/billaram", "followers_url": "https://api.github.com/users/billaram/followers", "following_url": "https://api.github.com/users/billaram/following{/other_user}", "gists_url": "https://api.github.com/users/billaram/gists{/gist_id}", "starred_url": "https://api.github.com/users/billaram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billaram/subscriptions", "organizations_url": "https://api.github.com/users/billaram/orgs", "repos_url": "https://api.github.com/users/billaram/repos", "events_url": "https://api.github.com/users/billaram/events{/privacy}", "received_events_url": "https://api.github.com/users/billaram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-10-05T06:41:44Z", "updated_at": "2019-06-13T06:10:22Z", "closed_at": "2019-06-13T06:10:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Issue \r\n I m using uWSGI and django 1.11.14 and django_proometheus in multi-process mode\r\n\r\nuwsgi.ini\r\n```\r\nenv = prometheus_multiproc_dir=/path/to/django_metrics\r\n```\r\nwsgi.py\r\n```\r\nfrom prometheus_client import core\r\nimport uwsgi\r\n# Use uwsgi's worker_id rather than system pids\r\ncore._ValueClass = core._MultiProcessValue(_pidFunc=uwsgi.worker_id)\r\n```\r\n\r\n**Note:** reverting to 0.3.1 works fine", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/82", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/82/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/82/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/82", "id": 349297635, "node_id": "MDU6SXNzdWUzNDkyOTc2MzU=", "number": 82, "title": "Could not find backend 'django_prometheus.core.cache.backends.filebased.FileBasedCache'", "user": {"login": "uriklagnes", "id": 1644555, "node_id": "MDQ6VXNlcjE2NDQ1NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1644555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uriklagnes", "html_url": "https://github.com/uriklagnes", "followers_url": "https://api.github.com/users/uriklagnes/followers", "following_url": "https://api.github.com/users/uriklagnes/following{/other_user}", "gists_url": "https://api.github.com/users/uriklagnes/gists{/gist_id}", "starred_url": "https://api.github.com/users/uriklagnes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uriklagnes/subscriptions", "organizations_url": "https://api.github.com/users/uriklagnes/orgs", "repos_url": "https://api.github.com/users/uriklagnes/repos", "events_url": "https://api.github.com/users/uriklagnes/events{/privacy}", "received_events_url": "https://api.github.com/users/uriklagnes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-09T21:29:13Z", "updated_at": "2018-08-09T21:34:35Z", "closed_at": "2018-08-09T21:34:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI followed the documentation and changed my CACHES settings from\r\n```\r\nCACHES = {\r\n    'default': {\r\n        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',\r\n\r\n```\r\n\r\nto\r\n\r\n```\r\nCACHES = {\r\n    'default': {\r\n        'BACKEND': 'django_prometheus.core.cache.backends.filebased.FileBasedCache',\r\n```\r\n\r\nBut now Django errors with:\r\n```\r\nInvalidCacheBackendError at /api/get_all_rooms_as_json\r\nCould not find backend 'django_prometheus.core.cache.backends.filebased.FileBasedCache': No module named core.cache.backends.filebased\r\n```\r\nVersions:\r\n```\r\nPython 2.7.6\r\nDjango: 1.11.10\r\ndjango-prometheus (1.0.15)\r\nprometheus-client (0.3.1)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/81", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/81/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/81/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/81", "id": 343444340, "node_id": "MDU6SXNzdWUzNDM0NDQzNDA=", "number": 81, "title": "Django running on kubernetes need ALLOWED_HOSTS", "user": {"login": "ddehghan", "id": 717686, "node_id": "MDQ6VXNlcjcxNzY4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/717686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddehghan", "html_url": "https://github.com/ddehghan", "followers_url": "https://api.github.com/users/ddehghan/followers", "following_url": "https://api.github.com/users/ddehghan/following{/other_user}", "gists_url": "https://api.github.com/users/ddehghan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddehghan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddehghan/subscriptions", "organizations_url": "https://api.github.com/users/ddehghan/orgs", "repos_url": "https://api.github.com/users/ddehghan/repos", "events_url": "https://api.github.com/users/ddehghan/events{/privacy}", "received_events_url": "https://api.github.com/users/ddehghan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-22T22:22:44Z", "updated_at": "2020-05-05T06:29:05Z", "closed_at": "2020-01-20T23:47:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is good to document this somewhere. If you are running django inside a pod then prometheus will not be able to scrape the /metrics unless you allow the ip address in the ALLOWED_HOSTS\r\n\r\nIn django settings.py\r\n```\r\nfrom socket import gethostname, gethostbyname \r\nALLOWED_HOSTS = [ gethostname(), gethostbyname(gethostname()), ] \r\n\r\n```\r\nIt took a while to figure out why prometheus was not able to reach the /metrics.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/77", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/77/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/77/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/77", "id": 339068953, "node_id": "MDU6SXNzdWUzMzkwNjg5NTM=", "number": 77, "title": "Doc needed:  How to use this with apache daemon-mode processes?", "user": {"login": "uriklagnes", "id": 1644555, "node_id": "MDQ6VXNlcjE2NDQ1NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1644555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uriklagnes", "html_url": "https://github.com/uriklagnes", "followers_url": "https://api.github.com/users/uriklagnes/followers", "following_url": "https://api.github.com/users/uriklagnes/following{/other_user}", "gists_url": "https://api.github.com/users/uriklagnes/gists{/gist_id}", "starred_url": "https://api.github.com/users/uriklagnes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uriklagnes/subscriptions", "organizations_url": "https://api.github.com/users/uriklagnes/orgs", "repos_url": "https://api.github.com/users/uriklagnes/repos", "events_url": "https://api.github.com/users/uriklagnes/events{/privacy}", "received_events_url": "https://api.github.com/users/uriklagnes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-06T20:55:25Z", "updated_at": "2018-08-11T22:57:00Z", "closed_at": "2018-07-24T09:51:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm looking for documentation on how to use this with > 1 apache daemon mode processes.\r\n\r\nWill all the metrics across all processes be aggregated by the main apache daemon and served at its port @ url /metrics?\r\nAlso, notes on the performance impact (roughly) per process.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/74", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/74/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/74/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/74", "id": 330614672, "node_id": "MDU6SXNzdWUzMzA2MTQ2NzI=", "number": 74, "title": "Allow configurable buckets", "user": {"login": "kunalgrover05", "id": 3676256, "node_id": "MDQ6VXNlcjM2NzYyNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3676256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kunalgrover05", "html_url": "https://github.com/kunalgrover05", "followers_url": "https://api.github.com/users/kunalgrover05/followers", "following_url": "https://api.github.com/users/kunalgrover05/following{/other_user}", "gists_url": "https://api.github.com/users/kunalgrover05/gists{/gist_id}", "starred_url": "https://api.github.com/users/kunalgrover05/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kunalgrover05/subscriptions", "organizations_url": "https://api.github.com/users/kunalgrover05/orgs", "repos_url": "https://api.github.com/users/kunalgrover05/repos", "events_url": "https://api.github.com/users/kunalgrover05/events{/privacy}", "received_events_url": "https://api.github.com/users/kunalgrover05/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "asherf", "id": 1268088, "node_id": "MDQ6VXNlcjEyNjgwODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1268088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asherf", "html_url": "https://github.com/asherf", "followers_url": "https://api.github.com/users/asherf/followers", "following_url": "https://api.github.com/users/asherf/following{/other_user}", "gists_url": "https://api.github.com/users/asherf/gists{/gist_id}", "starred_url": "https://api.github.com/users/asherf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asherf/subscriptions", "organizations_url": "https://api.github.com/users/asherf/orgs", "repos_url": "https://api.github.com/users/asherf/repos", "events_url": "https://api.github.com/users/asherf/events{/privacy}", "received_events_url": "https://api.github.com/users/asherf/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asherf", "id": 1268088, "node_id": "MDQ6VXNlcjEyNjgwODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1268088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asherf", "html_url": "https://github.com/asherf", "followers_url": "https://api.github.com/users/asherf/followers", "following_url": "https://api.github.com/users/asherf/following{/other_user}", "gists_url": "https://api.github.com/users/asherf/gists{/gist_id}", "starred_url": "https://api.github.com/users/asherf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asherf/subscriptions", "organizations_url": "https://api.github.com/users/asherf/orgs", "repos_url": "https://api.github.com/users/asherf/repos", "events_url": "https://api.github.com/users/asherf/events{/privacy}", "received_events_url": "https://api.github.com/users/asherf/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-06-08T11:01:34Z", "updated_at": "2019-11-17T01:13:22Z", "closed_at": "2019-11-17T01:13:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thank you for this great integration, I was able to get it up and running in no time.\r\n\r\nCurrently, the library uses the default buckets provided by the prometheus client for Histogram. Can we make it configurable? I will be happy to send a PR if you believe that's something we should be doing.\r\n\r\nDefault buckets: https://github.com/prometheus/client_python/blob/master/prometheus_client/core.py\r\n\r\nUse cases:\r\n- My latencies (especially above P90s) regularly go above 10s, and I would like to understand how much.\r\n- I would like to add a granular view in smaller latencies, eg: between 2.5 - 5 seconds, my customers have very different experience, so I should be monitoring these latencies.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/70", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/70/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/70/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/70", "id": 321340331, "node_id": "MDU6SXNzdWUzMjEzNDAzMzE=", "number": 70, "title": "Local Mem Cache not supported", "user": {"login": "lampwins", "id": 1297132, "node_id": "MDQ6VXNlcjEyOTcxMzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1297132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lampwins", "html_url": "https://github.com/lampwins", "followers_url": "https://api.github.com/users/lampwins/followers", "following_url": "https://api.github.com/users/lampwins/following{/other_user}", "gists_url": "https://api.github.com/users/lampwins/gists{/gist_id}", "starred_url": "https://api.github.com/users/lampwins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lampwins/subscriptions", "organizations_url": "https://api.github.com/users/lampwins/orgs", "repos_url": "https://api.github.com/users/lampwins/repos", "events_url": "https://api.github.com/users/lampwins/events{/privacy}", "received_events_url": "https://api.github.com/users/lampwins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-08T20:44:28Z", "updated_at": "2018-06-01T11:50:59Z", "closed_at": "2018-06-01T11:50:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems django_prometheus is lacking support for the `LocMemCache` cache backend.\r\n\r\nThis:\r\n```python\r\nCACHES = {\r\n    'default': {\r\n        'BACKEND': 'django_prometheus.cache.backends.locmem.LocMemCache',\r\n        'LOCATION': 'webhooks',\r\n    }\r\n}\r\n```\r\nResults in:\r\n```\r\ndjango.core.cache.backends.base.InvalidCacheBackendError: Could not find backend 'django_prometheus.cache.backends.locmem.LocMemCache': No module named 'django_prometheus.cache.backends.locmem'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/65", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/65/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/65/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/65", "id": 305298040, "node_id": "MDU6SXNzdWUzMDUyOTgwNDA=", "number": 65, "title": "Some Update django >=1.10", "user": {"login": "JohnWillker", "id": 6719357, "node_id": "MDQ6VXNlcjY3MTkzNTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6719357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnWillker", "html_url": "https://github.com/JohnWillker", "followers_url": "https://api.github.com/users/JohnWillker/followers", "following_url": "https://api.github.com/users/JohnWillker/following{/other_user}", "gists_url": "https://api.github.com/users/JohnWillker/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnWillker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnWillker/subscriptions", "organizations_url": "https://api.github.com/users/JohnWillker/orgs", "repos_url": "https://api.github.com/users/JohnWillker/repos", "events_url": "https://api.github.com/users/JohnWillker/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnWillker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-14T19:28:24Z", "updated_at": "2018-03-23T14:43:20Z", "closed_at": "2018-03-20T14:52:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "some way to use django >= 1.10?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/64", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/64/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/64/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/64", "id": 302046189, "node_id": "MDU6SXNzdWUzMDIwNDYxODk=", "number": 64, "title": "PostGIS support?", "user": {"login": "mahmoudhossam", "id": 619795, "node_id": "MDQ6VXNlcjYxOTc5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/619795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mahmoudhossam", "html_url": "https://github.com/mahmoudhossam", "followers_url": "https://api.github.com/users/mahmoudhossam/followers", "following_url": "https://api.github.com/users/mahmoudhossam/following{/other_user}", "gists_url": "https://api.github.com/users/mahmoudhossam/gists{/gist_id}", "starred_url": "https://api.github.com/users/mahmoudhossam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mahmoudhossam/subscriptions", "organizations_url": "https://api.github.com/users/mahmoudhossam/orgs", "repos_url": "https://api.github.com/users/mahmoudhossam/repos", "events_url": "https://api.github.com/users/mahmoudhossam/events{/privacy}", "received_events_url": "https://api.github.com/users/mahmoudhossam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-04T00:49:53Z", "updated_at": "2020-06-17T17:40:42Z", "closed_at": "2020-06-17T17:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to use django-prometheus for my own project but I'm not sure if it works with PostGIS.\r\n\r\nIs there work that needs to be done or does it work out of the box?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/59", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/59/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/59/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/59", "id": 276074622, "node_id": "MDU6SXNzdWUyNzYwNzQ2MjI=", "number": 59, "title": "[feature request]Is there any plan to release a  new version?", "user": {"login": "kkfnui", "id": 1238381, "node_id": "MDQ6VXNlcjEyMzgzODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1238381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkfnui", "html_url": "https://github.com/kkfnui", "followers_url": "https://api.github.com/users/kkfnui/followers", "following_url": "https://api.github.com/users/kkfnui/following{/other_user}", "gists_url": "https://api.github.com/users/kkfnui/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkfnui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkfnui/subscriptions", "organizations_url": "https://api.github.com/users/kkfnui/orgs", "repos_url": "https://api.github.com/users/kkfnui/repos", "events_url": "https://api.github.com/users/kkfnui/events{/privacy}", "received_events_url": "https://api.github.com/users/kkfnui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-22T13:51:32Z", "updated_at": "2018-01-13T18:19:59Z", "closed_at": "2018-01-13T18:19:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need the `django_http_requests_latency_seconds_by_view_method ` metrics to analysis server perf problem.\r\n\r\nThe metrics is already on the master.  So just want to know when to last release next version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/56", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/56/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/56/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/56", "id": 271261436, "node_id": "MDU6SXNzdWUyNzEyNjE0MzY=", "number": 56, "title": "Run tests using TOX + docker-compose to ease local development", "user": {"login": "thomasf", "id": 330847, "node_id": "MDQ6VXNlcjMzMDg0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/330847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasf", "html_url": "https://github.com/thomasf", "followers_url": "https://api.github.com/users/thomasf/followers", "following_url": "https://api.github.com/users/thomasf/following{/other_user}", "gists_url": "https://api.github.com/users/thomasf/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasf/subscriptions", "organizations_url": "https://api.github.com/users/thomasf/orgs", "repos_url": "https://api.github.com/users/thomasf/repos", "events_url": "https://api.github.com/users/thomasf/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-05T09:33:22Z", "updated_at": "2019-11-16T05:39:44Z", "closed_at": "2019-11-16T05:39:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you accept a pull request which adds a `docker-compose.yml` for postgres/mysql and a travis compatible tox setup so that it is easier to do local development and run all the tests? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/55", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/55/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/55/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/55", "id": 269579657, "node_id": "MDU6SXNzdWUyNjk1Nzk2NTc=", "number": 55, "title": "Comand \"collectstatic\" - timeout error when executing deploy", "user": {"login": "ruifilho-luizalabs", "id": 25101596, "node_id": "MDQ6VXNlcjI1MTAxNTk2", "avatar_url": "https://avatars2.githubusercontent.com/u/25101596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruifilho-luizalabs", "html_url": "https://github.com/ruifilho-luizalabs", "followers_url": "https://api.github.com/users/ruifilho-luizalabs/followers", "following_url": "https://api.github.com/users/ruifilho-luizalabs/following{/other_user}", "gists_url": "https://api.github.com/users/ruifilho-luizalabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruifilho-luizalabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruifilho-luizalabs/subscriptions", "organizations_url": "https://api.github.com/users/ruifilho-luizalabs/orgs", "repos_url": "https://api.github.com/users/ruifilho-luizalabs/repos", "events_url": "https://api.github.com/users/ruifilho-luizalabs/events{/privacy}", "received_events_url": "https://api.github.com/users/ruifilho-luizalabs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-30T12:20:36Z", "updated_at": "2017-10-30T13:45:16Z", "closed_at": "2017-10-30T12:32:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nMy build fails during the static file preparation. Is any one else experiencing this, and does any one have any ideas on how to solve the problem?\r\nThanks\r\n\r\nDeploy detail:\r\n\r\npython manage.py collectstatic --no-post-process --noinput\r\nusing Msgpack encoder\r\nresetting queues. pids(old:None new:17646)\r\nstarting flush thread\r\ncannot send services: [Errno 111] Connection refused\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/pymysql/connections.py\", line 916, in connect\r\n    **kwargs)\r\n  File \"/opt/circleci/python/3.6.1/lib/python3.6/socket.py\", line 722, in create_connection\r\n    raise err\r\n  File \"/opt/circleci/python/3.6.1/lib/python3.6/socket.py\", line 713, in create_connection\r\n    sock.connect(sa)\r\nsocket.timeout: timed out\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/backends/base/base.py\", line 213, in ensure_connection\r\n    self.connect()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/backends/base/base.py\", line 189, in connect\r\n    self.connection = self.get_new_connection(conn_params)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django_prometheus/db/common.py\", line 41, in get_new_connection\r\n    *args, **kwargs)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/backends/mysql/base.py\", line 274, in get_new_connection\r\n    conn = Database.connect(**conn_params)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/pymysql/__init__.py\", line 90, in Connect\r\n    return Connection(*args, **kwargs)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/pymysql/connections.py\", line 706, in __init__\r\n    self.connect()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/pymysql/connections.py\", line 963, in connect\r\n    raise exc\r\npymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on 'kubernetes-apps-staging.cd2vfjltihkr.us-east-1.rds.amazonaws.com' (timed out)\")\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 35, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/core/management/__init__.py\", line 363, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/core/management/__init__.py\", line 337, in execute\r\n    django.setup()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/__init__.py\", line 27, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/apps/registry.py\", line 116, in populate\r\n    app_config.ready()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django_prometheus/apps.py\", line 24, in ready\r\n    ExportMigrations()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django_prometheus/migrations.py\", line 46, in ExportMigrations\r\n    executor = MigrationExecutor(connections[alias])\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/migrations/executor.py\", line 20, in __init__\r\n    self.loader = MigrationLoader(self.connection)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/migrations/loader.py\", line 52, in __init__\r\n    self.build_graph()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/migrations/loader.py\", line 209, in build_graph\r\n    self.applied_migrations = recorder.applied_migrations()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/migrations/recorder.py\", line 65, in applied_migrations\r\n    self.ensure_schema()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/migrations/recorder.py\", line 52, in ensure_schema\r\n    if self.Migration._meta.db_table in self.connection.introspection.table_names(self.connection.cursor()):\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/ddtrace/contrib/django/db.py\", line 27, in cursor\r\n    return TracedCursor(tracer, conn, conn._datadog_original_cursor())\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/backends/base/base.py\", line 254, in cursor\r\n    return self._cursor()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/backends/base/base.py\", line 229, in _cursor\r\n    self.ensure_connection()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/backends/base/base.py\", line 213, in ensure_connection\r\n    self.connect()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/utils.py\", line 94, in __exit__\r\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/utils/six.py\", line 685, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/backends/base/base.py\", line 213, in ensure_connection\r\n    self.connect()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/backends/base/base.py\", line 189, in connect\r\n    self.connection = self.get_new_connection(conn_params)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django_prometheus/db/common.py\", line 41, in get_new_connection\r\n    *args, **kwargs)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/django/db/backends/mysql/base.py\", line 274, in get_new_connection\r\n    conn = Database.connect(**conn_params)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/pymysql/__init__.py\", line 90, in Connect\r\n    return Connection(*args, **kwargs)\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/pymysql/connections.py\", line 706, in __init__\r\n    self.connect()\r\n  File \"/home/ubuntu/virtualenvs/venv-3.6.1/lib/python3.6/site-packages/pymysql/connections.py\", line 963, in connect\r\n    raise exc\r\ndjango.db.utils.OperationalError: (2003, \"Can't connect to MySQL server on 'kubernetes-apps-staging.cd2vfjltihkr.us-east-1.rds.amazonaws.com' (timed out)\")\r\n\r\npython manage.py collectstatic --no-post-process --noinput returned exit code 1\r\n\r\n\r\n\r\nAction failed: python manage.py collectstatic --no-post-process --noinput\r\n![captura de tela de 2017-10-30 10-20-52](https://user-images.githubusercontent.com/25101596/32170490-dd34ae88-bd5b-11e7-94db-5f96c74fd0a2.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/53", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/53/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/53/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/53", "id": 267075758, "node_id": "MDU6SXNzdWUyNjcwNzU3NTg=", "number": 53, "title": "Metrics not rendering", "user": {"login": "dmyerscough", "id": 1395617, "node_id": "MDQ6VXNlcjEzOTU2MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1395617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmyerscough", "html_url": "https://github.com/dmyerscough", "followers_url": "https://api.github.com/users/dmyerscough/followers", "following_url": "https://api.github.com/users/dmyerscough/following{/other_user}", "gists_url": "https://api.github.com/users/dmyerscough/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmyerscough/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmyerscough/subscriptions", "organizations_url": "https://api.github.com/users/dmyerscough/orgs", "repos_url": "https://api.github.com/users/dmyerscough/repos", "events_url": "https://api.github.com/users/dmyerscough/events{/privacy}", "received_events_url": "https://api.github.com/users/dmyerscough/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-10-20T06:31:03Z", "updated_at": "2017-12-09T14:49:07Z", "closed_at": "2017-12-09T14:49:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django version 1.11.5 does not render metrics when hitting `/metrics`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/49", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/49/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/49/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/49", "id": 250546645, "node_id": "MDU6SXNzdWUyNTA1NDY2NDU=", "number": 49, "title": "Document PROMETHEUS_EXPORT_MIGRATIONS", "user": {"login": "zoidbergwill", "id": 2572493, "node_id": "MDQ6VXNlcjI1NzI0OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2572493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zoidbergwill", "html_url": "https://github.com/zoidbergwill", "followers_url": "https://api.github.com/users/zoidbergwill/followers", "following_url": "https://api.github.com/users/zoidbergwill/following{/other_user}", "gists_url": "https://api.github.com/users/zoidbergwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/zoidbergwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zoidbergwill/subscriptions", "organizations_url": "https://api.github.com/users/zoidbergwill/orgs", "repos_url": "https://api.github.com/users/zoidbergwill/repos", "events_url": "https://api.github.com/users/zoidbergwill/events{/privacy}", "received_events_url": "https://api.github.com/users/zoidbergwill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-16T08:18:13Z", "updated_at": "2018-10-23T09:23:43Z", "closed_at": "2018-10-23T09:23:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/48", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/48/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/48/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/48", "id": 250295752, "node_id": "MDU6SXNzdWUyNTAyOTU3NTI=", "number": 48, "title": "Follow Prometheus metic naming & labeling  conventions", "user": {"login": "adamcharnock", "id": 138215, "node_id": "MDQ6VXNlcjEzODIxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/138215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamcharnock", "html_url": "https://github.com/adamcharnock", "followers_url": "https://api.github.com/users/adamcharnock/followers", "following_url": "https://api.github.com/users/adamcharnock/following{/other_user}", "gists_url": "https://api.github.com/users/adamcharnock/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamcharnock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamcharnock/subscriptions", "organizations_url": "https://api.github.com/users/adamcharnock/orgs", "repos_url": "https://api.github.com/users/adamcharnock/repos", "events_url": "https://api.github.com/users/adamcharnock/events{/privacy}", "received_events_url": "https://api.github.com/users/adamcharnock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-15T12:03:27Z", "updated_at": "2017-08-15T13:42:09Z", "closed_at": "2017-08-15T13:42:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the [Prometheus docs](https://prometheus.io/docs/practices/naming/):\r\n\r\n> Use labels to differentiate the characteristics of the thing that is being measured... Do not put the label names in the metric name, as this introduces redundancy and will cause confusion if the respective labels are aggregated away.\r\n\r\nI therefore propose the the following be combined using suitable labels:\r\n\r\n* Combine into ``requests_total``:\r\n  * requests_total\r\n  * requests_by_method\r\n  * requests_by_transport\r\n  * requests_by_view_transport_method\r\n* Combine into ``reponses_total``:\r\n  * responses_total\r\n  * responses_by_templatename\r\n  * responses_by_status\r\n  * responses_by_charset\r\n* Combine into ``exceptions_total``:\r\n  * exceptions_by_type\r\n  * exceptions_by_view\r\n\r\n@korfuri, would you be interested in receiving pull requests to this effect?\r\n\r\nEDIT: I'm open to suggestions regarding how to prevent this change breaking existing monitoring infrastructure.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/47", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/47/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/47/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/47", "id": 249694979, "node_id": "MDU6SXNzdWUyNDk2OTQ5Nzk=", "number": 47, "title": "Using with Kubernetes", "user": {"login": "afshinm", "id": 314326, "node_id": "MDQ6VXNlcjMxNDMyNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/314326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afshinm", "html_url": "https://github.com/afshinm", "followers_url": "https://api.github.com/users/afshinm/followers", "following_url": "https://api.github.com/users/afshinm/following{/other_user}", "gists_url": "https://api.github.com/users/afshinm/gists{/gist_id}", "starred_url": "https://api.github.com/users/afshinm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afshinm/subscriptions", "organizations_url": "https://api.github.com/users/afshinm/orgs", "repos_url": "https://api.github.com/users/afshinm/repos", "events_url": "https://api.github.com/users/afshinm/events{/privacy}", "received_events_url": "https://api.github.com/users/afshinm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-11T17:09:37Z", "updated_at": "2017-08-14T07:41:10Z", "closed_at": "2017-08-14T07:41:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thanks for this cool project. \r\n\r\nI'm using uwsgi + Kubernetes and I'd like to add this to my Django app but I'm not sure what would happen if I have one Service but more than one Pod in my cluster? \r\n\r\nImagine my export port is `9090`, then Prometheus sends request to scrap metrics and save them but requests could reach different pods / uwsgi processes. Therefore, the metrics are not accurate. \r\n\r\nWhat should I do in this situation? I presume this is a traditional problem.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/45", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/45/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/45/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/45", "id": 235221072, "node_id": "MDU6SXNzdWUyMzUyMjEwNzI=", "number": 45, "title": "Protect metric url  ", "user": {"login": "esseti", "id": 1928354, "node_id": "MDQ6VXNlcjE5MjgzNTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1928354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esseti", "html_url": "https://github.com/esseti", "followers_url": "https://api.github.com/users/esseti/followers", "following_url": "https://api.github.com/users/esseti/following{/other_user}", "gists_url": "https://api.github.com/users/esseti/gists{/gist_id}", "starred_url": "https://api.github.com/users/esseti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esseti/subscriptions", "organizations_url": "https://api.github.com/users/esseti/orgs", "repos_url": "https://api.github.com/users/esseti/repos", "events_url": "https://api.github.com/users/esseti/events{/privacy}", "received_events_url": "https://api.github.com/users/esseti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-12T12:47:24Z", "updated_at": "2017-07-15T04:07:30Z", "closed_at": "2017-07-15T04:07:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to setup the metrics page in a way that it's accessbile from prometheus but blocked y normale requests? right now if i access `mydomain.com/metrics` i can see the metrics exposed and I would like to avoid it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/39", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/39/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/39/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/39", "id": 226041181, "node_id": "MDU6SXNzdWUyMjYwNDExODE=", "number": 39, "title": "Specify Python version trove classifiers", "user": {"login": "danpalmer", "id": 202400, "node_id": "MDQ6VXNlcjIwMjQwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/202400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danpalmer", "html_url": "https://github.com/danpalmer", "followers_url": "https://api.github.com/users/danpalmer/followers", "following_url": "https://api.github.com/users/danpalmer/following{/other_user}", "gists_url": "https://api.github.com/users/danpalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/danpalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danpalmer/subscriptions", "organizations_url": "https://api.github.com/users/danpalmer/orgs", "repos_url": "https://api.github.com/users/danpalmer/repos", "events_url": "https://api.github.com/users/danpalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/danpalmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-03T16:21:30Z", "updated_at": "2017-07-15T04:13:14Z", "closed_at": "2017-07-15T04:13:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This project is being highlighted by https://caniusepython3.com/ as not being compatible with Python 3 as it does not have the Python 3 trove classifier.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/36", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/36/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/36/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/36", "id": 220260080, "node_id": "MDU6SXNzdWUyMjAyNjAwODA=", "number": 36, "title": "django_prometheus 1.0.8 incompatible with Django 1.11 release", "user": {"login": "kellycampbell", "id": 625998, "node_id": "MDQ6VXNlcjYyNTk5OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/625998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kellycampbell", "html_url": "https://github.com/kellycampbell", "followers_url": "https://api.github.com/users/kellycampbell/followers", "following_url": "https://api.github.com/users/kellycampbell/following{/other_user}", "gists_url": "https://api.github.com/users/kellycampbell/gists{/gist_id}", "starred_url": "https://api.github.com/users/kellycampbell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kellycampbell/subscriptions", "organizations_url": "https://api.github.com/users/kellycampbell/orgs", "repos_url": "https://api.github.com/users/kellycampbell/repos", "events_url": "https://api.github.com/users/kellycampbell/events{/privacy}", "received_events_url": "https://api.github.com/users/kellycampbell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-07T16:13:06Z", "updated_at": "2017-07-15T04:07:57Z", "closed_at": "2017-07-15T04:07:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Partial stack trace:\r\n\r\n```\r\n  File \"venv/local/lib/python2.7/site-packages/django/utils/functional.py\", line 35, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"venv/local/lib/python2.7/site-packages/django/db/backends/mysql/features.py\", line 67, in is_sql_auto_is_null_enabled\r\n    with self.connection.cursor() as cursor:\r\n  File \"venv/local/lib/python2.7/site-packages/django/db/backends/base/base.py\", line 254, in cursor\r\n    return self._cursor()\r\n  File \"venv/local/lib/python2.7/site-packages/django/db/backends/base/base.py\", line 231, in _cursor\r\n    return self._prepare_cursor(self.create_cursor(name))\r\nTypeError: create_cursor() takes exactly 1 argument (2 given)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/35", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/35/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/35/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/35", "id": 220215831, "node_id": "MDU6SXNzdWUyMjAyMTU4MzE=", "number": 35, "title": "Run in Django with uwsgi", "user": {"login": "esseti", "id": 1928354, "node_id": "MDQ6VXNlcjE5MjgzNTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1928354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esseti", "html_url": "https://github.com/esseti", "followers_url": "https://api.github.com/users/esseti/followers", "following_url": "https://api.github.com/users/esseti/following{/other_user}", "gists_url": "https://api.github.com/users/esseti/gists{/gist_id}", "starred_url": "https://api.github.com/users/esseti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esseti/subscriptions", "organizations_url": "https://api.github.com/users/esseti/orgs", "repos_url": "https://api.github.com/users/esseti/repos", "events_url": "https://api.github.com/users/esseti/events{/privacy}", "received_events_url": "https://api.github.com/users/esseti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2017-04-07T13:35:48Z", "updated_at": "2019-09-29T01:12:14Z", "closed_at": "2019-09-29T01:12:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\ndoes anyone of you use Django + django-prometheus and run it inside a docker container?\r\nhow do you do (i'm interest in the uwsgi.ini , .wsgi file and dockerfile)?\r\nI'm able to run it, but the stats is not working (one remains 0, another one is not even exposed).\r\nIf i run it locally without docker it works..\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/32", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/32/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/32/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/32", "id": 205966452, "node_id": "MDU6SXNzdWUyMDU5NjY0NTI=", "number": 32, "title": "Incompatibility with latest Prometheus client", "user": {"login": "antialiasis", "id": 1326447, "node_id": "MDQ6VXNlcjEzMjY0NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1326447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antialiasis", "html_url": "https://github.com/antialiasis", "followers_url": "https://api.github.com/users/antialiasis/followers", "following_url": "https://api.github.com/users/antialiasis/following{/other_user}", "gists_url": "https://api.github.com/users/antialiasis/gists{/gist_id}", "starred_url": "https://api.github.com/users/antialiasis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antialiasis/subscriptions", "organizations_url": "https://api.github.com/users/antialiasis/orgs", "repos_url": "https://api.github.com/users/antialiasis/repos", "events_url": "https://api.github.com/users/antialiasis/events{/privacy}", "received_events_url": "https://api.github.com/users/antialiasis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-07T17:55:38Z", "updated_at": "2017-07-15T04:16:29Z", "closed_at": "2017-07-15T04:16:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[/db/common.py](https://github.com/korfuri/django-prometheus/blob/master/django_prometheus/db/common.py)'s ExceptionCounterByType context manager passes a dict to `labels`; however, version 0.0.15 of prometheus-client [removes this usage](https://github.com/prometheus/client_python/releases/tag/0.0.15), so that keyword arguments must be passed instead. `requirements.txt` only specifies prometheus-client>=0.0.13, so installing django-prometheus right now will install the latest, incompatible prometheus-client.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/29", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/29/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/29/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/29", "id": 192349095, "node_id": "MDU6SXNzdWUxOTIzNDkwOTU=", "number": 29, "title": "Compatibility with Django 1.10", "user": {"login": "davies", "id": 40902, "node_id": "MDQ6VXNlcjQwOTAy", "avatar_url": "https://avatars1.githubusercontent.com/u/40902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davies", "html_url": "https://github.com/davies", "followers_url": "https://api.github.com/users/davies/followers", "following_url": "https://api.github.com/users/davies/following{/other_user}", "gists_url": "https://api.github.com/users/davies/gists{/gist_id}", "starred_url": "https://api.github.com/users/davies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davies/subscriptions", "organizations_url": "https://api.github.com/users/davies/orgs", "repos_url": "https://api.github.com/users/davies/repos", "events_url": "https://api.github.com/users/davies/events{/privacy}", "received_events_url": "https://api.github.com/users/davies/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-29T17:36:20Z", "updated_at": "2017-07-15T04:08:30Z", "closed_at": "2017-07-15T04:08:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use it with Django 1.10, the middleware will fail as \r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/exception.py\", line 39, in inner\r\n    response = get_response(request)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 244, in _legacy_get_response\r\n    response = middleware_method(request)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django_prometheus/middleware.py\", line 114, in process_request\r\n    requests_body_bytes.observe(len(request.body))\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/http/request.py\", line 267, in body\r\n    int(self.META.get('CONTENT_LENGTH', 0)) > settings.DATA_UPLOAD_MAX_MEMORY_SIZE):\r\nValueError: invalid literal for int() with base 10: ''\r\n```\r\n\r\nIt works well with Django 1.8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/26", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/26/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/26/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/26", "id": 175704541, "node_id": "MDU6SXNzdWUxNzU3MDQ1NDE=", "number": 26, "title": "multiple template name exports for both unicode/ascii strings and some times as a single item list", "user": {"login": "thomasf", "id": 330847, "node_id": "MDQ6VXNlcjMzMDg0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/330847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasf", "html_url": "https://github.com/thomasf", "followers_url": "https://api.github.com/users/thomasf/followers", "following_url": "https://api.github.com/users/thomasf/following{/other_user}", "gists_url": "https://api.github.com/users/thomasf/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasf/subscriptions", "organizations_url": "https://api.github.com/users/thomasf/orgs", "repos_url": "https://api.github.com/users/thomasf/repos", "events_url": "https://api.github.com/users/thomasf/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-08T09:18:55Z", "updated_at": "2019-09-21T20:00:12Z", "closed_at": "2019-09-21T20:00:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I havent read the django-prometheus code or the django app in question yet  I don't know why the exports looks like this but I guess it should be possible to see to it that only a single string is exported\n\n![image](https://cloud.githubusercontent.com/assets/330847/18343975/caae92f4-75b5-11e6-9cf2-d07d70c1db18.png)\n\n(latest django 1.8, python 2.7, django-prometheus from master branch)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/25", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/25/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/25/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/25", "id": 175536699, "node_id": "MDU6SXNzdWUxNzU1MzY2OTk=", "number": 25, "title": "New release version", "user": {"login": "thomasf", "id": 330847, "node_id": "MDQ6VXNlcjMzMDg0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/330847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasf", "html_url": "https://github.com/thomasf", "followers_url": "https://api.github.com/users/thomasf/followers", "following_url": "https://api.github.com/users/thomasf/following{/other_user}", "gists_url": "https://api.github.com/users/thomasf/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasf/subscriptions", "organizations_url": "https://api.github.com/users/thomasf/orgs", "repos_url": "https://api.github.com/users/thomasf/repos", "events_url": "https://api.github.com/users/thomasf/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-07T15:40:59Z", "updated_at": "2016-09-13T03:53:43Z", "closed_at": "2016-09-13T03:53:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please publish a new one which has the latest fixes\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/24", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/24/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/24/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/24", "id": 171927484, "node_id": "MDU6SXNzdWUxNzE5Mjc0ODQ=", "number": 24, "title": "MySQL backend, cursor() got an unexpected keyword argument 'factory'", "user": {"login": "stephendwolff", "id": 25349, "node_id": "MDQ6VXNlcjI1MzQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/25349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephendwolff", "html_url": "https://github.com/stephendwolff", "followers_url": "https://api.github.com/users/stephendwolff/followers", "following_url": "https://api.github.com/users/stephendwolff/following{/other_user}", "gists_url": "https://api.github.com/users/stephendwolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephendwolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephendwolff/subscriptions", "organizations_url": "https://api.github.com/users/stephendwolff/orgs", "repos_url": "https://api.github.com/users/stephendwolff/repos", "events_url": "https://api.github.com/users/stephendwolff/events{/privacy}", "received_events_url": "https://api.github.com/users/stephendwolff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-08-18T15:19:33Z", "updated_at": "2016-09-21T08:22:12Z", "closed_at": "2016-09-21T04:03:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting an odd error when using the MySQL backend with a fairly ordinary django (1.8.X) project:\n\nie:\n\n```\nDATABASES = {\n    'default': {\n        'ENGINE': 'django_prometheus.db.backends.mysql',\n.\n.\n```\n\nerror (on start up of the dev server):\n\n```\nTraceback (most recent call last):\n.../manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n\n.../django/db/backends/base/base.py\", line 137, in _cursor\n    return self.create_cursor()\n.../django-prometheus/django_prometheus/db/common.py\", line 48, in create_cursor\n    self.CURSOR_CLASS, self.alias, self.vendor))\nTypeError: cursor() got an unexpected keyword argument 'factory'\n```\n\nI've had a look at the common.py DatabaseWrapperMixin, but couldn't get things working. \n\nAny ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/22", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/22/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/22/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/22", "id": 171406644, "node_id": "MDU6SXNzdWUxNzE0MDY2NDQ=", "number": 22, "title": "Django 1.10 compatibility", "user": {"login": "ulope", "id": 55078, "node_id": "MDQ6VXNlcjU1MDc4", "avatar_url": "https://avatars0.githubusercontent.com/u/55078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulope", "html_url": "https://github.com/ulope", "followers_url": "https://api.github.com/users/ulope/followers", "following_url": "https://api.github.com/users/ulope/following{/other_user}", "gists_url": "https://api.github.com/users/ulope/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulope/subscriptions", "organizations_url": "https://api.github.com/users/ulope/orgs", "repos_url": "https://api.github.com/users/ulope/repos", "events_url": "https://api.github.com/users/ulope/events{/privacy}", "received_events_url": "https://api.github.com/users/ulope/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-16T13:21:05Z", "updated_at": "2016-09-13T03:43:56Z", "closed_at": "2016-09-13T03:43:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Django 1.10 drops support for `django.conf.urls.patterns`. This isn't actually used in django-prometheus but the import is still there in https://github.com/korfuri/django-prometheus/blob/master/django_prometheus/urls.py#L1.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/17", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/17/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/17/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/17", "id": 163284688, "node_id": "MDU6SXNzdWUxNjMyODQ2ODg=", "number": 17, "title": "setup.py litters global package namespace with \"tests\" package", "user": {"login": "enkore", "id": 1330164, "node_id": "MDQ6VXNlcjEzMzAxNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1330164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enkore", "html_url": "https://github.com/enkore", "followers_url": "https://api.github.com/users/enkore/followers", "following_url": "https://api.github.com/users/enkore/following{/other_user}", "gists_url": "https://api.github.com/users/enkore/gists{/gist_id}", "starred_url": "https://api.github.com/users/enkore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enkore/subscriptions", "organizations_url": "https://api.github.com/users/enkore/orgs", "repos_url": "https://api.github.com/users/enkore/repos", "events_url": "https://api.github.com/users/enkore/events{/privacy}", "received_events_url": "https://api.github.com/users/enkore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-30T22:57:19Z", "updated_at": "2016-09-21T04:18:53Z", "closed_at": "2016-09-21T04:18:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Version: 1.0.6\n\n```\n  ...\n  <redacted>/python3.5/site-packages/django_prometheus/utils.py\n  <redacted>/python3.5/site-packages/tests/__init__.py\n  <redacted>/python3.5/site-packages/tests/__pycache__/__init__.cpython-35.pyc\n  <redacted>/python3.5/site-packages/tests/__pycache__/test_django_prometheus.cpython-35.pyc\n  <redacted>/python3.5/site-packages/tests/__pycache__/test_testutils.cpython-35.pyc\n  <redacted>/python3.5/site-packages/tests/test_django_prometheus.py\n  <redacted>/python3.5/site-packages/tests/test_testutils.py\n```\n\nSuggested solution:\n- Move tests package to django_prometheus.tests\n- setup.py line 24 `test_suite=\"tests\",` -> `test_suite=\"django_prometheus.tests,`\n- If you'd accept a patch with this solution I'd make one.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/16", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/16/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/16/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/16", "id": 157608755, "node_id": "MDU6SXNzdWUxNTc2MDg3NTU=", "number": 16, "title": "Add support to PostgreSQL database engine", "user": {"login": "paurullan", "id": 305266, "node_id": "MDQ6VXNlcjMwNTI2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/305266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paurullan", "html_url": "https://github.com/paurullan", "followers_url": "https://api.github.com/users/paurullan/followers", "following_url": "https://api.github.com/users/paurullan/following{/other_user}", "gists_url": "https://api.github.com/users/paurullan/gists{/gist_id}", "starred_url": "https://api.github.com/users/paurullan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paurullan/subscriptions", "organizations_url": "https://api.github.com/users/paurullan/orgs", "repos_url": "https://api.github.com/users/paurullan/repos", "events_url": "https://api.github.com/users/paurullan/events{/privacy}", "received_events_url": "https://api.github.com/users/paurullan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-31T07:43:15Z", "updated_at": "2017-04-26T15:05:11Z", "closed_at": "2016-09-21T04:07:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "PostgreSQL is very used in the Django world and missing support for it is a pity. The backend README says \u00abDoing so should be straightforward, but testing that it works and maintaining it is a lot of busywork\u00bb.\n\nCould this be added to the roadmap?\n\nThe MySQL backend is basically all extracted into the common mixin. What kind of troubles would I encounter doing the same for Postgres?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/14", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/14/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/14/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/14", "id": 136553731, "node_id": "MDU6SXNzdWUxMzY1NTM3MzE=", "number": 14, "title": "django.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.", "user": {"login": "paulosuzart", "id": 141896, "node_id": "MDQ6VXNlcjE0MTg5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/141896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulosuzart", "html_url": "https://github.com/paulosuzart", "followers_url": "https://api.github.com/users/paulosuzart/followers", "following_url": "https://api.github.com/users/paulosuzart/following{/other_user}", "gists_url": "https://api.github.com/users/paulosuzart/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulosuzart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulosuzart/subscriptions", "organizations_url": "https://api.github.com/users/paulosuzart/orgs", "repos_url": "https://api.github.com/users/paulosuzart/repos", "events_url": "https://api.github.com/users/paulosuzart/events{/privacy}", "received_events_url": "https://api.github.com/users/paulosuzart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-26T00:11:54Z", "updated_at": "2016-02-27T03:50:47Z", "closed_at": "2016-02-27T03:50:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm getting the following exception with django 1.9:\n\n```\nUnhandled exception in thread started by <pydev_monkey._NewThreadStartupWithTrace instance at 0x7f68ac317c20>\nTraceback (most recent call last):\n  File \"/data/pycharm-community-5.0.4/helpers/pydev/pydev_monkey.py\", line 521, in __call__\n    return self.original_func(*self.args, **self.kwargs)\n  File \"/data/venv/local/lib/python2.7/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \"/data/venv/local/lib/python2.7/site-packages/django/core/management/commands/runserver.py\", line 109, in inner_run\n    autoreload.raise_last_exception()\n  File \"/data/venv/local/lib/python2.7/site-packages/django/utils/autoreload.py\", line 249, in raise_last_exception\n    six.reraise(*_exception)\n  File \"/data/venv/local/lib/python2.7/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \"/data/venv/local/lib/python2.7/site-packages/django/__init__.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/data/venv/local/lib/python2.7/site-packages/django/apps/registry.py\", line 85, in populate\n    app_config = AppConfig.create(entry)\n  File \"/data/venv/local/lib/python2.7/site-packages/django/apps/config.py\", line 116, in create\n    mod = import_module(mod_path)\n  File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\n    __import__(name)\n  File \"/data/venv/local/lib/python2.7/site-packages/django_prometheus/apps.py\", line 3, in <module>\n    from django_prometheus.migrations import ExportMigrations\n  File \"/data/venv/local/lib/python2.7/site-packages/django_prometheus/migrations.py\", line 3, in <module>\n    from django.db.migrations.executor import MigrationExecutor\n  File \"/data/venv/local/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 7, in <module>\n    from .loader import MigrationLoader\n  File \"/data/venv/local/lib/python2.7/site-packages/django/db/migrations/loader.py\", line 10, in <module>\n    from django.db.migrations.recorder import MigrationRecorder\n  File \"/data/venv/local/lib/python2.7/site-packages/django/db/migrations/recorder.py\", line 12, in <module>\n    class MigrationRecorder(object):\n  File \"/data/venv/local/lib/python2.7/site-packages/django/db/migrations/recorder.py\", line 26, in MigrationRecorder\n    class Migration(models.Model):\n  File \"/data/venv/local/lib/python2.7/site-packages/django/db/models/base.py\", line 94, in __new__\n    app_config = apps.get_containing_app_config(module)\n  File \"/data/venv/local/lib/python2.7/site-packages/django/apps/registry.py\", line 239, in get_containing_app_config\n    self.check_apps_ready()\n  File \"/data/venv/local/lib/python2.7/site-packages/django/apps/registry.py\", line 124, in check_apps_ready\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\ndjango.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/13", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/13/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/13/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/13", "id": 135089351, "node_id": "MDU6SXNzdWUxMzUwODkzNTE=", "number": 13, "title": "Optional use of pip", "user": {"login": "cbaines", "id": 1130010, "node_id": "MDQ6VXNlcjExMzAwMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1130010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbaines", "html_url": "https://github.com/cbaines", "followers_url": "https://api.github.com/users/cbaines/followers", "following_url": "https://api.github.com/users/cbaines/following{/other_user}", "gists_url": "https://api.github.com/users/cbaines/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbaines/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbaines/subscriptions", "organizations_url": "https://api.github.com/users/cbaines/orgs", "repos_url": "https://api.github.com/users/cbaines/repos", "events_url": "https://api.github.com/users/cbaines/events{/privacy}", "received_events_url": "https://api.github.com/users/cbaines/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-20T15:52:34Z", "updated_at": "2016-02-27T16:21:10Z", "closed_at": "2016-02-27T04:20:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking in to using this for several projects, but all of them don't use pip in the production environment, and currently as far as I can tell, using this would necessitate using the pip prometheus exporter, which requires the presence of pip.\n\nOf course, as this is free software (thanks for that :) ), I can just patch this out (it should be as easy as removing this line [1]), but I though I would ask if you would consider either removing this (its easy enough for those who want it to add it in to their applications directly), or making it configurable in some way such that I can avoid the effort of maintaining a patch?\n\n1: https://github.com/korfuri/django-prometheus/blob/master/django_prometheus/__init__.py#L13\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/12", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/12/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/12/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/12", "id": 132578485, "node_id": "MDU6SXNzdWUxMzI1Nzg0ODU=", "number": 12, "title": "uwsgi sample configuration", "user": {"login": "c-castillo", "id": 1154738, "node_id": "MDQ6VXNlcjExNTQ3Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1154738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-castillo", "html_url": "https://github.com/c-castillo", "followers_url": "https://api.github.com/users/c-castillo/followers", "following_url": "https://api.github.com/users/c-castillo/following{/other_user}", "gists_url": "https://api.github.com/users/c-castillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-castillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-castillo/subscriptions", "organizations_url": "https://api.github.com/users/c-castillo/orgs", "repos_url": "https://api.github.com/users/c-castillo/repos", "events_url": "https://api.github.com/users/c-castillo/events{/privacy}", "received_events_url": "https://api.github.com/users/c-castillo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-02-10T00:40:16Z", "updated_at": "2019-09-21T19:59:12Z", "closed_at": "2019-09-21T19:58:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was looking for a configuration to run with nginx + uwsgi.\n\nThe only thing you need to do in order to make this work is adding the following line in uwsgi.ini:\n`enable-threads=True`\nThis will enable threads raised by the app in uwsgi.\n\nBUT, When I go to the expression browser or promdash, it doesn't seem to report anything from the app, it seems it's instrumenting from nowhere.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/11", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/11/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/11/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/11", "id": 132263597, "node_id": "MDU6SXNzdWUxMzIyNjM1OTc=", "number": 11, "title": "Running your app under a wsgi app like uwsgi", "user": {"login": "SEJeff", "id": 4603, "node_id": "MDQ6VXNlcjQ2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SEJeff", "html_url": "https://github.com/SEJeff", "followers_url": "https://api.github.com/users/SEJeff/followers", "following_url": "https://api.github.com/users/SEJeff/following{/other_user}", "gists_url": "https://api.github.com/users/SEJeff/gists{/gist_id}", "starred_url": "https://api.github.com/users/SEJeff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SEJeff/subscriptions", "organizations_url": "https://api.github.com/users/SEJeff/orgs", "repos_url": "https://api.github.com/users/SEJeff/repos", "events_url": "https://api.github.com/users/SEJeff/events{/privacy}", "received_events_url": "https://api.github.com/users/SEJeff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-08T21:39:23Z", "updated_at": "2016-02-09T03:14:49Z", "closed_at": "2016-02-09T03:14:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it even be feasible to use something like this when you're running a django app under a wsgi container such as uwsgi with multiple processes and then apache/nginx via the native uwsgi module?\n\nThis seems great if you're only going to run a single process, but when your application needs to scale due to traffic load (as several of our internal apps do), this model breaks down.\n\nAny advice on setting up this middleware for a use case like that? Also, for shops that have multiple django applications, it might make sense to put some sort of a configurable prefix in the settings to differentiate between different applications. Otherwise, there could be clashes when the same urlconf is defined in two different applications with entirely different code.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/10", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/10/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/10/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/10", "id": 127928350, "node_id": "MDU6SXNzdWUxMjc5MjgzNTA=", "number": 10, "title": "integration with multi-tenancy", "user": {"login": "c-castillo", "id": 1154738, "node_id": "MDQ6VXNlcjExNTQ3Mzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1154738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-castillo", "html_url": "https://github.com/c-castillo", "followers_url": "https://api.github.com/users/c-castillo/followers", "following_url": "https://api.github.com/users/c-castillo/following{/other_user}", "gists_url": "https://api.github.com/users/c-castillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-castillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-castillo/subscriptions", "organizations_url": "https://api.github.com/users/c-castillo/orgs", "repos_url": "https://api.github.com/users/c-castillo/repos", "events_url": "https://api.github.com/users/c-castillo/events{/privacy}", "received_events_url": "https://api.github.com/users/c-castillo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-21T13:51:13Z", "updated_at": "2016-01-25T13:32:48Z", "closed_at": "2016-01-21T14:35:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I wanna use prometheus to generate an app-metric dashboard, but since I'm using multitenancy gem I'm not able to monitor a single endpoint. Also, I'm running prometheus in a docker container, so at this time I'm not able to monitor my django app.\nIs there any alternative to send metrics to prometheus instead prometheus monitoring my endpoints?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/9", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/9/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/9/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/9", "id": 124837907, "node_id": "MDU6SXNzdWUxMjQ4Mzc5MDc=", "number": 9, "title": "View name is not available from request.resolver_match", "user": {"login": "jtallieu", "id": 1068588, "node_id": "MDQ6VXNlcjEwNjg1ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1068588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtallieu", "html_url": "https://github.com/jtallieu", "followers_url": "https://api.github.com/users/jtallieu/followers", "following_url": "https://api.github.com/users/jtallieu/following{/other_user}", "gists_url": "https://api.github.com/users/jtallieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtallieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtallieu/subscriptions", "organizations_url": "https://api.github.com/users/jtallieu/orgs", "repos_url": "https://api.github.com/users/jtallieu/repos", "events_url": "https://api.github.com/users/jtallieu/events{/privacy}", "received_events_url": "https://api.github.com/users/jtallieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-04T20:55:38Z", "updated_at": "2016-01-30T16:22:21Z", "closed_at": "2016-01-30T13:13:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the django documentations here https://docs.djangoproject.com/en/1.9/ref/request-response/#django.http.HttpRequest.resolver_match `resolver_match` is only set after url resolving, which is not done in the Middleware.  Therefore requests_by_view_transport_method is never incremented.\n\nreferring to https://github.com/korfuri/django-prometheus/blob/master/django_prometheus/middleware.py#L120\n\nThank you, this package is very useful otherwise.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/7", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/7/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/7/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/7", "id": 113011786, "node_id": "MDU6SXNzdWUxMTMwMTE3ODY=", "number": 7, "title": "Version 1.0.1 Requires database configuration", "user": {"login": "Darune", "id": 783455, "node_id": "MDQ6VXNlcjc4MzQ1NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/783455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Darune", "html_url": "https://github.com/Darune", "followers_url": "https://api.github.com/users/Darune/followers", "following_url": "https://api.github.com/users/Darune/following{/other_user}", "gists_url": "https://api.github.com/users/Darune/gists{/gist_id}", "starred_url": "https://api.github.com/users/Darune/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Darune/subscriptions", "organizations_url": "https://api.github.com/users/Darune/orgs", "repos_url": "https://api.github.com/users/Darune/repos", "events_url": "https://api.github.com/users/Darune/events{/privacy}", "received_events_url": "https://api.github.com/users/Darune/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-10-23T12:42:56Z", "updated_at": "2015-11-06T11:16:44Z", "closed_at": "2015-10-28T03:36:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use django without any database and since version 1.0.1\ndjango_prometheus doesn't start due to an ImproperlyConfigured exception raised by django, \nHere is the stack trace \n\n```\nFile \"frontend/manage.py\", line 30, in <module>\n  execute_from_command_line(sys.argv)\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django/core/management/__init__.py\", line 351, in execute_from_command_line\n  utility.execute()\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django/core/management/__init__.py\", line 325, in execute\n  django.setup()\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django/__init__.py\", line 18, in setup\n  apps.populate(settings.INSTALLED_APPS)\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django/apps/registry.py\", line 115, in populate\n  app_config.ready()\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django_prometheus/apps.py\", line 22, in ready\n  ExportMigrations()\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django_prometheus/migrations.py\", line 30, in ExportMigrations\n  executor = MigrationExecutor(connections[alias])\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django/db/migrations/executor.py\", line 19, in __init__\n  self.loader = MigrationLoader(self.connection)\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django/db/migrations/loader.py\", line 47, in __init__\n  self.build_graph()\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django/db/migrations/loader.py\", line 182, in build_graph\n  self.applied_migrations = recorder.applied_migrations()\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django/db/migrations/recorder.py\", line 59, in applied_migrations\n  self.ensure_schema()\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django/db/migrations/recorder.py\", line 49, in ensure_schema\n  if self.Migration._meta.db_table in self.connection.introspection.table_names(self.connection.cursor()):\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django/db/backends/base/base.py\", line 162, in cursor\n  cursor = self.make_debug_cursor(self._cursor())\nFile \"~/.virtualenvs/frontend/lib/python3.4/site-packages/django/db/backends/dummy/base.py\", line 21, in complain\n  raise ImproperlyConfigured(\"settings.DATABASES is improperly configured. \"\ndjango.core.exceptions.ImproperlyConfigured: settings.DATABASES is improperly configured. Please supply the ENGINE value. Check settings documentation for more details.\n```\n\nMaybe we should be able to disable migration monitoring feature ? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/6", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/6/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/6/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/6", "id": 92602211, "node_id": "MDU6SXNzdWU5MjYwMjIxMQ==", "number": 6, "title": "import django_prometheus", "user": {"login": "CptJason", "id": 397285, "node_id": "MDQ6VXNlcjM5NzI4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/397285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CptJason", "html_url": "https://github.com/CptJason", "followers_url": "https://api.github.com/users/CptJason/followers", "following_url": "https://api.github.com/users/CptJason/following{/other_user}", "gists_url": "https://api.github.com/users/CptJason/gists{/gist_id}", "starred_url": "https://api.github.com/users/CptJason/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CptJason/subscriptions", "organizations_url": "https://api.github.com/users/CptJason/orgs", "repos_url": "https://api.github.com/users/CptJason/repos", "events_url": "https://api.github.com/users/CptJason/events{/privacy}", "received_events_url": "https://api.github.com/users/CptJason/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-02T10:12:29Z", "updated_at": "2015-07-02T17:52:27Z", "closed_at": "2015-07-02T17:45:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "> > > import django_prometheus\n> > > Traceback (most recent call last):\n> > >   File \"<stdin>\", line 1, in <module>\n> > >   File \"django_prometheus/**init**.py\", line 9, in <module>\n> > >     import django_prometheus.middleware\n> > >   File \"django_prometheus/middleware.py\", line 2, in <module>\n> > >     from django_prometheus.utils import Time, TimeSince, PowersOf\n> > >   File \"django_prometheus/utils.py\", line 2, in <module>\n> > >     from prometheus_client import _INF\n> > > ImportError: cannot import name _INF\n\nWhat 's up? why?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/5", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/5/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/5/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/5", "id": 70906958, "node_id": "MDU6SXNzdWU3MDkwNjk1OA==", "number": 5, "title": "This FileResponse instance has no `content` attribute. Use `streaming_content` instead.", "user": {"login": "audebert", "id": 12993, "node_id": "MDQ6VXNlcjEyOTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/12993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/audebert", "html_url": "https://github.com/audebert", "followers_url": "https://api.github.com/users/audebert/followers", "following_url": "https://api.github.com/users/audebert/following{/other_user}", "gists_url": "https://api.github.com/users/audebert/gists{/gist_id}", "starred_url": "https://api.github.com/users/audebert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/audebert/subscriptions", "organizations_url": "https://api.github.com/users/audebert/orgs", "repos_url": "https://api.github.com/users/audebert/repos", "events_url": "https://api.github.com/users/audebert/events{/privacy}", "received_events_url": "https://api.github.com/users/audebert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-25T13:03:53Z", "updated_at": "2015-04-25T17:49:06Z", "closed_at": "2015-04-25T17:41:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because the content of a `StreamingHttpResponse` is an iterable, https://github.com/korfuri/django-prometheus/blob/master/django_prometheus/middleware.py#L135 cannot get the size of the data. One solution is to replace:\n\n``` python\n        if response.streaming:\n            responses_streaming.inc()\n        responses_body_bytes.observe(len(response.content))\n```\n\nby:\n\n``` python\n        if response.streaming:\n            responses_streaming.inc()\n        else:\n            responses_body_bytes.observe(len(response.content))\n```\n\nShall I make a patch implementing that or is there a better solution?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/3", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/3/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/3/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/3", "id": 66777621, "node_id": "MDU6SXNzdWU2Njc3NzYyMQ==", "number": 3, "title": "Exports are initialized without configuration ", "user": {"login": "korfuri", "id": 1124263, "node_id": "MDQ6VXNlcjExMjQyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1124263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korfuri", "html_url": "https://github.com/korfuri", "followers_url": "https://api.github.com/users/korfuri/followers", "following_url": "https://api.github.com/users/korfuri/following{/other_user}", "gists_url": "https://api.github.com/users/korfuri/gists{/gist_id}", "starred_url": "https://api.github.com/users/korfuri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korfuri/subscriptions", "organizations_url": "https://api.github.com/users/korfuri/orgs", "repos_url": "https://api.github.com/users/korfuri/repos", "events_url": "https://api.github.com/users/korfuri/events{/privacy}", "received_events_url": "https://api.github.com/users/korfuri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 195934525, "node_id": "MDU6TGFiZWwxOTU5MzQ1MjU=", "url": "https://api.github.com/repos/korfuri/django-prometheus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "korfuri", "id": 1124263, "node_id": "MDQ6VXNlcjExMjQyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1124263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korfuri", "html_url": "https://github.com/korfuri", "followers_url": "https://api.github.com/users/korfuri/followers", "following_url": "https://api.github.com/users/korfuri/following{/other_user}", "gists_url": "https://api.github.com/users/korfuri/gists{/gist_id}", "starred_url": "https://api.github.com/users/korfuri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korfuri/subscriptions", "organizations_url": "https://api.github.com/users/korfuri/orgs", "repos_url": "https://api.github.com/users/korfuri/repos", "events_url": "https://api.github.com/users/korfuri/events{/privacy}", "received_events_url": "https://api.github.com/users/korfuri/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "korfuri", "id": 1124263, "node_id": "MDQ6VXNlcjExMjQyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1124263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korfuri", "html_url": "https://github.com/korfuri", "followers_url": "https://api.github.com/users/korfuri/followers", "following_url": "https://api.github.com/users/korfuri/following{/other_user}", "gists_url": "https://api.github.com/users/korfuri/gists{/gist_id}", "starred_url": "https://api.github.com/users/korfuri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korfuri/subscriptions", "organizations_url": "https://api.github.com/users/korfuri/orgs", "repos_url": "https://api.github.com/users/korfuri/repos", "events_url": "https://api.github.com/users/korfuri/events{/privacy}", "received_events_url": "https://api.github.com/users/korfuri/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-04-07T05:17:09Z", "updated_at": "2015-04-10T05:24:24Z", "closed_at": "2015-04-10T05:24:24Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Right now, exporters are created regardless of the configuration, just via an import.  We should rely on django signals and read the configuration before starting an exporter. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/2", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/2/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/2/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/2", "id": 66532918, "node_id": "MDU6SXNzdWU2NjUzMjkxOA==", "number": 2, "title": "Allow instrumenting a model ", "user": {"login": "korfuri", "id": 1124263, "node_id": "MDQ6VXNlcjExMjQyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1124263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korfuri", "html_url": "https://github.com/korfuri", "followers_url": "https://api.github.com/users/korfuri/followers", "following_url": "https://api.github.com/users/korfuri/following{/other_user}", "gists_url": "https://api.github.com/users/korfuri/gists{/gist_id}", "starred_url": "https://api.github.com/users/korfuri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korfuri/subscriptions", "organizations_url": "https://api.github.com/users/korfuri/orgs", "repos_url": "https://api.github.com/users/korfuri/repos", "events_url": "https://api.github.com/users/korfuri/events{/privacy}", "received_events_url": "https://api.github.com/users/korfuri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 195934527, "node_id": "MDU6TGFiZWwxOTU5MzQ1Mjc=", "url": "https://api.github.com/repos/korfuri/django-prometheus/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "korfuri", "id": 1124263, "node_id": "MDQ6VXNlcjExMjQyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1124263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korfuri", "html_url": "https://github.com/korfuri", "followers_url": "https://api.github.com/users/korfuri/followers", "following_url": "https://api.github.com/users/korfuri/following{/other_user}", "gists_url": "https://api.github.com/users/korfuri/gists{/gist_id}", "starred_url": "https://api.github.com/users/korfuri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korfuri/subscriptions", "organizations_url": "https://api.github.com/users/korfuri/orgs", "repos_url": "https://api.github.com/users/korfuri/repos", "events_url": "https://api.github.com/users/korfuri/events{/privacy}", "received_events_url": "https://api.github.com/users/korfuri/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "korfuri", "id": 1124263, "node_id": "MDQ6VXNlcjExMjQyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1124263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korfuri", "html_url": "https://github.com/korfuri", "followers_url": "https://api.github.com/users/korfuri/followers", "following_url": "https://api.github.com/users/korfuri/following{/other_user}", "gists_url": "https://api.github.com/users/korfuri/gists{/gist_id}", "starred_url": "https://api.github.com/users/korfuri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korfuri/subscriptions", "organizations_url": "https://api.github.com/users/korfuri/orgs", "repos_url": "https://api.github.com/users/korfuri/repos", "events_url": "https://api.github.com/users/korfuri/events{/privacy}", "received_events_url": "https://api.github.com/users/korfuri/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-04-06T05:35:04Z", "updated_at": "2015-04-10T05:21:08Z", "closed_at": "2015-04-10T05:21:08Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It would be helpful to be able to instrument a model to export the rate of creations, deletions and updates (and selections?). This would make it trivial to graph account creations over time. \n\nBonus point if this can be done as automagically as possible for the standard user model.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/korfuri/django-prometheus/issues/1", "repository_url": "https://api.github.com/repos/korfuri/django-prometheus", "labels_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/1/comments", "events_url": "https://api.github.com/repos/korfuri/django-prometheus/issues/1/events", "html_url": "https://github.com/korfuri/django-prometheus/issues/1", "id": 66532217, "node_id": "MDU6SXNzdWU2NjUzMjIxNw==", "number": 1, "title": "Export database metrics", "user": {"login": "korfuri", "id": 1124263, "node_id": "MDQ6VXNlcjExMjQyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1124263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korfuri", "html_url": "https://github.com/korfuri", "followers_url": "https://api.github.com/users/korfuri/followers", "following_url": "https://api.github.com/users/korfuri/following{/other_user}", "gists_url": "https://api.github.com/users/korfuri/gists{/gist_id}", "starred_url": "https://api.github.com/users/korfuri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korfuri/subscriptions", "organizations_url": "https://api.github.com/users/korfuri/orgs", "repos_url": "https://api.github.com/users/korfuri/repos", "events_url": "https://api.github.com/users/korfuri/events{/privacy}", "received_events_url": "https://api.github.com/users/korfuri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 195934527, "node_id": "MDU6TGFiZWwxOTU5MzQ1Mjc=", "url": "https://api.github.com/repos/korfuri/django-prometheus/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "korfuri", "id": 1124263, "node_id": "MDQ6VXNlcjExMjQyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1124263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korfuri", "html_url": "https://github.com/korfuri", "followers_url": "https://api.github.com/users/korfuri/followers", "following_url": "https://api.github.com/users/korfuri/following{/other_user}", "gists_url": "https://api.github.com/users/korfuri/gists{/gist_id}", "starred_url": "https://api.github.com/users/korfuri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korfuri/subscriptions", "organizations_url": "https://api.github.com/users/korfuri/orgs", "repos_url": "https://api.github.com/users/korfuri/repos", "events_url": "https://api.github.com/users/korfuri/events{/privacy}", "received_events_url": "https://api.github.com/users/korfuri/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "korfuri", "id": 1124263, "node_id": "MDQ6VXNlcjExMjQyNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1124263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/korfuri", "html_url": "https://github.com/korfuri", "followers_url": "https://api.github.com/users/korfuri/followers", "following_url": "https://api.github.com/users/korfuri/following{/other_user}", "gists_url": "https://api.github.com/users/korfuri/gists{/gist_id}", "starred_url": "https://api.github.com/users/korfuri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/korfuri/subscriptions", "organizations_url": "https://api.github.com/users/korfuri/orgs", "repos_url": "https://api.github.com/users/korfuri/repos", "events_url": "https://api.github.com/users/korfuri/events{/privacy}", "received_events_url": "https://api.github.com/users/korfuri/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-04-06T05:32:23Z", "updated_at": "2015-04-11T07:39:25Z", "closed_at": "2015-04-11T07:39:25Z", "author_association": "OWNER", "active_lock_reason": null, "body": "We should export metrics relative to database i/o. \nWishlist:\n- Counter of new database connections \n- Gauge of open connections\n- Histogram of query execution time, by type (select, insert, update, delete, etc) \n- Histograms of query/response sizes,  by type\n- Everything should be labelled by database, since django allows for multiple databases. Maybe keying by engine would be useful, e.g. to compare \"all mysql backends\". \n", "performed_via_github_app": null, "score": 1.0}]}