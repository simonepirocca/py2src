{"total_count": 293, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/dulwich/dulwich/issues/796", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/796/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/796/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/796/events", "html_url": "https://github.com/dulwich/dulwich/issues/796", "id": 678984503, "node_id": "MDU6SXNzdWU2Nzg5ODQ1MDM=", "number": 796, "title": "AttributeError in porcelain push on Dulwich 0.20.5", "user": {"login": "TheLastProject", "id": 1885159, "node_id": "MDQ6VXNlcjE4ODUxNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1885159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheLastProject", "html_url": "https://github.com/TheLastProject", "followers_url": "https://api.github.com/users/TheLastProject/followers", "following_url": "https://api.github.com/users/TheLastProject/following{/other_user}", "gists_url": "https://api.github.com/users/TheLastProject/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheLastProject/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheLastProject/subscriptions", "organizations_url": "https://api.github.com/users/TheLastProject/orgs", "repos_url": "https://api.github.com/users/TheLastProject/repos", "events_url": "https://api.github.com/users/TheLastProject/events{/privacy}", "received_events_url": "https://api.github.com/users/TheLastProject/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-14T08:11:52Z", "updated_at": "2020-08-14T13:48:29Z", "closed_at": "2020-08-14T13:48:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Dulwich version: 0.25.0\r\nOS: macOS Catalina (10.15.4 (19E287))\r\n\r\nI'm not completely sure what went wrong, but the exception itself triggers in Dulwich:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"pext/ui/qt5.py\", line 1360, in <lambda>\r\n    lambda userinput, arg: callback(userinput, arg),\r\n  File \"/Users/sylviavanos/.config/pext/modules/pext_module_pass/__init__.py\", line 248, in process_response\r\n    self._edit_other_fields(name=\" \".join(data[1:]), value=response)\r\n  File \"/Users/sylviavanos/.config/pext/modules/pext_module_pass/__init__.py\", line 425, in _edit_other_fields\r\n    self._save_password(name, data)\r\n  File \"/Users/sylviavanos/.config/pext/modules/pext_module_pass/__init__.py\", line 312, in _save_password\r\n    self._git_push()\r\n  File \"/Users/sylviavanos/.config/pext/modules/pext_module_pass/__init__.py\", line 120, in _git_push\r\n    porcelain.push(repo, remote_url, 'master', password=self.settings['ssh_password'])\r\n  File \"/usr/local/lib/python3.8/site-packages/dulwich/porcelain.py\", line 996, in push\r\n    (ref, error.encode(err_encoding)))\r\nAttributeError: 'NoneType' object has no attribute 'encode'\r\n```\r\n\r\nThe code that calls Dulwich is also available on GitHub. I've directly linked to the last call it does before Dulwich throws an exception:\r\n\r\nhttps://github.com/Pext/pext_module_pass/blob/2b91e0d4ecdb2a27fca7d6c47d538632dcd45d7b/__init__.py#L120\r\n\r\nI hope this helps. Please tell me if I can help debug anything!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/795", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/795/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/795/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/795/events", "html_url": "https://github.com/dulwich/dulwich/issues/795", "id": 665571574, "node_id": "MDU6SXNzdWU2NjU1NzE1NzQ=", "number": 795, "title": "py2 pulling from git https remote miss module brotli", "user": {"login": "alexrayne", "id": 14196732, "node_id": "MDQ6VXNlcjE0MTk2NzMy", "avatar_url": "https://avatars3.githubusercontent.com/u/14196732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexrayne", "html_url": "https://github.com/alexrayne", "followers_url": "https://api.github.com/users/alexrayne/followers", "following_url": "https://api.github.com/users/alexrayne/following{/other_user}", "gists_url": "https://api.github.com/users/alexrayne/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexrayne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexrayne/subscriptions", "organizations_url": "https://api.github.com/users/alexrayne/orgs", "repos_url": "https://api.github.com/users/alexrayne/repos", "events_url": "https://api.github.com/users/alexrayne/events{/privacy}", "received_events_url": "https://api.github.com/users/alexrayne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-25T11:48:39Z", "updated_at": "2020-07-25T12:26:48Z", "closed_at": "2020-07-25T12:26:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "hallow!\r\n\r\ntry to pull repo with mercurial 5.4 on win8 \r\n\r\n(use hggit https://foss.heptapod.net/mercurial/hg-git/-/commit/c822fd9af8393ad7652c6b5573b8870f21c98e1b)\r\n\r\ngot this crash:\r\n```\r\nD:\\projects\\contiki.hggit>hg pull --verbose --debug --traceback --force git+https://github.com/bkozak-scanimet\r\nrics/contiki-ng.git\r\n\u0447\u0440\u0404\u00a0\u0443\u0448\u0442\u0440\u0445\u044c \u0448\u0447 git+https://github.com/bkozak-scanimetrics/contiki-ng.git\r\nhttp-\u0440\u0442\u0404\u044e\u0401\u0448\u0447\u0440\u040e\u0448\u00a0 \u0404\u0401\u0445\u0441\u0454\u0445\u0404\u0451\u00a0 \u0444\u044b\u00a0 https://github.com/bkozak-scanimetrics/contiki-ng.git\r\n\u044e\u0441\u044b\u0440\u0451\u0404\u2116 (realm): None\r\n\u044f\u044e\u044b\u2116\u0447\u044e\u0442\u0440\u0404\u0445\u044b\u2116: alexrayne\r\n\u044f\u0440\u0401\u044e\u044b\u2116:\r\nhttp-\u0440\u0442\u0404\u044e\u0401\u0448\u0447\u0440\u040e\u0448\u00a0: \u044f\u044e\u044b\u2116\u0447\u044e\u0442\u0440\u0404\u0445\u044b\u2116 alexrayne, \u044f\u0440\u0401\u044e\u044b\u2116 *************\r\nTraceback (most recent call last):\r\n  File \"mercurial\\scmutil.pyc\", line 152, in callcatch\r\n  File \"mercurial\\dispatch.pyc\", line 462, in _runcatchfunc\r\n  File \"mercurial\\dispatch.pyc\", line 1226, in _dispatch\r\n  File \"mercurial\\dispatch.pyc\", line 910, in runcommand\r\n  File \"mercurial\\dispatch.pyc\", line 1237, in _runcommand\r\n  File \"mercurial\\dispatch.pyc\", line 1223, in <lambda>\r\n  File \"mercurial\\util.pyc\", line 1864, in check\r\n  File \"mercurial\\util.pyc\", line 1864, in check\r\n  File \"hgext\\mq.pyc\", line 4218, in mqcommand\r\n  File \"mercurial\\util.pyc\", line 1864, in check\r\n  File \"mercurial\\util.pyc\", line 1864, in check\r\n  File \"hgext\\narrow\\narrowcommands.pyc\", line 148, in pullnarrowcmd\r\n  File \"mercurial\\util.pyc\", line 1864, in check\r\n  File \"mercurial\\util.pyc\", line 1864, in check\r\n  File \"hgext\\rebase.pyc\", line 2115, in pullrebase\r\n  File \"mercurial\\util.pyc\", line 1864, in check\r\n  File \"mercurial\\commands.pyc\", line 5463, in pull\r\n  File \"mercurial\\extensions.pyc\", line 509, in closure\r\n  File \"D:/projects/hg/hg-git\\hggit\\util.py\", line 64, in inner\r\n  File \"D:/projects/hg/hg-git\\hggit\\__init__.py\", line 368, in exchangepull\r\n  File \"D:/projects/hg/hg-git\\hggit\\git_handler.py\", line 283, in fetch\r\n  File \"D:/projects/hg/hg-git\\hggit\\git_handler.py\", line 1202, in fetch_pack\r\n  File \"D:/projects/hg/hg-git\\hggit\\git_handler.py\", line 1764, in get_transport_and_path\r\n  File \"dulwich\\client.pyc\", line 1433, in __init__\r\n  File \"dulwich\\client.pyc\", line 1408, in default_urllib3_manager\r\n  File \"hgdemandimport\\demandimportpy2.pyc\", line 181, in _demandimport\r\n  File \"hgdemandimport\\demandimportpy2.pyc\", line 44, in _hgextimport\r\n  File \"urllib3\\__init__.pyc\", line 7, in <module>\r\n  File \"hgdemandimport\\demandimportpy2.pyc\", line 257, in _demandimport\r\n  File \"hgdemandimport\\demandimportpy2.pyc\", line 44, in _hgextimport\r\n  File \"urllib3\\connectionpool.pyc\", line 39, in <module>\r\n  File \"hgdemandimport\\demandimportpy2.pyc\", line 257, in _demandimport\r\n  File \"hgdemandimport\\demandimportpy2.pyc\", line 44, in _hgextimport\r\n  File \"urllib3\\response.pyc\", line 155, in <module>\r\n  File \"urllib3\\response.pyc\", line 377, in HTTPResponse\r\n  File \"hgdemandimport\\demandimportpy2.pyc\", line 157, in __getattr__\r\n  File \"hgdemandimport\\demandimportpy2.pyc\", line 97, in _load\r\n  File \"hgdemandimport\\demandimportpy2.pyc\", line 44, in _hgextimport\r\nImportError: No module named brotli\r\n\u044f\u0401\u0445\u0401\u0442\u0440\u044d\u044e: No module named brotli!\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/794", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/794/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/794/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/794/events", "html_url": "https://github.com/dulwich/dulwich/issues/794", "id": 662255166, "node_id": "MDU6SXNzdWU2NjIyNTUxNjY=", "number": 794, "title": "Cannot push from shallow fetch", "user": {"login": "zakkie", "id": 697320, "node_id": "MDQ6VXNlcjY5NzMyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/697320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zakkie", "html_url": "https://github.com/zakkie", "followers_url": "https://api.github.com/users/zakkie/followers", "following_url": "https://api.github.com/users/zakkie/following{/other_user}", "gists_url": "https://api.github.com/users/zakkie/gists{/gist_id}", "starred_url": "https://api.github.com/users/zakkie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zakkie/subscriptions", "organizations_url": "https://api.github.com/users/zakkie/orgs", "repos_url": "https://api.github.com/users/zakkie/repos", "events_url": "https://api.github.com/users/zakkie/events{/privacy}", "received_events_url": "https://api.github.com/users/zakkie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-20T20:56:04Z", "updated_at": "2020-07-21T04:07:28Z", "closed_at": "2020-07-20T23:43:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Environment\r\n\r\n- OS: linux\r\n- version dulwich==0.20.5\r\n- Python 3.6.9\r\n\r\ndulwich==0.20.3 did not reproduce this bug\r\n\r\n## Steps to reproduce\r\n\r\n#### Code\r\n\r\n```python\r\nimport os\r\n\r\nimport dulwich\r\nimport dulwich.client\r\nimport dulwich.porcelain\r\nimport paramiko\r\nfrom dulwich.contrib.paramiko_vendor import _ParamikoWrapper\r\n\r\nclass ParamikoSSHKeyVendor:\r\n    kw_args = {'key_filename': './id_rsa'}\r\n\r\n    @classmethod\r\n    def set_key_file(cls, key_filename):\r\n        cls.kw_args['key_filename'] = key_filename\r\n\r\n    def run_command(self, host, command, username='git', port=None):\r\n        if port is None:\r\n            port = 22\r\n        policy = paramiko.client.MissingHostKeyPolicy()\r\n        client = paramiko.SSHClient()\r\n        client.set_missing_host_key_policy(policy)\r\n        client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\r\n        client.connect(host, username=username, port=port, **self.kw_args)\r\n\r\n        channel = client.get_transport().open_session()\r\n        channel.exec_command(command)\r\n        return _ParamikoWrapper(client, channel)\r\n\r\n\r\ndef main():\r\n    key_filename = os.path.join(os.getcwd(), 'git_python')\r\n    ParamikoSSHKeyVendor.set_key_file(key_filename)\r\n    dulwich.client.get_ssh_vendor = ParamikoSSHKeyVendor\r\n\r\n\r\n    remote_repo = 'git@github.com:yamazaki/test.git'\r\n    local_repo = '/tmp/pygit-test'\r\n\r\n    repo = dulwich.porcelain.clone(remote_repo, local_repo, depth=1)\r\n\r\n    # edit data\r\n    with open(os.path.join(local_repo, 'data'), 'a') as f:\r\n        f.write('hoge\\n')\r\n\r\n    dulwich.porcelain.add(local_repo, os.path.join(local_repo, 'data'))\r\n    dulwich.porcelain.commit(repo, message=f'updated')\r\n    dulwich.porcelain.push(repo, remote_repo, 'master')\r\n\r\nmain()\r\n```\r\n\r\n#### Console\r\n\r\n```\r\nEnumerating objects: 4, done.\r\nCounting objects: 100% (4/4), done.\r\nCompressing objects: 100% (4/4), done.\r\nTotal 4 (delta 0), reused 3 (delta 0), pack-reused 0\r\nChecking out bed96c99236a81426c60b23bdd49e1dc59430de9\r\nTraceback (most recent call last):\r\n  File \"py-git.py\", line 49, in <module>\r\n    main()\r\n  File \"py-git.py\", line 47, in main\r\n    dulwich.porcelain.push(repo, remote_repo, 'master')\r\n  File \"/home/yamazaki/test/venv/lib/python3.6/site-packages/dulwich/porcelain.py\", line 984, in push\r\n    progress=errstream.write)\r\n  File \"/home/yamazaki/test/venv/lib/python3.6/site-packages/dulwich/client.py\", line 843, in send_pack\r\n    new_refs = orig_new_refs = update_refs(dict(old_refs))\r\n  File \"/home/yamazaki/test/venv/lib/python3.6/site-packages/dulwich/porcelain.py\", line 973, in update_refs\r\n    check_diverged(r.object_store, refs[rh], r.refs[lh])\r\n  File \"/home/yamazaki/test/venv/lib/python3.6/site-packages/dulwich/porcelain.py\", line 248, in check_diverged\r\n    raise DivergedBranches(current_sha, new_sha)\r\ndulwich.porcelain.DivergedBranches: b'bed96c99236a81426c60b23bdd49e1dc59430de9'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/791", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/791/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/791/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/791/events", "html_url": "https://github.com/dulwich/dulwich/issues/791", "id": 650887178, "node_id": "MDU6SXNzdWU2NTA4ODcxNzg=", "number": 791, "title": "Long refs names get looked up first in object_store", "user": {"login": "Wiguwbe", "id": 18078341, "node_id": "MDQ6VXNlcjE4MDc4MzQx", "avatar_url": "https://avatars1.githubusercontent.com/u/18078341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wiguwbe", "html_url": "https://github.com/Wiguwbe", "followers_url": "https://api.github.com/users/Wiguwbe/followers", "following_url": "https://api.github.com/users/Wiguwbe/following{/other_user}", "gists_url": "https://api.github.com/users/Wiguwbe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wiguwbe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wiguwbe/subscriptions", "organizations_url": "https://api.github.com/users/Wiguwbe/orgs", "repos_url": "https://api.github.com/users/Wiguwbe/repos", "events_url": "https://api.github.com/users/Wiguwbe/events{/privacy}", "received_events_url": "https://api.github.com/users/Wiguwbe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-04T12:57:17Z", "updated_at": "2020-07-04T14:18:13Z", "closed_at": "2020-07-04T14:18:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\nRefs with names with length 20 or 40 get looked up first in object store and then in refs.\r\n\r\nhttps://github.com/dulwich/dulwich/blob/8abe4b3d92344893e5fb6e3385172ef94b5fbf11/dulwich/repo.py#L730\r\n\r\nThis raises an `binascii.Error: Non-hexadecimal digit found`, which is not caught and the `name in self.refs` is never run.\r\n\r\nI'd suggest either check if the string is hexadecimal, and if it is, also look up in the object_store, or catching the exception somewhere *along the way*:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/test/dulwich/dulwich/repo.py\", line 730, in __contains__\r\n    return name in self.object_store or name in self.refs\r\n  File \"/home/user/test/dulwich/dulwich/object_store.py\", line 347, in __contains__\r\n    if self.contains_packed(sha) or self.contains_loose(sha):\r\n  File \"/home/user/test/dulwich/dulwich/object_store.py\", line 336, in contains_packed\r\n    if sha in pack:\r\n  File \"/home/user/test/dulwich/dulwich/pack.py\", line 2017, in __contains__\r\n    self.index.object_index(sha1)\r\n  File \"/home/user/test/dulwich/dulwich/pack.py\", line 400, in object_index\r\n    sha = hex_to_sha(sha)\r\n  File \"/home/user/test/dulwich/dulwich/objects.py\", line 110, in hex_to_sha\r\n    return binascii.unhexlify(hex)\r\nbinascii.Error: Non-hexadecimal digit found\r\n\r\n```\r\n\r\nI'm currently using version 0.20.5 from PyPi, although, this traceback is from the current master branch (8abe4b3d92344893e5fb6e3385172ef94b5fbf11).\r\n\r\nI can and be glad to fix this and open a Pull Request, I'm just not sure if any of my suggestions are the way to go.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/788", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/788/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/788/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/788/events", "html_url": "https://github.com/dulwich/dulwich/issues/788", "id": 644900499, "node_id": "MDU6SXNzdWU2NDQ5MDA0OTk=", "number": 788, "title": "Regression: Can't push to dulwich.server-served repository with no commits", "user": {"login": "mjpieters", "id": 46775, "node_id": "MDQ6VXNlcjQ2Nzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/46775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjpieters", "html_url": "https://github.com/mjpieters", "followers_url": "https://api.github.com/users/mjpieters/followers", "following_url": "https://api.github.com/users/mjpieters/following{/other_user}", "gists_url": "https://api.github.com/users/mjpieters/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjpieters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjpieters/subscriptions", "organizations_url": "https://api.github.com/users/mjpieters/orgs", "repos_url": "https://api.github.com/users/mjpieters/repos", "events_url": "https://api.github.com/users/mjpieters/events{/privacy}", "received_events_url": "https://api.github.com/users/mjpieters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T19:59:14Z", "updated_at": "2020-06-29T01:17:39Z", "closed_at": "2020-06-29T01:17:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here is my reproducer script:\r\n\r\n```python\r\nimport os\r\nimport tempfile\r\nimport threading\r\n\r\nfrom dulwich import porcelain\r\nfrom dulwich.repo import Repo\r\nfrom dulwich.server import DictBackend, TCPGitServer\r\n\r\nwith tempfile.TemporaryDirectory() as td:\r\n    serverrepo = Repo.init(os.path.join(td, \"serverrepo\"), mkdir=True)\r\n    # no commits\r\n    backend = DictBackend({b'/': serverrepo})\r\n    dul_server = TCPGitServer(backend, b'localhost', 0)\r\n    try:\r\n        threading.Thread(target=dul_server.serve).start()\r\n        port = dul_server.socket.getsockname()[1]\r\n\r\n        remote = f\"git://localhost:{port}/\"\r\n        repo = porcelain.clone(remote, os.path.join(td, \"clientrepo\"), checkout=True)\r\n        filepath = os.path.join(repo.path, \"testfile.txt\")\r\n        with open(filepath, \"w\") as f:\r\n            f.write(\"foobar\\n\")\r\n        porcelain.add(repo, filepath)\r\n        porcelain.commit(repo, b\"add a file\", committer=b\"Foo Barra <fbarra@example.com>\")\r\n        porcelain.push(repo, remote, refspecs=[b\"master\"])\r\n    finally:\r\n        dul_server.shutdown()\r\n```\r\n\r\nwhich fails with:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"testscript.py\", line 25, in <module>\r\n    porcelain.push(repo, remote, refspecs=[b\"master\"])\r\n  File \"/.../dulwich/porcelain.py\", line 980, in push\r\n    result = client.send_pack(\r\n  File \"/.../dulwich/client.py\", line 843, in send_pack\r\n    new_refs = orig_new_refs = update_refs(dict(old_refs))\r\n  File \"/.../dulwich/porcelain.py\", line 972, in update_refs\r\n    check_diverged(r, refs[rh], r.refs[lh])\r\nKeyError: b'refs/heads/master'\r\n```\r\n\r\nThis was working fine in Dulwich 0.20.0.\r\n\r\nand if I run `git bisect` with the following `checkcommit.sh` shell script:\r\n\r\n```sh\r\n#!/bin/sh\r\necho 'building extensions'\r\nmake clean > /dev/null && make all > /dev/null\r\necho 'testing client-server interaction'\r\npython testscript.py\r\n```\r\n\r\ngit tells me this broke with b93c20797b0680bef7aaf16121b74b42efe6b047:\r\n\r\n```\r\n$ git bisect log\r\n# bad: [24cafe790aefc5f754e09a306b088c41b64c6280] Use Repo.get_parents, so graft points are considered.\r\n# good: [89bd7162d889b17a5191f9b8b04c16a01241b74f] Release 0.20.0\r\ngit bisect start 'master' 'dulwich-0.20.0'\r\n# good: [ef06f58b398456b6e235603d58158c179aa46f34] Update NEWS.\r\ngit bisect good ef06f58b398456b6e235603d58158c179aa46f34\r\n# bad: [a049507fb1921500f721b3bf57b0ba8146cc5d85] Check for diverged branches.\r\ngit bisect bad a049507fb1921500f721b3bf57b0ba8146cc5d85\r\n# good: [79eafc982850d78721416201ad1d02f6020eef8c] Rename http_req to stateless_req.\r\ngit bisect good 79eafc982850d78721416201ad1d02f6020eef8c\r\n# bad: [b93c20797b0680bef7aaf16121b74b42efe6b047] Prepare for a world in which we check for diverged branches.\r\ngit bisect bad b93c20797b0680bef7aaf16121b74b42efe6b047\r\n# good: [f401f2f979bc838fc2fa50cbfb3ba61be66f554a] Allow passing in global force argument to parse_reftuple.\r\ngit bisect good f401f2f979bc838fc2fa50cbfb3ba61be66f554a\r\n# good: [33e8998f8c21cb195e811c7b951d3d5633f79649] Only fetch objects we don't already have.\r\ngit bisect good 33e8998f8c21cb195e811c7b951d3d5633f79649\r\n# first bad commit: [b93c20797b0680bef7aaf16121b74b42efe6b047] Prepare for a world in which we check for diverged branches.\r\n```\r\n\r\nI manually tested some of the commits between master and that one and indeed that's the point where pushing to an empty repository broke.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/786", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/786/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/786/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/786/events", "html_url": "https://github.com/dulwich/dulwich/issues/786", "id": 643183475, "node_id": "MDU6SXNzdWU2NDMxODM0NzU=", "number": 786, "title": "repo.BaseRepo.do_commit() does not use committer when author is omitted", "user": {"login": "mjpieters", "id": 46775, "node_id": "MDQ6VXNlcjQ2Nzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/46775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjpieters", "html_url": "https://github.com/mjpieters", "followers_url": "https://api.github.com/users/mjpieters/followers", "following_url": "https://api.github.com/users/mjpieters/following{/other_user}", "gists_url": "https://api.github.com/users/mjpieters/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjpieters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjpieters/subscriptions", "organizations_url": "https://api.github.com/users/mjpieters/orgs", "repos_url": "https://api.github.com/users/mjpieters/repos", "events_url": "https://api.github.com/users/mjpieters/events{/privacy}", "received_events_url": "https://api.github.com/users/mjpieters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-22T15:50:22Z", "updated_at": "2020-06-23T01:35:57Z", "closed_at": "2020-06-23T01:35:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As of a65b1c79ffbd8922305fd9263c8728def17fb5eb, `do_commit()` no longer sets `author` to `committer` if not explicitly set. However, the docstring still claims this is the case:\r\n\r\nhttps://github.com/dulwich/dulwich/blob/ba79362c88dc1e9b633d4b2ef78238d2f1ae28e8/dulwich/repo.py#L783\r\n\r\nEither the claim should be removed or the old behaviour should be re-instated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/785", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/785/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/785/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/785/events", "html_url": "https://github.com/dulwich/dulwich/issues/785", "id": 642661582, "node_id": "MDU6SXNzdWU2NDI2NjE1ODI=", "number": 785, "title": "\"TypeError: rstrip arg must be None or str\" when fetching from non-existing repo", "user": {"login": "inducer", "id": 352067, "node_id": "MDQ6VXNlcjM1MjA2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/352067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inducer", "html_url": "https://github.com/inducer", "followers_url": "https://api.github.com/users/inducer/followers", "following_url": "https://api.github.com/users/inducer/following{/other_user}", "gists_url": "https://api.github.com/users/inducer/gists{/gist_id}", "starred_url": "https://api.github.com/users/inducer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inducer/subscriptions", "organizations_url": "https://api.github.com/users/inducer/orgs", "repos_url": "https://api.github.com/users/inducer/repos", "events_url": "https://api.github.com/users/inducer/events{/privacy}", "received_events_url": "https://api.github.com/users/inducer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 410882898, "node_id": "MDU6TGFiZWw0MTA4ODI4OTg=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/contrib", "name": "contrib", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-21T23:32:44Z", "updated_at": "2020-07-04T14:19:22Z", "closed_at": "2020-07-04T14:19:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When fetching from a non-existing git repo via  a Paramiko SSH git client, I get the following backtrace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/andreas/.cache/pypoetry/virtualenvs/relate-courseware-on7htJeR-py3.8/lib/python3.8/site-packages/dulwich/client.py\", line 890, in fetch_pack\r\n    refs, server_capabilities = read_pkt_refs(proto)\r\n  File \"/home/andreas/.cache/pypoetry/virtualenvs/relate-courseware-on7htJeR-py3.8/lib/python3.8/site-packages/dulwich/client.py\", line 224, in read_pkt_refs\r\n    for pkt in proto.read_pkt_seq():\r\n  File \"/home/andreas/.cache/pypoetry/virtualenvs/relate-courseware-on7htJeR-py3.8/lib/python3.8/site-packages/dulwich/protocol.py\", line 266, in read_pkt_seq\r\n    pkt = self.read_pkt_line()\r\n  File \"/home/andreas/.cache/pypoetry/virtualenvs/relate-courseware-on7htJeR-py3.8/lib/python3.8/site-packages/dulwich/protocol.py\", line 212, in read_pkt_line\r\n    raise HangupException()\r\ndulwich.errors.HangupException: The remote server unexpectedly closed the connection.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/andreas/work/django/relate/course/versioning.py\", line 548, in update_course\r\n    run_course_update_command(\r\n  File \"/home/andreas/work/django/relate/course/versioning.py\", line 347, in run_course_update_command\r\n    fetch_pack_result = client.fetch(remote_path, repo)\r\n  File \"/home/andreas/.cache/pypoetry/virtualenvs/relate-courseware-on7htJeR-py3.8/lib/python3.8/site-packages/dulwich/client.py\", line 430, in fetch\r\n    result = self.fetch_pack(\r\n  File \"/home/andreas/.cache/pypoetry/virtualenvs/relate-courseware-on7htJeR-py3.8/lib/python3.8/site-packages/dulwich/client.py\", line 892, in fetch_pack\r\n    _remote_error_from_stderr(stderr)\r\n  File \"/home/andreas/.cache/pypoetry/virtualenvs/relate-courseware-on7htJeR-py3.8/lib/python3.8/site-packages/dulwich/client.py\", line 754, in _remote_error_from_stderr\r\n    lines = [line.rstrip(b'\\n') for line in stderr.readlines()]\r\n  File \"/home/andreas/.cache/pypoetry/virtualenvs/relate-courseware-on7htJeR-py3.8/lib/python3.8/site-packages/dulwich/client.py\", line 754, in <listcomp>\r\n    lines = [line.rstrip(b'\\n') for line in stderr.readlines()]\r\nTypeError: rstrip arg must be None or str\r\n```\r\nIt seems like something goes wrong in the error handling.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/784", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/784/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/784/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/784/events", "html_url": "https://github.com/dulwich/dulwich/issues/784", "id": 642661289, "node_id": "MDU6SXNzdWU2NDI2NjEyODk=", "number": 784, "title": "dulwich command line tool no longer works", "user": {"login": "inducer", "id": 352067, "node_id": "MDQ6VXNlcjM1MjA2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/352067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inducer", "html_url": "https://github.com/inducer", "followers_url": "https://api.github.com/users/inducer/followers", "following_url": "https://api.github.com/users/inducer/following{/other_user}", "gists_url": "https://api.github.com/users/inducer/gists{/gist_id}", "starred_url": "https://api.github.com/users/inducer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inducer/subscriptions", "organizations_url": "https://api.github.com/users/inducer/orgs", "repos_url": "https://api.github.com/users/inducer/repos", "events_url": "https://api.github.com/users/inducer/events{/privacy}", "received_events_url": "https://api.github.com/users/inducer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-21T23:31:13Z", "updated_at": "2020-06-22T01:11:24Z", "closed_at": "2020-06-22T01:11:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"/home/andreas/.cache/pypoetry/virtualenvs/relate-courseware-on7htJeR-py3.8/bin/dulwich\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/home/andreas/.cache/pypoetry/virtualenvs/relate-courseware-on7htJeR-py3.8/lib/python3.8/site-packages/dulwich/cli.py\", line 713, in main\r\n    if len(argv) < 1:\r\nTypeError: object of type 'NoneType' has no len()\r\n```\r\n(`argv` would be passed as the first argument to `main`, but it defaults to `None`, which line 713 isn't prepared for)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/783", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/783/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/783/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/783/events", "html_url": "https://github.com/dulwich/dulwich/issues/783", "id": 641398002, "node_id": "MDU6SXNzdWU2NDEzOTgwMDI=", "number": 783, "title": "0.20.3 fails to work in python 2.7", "user": {"login": "MatzeB", "id": 71571, "node_id": "MDQ6VXNlcjcxNTcx", "avatar_url": "https://avatars2.githubusercontent.com/u/71571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatzeB", "html_url": "https://github.com/MatzeB", "followers_url": "https://api.github.com/users/MatzeB/followers", "following_url": "https://api.github.com/users/MatzeB/following{/other_user}", "gists_url": "https://api.github.com/users/MatzeB/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatzeB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatzeB/subscriptions", "organizations_url": "https://api.github.com/users/MatzeB/orgs", "repos_url": "https://api.github.com/users/MatzeB/repos", "events_url": "https://api.github.com/users/MatzeB/events{/privacy}", "received_events_url": "https://api.github.com/users/MatzeB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-18T17:01:31Z", "updated_at": "2020-06-22T16:20:29Z", "closed_at": "2020-06-18T17:04:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error when trying to install dulwish 0.20.3 with python 2.7:\r\n```\r\n[matthiasb@matthiasb-mbp] /opt/facebook > sudo /opt/homebrew/bin/pip2.7 install dulwich\r\nDownloading/unpacking dulwich\r\n  Downloading dulwich-0.20.3.tar.gz (376kB): 376kB downloaded\r\n  Running setup.py (path:/private/tmp/pip_build_root/dulwich/setup.py) egg_info for package dulwich\r\n    /opt/homebrew/Cellar/python27/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'project_urls'\r\n      warnings.warn(msg)\r\n    /opt/homebrew/Cellar/python27/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'python_requires'\r\n      warnings.warn(msg)\r\n\r\n    warning: no files found matching 'appveyor.yml'\r\n    warning: no files found matching '.travis.yml'\r\nDownloading/unpacking urllib3>=1.24.1 (from dulwich)\r\n  Downloading urllib3-1.25.9-py2.py3-none-any.whl (126kB): 126kB downloaded\r\nDownloading/unpacking certifi (from dulwich)\r\n  Downloading certifi-2020.4.5.2-py2.py3-none-any.whl (157kB): 157kB downloaded\r\nInstalling collected packages: dulwich, urllib3, certifi\r\n  Running setup.py install for dulwich\r\n    /opt/homebrew/Cellar/python27/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'project_urls'\r\n      warnings.warn(msg)\r\n    /opt/homebrew/Cellar/python27/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'python_requires'\r\n      warnings.warn(msg)\r\n\r\n    warning: no files found matching 'appveyor.yml'\r\n    warning: no files found matching '.travis.yml'\r\n    building 'dulwich._objects' extension\r\n    clang -fno-strict-aliasing -fno-common -dynamic -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I/opt/homebrew/include -I/opt/homebrew/opt/openssl/include -I/opt/homebrew/opt/sqlite/include -I/opt/homebrew/Cellar/python27/2.7.10_2/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c dulwich/_objects.c -o build/temp.macosx-10.11-x86_64-2.7/dulwich/_objects.o\r\n    clang -bundle -undefined dynamic_lookup build/temp.macosx-10.11-x86_64-2.7/dulwich/_objects.o -L/opt/homebrew/lib -L/opt/homebrew/opt/openssl/lib -L/opt/homebrew/opt/sqlite/lib -o build/lib.macosx-10.11-x86_64-2.7/dulwich/_objects.so\r\n    building 'dulwich._pack' extension\r\n    clang -fno-strict-aliasing -fno-common -dynamic -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I/opt/homebrew/include -I/opt/homebrew/opt/openssl/include -I/opt/homebrew/opt/sqlite/include -I/opt/homebrew/Cellar/python27/2.7.10_2/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c dulwich/_pack.c -o build/temp.macosx-10.11-x86_64-2.7/dulwich/_pack.o\r\n    clang -bundle -undefined dynamic_lookup build/temp.macosx-10.11-x86_64-2.7/dulwich/_pack.o -L/opt/homebrew/lib -L/opt/homebrew/opt/openssl/lib -L/opt/homebrew/opt/sqlite/lib -o build/lib.macosx-10.11-x86_64-2.7/dulwich/_pack.so\r\n    building 'dulwich._diff_tree' extension\r\n    clang -fno-strict-aliasing -fno-common -dynamic -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I/opt/homebrew/include -I/opt/homebrew/opt/openssl/include -I/opt/homebrew/opt/sqlite/include -I/opt/homebrew/Cellar/python27/2.7.10_2/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c dulwich/_diff_tree.c -o build/temp.macosx-10.11-x86_64-2.7/dulwich/_diff_tree.o\r\n    clang -bundle -undefined dynamic_lookup build/temp.macosx-10.11-x86_64-2.7/dulwich/_diff_tree.o -L/opt/homebrew/lib -L/opt/homebrew/opt/openssl/lib -L/opt/homebrew/opt/sqlite/lib -o build/lib.macosx-10.11-x86_64-2.7/dulwich/_diff_tree.so\r\n    changing mode of build/scripts-2.7/dul-receive-pack from 644 to 755\r\n    changing mode of build/scripts-2.7/dul-upload-pack from 644 to 755\r\n      File \"/opt/homebrew/lib/python2.7/site-packages/dulwich/server.py\", line 150\r\n        def get_refs(self) -> Dict[bytes, bytes]:\r\n                           ^\r\n    SyntaxError: invalid syntax\r\n\r\n      File \"/opt/homebrew/lib/python2.7/site-packages/dulwich/web.py\", line 70\r\n        def date_time_string(timestamp: Optional[float] = None) -> str:\r\n                                      ^\r\n    SyntaxError: invalid syntax\r\n\r\n      File \"/opt/homebrew/lib/python2.7/site-packages/dulwich/porcelain.py\", line 880\r\n        repo: Repo,\r\n            ^\r\n    SyntaxError: invalid syntax\r\n\r\n      File \"/opt/homebrew/lib/python2.7/site-packages/dulwich/objects.py\", line 154\r\n        def object_header(num_type: int, length: int) -> bytes:\r\n                                  ^\r\n    SyntaxError: invalid syntax\r\n\r\n    changing mode of /opt/homebrew/bin/dul-receive-pack to 755\r\n    changing mode of /opt/homebrew/bin/dul-upload-pack to 755\r\n    Installing dulwich script to /opt/homebrew/bin\r\n  Found existing installation: urllib3 1.22\r\n    Uninstalling urllib3:\r\n      Successfully uninstalled urllib3\r\nSuccessfully installed dulwich urllib3 certifi\r\nCleaning up...\r\n```\r\n(Projects using dulwish subsequently fail with the same SyntaxError).\r\n\r\nMy setup:\r\n- Python 2.7.10\r\n- Darwin matthiasb-mbp 19.4.0 Darwin Kernel Version 19.4.0: Wed Mar  4 22:28:40 PST 2020; root:xnu-6153.101.6~15/RELEASE_X86_64 x86_64\r\n\r\nUsing `pip2.7 install install dulwich==0.19.15` to work around the issue is working fine for me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/782", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/782/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/782/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/782/events", "html_url": "https://github.com/dulwich/dulwich/issues/782", "id": 641125964, "node_id": "MDU6SXNzdWU2NDExMjU5NjQ=", "number": 782, "title": "Pull on a shallow clone, from a git-daemon-hosted repository, hangs", "user": {"login": "mjpieters", "id": 46775, "node_id": "MDQ6VXNlcjQ2Nzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/46775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjpieters", "html_url": "https://github.com/mjpieters", "followers_url": "https://api.github.com/users/mjpieters/followers", "following_url": "https://api.github.com/users/mjpieters/following{/other_user}", "gists_url": "https://api.github.com/users/mjpieters/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjpieters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjpieters/subscriptions", "organizations_url": "https://api.github.com/users/mjpieters/orgs", "repos_url": "https://api.github.com/users/mjpieters/repos", "events_url": "https://api.github.com/users/mjpieters/events{/privacy}", "received_events_url": "https://api.github.com/users/mjpieters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-18T11:20:16Z", "updated_at": "2020-06-21T01:49:44Z", "closed_at": "2020-06-21T01:49:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using pull on a shallow clone over the `git://` protocol causes the client to hang.\r\n\r\nTest setup:\r\n\r\n**Git daemon**\r\n\r\n```sh\r\n#!/bin/sh\r\nROOT=$(mktemp -d)\r\nmkdir -p \"$ROOT/testrepo\"\r\ncd \"$ROOT/testrepo\"\r\ngit init\r\necho \"Monty Python's Flying Circus\" > test_file.txt\r\ngit add test_file.txt && git commit -m \"init\"\r\necho \"And now for something completely different\" > other_file.txt\r\ngit add other_file.txt && git commit -m \"addendum\"\r\ncd \"$ROOT\"\r\ngit daemon --export-all --verbose --reuseaddr --base-path=\"$ROOT\" \"$ROOT\"\r\n```\r\n\r\nThis starts `git daemon` on localhost serving a single repository, `testrepo`, with two commits.\r\n\r\n**Dulwich client**\r\n\r\n```python\r\nimport os\r\nimport tempfile\r\nimport threading\r\nimport sys\r\n\r\nfrom dulwich import porcelain\r\nfrom dulwich.repo import Repo\r\n\r\nremote = \"git://localhost/testrepo\" if len(sys.argv) < 2 else sys.argv[1]\r\ntimeout = 0.5 if len(sys.argv) < 3 else float(sys.argv[2])\r\n\r\ndef clone_pull(**kwargs):\r\n    with tempfile.TemporaryDirectory() as td:\r\n        repo = porcelain.clone(remote, os.path.join(td, \"clientrepo\"), checkout=True, **kwargs)\r\n        porcelain.pull(repo, remote)\r\n\r\ndef test(**kwargs):\r\n    t = threading.Thread(target=clone_pull, kwargs=kwargs, daemon=True)\r\n    t.start()\r\n    t.join(timeout)\r\n    assert not t.is_alive()\r\n\r\ntest()\r\ntest(depth=1)\r\n```\r\n\r\nThis first clones `testrepo` in full and then pulls, then tries the same thing with `depth=1`. The latter always hangs on any dulwich release I tried (before f1421c85 git daemon would abort the connection with `fatal: Invalid deepen: deepen None`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/781", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/781/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/781/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/781/events", "html_url": "https://github.com/dulwich/dulwich/issues/781", "id": 640725897, "node_id": "MDU6SXNzdWU2NDA3MjU4OTc=", "number": 781, "title": "git protocol between client and server fails", "user": {"login": "mjpieters", "id": 46775, "node_id": "MDQ6VXNlcjQ2Nzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/46775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjpieters", "html_url": "https://github.com/mjpieters", "followers_url": "https://api.github.com/users/mjpieters/followers", "following_url": "https://api.github.com/users/mjpieters/following{/other_user}", "gists_url": "https://api.github.com/users/mjpieters/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjpieters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjpieters/subscriptions", "organizations_url": "https://api.github.com/users/mjpieters/orgs", "repos_url": "https://api.github.com/users/mjpieters/repos", "events_url": "https://api.github.com/users/mjpieters/events{/privacy}", "received_events_url": "https://api.github.com/users/mjpieters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-17T20:36:09Z", "updated_at": "2020-06-19T19:26:18Z", "closed_at": "2020-06-19T19:26:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems something is broken in the git protocol implementation on either the client or the server side. Here is a minimal demonstration:\r\n\r\n**Server**\r\n\r\n```python\r\n>>> import threading, logging\r\n>>> from dulwich.repo import Repo\r\n>>> from dulwich.server import DictBackend, TCPGitServer\r\n>>> repo = Repo.init(\"/tmp/testrepo\", mkdir=True)\r\n>>> repo.do_commit(b\"init\", committer=b\"Foo Barra <fbarra@example.com>\")\r\nb'60249af57f75a0a6936f4a18d49ea2eff7c64545'\r\n>>> backend = DictBackend({b'/': repo})\r\n>>> dul_server = TCPGitServer(backend, b'localhost', 0)\r\n>>> logging.basicConfig(logging.DEBUG)\r\n>>> threading.Thread(target=dul_server.serve).start()\r\n>>> dul_server.socket.getsockname()[1]\r\n63850\r\n>>> INFO:dulwich.server:Handling request from ('127.0.0.1', 63133)\r\nINFO:dulwich.server:Handling b'git-upload-pack' request, args=[b'/', b'host=localhost']\r\nDEBUG:dulwich.server:Opening repository at b'/'\r\nINFO:dulwich.server:Sending capabilities: [b'multi_ack_detailed', b'multi_ack', b'side-band-64k', b'thin-pack', b'ofs-delta', b'no-progress', b'include-tag', b'shallow', b'no-done', b'symref=HEAD:refs/heads/master']\r\nINFO:dulwich.server:Client capabilities: [b'multi_ack', b'multi_ack_detailed', b'ofs-delta', b'shallow', b'side-band-64k', b'thin-pack']\r\nINFO:dulwich.server:Handling request from ('127.0.0.1', 63275)\r\nINFO:dulwich.server:Handling b'git-upload-pack' request, args=[b'/', b'host=localhost']\r\nDEBUG:dulwich.server:Opening repository at b'/'\r\nINFO:dulwich.server:Sending capabilities: [b'multi_ack_detailed', b'multi_ack', b'side-band-64k', b'thin-pack', b'ofs-delta', b'no-progress', b'include-tag', b'shallow', b'no-done', b'symref=HEAD:refs/heads/master']\r\nINFO:dulwich.server:Client capabilities: [b'multi_ack', b'multi_ack_detailed', b'ofs-delta', b'shallow', b'side-band-64k', b'thin-pack']\r\n```\r\n\r\n**Client**\r\n\r\n```python\r\n>>> from dulwich import porcelain\r\n>>> remote = \"git://localhost:63850/\"\r\n>>> repo = porcelain.clone(remote, '/tmp/clientside', checkout=True)\r\ncounting objects: 2, done.\r\nChecking out 60249af57f75a0a6936f4a18d49ea2eff7c64545\r\n>>> repo\r\n<Repo at '/tmp/clientside'>\r\n>>> porcelain.pull(repo)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/.../lib/python3.6/site-packages/dulwich/porcelain.py\", line 991, in pull\r\n    path, r, progress=errstream.write, determine_wants=determine_wants)\r\n  File \"/.../lib/python3.6/site-packages/dulwich/client.py\", line 432, in fetch\r\n    progress=progress, depth=depth)\r\n  File \"/.../lib/python3.6/site-packages/dulwich/client.py\", line 916, in fetch_pack\r\n    progress)\r\n  File \"/.../lib/python3.6/site-packages/dulwich/client.py\", line 715, in _handle_upload_pack_tail\r\n    pkt = proto.read_pkt_line()\r\n  File \"/.../lib/python3.6/site-packages/dulwich/protocol.py\", line 212, in read_pkt_line\r\n    raise HangupException()\r\ndulwich.errors.HangupException: The remote server unexpectedly closed the connection.\r\n```\r\n\r\nI'm using dulwich 0.20.3 on both sides.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/773", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/773/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/773/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/773/events", "html_url": "https://github.com/dulwich/dulwich/issues/773", "id": 634991351, "node_id": "MDU6SXNzdWU2MzQ5OTEzNTE=", "number": 773, "title": "python 2.7 support is broken in dulwich-0.20.2", "user": {"login": "shiftycow", "id": 237453, "node_id": "MDQ6VXNlcjIzNzQ1Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/237453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shiftycow", "html_url": "https://github.com/shiftycow", "followers_url": "https://api.github.com/users/shiftycow/followers", "following_url": "https://api.github.com/users/shiftycow/following{/other_user}", "gists_url": "https://api.github.com/users/shiftycow/gists{/gist_id}", "starred_url": "https://api.github.com/users/shiftycow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shiftycow/subscriptions", "organizations_url": "https://api.github.com/users/shiftycow/orgs", "repos_url": "https://api.github.com/users/shiftycow/repos", "events_url": "https://api.github.com/users/shiftycow/events{/privacy}", "received_events_url": "https://api.github.com/users/shiftycow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-08T23:08:12Z", "updated_at": "2020-06-08T23:34:48Z", "closed_at": "2020-06-08T23:34:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like Python 2.7 support has been broken in 0.20.2. To replicate:\r\n\r\n`pip --version`\r\n> pip 9.0.1 from /usr/lib/python2.7/dist-packages (python 2.7)\r\n\r\n`pip install dulwich`\r\n>...\r\n>Successfully installed certifi-2020.4.5.2 dulwich-0.20.2 urllib3-1.25.9\r\n\r\n`python`\r\n>Python 2.7.17 (default, Apr 15 2020, 17:20:14) \r\n>[GCC 7.5.0] on linux2\r\n>Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> \r\n```py\r\nfrom dulwich.pack import PackStreamReader\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/mharris/.local/lib/python2.7/site-packages/dulwich/pack.py\", line 77, in <module>\r\n    from dulwich.objects import (  # noqa: E402\r\n  File \"/home/mharris/.local/lib/python2.7/site-packages/dulwich/objects.py\", line 154\r\n    def object_header(num_type: int, length: int) -> bytes:\r\n                              ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\n`dulwich==0.19.16` seems to be OK.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/771", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/771/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/771/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/771/events", "html_url": "https://github.com/dulwich/dulwich/issues/771", "id": 629234194, "node_id": "MDU6SXNzdWU2MjkyMzQxOTQ=", "number": 771, "title": "FYI: unittest warnings on macOS using Python 3.5.3", "user": {"login": "kevinhendricks", "id": 8493752, "node_id": "MDQ6VXNlcjg0OTM3NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8493752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinhendricks", "html_url": "https://github.com/kevinhendricks", "followers_url": "https://api.github.com/users/kevinhendricks/followers", "following_url": "https://api.github.com/users/kevinhendricks/following{/other_user}", "gists_url": "https://api.github.com/users/kevinhendricks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinhendricks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinhendricks/subscriptions", "organizations_url": "https://api.github.com/users/kevinhendricks/orgs", "repos_url": "https://api.github.com/users/kevinhendricks/repos", "events_url": "https://api.github.com/users/kevinhendricks/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinhendricks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-02T14:06:40Z", "updated_at": "2020-06-03T01:19:09Z", "closed_at": "2020-06-03T01:19:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I wanted to try to exercise the unittest for the latest dulwich master merged into Sigil-Ebook/dulwich master with the proposed merge related changes in place.  I used the following commands:\r\n\r\npip3 install -U pip coverage codecov flake8 fastimport\r\npython3 -m coverage run -p -m unittest dulwich.tests.test_suite\r\n\r\nThe testsuite ran 1351 tests and reported OK (skipped=66).\r\n\r\nBut it did generate three warnings, two of which are about unclosed Resources.  \r\nI wanted to pass them along to you in case they were useful.\r\n\r\n/Users/kbhend/Desktop/dulwich/dulwich/repo.py:427: \r\n\tUserWarning: ref refs/heads/blah points at non-present sha 1234566789123456789123567891234657373833 UserWarning)\r\n\r\n/Users/kbhend/Desktop/dulwich/dulwich/file.py:88: \r\n\tResourceWarning: unclosed file <_io.FileIO name='local/.git/objects/pack/pack-796a15229c46f4d34d91472ad78d75f2d5377391.pack' mode='rb' closefd=True>\r\n  return io.open(filename, mode, bufsize)\r\n\r\n/Users/kbhend/Desktop/dulwich/dulwich/config.py:97: \r\n\tResourceWarning: unclosed <socket.socket fd=4, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, \t\t laddr=('127.0.0.1', 49268)>\r\n  return self[key]\r\n\r\nIf these warnings are expected and/or known and existing on other platforms, please close this.   I only brought this to your attention in case regular testing on macOS was not common.\r\n\r\nI was trying to see if the standalone tests I created for diff3merge were actually being invoked.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/768", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/768/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/768/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/768/events", "html_url": "https://github.com/dulwich/dulwich/issues/768", "id": 624562237, "node_id": "MDU6SXNzdWU2MjQ1NjIyMzc=", "number": 768, "title": "Clone repo from googlesource.com", "user": {"login": "giswqs", "id": 5016453, "node_id": "MDQ6VXNlcjUwMTY0NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5016453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giswqs", "html_url": "https://github.com/giswqs", "followers_url": "https://api.github.com/users/giswqs/followers", "following_url": "https://api.github.com/users/giswqs/following{/other_user}", "gists_url": "https://api.github.com/users/giswqs/gists{/gist_id}", "starred_url": "https://api.github.com/users/giswqs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giswqs/subscriptions", "organizations_url": "https://api.github.com/users/giswqs/orgs", "repos_url": "https://api.github.com/users/giswqs/repos", "events_url": "https://api.github.com/users/giswqs/events{/privacy}", "received_events_url": "https://api.github.com/users/giswqs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-05-26T02:36:00Z", "updated_at": "2020-05-27T02:23:53Z", "closed_at": "2020-05-27T02:23:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems duwich could not clone repo from googlesource.com. Any advice? Thanks. \r\n\r\n```\r\nfrom dulwich import porcelain\r\nporcelain.clone(\"git://earthengine.googlesource.com/users/google/datasets\", \"datasets\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/765", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/765/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/765/events", "html_url": "https://github.com/dulwich/dulwich/issues/765", "id": 623682859, "node_id": "MDU6SXNzdWU2MjM2ODI4NTk=", "number": 765, "title": "issues with typing in python 3.5 that do not seem to exist in python 3.7", "user": {"login": "kevinhendricks", "id": 8493752, "node_id": "MDQ6VXNlcjg0OTM3NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8493752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinhendricks", "html_url": "https://github.com/kevinhendricks", "followers_url": "https://api.github.com/users/kevinhendricks/followers", "following_url": "https://api.github.com/users/kevinhendricks/following{/other_user}", "gists_url": "https://api.github.com/users/kevinhendricks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinhendricks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinhendricks/subscriptions", "organizations_url": "https://api.github.com/users/kevinhendricks/orgs", "repos_url": "https://api.github.com/users/kevinhendricks/repos", "events_url": "https://api.github.com/users/kevinhendricks/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinhendricks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-23T15:27:12Z", "updated_at": "2020-05-23T16:48:21Z", "closed_at": "2020-05-23T16:20:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After a pull from master today, ran a test using a python 3.5.3 version and received the following:\r\n\r\n```\r\nLH4057-3970:dul3 kbhend$ python3 ./testmerge.py\r\nTraceback (most recent call last):\r\n  File \"./testmerge.py\", line 7, in <module>\r\n    from dulwich import porcelain\r\n  File \"/Users/kbhend/Desktop/dul3/dulwich/porcelain.py\", line 77, in <module>\r\n    from dulwich.client import (\r\n  File \"/Users/kbhend/Desktop/dul3/dulwich/client.py\", line 104, in <module>\r\n    from dulwich.pack import (\r\n  File \"/Users/kbhend/Desktop/dul3/dulwich/pack.py\", line 77, in <module>\r\n    from dulwich.objects import (  # noqa: E402\r\n  File \"/Users/kbhend/Desktop/dul3/dulwich/objects.py\", line 261\r\n    type_name: bytes\r\n             ^\r\nSyntaxError: invalid syntax\r\nLH4057-3970:dul3 kbhend$ python3 --version\r\nPython 3.5.3\r\n```\r\n\r\nWhen tested on python 3.7.2, no errors reported at all!  ;-)   So perhaps full support for static typing did not make it into python 3.5 series.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/763", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/763/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/763/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/763/events", "html_url": "https://github.com/dulwich/dulwich/issues/763", "id": 622205082, "node_id": "MDU6SXNzdWU2MjIyMDUwODI=", "number": 763, "title": "UnicodeDecodeError: 'ascii' codec can't decode byte 0xe9 in position 27: ordinal not in range(128)", "user": {"login": "timmy61109", "id": 38396747, "node_id": "MDQ6VXNlcjM4Mzk2NzQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/38396747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timmy61109", "html_url": "https://github.com/timmy61109", "followers_url": "https://api.github.com/users/timmy61109/followers", "following_url": "https://api.github.com/users/timmy61109/following{/other_user}", "gists_url": "https://api.github.com/users/timmy61109/gists{/gist_id}", "starred_url": "https://api.github.com/users/timmy61109/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timmy61109/subscriptions", "organizations_url": "https://api.github.com/users/timmy61109/orgs", "repos_url": "https://api.github.com/users/timmy61109/repos", "events_url": "https://api.github.com/users/timmy61109/events{/privacy}", "received_events_url": "https://api.github.com/users/timmy61109/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-21T02:40:16Z", "updated_at": "2020-06-11T10:11:27Z", "closed_at": "2020-06-06T21:18:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is an error that I found. If my file name uses a non-ascii encoding format, the following error will occur. I suggest using `utf8` instead of the following paragraph.\r\n\r\n```python\r\nyield '--- {}{}{}'.format(fromfile.decode(\"utf8\"), fromdate, lineterm).encode('utf8')\r\n```\r\n\r\nThe function that caused the error.\r\n\r\n```python\r\ndef unified_diff(a, b, fromfile='', tofile='', fromfiledate='', tofiledate='', n=3, lineterm='\\n')\r\n```\r\n\r\nError message\r\n\r\n```\r\nEEEEEEEEEEE`\\xe3\\x80\\x82\\n', ...]\r\nb = [b'Fix Translate FileName SSSSSS~EEEEEE\\n', b'\\n', b'\\xe6\\xa8\\x99\\xe9\\xa1\\x8c\\xe8\\xa6\\x8f\\xe5\\x89\\x87:\\n', b'\\n', b'- ...\\xab\\xe8\\xa1\\xa8\\xe7\\xa4\\xba\\xef\\xbc\\x8c\\xe4\\xbe\\x8b\\xe5\\xa6\\x82`Fix Translate File SSSSSS~EEEEEE`\\xe3\\x80\\x82\\n', ...]\r\nfromfile = b'a/.gitlab/commit_templates/\\xe9\\x8c\\xaf\\xe8\\xaa\\xa4\\xe8\\xad\\xaf\\xe6\\x96\\x87.md', tofile = b'b/.gitlab/commit_templates/\\xe9\\x8c\\xaf\\xe8\\xaa\\xa4\\xe8\\xad\\xaf\\xe6\\x96\\x87.md', fromfiledate = ''\r\ntofiledate = '', n = 3, lineterm = '\\n'\r\n\r\n    def unified_diff(a, b, fromfile='', tofile='', fromfiledate='',\r\n                     tofiledate='', n=3, lineterm='\\n'):\r\n        \"\"\"difflib.unified_diff that can detect \"No newline at end of file\" as\r\n        original \"git diff\" does.\r\n    \r\n        Based on the same function in Python2.7 difflib.py\r\n        \"\"\"\r\n        started = False\r\n        for group in SequenceMatcher(None, a, b).get_grouped_opcodes(n):\r\n            if not started:\r\n                started = True\r\n                fromdate = '\\t{}'.format(fromfiledate) if fromfiledate else ''\r\n                todate = '\\t{}'.format(tofiledate) if tofiledate else ''\r\n                yield '--- {}{}{}'.format(\r\n>                   fromfile.decode(\"ascii\"),\r\n                    fromdate,\r\n                    lineterm\r\n                    ).encode('ascii')\r\nE               UnicodeDecodeError: 'ascii' codec can't decode byte 0xe9 in position 27: ordinal not in range(128)\r\n\r\n/usr/local/lib/python3.6/dist-packages/dulwich/patch.py:120: UnicodeDecodeError\r\n\r\n```\r\n\r\nIf it is determined that this is the solution, please let it merge, because the company cannot pass the CI check because of this error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/756", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/756/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/756/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/756/events", "html_url": "https://github.com/dulwich/dulwich/issues/756", "id": 600801293, "node_id": "MDU6SXNzdWU2MDA4MDEyOTM=", "number": 756, "title": "Python3 encoding format conversion problem", "user": {"login": "timmy61109", "id": 38396747, "node_id": "MDQ6VXNlcjM4Mzk2NzQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/38396747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timmy61109", "html_url": "https://github.com/timmy61109", "followers_url": "https://api.github.com/users/timmy61109/followers", "following_url": "https://api.github.com/users/timmy61109/following{/other_user}", "gists_url": "https://api.github.com/users/timmy61109/gists{/gist_id}", "starred_url": "https://api.github.com/users/timmy61109/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timmy61109/subscriptions", "organizations_url": "https://api.github.com/users/timmy61109/orgs", "repos_url": "https://api.github.com/users/timmy61109/repos", "events_url": "https://api.github.com/users/timmy61109/events{/privacy}", "received_events_url": "https://api.github.com/users/timmy61109/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-16T07:11:10Z", "updated_at": "2020-06-11T01:54:51Z", "closed_at": "2020-06-11T01:54:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/dulwich/dulwich/blob/03298e9f0f000f2fbb4474bfffa5083e218675e5/examples/diff.py#L17\r\n\r\nHello, because when you use your sample program to execute, you find that you need to use `encode ('utf8')` to use it after conversion, so I recommend using this method, but I am not sure whether it is compatible with Python2.\r\n\r\nI can assist you to modify this part. Although I will use Pyhton2, it has been abandoned for me, so I can only help you modify Python3.\r\n\r\nThis is the result of my execution. I found him to be great, and it works just like Git.\r\n\r\n```\r\n>>> from dulwich.repo import Repo\r\n>>> from dulwich.patch import write_tree_diff\r\n>>> import sys\r\n>>> \r\n>>> repo_path = \".\"\r\n>>> commit_id = \"c30d8b35af82e0cfb5b471621d5e7c95d7789646\"\r\n>>> \r\n>>> r = Repo(repo_path)\r\n>>> \r\n>>> commit = r[commit_id.encode('utf8')]\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'bytes' object has no attribute 'encode'\r\n>>> parent_commit = r[commit.parents[0]]\r\n>>> outstream = getattr(sys.stdout, 'buffer', sys.stdout)\r\n>>> write_tree_diff(outstream, r.object_store, parent_commit.tree, commit.tree)\r\ndiff --git a/requirements.txt b/requirements.txt\r\nindex d32d86b..537c8f7 100644\r\n--- a/requirements.txt\r\n+++ b/requirements.txt\r\n@@ -3,3 +3,5 @@\r\n flake8\r\n pytest\r\n pylint\r\n+GitPython\r\n+dulwich\r\n>>> \r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/755", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/755/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/755/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/755/events", "html_url": "https://github.com/dulwich/dulwich/issues/755", "id": 600704987, "node_id": "MDU6SXNzdWU2MDA3MDQ5ODc=", "number": 755, "title": "0.19.16 release date?", "user": {"login": "sijis", "id": 618177, "node_id": "MDQ6VXNlcjYxODE3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/618177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sijis", "html_url": "https://github.com/sijis", "followers_url": "https://api.github.com/users/sijis/followers", "following_url": "https://api.github.com/users/sijis/following{/other_user}", "gists_url": "https://api.github.com/users/sijis/gists{/gist_id}", "starred_url": "https://api.github.com/users/sijis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sijis/subscriptions", "organizations_url": "https://api.github.com/users/sijis/orgs", "repos_url": "https://api.github.com/users/sijis/repos", "events_url": "https://api.github.com/users/sijis/events{/privacy}", "received_events_url": "https://api.github.com/users/sijis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-16T02:40:25Z", "updated_at": "2020-04-17T18:35:43Z", "closed_at": "2020-04-17T18:35:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm wondering if there is a target release date for the `0.19.16` version?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/754", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/754/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/754/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/754/events", "html_url": "https://github.com/dulwich/dulwich/issues/754", "id": 594613790, "node_id": "MDU6SXNzdWU1OTQ2MTM3OTA=", "number": 754, "title": "missing 3-way merge", "user": {"login": "kevinhendricks", "id": 8493752, "node_id": "MDQ6VXNlcjg0OTM3NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8493752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinhendricks", "html_url": "https://github.com/kevinhendricks", "followers_url": "https://api.github.com/users/kevinhendricks/followers", "following_url": "https://api.github.com/users/kevinhendricks/following{/other_user}", "gists_url": "https://api.github.com/users/kevinhendricks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinhendricks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinhendricks/subscriptions", "organizations_url": "https://api.github.com/users/kevinhendricks/orgs", "repos_url": "https://api.github.com/users/kevinhendricks/repos", "events_url": "https://api.github.com/users/kevinhendricks/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinhendricks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 53, "created_at": "2020-04-05T19:47:45Z", "updated_at": "2020-07-28T01:42:10Z", "closed_at": "2020-04-06T17:39:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I recently found the blog of James Coglin, \"The If Works\" \r\nSee: https://blog.jcoglan.com/2017/05/08/merging-with-diff3/\r\n\r\nWhere he does a wonderful job both explaining how a diff3 style merge works and providing a basic implementation of it in ruby (I think but I have never programmed in ruby so I am unsure).\r\n\r\nUsing this blog as the basis, I created a diff3merge.py program I would be willing to contribute to dulwich under an MIT license that appears to work.\r\n\r\nIt does require a diff routine that will output all lines (not just modified lines for ease of calculating the line number offsets for chunks).  I also have a python implementation of the myers_diff that does just this but it could easily be replaced by a difflib call to use ndiff while dropping the extra intraline edit hints.\r\n\r\nI am sure it still needs work but does pass the simple test cases I have tried.  It should provide a good basis for further modification and testing.\r\n\r\nAny interest?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/752", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/752/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/752/events", "html_url": "https://github.com/dulwich/dulwich/issues/752", "id": 590118095, "node_id": "MDU6SXNzdWU1OTAxMTgwOTU=", "number": 752, "title": "porcelain.push() does not update remote refs", "user": {"login": "frans-fuerst", "id": 5768870, "node_id": "MDQ6VXNlcjU3Njg4NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5768870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frans-fuerst", "html_url": "https://github.com/frans-fuerst", "followers_url": "https://api.github.com/users/frans-fuerst/followers", "following_url": "https://api.github.com/users/frans-fuerst/following{/other_user}", "gists_url": "https://api.github.com/users/frans-fuerst/gists{/gist_id}", "starred_url": "https://api.github.com/users/frans-fuerst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frans-fuerst/subscriptions", "organizations_url": "https://api.github.com/users/frans-fuerst/orgs", "repos_url": "https://api.github.com/users/frans-fuerst/repos", "events_url": "https://api.github.com/users/frans-fuerst/events{/privacy}", "received_events_url": "https://api.github.com/users/frans-fuerst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-30T09:04:11Z", "updated_at": "2020-06-06T21:18:37Z", "closed_at": "2020-06-06T21:18:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I do the following:\r\n```\r\nrepo = repo.Repo(working_directory)\r\nremote_url = repo.get_config().get((\"remote\", \"origin\"), \"url\").decode()\r\nporcelain.push(repo, remote_url, 'master')\r\n```\r\nI would expect `origin/master` and `origin/HEAD` being set to local `master` but it isn't. When I run\r\n```\r\ngit push\r\n```\r\nin the working directory, the refs get updated.\r\nIs this intended behaviour? In that case: how would I `push` like `git push` does?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/751", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/751/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/751/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/751/events", "html_url": "https://github.com/dulwich/dulwich/issues/751", "id": 585570559, "node_id": "MDU6SXNzdWU1ODU1NzA1NTk=", "number": 751, "title": "notifications for changed refs", "user": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170216, "node_id": "MDU6TGFiZWwxNDgxNzAyMTY=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/enhancement", "name": "enhancement", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-21T20:05:49Z", "updated_at": "2020-06-28T16:07:40Z", "closed_at": "2020-06-28T16:07:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(see also https://github.com/jonashaag/klaus/issues/248)\r\n\r\nIt would be useful if Dulwich provided a way to listen to changes in refs, for long-running processes. The optimal implementation for this would be to use inotify to watch for changes to .git/packed-refs, .git/HEAD and all files under .git/refs.\r\n\r\nI'm not sure whether it makes sense to provide a non-inotify replacement, especially since that may lead to terrible surprises for the performance for some repositories.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/747", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/747/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/747/events", "html_url": "https://github.com/dulwich/dulwich/issues/747", "id": 573014566, "node_id": "MDU6SXNzdWU1NzMwMTQ1NjY=", "number": 747, "title": "Shallow fetches are broken", "user": {"login": "xavierd", "id": 50892, "node_id": "MDQ6VXNlcjUwODky", "avatar_url": "https://avatars2.githubusercontent.com/u/50892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xavierd", "html_url": "https://github.com/xavierd", "followers_url": "https://api.github.com/users/xavierd/followers", "following_url": "https://api.github.com/users/xavierd/following{/other_user}", "gists_url": "https://api.github.com/users/xavierd/gists{/gist_id}", "starred_url": "https://api.github.com/users/xavierd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xavierd/subscriptions", "organizations_url": "https://api.github.com/users/xavierd/orgs", "repos_url": "https://api.github.com/users/xavierd/repos", "events_url": "https://api.github.com/users/xavierd/events{/privacy}", "received_events_url": "https://api.github.com/users/xavierd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-28T21:28:09Z", "updated_at": "2020-03-01T04:44:26Z", "closed_at": "2020-03-01T04:44:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the following code, depth can be None (due to the `or` condition above), which will send \"deepen None\" to the server. A regular git server will choke on this and fail the pull.\r\n\r\nhttps://github.com/dulwich/dulwich/blob/24dcd78c8997539c067f09507bc2bff6529de666/dulwich/client.py#L644", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/740", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/740/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/740/events", "html_url": "https://github.com/dulwich/dulwich/issues/740", "id": 557565200, "node_id": "MDU6SXNzdWU1NTc1NjUyMDA=", "number": 740, "title": "dulwich disable empty commit", "user": {"login": "QGB", "id": 8005654, "node_id": "MDQ6VXNlcjgwMDU2NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8005654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QGB", "html_url": "https://github.com/QGB", "followers_url": "https://api.github.com/users/QGB/followers", "following_url": "https://api.github.com/users/QGB/following{/other_user}", "gists_url": "https://api.github.com/users/QGB/gists{/gist_id}", "starred_url": "https://api.github.com/users/QGB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QGB/subscriptions", "organizations_url": "https://api.github.com/users/QGB/orgs", "repos_url": "https://api.github.com/users/QGB/repos", "events_url": "https://api.github.com/users/QGB/events{/privacy}", "received_events_url": "https://api.github.com/users/QGB/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790716860, "node_id": "MDU6TGFiZWw3OTA3MTY4NjA=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/question", "name": "question", "color": "2ec1f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-30T15:21:51Z", "updated_at": "2020-01-31T01:54:26Z", "closed_at": "2020-01-30T15:29:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/739", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/739/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/739/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/739/events", "html_url": "https://github.com/dulwich/dulwich/issues/739", "id": 555587989, "node_id": "MDU6SXNzdWU1NTU1ODc5ODk=", "number": 739, "title": "Pushing only a new ref (no objects) to a HTTPS repository fails", "user": {"login": "brechtm", "id": 652887, "node_id": "MDQ6VXNlcjY1Mjg4Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/652887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brechtm", "html_url": "https://github.com/brechtm", "followers_url": "https://api.github.com/users/brechtm/followers", "following_url": "https://api.github.com/users/brechtm/following{/other_user}", "gists_url": "https://api.github.com/users/brechtm/gists{/gist_id}", "starred_url": "https://api.github.com/users/brechtm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brechtm/subscriptions", "organizations_url": "https://api.github.com/users/brechtm/orgs", "repos_url": "https://api.github.com/users/brechtm/repos", "events_url": "https://api.github.com/users/brechtm/events{/privacy}", "received_events_url": "https://api.github.com/users/brechtm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-27T13:52:15Z", "updated_at": "2020-06-06T21:30:17Z", "closed_at": "2020-06-06T21:30:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "dulwich 0.19.14, CPython 3.7.2, macOS 10.13.6\r\n\r\nI'm trying to push a new branch (which points to the same commit as master) to a GitHub repository over HTTPS:\r\n\r\n```\r\nfrom dulwich.repo import MemoryRepo\r\nfrom dulwich.porcelain import fetch, push\r\n\r\nrepo = MemoryRepo()\r\nfetch(repo, REMOTE_URL, username=USERNAME, password=PASSWORD)\r\n\r\nrepo[b'refs/heads/somebranch'] = repo[b'refs/remotes/origin/master']\r\n\r\nfor ref, sha in repo.refs.as_dict().items():\r\n    print(ref, sha)\r\n\r\npush(repo, REMOTE_URL, [b'refs/heads/somebranch'],\r\n     username=USERNAME, password=PASSWORD)\r\n\r\n```\r\n\r\nAfter applying #738, this fails with:\r\n\r\n> Push to https://github.com/abc/xyz.git failed -> unpack eof before pack header was fully read\r\n\r\nI'm not sure whether I'm passing the correct arguments to push, since it's not clear from the reference documentation what's needed exactly. The example in the tutorial doesn't seem to make much sense to me, unfortunately.\r\n\r\nI want to do this using the plumbing API eventually. The code below results in the same error:\r\n\r\n```\r\nfrom dulwich.client import get_transport_and_path\r\nfrom dulwich.repo import MemoryRepo\r\n\r\nrepo = MemoryRepo()\r\nclient, path = get_transport_and_path(REMOTE_URL, username=USERNAME,\r\n                                      password=PASSWORD)\r\n\r\ndef define_wants(refs):\r\n    return [refs[b'refs/heads/master']]\r\n\r\nfetch_result = client.fetch(path, repo, define_wants)\r\nbranches = {b'master': fetch_result.refs[b'refs/heads/master']}\r\nrepo.refs.import_refs(b'refs/remotes/origin', branches)\r\nrepo[b'refs/heads/master'] = repo[b'refs/remotes/origin/master']\r\nprint(fetch_result)\r\n\r\nrepo[b'refs/heads/somebranch'] = repo[b'refs/heads/master']\r\n\r\nfor ref, sha in repo.refs.as_dict().items():\r\n    print(ref, sha)\r\n\r\ndef update_refs(refs):\r\n    new_refs = {}\r\n    new_refs[b'refs/heads/somebranch'] = refs[b'refs/heads/master']\r\n    return new_refs\r\n\r\nnew_refs = client.send_pack(path, update_refs,\r\n                            repo.object_store.generate_pack_data)\r\n```\r\n\r\nI'm not sure whether fetching is necessary here (no new objects), but I've included it here just in case.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/735", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/735/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/735/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/735/events", "html_url": "https://github.com/dulwich/dulwich/issues/735", "id": 542460318, "node_id": "MDU6SXNzdWU1NDI0NjAzMTg=", "number": 735, "title": "Test failures on s390x", "user": {"login": "stefanor", "id": 442117, "node_id": "MDQ6VXNlcjQ0MjExNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/442117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanor", "html_url": "https://github.com/stefanor", "followers_url": "https://api.github.com/users/stefanor/followers", "following_url": "https://api.github.com/users/stefanor/following{/other_user}", "gists_url": "https://api.github.com/users/stefanor/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanor/subscriptions", "organizations_url": "https://api.github.com/users/stefanor/orgs", "repos_url": "https://api.github.com/users/stefanor/repos", "events_url": "https://api.github.com/users/stefanor/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-26T07:10:53Z", "updated_at": "2019-12-26T10:49:09Z", "closed_at": "2019-12-26T10:49:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since 8f73bc51e2620820fa1d3aa2c109a3aa3fbe5bc8 a handful of tests have been failing on s390x, e.g. https://buildd.debian.org/status/fetch.php?pkg=dulwich&arch=s390x&ver=0.19.14-3&stamp=1577245226&raw=0:\r\n\r\n```\r\npython 3.7:\r\n======================================================================\r\nFAIL: test_merge_entries_extension (dulwich.tests.test_diff_tree.TreeChangesTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/utils.py\", line 202, in do_test\r\n    method(self, func)\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_diff_tree.py\", line 119, in _do_test_merge_entries\r\n    merge_entries(b'x', self.empty_tree, tree1))\r\nAssertionError: Lists differ: [((None, None, None), (b'x/a', 33188, b'59e[120 chars]4'))] != [(TreeEntry(path=None, mode=None, sha=None)[208 chars]4'))]\r\n\r\nFirst differing element 0:\r\n((None, None, None), (b'x/a', 33188, b'59e[35 chars]2e'))\r\n(TreeEntry(path=None, mode=None, sha=None)[79 chars]2e'))\r\n\r\n- [((None, None, None),\r\n+ [(TreeEntry(path=None, mode=None, sha=None),\r\n-   (b'x/a', 33188, b'59ef8d134f97de87ebcac8e3a0c32d78c81e842e')),\r\n?      --\r\n\r\n+   TreeEntry(path=b'a', mode=33188, sha=b'59ef8d134f97de87ebcac8e3a0c32d78c81e842e')),\r\n?   +++++++++ +++++      +++++       ++++\r\n\r\n-  ((None, None, None),\r\n+  (TreeEntry(path=None, mode=None, sha=None),\r\n-   (b'x/b', 33261, b'611d98703450f8b677144017a77c83405374d654'))]\r\n?      --\r\n\r\n+   TreeEntry(path=b'b', mode=33261, sha=b'611d98703450f8b677144017a77c83405374d654'))]\r\n?   +++++++++ +++++      +++++       ++++\r\n\r\n\r\n======================================================================\r\nFAIL: test_tree_changes_add_delete (dulwich.tests.test_diff_tree.TreeChangesTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_diff_tree.py\", line 188, in test_tree_changes_add_delete\r\n    self.empty_tree, tree)\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_diff_tree.py\", line 161, in assertChangesEqual\r\n    self.assertEqual(expected, actual)\r\nAssertionError: Lists differ: [Tree[65 chars] new=(b'a', 33188, b'2e65efe2a145dda7ee51d1741[151 chars]8'))] != [Tree[65 chars] new=TreeEntry(path=b'a', mode=33188, sha=b'2e[195 chars]8'))]\r\n\r\nFirst differing element 1:\r\nTreeC[64 chars] new=(b'x/b', 33261, b'63d8dbd40c23542e740659a[15 chars]48'))\r\nTreeC[64 chars] new=TreeEntry(path=b'b', mode=33261, sha=b'63[36 chars]48'))\r\n\r\nDiff is 916 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_tree_changes_complex (dulwich.tests.test_diff_tree.TreeChangesTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_diff_tree.py\", line 276, in test_tree_changes_complex\r\n    tree1, tree2)\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_diff_tree.py\", line 161, in assertChangesEqual\r\n    self.assertEqual(expected, actual)\r\nAssertionError: Lists differ: [Tree[21 chars] old=(b'a', 33188, b'd0409d8dd6da0677fc30988da[776 chars]1'))] != [Tree[21 chars] old=TreeEntry(path=b'a', mode=33188, sha=b'd0[923 chars]1'))]\r\n\r\nFirst differing element 1:\r\nTreeC[20 chars] old=(b'b/x/2', 33188, b'c1273b6f917b9226eb91f[64 chars]one))\r\nTreeC[20 chars] old=TreeEntry(path=b'2', mode=33188, sha=b'c1[83 chars]one))\r\n\r\nDiff is 2812 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_tree_changes_name_order (dulwich.tests.test_diff_tree.TreeChangesTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_diff_tree.py\", line 291, in test_tree_changes_name_order\r\n    tree1, tree2)\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_diff_tree.py\", line 161, in assertChangesEqual\r\n    self.assertEqual(expected, actual)\r\nAssertionError: Lists differ: [Tree[21 chars] old=(b'a', 33188, b'2e65efe2a145dda7ee51d1741[475 chars]e'))] != [Tree[21 chars] old=TreeEntry(path=b'a', mode=33188, sha=b'2e[562 chars]e'))]\r\n\r\nFirst differing element 1:\r\nTreeC[64 chars] new=(b'a/x', 33188, b'2e65efe2a145dda7ee51d17[15 chars]2e'))\r\nTreeC[64 chars] new=TreeEntry(path=b'x', mode=33188, sha=b'2e[36 chars]2e'))\r\n\r\nDiff is 1761 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_tree_changes_no_changes (dulwich.tests.test_diff_tree.TreeChangesTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_diff_tree.py\", line 178, in test_tree_changes_no_changes\r\n    tree, tree, want_unchanged=True)\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_diff_tree.py\", line 161, in assertChangesEqual\r\n    self.assertEqual(expected, actual)\r\nAssertionError: Lists differ: [Tree[24 chars] old=(b'a', 33188, b'43ae31d836edd668d12fb87a4[240 chars]8'))] != [Tree[24 chars] old=TreeEntry(path=b'a', mode=33188, sha=b'43[328 chars]8'))]\r\n\r\nFirst differing element 1:\r\nTreeC[23 chars] old=(b'b/c', 33188, b'43ae31d836edd668d12fb87[81 chars]98'))\r\nTreeC[23 chars] old=TreeEntry(path=b'c', mode=33188, sha=b'43[123 chars]98'))\r\n\r\nDiff is 740 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_tree_changes_to_tree (dulwich.tests.test_diff_tree.TreeChangesTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_diff_tree.py\", line 241, in test_tree_changes_to_tree\r\n    tree1, tree2)\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_diff_tree.py\", line 161, in assertChangesEqual\r\n    self.assertEqual(expected, actual)\r\nAssertionError: Lists differ: [Tree[21 chars] old=(b'a', 33188, b'2e65efe2a145dda7ee51d1741[198 chars]1'))] != [Tree[21 chars] old=TreeEntry(path=b'a', mode=33188, sha=b'2e[242 chars]1'))]\r\n\r\nFirst differing element 1:\r\nTreeC[64 chars] new=(b'a/x', 33188, b'c1b0730e0133447badcfd47[15 chars]e1'))\r\nTreeC[64 chars] new=TreeEntry(path=b'x', mode=33188, sha=b'c1[36 chars]e1'))\r\n\r\nDiff is 878 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_iter_tree_contents (dulwich.tests.test_object_store.DiskObjectStoreTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_object_store.py\", line 164, in test_iter_tree_contents\r\n    list(self.store.iter_tree_contents(tree_id)))\r\nAssertionError: Lists differ: [Tree[91 chars]th=b'ad/b', mode=33188, sha=b'63d8dbd40c23542e[280 chars]68')] != [Tree[91 chars]th=b'b', mode=33188, sha=b'63d8dbd40c23542e740[268 chars]68')]\r\n\r\nFirst differing element 1:\r\nTreeEntry(path=b'ad/b', mode=33188, sha=b'63d8dbd40c23542e[21 chars]748')\r\nTreeEntry(path=b'b', mode=33188, sha=b'63d8dbd40c23542e740[18 chars]748')\r\n\r\nDiff is 778 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_iter_tree_contents_include_trees (dulwich.tests.test_object_store.DiskObjectStoreTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_object_store.py\", line 192, in test_iter_tree_contents_include_trees\r\n    self.assertEqual(expected, list(actual))\r\nAssertionError: Lists differ: [Tree[257 chars]th=b'ad/b', mode=33188, sha=b'63d8dbd40c23542e[198 chars]68')] != [Tree[257 chars]th=b'b', mode=33188, sha=b'63d8dbd40c23542e740[186 chars]68')]\r\n\r\nFirst differing element 3:\r\nTreeEntry(path=b'ad/b', mode=33188, sha=b'63d8dbd40c23542e[21 chars]748')\r\nTreeEntry(path=b'b', mode=33188, sha=b'63d8dbd40c23542e740[18 chars]748')\r\n\r\nDiff is 866 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_iter_tree_contents (dulwich.tests.test_object_store.MemoryObjectStoreTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_object_store.py\", line 164, in test_iter_tree_contents\r\n    list(self.store.iter_tree_contents(tree_id)))\r\nAssertionError: Lists differ: [Tree[91 chars]th=b'ad/b', mode=33188, sha=b'63d8dbd40c23542e[280 chars]68')] != [Tree[91 chars]th=b'b', mode=33188, sha=b'63d8dbd40c23542e740[268 chars]68')]\r\n\r\nFirst differing element 1:\r\nTreeEntry(path=b'ad/b', mode=33188, sha=b'63d8dbd40c23542e[21 chars]748')\r\nTreeEntry(path=b'b', mode=33188, sha=b'63d8dbd40c23542e740[18 chars]748')\r\n\r\nDiff is 778 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_iter_tree_contents_include_trees (dulwich.tests.test_object_store.MemoryObjectStoreTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_object_store.py\", line 192, in test_iter_tree_contents_include_trees\r\n    self.assertEqual(expected, list(actual))\r\nAssertionError: Lists differ: [Tree[257 chars]th=b'ad/b', mode=33188, sha=b'63d8dbd40c23542e[198 chars]68')] != [Tree[257 chars]th=b'b', mode=33188, sha=b'63d8dbd40c23542e740[186 chars]68')]\r\n\r\nFirst differing element 3:\r\nTreeEntry(path=b'ad/b', mode=33188, sha=b'63d8dbd40c23542e[21 chars]748')\r\nTreeEntry(path=b'b', mode=33188, sha=b'63d8dbd40c23542e740[18 chars]748')\r\n\r\nDiff is 866 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_iter_tree_contents (dulwich.tests.test_object_store.OverlayObjectStoreTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_object_store.py\", line 164, in test_iter_tree_contents\r\n    list(self.store.iter_tree_contents(tree_id)))\r\nAssertionError: Lists differ: [Tree[91 chars]th=b'ad/b', mode=33188, sha=b'63d8dbd40c23542e[280 chars]68')] != [Tree[91 chars]th=b'b', mode=33188, sha=b'63d8dbd40c23542e740[268 chars]68')]\r\n\r\nFirst differing element 1:\r\nTreeEntry(path=b'ad/b', mode=33188, sha=b'63d8dbd40c23542e[21 chars]748')\r\nTreeEntry(path=b'b', mode=33188, sha=b'63d8dbd40c23542e740[18 chars]748')\r\n\r\nDiff is 778 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_iter_tree_contents_include_trees (dulwich.tests.test_object_store.OverlayObjectStoreTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_object_store.py\", line 192, in test_iter_tree_contents_include_trees\r\n    self.assertEqual(expected, list(actual))\r\nAssertionError: Lists differ: [Tree[257 chars]th=b'ad/b', mode=33188, sha=b'63d8dbd40c23542e[198 chars]68')] != [Tree[257 chars]th=b'b', mode=33188, sha=b'63d8dbd40c23542e740[186 chars]68')]\r\n\r\nFirst differing element 3:\r\nTreeEntry(path=b'ad/b', mode=33188, sha=b'63d8dbd40c23542e[21 chars]748')\r\nTreeEntry(path=b'b', mode=33188, sha=b'63d8dbd40c23542e740[18 chars]748')\r\n\r\nDiff is 866 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_all_changes (dulwich.tests.test_walk.WalkEntryTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_walk.py\", line 475, in test_all_changes\r\n    changes,\r\nAssertionError: Lists differ: [Tree[65 chars] new=(b'x/a', 33188, b'2e65efe2a145dda7ee51d17[153 chars]8'))] != [Tree[65 chars] new=TreeEntry(path=b'a', mode=33188, sha=b'2e[195 chars]8'))]\r\n\r\nFirst differing element 0:\r\nTreeC[64 chars] new=(b'x/a', 33188, b'2e65efe2a145dda7ee51d17[15 chars]2e'))\r\nTreeC[64 chars] new=TreeEntry(path=b'a', mode=33188, sha=b'2e[36 chars]2e'))\r\n\r\nDiff is 1002 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_all_with_merge (dulwich.tests.test_walk.WalkEntryTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_walk.py\", line 506, in test_all_with_merge\r\n    changes,\r\nAssertionError: Lists differ: [[Tre[22 chars] old=(b'x/a', 33188, b'2e65efe2a145dda7ee51d17[518 chars]'))]] != [[Tre[22 chars] old=TreeEntry(path=b'a', mode=33188, sha=b'2e[644 chars]'))]]\r\n\r\nFirst differing element 0:\r\n[Tree[21 chars] old=(b'x/a', 33188, b'2e65efe2a145dda7ee51d17[219 chars]3'))]\r\n[Tree[21 chars] old=TreeEntry(path=b'a', mode=33188, sha=b'2e[282 chars]3'))]\r\n\r\nDiff is 1750 characters long. Set self.maxDiff to None to see it.\r\n\r\n======================================================================\r\nFAIL: test_paths (dulwich.tests.test_walk.WalkerTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_walk.py\", line 230, in test_paths\r\n    self.assertWalkYields([c3, c2], [c3.id], paths=[b'x/b'])\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_walk.py\", line 106, in assertWalkYields\r\n    self.assertEqual(expected, actual)\r\nAssertionError: Lists differ: [<TestWalkEntry commit=b'c075be564e3d40260[117 chars]one>] != []\r\n\r\nFirst list contains 2 additional elements.\r\nFirst extra element 0:\r\n<TestWalkEntry commit=b'c075be564e3d40260b8de5bb0916a081ab61bd79', changes=None>\r\n\r\n+ []\r\n- [<TestWalkEntry commit=b'c075be564e3d40260b8de5bb0916a081ab61bd79', changes=None>,\r\n-  <TestWalkEntry commit=b'b17a2bc155b85a7a90647dd7b5c1508e8041cc5b', changes=None>]\r\n\r\n======================================================================\r\nFAIL: test_paths_subtree (dulwich.tests.test_walk.WalkerTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_walk.py\", line 249, in test_paths_subtree\r\n    self.assertWalkYields([c2], [c3.id], paths=[b'b'])\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_walk.py\", line 106, in assertWalkYields\r\n    self.assertEqual(expected, actual)\r\nAssertionError: Lists differ: [<TestWalkEntry commit=b'f58449d301229c6920[34 chars]one>] != [<WalkEntry commit=b'ed0e288ded9d80e98f349c[416 chars]))]>]\r\n\r\nFirst differing element 0:\r\n<TestWalkEntry commit=b'f58449d301229c6920[33 chars]None>\r\n<WalkEntry commit=b'ed0e288ded9d80e98f349c[183 chars]'))]>\r\n\r\nSecond list contains 1 additional elements.\r\nFirst extra element 1:\r\n<WalkEntry commit=b'f58449d301229c6920d51e555b79dd969a02aa58', changes=[TreeChange(type='add', old=TreeEntry(path=None, mode=None, sha=None), new=TreeEntry(path=b'b', mode=33188, sha=b'63d8dbd40c23542e740659a7168a0ce3138ea748'))]>\r\n\r\n- [<TestWalkEntry commit=b'f58449d301229c6920d51e555b79dd969a02aa58', changes=None>]\r\n+ [<WalkEntry commit=b'ed0e288ded9d80e98f349c4da67b8d888736c65f', changes=[TreeChange(type='add', old=TreeEntry(path=None, mode=None, sha=None), new=TreeEntry(path=b'b', mode=33188, sha=b'63d8dbd40c23542e740659a7168a0ce3138ea748'))]>,\r\n+  <WalkEntry commit=b'f58449d301229c6920d51e555b79dd969a02aa58', changes=[TreeChange(type='add', old=TreeEntry(path=None, mode=None, sha=None), new=TreeEntry(path=b'b', mode=33188, sha=b'63d8dbd40c23542e740659a7168a0ce3138ea748'))]>]\r\n\r\n----------------------------------------------------------------------\r\nRan 1339 tests in 56.921s\r\n\r\nFAILED (failures=16, skipped=64)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/734", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/734/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/734/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/734/events", "html_url": "https://github.com/dulwich/dulwich/issues/734", "id": 538051248, "node_id": "MDU6SXNzdWU1MzgwNTEyNDg=", "number": 734, "title": "fs mode not properly sanitized when comparing with index", "user": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-12-15T13:27:26Z", "updated_at": "2019-12-15T13:30:34Z", "closed_at": "2019-12-15T13:30:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Setting mode 700 on a file leads to dulwich incorrectly reporting that file as having changed, since the index will have the mode reported as 0755.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/733", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/733/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/733/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/733/events", "html_url": "https://github.com/dulwich/dulwich/issues/733", "id": 527630428, "node_id": "MDU6SXNzdWU1Mjc2MzA0Mjg=", "number": 733, "title": "Failed porcelain.clone attempts don't clean up", "user": {"login": "Jongy", "id": 8831572, "node_id": "MDQ6VXNlcjg4MzE1NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8831572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jongy", "html_url": "https://github.com/Jongy", "followers_url": "https://api.github.com/users/Jongy/followers", "following_url": "https://api.github.com/users/Jongy/following{/other_user}", "gists_url": "https://api.github.com/users/Jongy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jongy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jongy/subscriptions", "organizations_url": "https://api.github.com/users/Jongy/orgs", "repos_url": "https://api.github.com/users/Jongy/repos", "events_url": "https://api.github.com/users/Jongy/events{/privacy}", "received_events_url": "https://api.github.com/users/Jongy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-24T00:45:53Z", "updated_at": "2019-11-24T02:02:01Z", "closed_at": "2019-11-24T02:02:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "`clone` first creates the local repository. If it fails later, it doesn't clean up, unlike `git clone`.\r\n\r\nWell I'm not sure if behavior must match the real `git clone` but I just ran `examples/clone.py` with a bad URL and the initialized repository was left, requiring a manual delete. This funny case, at the very least, should be handled IMO.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/732", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/732/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/732/events", "html_url": "https://github.com/dulwich/dulwich/issues/732", "id": 520273211, "node_id": "MDU6SXNzdWU1MjAyNzMyMTE=", "number": 732, "title": "Improperly formatted parameter lists in documentation", "user": {"login": "dullbananas", "id": 47706471, "node_id": "MDQ6VXNlcjQ3NzA2NDcx", "avatar_url": "https://avatars1.githubusercontent.com/u/47706471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dullbananas", "html_url": "https://github.com/dullbananas", "followers_url": "https://api.github.com/users/dullbananas/followers", "following_url": "https://api.github.com/users/dullbananas/following{/other_user}", "gists_url": "https://api.github.com/users/dullbananas/gists{/gist_id}", "starred_url": "https://api.github.com/users/dullbananas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dullbananas/subscriptions", "organizations_url": "https://api.github.com/users/dullbananas/orgs", "repos_url": "https://api.github.com/users/dullbananas/repos", "events_url": "https://api.github.com/users/dullbananas/events{/privacy}", "received_events_url": "https://api.github.com/users/dullbananas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-08T22:58:25Z", "updated_at": "2019-11-10T02:35:37Z", "closed_at": "2019-11-10T02:35:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "![5E3FD7E5-0A3D-42C8-AAFB-CE19E285DF1D](https://user-images.githubusercontent.com/47706471/68516163-845be980-0240-11ea-9165-99d752474018.jpeg)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/731", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/731/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/731/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/731/events", "html_url": "https://github.com/dulwich/dulwich/issues/731", "id": 516873734, "node_id": "MDU6SXNzdWU1MTY4NzM3MzQ=", "number": 731, "title": "Porcelain pull/push commands can lock up process", "user": {"login": "TheLastProject", "id": 1885159, "node_id": "MDQ6VXNlcjE4ODUxNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1885159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheLastProject", "html_url": "https://github.com/TheLastProject", "followers_url": "https://api.github.com/users/TheLastProject/followers", "following_url": "https://api.github.com/users/TheLastProject/following{/other_user}", "gists_url": "https://api.github.com/users/TheLastProject/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheLastProject/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheLastProject/subscriptions", "organizations_url": "https://api.github.com/users/TheLastProject/orgs", "repos_url": "https://api.github.com/users/TheLastProject/repos", "events_url": "https://api.github.com/users/TheLastProject/events{/privacy}", "received_events_url": "https://api.github.com/users/TheLastProject/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-03T19:04:38Z", "updated_at": "2019-11-03T20:20:10Z", "closed_at": "2019-11-03T20:20:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to pull/push something over SSH using `porcelain.pull` or `porselain.push`, Dulwich calls the `SubprocessSSHVendor` which may end up asking for your password on the command line (like for example, to decrypt your SSH key). In my case, the command line isn't visible for the user and thus the porcelain pull/push command may end up \"locking up\" the entire application.\r\n\r\nI'm not sure what the best way to resolve this would be. My first idea was to add `-o BatchMode=yes` to https://github.com/dulwich/dulwich/blob/0dee0a70433f43851ba3cd17411153cd33a26890/dulwich/client.py#L1287, but this would cause a regression for those who do have access to the command line because they will no longer be prompted for a password.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/730", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/730/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/730/events", "html_url": "https://github.com/dulwich/dulwich/issues/730", "id": 513313365, "node_id": "MDU6SXNzdWU1MTMzMTMzNjU=", "number": 730, "title": "Docs have disappeared", "user": {"login": "sfermigier", "id": 271079, "node_id": "MDQ6VXNlcjI3MTA3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/271079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfermigier", "html_url": "https://github.com/sfermigier", "followers_url": "https://api.github.com/users/sfermigier/followers", "following_url": "https://api.github.com/users/sfermigier/following{/other_user}", "gists_url": "https://api.github.com/users/sfermigier/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfermigier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfermigier/subscriptions", "organizations_url": "https://api.github.com/users/sfermigier/orgs", "repos_url": "https://api.github.com/users/sfermigier/repos", "events_url": "https://api.github.com/users/sfermigier/events{/privacy}", "received_events_url": "https://api.github.com/users/sfermigier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-28T13:45:11Z", "updated_at": "2019-10-29T02:45:51Z", "closed_at": "2019-10-29T02:45:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://www.dulwich.io/docs/ -> Error 404.\r\n\r\nSame for https://www.dulwich.io/apidocs\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/729", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/729/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/729/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/729/events", "html_url": "https://github.com/dulwich/dulwich/issues/729", "id": 512965446, "node_id": "MDU6SXNzdWU1MTI5NjU0NDY=", "number": 729, "title": "Video(landing page) is removed from youtube ", "user": {"login": "borisovano", "id": 10387151, "node_id": "MDQ6VXNlcjEwMzg3MTUx", "avatar_url": "https://avatars2.githubusercontent.com/u/10387151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/borisovano", "html_url": "https://github.com/borisovano", "followers_url": "https://api.github.com/users/borisovano/followers", "following_url": "https://api.github.com/users/borisovano/following{/other_user}", "gists_url": "https://api.github.com/users/borisovano/gists{/gist_id}", "starred_url": "https://api.github.com/users/borisovano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/borisovano/subscriptions", "organizations_url": "https://api.github.com/users/borisovano/orgs", "repos_url": "https://api.github.com/users/borisovano/repos", "events_url": "https://api.github.com/users/borisovano/events{/privacy}", "received_events_url": "https://api.github.com/users/borisovano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-27T13:19:35Z", "updated_at": "2019-10-27T16:27:45Z", "closed_at": "2019-10-27T16:27:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dulwich takes its name from the area in London where the friendly Mr. and Mrs. Git once attended a cocktail party: https://www.youtube.com/watch?v=HtyO4tmpPdk", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/727", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/727/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/727/events", "html_url": "https://github.com/dulwich/dulwich/issues/727", "id": 503700316, "node_id": "MDU6SXNzdWU1MDM3MDAzMTY=", "number": 727, "title": "Path handling incorrect on Windows", "user": {"login": "stmcginnis", "id": 3922475, "node_id": "MDQ6VXNlcjM5MjI0NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3922475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stmcginnis", "html_url": "https://github.com/stmcginnis", "followers_url": "https://api.github.com/users/stmcginnis/followers", "following_url": "https://api.github.com/users/stmcginnis/following{/other_user}", "gists_url": "https://api.github.com/users/stmcginnis/gists{/gist_id}", "starred_url": "https://api.github.com/users/stmcginnis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stmcginnis/subscriptions", "organizations_url": "https://api.github.com/users/stmcginnis/orgs", "repos_url": "https://api.github.com/users/stmcginnis/repos", "events_url": "https://api.github.com/users/stmcginnis/events{/privacy}", "received_events_url": "https://api.github.com/users/stmcginnis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-07T21:27:38Z", "updated_at": "2019-10-08T21:33:14Z", "closed_at": "2019-10-08T13:44:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When looking up paths, the current code expects paths to be splittable on '/':\r\n\r\nhttps://www.dulwich.io/code/dulwich/blob/master/dulwich/objects.py#L-1075\r\n\r\nThis causes path lookup failures when run on Windows systems where '\\' is the path separator.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/725", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/725/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/725/events", "html_url": "https://github.com/dulwich/dulwich/issues/725", "id": 495486801, "node_id": "MDU6SXNzdWU0OTU0ODY4MDE=", "number": 725, "title": "load_pack_index throwing FileNotFoundError", "user": {"login": "thuctnguyen", "id": 5082736, "node_id": "MDQ6VXNlcjUwODI3MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5082736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thuctnguyen", "html_url": "https://github.com/thuctnguyen", "followers_url": "https://api.github.com/users/thuctnguyen/followers", "following_url": "https://api.github.com/users/thuctnguyen/following{/other_user}", "gists_url": "https://api.github.com/users/thuctnguyen/gists{/gist_id}", "starred_url": "https://api.github.com/users/thuctnguyen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thuctnguyen/subscriptions", "organizations_url": "https://api.github.com/users/thuctnguyen/orgs", "repos_url": "https://api.github.com/users/thuctnguyen/repos", "events_url": "https://api.github.com/users/thuctnguyen/events{/privacy}", "received_events_url": "https://api.github.com/users/thuctnguyen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423733187, "node_id": "MDU6TGFiZWw0MjM3MzMxODc=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/moreinfo", "name": "moreinfo", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-18T22:37:02Z", "updated_at": "2020-06-28T01:52:10Z", "closed_at": "2020-06-28T01:52:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code at https://github.com/dulwich/dulwich/blob/master/dulwich/pack.py#L275 assumes that the index file is always there on the filesystem. The assumption is not always true as in the case of \"git gc\".\r\n\r\nThe pack files are read and cached in memory. However, the index files are loaded on demand. In the event of a GC, both pack and index files could change. The index files corresponding to the cached pack files may no longer exist on the filesystem.\r\n\r\nTo maintain consistency the index files should be cached as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/723", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/723/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/723/events", "html_url": "https://github.com/dulwich/dulwich/issues/723", "id": 488624817, "node_id": "MDU6SXNzdWU0ODg2MjQ4MTc=", "number": 723, "title": "Dulwich Docs Website `Connection not Private` `NET::ERR_CERT_AUTHORITY_INVALID`", "user": {"login": "RyPeck", "id": 1244954, "node_id": "MDQ6VXNlcjEyNDQ5NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1244954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RyPeck", "html_url": "https://github.com/RyPeck", "followers_url": "https://api.github.com/users/RyPeck/followers", "following_url": "https://api.github.com/users/RyPeck/following{/other_user}", "gists_url": "https://api.github.com/users/RyPeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/RyPeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RyPeck/subscriptions", "organizations_url": "https://api.github.com/users/RyPeck/orgs", "repos_url": "https://api.github.com/users/RyPeck/repos", "events_url": "https://api.github.com/users/RyPeck/events{/privacy}", "received_events_url": "https://api.github.com/users/RyPeck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-03T14:01:19Z", "updated_at": "2019-09-05T03:05:09Z", "closed_at": "2019-09-05T03:05:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Navigating to https://www.dulwich.io/ returns `Connection not Private` errors for me on multiple devices and multiple browsers.\r\n\r\n```\r\nNET::ERR_CERT_AUTHORITY_INVALID\r\nSubject: www.dulwich.io\r\n\r\nIssuer: Fake LE Intermediate X1\r\n\r\nExpires on: Nov 29, 2019\r\n\r\nCurrent date: Sep 3, 2019```\r\n\r\nWas unable to open an issue at https://github.com/dulwich/homepage/ so I opened one here.\r\n\r\nLooks like something went wrong with the Let's Encrypt certificates.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/720", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/720/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/720/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/720/events", "html_url": "https://github.com/dulwich/dulwich/issues/720", "id": 480338368, "node_id": "MDU6SXNzdWU0ODAzMzgzNjg=", "number": 720, "title": "Error on test_diff_apply with 0.19.12", "user": {"login": "polyzen", "id": 3533182, "node_id": "MDQ6VXNlcjM1MzMxODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3533182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polyzen", "html_url": "https://github.com/polyzen", "followers_url": "https://api.github.com/users/polyzen/followers", "following_url": "https://api.github.com/users/polyzen/following{/other_user}", "gists_url": "https://api.github.com/users/polyzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/polyzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polyzen/subscriptions", "organizations_url": "https://api.github.com/users/polyzen/orgs", "repos_url": "https://api.github.com/users/polyzen/repos", "events_url": "https://api.github.com/users/polyzen/events{/privacy}", "received_events_url": "https://api.github.com/users/polyzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-13T19:53:03Z", "updated_at": "2019-08-19T21:45:04Z", "closed_at": "2019-08-13T20:32:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n======================================================================\r\nERROR: test_diff_apply (dulwich.tests.test_porcelain.DiffTreeTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/python-dulwich/src/dulwich-0.19.12/dulwich/tests/test_porcelain.py\", line 757, in test_diff_apply\r\n    run_git_or_fail(git_command)\r\n  File \"/build/python-dulwich/src/dulwich-0.19.12/dulwich/tests/compat/utils.py\", line 145, in run_git_or_fail\r\n    capture_stdout=True, **popen_kwargs)\r\n  File \"/build/python-dulwich/src/dulwich-0.19.12/dulwich/tests/compat/utils.py\", line 135, in run_git\r\n    p = subprocess.Popen(args, env=env, **popen_kwargs)\r\n  File \"/usr/lib/python3.7/subprocess.py\", line 775, in __init__\r\n    restore_signals, start_new_session)\r\n  File \"/usr/lib/python3.7/subprocess.py\", line 1522, in _execute_child\r\n    raise child_exception_type(errno_num, err_msg, err_filename)\r\nFileNotFoundError: [Errno 2] No such file or directory: 'git': 'git'\r\n\r\n----------------------------------------------------------------------\r\nRan 1337 tests in 4.117s\r\n\r\nFAILED (errors=1, skipped=242)\r\n```\r\nArch packages installed while building in a container:\r\n`Packages (4) libnsl-1.2.0-1  python-3.7.4-1  python-certifi-2019.6.16-1  python-urllib3-1.25.3-1`\r\n`Packages (8) python-appdirs-1.4.3-2  python-attrs-19.1.0-1  python-packaging-19.1-2  python-pbr-5.4.2-1  python-pyparsing-2.4.2-1  python-setuptools-1:41.0.1-1  python-six-1.12.0-1  python-mock-3.0.5-1`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/719", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/719/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/719/events", "html_url": "https://github.com/dulwich/dulwich/issues/719", "id": 472879639, "node_id": "MDU6SXNzdWU0NzI4Nzk2Mzk=", "number": 719, "title": "PermissionError while cloning a repository to a directory on a shared SMB disk", "user": {"login": "QCTW", "id": 6727391, "node_id": "MDQ6VXNlcjY3MjczOTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6727391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QCTW", "html_url": "https://github.com/QCTW", "followers_url": "https://api.github.com/users/QCTW/followers", "following_url": "https://api.github.com/users/QCTW/following{/other_user}", "gists_url": "https://api.github.com/users/QCTW/gists{/gist_id}", "starred_url": "https://api.github.com/users/QCTW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QCTW/subscriptions", "organizations_url": "https://api.github.com/users/QCTW/orgs", "repos_url": "https://api.github.com/users/QCTW/repos", "events_url": "https://api.github.com/users/QCTW/events{/privacy}", "received_events_url": "https://api.github.com/users/QCTW/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-25T13:53:33Z", "updated_at": "2019-07-25T22:29:13Z", "closed_at": "2019-07-25T22:29:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI had encountered an issue that happened on Azure shared SMB disk (Ubuntu/Python3) when I tried to clone the repository. I did not have such issue when I run on my Windows. The error is below :\r\n\r\n```\r\n>>> repo_path=\"/path/to/shared/smb/dir\"\r\n>>> porcelain.clone(\"https://gitlab.project.git\", repo_path)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/dist-packages/dulwich/porcelain.py\", line 347, in clone\r\n    r = Repo.init(target)\r\n  File \"/usr/local/lib/python3.5/dist-packages/dulwich/repo.py\", line 1231, in init\r\n    cls._init_maybe_bare(controldir, False)\r\n  File \"/usr/local/lib/python3.5/dist-packages/dulwich/repo.py\", line 1216, in _init_maybe_bare\r\n    ret._init_files(bare)\r\n  File \"/usr/local/lib/python3.5/dist-packages/dulwich/repo.py\", line 280, in _init_files\r\n    if self._determine_file_mode():\r\n  File \"/usr/local/lib/python3.5/dist-packages/dulwich/repo.py\", line 969, in _determine_file_mode\r\n    os.chmod(fname, st1.st_mode ^ stat.S_IXUSR)\r\nPermissionError: [Errno 1] Operation not permitted: '/path/to/shared/smb/dir/.git/.probe-permissions'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/717", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/717/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/717/events", "html_url": "https://github.com/dulwich/dulwich/issues/717", "id": 464155218, "node_id": "MDU6SXNzdWU0NjQxNTUyMTg=", "number": 717, "title": "Support RefsContainer.__iter__", "user": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-04T09:11:36Z", "updated_at": "2019-07-04T11:35:57Z", "closed_at": "2019-07-04T11:35:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reproduce (Python 3.7):\r\n\r\n```\r\nmkdir /tmp/testrepo\r\ncd /tmp/testrepo/\r\ngit init\r\ntouch x\r\ngit add x\r\ngit commit -m \"Initial commit\"\r\n```\r\n\r\n```\r\n>>> list(dulwich.repo.Repo('/tmp/testrepo').refs)\r\n```\r\n\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-4-7e07b889cf8d> in <module>\r\n----> 1 list(dulwich.repo.Repo('/tmp/testrepo').refs)\r\n\r\n~/dev/klaus/venv3/lib/python3.7/site-packages/dulwich/refs.py in __getitem__(self, name)\r\n    280         This method follows all symbolic references.\r\n    281         \"\"\"\r\n--> 282         _, sha = self.follow(name)\r\n    283         if sha is None:\r\n    284             raise KeyError(name)\r\n\r\n~/dev/klaus/venv3/lib/python3.7/site-packages/dulwich/refs.py in follow(self, name)\r\n    246             references in the chain\r\n    247         \"\"\"\r\n--> 248         contents = SYMREF + name\r\n    249         depth = 0\r\n    250         refnames = []\r\n\r\nTypeError: can't concat int to bytes\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/716", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/716/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/716/events", "html_url": "https://github.com/dulwich/dulwich/issues/716", "id": 456789167, "node_id": "MDU6SXNzdWU0NTY3ODkxNjc=", "number": 716, "title": " [Errno 13] Permission denied", "user": {"login": "Dima-Kal", "id": 39248175, "node_id": "MDQ6VXNlcjM5MjQ4MTc1", "avatar_url": "https://avatars1.githubusercontent.com/u/39248175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dima-Kal", "html_url": "https://github.com/Dima-Kal", "followers_url": "https://api.github.com/users/Dima-Kal/followers", "following_url": "https://api.github.com/users/Dima-Kal/following{/other_user}", "gists_url": "https://api.github.com/users/Dima-Kal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dima-Kal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dima-Kal/subscriptions", "organizations_url": "https://api.github.com/users/Dima-Kal/orgs", "repos_url": "https://api.github.com/users/Dima-Kal/repos", "events_url": "https://api.github.com/users/Dima-Kal/events{/privacy}", "received_events_url": "https://api.github.com/users/Dima-Kal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170696, "node_id": "MDU6TGFiZWwxNDgxNzA2OTY=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/windows", "name": "windows", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-17T07:45:00Z", "updated_at": "2020-06-01T20:49:13Z", "closed_at": "2020-06-01T20:49:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "`  File \"C:\\Users\\dkalinic\\source\\repos\\buzzrauto\\py_src\\release_manage.py\", line 25, in update\r\n    index.build_index_from_tree(local_repo.path, index_file, local_repo.object_store, tree)\r\n  File \"C:\\Users\\dkalinic\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\dulwich\\index.py\", line 546, in build_index_from_tree\r\n    obj, entry.mode, full_path, honor_filemode=honor_filemode)\r\n  File \"C:\\Users\\dkalinic\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\dulwich\\index.py\", line 471, in build_file_from_blob\r\n    with open(target_path, 'wb') as f:\r\nPermissionError: [Errno 13] Permission denied: b'.\\\\lib\\\\dulwich\\\\_diff_tree.cp36-win_amd64.pyd'\r\n`\r\n\r\nI get this error when trying to update files from repo\r\nIve tried running it in admin mode and also made sure nothing is using the folder.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/711", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/711/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/711/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/711/events", "html_url": "https://github.com/dulwich/dulwich/issues/711", "id": 451683243, "node_id": "MDU6SXNzdWU0NTE2ODMyNDM=", "number": 711, "title": "build binary wheels for Mac OS X", "user": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-03T20:49:57Z", "updated_at": "2020-06-01T19:55:18Z", "closed_at": "2020-06-01T19:55:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There are currently no wheels for Mac OS X; we should add some, possibly build on travis.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/710", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/710/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/710/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/710/events", "html_url": "https://github.com/dulwich/dulwich/issues/710", "id": 451682584, "node_id": "MDU6SXNzdWU0NTE2ODI1ODQ=", "number": 710, "title": "build binary wheels for Linux", "user": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-03T20:48:18Z", "updated_at": "2020-06-01T20:40:21Z", "closed_at": "2020-06-01T20:40:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This requires building wheels with the manylinux tag: https://github.com/pypa/manylinux", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/709", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/709/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/709/events", "html_url": "https://github.com/dulwich/dulwich/issues/709", "id": 451103363, "node_id": "MDU6SXNzdWU0NTExMDMzNjM=", "number": 709, "title": "Problems installing dulwich from pipy", "user": {"login": "davidam", "id": 1023217, "node_id": "MDQ6VXNlcjEwMjMyMTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1023217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidam", "html_url": "https://github.com/davidam", "followers_url": "https://api.github.com/users/davidam/followers", "following_url": "https://api.github.com/users/davidam/following{/other_user}", "gists_url": "https://api.github.com/users/davidam/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidam/subscriptions", "organizations_url": "https://api.github.com/users/davidam/orgs", "repos_url": "https://api.github.com/users/davidam/repos", "events_url": "https://api.github.com/users/davidam/events{/privacy}", "received_events_url": "https://api.github.com/users/davidam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-01T16:41:57Z", "updated_at": "2019-06-02T02:52:38Z", "closed_at": "2019-06-02T02:52:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "davidam@libresoft /tmp/damegender: (dev) $ pip3 install dulwich\r\nCollecting dulwich\r\n  Using cached https://files.pythonhosted.org/packages/2e/02/42ce6e45a206ccb044d8a3296646497e96b5263624e5862d21da947b9d59/dulwich-0.19.11.tar.gz\r\nRequirement already satisfied: urllib3>=1.23 in ./lib/python3.5/site-packages (from dulwich) (1.25.3)\r\nRequirement already satisfied: certifi in ./lib/python3.5/site-packages (from dulwich) (2019.3.9)\r\nInstalling collected packages: dulwich\r\n  Running setup.py install for dulwich ... error\r\n    ERROR: Complete output from command /tmp/damegender/bin/python3 -u -c 'import setuptools, tokenize;__file__='\"'\"'/tmp/pip-install-x3g6lja7/dulwich/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-4zwce5x1/install-record.txt --single-version-externally-managed --compile --install-headers /tmp/damegender/include/site/python3.5/dulwich:\r\n    ERROR: running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.linux-x86_64-3.5\r\n    creating build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/reflog.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/refs.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/patch.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/ignore.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/fastexport.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/mailmap.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/walk.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/archive.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/objectspec.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/hooks.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/protocol.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/stash.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/diff_tree.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/object_store.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/line_ending.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/__init__.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/file.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/repo.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/server.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/objects.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/lru_cache.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/porcelain.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/log_utils.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/web.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/client.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/errors.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/index.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/greenthreads.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/pack.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/config.py -> build/lib.linux-x86_64-3.5/dulwich\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_archive.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_protocol.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_line_ending.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_repository.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_object_store.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_web.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_file.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_pack.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_index.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_refs.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_diff_tree.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_reflog.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_utils.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_stash.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_client.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/__init__.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_grafts.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_server.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_objects.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_porcelain.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_walk.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_config.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_mailmap.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_objectspec.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_missing_obj_finder.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_lru_cache.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/utils.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_hooks.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_patch.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_greenthreads.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_ignore.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_fastexport.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    copying dulwich/tests/test_blackbox.py -> build/lib.linux-x86_64-3.5/dulwich/tests\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/compat\r\n    copying dulwich/tests/compat/test_repository.py -> build/lib.linux-x86_64-3.5/dulwich/tests/compat\r\n    copying dulwich/tests/compat/server_utils.py -> build/lib.linux-x86_64-3.5/dulwich/tests/compat\r\n    copying dulwich/tests/compat/test_web.py -> build/lib.linux-x86_64-3.5/dulwich/tests/compat\r\n    copying dulwich/tests/compat/test_pack.py -> build/lib.linux-x86_64-3.5/dulwich/tests/compat\r\n    copying dulwich/tests/compat/test_utils.py -> build/lib.linux-x86_64-3.5/dulwich/tests/compat\r\n    copying dulwich/tests/compat/test_client.py -> build/lib.linux-x86_64-3.5/dulwich/tests/compat\r\n    copying dulwich/tests/compat/__init__.py -> build/lib.linux-x86_64-3.5/dulwich/tests/compat\r\n    copying dulwich/tests/compat/test_server.py -> build/lib.linux-x86_64-3.5/dulwich/tests/compat\r\n    copying dulwich/tests/compat/utils.py -> build/lib.linux-x86_64-3.5/dulwich/tests/compat\r\n    creating build/lib.linux-x86_64-3.5/dulwich/contrib\r\n    copying dulwich/contrib/test_swift.py -> build/lib.linux-x86_64-3.5/dulwich/contrib\r\n    copying dulwich/contrib/test_swift_smoke.py -> build/lib.linux-x86_64-3.5/dulwich/contrib\r\n    copying dulwich/contrib/paramiko_vendor.py -> build/lib.linux-x86_64-3.5/dulwich/contrib\r\n    copying dulwich/contrib/test_release_robot.py -> build/lib.linux-x86_64-3.5/dulwich/contrib\r\n    copying dulwich/contrib/__init__.py -> build/lib.linux-x86_64-3.5/dulwich/contrib\r\n    copying dulwich/contrib/release_robot.py -> build/lib.linux-x86_64-3.5/dulwich/contrib\r\n    copying dulwich/contrib/swift.py -> build/lib.linux-x86_64-3.5/dulwich/contrib\r\n    running egg_info\r\n    writing dulwich.egg-info/PKG-INFO\r\n    writing dependency_links to dulwich.egg-info/dependency_links.txt\r\n    writing requirements to dulwich.egg-info/requires.txt\r\n    writing top-level names to dulwich.egg-info/top_level.txt\r\n    reading manifest file 'dulwich.egg-info/SOURCES.txt'\r\n    reading manifest template 'MANIFEST.in'\r\n    writing manifest file 'dulwich.egg-info/SOURCES.txt'\r\n    copying dulwich/_diff_tree.c -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/_objects.c -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/_pack.c -> build/lib.linux-x86_64-3.5/dulwich\r\n    copying dulwich/stdint.h -> build/lib.linux-x86_64-3.5/dulwich\r\n    creating build/lib.linux-x86_64-3.5/docs\r\n    creating build/lib.linux-x86_64-3.5/docs/tutorial\r\n    copying dulwich/../docs/tutorial/file-format.txt -> build/lib.linux-x86_64-3.5/dulwich/../docs/tutorial\r\n    copying dulwich/../docs/tutorial/tag.txt -> build/lib.linux-x86_64-3.5/dulwich/../docs/tutorial\r\n    copying dulwich/../docs/tutorial/porcelain.txt -> build/lib.linux-x86_64-3.5/dulwich/../docs/tutorial\r\n    copying dulwich/../docs/tutorial/encoding.txt -> build/lib.linux-x86_64-3.5/dulwich/../docs/tutorial\r\n    copying dulwich/../docs/tutorial/index.txt -> build/lib.linux-x86_64-3.5/dulwich/../docs/tutorial\r\n    copying dulwich/../docs/tutorial/repo.txt -> build/lib.linux-x86_64-3.5/dulwich/../docs/tutorial\r\n    copying dulwich/../docs/tutorial/object-store.txt -> build/lib.linux-x86_64-3.5/dulwich/../docs/tutorial\r\n    copying dulwich/../docs/tutorial/conclusion.txt -> build/lib.linux-x86_64-3.5/dulwich/../docs/tutorial\r\n    copying dulwich/../docs/tutorial/introduction.txt -> build/lib.linux-x86_64-3.5/dulwich/../docs/tutorial\r\n    copying dulwich/../docs/tutorial/remote.txt -> build/lib.linux-x86_64-3.5/dulwich/../docs/tutorial\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/blobs\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/blobs/11\r\n    copying dulwich/tests/data/blobs/11/11111111111111111111111111111111111111 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/blobs/11\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/blobs/6f\r\n    copying dulwich/tests/data/blobs/6f/670c0fb53f9463760b7295fbb814e965fb20c8 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/blobs/6f\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/blobs/95\r\n    copying dulwich/tests/data/blobs/95/4a536f7819d40e6f637f849ee187dd10066349 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/blobs/95\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/blobs/e6\r\n    copying dulwich/tests/data/blobs/e6/9de29bb2d1d6434b8b29ae775ad8c2e48c5391 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/blobs/e6\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/commits\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/commits/0d\r\n    copying dulwich/tests/data/commits/0d/89f20333fbb1d2f3a94da77f4981373d8f4310 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/commits/0d\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/commits/5d\r\n    copying dulwich/tests/data/commits/5d/ac377bdded4c9aeb8dff595f0faeebcc8498cc -> build/lib.linux-x86_64-3.5/dulwich/tests/data/commits/5d\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/commits/60\r\n    copying dulwich/tests/data/commits/60/dacdc733de308bb77bb76ce0fb0f9b44c9769e -> build/lib.linux-x86_64-3.5/dulwich/tests/data/commits/60\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/indexes\r\n    copying dulwich/tests/data/indexes/index -> build/lib.linux-x86_64-3.5/dulwich/tests/data/indexes\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/packs\r\n    copying dulwich/tests/data/packs/pack-bc63ddad95e7321ee734ea11a7a62d314e0d7481.idx -> build/lib.linux-x86_64-3.5/dulwich/tests/data/packs\r\n    copying dulwich/tests/data/packs/pack-bc63ddad95e7321ee734ea11a7a62d314e0d7481.pack -> build/lib.linux-x86_64-3.5/dulwich/tests/data/packs\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos\r\n    copying dulwich/tests/data/repos/.gitattributes -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos\r\n    copying dulwich/tests/data/repos/issue88_expect_ack_nak_client.export -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos\r\n    copying dulwich/tests/data/repos/issue88_expect_ack_nak_other.export -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos\r\n    copying dulwich/tests/data/repos/issue88_expect_ack_nak_server.export -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos\r\n    copying dulwich/tests/data/repos/server_new.export -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos\r\n    copying dulwich/tests/data/repos/server_old.export -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git\r\n    copying dulwich/tests/data/repos/a.git/HEAD -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git\r\n    copying dulwich/tests/data/repos/a.git/packed-refs -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/28\r\n    copying dulwich/tests/data/repos/a.git/objects/28/237f4dc30d0d462658d6b937b08a0f0b6ef55a -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/28\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/2a\r\n    copying dulwich/tests/data/repos/a.git/objects/2a/72d929692c41d8554c07f6301757ba18a65d91 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/2a\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/4e\r\n    copying dulwich/tests/data/repos/a.git/objects/4e/f30bbfe26431a69c3820d3a683df54d688f2ec -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/4e\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/4f\r\n    copying dulwich/tests/data/repos/a.git/objects/4f/2e6529203aa6d44b5af6e3292c837ceda003f9 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/4f\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/7d\r\n    copying dulwich/tests/data/repos/a.git/objects/7d/9a07d797595ef11344549b8d08198e48c15364 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/7d\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/a2\r\n    copying dulwich/tests/data/repos/a.git/objects/a2/96d0bb611188cabb256919f36bc30117cca005 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/a2\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/a9\r\n    copying dulwich/tests/data/repos/a.git/objects/a9/0fa2d900a17e99b433217e988c4eb4a2e9a097 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/a9\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/b0\r\n    copying dulwich/tests/data/repos/a.git/objects/b0/931cadc54336e78a1d980420e3268903b57a50 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/b0\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/ff\r\n    copying dulwich/tests/data/repos/a.git/objects/ff/d47d45845a8f6576491e1edb97e3fe6a850e7f -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/objects/ff\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/refs\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/refs/heads\r\n    copying dulwich/tests/data/repos/a.git/refs/heads/master -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/refs/heads\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/refs/tags\r\n    copying dulwich/tests/data/repos/a.git/refs/tags/mytag -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/a.git/refs/tags\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git\r\n    copying dulwich/tests/data/repos/empty.git/HEAD -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git\r\n    copying dulwich/tests/data/repos/empty.git/config -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git/objects\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git/objects/info\r\n    copying dulwich/tests/data/repos/empty.git/objects/info/.gitignore -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git/objects/info\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git/objects/pack\r\n    copying dulwich/tests/data/repos/empty.git/objects/pack/.gitignore -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git/objects/pack\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git/refs\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git/refs/heads\r\n    copying dulwich/tests/data/repos/empty.git/refs/heads/.gitignore -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git/refs/heads\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git/refs/tags\r\n    copying dulwich/tests/data/repos/empty.git/refs/tags/.gitignore -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/empty.git/refs/tags\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git\r\n    copying dulwich/tests/data/repos/ooo_merge.git/HEAD -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/29\r\n    copying dulwich/tests/data/repos/ooo_merge.git/objects/29/69be3e8ee1c0222396a5611407e4769f14e54b -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/29\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/38\r\n    copying dulwich/tests/data/repos/ooo_merge.git/objects/38/74e9c60a6d149c44c928140f250d81e6381520 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/38\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/6f\r\n    copying dulwich/tests/data/repos/ooo_merge.git/objects/6f/670c0fb53f9463760b7295fbb814e965fb20c8 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/6f\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/70\r\n    copying dulwich/tests/data/repos/ooo_merge.git/objects/70/c190eb48fa8bbb50ddc692a17b44cb781af7f6 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/70\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/76\r\n    copying dulwich/tests/data/repos/ooo_merge.git/objects/76/01d7f6231db6a57f7bbb79ee52e4d462fd44d1 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/76\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/90\r\n    copying dulwich/tests/data/repos/ooo_merge.git/objects/90/182552c4a85a45ec2a835cadc3451bebdfe870 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/90\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/95\r\n    copying dulwich/tests/data/repos/ooo_merge.git/objects/95/4a536f7819d40e6f637f849ee187dd10066349 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/95\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/b2\r\n    copying dulwich/tests/data/repos/ooo_merge.git/objects/b2/a2766a2879c209ab1176e7e778b81ae422eeaa -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/b2\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/f5\r\n    copying dulwich/tests/data/repos/ooo_merge.git/objects/f5/07291b64138b875c28e03469025b1ea20bc614 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/f5\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/f9\r\n    copying dulwich/tests/data/repos/ooo_merge.git/objects/f9/e39b120c68182a4ba35349f832d0e4e61f485c -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/f9\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/fb\r\n    copying dulwich/tests/data/repos/ooo_merge.git/objects/fb/5b0425c7ce46959bec94d54b9a157645e114f5 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/objects/fb\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/refs\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/refs/heads\r\n    copying dulwich/tests/data/repos/ooo_merge.git/refs/heads/master -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/ooo_merge.git/refs/heads\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git\r\n    copying dulwich/tests/data/repos/refs.git/HEAD -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git\r\n    copying dulwich/tests/data/repos/refs.git/packed-refs -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects/3b\r\n    copying dulwich/tests/data/repos/refs.git/objects/3b/9e5457140e738c2dcd39bf6d7acf88379b90d1 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects/3b\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects/3e\r\n    copying dulwich/tests/data/repos/refs.git/objects/3e/c9c43c84ff242e3ef4a9fc5bc111fd780a76a8 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects/3e\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects/42\r\n    copying dulwich/tests/data/repos/refs.git/objects/42/d06bd4b77fed026b154d16493e5deab78f02ec -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects/42\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects/a1\r\n    copying dulwich/tests/data/repos/refs.git/objects/a1/8114c31713746a33a2e70d9914d1ef3e781425 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects/a1\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects/cd\r\n    copying dulwich/tests/data/repos/refs.git/objects/cd/a609072918d7b70057b6bef9f4c2537843fcfe -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects/cd\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects/df\r\n    copying dulwich/tests/data/repos/refs.git/objects/df/6800012397fb85c56e7418dd4eb9405dee075c -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/objects/df\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/refs\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/refs/heads\r\n    copying dulwich/tests/data/repos/refs.git/refs/heads/40-char-ref-aaaaaaaaaaaaaaaaaa -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/refs/heads\r\n    copying dulwich/tests/data/repos/refs.git/refs/heads/loop -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/refs/heads\r\n    copying dulwich/tests/data/repos/refs.git/refs/heads/master -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/refs/heads\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/refs/tags\r\n    copying dulwich/tests/data/repos/refs.git/refs/tags/refs-0.2 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/refs.git/refs/tags\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git\r\n    copying dulwich/tests/data/repos/simple_merge.git/HEAD -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/0d\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/0d/89f20333fbb1d2f3a94da77f4981373d8f4310 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/0d\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/1b\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/1b/6318f651a534b38f9c7aedeebbd56c1e896853 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/1b\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/29\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/29/69be3e8ee1c0222396a5611407e4769f14e54b -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/29\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/4c\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/4c/ffe90e0a41ad3f5190079d7c8f036bde29cbe6 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/4c\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/5d\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/5d/ac377bdded4c9aeb8dff595f0faeebcc8498cc -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/5d\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/60\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/60/dacdc733de308bb77bb76ce0fb0f9b44c9769e -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/60\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/6f\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/6f/670c0fb53f9463760b7295fbb814e965fb20c8 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/6f\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/70\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/70/c190eb48fa8bbb50ddc692a17b44cb781af7f6 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/70\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/90\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/90/182552c4a85a45ec2a835cadc3451bebdfe870 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/90\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/95\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/95/4a536f7819d40e6f637f849ee187dd10066349 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/95\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/ab\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/ab/64bbdcc51b170d21588e5c5d391ee5c0c96dfd -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/ab\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/d4\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/d4/bdad6549dfedf25d3b89d21f506aff575b28a7 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/d4\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/d8\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/d8/0c186a03f423a81b39df39dc87fd269736ca86 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/d8\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/e6\r\n    copying dulwich/tests/data/repos/simple_merge.git/objects/e6/9de29bb2d1d6434b8b29ae775ad8c2e48c5391 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/objects/e6\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/refs\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/refs/heads\r\n    copying dulwich/tests/data/repos/simple_merge.git/refs/heads/master -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/simple_merge.git/refs/heads\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/submodule\r\n    copying dulwich/tests/data/repos/submodule/dotgit -> build/lib.linux-x86_64-3.5/dulwich/tests/data/repos/submodule\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/tags\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/tags/71\r\n    copying dulwich/tests/data/tags/71/033db03a03c6a36721efcf1968dd8f8e0cf023 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/tags/71\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/trees\r\n    creating build/lib.linux-x86_64-3.5/dulwich/tests/data/trees/70\r\n    copying dulwich/tests/data/trees/70/c190eb48fa8bbb50ddc692a17b44cb781af7f6 -> build/lib.linux-x86_64-3.5/dulwich/tests/data/trees/70\r\n    copying dulwich/contrib/README.md -> build/lib.linux-x86_64-3.5/dulwich/contrib\r\n    running build_ext\r\n    building 'dulwich._objects' extension\r\n    creating build/temp.linux-x86_64-3.5\r\n    creating build/temp.linux-x86_64-3.5/dulwich\r\n    x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/tmp/damegender/include -I/usr/include/python3.5m -c dulwich/_objects.c -o build/temp.linux-x86_64-3.5/dulwich/_objects.o\r\n    dulwich/_objects.c:21:20: fatal error: Python.h: No existe el archivo o el directorio\r\n    compilation terminated.\r\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n    ----------------------------------------\r\nERROR: Command \"/tmp/damegender/bin/python3 -u -c 'import setuptools, tokenize;__file__='\"'\"'/tmp/pip-install-x3g6lja7/dulwich/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-4zwce5x1/install-record.txt --single-version-externally-managed --compile --install-headers /tmp/damegender/include/site/python3.5/dulwich\" failed with error code 1 in /tmp/pip-install-x3g6lja7/dulwich/\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/705", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/705/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/705/events", "html_url": "https://github.com/dulwich/dulwich/issues/705", "id": 433638605, "node_id": "MDU6SXNzdWU0MzM2Mzg2MDU=", "number": 705, "title": "Cannot push from shallow fetch", "user": {"login": "ckclark", "id": 1078552, "node_id": "MDQ6VXNlcjEwNzg1NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1078552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckclark", "html_url": "https://github.com/ckclark", "followers_url": "https://api.github.com/users/ckclark/followers", "following_url": "https://api.github.com/users/ckclark/following{/other_user}", "gists_url": "https://api.github.com/users/ckclark/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckclark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckclark/subscriptions", "organizations_url": "https://api.github.com/users/ckclark/orgs", "repos_url": "https://api.github.com/users/ckclark/repos", "events_url": "https://api.github.com/users/ckclark/events{/privacy}", "received_events_url": "https://api.github.com/users/ckclark/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-16T08:03:00Z", "updated_at": "2020-04-27T23:30:23Z", "closed_at": "2020-04-27T23:30:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Environment\r\n\r\nOS: linux\r\nversion: dulwich==0.19.11\r\n\r\n## Steps to reproduce\r\n```python\r\nfrom dulwich.porcelain import push, clone, add, commit\r\nrepo = clone('<git-url>', 'out', depth=1)\r\nfp = open('out/.gitignore', 'w')\r\nfp.write('*.pyc')\r\nfp.close()\r\nadd(repo, 'out/.gitignore')\r\ncommit(repo, b'Add .gitignore')\r\npush(repo, '<git-url>', 'master')\r\n```\r\nThis yields\r\n```\r\nTraceback (most recent call last):\r\n  File \"filename.py\", line 197, in <module>\r\n    push(repo, '<git-url>', 'master')\r\n  File \"/library/path/to/dulwich/porcelain.py\", line 822, in push\r\n    progress=errstream.write)\r\n  File \"/library/path/to/dulwich/client.py\", line 784, in send_pack\r\n    ofs_delta=(CAPABILITY_OFS_DELTA in negotiated_capabilities))\r\n  File \"/library/path/to/dulwich/object_store.py\", line 248, in generate_pack_data\r\n    self.generate_pack_contents(have, want, progress))\r\n  File \"/library/path/to/dulwich/object_store.py\", line 236, in generate_pack_contents\r\n    return self.iter_shas(self.find_missing_objects(have, want, progress))\r\n  File \"/library/path/to/dulwich/object_store.py\", line 211, in find_missing_objects\r\n    get_parents=get_parents)\r\n  File \"/library/path/to/dulwich/object_store.py\", line 1110, in __init__\r\n    have_commits, get_parents=self._get_parents)[0]\r\n  File \"/library/path/to/dulwich/object_store.py\", line 288, in _collect_ancestors\r\n    cmt = self[e]\r\n  File \"/library/path/to/dulwich/object_store.py\", line 120, in __getitem__\r\n    type_num, uncomp = self.get_raw(sha)\r\n  File \"/library/path/to/dulwich/object_store.py\", line 482, in get_raw\r\n    raise KeyError(hexsha)\r\nKeyError: '<parent-commit-id>'\r\n```\r\nThe object identified by parent-commit-id is not pulled due to the `depth=1` config. But this operation works if git cmdline is used.\r\n\r\n```shell\r\n$ git clone --depth=1 <git-url> out\r\nCloning into 'out'...\r\nremote: Enumerating objects: 5, done.\r\nremote: Counting objects: 100% (5/5), done.\r\nremote: Compressing objects: 100% (2/2), done.\r\nremote: Total 5 (delta 0), reused 4 (delta 0), pack-reused 0\r\nReceiving objects: 100% (5/5), done.\r\n$ cd out\r\n$ echo \"*.pyc\" > .gitignore\r\n$ git add .gitignore\r\n$ git commit -m 'Add .gitignore'\r\n[master 8fd5607] Add .gitignore\r\n 1 file changed, 1 insertion(+)\r\n create mode 100644 .gitignore\r\n$ git push origin master\r\nEnumerating objects: 4, done.\r\nCounting objects: 100% (4/4), done.\r\nDelta compression using up to 72 threads\r\nCompressing objects: 100% (2/2), done.\r\nWriting objects: 100% (3/3), 316 bytes | 316.00 KiB/s, done.\r\nTotal 3 (delta 0), reused 0 (delta 0)\r\nTo <git-url>\r\n   0ae984d..8fd5607  master -> master\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/702", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/702/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/702/events", "html_url": "https://github.com/dulwich/dulwich/issues/702", "id": 430212549, "node_id": "MDU6SXNzdWU0MzAyMTI1NDk=", "number": 702, "title": "Python error when cloning: AttributeError: 'HTTPResponse' object has no attribute 'geturl'", "user": {"login": "plafosse", "id": 10556585, "node_id": "MDQ6VXNlcjEwNTU2NTg1", "avatar_url": "https://avatars1.githubusercontent.com/u/10556585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/plafosse", "html_url": "https://github.com/plafosse", "followers_url": "https://api.github.com/users/plafosse/followers", "following_url": "https://api.github.com/users/plafosse/following{/other_user}", "gists_url": "https://api.github.com/users/plafosse/gists{/gist_id}", "starred_url": "https://api.github.com/users/plafosse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/plafosse/subscriptions", "organizations_url": "https://api.github.com/users/plafosse/orgs", "repos_url": "https://api.github.com/users/plafosse/repos", "events_url": "https://api.github.com/users/plafosse/events{/privacy}", "received_events_url": "https://api.github.com/users/plafosse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-08T00:40:05Z", "updated_at": "2020-03-08T00:56:38Z", "closed_at": "2019-04-08T21:31:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting the following error which seems to have been introduced by https://github.com/dulwich/dulwich/commit/5148c0c22d8a35ad094b431b116a35b4fa41cba0#diff-28cd0777376826bef5605561210673e2\r\n```/usr/local/lib/python3.7/site-packages/dulwich-0.19.12-py3.7.egg/dulwich/client.py in _http_request(self, url, headers, data, allow_compression)\r\n   1518\r\n   1519         resp.content_type = resp.getheader(\"Content-Type\")\r\n-> 1520         resp_url = resp.geturl()\r\n   1521         resp.redirect_location = resp_url if resp_url != url else ''\r\n   1522\r\n\r\nAttributeError: 'HTTPResponse' object has no attribute 'geturl'```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/698", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/698/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/698/events", "html_url": "https://github.com/dulwich/dulwich/issues/698", "id": 428692377, "node_id": "MDU6SXNzdWU0Mjg2OTIzNzc=", "number": 698, "title": "Config option `http.sslCAInfo` triggers `ValueError: not a valid boolean string`", "user": {"login": "jeberger", "id": 930717, "node_id": "MDQ6VXNlcjkzMDcxNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/930717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeberger", "html_url": "https://github.com/jeberger", "followers_url": "https://api.github.com/users/jeberger/followers", "following_url": "https://api.github.com/users/jeberger/following{/other_user}", "gists_url": "https://api.github.com/users/jeberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeberger/subscriptions", "organizations_url": "https://api.github.com/users/jeberger/orgs", "repos_url": "https://api.github.com/users/jeberger/repos", "events_url": "https://api.github.com/users/jeberger/events{/privacy}", "received_events_url": "https://api.github.com/users/jeberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-03T10:37:27Z", "updated_at": "2019-04-03T23:15:32Z", "closed_at": "2019-04-03T23:15:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having a custom CAInfo path in `.gitconfig`:\r\n\r\n```\r\n[http]\r\n    sslCAInfo = /home/g082230/.config/git/ssl-certificates.pem\r\n```\r\n\r\ntriggers `ValueError: not a valid boolean string`.\r\n\r\nIn `client.py` line 1377 reads:\r\n\r\n```py\r\nca_certs = config.get_boolean(b\"http\", b\"sslCAInfo\")\r\n```\r\n\r\nit should instead be:\r\n\r\n```py\r\nca_certs = config.get(b\"http\", b\"sslCAInfo\")\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/695", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/695/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/695/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/695/events", "html_url": "https://github.com/dulwich/dulwich/issues/695", "id": 423118479, "node_id": "MDU6SXNzdWU0MjMxMTg0Nzk=", "number": 695, "title": "hggit does not find dulwich.errors module", "user": {"login": "balqui", "id": 11680447, "node_id": "MDQ6VXNlcjExNjgwNDQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/11680447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balqui", "html_url": "https://github.com/balqui", "followers_url": "https://api.github.com/users/balqui/followers", "following_url": "https://api.github.com/users/balqui/following{/other_user}", "gists_url": "https://api.github.com/users/balqui/gists{/gist_id}", "starred_url": "https://api.github.com/users/balqui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balqui/subscriptions", "organizations_url": "https://api.github.com/users/balqui/orgs", "repos_url": "https://api.github.com/users/balqui/repos", "events_url": "https://api.github.com/users/balqui/events{/privacy}", "received_events_url": "https://api.github.com/users/balqui/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-20T08:10:54Z", "updated_at": "2019-03-20T10:33:20Z", "closed_at": "2019-03-20T10:33:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. On Ubuntu 18.04 LTS, Mercurial 4.9.1, hggit 0.8.12, if run on top of dulwich 0.19.11 (either with C bindings or pure) every usage of hg leads to:\r\n\r\n*** failed to import extension hggit from ~/installs/hg-git/hggit: No module named dulwich.errors\r\n\r\nand leaves hggit disabled. This message does not appear when using dulwich 0.18.5.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/692", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/692/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/692/events", "html_url": "https://github.com/dulwich/dulwich/issues/692", "id": 419672803, "node_id": "MDU6SXNzdWU0MTk2NzI4MDM=", "number": 692, "title": "DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working", "user": {"login": "rpdelaney", "id": 1139517, "node_id": "MDQ6VXNlcjExMzk1MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1139517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpdelaney", "html_url": "https://github.com/rpdelaney", "followers_url": "https://api.github.com/users/rpdelaney/followers", "following_url": "https://api.github.com/users/rpdelaney/following{/other_user}", "gists_url": "https://api.github.com/users/rpdelaney/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpdelaney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpdelaney/subscriptions", "organizations_url": "https://api.github.com/users/rpdelaney/orgs", "repos_url": "https://api.github.com/users/rpdelaney/repos", "events_url": "https://api.github.com/users/rpdelaney/events{/privacy}", "received_events_url": "https://api.github.com/users/rpdelaney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-11T20:39:21Z", "updated_at": "2019-03-11T22:43:58Z", "closed_at": "2019-03-11T22:43:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n/usr/local/lib/python3.7/site-packages/dulwich/config.py:33: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working                \r\n  from collections import (\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/691", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/691/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/691/events", "html_url": "https://github.com/dulwich/dulwich/issues/691", "id": 415229379, "node_id": "MDU6SXNzdWU0MTUyMjkzNzk=", "number": 691, "title": "HTTP auth with urllib3 does not prompt for credentials", "user": {"login": "stephenrkell", "id": 1207071, "node_id": "MDQ6VXNlcjEyMDcwNzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1207071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephenrkell", "html_url": "https://github.com/stephenrkell", "followers_url": "https://api.github.com/users/stephenrkell/followers", "following_url": "https://api.github.com/users/stephenrkell/following{/other_user}", "gists_url": "https://api.github.com/users/stephenrkell/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephenrkell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephenrkell/subscriptions", "organizations_url": "https://api.github.com/users/stephenrkell/orgs", "repos_url": "https://api.github.com/users/stephenrkell/repos", "events_url": "https://api.github.com/users/stephenrkell/events{/privacy}", "received_events_url": "https://api.github.com/users/stephenrkell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-27T17:02:30Z", "updated_at": "2020-06-06T21:59:47Z", "closed_at": "2020-06-06T21:59:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since 0.19.0, pushing to a repo with HTTP authentication seems not to work, because it fails with HTTP 401 rather than prompting me for credentials. (I am using dulwich mostly via hg-git version 0.8.12.)\r\n\r\nWith versions prior to 0.19.0, I see something like the following when pushing to one of my repos.\r\n\r\n```\r\n$ hg push git+https://github.com/stephenrkell/liballocs.git\r\npushing to git+https://github.com/stephenrkell/liballocs.git\r\nhttp authorization required for https://github.com/stephenrkell/liballocs.git/info/refs\r\nrealm: GitHub\r\nuser: stephenrkell\r\npassword: \r\n```\r\nwhereas from 0.19.0 onwards, I get the following.\r\n```\r\n$ hg push git+https://github.com/stephenrkell/liballocs.git\r\npushing to git+https://github.com/stephenrkell/liballocs.git\r\nabort: git remote error: unexpected http resp 401 for https://github.com/stephenrkell/liballocs.git/info/refs?service=git-receive-pack\r\n```\r\nAs an experiment, I backed out 465addec72ee and 0c99ef824c74 (sorry, Mercurial hashes :-) ) and the problem seems to go away.\r\n\r\nLet me know if I can help debug further....", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/687", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/687/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/687/events", "html_url": "https://github.com/dulwich/dulwich/issues/687", "id": 407116473, "node_id": "MDU6SXNzdWU0MDcxMTY0NzM=", "number": 687, "title": "_read_side_band64k_data - string argument expected, got bytes", "user": {"login": "carumusan", "id": 879525, "node_id": "MDQ6VXNlcjg3OTUyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/879525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carumusan", "html_url": "https://github.com/carumusan", "followers_url": "https://api.github.com/users/carumusan/followers", "following_url": "https://api.github.com/users/carumusan/following{/other_user}", "gists_url": "https://api.github.com/users/carumusan/gists{/gist_id}", "starred_url": "https://api.github.com/users/carumusan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carumusan/subscriptions", "organizations_url": "https://api.github.com/users/carumusan/orgs", "repos_url": "https://api.github.com/users/carumusan/repos", "events_url": "https://api.github.com/users/carumusan/events{/privacy}", "received_events_url": "https://api.github.com/users/carumusan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/dulwich/dulwich/milestones/3", "html_url": "https://github.com/dulwich/dulwich/milestone/3", "labels_url": "https://api.github.com/repos/dulwich/dulwich/milestones/3/labels", "id": 1141346, "node_id": "MDk6TWlsZXN0b25lMTE0MTM0Ng==", "number": 3, "title": "soon", "description": "bugs that we'd like to fix soon (ideally the next release), but that do not have a particular targeted release.", "creator": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 4, "state": "open", "created_at": "2015-05-30T19:37:17Z", "updated_at": "2020-06-20T03:00:16Z", "due_on": null, "closed_at": null}, "comments": 9, "created_at": "2019-02-06T07:55:24Z", "updated_at": "2019-02-17T01:40:16Z", "closed_at": "2019-02-17T01:40:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nFile \"/env/local/lib/python3.7/site-packages/dulwich/porcelain.py\", line 353, in clone\r\n    depth=depth, **kwargs)\r\n  File \"/env/local/lib/python3.7/site-packages/dulwich/porcelain.py\", line 1115, in fetch\r\n    depth=depth)\r\n  File \"/env/local/lib/python3.7/site-packages/dulwich/client.py\", line 398, in fetch\r\n    progress=progress, depth=depth)\r\n  File \"/env/local/lib/python3.7/site-packages/dulwich/client.py\", line 841, in fetch_pack\r\n    progress)\r\n  File \"/env/local/lib/python3.7/site-packages/dulwich/client.py\", line 660, in _handle_upload_pack_tail\r\n    SIDE_BAND_CHANNEL_PROGRESS: progress}\r\n  File \"/env/local/lib/python3.7/site-packages/dulwich/client.py\", line 485, in _read_side_band64k_data\r\n    cb(pkt)\r\nTypeError: string argument expected, got 'bytes'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/685", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/685/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/685/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/685/events", "html_url": "https://github.com/dulwich/dulwich/issues/685", "id": 406620567, "node_id": "MDU6SXNzdWU0MDY2MjA1Njc=", "number": 685, "title": " can only concatenate str (not \"bytes\") to str ", "user": {"login": "tiny-dancer", "id": 4986192, "node_id": "MDQ6VXNlcjQ5ODYxOTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4986192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiny-dancer", "html_url": "https://github.com/tiny-dancer", "followers_url": "https://api.github.com/users/tiny-dancer/followers", "following_url": "https://api.github.com/users/tiny-dancer/following{/other_user}", "gists_url": "https://api.github.com/users/tiny-dancer/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiny-dancer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiny-dancer/subscriptions", "organizations_url": "https://api.github.com/users/tiny-dancer/orgs", "repos_url": "https://api.github.com/users/tiny-dancer/repos", "events_url": "https://api.github.com/users/tiny-dancer/events{/privacy}", "received_events_url": "https://api.github.com/users/tiny-dancer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-05T04:00:24Z", "updated_at": "2019-02-05T13:16:59Z", "closed_at": "2019-02-05T13:16:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using the below configuration:\r\n```\r\n# Configure git user (used by Dulwich / porcelain)\r\nENV GIT_COMMITTER_NAME \"thingshere\"\r\nENV GIT_COMMITTER_EMAIL \"thingshere@thing.com\"\r\n```\r\n\r\nReceives the following exception:\r\n\r\n```\r\nflask_1      |   File \"/usr/local/lib/python3.7/site-packages/dulwich/porcelain.py\", line 1076, in branch_create\r\nflask_1      |     if not r.refs.add_if_new(refname, object.id, message=ref_message):\r\nflask_1      |   File \"/usr/local/lib/python3.7/site-packages/dulwich/refs.py\", line 748, in add_if_new\r\nflask_1      |     message=message)\r\nflask_1      |   File \"/usr/local/lib/python3.7/site-packages/dulwich/refs.py\", line 108, in _log\r\nflask_1      |     timezone, message)\r\nflask_1      |   File \"/usr/local/lib/python3.7/site-packages/dulwich/repo.py\", line 868, in _write_reflog\r\nflask_1      |     committer = self._get_user_identity(config)\r\nflask_1      |   File \"/usr/local/lib/python3.7/site-packages/dulwich/repo.py\", line 634, in _get_user_identity\r\nflask_1      |     return (user + b\" <\" + email + b\">\")\r\nflask_1      | TypeError: can only concatenate str (not \"bytes\") to str\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/684", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/684/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/684/events", "html_url": "https://github.com/dulwich/dulwich/issues/684", "id": 404382931, "node_id": "MDU6SXNzdWU0MDQzODI5MzE=", "number": 684, "title": "get_unstaged_changes directory detection is broken in Python 3", "user": {"login": "Lothiraldan", "id": 243665, "node_id": "MDQ6VXNlcjI0MzY2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/243665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lothiraldan", "html_url": "https://github.com/Lothiraldan", "followers_url": "https://api.github.com/users/Lothiraldan/followers", "following_url": "https://api.github.com/users/Lothiraldan/following{/other_user}", "gists_url": "https://api.github.com/users/Lothiraldan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lothiraldan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lothiraldan/subscriptions", "organizations_url": "https://api.github.com/users/Lothiraldan/orgs", "repos_url": "https://api.github.com/users/Lothiraldan/repos", "events_url": "https://api.github.com/users/Lothiraldan/events{/privacy}", "received_events_url": "https://api.github.com/users/Lothiraldan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/dulwich/dulwich/milestones/3", "html_url": "https://github.com/dulwich/dulwich/milestone/3", "labels_url": "https://api.github.com/repos/dulwich/dulwich/milestones/3/labels", "id": 1141346, "node_id": "MDk6TWlsZXN0b25lMTE0MTM0Ng==", "number": 3, "title": "soon", "description": "bugs that we'd like to fix soon (ideally the next release), but that do not have a particular targeted release.", "creator": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 4, "state": "open", "created_at": "2015-05-30T19:37:17Z", "updated_at": "2020-06-20T03:00:16Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2019-01-29T16:43:08Z", "updated_at": "2019-02-14T01:21:44Z", "closed_at": "2019-02-14T01:21:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have identified a scenario where calling `get_unstaged_changes` in Python 3 could results in a crash. Here is some reproduce steps:\r\n\r\n```\r\ngit init test\r\ncd test\r\ntouch ROOT\r\ngit add ROOT\r\ngit commit -m \"ROOT\"\r\nrm ROOT\r\nmkdir ROOT\r\npython -c \"import dulwich.repo; import dulwich.index; repo=dulwich.repo.Repo('.'); list(dulwich.index.get_unstaged_changes(repo.open_index(), repo.path))\"\r\n```\r\n\r\nI think the code is handling this case (here: https://github.com/dulwich/dulwich/blob/master/dulwich/index.py#L634) but the exception seems to have changed in Python 3, it is now a `IsADirectoryError` which is a subclass of `OSError`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/682", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/682/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/682/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/682/events", "html_url": "https://github.com/dulwich/dulwich/issues/682", "id": 402771488, "node_id": "MDU6SXNzdWU0MDI3NzE0ODg=", "number": 682, "title": "Any workarounds for merging?", "user": {"login": "sheluchin", "id": 1807980, "node_id": "MDQ6VXNlcjE4MDc5ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1807980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sheluchin", "html_url": "https://github.com/sheluchin", "followers_url": "https://api.github.com/users/sheluchin/followers", "following_url": "https://api.github.com/users/sheluchin/following{/other_user}", "gists_url": "https://api.github.com/users/sheluchin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sheluchin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sheluchin/subscriptions", "organizations_url": "https://api.github.com/users/sheluchin/orgs", "repos_url": "https://api.github.com/users/sheluchin/repos", "events_url": "https://api.github.com/users/sheluchin/events{/privacy}", "received_events_url": "https://api.github.com/users/sheluchin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790716860, "node_id": "MDU6TGFiZWw3OTA3MTY4NjA=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/question", "name": "question", "color": "2ec1f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-24T15:51:10Z", "updated_at": "2019-01-25T00:37:42Z", "closed_at": "2019-01-25T00:37:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any temporary workaround we can use to achieve merging while official support for merging is being worked out?\r\n\r\nRelated to https://github.com/dulwich/dulwich/issues/452", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/681", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/681/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/681/events", "html_url": "https://github.com/dulwich/dulwich/issues/681", "id": 401829986, "node_id": "MDU6SXNzdWU0MDE4Mjk5ODY=", "number": 681, "title": "git fetch -p: remove remote-tracking references that no longer exist on the remote", "user": {"login": "sheluchin", "id": 1807980, "node_id": "MDQ6VXNlcjE4MDc5ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1807980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sheluchin", "html_url": "https://github.com/sheluchin", "followers_url": "https://api.github.com/users/sheluchin/followers", "following_url": "https://api.github.com/users/sheluchin/following{/other_user}", "gists_url": "https://api.github.com/users/sheluchin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sheluchin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sheluchin/subscriptions", "organizations_url": "https://api.github.com/users/sheluchin/orgs", "repos_url": "https://api.github.com/users/sheluchin/repos", "events_url": "https://api.github.com/users/sheluchin/events{/privacy}", "received_events_url": "https://api.github.com/users/sheluchin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170216, "node_id": "MDU6TGFiZWwxNDgxNzAyMTY=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/enhancement", "name": "enhancement", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-22T15:52:31Z", "updated_at": "2019-01-23T02:26:14Z", "closed_at": "2019-01-23T01:42:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like [`git fetch --prune`](https://git-scm.com/docs/git-fetch#git-fetch---prune) support does not yet exist. It would be a helpful addition. \r\n\r\nDoes anyone know if there are any available workarounds?\r\n\r\nhttps://github.com/dulwich/dulwich/blob/72aec0c79fb395689e40f9228df93e2a39cf8fb0/dulwich/porcelain.py#L1095-L1108", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/677", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/677/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/677/events", "html_url": "https://github.com/dulwich/dulwich/issues/677", "id": 394487270, "node_id": "MDU6SXNzdWUzOTQ0ODcyNzA=", "number": 677, "title": "Improve commit comparison documentation", "user": {"login": "yakutovicha", "id": 13118485, "node_id": "MDQ6VXNlcjEzMTE4NDg1", "avatar_url": "https://avatars0.githubusercontent.com/u/13118485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yakutovicha", "html_url": "https://github.com/yakutovicha", "followers_url": "https://api.github.com/users/yakutovicha/followers", "following_url": "https://api.github.com/users/yakutovicha/following{/other_user}", "gists_url": "https://api.github.com/users/yakutovicha/gists{/gist_id}", "starred_url": "https://api.github.com/users/yakutovicha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yakutovicha/subscriptions", "organizations_url": "https://api.github.com/users/yakutovicha/orgs", "repos_url": "https://api.github.com/users/yakutovicha/repos", "events_url": "https://api.github.com/users/yakutovicha/events{/privacy}", "received_events_url": "https://api.github.com/users/yakutovicha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-12-27T21:01:12Z", "updated_at": "2019-01-15T20:19:56Z", "closed_at": "2019-01-15T20:19:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to develop an App manager that is based on git. An obvious thing to implement for this kind of manager is to check whether an update is available. This check can be based on a commit comparison.\r\n\r\nHaving this in mind I tried to do the following (using dulwich of course):\r\n```\r\nIn [19]: commit_test_current = repo['refs/heads/develop']\r\n\r\nIn [20]: commit_test_remote = repo['refs/remotes/origin/develop']\r\n\r\nIn [21]: commit_test_current < commit_test_remote\r\nOut[21]: True\r\n```\r\nHowever, a bit later I was surprised that this comparison actually does not have any meaning. According to [this line](https://github.com/dulwich/dulwich/blob/8bbabacd268c3c117df39dda33216ef0b9df8bea/dulwich/objects.py#L533) what actually happens is the comparison of the id strings.\r\n\r\nTo double-check that  I did the following:\r\n```\r\nIn [67]: while(commit.parents):\r\n    ...:     commit_next = repo[commit.parents[0]]\r\n    ...:     print commit_next > commit\r\n    ...:     commit = commit_next\r\n    ...:\r\n    ...:\r\nTrue\r\nFalse\r\nTrue\r\nTrue\r\nFalse\r\nFalse\r\n...\r\n```\r\nI think the right thing to do here would be to either (a) warn a user that this check is meaningless or (b) to implement something more meaningful.\r\n\r\nIf developers consider (b) as an important thing to have, I would volunteer to open a PR to work on that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/673", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/673/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/673/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/673/events", "html_url": "https://github.com/dulwich/dulwich/issues/673", "id": 384773123, "node_id": "MDU6SXNzdWUzODQ3NzMxMjM=", "number": 673, "title": "Are you opening the file in binary mode but treat it as text?", "user": {"login": "guyeu", "id": 13718160, "node_id": "MDQ6VXNlcjEzNzE4MTYw", "avatar_url": "https://avatars0.githubusercontent.com/u/13718160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guyeu", "html_url": "https://github.com/guyeu", "followers_url": "https://api.github.com/users/guyeu/followers", "following_url": "https://api.github.com/users/guyeu/following{/other_user}", "gists_url": "https://api.github.com/users/guyeu/gists{/gist_id}", "starred_url": "https://api.github.com/users/guyeu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guyeu/subscriptions", "organizations_url": "https://api.github.com/users/guyeu/orgs", "repos_url": "https://api.github.com/users/guyeu/repos", "events_url": "https://api.github.com/users/guyeu/events{/privacy}", "received_events_url": "https://api.github.com/users/guyeu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-27T12:31:29Z", "updated_at": "2018-11-27T13:21:47Z", "closed_at": "2018-11-27T13:21:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is _refs.py_ line 543 to 545\r\n```python\r\n            f = GitFile(filename, 'wb')\r\n            try:\r\n                f.write(SYMREF + other + '\\n')\r\n```\r\nit open a file in binary mode but then write a string to the file, it throws a TypeError when I used it.\r\n```\r\n  File \"/usr/local/lib/python3.7/site-packages/dulwich/repo.py\", line 885, in init\r\n    cls._init_maybe_bare(controldir, False)\r\n  File \"/usr/local/lib/python3.7/site-packages/dulwich/repo.py\", line 869, in _init_maybe_bare\r\n    ret.refs.set_symbolic_ref(\"HEAD\", \"refs/heads/master\")\r\n  File \"/usr/local/lib/python3.7/site-packages/dulwich/refs.py\", line 545, in set_symbolic_ref\r\n    f.write(SYMREF + other + '\\n')\r\nTypeError: a bytes-like object is required, not 'str'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/671", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/671/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/671/events", "html_url": "https://github.com/dulwich/dulwich/issues/671", "id": 383286425, "node_id": "MDU6SXNzdWUzODMyODY0MjU=", "number": 671, "title": "Push to AWS Code Commit fails with \"dulwich.errors.HangupException: The remote server unexpectedly closed the connection.\"", "user": {"login": "WhileLoop", "id": 1332785, "node_id": "MDQ6VXNlcjEzMzI3ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1332785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WhileLoop", "html_url": "https://github.com/WhileLoop", "followers_url": "https://api.github.com/users/WhileLoop/followers", "following_url": "https://api.github.com/users/WhileLoop/following{/other_user}", "gists_url": "https://api.github.com/users/WhileLoop/gists{/gist_id}", "starred_url": "https://api.github.com/users/WhileLoop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WhileLoop/subscriptions", "organizations_url": "https://api.github.com/users/WhileLoop/orgs", "repos_url": "https://api.github.com/users/WhileLoop/repos", "events_url": "https://api.github.com/users/WhileLoop/events{/privacy}", "received_events_url": "https://api.github.com/users/WhileLoop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}, {"id": 885361378, "node_id": "MDU6TGFiZWw4ODUzNjEzNzg=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/help%20wanted", "name": "help wanted", "color": "d33b96", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-11-21T20:45:40Z", "updated_at": "2020-06-06T21:41:58Z", "closed_at": "2020-06-06T21:41:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Based on examples/memoryrepo.py, the following code fails when using AWS Code Commit.\r\n\r\n```import stat\r\nfrom dulwich import porcelain\r\nfrom dulwich.objects import Blob\r\nfrom dulwich.repo import MemoryRepo\r\n\r\ntarget = \"https://git-codecommit.us-west-2.amazonaws.com/v1/repos/MyRepo\"\r\nusername = \"iam-user\"\r\npassword = \"iam-password\"\r\n\r\nlocal_repo = MemoryRepo()\r\nlocal_repo.refs.set_symbolic_ref(b'HEAD', b'refs/heads/master')\r\nprint(local_repo.refs.as_dict())\r\n\r\nporcelain.fetch(local_repo, target, username = username, password = password)\r\nlocal_repo['refs/heads/master'] = local_repo['refs/remotes/origin/master']\r\n\r\nlast_tree = local_repo[local_repo['HEAD'].tree]\r\nnew_blob = Blob.from_string(b'Some contents')\r\nlocal_repo.object_store.add_object(new_blob)\r\nlast_tree.add(b'test', stat.S_IFREG, new_blob.id)\r\nlocal_repo.object_store.add_object(last_tree)\r\n\r\nlocal_repo.do_commit(\r\n    message=b'Add a file called \\'test\\'',\r\n    ref=b'refs/heads/master',\r\n    tree=last_tree.id)\r\n\r\nporcelain.push(local_repo, target, 'master', username = username, password = password)\r\n```\r\n\r\nOutput:\r\n```\r\n$ python2 memoryrepo_codecommit.py \r\n{}\r\nCounting objects: 12, done.\r\nTraceback (most recent call last):\r\n  File \"memoryrepo_codecommit.py\", line 28, in <module>\r\n    porcelain.push(local_repo, target, 'master', username = username, password = password)\r\n  File \"/usr/local/lib/python2.7/site-packages/dulwich/porcelain.py\", line 816, in push\r\n    progress=errstream.write)\r\n  File \"/usr/local/lib/python2.7/site-packages/dulwich/client.py\", line 1625, in send_pack\r\n    resp_proto, negotiated_capabilities, progress)\r\n  File \"/usr/local/lib/python2.7/site-packages/dulwich/client.py\", line 551, in _handle_receive_pack_tail\r\n    self._read_side_band64k_data(proto, channel_callbacks)\r\n  File \"/usr/local/lib/python2.7/site-packages/dulwich/client.py\", line 476, in _read_side_band64k_data\r\n    for pkt in proto.read_pkt_seq():\r\n  File \"/usr/local/lib/python2.7/site-packages/dulwich/protocol.py\", line 254, in read_pkt_seq\r\n    pkt = self.read_pkt_line()\r\n  File \"/usr/local/lib/python2.7/site-packages/dulwich/protocol.py\", line 202, in read_pkt_line\r\n    raise HangupException()\r\ndulwich.errors.HangupException: The remote server unexpectedly closed the connection.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/670", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/670/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/670/events", "html_url": "https://github.com/dulwich/dulwich/issues/670", "id": 382492474, "node_id": "MDU6SXNzdWUzODI0OTI0NzQ=", "number": 670, "title": "dulwich.tests.test_porcelain.PushTests.test_simple flaps", "user": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}, {"id": 249848691, "node_id": "MDU6TGFiZWwyNDk4NDg2OTE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/testing", "name": "testing", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-11-20T04:08:21Z", "updated_at": "2019-02-09T19:46:40Z", "closed_at": "2019-02-09T19:46:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "dulwich.tests.test_porcelain.PushTests.test_simple contains a race condition that is hard to hit, but looks something like:\r\n\r\nERROR: test_simple (dulwich.tests.test_porcelain.PushTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/<<PKGBUILDDIR>>/dulwich/tests/test_porcelain.py\", line 724, in test_simple\r\n    self.assertEqual(r_clone[b'HEAD'].id, self.repo[refs_path].id)\r\n  File \"/<<PKGBUILDDIR>>/dulwich/repo.py\", line 528, in __getitem__\r\n    return self.object_store[self.refs[name]]\r\n  File \"/<<PKGBUILDDIR>>/dulwich/object_store.py\", line 119, in __getitem__\r\n    type_num, uncomp = self.get_raw(sha)\r\n  File \"/<<PKGBUILDDIR>>/dulwich/object_store.py\", line 461, in get_raw\r\n    raise KeyError(hexsha)\r\nKeyError: b'a031515918b815701865df2363092b8d577d765f'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/668", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/668/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/668/events", "html_url": "https://github.com/dulwich/dulwich/issues/668", "id": 377857908, "node_id": "MDU6SXNzdWUzNzc4NTc5MDg=", "number": 668, "title": "[bug] setup fails", "user": {"login": "EgorBu", "id": 2606702, "node_id": "MDQ6VXNlcjI2MDY3MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2606702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EgorBu", "html_url": "https://github.com/EgorBu", "followers_url": "https://api.github.com/users/EgorBu/followers", "following_url": "https://api.github.com/users/EgorBu/following{/other_user}", "gists_url": "https://api.github.com/users/EgorBu/gists{/gist_id}", "starred_url": "https://api.github.com/users/EgorBu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EgorBu/subscriptions", "organizations_url": "https://api.github.com/users/EgorBu/orgs", "repos_url": "https://api.github.com/users/EgorBu/repos", "events_url": "https://api.github.com/users/EgorBu/events{/privacy}", "received_events_url": "https://api.github.com/users/EgorBu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-06T13:57:03Z", "updated_at": "2018-11-06T22:32:01Z", "closed_at": "2018-11-06T22:32:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!\r\nThank you for a great lib!\r\nUnfortunately right now setup fails with this log.\r\n```\r\nCollecting dulwich<1.0,>=0.19 (from modelforge<0.8,>=0.7.0->sourced-ml==0.6.4->-r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/5d/2a/d2c639a97b5aca864cc1ff834151df0b68fd129f1b95a7068652b777d4cd/dulwich-0.19.7.tar.gz (355kB)\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-install-mxmemu0v/dulwich/setup.py\", line 87, in <module>\r\n        description = f.read()\r\n      File \"/usr/lib/python3.6/encodings/ascii.py\", line 26, in decode\r\n        return codecs.ascii_decode(input, self.errors)[0]\r\n    UnicodeDecodeError: 'ascii' codec can't decode byte 0xc4 in position 2125: ordinal not in range(128)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/667", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/667/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/667/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/667/events", "html_url": "https://github.com/dulwich/dulwich/issues/667", "id": 375853609, "node_id": "MDU6SXNzdWUzNzU4NTM2MDk=", "number": 667, "title": "Publish python wheels", "user": {"login": "douardda", "id": 1496354, "node_id": "MDQ6VXNlcjE0OTYzNTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1496354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/douardda", "html_url": "https://github.com/douardda", "followers_url": "https://api.github.com/users/douardda/followers", "following_url": "https://api.github.com/users/douardda/following{/other_user}", "gists_url": "https://api.github.com/users/douardda/gists{/gist_id}", "starred_url": "https://api.github.com/users/douardda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/douardda/subscriptions", "organizations_url": "https://api.github.com/users/douardda/orgs", "repos_url": "https://api.github.com/users/douardda/repos", "events_url": "https://api.github.com/users/douardda/events{/privacy}", "received_events_url": "https://api.github.com/users/douardda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-31T08:42:25Z", "updated_at": "2018-10-31T08:46:13Z", "closed_at": "2018-10-31T08:45:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "it would be great to have python wheels published on pypi along the source package. Would help CI kind of tasks (especially tests in tox and the like).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/666", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/666/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/666/events", "html_url": "https://github.com/dulwich/dulwich/issues/666", "id": 375077662, "node_id": "MDU6SXNzdWUzNzUwNzc2NjI=", "number": 666, "title": "porcelain.pull() overwrites local changes (including commits)", "user": {"login": "peircej", "id": 380582, "node_id": "MDQ6VXNlcjM4MDU4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/380582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peircej", "html_url": "https://github.com/peircej", "followers_url": "https://api.github.com/users/peircej/followers", "following_url": "https://api.github.com/users/peircej/following{/other_user}", "gists_url": "https://api.github.com/users/peircej/gists{/gist_id}", "starred_url": "https://api.github.com/users/peircej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peircej/subscriptions", "organizations_url": "https://api.github.com/users/peircej/orgs", "repos_url": "https://api.github.com/users/peircej/repos", "events_url": "https://api.github.com/users/peircej/events{/privacy}", "received_events_url": "https://api.github.com/users/peircej/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/dulwich/dulwich/milestones/3", "html_url": "https://github.com/dulwich/dulwich/milestone/3", "labels_url": "https://api.github.com/repos/dulwich/dulwich/milestones/3/labels", "id": 1141346, "node_id": "MDk6TWlsZXN0b25lMTE0MTM0Ng==", "number": 3, "title": "soon", "description": "bugs that we'd like to fix soon (ideally the next release), but that do not have a particular targeted release.", "creator": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 4, "state": "open", "created_at": "2015-05-30T19:37:17Z", "updated_at": "2020-06-20T03:00:16Z", "due_on": null, "closed_at": null}, "comments": 3, "created_at": "2018-10-29T15:36:22Z", "updated_at": "2020-06-20T03:00:16Z", "closed_at": "2020-06-20T03:00:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example:\r\n1. fetch a repo:\r\n```\r\nimport dulwich.porcelain as git\r\nr = git.clone(\"git://github.com/jelmer/dulwich\", \"dulwich-clone\")\r\n```\r\n2. delete a file locally\r\n3. (optional) staged the deleted file and commit the change\r\n4. pull again from remote:\r\n```\r\ngit.pull(r, \"git://github.com/jelmer/dulwich\")\r\n```\r\n\r\nWhen step 4 is executed steps 2 and 3 are undone! That means we have to always commit, push then pull, whereas traditional git behaviour is to pull first then push.\r\n\r\nIs there a workaround using the plumbing approach?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/665", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/665/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/665/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/665/events", "html_url": "https://github.com/dulwich/dulwich/issues/665", "id": 373920913, "node_id": "MDU6SXNzdWUzNzM5MjA5MTM=", "number": 665, "title": "os.open() causes errors on some Android systems", "user": {"login": "sraedler", "id": 11181512, "node_id": "MDQ6VXNlcjExMTgxNTEy", "avatar_url": "https://avatars1.githubusercontent.com/u/11181512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sraedler", "html_url": "https://github.com/sraedler", "followers_url": "https://api.github.com/users/sraedler/followers", "following_url": "https://api.github.com/users/sraedler/following{/other_user}", "gists_url": "https://api.github.com/users/sraedler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sraedler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sraedler/subscriptions", "organizations_url": "https://api.github.com/users/sraedler/orgs", "repos_url": "https://api.github.com/users/sraedler/repos", "events_url": "https://api.github.com/users/sraedler/events{/privacy}", "received_events_url": "https://api.github.com/users/sraedler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 885361378, "node_id": "MDU6TGFiZWw4ODUzNjEzNzg=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/help%20wanted", "name": "help wanted", "color": "d33b96", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-10-25T12:24:41Z", "updated_at": "2018-11-28T02:45:51Z", "closed_at": "2018-11-28T02:45:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "The problem is the architecture of Android.\r\n\r\nMore Details:\r\n\r\nhttps://github.com/xbmc/xbmc/issues/14690\r\n\r\n\r\nAre there any fallback ideas how to solve this issue?\r\n\r\nthanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/662", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/662/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/662/events", "html_url": "https://github.com/dulwich/dulwich/issues/662", "id": 365186808, "node_id": "MDU6SXNzdWUzNjUxODY4MDg=", "number": 662, "title": "Capability to specify a timeout for SSH related socket connections or transactions", "user": {"login": "ozn0417", "id": 1863833, "node_id": "MDQ6VXNlcjE4NjM4MzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1863833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozn0417", "html_url": "https://github.com/ozn0417", "followers_url": "https://api.github.com/users/ozn0417/followers", "following_url": "https://api.github.com/users/ozn0417/following{/other_user}", "gists_url": "https://api.github.com/users/ozn0417/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozn0417/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozn0417/subscriptions", "organizations_url": "https://api.github.com/users/ozn0417/orgs", "repos_url": "https://api.github.com/users/ozn0417/repos", "events_url": "https://api.github.com/users/ozn0417/events{/privacy}", "received_events_url": "https://api.github.com/users/ozn0417/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-30T03:06:33Z", "updated_at": "2019-11-03T19:34:54Z", "closed_at": "2019-11-03T19:34:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Need to be able to set timeouts for ssh connections when doing clone, pull, fetch (from dulwich.porcelain).\r\nIf there are any long transactions, the function calls like above mentioned, would essentailly timeout when using among any webservice.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/660", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/660/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/660/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/660/events", "html_url": "https://github.com/dulwich/dulwich/issues/660", "id": 360994526, "node_id": "MDU6SXNzdWUzNjA5OTQ1MjY=", "number": 660, "title": "Add trove classifiers to PyPI package", "user": {"login": "pklapperich", "id": 12666157, "node_id": "MDQ6VXNlcjEyNjY2MTU3", "avatar_url": "https://avatars3.githubusercontent.com/u/12666157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pklapperich", "html_url": "https://github.com/pklapperich", "followers_url": "https://api.github.com/users/pklapperich/followers", "following_url": "https://api.github.com/users/pklapperich/following{/other_user}", "gists_url": "https://api.github.com/users/pklapperich/gists{/gist_id}", "starred_url": "https://api.github.com/users/pklapperich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pklapperich/subscriptions", "organizations_url": "https://api.github.com/users/pklapperich/orgs", "repos_url": "https://api.github.com/users/pklapperich/repos", "events_url": "https://api.github.com/users/pklapperich/events{/privacy}", "received_events_url": "https://api.github.com/users/pklapperich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-17T18:44:32Z", "updated_at": "2018-09-17T18:47:40Z", "closed_at": "2018-09-17T18:47:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [Dulwich page](https://pypi.org/project/dulwich/) on PyPI [doesn't show any classifiers](https://pypi.org/classifiers/):\r\n\r\nThis means it doesn't show at all when users browse PyPI and filter based on license, supported python versions, etc. It also means that projects like [PyReadiness](https://hugovk.github.io/py3readiness/) incorrectly show Dulwich as lacking Python 3 support.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/658", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/658/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/658/events", "html_url": "https://github.com/dulwich/dulwich/issues/658", "id": 359710295, "node_id": "MDU6SXNzdWUzNTk3MTAyOTU=", "number": 658, "title": "The PyPI metadata for dulwich are broken since version 0.19.4", "user": {"login": "zvezdan", "id": 2942065, "node_id": "MDQ6VXNlcjI5NDIwNjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2942065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zvezdan", "html_url": "https://github.com/zvezdan", "followers_url": "https://api.github.com/users/zvezdan/followers", "following_url": "https://api.github.com/users/zvezdan/following{/other_user}", "gists_url": "https://api.github.com/users/zvezdan/gists{/gist_id}", "starred_url": "https://api.github.com/users/zvezdan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zvezdan/subscriptions", "organizations_url": "https://api.github.com/users/zvezdan/orgs", "repos_url": "https://api.github.com/users/zvezdan/repos", "events_url": "https://api.github.com/users/zvezdan/events{/privacy}", "received_events_url": "https://api.github.com/users/zvezdan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-13T01:36:12Z", "updated_at": "2018-09-19T01:38:38Z", "closed_at": "2018-09-16T22:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "The metadata for dulwich on PyPI changed between versions 0.19.3 and 0.19.4.\r\nThe important package data used by some automated build tooling is invalid now (for the latest 0.19.6).\r\nSee:\r\n* https://pypi.org/project/dulwich/0.19.3/ and observe the classifiers, license, ... correctly present\r\n* https://pypi.org/project/dulwich/0.19.4/ and observe classifiers, license, ... missing. It is available in the description at the bottom of the page, all packed into a single line, but it breaks the metadata for dulwich package.\r\n\r\nSee also: https://pypi.org/pypi/dulwich/json\r\n```\r\n..., \"home_page\":\"\",\"keywords\":\"\",\"license\":\"\",\"maintainer\":\"\",\"maintainer_email\":\"\", ...\r\n```\r\nSince this page is used by some automated tooling, and these fields are empty, it breaks the handling of the package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/657", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/657/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/657/events", "html_url": "https://github.com/dulwich/dulwich/issues/657", "id": 357382834, "node_id": "MDU6SXNzdWUzNTczODI4MzQ=", "number": 657, "title": "HTTP tests fail with git 2.19", "user": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-05T20:06:16Z", "updated_at": "2018-09-05T20:17:50Z", "closed_at": "2018-09-05T20:17:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With newer versions of Git, the Dulwich testsuite has started failing:\r\n\r\nERROR: test_send_without_report_status (dulwich.tests.compat.test_client.DulwichHttpClientTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"dulwich/tests/compat/test_client.py\", line 128, in test_send_without_report_status\r\n    src.object_store.generate_pack_data)\r\n  File \"dulwich/client.py\", line 1495, in send_pack\r\n    b\"git-receive-pack\", url)\r\n  File \"dulwich/client.py\", line 1454, in _discover_references\r\n    return read_pkt_refs(proto) + (base_url, )\r\n  File \"dulwich/client.py\", line 196, in read_pkt_refs\r\n    for pkt in proto.read_pkt_seq():\r\n  File \"dulwich/protocol.py\", line 254, in read_pkt_seq\r\n    pkt = self.read_pkt_line()\r\n  File \"dulwich/protocol.py\", line 203, in read_pkt_line\r\n    size = int(sizestr, 16)\r\nValueError: invalid literal for int() with base 16: 'Stat'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/656", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/656/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/656/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/656/events", "html_url": "https://github.com/dulwich/dulwich/issues/656", "id": 357363678, "node_id": "MDU6SXNzdWUzNTczNjM2Nzg=", "number": 656, "title": "Compilation of optional C extensions fails calling rc.exe on Win 10 w/ VS 2017", "user": {"login": "wholroyd", "id": 147990, "node_id": "MDQ6VXNlcjE0Nzk5MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/147990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wholroyd", "html_url": "https://github.com/wholroyd", "followers_url": "https://api.github.com/users/wholroyd/followers", "following_url": "https://api.github.com/users/wholroyd/following{/other_user}", "gists_url": "https://api.github.com/users/wholroyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/wholroyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wholroyd/subscriptions", "organizations_url": "https://api.github.com/users/wholroyd/orgs", "repos_url": "https://api.github.com/users/wholroyd/repos", "events_url": "https://api.github.com/users/wholroyd/events{/privacy}", "received_events_url": "https://api.github.com/users/wholroyd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790716860, "node_id": "MDU6TGFiZWw3OTA3MTY4NjA=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/question", "name": "question", "color": "2ec1f2", "default": true, "description": null}, {"id": 148170696, "node_id": "MDU6TGFiZWwxNDgxNzA2OTY=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/windows", "name": "windows", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-05T19:06:53Z", "updated_at": "2018-09-08T12:17:47Z", "closed_at": "2018-09-08T12:17:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to work on getting Git accessible inside an AWS Lambda job to tag commits because of some arcane security rules we have. It seems dulwich could solve my issues and am just trying to get it to work first.\r\n\r\nI have a clean Windows 10 machine for the most part, with Visual Studio 2017 installed. There is an issue with installing dulwich on this machine because it is trying to call resources which aren't present on the machine. See this log for more details...\r\n\r\n[dulwich.txt](https://github.com/dulwich/dulwich/files/2354212/dulwich.txt)\r\n\r\nI found a workaround by copying the rc.exe and rcdll.dll files as suggested in [this StackOverflow](https://stackoverflow.com/questions/14372706/visual-studio-cant-build-due-to-rc-exe) thread. There is a command that can be called to set this up for you without copying files if you look at the second highest answer to resolve it as well.\r\n\r\nFigured I would let you know the process has a small hurdle on Windows and this optimization step if there was a way to detect and prevent it in the setup.py logic.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/654", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/654/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/654/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/654/events", "html_url": "https://github.com/dulwich/dulwich/issues/654", "id": 353399264, "node_id": "MDU6SXNzdWUzNTMzOTkyNjQ=", "number": 654, "title": "porcelain.clone doesn't honor credentials in url, mangles kwargs", "user": {"login": "blalor", "id": 109915, "node_id": "MDQ6VXNlcjEwOTkxNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/109915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blalor", "html_url": "https://github.com/blalor", "followers_url": "https://api.github.com/users/blalor/followers", "following_url": "https://api.github.com/users/blalor/following{/other_user}", "gists_url": "https://api.github.com/users/blalor/gists{/gist_id}", "starred_url": "https://api.github.com/users/blalor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blalor/subscriptions", "organizations_url": "https://api.github.com/users/blalor/orgs", "repos_url": "https://api.github.com/users/blalor/repos", "events_url": "https://api.github.com/users/blalor/events{/privacy}", "received_events_url": "https://api.github.com/users/blalor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-23T14:11:06Z", "updated_at": "2020-01-30T11:43:20Z", "closed_at": "2019-01-16T01:39:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "`porcelain.clone` doesn't parse the `username:password` in the `source` param:\r\n\r\n```\r\n>>> r = porcelain.clone(\"https://hashityhashhash:x-oauth-basic@github.com/example/repo.git\", target=\"/tmp/repo\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"\u2026/dulwich/porcelain.py\", line 331, in clone\r\n    **kwargs)\r\n  File \"\u2026/dulwich/porcelain.py\", line 1084, in fetch\r\n    fetch_result = client.fetch(path, r, progress=errstream.write)\r\n  File \"\u2026/dulwich/client.py\", line 364, in fetch\r\n    progress)\r\n  File \"\u2026/dulwich/client.py\", line 1544, in fetch_pack\r\n    b\"git-upload-pack\", url)\r\n  File \"\u2026/dulwich/client.py\", line 1433, in _discover_references\r\n    resp, read = self._http_request(url, headers, allow_compression=True)\r\n  File \"\u2026/dulwich/client.py\", line 1409, in _http_request\r\n    (resp.status, url))\r\ndulwich.errors.GitProtocolError: unexpected http resp 401 for https://github.com/example/repo.git/info/refs?service=git-upload-pack\r\n```\r\n\r\nIt also doesn't use the `username` and `password` keyword arguments correctly:\r\n```\r\n>>> porcelain.clone(\"https://github.com/example/repo.git\", target=\"/tmp/repo2\", username=\"hashityhashhash\", password=\"x-oauth-basic\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"\u2026/dulwich/porcelain.py\", line 331, in clone\r\n    **kwargs)\r\n  File \"\u2026/dulwich/porcelain.py\", line 1083, in fetch\r\n    remote_location, config=r.get_config_stack(), **kwargs)\r\n  File \"\u2026/dulwich/client.py\", line 1636, in get_transport_and_path\r\n    return get_transport_and_path_from_url(location, **kwargs)\r\n  File \"\u2026/dulwich/client.py\", line 1597, in get_transport_and_path_from_url\r\n    parsed, config=config, **kwargs), parsed.path\r\n  File \"\u2026/dulwich/client.py\", line 1363, in from_parsedurl\r\n    password=password, username=username, **kwargs)\r\nTypeError: type object got multiple values for keyword argument 'username'\r\n```\r\n\r\nMaybe-related: #249, #404, #445, #428", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/652", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/652/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/652/events", "html_url": "https://github.com/dulwich/dulwich/issues/652", "id": 351922629, "node_id": "MDU6SXNzdWUzNTE5MjI2Mjk=", "number": 652, "title": "Dulwich throws AttributeException when used in pythonw", "user": {"login": "TheLastProject", "id": 1885159, "node_id": "MDQ6VXNlcjE4ODUxNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1885159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheLastProject", "html_url": "https://github.com/TheLastProject", "followers_url": "https://api.github.com/users/TheLastProject/followers", "following_url": "https://api.github.com/users/TheLastProject/following{/other_user}", "gists_url": "https://api.github.com/users/TheLastProject/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheLastProject/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheLastProject/subscriptions", "organizations_url": "https://api.github.com/users/TheLastProject/orgs", "repos_url": "https://api.github.com/users/TheLastProject/repos", "events_url": "https://api.github.com/users/TheLastProject/events{/privacy}", "received_events_url": "https://api.github.com/users/TheLastProject/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "TheLastProject", "id": 1885159, "node_id": "MDQ6VXNlcjE4ODUxNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1885159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheLastProject", "html_url": "https://github.com/TheLastProject", "followers_url": "https://api.github.com/users/TheLastProject/followers", "following_url": "https://api.github.com/users/TheLastProject/following{/other_user}", "gists_url": "https://api.github.com/users/TheLastProject/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheLastProject/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheLastProject/subscriptions", "organizations_url": "https://api.github.com/users/TheLastProject/orgs", "repos_url": "https://api.github.com/users/TheLastProject/repos", "events_url": "https://api.github.com/users/TheLastProject/events{/privacy}", "received_events_url": "https://api.github.com/users/TheLastProject/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TheLastProject", "id": 1885159, "node_id": "MDQ6VXNlcjE4ODUxNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1885159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheLastProject", "html_url": "https://github.com/TheLastProject", "followers_url": "https://api.github.com/users/TheLastProject/followers", "following_url": "https://api.github.com/users/TheLastProject/following{/other_user}", "gists_url": "https://api.github.com/users/TheLastProject/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheLastProject/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheLastProject/subscriptions", "organizations_url": "https://api.github.com/users/TheLastProject/orgs", "repos_url": "https://api.github.com/users/TheLastProject/repos", "events_url": "https://api.github.com/users/TheLastProject/events{/privacy}", "received_events_url": "https://api.github.com/users/TheLastProject/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-08-19T18:11:49Z", "updated_at": "2018-08-21T22:36:05Z", "closed_at": "2018-08-21T22:36:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I got the following report from an user: https://github.com/Pext/Pext/issues/125\r\n\r\nOn Pext's side, installing a module calls the install_module function. The only moment in that function when 1 downward arrow with an exception is printed is here:\r\n\r\nhttps://github.com/Pext/Pext/blob/095f5a5a9121141ccd16704ee486e3c943315d3f/pext/__main__.py#L2835-L2839\r\n\r\nClearly, the issue lies in dulwich's porcelain.clone().\r\n\r\nLooking further into that, dulwich does a .write call here:\r\nhttps://github.com/dulwich/dulwich/blob/e924e8bdfb71a7ecb6f88f4e6627cb7d2e344e1a/dulwich/porcelain.py#L349\r\n\r\nLooking at\r\nhttps://github.com/dulwich/dulwich/blob/e924e8bdfb71a7ecb6f88f4e6627cb7d2e344e1a/dulwich/porcelain.py#L289-L291\r\n\r\nerrstream defaults to default_bytes_err_stream, which is defined as follows:\r\n\r\nhttps://github.com/dulwich/dulwich/blob/e924e8bdfb71a7ecb6f88f4e6627cb7d2e344e1a/dulwich/porcelain.py#L142-L143\r\n\r\nLooking at the Python documentation, it is incorrect to assume sys.stdout and sys.stderr are not None on Windows (see https://docs.python.org/3/library/sys.html#sys.stderr):\r\n>Under some conditions stdin, stdout and stderr as well as the original values __stdin__, __stdout__ and __stderr__ can be None. It is usually the case for Windows GUI apps that aren\u2019t connected to a console and Python apps started with pythonw.\r\n\r\nI can probably fix this myself, but I'd need to know how you'd prefer this fixed. We could do either of the following:\r\n1. Add a small fallback class with a .write function that does nothing (seems cleanest to me, but risks having to make a very complex class at some point)\r\n2. A try/except AttributeError block around every .write call on errstream or outstream\r\n3. A None-check before any write call.\r\n\r\nWhich would you prefer? Or do you perhaps have a better idea altogether?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/649", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/649/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/649/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/649/events", "html_url": "https://github.com/dulwich/dulwich/issues/649", "id": 351512284, "node_id": "MDU6SXNzdWUzNTE1MTIyODQ=", "number": 649, "title": "porcelain.clone() hangs if code that runs after requests user input", "user": {"login": "themanifold", "id": 5174034, "node_id": "MDQ6VXNlcjUxNzQwMzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5174034?v=4", "gravatar_id": "", "url": "https://api.github.com/users/themanifold", "html_url": "https://github.com/themanifold", "followers_url": "https://api.github.com/users/themanifold/followers", "following_url": "https://api.github.com/users/themanifold/following{/other_user}", "gists_url": "https://api.github.com/users/themanifold/gists{/gist_id}", "starred_url": "https://api.github.com/users/themanifold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/themanifold/subscriptions", "organizations_url": "https://api.github.com/users/themanifold/orgs", "repos_url": "https://api.github.com/users/themanifold/repos", "events_url": "https://api.github.com/users/themanifold/events{/privacy}", "received_events_url": "https://api.github.com/users/themanifold/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423733187, "node_id": "MDU6TGFiZWw0MjM3MzMxODc=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/moreinfo", "name": "moreinfo", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-08-17T08:56:23Z", "updated_at": "2018-08-20T13:00:03Z", "closed_at": "2018-08-20T13:00:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using click 6.7, and dulwich 0.19.5 to produce a minimal working bug example:\r\n\r\n```\r\nfrom dulwich import porcelain\r\nimport click\r\nimport tempfile\r\nimport shutil\r\nimport sys\r\n\r\nclass Config(object):\r\n    def __init__(self) -> None:\r\n        pass\r\n\r\npass_config = click.make_pass_decorator(Config)\r\n\r\n@click.group()\r\n@click.pass_context\r\ndef cli(ctx):\r\n    ctx.obj = Config()\r\n\r\n@cli.command()\r\n@click.option(\"--foo\")\r\n@pass_config\r\ndef testclone(config, foo):\r\n    click.prompt(\"something\")\r\n\r\n    try:\r\n        shutil.rmtree(\"/tmp/foo\")\r\n    except:\r\n        pass\r\n    porcelain.clone(\"some_git_repo\", \"/tmp/foo\")\r\n        \r\n    print(\"123\")\r\n    # sys.stderr.flush()\r\n    click.prompt(\"bar\")\r\n\r\nif __name__ == \"__main__\":\r\n    cli()\r\n```\r\nYou'll find that if `sys.stderr.flush()` is uncommented, the code will hang at `Checking out ...`. Looking at the code, I can see that the `dulwich.porcelain.clone()` function writes to the `sys.stderr` bytestream but doesn't flush:\r\n```\r\n...\r\n        if checkout and not bare and head is not None:\r\n            errstream.write(b'Checking out ' + head.id + b'\\n')\r\n            r.reset_index(head.tree)\r\n...\r\n```\r\nYou can also fix this problem by putting an `errstream.flush()` immediately after the `errstream.write()`\r\n\r\nI realise that this might be the fault of other modules no flushing stderr when they come and ask for user input on stdin, but it's probably best to code defensively? I've tested and reproduced this problem with cookiecutter's interactive option too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/648", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/648/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/648/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/648/events", "html_url": "https://github.com/dulwich/dulwich/issues/648", "id": 351169942, "node_id": "MDU6SXNzdWUzNTExNjk5NDI=", "number": 648, "title": "Running tests locally results in garbage output", "user": {"login": "abyss7", "id": 5627721, "node_id": "MDQ6VXNlcjU2Mjc3MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5627721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abyss7", "html_url": "https://github.com/abyss7", "followers_url": "https://api.github.com/users/abyss7/followers", "following_url": "https://api.github.com/users/abyss7/following{/other_user}", "gists_url": "https://api.github.com/users/abyss7/gists{/gist_id}", "starred_url": "https://api.github.com/users/abyss7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abyss7/subscriptions", "organizations_url": "https://api.github.com/users/abyss7/orgs", "repos_url": "https://api.github.com/users/abyss7/repos", "events_url": "https://api.github.com/users/abyss7/events{/privacy}", "received_events_url": "https://api.github.com/users/abyss7/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790716860, "node_id": "MDU6TGFiZWw3OTA3MTY4NjA=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/question", "name": "question", "color": "2ec1f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-16T11:45:36Z", "updated_at": "2018-08-16T14:32:07Z", "closed_at": "2018-08-16T14:31:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running like `python -m subunit.run dulwich.tests.test_suite` and get something like - don't even know if tests pass:\r\n\r\n2\ufffd+@n[ub2\ufffdO#@[dulwich.tests.compat.test_server.GitServerSideBand64kTestCase.test_clone_from_dulwich_empty\ufffd\ufffd+@h[ub2\ufffdT@Udulwich.tests.compat.test_server.GitServerSideBand64kTestCase.test_fetch_from_dulwichy\u0205J\ufffd+@h[ub3\ufffd  @Udulwich.tests.compat.test_server.GitServerSideBand64kTestCase.test_fetch_from_dulwich\ufffd5\ufffd\ufffd+@}[ub3\ufffd\ufffdX@jdulwich.tests.compat.test_server.GitServerSideBand64kTestCase.test_fetch_from_dulwich_issue_88_alternative\ufffd\ufffd\ufffdL\ufffd+@}[ub3\ufffd\ufffd\ufffd@jdulwich.tests.compa\ufffd8@gdulwich.tests.compat.test_server.GitServerSideBand64kTestCase.test_fetch_from_dulwich_issue_88_standard\ufffdlCM\ufffd+@z[ub4\ufffd]\ufffdH@gdulwich.tests.compat.test_server.GitServerSideBand64kTestCase.test_fetch_from_dulwich_issue_88_standard\u07e6{~\ufffd+@n[ub4\ufffde\ufffdx@[dulwich.tests.compat.test_server.GitServerSideBand64kTestCase.test_fetch_from_dulwich_no_op)g\ufffd\ufffd+@n[ub5\ufffdS\u07a8@[dulwich.tests.compat.test_server.GitServerSideBand64kTestCase.test_fetch_from_dulwich_no_op &\ufffdz\ufffd+@\ufffd[ub5\ufffdZ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/644", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/644/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/644/events", "html_url": "https://github.com/dulwich/dulwich/issues/644", "id": 343939602, "node_id": "MDU6SXNzdWUzNDM5Mzk2MDI=", "number": 644, "title": "Is there any command-line tool based on Dulwich?", "user": {"login": "cesss", "id": 15330020, "node_id": "MDQ6VXNlcjE1MzMwMDIw", "avatar_url": "https://avatars0.githubusercontent.com/u/15330020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cesss", "html_url": "https://github.com/cesss", "followers_url": "https://api.github.com/users/cesss/followers", "following_url": "https://api.github.com/users/cesss/following{/other_user}", "gists_url": "https://api.github.com/users/cesss/gists{/gist_id}", "starred_url": "https://api.github.com/users/cesss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cesss/subscriptions", "organizations_url": "https://api.github.com/users/cesss/orgs", "repos_url": "https://api.github.com/users/cesss/repos", "events_url": "https://api.github.com/users/cesss/events{/privacy}", "received_events_url": "https://api.github.com/users/cesss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790716860, "node_id": "MDU6TGFiZWw3OTA3MTY4NjA=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/question", "name": "question", "color": "2ec1f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-24T08:41:14Z", "updated_at": "2018-07-27T01:30:06Z", "closed_at": "2018-07-27T01:29:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nAre you aware of any project that has written a command-line tool based on Dulwich, for (at least partially) being an alternative to the official `git` command? I'm considering moving all my repositories to git, but I don't like using a GPL version control system, I prefer to use a non-GPL one, for a more uniform license across my tree.\r\n\r\nAlternatively, if you know of any other non-GPL git implementation that provides a command-line tool that could act as a `git` replacement, please tell.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/642", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/642/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/642/events", "html_url": "https://github.com/dulwich/dulwich/issues/642", "id": 341315328, "node_id": "MDU6SXNzdWUzNDEzMTUzMjg=", "number": 642, "title": "Git diff header difference", "user": {"login": "Lothiraldan", "id": 243665, "node_id": "MDQ6VXNlcjI0MzY2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/243665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lothiraldan", "html_url": "https://github.com/Lothiraldan", "followers_url": "https://api.github.com/users/Lothiraldan/followers", "following_url": "https://api.github.com/users/Lothiraldan/following{/other_user}", "gists_url": "https://api.github.com/users/Lothiraldan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lothiraldan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lothiraldan/subscriptions", "organizations_url": "https://api.github.com/users/Lothiraldan/orgs", "repos_url": "https://api.github.com/users/Lothiraldan/repos", "events_url": "https://api.github.com/users/Lothiraldan/events{/privacy}", "received_events_url": "https://api.github.com/users/Lothiraldan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-15T11:53:58Z", "updated_at": "2020-02-13T10:21:13Z", "closed_at": "2020-02-13T10:21:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm trying to generate a diff of staged and unstaged files between the working copy and the working copy parent. I reused some low-levels functions from `dulwich.index` and `dulwich.patch` modules when I could.\r\n\r\nI think I've found an issue with `dulwich.patch.gen_diff_header`. I tried applying the generated diff with `git apply` but got only error.\r\n\r\nHere is the generated diff using upstream `gen_diff_header`:\r\n\r\n```diff\r\ndiff --git a/stage_add b/stage_add\r\nnew mode 100644\r\nindex 0000000..e69de29 100644\r\ndiff --git a/stage_delete b/stage_delete\r\ndeleted mode 100644\r\nindex e69de29..0000000\r\ndiff --git a/stage_modify b/stage_modify\r\nindex e69de29..61b9ad0 100644\r\n--- a/stage_modify\r\n+++ b/stage_modify\r\n@@ -0,0 +1 @@\r\n+Modify\r\n\\ No newline at end of file\r\n```\r\nI ended up modifying `gen_diff_header` to makes `git apply` happy. The resulting diff that applies is:\r\n\r\n```diff\r\ndiff --git a/stage_add b/stage_add\r\nnew file mode 100644\r\nindex 0000000..e69de29\r\ndiff --git a/stage_delete b/stage_delete\r\ndeleted file mode 100644\r\nindex e69de29..0000000\r\ndiff --git a/stage_modify b/stage_modify\r\nindex e69de29..61b9ad0 100644\r\n--- a/stage_modify\r\n+++ b/stage_modify\r\n@@ -0,0 +1 @@\r\n+Modify\r\n\\ No newline at end of file\r\n```\r\n\r\nThe git version I'm using to apply the diff is 2.17.1.\r\n\r\nHere is for reference my adjusted code:\r\n\r\n```python\r\n\r\ndef gen_diff_header(paths, modes, shas):\r\n    \"\"\"Write a blob diff header.\r\n\r\n    :param paths: Tuple with old and new path\r\n    :param modes: Tuple with old and new modes\r\n    :param shas: Tuple with old and new shas\r\n    \"\"\"\r\n    (old_path, new_path) = paths\r\n    (old_mode, new_mode) = modes\r\n    (old_sha, new_sha) = shas\r\n    shortid = dulwich.patch.shortid\r\n    yield b\"diff --git \" + old_path + b\" \" + new_path + b\"\\n\"\r\n\r\n    if old_mode != new_mode:\r\n        if new_mode is not None:\r\n            if old_mode is not None:\r\n                yield (\"old file mode %o\\n\" % old_mode).encode(\"ascii\")\r\n\r\n            yield (\"new file mode %o\\n\" % new_mode).encode(\"ascii\")\r\n\r\n        else:\r\n            yield (\"deleted file mode %o\\n\" % old_mode).encode(\"ascii\")\r\n\r\n    yield b\"index \" + shortid(old_sha) + b\"..\" + shortid(new_sha)\r\n\r\n    if new_mode is not None and old_mode is not None:\r\n        yield (\" %o\" % new_mode).encode(\"ascii\")\r\n\r\n    yield b\"\\n\"\r\n```\r\nI can make a pull-request with the new code but I wanted to opened an issue first to first have your opinion on the differences, I'm pretty sure I'm lacking some context that could impact the code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/639", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/639/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/639/events", "html_url": "https://github.com/dulwich/dulwich/issues/639", "id": 335495685, "node_id": "MDU6SXNzdWUzMzU0OTU2ODU=", "number": 639, "title": "Bug with clone", "user": {"login": "r0mainK", "id": 32878976, "node_id": "MDQ6VXNlcjMyODc4OTc2", "avatar_url": "https://avatars2.githubusercontent.com/u/32878976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r0mainK", "html_url": "https://github.com/r0mainK", "followers_url": "https://api.github.com/users/r0mainK/followers", "following_url": "https://api.github.com/users/r0mainK/following{/other_user}", "gists_url": "https://api.github.com/users/r0mainK/gists{/gist_id}", "starred_url": "https://api.github.com/users/r0mainK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r0mainK/subscriptions", "organizations_url": "https://api.github.com/users/r0mainK/orgs", "repos_url": "https://api.github.com/users/r0mainK/repos", "events_url": "https://api.github.com/users/r0mainK/events{/privacy}", "received_events_url": "https://api.github.com/users/r0mainK/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-25T17:17:36Z", "updated_at": "2018-06-25T18:27:43Z", "closed_at": "2018-06-25T18:27:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So there seems to be problem with clone for versions `0.19.3` and `0.19.4`, this is what I get:\r\n\r\n```\r\nPython 3.6.5 (default, Mar 30 2018, 06:41:53) \r\n[GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.39.2)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from dulwich.porcelain import clone\r\n>>> clone(\"https://github.com/src-d/models\", target=\".\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/site-packages/dulwich/porcelain.py\", line 325, in clone\r\n    fetch_result = fetch(r, host_path, origin, message=reflog_message)\r\n  File \"/usr/local/lib/python3.6/site-packages/dulwich/porcelain.py\", line 1078, in fetch\r\n    fetch_result = client.fetch(path, r, progress=errstream.write)\r\n  File \"/usr/local/lib/python3.6/site-packages/dulwich/client.py\", line 1026, in fetch\r\n    with self._open_repo(path) as r:\r\n  File \"/usr/local/lib/python3.6/site-packages/dulwich/client.py\", line 959, in _open_repo\r\n    return closing(Repo(path))\r\n  File \"/usr/local/lib/python3.6/site-packages/dulwich/repo.py\", line 773, in __init__\r\n    \"No git repository was found at %(path)s\" % dict(path=root)\r\ndulwich.errors.NotGitRepository: No git repository was found at /src-d/models\r\n```\r\n\r\nI tried with 0.19.2 and cloned my repo successfully. I haven't tried with other python versions, and havent time to look into it now but yeah its kinda problematic. At the location of the repo the repository is empty apart from the `.git` repository, which seems to have created a new and empty git repo:\r\n\r\n```\r\n:) romain ~ (k8s: local-gpu) (git: master) $ find tests_dulwich/\r\ntests_dulwich/\r\ntests_dulwich//.git\r\ntests_dulwich//.git/config\r\ntests_dulwich//.git/objects\r\ntests_dulwich//.git/objects/pack\r\ntests_dulwich//.git/objects/info\r\ntests_dulwich//.git/HEAD\r\ntests_dulwich//.git/info\r\ntests_dulwich//.git/info/exclude\r\ntests_dulwich//.git/description\r\ntests_dulwich//.git/hooks\r\ntests_dulwich//.git/refs\r\ntests_dulwich//.git/refs/heads\r\ntests_dulwich//.git/refs/tags\r\ntests_dulwich//.git/branches\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/637", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/637/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/637/events", "html_url": "https://github.com/dulwich/dulwich/issues/637", "id": 334039841, "node_id": "MDU6SXNzdWUzMzQwMzk4NDE=", "number": 637, "title": "Python 3 install broken", "user": {"login": "david-caro", "id": 587148, "node_id": "MDQ6VXNlcjU4NzE0OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/587148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-caro", "html_url": "https://github.com/david-caro", "followers_url": "https://api.github.com/users/david-caro/followers", "following_url": "https://api.github.com/users/david-caro/following{/other_user}", "gists_url": "https://api.github.com/users/david-caro/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-caro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-caro/subscriptions", "organizations_url": "https://api.github.com/users/david-caro/orgs", "repos_url": "https://api.github.com/users/david-caro/repos", "events_url": "https://api.github.com/users/david-caro/events{/privacy}", "received_events_url": "https://api.github.com/users/david-caro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-06-20T11:42:06Z", "updated_at": "2018-06-20T17:56:49Z", "closed_at": "2018-06-20T17:56:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nSince the last release, when trying to install dulwich from pip on python3, I'm getting this error:\r\n```\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-req-build-d4w9zid2/setup.py\", line 128, in <module>\r\n        'Development Status :: 1 - Planning',\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/setuptools/__init__.py\", line 128, in setup\r\n        _install_setup_requires(attrs)\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/setuptools/__init__.py\", line 123, in _install_setup_requires\r\n        dist.fetch_build_eggs(dist.setup_requires)\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/setuptools/dist.py\", line 514, in fetch_build_eggs\r\n        replace_conflicting=True,\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 770, in resolve\r\n        replace_conflicting=replace_conflicting\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 1053, in best_match\r\n        return self.obtain(req, installer)\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 1065, in obtain\r\n        return installer(requirement)\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/setuptools/dist.py\", line 581, in fetch_build_egg\r\n        return cmd.easy_install(req)\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 673, in easy_install\r\n        return self.install_item(spec, dist.location, tmpdir, deps)\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 699, in install_item\r\n        dists = self.install_eggs(spec, download, tmpdir)\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 884, in install_eggs\r\n        return self.build_and_install(setup_script, setup_base)\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 1149, in build_and_install                                                                                                                  \r\n        self._set_fetcher_options(os.path.dirname(setup_script))\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 1188, in _set_fetcher_options                                                                                                               \r\n        setopt.edit_config(cfg_filename, settings)\r\n      File \"/code/.tox/py36/lib/python3.6/site-packages/setuptools/command/setopt.py\", line 43, in edit_config\r\n        opts.read([filename])\r\n      File \"/tmp/pip-req-build-d4w9zid2/configparser.py\", line 698, in read\r\n        self._read(fp, filename)\r\n      File \"/tmp/pip-req-build-d4w9zid2/configparser.py\", line 1016, in _read\r\n        for lineno, line in enumerate(fp, start=1):\r\n      File \"/code/.tox/py36/lib/python3.6/encodings/ascii.py\", line 26, in decode\r\n        return codecs.ascii_decode(input, self.errors)[0]\r\n    UnicodeDecodeError: 'ascii' codec can't decode byte 0xc4 in position 48: ordinal not in range(128)\r\n```\r\n\r\nMy guess it's that the utf-8 char added to the setup.cfg file is messing up with it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/636", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/636/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/636/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/636/events", "html_url": "https://github.com/dulwich/dulwich/issues/636", "id": 332946093, "node_id": "MDU6SXNzdWUzMzI5NDYwOTM=", "number": 636, "title": "dulwich.errors.RefFormatError", "user": {"login": "DaveInCaz", "id": 18285074, "node_id": "MDQ6VXNlcjE4Mjg1MDc0", "avatar_url": "https://avatars3.githubusercontent.com/u/18285074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DaveInCaz", "html_url": "https://github.com/DaveInCaz", "followers_url": "https://api.github.com/users/DaveInCaz/followers", "following_url": "https://api.github.com/users/DaveInCaz/following{/other_user}", "gists_url": "https://api.github.com/users/DaveInCaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/DaveInCaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DaveInCaz/subscriptions", "organizations_url": "https://api.github.com/users/DaveInCaz/orgs", "repos_url": "https://api.github.com/users/DaveInCaz/repos", "events_url": "https://api.github.com/users/DaveInCaz/events{/privacy}", "received_events_url": "https://api.github.com/users/DaveInCaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-16T00:29:23Z", "updated_at": "2018-06-16T02:03:31Z", "closed_at": "2018-06-16T02:03:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pushing to a github enterprise server...\r\n\r\n** unknown exception encountered, please report by visiting\r\n** https://mercurial-scm.org/wiki/BugTracker\r\n** Python 2.7.13 (v2.7.13:a06454b1afa1, Dec 17 2016, 20:53:40) [MSC v.1500 64 bit (AMD64)]\r\n** Mercurial Distributed SCM (version 4.5)\r\n** Extensions loaded: convert, graphlog, eol, strip, transplant, rebase, relink, extdiff, hggit, share, shelve\r\nTraceback (most recent call last):\r\n  File \"hg\", line 61, in <module>\r\n  File \"mercurial\\dispatch.pyo\", line 88, in run\r\n  File \"mercurial\\dispatch.pyo\", line 183, in dispatch\r\n  File \"mercurial\\dispatch.pyo\", line 324, in _runcatch\r\n  File \"mercurial\\dispatch.pyo\", line 332, in _callcatch\r\n  File \"mercurial\\scmutil.pyo\", line 154, in callcatch\r\n  File \"mercurial\\dispatch.pyo\", line 314, in _runcatchfunc\r\n  File \"mercurial\\dispatch.pyo\", line 918, in _dispatch\r\n  File \"mercurial\\dispatch.pyo\", line 673, in runcommand\r\n  File \"mercurial\\dispatch.pyo\", line 926, in _runcommand\r\n  File \"mercurial\\dispatch.pyo\", line 915, in <lambda>\r\n  File \"mercurial\\util.pyo\", line 1195, in check\r\n  File \"mercurial\\commands.pyo\", line 4193, in push\r\n  File \"hggit\\util.pyo\", line 56, in inner\r\n  File \"hggit\\__init__.pyo\", line 384, in exchangepush\r\n  File \"hggit\\git_handler.pyo\", line 403, in push\r\n  File \"hggit\\git_handler.pyo\", line 370, in export_commits\r\n  File \"hggit\\git_handler.pyo\", line 1329, in update_references\r\n  File \"dulwich\\refs.pyo\", line 290, in __setitem__\r\n  File \"dulwich\\refs.pyo\", line 623, in set_if_equals\r\n  File \"dulwich\\refs.pyo\", line 191, in _check_refname\r\ndulwich.errors.RefFormatError: refs/heads/OpenStudio Nuget", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/632", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/632/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/632/events", "html_url": "https://github.com/dulwich/dulwich/issues/632", "id": 331075626, "node_id": "MDU6SXNzdWUzMzEwNzU2MjY=", "number": 632, "title": "How to keep a repo in memory?", "user": {"login": "WladdGorshenin", "id": 38522968, "node_id": "MDQ6VXNlcjM4NTIyOTY4", "avatar_url": "https://avatars1.githubusercontent.com/u/38522968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WladdGorshenin", "html_url": "https://github.com/WladdGorshenin", "followers_url": "https://api.github.com/users/WladdGorshenin/followers", "following_url": "https://api.github.com/users/WladdGorshenin/following{/other_user}", "gists_url": "https://api.github.com/users/WladdGorshenin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WladdGorshenin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WladdGorshenin/subscriptions", "organizations_url": "https://api.github.com/users/WladdGorshenin/orgs", "repos_url": "https://api.github.com/users/WladdGorshenin/repos", "events_url": "https://api.github.com/users/WladdGorshenin/events{/privacy}", "received_events_url": "https://api.github.com/users/WladdGorshenin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-11T07:35:56Z", "updated_at": "2018-06-29T10:58:22Z", "closed_at": "2018-06-11T20:39:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use Dulwich to calculate statistics about a Git repo for my research project. Therefore I need to do a lot of calculations and re-calculations on all object. What is the best way to keep a whole repo in memory in order to speed up the process?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/631", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/631/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/631/events", "html_url": "https://github.com/dulwich/dulwich/issues/631", "id": 330617323, "node_id": "MDU6SXNzdWUzMzA2MTczMjM=", "number": 631, "title": "Improvement: push failures", "user": {"login": "r0mainK", "id": 32878976, "node_id": "MDQ6VXNlcjMyODc4OTc2", "avatar_url": "https://avatars2.githubusercontent.com/u/32878976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r0mainK", "html_url": "https://github.com/r0mainK", "followers_url": "https://api.github.com/users/r0mainK/followers", "following_url": "https://api.github.com/users/r0mainK/following{/other_user}", "gists_url": "https://api.github.com/users/r0mainK/gists{/gist_id}", "starred_url": "https://api.github.com/users/r0mainK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r0mainK/subscriptions", "organizations_url": "https://api.github.com/users/r0mainK/orgs", "repos_url": "https://api.github.com/users/r0mainK/repos", "events_url": "https://api.github.com/users/r0mainK/events{/privacy}", "received_events_url": "https://api.github.com/users/r0mainK/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170216, "node_id": "MDU6TGFiZWwxNDgxNzAyMTY=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/enhancement", "name": "enhancement", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-08T11:11:13Z", "updated_at": "2020-06-21T02:09:58Z", "closed_at": "2020-06-21T02:09:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### CONTEXT\r\n\r\nHey guys, I'm using the porcelain module, and I would like to improve the push function. Currently, errors are only raised when the client is created with `get_transport_and_path`, which is fine, but not for the actual push, where they are caught and an errorlog to stderr:\r\n\r\n```\r\ntry:\r\n    client.send_pack(path, update_refs,\r\n                     generate_pack_data=r.object_store.generate_pack_data,\r\n                     progress=errstream.write)\r\n    errstream.write(b\"Push to \" + remote_location_bytes + b\" successful.\\n\")\r\nexcept (UpdateRefsError, SendPackError) as e:\r\n    errstream.write(b\"Push to \" + remote_location_bytes +\r\n                    b\" failed -> \" + e.message.encode(err_encoding) + b\"\\n\")\r\n``` \r\n\r\nThe thing is that in my case, and I think in most, the uncaught exceptions are not a real problem,, because usually other operations, such as a `clone`, or a `ls_remote` already would have caused them to be raised before any push.  However, if the error happens during the push, there is no internal way to know and stop an application at that point, at least not directly, since the exception is caught. I implemented a check that compares local/remotes head, but its suboptimal.\r\n\r\n### IMPROVEMENTS\r\n\r\nSo here is how we could easily change this:\r\n1.  raise an exception if there is a failure during the push, either once the log has been outputted or instead of it.\r\n2. return a boolean at the end of the operation\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/630", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/630/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/630/events", "html_url": "https://github.com/dulwich/dulwich/issues/630", "id": 329498145, "node_id": "MDU6SXNzdWUzMjk0OTgxNDU=", "number": 630, "title": "How to reproduce 'git diff commitA commitB -- file' with Dulwich", "user": {"login": "WladdGorshenin", "id": 38522968, "node_id": "MDQ6VXNlcjM4NTIyOTY4", "avatar_url": "https://avatars1.githubusercontent.com/u/38522968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WladdGorshenin", "html_url": "https://github.com/WladdGorshenin", "followers_url": "https://api.github.com/users/WladdGorshenin/followers", "following_url": "https://api.github.com/users/WladdGorshenin/following{/other_user}", "gists_url": "https://api.github.com/users/WladdGorshenin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WladdGorshenin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WladdGorshenin/subscriptions", "organizations_url": "https://api.github.com/users/WladdGorshenin/orgs", "repos_url": "https://api.github.com/users/WladdGorshenin/repos", "events_url": "https://api.github.com/users/WladdGorshenin/events{/privacy}", "received_events_url": "https://api.github.com/users/WladdGorshenin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-05T15:02:09Z", "updated_at": "2018-06-08T18:28:38Z", "closed_at": "2018-06-08T18:28:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm glad that Dulwich project exists and is evolving, I really like idea to have python API to Git. \r\n\r\nBut because of lack of documentation I can't get how to reproduce what 'git diff commitA commitB -- file' command does.\r\n\r\nAppreciate any help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/629", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/629/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/629/events", "html_url": "https://github.com/dulwich/dulwich/issues/629", "id": 324792109, "node_id": "MDU6SXNzdWUzMjQ3OTIxMDk=", "number": 629, "title": "error: option --pure not recognized", "user": {"login": "QGB", "id": 8005654, "node_id": "MDQ6VXNlcjgwMDU2NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8005654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/QGB", "html_url": "https://github.com/QGB", "followers_url": "https://api.github.com/users/QGB/followers", "following_url": "https://api.github.com/users/QGB/following{/other_user}", "gists_url": "https://api.github.com/users/QGB/gists{/gist_id}", "starred_url": "https://api.github.com/users/QGB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/QGB/subscriptions", "organizations_url": "https://api.github.com/users/QGB/orgs", "repos_url": "https://api.github.com/users/QGB/repos", "events_url": "https://api.github.com/users/QGB/events{/privacy}", "received_events_url": "https://api.github.com/users/QGB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-21T05:29:01Z", "updated_at": "2020-06-01T20:43:11Z", "closed_at": "2020-06-01T20:43:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "pip install dulwich --global-option=\"--pure\"\r\n\r\nG:\\QGB\\Anaconda2\\lib\\site-packages\\pip\\_internal\\commands\\install.py:199: UserWarning: Disabling all use of wheels due to the use of --build-options / --global-options / --install-options.\r\n  cmdoptions.check_install_build_global(options)\r\nCollecting dulwich\r\n  Using cached https://files.pythonhosted.org/packages/7b/1e/3d6368a7924ef909886fbedfefba6811409e56637dad109da127e234b8b3/dulwich-0.19.2.tar.gz\r\nCollecting urllib3>=1.21 (from dulwich)\r\n  Using cached https://files.pythonhosted.org/packages/ee/11/7c59620aceedcc1ef65e156cc5ce5a24ef87be4107c2b74458464e437a5d/urllib3-1.22.tar.gz\r\nCollecting certifi (from dulwich)\r\n  Using cached https://files.pythonhosted.org/packages/4d/9c/46e950a6f4d6b4be571ddcae21e7bc846fcbb88f1de3eff0f6dd0a6be55d/certifi-2018.4.16.tar.gz\r\nSkipping bdist_wheel for dulwich, due to binaries being disabled for it.\r\nSkipping bdist_wheel for urllib3, due to binaries being disabled for it.\r\nSkipping bdist_wheel for certifi, due to binaries being disabled for it.\r\nInstalling collected packages: urllib3, certifi, dulwich\r\n  Running setup.py install for urllib3 ... error\r\n    Complete output from command g:\\qgb\\anaconda2\\python.exe -u -c \"import setuptools, tokenize;__file__='c:\\\\users\\\\admini~1\\\\appdata\\\\local\\\\temp\\\\pip-install-wnqxnu\\\\urllib3\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" --pure install --record c:\\users\\admini~1\\appdata\\local\\temp\\pip-record-4bgks2\\install-record.txt --single-version-externally-managed --compile:\r\n    usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\r\n       or: -c --help [cmd1 cmd2 ...]\r\n       or: -c --help-commands\r\n       or: -c cmd --help\r\n\r\n    error: option --pure not recognized\r\n\r\n    ----------------------------------------\r\nCommand \"g:\\qgb\\anaconda2\\python.exe -u -c \"import setuptools, tokenize;__file__='c:\\\\users\\\\admini~1\\\\appdata\\\\local\\\\temp\\\\pip-install-wnqxnu\\\\urllib3\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" --pure install --record c:\\users\\admini~1\\appdata\\local\\temp\\pip-record-4bgks2\\install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in c:\\users\\admini~1\\appdata\\local\\temp\\pip-install-wnqxnu\\urllib3\\", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/626", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/626/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/626/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/626/events", "html_url": "https://github.com/dulwich/dulwich/issues/626", "id": 323791915, "node_id": "MDU6SXNzdWUzMjM3OTE5MTU=", "number": 626, "title": "dulwich.porcelain.clone No such file or directory on AWS Lambda", "user": {"login": "j2ali", "id": 784342, "node_id": "MDQ6VXNlcjc4NDM0Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/784342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j2ali", "html_url": "https://github.com/j2ali", "followers_url": "https://api.github.com/users/j2ali/followers", "following_url": "https://api.github.com/users/j2ali/following{/other_user}", "gists_url": "https://api.github.com/users/j2ali/gists{/gist_id}", "starred_url": "https://api.github.com/users/j2ali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j2ali/subscriptions", "organizations_url": "https://api.github.com/users/j2ali/orgs", "repos_url": "https://api.github.com/users/j2ali/repos", "events_url": "https://api.github.com/users/j2ali/events{/privacy}", "received_events_url": "https://api.github.com/users/j2ali/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790716860, "node_id": "MDU6TGFiZWw3OTA3MTY4NjA=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/question", "name": "question", "color": "2ec1f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-16T21:22:53Z", "updated_at": "2020-06-06T21:43:11Z", "closed_at": "2020-06-06T21:42:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to execute\r\n\r\n```\r\ndulwich.porcelain.clone('git@bitbucket.org:%s/%s.git' % (BITBUCKET_USER,BITBUCKET_REPO_NAME), '/tmp/repo')\r\n```\r\n\r\nin AWS Lambda, however I get \r\n\r\n```\r\n\"errorType\": \"OSError\",\r\n  \"errorMessage\": \"[Errno 2] No such file or directory\"\r\n```\r\n\r\nThis works for me locally. Anyone having the same problem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/622", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/622/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/622/events", "html_url": "https://github.com/dulwich/dulwich/issues/622", "id": 315022382, "node_id": "MDU6SXNzdWUzMTUwMjIzODI=", "number": 622, "title": "TypeError: genpack() got an unexpected keyword argument 'ofs_delta' when pushing to EMPTY git repository with 0.19.x", "user": {"login": "rombarcz", "id": 193835, "node_id": "MDQ6VXNlcjE5MzgzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/193835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rombarcz", "html_url": "https://github.com/rombarcz", "followers_url": "https://api.github.com/users/rombarcz/followers", "following_url": "https://api.github.com/users/rombarcz/following{/other_user}", "gists_url": "https://api.github.com/users/rombarcz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rombarcz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rombarcz/subscriptions", "organizations_url": "https://api.github.com/users/rombarcz/orgs", "repos_url": "https://api.github.com/users/rombarcz/repos", "events_url": "https://api.github.com/users/rombarcz/events{/privacy}", "received_events_url": "https://api.github.com/users/rombarcz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-17T11:42:22Z", "updated_at": "2018-04-17T12:22:49Z", "closed_at": "2018-04-17T12:22:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using hggit and pushing to EMPTY git repository (on bitbucket), I got:\r\nTypeError: genpack() got an unexpected keyword argument 'ofs_delta'\r\n\r\n```\r\npip freeze -l\r\ncertifi==2018.4.16\r\ndulwich==0.19.2\r\nhg-git==0.8.11\r\nmercurial==4.5.3\r\nurllib3==1.22\r\n```\r\n\r\n\r\non `dulwich==0.18.6` everything goes smoothly\r\n\r\nTrace below:\r\n```\r\n** unknown exception encountered, please report by visiting\r\n** https://mercurial-scm.org/wiki/BugTracker\r\n** Python 2.7.10 (default, May 16 2016, 10:18:36) [GCC 4.9.3]\r\n** Mercurial Distributed SCM (version 4.5.3)\r\n** Extensions loaded: transplant, convert, strip, mq, graphlog, pager, hggit\r\nTraceback (most recent call last):\r\n  File \"/home/romke/tmp/hggit/bin/hg\", line 41, in <module>\r\n    dispatch.run()\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/dispatch.py\", line 88, in run\r\n    status = (dispatch(req) or 0) & 255\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/dispatch.py\", line 183, in dispatch\r\n    ret = _runcatch(req)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/dispatch.py\", line 324, in _runcatch\r\n    return _callcatch(ui, _runcatchfunc)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/dispatch.py\", line 332, in _callcatch\r\n    return scmutil.callcatch(ui, func)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/scmutil.py\", line 154, in callcatch\r\n    return func()\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/dispatch.py\", line 314, in _runcatchfunc\r\n    return _dispatch(req)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/dispatch.py\", line 918, in _dispatch\r\n    cmdpats, cmdoptions)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/dispatch.py\", line 673, in runcommand\r\n    ret = _runcommand(ui, options, cmd, d)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/hgext/pager.py\", line 77, in pagecmd\r\n    return orig(ui, options, cmd, cmdfunc)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/dispatch.py\", line 926, in _runcommand\r\n    return cmdfunc()\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/dispatch.py\", line 915, in <lambda>\r\n    d = lambda: util.checksignature(func)(ui, *args, **strcmdopt)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/util.py\", line 1195, in check\r\n    return func(*args, **kwargs)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/util.py\", line 1195, in check\r\n    return func(*args, **kwargs)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/hgext/mq.py\", line 3583, in mqcommand\r\n    return orig(ui, repo, *args, **kwargs)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/util.py\", line 1195, in check\r\n    return func(*args, **kwargs)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/mercurial/commands.py\", line 4194, in push\r\n    opargs=opargs)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/hggit/util.py\", line 56, in inner\r\n    return f(*args, **kwargs)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/hggit/__init__.py\", line 384, in exchangepush\r\n    pushop.cgresult = repo.githandler.push(remote.path, revs, force)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/hggit/git_handler.py\", line 404, in push\r\n    old_refs, new_refs = self.upload_pack(remote, revs, force)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/hggit/git_handler.py\", line 1113, in upload_pack\r\n    progress=callback)\r\n  File \"/home/romke/tmp/hggit/lib/python2.7/site-packages/dulwich/client.py\", line 704, in send_pack\r\n    ofs_delta=(CAPABILITY_OFS_DELTA in negotiated_capabilities))\r\nTypeError: genpack() got an unexpected keyword argument 'ofs_delta'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/616", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/616/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/616/events", "html_url": "https://github.com/dulwich/dulwich/issues/616", "id": 304130149, "node_id": "MDU6SXNzdWUzMDQxMzAxNDk=", "number": 616, "title": "when installed from pip, suddenly there are tons of new dependencies", "user": {"login": "chdiza", "id": 3311113, "node_id": "MDQ6VXNlcjMzMTExMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3311113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chdiza", "html_url": "https://github.com/chdiza", "followers_url": "https://api.github.com/users/chdiza/followers", "following_url": "https://api.github.com/users/chdiza/following{/other_user}", "gists_url": "https://api.github.com/users/chdiza/gists{/gist_id}", "starred_url": "https://api.github.com/users/chdiza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chdiza/subscriptions", "organizations_url": "https://api.github.com/users/chdiza/orgs", "repos_url": "https://api.github.com/users/chdiza/repos", "events_url": "https://api.github.com/users/chdiza/events{/privacy}", "received_events_url": "https://api.github.com/users/chdiza/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-03-11T04:45:44Z", "updated_at": "2018-03-31T19:26:30Z", "closed_at": "2018-03-31T19:26:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just did `pip install -U dulwich` to upgrade my `dulwich` after seeing that a new version is out.\r\n\r\nTo my surprise, this required a jillion other dependencies to be installed by `pip`.  For as long as I can remember, `dulwich` hasn't brought in *any* other eggs as dependencies.  I can see nothing about these new dependencies in the `NEWS` file.\r\n\r\nIs this intentional, or just some kind of slip-up in packaging up for PyPi?  I sure hope it's just the latter.  \r\n\r\nJust FYI, the new dependencies that `pip` installed are: \r\n```\r\nInstalling collected packages: idna, six, pycparser, cffi, enum34, asn1crypto, ipaddress, cryptography, pyOpenSSL, certifi, urllib3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/613", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/613/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/613/events", "html_url": "https://github.com/dulwich/dulwich/issues/613", "id": 296536817, "node_id": "MDU6SXNzdWUyOTY1MzY4MTc=", "number": 613, "title": "Intermittent error during push:  'SendPackError' object has no attribute 'message'", "user": {"login": "MattSable", "id": 1229006, "node_id": "MDQ6VXNlcjEyMjkwMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1229006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattSable", "html_url": "https://github.com/MattSable", "followers_url": "https://api.github.com/users/MattSable/followers", "following_url": "https://api.github.com/users/MattSable/following{/other_user}", "gists_url": "https://api.github.com/users/MattSable/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattSable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattSable/subscriptions", "organizations_url": "https://api.github.com/users/MattSable/orgs", "repos_url": "https://api.github.com/users/MattSable/repos", "events_url": "https://api.github.com/users/MattSable/events{/privacy}", "received_events_url": "https://api.github.com/users/MattSable/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-12T21:50:24Z", "updated_at": "2020-06-21T02:10:52Z", "closed_at": "2020-06-21T02:10:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been seeing this issue intermittently on Windows, Python 3+.\r\n\r\n```\r\nporcelain.py\", line 786, in push\r\nb\" failed -> \" + e.message.encode(err_encoding) +\r\nAttributeError: 'SendPackError' object has no attribute 'message'\r\n```\r\n\r\nI don't have repro steps yet, but it looks like SendPackError is part of Dulwich.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/612", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/612/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/612/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/612/events", "html_url": "https://github.com/dulwich/dulwich/issues/612", "id": 294961271, "node_id": "MDU6SXNzdWUyOTQ5NjEyNzE=", "number": 612, "title": "String/bytes type of argument to branch_create() is unclear", "user": {"login": "detly", "id": 311239, "node_id": "MDQ6VXNlcjMxMTIzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/311239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detly", "html_url": "https://github.com/detly", "followers_url": "https://api.github.com/users/detly/followers", "following_url": "https://api.github.com/users/detly/following{/other_user}", "gists_url": "https://api.github.com/users/detly/gists{/gist_id}", "starred_url": "https://api.github.com/users/detly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detly/subscriptions", "organizations_url": "https://api.github.com/users/detly/orgs", "repos_url": "https://api.github.com/users/detly/repos", "events_url": "https://api.github.com/users/detly/events{/privacy}", "received_events_url": "https://api.github.com/users/detly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-07T00:20:31Z", "updated_at": "2018-02-19T23:20:33Z", "closed_at": "2018-02-19T23:20:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the function [`porcelain.branch_create()`](https://github.com/dulwich/dulwich/blob/master/dulwich/porcelain.py#L1018), there are arguments `name` and `objectish`. `name` has to be bytes (ie. an encoded string) because of:\r\n\r\n```python\r\nrefname = b\"refs/heads/\" + name\r\n```\r\n`objectish` has to be a string because of:\r\n\r\n```python3\r\nref_message = b\"branch: Created from \" + objectish.encode('utf-8')\r\n```\r\n\r\nThis could be clearer in the docstring, I kept tripping over it because I was pulling the `objectish` argument from code like:\r\n\r\n```python3\r\nbranches = {\r\n    ref for ref in repo.get_refs()\r\n    if ref.startswith(b'refs/remotes/origin/')\r\n} - tags\r\n```\r\n\r\nMy `objectish` arguments were each element of this set, so I had to do `dulwich.porcelain.branch_create(repo, local_branch, branch.decode('utf8'))`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/610", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/610/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/610/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/610/events", "html_url": "https://github.com/dulwich/dulwich/issues/610", "id": 290967846, "node_id": "MDU6SXNzdWUyOTA5Njc4NDY=", "number": 610, "title": "porcelain web_daemon unclear how to use", "user": {"login": "dominiquevocat", "id": 4181587, "node_id": "MDQ6VXNlcjQxODE1ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4181587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dominiquevocat", "html_url": "https://github.com/dominiquevocat", "followers_url": "https://api.github.com/users/dominiquevocat/followers", "following_url": "https://api.github.com/users/dominiquevocat/following{/other_user}", "gists_url": "https://api.github.com/users/dominiquevocat/gists{/gist_id}", "starred_url": "https://api.github.com/users/dominiquevocat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dominiquevocat/subscriptions", "organizations_url": "https://api.github.com/users/dominiquevocat/orgs", "repos_url": "https://api.github.com/users/dominiquevocat/repos", "events_url": "https://api.github.com/users/dominiquevocat/events{/privacy}", "received_events_url": "https://api.github.com/users/dominiquevocat/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790716860, "node_id": "MDU6TGFiZWw3OTA3MTY4NjA=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/question", "name": "question", "color": "2ec1f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-23T19:41:32Z", "updated_at": "2018-02-24T13:30:11Z", "closed_at": "2018-02-24T13:30:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the way to successfully run a web_daemon unsing porcelain?\r\n\r\nI run into the issue, that dulwich\\server.py fails in open_repository after joining path and root folder since the relative web url always starts with a / resulting in os.path.join to skip the basepath since the relative path is from root :-( resulting in \r\nNotGitRepository: Path '/' not inside root 'h:\\\\etc\\\\apps\\\\test\\\\' (on a windows box, same on linux)\r\n\r\nis it me or do i miss something?\r\n\r\ni have a folder structure like /opt/something/etc/apps/ with folders in it that have or have not a .git (repo) and would like to serve this - can i just set /opt/something/etc/apps/ as root and then access the repos using http://>servername>:8123/<foldername> or how would this work?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/609", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/609/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/609/events", "html_url": "https://github.com/dulwich/dulwich/issues/609", "id": 290665975, "node_id": "MDU6SXNzdWUyOTA2NjU5NzU=", "number": 609, "title": "Printing out Repo, Tree, Commit objects on Python3 gives TypeError", "user": {"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-23T00:27:21Z", "updated_at": "2018-01-23T00:41:38Z", "closed_at": "2018-01-23T00:41:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "With code like this:\r\n\r\n```python\r\nprint(Blob.from_string(b\"foo\"))\r\n```\r\n\r\n...I get an exception on Python3:\r\n\r\n```\r\nTypeError: __str__ returned non-string (type bytes)\r\n```\r\nFrom discussion on IRC: \r\n\r\n```\r\njelmer> I think we just want to provide __bytes__ rather than __str__ on Python3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/608", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/608/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/608/events", "html_url": "https://github.com/dulwich/dulwich/issues/608", "id": 289730179, "node_id": "MDU6SXNzdWUyODk3MzAxNzk=", "number": 608, "title": "Encoding issue?", "user": {"login": "ardumont", "id": 718812, "node_id": "MDQ6VXNlcjcxODgxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/718812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ardumont", "html_url": "https://github.com/ardumont", "followers_url": "https://api.github.com/users/ardumont/followers", "following_url": "https://api.github.com/users/ardumont/following{/other_user}", "gists_url": "https://api.github.com/users/ardumont/gists{/gist_id}", "starred_url": "https://api.github.com/users/ardumont/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ardumont/subscriptions", "organizations_url": "https://api.github.com/users/ardumont/orgs", "repos_url": "https://api.github.com/users/ardumont/repos", "events_url": "https://api.github.com/users/ardumont/events{/privacy}", "received_events_url": "https://api.github.com/users/ardumont/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-01-18T18:27:09Z", "updated_at": "2018-04-12T07:09:46Z", "closed_at": "2018-04-09T02:08:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have a repository whose refs/commit messages are in cyrillic:\r\n\r\n```\r\n>>> import os\r\n>>> list(os.walk(b'refs/heads'))\r\n[(b'refs/heads', [], [b'\\xcd\\xee\\xe2\\xe0\\xff\\xe2\\xe5\\xf2\\xea\\xe01', b'master'])]\r\n>>> s = b'\\xcd\\xee\\xe2\\xe0\\xff\\xe2\\xe5\\xf2\\xea\\xe01'\r\n>>> s.decode('latin1')\r\n'\u00cd\u00ee\u00e2\u00e0\u00ff\u00e2\u00e5\u00f2\u00ea\u00e01'  # seems like rubbish\r\n>>> s.decode('cp1251')\r\n'\u041d\u043e\u0432\u0430\u044f\u0432\u0435\u0442\u043a\u04301'  # looks like russian  -> google translates agrees: `newlight1`\r\n```\r\n[google-translates '\u041d\u043e\u0432\u0430\u044f\u0432\u0435\u0442\u043a\u04301' as `newlight1`](https://translate.google.com/#auto/fr/%D0%9D%D0%BE%D0%B2%D0%B0%D1%8F%D0%B2%D0%B5%D1%82%D0%BA%D0%B01).\r\n\r\n... and somehow, that makes dulwich break:\r\n```\r\n$ python3\r\n>>> from dulwich.repo import Repo\r\n>>> r = Repo('.')\r\n>>> r.refs\r\nDiskRefsContainer('.')\r\n>>> r.refs.allkeys()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3/dist-packages/dulwich/refs.py\", line 470, in allkeys\r\n    sys.getfilesystemencoding())\r\nUnicodeEncodeError: 'utf-8' codec can't encode characters in position 11-20: surrogates not allowed\r\n```\r\n\r\n[I think it's not the expected behavior according to my understanding of the doc.](https://github.com/jelmer/dulwich/blob/a0e591771c501a93253ac1ebc19eebc6f45e0d4d/docs/tutorial/encoding.txt#L14-L16)\r\n\r\nDo you know how could i overcome this?\r\n\r\nThanks for your help.\r\n\r\nCheers,\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/603", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/603/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/603/events", "html_url": "https://github.com/dulwich/dulwich/issues/603", "id": 287141908, "node_id": "MDU6SXNzdWUyODcxNDE5MDg=", "number": 603, "title": "Creating a repo locks files when it doesn't need to?", "user": {"login": "MattSable", "id": 1229006, "node_id": "MDQ6VXNlcjEyMjkwMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1229006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattSable", "html_url": "https://github.com/MattSable", "followers_url": "https://api.github.com/users/MattSable/followers", "following_url": "https://api.github.com/users/MattSable/following{/other_user}", "gists_url": "https://api.github.com/users/MattSable/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattSable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattSable/subscriptions", "organizations_url": "https://api.github.com/users/MattSable/orgs", "repos_url": "https://api.github.com/users/MattSable/repos", "events_url": "https://api.github.com/users/MattSable/events{/privacy}", "received_events_url": "https://api.github.com/users/MattSable/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790716860, "node_id": "MDU6TGFiZWw3OTA3MTY4NjA=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/question", "name": "question", "color": "2ec1f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-09T16:07:10Z", "updated_at": "2018-01-09T16:43:50Z", "closed_at": "2018-01-09T16:43:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following scenario:\r\n\r\n- Init/Clone a repo\r\n- An exception happens\r\n- Try to delete the repo during exception handling\r\n- Get the following error:  \r\n\r\n> The process cannot access the file because it is being used by another process: 'c:\\\\users\\\\testuser\\\\1515512906fdd749\\\\.git\\\\objects\\\\pack\\\\pack-60818aaa1af2cbb2dc09737a822fed53f6ad08be.idx'\r\n\r\n\r\nI've tried adding this to the exception handling before deleting the repo:\r\n```\r\nrepo = porcelain.open_repo(repo_path)\r\nrepo.close()\r\n```\r\n\r\nwhich works sometimes, but not in all scenarios. \r\n\r\nI've found that if I always just close the repo immediately after init/clone, and then just reopen it, I never run into any issues when trying to delete the repo later:\r\n\r\n```\r\nrepo = porcelain.init(path)  # or porcelain.clone(...)\r\nrepo.close()\r\nrepo = porcelain.open_repo(repo.path)\r\n```\r\n\r\nThis should mean that one of the two is true:\r\n\r\n1) Init/Clone shouldn't be maintaining the lock on the .idx files, and this is a bug\r\n2) There are some unintended consequences to my code that I just haven't run into yet.\r\n\r\n@jelmer Do you know which of these two is the case?\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/602", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/602/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/602/events", "html_url": "https://github.com/dulwich/dulwich/issues/602", "id": 286968869, "node_id": "MDU6SXNzdWUyODY5Njg4Njk=", "number": 602, "title": "Porcelain Commit Error: 'name': KeyError", "user": {"login": "marcuswl345", "id": 15118701, "node_id": "MDQ6VXNlcjE1MTE4NzAx", "avatar_url": "https://avatars3.githubusercontent.com/u/15118701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcuswl345", "html_url": "https://github.com/marcuswl345", "followers_url": "https://api.github.com/users/marcuswl345/followers", "following_url": "https://api.github.com/users/marcuswl345/following{/other_user}", "gists_url": "https://api.github.com/users/marcuswl345/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcuswl345/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcuswl345/subscriptions", "organizations_url": "https://api.github.com/users/marcuswl345/orgs", "repos_url": "https://api.github.com/users/marcuswl345/repos", "events_url": "https://api.github.com/users/marcuswl345/events{/privacy}", "received_events_url": "https://api.github.com/users/marcuswl345/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-01-09T04:43:03Z", "updated_at": "2018-02-28T05:54:15Z", "closed_at": "2018-01-24T04:05:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI get the following error when I try to run the **porcelain.commit** command\r\n\r\n`'name': KeyError\r\nTraceback (most recent call last):\r\n  File \"/var/task/lambda_function.py\", line 47, in lambda_handler\r\n    porcelain.commit(repo=\"/tmp/repo\", message=b\"A sample commit\")\r\n  File \"/var/task/dulwich/porcelain.py\", line 236, in commit\r\n    return r.do_commit(message=message, author=author, committer=committer)\r\n  File \"/var/task/dulwich/repo.py\", line 590, in do_commit\r\n    committer = self._get_user_identity()\r\n  File \"/var/task/dulwich/repo.py\", line 521, in _get_user_identity\r\n    config.get((b\"user\", ), b\"email\") + b\">\")\r\n  File \"/var/task/dulwich/config.py\", line 430, in get\r\n    raise KeyError(name)\r\nKeyError: 'name'`\r\n\r\nHere is my code\r\n````\r\n    # Clones Repo \r\n    r = porcelain.clone(client_repo, \"/tmp/repo/\")\r\n    \r\n    # Copies env\r\n    shutil.copytree(\"/tmp/repo/\" + event[\"old_env\"], \"/tmp/repo/\" + event[\"new_env\"])\r\n    \r\n    # Pushes to github\r\n    porcelain.add(repo=\"/tmp/repo\", paths=\"/tmp/repo\")\r\n    ########### error occurs here #########\r\n    porcelain.commit(repo=\"/tmp/repo\", message=b\"A sample commit\")\r\n    ##################################\r\n    porcelain.push(\"/tmp/repo\", \"https://\" + os.environ[\"TOKEN\"] + \":x-oauth-basic@github.com/\" + os.environ[\"CLIENT_REPO\"] + \".git\", \"master\")\r\n    return \"Success\"\r\n````\r\n\r\nI'm using python 2.7 and dulwich 18.6\r\n  \r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/599", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/599/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/599/events", "html_url": "https://github.com/dulwich/dulwich/issues/599", "id": 286424432, "node_id": "MDU6SXNzdWUyODY0MjQ0MzI=", "number": 599, "title": "Gitignore ignores core.excludesfile setting", "user": {"login": "alistair-broomhead", "id": 1235814, "node_id": "MDQ6VXNlcjEyMzU4MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1235814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alistair-broomhead", "html_url": "https://github.com/alistair-broomhead", "followers_url": "https://api.github.com/users/alistair-broomhead/followers", "following_url": "https://api.github.com/users/alistair-broomhead/following{/other_user}", "gists_url": "https://api.github.com/users/alistair-broomhead/gists{/gist_id}", "starred_url": "https://api.github.com/users/alistair-broomhead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alistair-broomhead/subscriptions", "organizations_url": "https://api.github.com/users/alistair-broomhead/orgs", "repos_url": "https://api.github.com/users/alistair-broomhead/repos", "events_url": "https://api.github.com/users/alistair-broomhead/events{/privacy}", "received_events_url": "https://api.github.com/users/alistair-broomhead/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-05T22:35:43Z", "updated_at": "2018-01-12T08:35:44Z", "closed_at": "2018-01-12T08:35:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is a fairly minor one, I worked around it by changing where I store my global ignores. I had git's core.excludesfile set to `~/.gitignore_global` but the gitignore handling code was hitting `~/.config/git/ignore` (which didn't exist). I have moved my gitignore to this path and everything works fine. \r\n\r\nHaving had a poke into the code it seems like it's looking for `${XDG_CONFIG_HOME:=$HOME/.config}/git/ignore` in the running environment, rather than getting the value of `git config --get core.excludesfile`. \r\n\r\nWith a little digging it seems like XDG_CONFIG_HOME is fairly standard on a number of linux distributions (at least debian and arch) but is certainly not a thing on OSX or Windows, and doesn't look to be standard on at least one current Ubuntu LTS release.\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/598", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/598/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/598/events", "html_url": "https://github.com/dulwich/dulwich/issues/598", "id": 286068412, "node_id": "MDU6SXNzdWUyODYwNjg0MTI=", "number": 598, "title": "Git status shows all files as untracked", "user": {"login": "alistair-broomhead", "id": 1235814, "node_id": "MDQ6VXNlcjEyMzU4MTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1235814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alistair-broomhead", "html_url": "https://github.com/alistair-broomhead", "followers_url": "https://api.github.com/users/alistair-broomhead/followers", "following_url": "https://api.github.com/users/alistair-broomhead/following{/other_user}", "gists_url": "https://api.github.com/users/alistair-broomhead/gists{/gist_id}", "starred_url": "https://api.github.com/users/alistair-broomhead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alistair-broomhead/subscriptions", "organizations_url": "https://api.github.com/users/alistair-broomhead/orgs", "repos_url": "https://api.github.com/users/alistair-broomhead/repos", "events_url": "https://api.github.com/users/alistair-broomhead/events{/privacy}", "received_events_url": "https://api.github.com/users/alistair-broomhead/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-04T18:08:25Z", "updated_at": "2018-07-18T10:12:41Z", "closed_at": "2018-07-18T10:12:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is observed using a fresh pipenv with only dulwich==0.18.6 installed using python3.6 from pyenv on OSX\r\n\r\nThis is obviously not consistent with the way that git itself describes the repository state. Is this by design or a known issue? Are there any known work-arounds? If not I'm happy to give any spare cycles to have a dig into improving things, even if that's just by contributing docs.\r\n\r\n```\r\nbash-3.2$ > ls -l && \\\r\ngit status && \\\r\npython3 -c 'import dulwich.porcelain; print(dulwich.porcelain.status(\".\"))'\r\ntotal 16\r\n-rw-r--r--  1 al  staff   166  4 Jan 17:50 Pipfile\r\n-rw-r--r--  1 al  staff  1264  4 Jan 17:50 Pipfile.lock\r\n-rw-r--r--  1 al  staff     0  4 Jan 17:46 bar\r\n-rw-r--r--  1 al  staff     0  4 Jan 17:46 foo\r\nOn branch master\r\nChanges to be committed:\r\n  (use \"git reset HEAD <file>...\" to unstage)\r\n\r\n\tnew file:   bar\r\n\r\nUntracked files:\r\n  (use \"git add <file>...\" to include in what will be committed)\r\n\r\n\tPipfile\r\n\tPipfile.lock\r\n\r\nGitStatus(staged={'add': [b'bar'], 'delete': [], 'modify': []}, unstaged=[], untracked=['bar', 'foo', 'Pipfile', 'Pipfile.lock'])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/597", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/597/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/597/events", "html_url": "https://github.com/dulwich/dulwich/issues/597", "id": 284929854, "node_id": "MDU6SXNzdWUyODQ5Mjk4NTQ=", "number": 597, "title": "stat or numstat", "user": {"login": "markfink", "id": 33456, "node_id": "MDQ6VXNlcjMzNDU2", "avatar_url": "https://avatars0.githubusercontent.com/u/33456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markfink", "html_url": "https://github.com/markfink", "followers_url": "https://api.github.com/users/markfink/followers", "following_url": "https://api.github.com/users/markfink/following{/other_user}", "gists_url": "https://api.github.com/users/markfink/gists{/gist_id}", "starred_url": "https://api.github.com/users/markfink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markfink/subscriptions", "organizations_url": "https://api.github.com/users/markfink/orgs", "repos_url": "https://api.github.com/users/markfink/repos", "events_url": "https://api.github.com/users/markfink/events{/privacy}", "received_events_url": "https://api.github.com/users/markfink/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790716860, "node_id": "MDU6TGFiZWw3OTA3MTY4NjA=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/question", "name": "question", "color": "2ec1f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-28T14:52:02Z", "updated_at": "2018-01-08T16:52:06Z", "closed_at": "2018-01-08T16:51:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking for commit stats. like provided by `git log` or `git diff`. I can not find anything not even a example how to do that myself using dulwich.\r\n\r\nMy end goal is to get the line numbers per changed file for all modifications (add, delete, ...). Any tips would be appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/596", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/596/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/596/events", "html_url": "https://github.com/dulwich/dulwich/issues/596", "id": 284608759, "node_id": "MDU6SXNzdWUyODQ2MDg3NTk=", "number": 596, "title": "Get Active Branch", "user": {"login": "dufferzafar", "id": 1449512, "node_id": "MDQ6VXNlcjE0NDk1MTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1449512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dufferzafar", "html_url": "https://github.com/dufferzafar", "followers_url": "https://api.github.com/users/dufferzafar/followers", "following_url": "https://api.github.com/users/dufferzafar/following{/other_user}", "gists_url": "https://api.github.com/users/dufferzafar/gists{/gist_id}", "starred_url": "https://api.github.com/users/dufferzafar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dufferzafar/subscriptions", "organizations_url": "https://api.github.com/users/dufferzafar/orgs", "repos_url": "https://api.github.com/users/dufferzafar/repos", "events_url": "https://api.github.com/users/dufferzafar/events{/privacy}", "received_events_url": "https://api.github.com/users/dufferzafar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 790716860, "node_id": "MDU6TGFiZWw3OTA3MTY4NjA=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/question", "name": "question", "color": "2ec1f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-26T20:52:03Z", "updated_at": "2017-12-29T16:37:43Z", "closed_at": "2017-12-29T16:37:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is `dulwich.porcelain.branch_list()` but that will list all branches for a repo.\r\n\r\nHow does one get the active branch? (the one displayed when you run `git status`)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/595", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/595/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/595/events", "html_url": "https://github.com/dulwich/dulwich/issues/595", "id": 283036730, "node_id": "MDU6SXNzdWUyODMwMzY3MzA=", "number": 595, "title": "Constructing an SSH client from a full URL is a pain", "user": {"login": "detly", "id": 311239, "node_id": "MDQ6VXNlcjMxMTIzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/311239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detly", "html_url": "https://github.com/detly", "followers_url": "https://api.github.com/users/detly/followers", "following_url": "https://api.github.com/users/detly/following{/other_user}", "gists_url": "https://api.github.com/users/detly/gists{/gist_id}", "starred_url": "https://api.github.com/users/detly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detly/subscriptions", "organizations_url": "https://api.github.com/users/detly/orgs", "repos_url": "https://api.github.com/users/detly/repos", "events_url": "https://api.github.com/users/detly/events{/privacy}", "received_events_url": "https://api.github.com/users/detly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-12-18T22:06:39Z", "updated_at": "2017-12-21T06:20:44Z", "closed_at": "2017-12-21T06:20:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say I have an SSH URL from Gitlab's API like: `gitlab@gitlab.something.net:detly/some-project.git` (accessed via the `Gitlab.getproject()` dict result with key `ssh_url_to_repo`). It's not trivial to get this into a a form that Dulwich will accept.\r\n\r\nMy first attempt was:\r\n\r\n```python\r\ndulwich.client.SSHGitClient.from_parsedurl(\r\n        urllib.parse.urlparse('ssh://{:s}'.format(gitlab_ssh_url))\r\n    )\r\n```\r\n\r\nBut this fails because `urlparse()` thinks `detly` is the port:\r\n\r\n```text\r\n(Pdb) urllib.parse.urlparse('ssh://{:s}'.format(gitlab_ssh_url)).port\r\n*** ValueError: invalid literal for int() with base 10: 'detly'\r\n```\r\n\r\nAt this point I think I have to parse it myself, or at least modify the parse output. There is also the package `git-url-parse` but I haven't tried it yet.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/594", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/594/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/594/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/594/events", "html_url": "https://github.com/dulwich/dulwich/issues/594", "id": 281818035, "node_id": "MDU6SXNzdWUyODE4MTgwMzU=", "number": 594, "title": "socket timeout when i use url from config", "user": {"login": "dominiquevocat", "id": 4181587, "node_id": "MDQ6VXNlcjQxODE1ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4181587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dominiquevocat", "html_url": "https://github.com/dominiquevocat", "followers_url": "https://api.github.com/users/dominiquevocat/followers", "following_url": "https://api.github.com/users/dominiquevocat/following{/other_user}", "gists_url": "https://api.github.com/users/dominiquevocat/gists{/gist_id}", "starred_url": "https://api.github.com/users/dominiquevocat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dominiquevocat/subscriptions", "organizations_url": "https://api.github.com/users/dominiquevocat/orgs", "repos_url": "https://api.github.com/users/dominiquevocat/repos", "events_url": "https://api.github.com/users/dominiquevocat/events{/privacy}", "received_events_url": "https://api.github.com/users/dominiquevocat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-13T16:44:11Z", "updated_at": "2020-08-20T20:19:26Z", "closed_at": "2018-01-19T11:47:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some strange issue.\r\n\r\nusing the dulwich.py command line tool as a example but i have the same issue in my own stuff:\r\n\r\nif i modify the cmd_push to read the remote named \"x\" from .git/config and use push with these parameters i get a timeout\r\n\r\n(repoPath is set in the main block)\r\n\r\noriginal:\r\n```\r\nclass cmd_push(Command):\r\n\r\n    def run(self, args):\r\n        parser = optparse.OptionParser()\r\n        options, args = parser.parse_args(args)\r\n        if len(args) < 2:\r\n            print(\"Usage: dulwich push TO-LOCATION REFSPEC..\")\r\n            sys.exit(1)\r\n        to_location = args[0]\r\n        refspecs = args[1:]\r\n        porcelain.push('.', to_location, refspecs)\r\n```\r\n\r\nmodified to read a named remote and retrieve the url as string (identical to a working string passed as command line parameter\r\n\r\n```\r\nclass cmd_push(Command):\r\n\r\n    def run(self, args):\r\n        import socket #set shorter timeout while testing\r\n        socket.setdefaulttimeout(15)\r\n        \r\n        parser = optparse.OptionParser()\r\n        options, args = parser.parse_args(args)\r\n        if len(args) < 2:\r\n            print(\"Usage: dulwich push TO-LOCATION REFSPEC..\")\r\n            sys.exit(1)\r\n        to_location = args[0]\r\n        try:\r\n            repo = Repo(repoPath)\r\n            config = repo.get_config()\r\n            remote = config.get((\"remote\", to_location), \"url\")\r\n            print >> sys.stderr, to_location\r\n            print >> sys.stderr, type(to_location)\r\n        except:\r\n            print >> sys.stderr, \"we don't take a config from the .git/config but rather the passed string\"\r\n            remote = to_location\r\n            pass #we just keep to_location\r\n        refspecs = args[1:] #usualy master\r\n        porcelain.push(repoPath, remote, refspecs)\r\n```\r\n\r\nthe first one works the later one uses the same url as a string for remote but ends in a timeout and there is never ever any network activity\r\n\r\n```\r\n12-13-2017 17:38:09.724 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':  we don't take a config from the .git/config but rather the passed string\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':  Traceback (most recent call last):\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':    File \"/opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py\", line 630, in <module>\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':      cmd_kls().run(sys.argv[2:])\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':    File \"/opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py\", line 506, in run\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':      porcelain.push(repoPath, remote, refspecs)\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':    File \"/opt/splunk/etc/apps/SA-dulwich/bin/dulwich/porcelain.py\", line 781, in push\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':      progress=errstream.write)\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':    File \"/opt/splunk/etc/apps/SA-dulwich/bin/dulwich/client.py\", line 1358, in send_pack\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':      b\"git-receive-pack\", url)\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':    File \"/opt/splunk/etc/apps/SA-dulwich/bin/dulwich/client.py\", line 1284, in _discover_references\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':      resp, read = self._http_request(url, headers, allow_compression=True)\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':    File \"/opt/splunk/etc/apps/SA-dulwich/bin/dulwich/client.py\", line 1263, in _http_request\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':      resp = self.opener.open(req)\r\n12-13-2017 17:38:24.755 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':    File \"/opt/splunk/lib/python2.7/urllib2.py\", line 429, in open\r\n12-13-2017 17:38:24.757 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':      response = self._open(req, data)\r\n12-13-2017 17:38:24.757 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':    File \"/opt/splunk/lib/python2.7/urllib2.py\", line 447, in _open\r\n12-13-2017 17:38:24.758 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':      '_open', req)\r\n12-13-2017 17:38:24.758 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':    File \"/opt/splunk/lib/python2.7/urllib2.py\", line 407, in _call_chain\r\n12-13-2017 17:38:24.758 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':      result = func(*args)\r\n12-13-2017 17:38:24.758 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':    File \"/opt/splunk/lib/python2.7/urllib2.py\", line 1241, in https_open\r\n12-13-2017 17:38:24.758 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':      context=self._context)\r\n12-13-2017 17:38:24.758 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':    File \"/opt/splunk/lib/python2.7/urllib2.py\", line 1198, in do_open\r\n12-13-2017 17:38:24.758 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':      raise URLError(err)\r\n12-13-2017 17:38:24.758 ERROR ScriptRunner - stderr from '/opt/splunk/bin/python /opt/splunk/etc/apps/SA-dulwich/bin/dulwich.py push https://chti-splunk:PaSSw0rd@git.someWhere/scm/splunk/sa-dulwich.git master':  urllib2.URLError: <urlopen error ('_ssl.c:660: The handshake operation timed out',)>\r\n```\r\n\r\nhuh?\r\n\r\nalso, it would be awfully nice if porcelain would to excatly this: get the remote by name from .git/config\r\nalso i would like to supply user and password during runtime reading it myself from some secure storage... and not have it in the url\r\n\r\ndulwich is __version__ = (0, 18, 7)\r\npython is 2.7.something", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/593", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/593/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/593/events", "html_url": "https://github.com/dulwich/dulwich/issues/593", "id": 279984866, "node_id": "MDU6SXNzdWUyNzk5ODQ4NjY=", "number": 593, "title": "allow depending on \"dulwich[pure]\" to disable C extension build", "user": {"login": "jelmer", "id": 49032, "node_id": "MDQ6VXNlcjQ5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/49032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelmer", "html_url": "https://github.com/jelmer", "followers_url": "https://api.github.com/users/jelmer/followers", "following_url": "https://api.github.com/users/jelmer/following{/other_user}", "gists_url": "https://api.github.com/users/jelmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelmer/subscriptions", "organizations_url": "https://api.github.com/users/jelmer/orgs", "repos_url": "https://api.github.com/users/jelmer/repos", "events_url": "https://api.github.com/users/jelmer/events{/privacy}", "received_events_url": "https://api.github.com/users/jelmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170216, "node_id": "MDU6TGFiZWwxNDgxNzAyMTY=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/enhancement", "name": "enhancement", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-07T03:07:20Z", "updated_at": "2020-06-01T20:52:24Z", "closed_at": "2020-06-01T20:52:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There isn't an easy way to do this at the moment; you can only do this\r\nusing e.g. requirements.txt.\r\n\r\nFor setup.py, ideally we'd want to support something like\r\n\"dulwich[pure]\" in your setup.py's install_requires, but I haven't\r\nworked out the right magic to make that work in dulwich' setup.py yet. See\r\nhttps://setuptools.readthedocs.io/en/latest/setuptools.html#id14 for\r\nbackground on extras.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/592", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/592/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/592/events", "html_url": "https://github.com/dulwich/dulwich/issues/592", "id": 279167090, "node_id": "MDU6SXNzdWUyNzkxNjcwOTA=", "number": 592, "title": "cloning a github repo without '.git' at the end fails", "user": {"login": "MattSable", "id": 1229006, "node_id": "MDQ6VXNlcjEyMjkwMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1229006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattSable", "html_url": "https://github.com/MattSable", "followers_url": "https://api.github.com/users/MattSable/followers", "following_url": "https://api.github.com/users/MattSable/following{/other_user}", "gists_url": "https://api.github.com/users/MattSable/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattSable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattSable/subscriptions", "organizations_url": "https://api.github.com/users/MattSable/orgs", "repos_url": "https://api.github.com/users/MattSable/repos", "events_url": "https://api.github.com/users/MattSable/events{/privacy}", "received_events_url": "https://api.github.com/users/MattSable/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 423733187, "node_id": "MDU6TGFiZWw0MjM3MzMxODc=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/moreinfo", "name": "moreinfo", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-04T22:03:27Z", "updated_at": "2017-12-07T03:42:11Z", "closed_at": "2017-12-07T03:42:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following fails\r\n\r\n```\r\nfrom dulwich import porcelain\r\nporcelain.clone(\"https://github.com/jelmer/dulwich\", \"./foo\")\r\n```\r\n\r\nwith error:\r\n```\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\dulwich\\client.py\", line 1264, in _http_request\r\n    raise NotGitRepository()\r\ndulwich.errors.NotGitRepository\r\n```\r\n\r\nIt works if you add .git at the end like:  `https://github.com/jelmer/dulwich.git`\r\n\r\n\r\nTrying to do `git clone https://github.com/jelmer/dulwich ./foo` works fine though, so i'd expect porcelain to handle it as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/590", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/590/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/590/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/590/events", "html_url": "https://github.com/dulwich/dulwich/issues/590", "id": 278676235, "node_id": "MDU6SXNzdWUyNzg2NzYyMzU=", "number": 590, "title": "porcelain.clone raises DeprecationWarning", "user": {"login": "samuelharmer", "id": 3763248, "node_id": "MDQ6VXNlcjM3NjMyNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3763248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelharmer", "html_url": "https://github.com/samuelharmer", "followers_url": "https://api.github.com/users/samuelharmer/followers", "following_url": "https://api.github.com/users/samuelharmer/following{/other_user}", "gists_url": "https://api.github.com/users/samuelharmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelharmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelharmer/subscriptions", "organizations_url": "https://api.github.com/users/samuelharmer/orgs", "repos_url": "https://api.github.com/users/samuelharmer/repos", "events_url": "https://api.github.com/users/samuelharmer/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelharmer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-02T11:18:27Z", "updated_at": "2017-12-29T16:37:55Z", "closed_at": "2017-12-02T15:32:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "[`porcelain.clone`](https://github.com/jelmer/dulwich/blob/4ca089c69ef9e5d34d043fec453526946d491bf4/dulwich/porcelain.py#L268) raises two `DeprecationWarning`s when called. They stem from `remote_refs.items` on lines [313](https://github.com/jelmer/dulwich/blob/4ca089c69ef9e5d34d043fec453526946d491bf4/dulwich/porcelain.py#L313) and [317](https://github.com/jelmer/dulwich/blob/4ca089c69ef9e5d34d043fec453526946d491bf4/dulwich/porcelain.py#L317).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/588", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/588/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/588/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/588/events", "html_url": "https://github.com/dulwich/dulwich/issues/588", "id": 277189989, "node_id": "MDU6SXNzdWUyNzcxODk5ODk=", "number": 588, "title": "porcelain reset doesn't work", "user": {"login": "MattSable", "id": 1229006, "node_id": "MDQ6VXNlcjEyMjkwMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1229006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattSable", "html_url": "https://github.com/MattSable", "followers_url": "https://api.github.com/users/MattSable/followers", "following_url": "https://api.github.com/users/MattSable/following{/other_user}", "gists_url": "https://api.github.com/users/MattSable/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattSable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattSable/subscriptions", "organizations_url": "https://api.github.com/users/MattSable/orgs", "repos_url": "https://api.github.com/users/MattSable/repos", "events_url": "https://api.github.com/users/MattSable/events{/privacy}", "received_events_url": "https://api.github.com/users/MattSable/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-11-27T22:20:54Z", "updated_at": "2017-12-07T15:25:09Z", "closed_at": "2017-12-07T15:25:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ndirectory = \"./test_dir\"\r\n\r\nfile_path_1 = os.path.join(directory, \"text.txt\")\r\nr = porcelain.init(directory)\r\nwith open(file_path_1, \"w\") as fo:\r\n    fo.write(\"Foo\")\r\nporcelain.add(r, [file_path_1])\r\ncommit = porcelain.commit(r, b\"foo!\")\r\n\r\n\r\nfile_path_2 = os.path.join(directory, \"text2.txt\")\r\nwith open(file_path_2, \"w\") as fo:\r\n    fo.write(\"Bar!\")\r\nporcelain.add(r, [file_path_2])\r\nporcelain.commit(r, b\"bar!\")\r\n\r\nporcelain.reset(r, \"hard\", commit)\r\n\r\n```\r\n\r\nThe reset statement doesn't actually seem to do anything.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/586", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/586/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/586/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/586/events", "html_url": "https://github.com/dulwich/dulwich/issues/586", "id": 274912773, "node_id": "MDU6SXNzdWUyNzQ5MTI3NzM=", "number": 586, "title": "\"Broken pipe\" pushing packs over 128 kB to GitHub", "user": {"login": "dandersson", "id": 3901008, "node_id": "MDQ6VXNlcjM5MDEwMDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3901008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dandersson", "html_url": "https://github.com/dandersson", "followers_url": "https://api.github.com/users/dandersson/followers", "following_url": "https://api.github.com/users/dandersson/following{/other_user}", "gists_url": "https://api.github.com/users/dandersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dandersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dandersson/subscriptions", "organizations_url": "https://api.github.com/users/dandersson/orgs", "repos_url": "https://api.github.com/users/dandersson/repos", "events_url": "https://api.github.com/users/dandersson/events{/privacy}", "received_events_url": "https://api.github.com/users/dandersson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 148170201, "node_id": "MDU6TGFiZWwxNDgxNzAyMDE=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-17T16:02:36Z", "updated_at": "2018-02-06T22:53:41Z", "closed_at": "2018-02-01T21:41:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Happens with both Python 2.7.14 and Python 3.6.3 (Debian Sid)\r\n* `dulwich` 0.18.6 (with C extensions)\r\n\r\nUsing `dulwich`, I started noticing issues pushing files above a certain size to a local GitLab instance using Python 2.7.13 on Windows 7, where I initially suspected the corporate proxy was interfering since I could not seem to push packs larger than ~256 kB. However, pushing to GitHub from my home computer (Debian Sid) seems to indicate similar problems, now for a max size of ~128 kB. In all cases, issuing `git push` with the standard Git binary in the repository works without issue.\r\n\r\nIn practice I run:\r\n\r\n```python\r\ndulwich.porcelain.push('/path/to/demo-github', 'https://dandersson:api-token@github.com/dandersson/demo-github.git', refspecs=b'proxy-test')\r\n```\r\n\r\n(see <https://github.com/dandersson/dulwich-test-23> for the full test script).\r\n\r\nWhen pushing a commit in the `proxy-test` branch with a single binary file of size 1 MB to GitHub, I get:\r\n\r\n    DEBUG:__main__:CLI args: Namespace(branch='proxy-test', config=<_io.TextIOWrapper name='.credentials' mode='r' encoding='UTF-8'>, debug=True, repository='/home/daniel/src/demo-github')\r\n    DEBUG:__main__:Local branches:  {b'git-logs', b'proxy-test', b'master'}\r\n    DEBUG:__main__:Remote branches: {b'origin/git-logs', b'origin/HEAD', b'origin/master', b'origin/proxy-test'}\r\n    DEBUG:__main__:{b'HEAD': b'89ccc9fe76e83dbe423745f77e47abe7d1b3b9f5', b'refs/heads/git-logs': b'afe0b4e2c6e01162eee2f72ee5f5f030d47c53df', b'refs/heads/master': b'89ccc9fe76e83dbe423745f77e47abe7d1b3b9f5', b'refs/heads/proxy-test': b'271900c378411bef9779f01f4a2976c0ec2625f2'}\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib/python3.6/urllib/request.py\", line 1318, in do_open\r\n        encode_chunked=req.has_header('Transfer-encoding'))\r\n      File \"/usr/lib/python3.6/http/client.py\", line 1239, in request\r\n        self._send_request(method, url, body, headers, encode_chunked)\r\n      File \"/usr/lib/python3.6/http/client.py\", line 1285, in _send_request\r\n        self.endheaders(body, encode_chunked=encode_chunked)\r\n      File \"/usr/lib/python3.6/http/client.py\", line 1234, in endheaders\r\n        self._send_output(message_body, encode_chunked=encode_chunked)\r\n      File \"/usr/lib/python3.6/http/client.py\", line 1065, in _send_output\r\n        self.send(chunk)\r\n      File \"/usr/lib/python3.6/http/client.py\", line 986, in send\r\n        self.sock.sendall(data)\r\n      File \"/usr/lib/python3.6/ssl.py\", line 972, in sendall\r\n        v = self.send(byte_view[count:])\r\n      File \"/usr/lib/python3.6/ssl.py\", line 941, in send\r\n        return self._sslobj.write(data)\r\n      File \"/usr/lib/python3.6/ssl.py\", line 642, in write\r\n        return self._sslobj.write(data)\r\n    BrokenPipeError: [Errno 32] Broken pipe\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"push.py\", line 151, in <module>\r\n        main(sys.argv)\r\n      File \"push.py\", line 147, in main\r\n        push_branch(args.repository, url_with_credentials, branch)\r\n      File \"push.py\", line 98, in push_branch\r\n        dulwich.porcelain.push(repository, url, refspecs=branch)\r\n      File \"/home/daniel/src/dulwich-test-23/env3/lib/python3.6/site-packages/dulwich/porcelain.py\", line 781, in push\r\n        progress=errstream.write)\r\n      File \"/home/daniel/src/dulwich-test-23/env3/lib/python3.6/site-packages/dulwich/client.py\", line 1377, in send_pack\r\n        data=req_data.getvalue())\r\n      File \"/home/daniel/src/dulwich-test-23/env3/lib/python3.6/site-packages/dulwich/client.py\", line 1321, in _smart_request\r\n        resp, read = self._http_request(url, headers, data)\r\n      File \"/home/daniel/src/dulwich-test-23/env3/lib/python3.6/site-packages/dulwich/client.py\", line 1261, in _http_request\r\n        resp = self.opener.open(req)\r\n      File \"/usr/lib/python3.6/urllib/request.py\", line 526, in open\r\n        response = self._open(req, data)\r\n      File \"/usr/lib/python3.6/urllib/request.py\", line 544, in _open\r\n        '_open', req)\r\n      File \"/usr/lib/python3.6/urllib/request.py\", line 504, in _call_chain\r\n        result = func(*args)\r\n      File \"/usr/lib/python3.6/urllib/request.py\", line 1361, in https_open\r\n        context=self._context, check_hostname=self._check_hostname)\r\n      File \"/usr/lib/python3.6/urllib/request.py\", line 1320, in do_open\r\n        raise URLError(err)\r\n    urllib.error.URLError: <urlopen error [Errno 32] Broken pipe>\r\n\r\nTruncating the file to e.g. 100 kB (typically something less than 128 kB), amending the commit and rerunning the script immediately I instead get:\r\n\r\n    DEBUG:__main__:CLI args: Namespace(branch='proxy-test', config=<_io.TextIOWrapper name='.credentials' mode='r' encoding='UTF-8'>, debug=True, repository='/home/daniel/src/demo-github')\r\n    DEBUG:__main__:Local branches:  {b'master', b'proxy-test', b'git-logs'}\r\n    DEBUG:__main__:Remote branches: {b'origin/git-logs', b'origin/proxy-test', b'origin/HEAD', b'origin/master'}\r\n    DEBUG:__main__:{b'HEAD': b'89ccc9fe76e83dbe423745f77e47abe7d1b3b9f5', b'refs/heads/git-logs': b'afe0b4e2c6e01162eee2f72ee5f5f030d47c53df', b'refs/heads/master': b'89ccc9fe76e83dbe423745f77e47abe7d1b3b9f5', b'refs/heads/proxy-test': b'0dd98d5d983a120a9da12c557a93f68cb04e9443'}\r\n    Push to https://github.com/dandersson/demo-github.git successful.\r\n\r\nThe only things that seems to differ is the size of the file in the ref I am trying to push. Note that the file should already be compressed to avoid the GZipped content transfer to affect sizes much.\r\n\r\nA small variation of this behaviour I have seen when trying to push a \"too large\" pack is that I sometimes instead of \"Broken pipe\" get a hanging request for a few minutes, ending in \"Connection timed out\" unless I `Ctrl`+`C` my way out of it. The output is then like:\r\n\r\n    DEBUG:__main__:CLI args: Namespace(branch='proxy-test', config=<open file '.credentials', mode 'r' at 0xb7332a18>, debug=True, repository='/home/daniel/src/demo-github')\r\n    DEBUG:__main__:Local branches:  set(['master', 'proxy-test', 'git-logs'])\r\n    DEBUG:__main__:Remote branches: set(['origin/proxy-test', 'origin/master', 'origin/HEAD', 'origin/git-logs'])\r\n    DEBUG:__main__:{'HEAD': '89ccc9fe76e83dbe423745f77e47abe7d1b3b9f5', 'refs/heads/git-logs': 'afe0b4e2c6e01162eee2f72ee5f5f030d47c53df', 'refs/heads/master': '89ccc9fe76e83dbe423745f77e47abe7d1b3b9f5', 'refs/heads/proxy-test': '0dd98d5d983a120a9da12c557a93f68cb04e9443'}\r\n    ^C^CTraceback (most recent call last):\r\n      File \"push.py\", line 151, in <module>\r\n        main(sys.argv)\r\n      File \"push.py\", line 147, in main\r\n        push_branch(args.repository, url_with_credentials, branch)\r\n      File \"push.py\", line 98, in push_branch\r\n        dulwich.porcelain.push(repository, url, refspecs=branch)\r\n      File \"/home/daniel/src/dulwich-test-23/env/local/lib/python2.7/site-packages/dulwich/porcelain.py\", line 781, in push\r\n        progress=errstream.write)\r\n      File \"/home/daniel/src/dulwich-test-23/env/local/lib/python2.7/site-packages/dulwich/client.py\", line 1377, in send_pack\r\n        data=req_data.getvalue())\r\n      File \"/home/daniel/src/dulwich-test-23/env/local/lib/python2.7/site-packages/dulwich/client.py\", line 1321, in _smart_request\r\n        resp, read = self._http_request(url, headers, data)\r\n      File \"/home/daniel/src/dulwich-test-23/env/local/lib/python2.7/site-packages/dulwich/client.py\", line 1261, in _http_request\r\n        resp = self.opener.open(req)\r\n      File \"/usr/lib/python2.7/urllib2.py\", line 429, in open\r\n        response = self._open(req, data)\r\n      File \"/usr/lib/python2.7/urllib2.py\", line 447, in _open\r\n        '_open', req)\r\n      File \"/usr/lib/python2.7/urllib2.py\", line 407, in _call_chain\r\n        result = func(*args)\r\n      File \"/usr/lib/python2.7/urllib2.py\", line 1241, in https_open\r\n        context=self._context)\r\n      File \"/usr/lib/python2.7/urllib2.py\", line 1195, in do_open\r\n        h.request(req.get_method(), req.get_selector(), req.data, headers)\r\n      File \"/usr/lib/python2.7/httplib.py\", line 1042, in request\r\n        self._send_request(method, url, body, headers)\r\n      File \"/usr/lib/python2.7/httplib.py\", line 1082, in _send_request\r\n        self.endheaders(body)\r\n      File \"/usr/lib/python2.7/httplib.py\", line 1038, in endheaders\r\n        self._send_output(message_body)\r\n      File \"/usr/lib/python2.7/httplib.py\", line 882, in _send_output\r\n        self.send(msg)\r\n      File \"/usr/lib/python2.7/httplib.py\", line 858, in send\r\n        self.sock.sendall(data)\r\n      File \"/usr/lib/python2.7/ssl.py\", line 753, in sendall\r\n        v = self.send(data[count:])\r\n      File \"/usr/lib/python2.7/ssl.py\", line 719, in send\r\n        v = self._sslobj.write(data)\r\n    KeyboardInterrupt\r\n\r\nOr with Python 3:\r\n\r\n    DEBUG:__main__:Local branches:  {b'proxy-test', b'git-logs', b'master'}\r\n    DEBUG:__main__:Remote branches: {b'origin/master', b'origin/proxy-test', b'origin/git-logs', b'origin/HEAD'}\r\n    DEBUG:__main__:{b'HEAD': b'89ccc9fe76e83dbe423745f77e47abe7d1b3b9f5', b'refs/heads/git-logs': b'afe0b4e2c6e01162eee2f72ee5f5f030d47c53df', b'refs/heads/master': b'89ccc9fe76e83dbe423745f77e47abe7d1b3b9f5', b'refs/heads/proxy-test': b'0dd98d5d983a120a9da12c557a93f68cb04e9443'}\r\n    ^C^CTraceback (most recent call last):\r\n      File \"push.py\", line 151, in <module>\r\n        main(sys.argv)\r\n      File \"push.py\", line 147, in main\r\n        push_branch(args.repository, url_with_credentials, branch)\r\n      File \"push.py\", line 98, in push_branch\r\n        dulwich.porcelain.push(repository, url, refspecs=branch)\r\n      File \"/home/daniel/src/dulwich-test-23/env3/lib/python3.6/site-packages/dulwich/porcelain.py\", line 781, in push\r\n        progress=errstream.write)\r\n      File \"/home/daniel/src/dulwich-test-23/env3/lib/python3.6/site-packages/dulwich/client.py\", line 1377, in send_pack\r\n        data=req_data.getvalue())\r\n      File \"/home/daniel/src/dulwich-test-23/env3/lib/python3.6/site-packages/dulwich/client.py\", line 1321, in _smart_request\r\n        resp, read = self._http_request(url, headers, data)\r\n      File \"/home/daniel/src/dulwich-test-23/env3/lib/python3.6/site-packages/dulwich/client.py\", line 1261, in _http_request\r\n        resp = self.opener.open(req)\r\n      File \"/usr/lib/python3.6/urllib/request.py\", line 526, in open\r\n        response = self._open(req, data)\r\n      File \"/usr/lib/python3.6/urllib/request.py\", line 544, in _open\r\n        '_open', req)\r\n      File \"/usr/lib/python3.6/urllib/request.py\", line 504, in _call_chain\r\n        result = func(*args)\r\n      File \"/usr/lib/python3.6/urllib/request.py\", line 1361, in https_open\r\n        context=self._context, check_hostname=self._check_hostname)\r\n      File \"/usr/lib/python3.6/urllib/request.py\", line 1318, in do_open\r\n        encode_chunked=req.has_header('Transfer-encoding'))\r\n      File \"/usr/lib/python3.6/http/client.py\", line 1239, in request\r\n        self._send_request(method, url, body, headers, encode_chunked)\r\n      File \"/usr/lib/python3.6/http/client.py\", line 1285, in _send_request\r\n        self.endheaders(body, encode_chunked=encode_chunked)\r\n      File \"/usr/lib/python3.6/http/client.py\", line 1234, in endheaders\r\n        self._send_output(message_body, encode_chunked=encode_chunked)\r\n      File \"/usr/lib/python3.6/http/client.py\", line 1065, in _send_output\r\n        self.send(chunk)\r\n      File \"/usr/lib/python3.6/http/client.py\", line 986, in send\r\n        self.sock.sendall(data)\r\n      File \"/usr/lib/python3.6/ssl.py\", line 972, in sendall\r\n        v = self.send(byte_view[count:])\r\n      File \"/usr/lib/python3.6/ssl.py\", line 941, in send\r\n        return self._sslobj.write(data)\r\n      File \"/usr/lib/python3.6/ssl.py\", line 642, in write\r\n        return self._sslobj.write(data)\r\n    KeyboardInterrupt\r\n\r\nI ran Git with `GIT_TRACE_CURL` set to get debug output from Git, which always manages to push successfully. The logs are at <https://github.com/dandersson/demo-github/tree/git-logs> for some different file sizes.\r\n\r\nA guess would be something `side-band-64k` related, but then I cannot see why it would differ at about 128 kB and not 64 kB of transfer size if that was the issue.\r\n\r\n* Anyone knows what is happening around the \"magic\" 128 kB/256 kB thresholds?\r\n* Is it generally reproducible?\r\n* Are there any more logs I can provide that might be helpful?\r\n\r\nI am really hunting for the local GitLab issue around 256 kB, but I am guessing that the issues are very similar.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dulwich/dulwich/issues/585", "repository_url": "https://api.github.com/repos/dulwich/dulwich", "labels_url": "https://api.github.com/repos/dulwich/dulwich/issues/585/labels{/name}", "comments_url": "https://api.github.com/repos/dulwich/dulwich/issues/585/comments", "events_url": "https://api.github.com/repos/dulwich/dulwich/issues/585/events", "html_url": "https://github.com/dulwich/dulwich/issues/585", "id": 274698201, "node_id": "MDU6SXNzdWUyNzQ2OTgyMDE=", "number": 585, "title": ".git directory should be hidden after cloning", "user": {"login": "MattSable", "id": 1229006, "node_id": "MDQ6VXNlcjEyMjkwMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1229006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattSable", "html_url": "https://github.com/MattSable", "followers_url": "https://api.github.com/users/MattSable/followers", "following_url": "https://api.github.com/users/MattSable/following{/other_user}", "gists_url": "https://api.github.com/users/MattSable/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattSable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattSable/subscriptions", "organizations_url": "https://api.github.com/users/MattSable/orgs", "repos_url": "https://api.github.com/users/MattSable/repos", "events_url": "https://api.github.com/users/MattSable/events{/privacy}", "received_events_url": "https://api.github.com/users/MattSable/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 885361378, "node_id": "MDU6TGFiZWw4ODUzNjEzNzg=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/help%20wanted", "name": "help wanted", "color": "d33b96", "default": true, "description": ""}, {"id": 148170696, "node_id": "MDU6TGFiZWwxNDgxNzA2OTY=", "url": "https://api.github.com/repos/dulwich/dulwich/labels/windows", "name": "windows", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-16T23:17:52Z", "updated_at": "2019-06-16T15:27:37Z", "closed_at": "2019-06-16T15:27:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "After you clone a repo, the .git folder is not hidden. This is different than the normal\r\n\r\n`\"git clone\" experience`", "performed_via_github_app": null, "score": 1.0}]}