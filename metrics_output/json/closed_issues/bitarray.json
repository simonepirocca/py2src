{"total_count": 56, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/99", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/99/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/99/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/99", "id": 679625175, "node_id": "MDU6SXNzdWU2Nzk2MjUxNzU=", "number": 99, "title": "1.5.0+ doesn't work with PyPy", "user": {"login": "nehaljwani", "id": 1779189, "node_id": "MDQ6VXNlcjE3NzkxODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1779189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nehaljwani", "html_url": "https://github.com/nehaljwani", "followers_url": "https://api.github.com/users/nehaljwani/followers", "following_url": "https://api.github.com/users/nehaljwani/following{/other_user}", "gists_url": "https://api.github.com/users/nehaljwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/nehaljwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nehaljwani/subscriptions", "organizations_url": "https://api.github.com/users/nehaljwani/orgs", "repos_url": "https://api.github.com/users/nehaljwani/repos", "events_url": "https://api.github.com/users/nehaljwani/events{/privacy}", "received_events_url": "https://api.github.com/users/nehaljwani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-15T18:52:36Z", "updated_at": "2020-08-17T00:36:29Z", "closed_at": "2020-08-17T00:36:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n(pypy36) ~/repos \u276f\u276f\u276f pypy3 -c 'from bitarray import bitarray; 1 * bitarray(1)'\r\ncpyext: missing slot wrapper wrap_indexargfunc\r\nRPython traceback:\r\n  File \"pypy_interpreter.c\", line 21880, in BuiltinCode_funcrun_obj\r\n  File \"pypy_module_cpyext_6.c\", line 15931, in wrap_indexargfunc_call\r\nFatal RPython error: NotImplementedError\r\n[1]    2207558 abort (core dumped)  pypy3 -c 'from bitarray import bitarray; 1 * bitarray(1)'\r\n```\r\n\r\nPyPy builds stop working after https://github.com/ilanschnell/bitarray/commit/6d1ea5cfc2213068a9109ef3b2c585e6272a1d8a\r\n\r\nSeems likely to be a PyPy problem, so I have reported it upstream as well: https://foss.heptapod.net/pypy/pypy/-/issues/3281", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/98", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/98/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/98/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/98", "id": 676395091, "node_id": "MDU6SXNzdWU2NzYzOTUwOTE=", "number": 98, "title": "Pickled arrays: 'bitarray.bitarray' object has no attribute '__dict__'", "user": {"login": "piskvorky", "id": 610412, "node_id": "MDQ6VXNlcjYxMDQxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/610412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piskvorky", "html_url": "https://github.com/piskvorky", "followers_url": "https://api.github.com/users/piskvorky/followers", "following_url": "https://api.github.com/users/piskvorky/following{/other_user}", "gists_url": "https://api.github.com/users/piskvorky/gists{/gist_id}", "starred_url": "https://api.github.com/users/piskvorky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piskvorky/subscriptions", "organizations_url": "https://api.github.com/users/piskvorky/orgs", "repos_url": "https://api.github.com/users/piskvorky/repos", "events_url": "https://api.github.com/users/piskvorky/events{/privacy}", "received_events_url": "https://api.github.com/users/piskvorky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-10T20:25:34Z", "updated_at": "2020-08-11T07:02:10Z", "closed_at": "2020-08-11T06:33:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Bloom filters created with [pybloom-live](https://github.com/joseph-fox/python-bloomfilter) use bitarray internally.\r\n\r\nRecently, loading these pickled bloom filters started failing with:\r\n\r\n```python\r\nPython 3.8.2 (default, Jul 16 2020, 14:00:26)\r\n[GCC 9.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n\r\n>>> import pickle\r\n>>> x = pickle.load(open('example.pkl', 'rb'))\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'bitarray.bitarray' object has no attribute '__dict__'\r\n```\r\n\r\nWe tracked the problem down to `bitarray==1.4.2` (loading works) vs `bitarray==1.5.1` (fails).\r\n\r\nIs this pickle incompatibility:\r\n* **expected** (in which cases pybloom-live should maybe update its requirements to `bitarray<1.5.0`)?\r\n* **unexpected** (a bug in bitarray)?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/96", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/96/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/96/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/96", "id": 645922551, "node_id": "MDU6SXNzdWU2NDU5MjI1NTE=", "number": 96, "title": "On Ubuntu 20.04LTS - libffi issue", "user": {"login": "pythonmobile", "id": 1297754, "node_id": "MDQ6VXNlcjEyOTc3NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1297754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pythonmobile", "html_url": "https://github.com/pythonmobile", "followers_url": "https://api.github.com/users/pythonmobile/followers", "following_url": "https://api.github.com/users/pythonmobile/following{/other_user}", "gists_url": "https://api.github.com/users/pythonmobile/gists{/gist_id}", "starred_url": "https://api.github.com/users/pythonmobile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pythonmobile/subscriptions", "organizations_url": "https://api.github.com/users/pythonmobile/orgs", "repos_url": "https://api.github.com/users/pythonmobile/repos", "events_url": "https://api.github.com/users/pythonmobile/events{/privacy}", "received_events_url": "https://api.github.com/users/pythonmobile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-26T00:09:49Z", "updated_at": "2020-06-28T07:43:23Z", "closed_at": "2020-06-28T07:43:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "from _ctypes import Union, Structure, Array\r\n    ImportError: libffi.so.6: cannot open shared object file: No such file or directory\r\n\r\napt install libffi-dev does not fix the issue. (Since it install so.7).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/95", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/95/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/95/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/95", "id": 615064146, "node_id": "MDU6SXNzdWU2MTUwNjQxNDY=", "number": 95, "title": "how to do bit operations on lists of bitarrays?", "user": {"login": "rf987", "id": 22036990, "node_id": "MDQ6VXNlcjIyMDM2OTkw", "avatar_url": "https://avatars3.githubusercontent.com/u/22036990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rf987", "html_url": "https://github.com/rf987", "followers_url": "https://api.github.com/users/rf987/followers", "following_url": "https://api.github.com/users/rf987/following{/other_user}", "gists_url": "https://api.github.com/users/rf987/gists{/gist_id}", "starred_url": "https://api.github.com/users/rf987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rf987/subscriptions", "organizations_url": "https://api.github.com/users/rf987/orgs", "repos_url": "https://api.github.com/users/rf987/repos", "events_url": "https://api.github.com/users/rf987/events{/privacy}", "received_events_url": "https://api.github.com/users/rf987/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-09T01:41:32Z", "updated_at": "2020-05-14T03:22:33Z", "closed_at": "2020-05-14T03:22:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for the great library.\r\n\r\nI know I can peform a bitwise AND by doing:\r\n`(bit_array1&bit_array2)`\r\n\r\nHow can I calculate the bitwise AND of all bitarrays within a list ?\r\n\r\nFor example, with the built-in python sets library, I can calculate the intersection of a list of sets by doing:\r\n\r\n`set.intersection(*list_of_sets)`\r\n\r\nIs there a way to do something like this in bitarray?\r\n\r\nI have used the count_and utility method, but it only accepts two bitarrays as input.  \r\nHow can I pass a list of many bitarrays into count_and ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/94", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/94/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/94/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/94", "id": 603769451, "node_id": "MDU6SXNzdWU2MDM3Njk0NTE=", "number": 94, "title": "make util.ba2hex returns string instead of bytes or change the output value", "user": {"login": "cjtk", "id": 10353490, "node_id": "MDQ6VXNlcjEwMzUzNDkw", "avatar_url": "https://avatars3.githubusercontent.com/u/10353490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjtk", "html_url": "https://github.com/cjtk", "followers_url": "https://api.github.com/users/cjtk/followers", "following_url": "https://api.github.com/users/cjtk/following{/other_user}", "gists_url": "https://api.github.com/users/cjtk/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjtk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjtk/subscriptions", "organizations_url": "https://api.github.com/users/cjtk/orgs", "repos_url": "https://api.github.com/users/cjtk/repos", "events_url": "https://api.github.com/users/cjtk/events{/privacy}", "received_events_url": "https://api.github.com/users/cjtk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-21T07:22:58Z", "updated_at": "2020-05-18T23:36:17Z", "closed_at": "2020-05-18T23:36:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "python 3.6\r\nThe problem is with the confusing way python handles the type bytes\r\n\r\nconsider the following example\r\n\r\nfrom bitarray import bitarray\r\nfrom bitarray import util\r\nresult = util.ba2hex(bitarray('0000'))\r\nresult\r\nb'0'\r\n\r\nit seems to be okay, 0000 gets convert to hex 0\r\nthe problem is in python, this 0 is not the value 0 but the ascii '0'\r\n\r\nresult[0]\r\n48\r\nresult == b'\\x30'\r\nTrue\r\n\r\nSo 0000 got converted into hex 30\r\n\r\nI feel that it is a bit misleading and I would suggest that the method returns a string instead of bytes, if it is to return bytes then '0000' should be converted to b'\\x0' instead of b'\\x30'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/92", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/92/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/92/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/92", "id": 588765989, "node_id": "MDU6SXNzdWU1ODg3NjU5ODk=", "number": 92, "title": "Reverse documentation claims \"in-place\" but instantiates O(n) bitarray", "user": {"login": "bkille", "id": 22685902, "node_id": "MDQ6VXNlcjIyNjg1OTAy", "avatar_url": "https://avatars2.githubusercontent.com/u/22685902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkille", "html_url": "https://github.com/bkille", "followers_url": "https://api.github.com/users/bkille/followers", "following_url": "https://api.github.com/users/bkille/following{/other_user}", "gists_url": "https://api.github.com/users/bkille/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkille/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkille/subscriptions", "organizations_url": "https://api.github.com/users/bkille/orgs", "repos_url": "https://api.github.com/users/bkille/repos", "events_url": "https://api.github.com/users/bkille/events{/privacy}", "received_events_url": "https://api.github.com/users/bkille/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-26T22:26:17Z", "updated_at": "2020-03-27T08:04:00Z", "closed_at": "2020-03-27T08:04:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "From [`bitarray/_bitarray.c`](https://github.com/ilanschnell/bitarray/blob/master/bitarray/_bitarray.c#L1260)\r\n\r\n```C++\r\nstatic PyObject *\r\nbitarray_reverse(bitarrayobject *self)\r\n{\r\n    PyObject *t;    /* temp bitarray to store lower half of self */\r\n    idx_t i, m;\r\n\r\n    if (self->nbits < 2)\r\n        Py_RETURN_NONE;\r\n\r\n    t = newbitarrayobject(Py_TYPE(self), self->nbits / 2, self->endian);\r\n    if (t == NULL)\r\n        return NULL;\r\n\r\n#define tt  ((bitarrayobject *) t)\r\n    /* copy lower half of array into temporary array */\r\n    memcpy(tt->ob_item, self->ob_item, Py_SIZE(tt));\r\n\r\n    m = self->nbits - 1;\r\n\r\n    /* reverse the upper half onto the lower half. */\r\n    for (i = 0; i < tt->nbits; i++)\r\n        setbit(self, i, GETBIT(self, m - i));\r\n\r\n    /* revert the stored away lower half onto the upper half. */\r\n    for (i = 0; i < tt->nbits; i++)\r\n        setbit(self, m - i, GETBIT(tt, i));\r\n#undef tt\r\n    Py_DECREF(t);\r\n    Py_RETURN_NONE;\r\n}\r\n\r\nPyDoc_STRVAR(reverse_doc,\r\n\"reverse()\\n\\\r\n\\n\\\r\nReverse the order of bits in the array (in-place).\");\r\n```\r\n\r\nThe documentation claims that the operation is \"in-place\" which implies that `o(n)` space is used, when in fact `O(n)` space is used due to the temporary bitarray:\r\n```C++\r\nt = newbitarrayobject(Py_TYPE(self), self->nbits / 2, self->endian);\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/90", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/90/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/90/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/90", "id": 549953856, "node_id": "MDU6SXNzdWU1NDk5NTM4NTY=", "number": 90, "title": "best match by overlap ", "user": {"login": "vsraptor", "id": 521677, "node_id": "MDQ6VXNlcjUyMTY3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/521677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsraptor", "html_url": "https://github.com/vsraptor", "followers_url": "https://api.github.com/users/vsraptor/followers", "following_url": "https://api.github.com/users/vsraptor/following{/other_user}", "gists_url": "https://api.github.com/users/vsraptor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsraptor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsraptor/subscriptions", "organizations_url": "https://api.github.com/users/vsraptor/orgs", "repos_url": "https://api.github.com/users/vsraptor/repos", "events_url": "https://api.github.com/users/vsraptor/events{/privacy}", "received_events_url": "https://api.github.com/users/vsraptor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-15T04:09:31Z", "updated_at": "2020-02-10T19:03:16Z", "closed_at": "2020-02-10T19:03:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi I have a python module for doing 2D bitarray ... which I use to do a search by overlap (&) for a clossest match ...\r\nThe code is short but use alot of memory. If I do it in a python-loop row-by-row then it is too slow.\r\n\r\nHere is the code :\r\n\r\n```\r\n  counts = ( self.mem[:upto_row,:] & pat.dup(upto_row+1) ).count_ones(axis='rows')\r\n\r\n  ixs = np.argsort(counts)[::-1][:rng] #first-bigger\r\n\r\n```\r\nwhat it does is to duplicate the 'pat'-binary (pat * rows) to match the size of the 2D-array.\r\nThen I do the overlap (&). Finally I count the 1's on every row and pick the the row with the biggest overlap.\r\n\r\nThe question is : Is there a better way to make if faster and use less memory !? \r\n  It is OK not to use my 2D module but just bitarray() functionality ? \r\n  Of course you will have to use row-width as an argument.\r\n\r\nyear ago I tried Cython for the loop, but didn't have big impact.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/88", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/88/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/88/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/88", "id": 548882714, "node_id": "MDU6SXNzdWU1NDg4ODI3MTQ=", "number": 88, "title": "type hinting", "user": {"login": "flok99", "id": 3216056, "node_id": "MDQ6VXNlcjMyMTYwNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3216056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flok99", "html_url": "https://github.com/flok99", "followers_url": "https://api.github.com/users/flok99/followers", "following_url": "https://api.github.com/users/flok99/following{/other_user}", "gists_url": "https://api.github.com/users/flok99/gists{/gist_id}", "starred_url": "https://api.github.com/users/flok99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flok99/subscriptions", "organizations_url": "https://api.github.com/users/flok99/orgs", "repos_url": "https://api.github.com/users/flok99/repos", "events_url": "https://api.github.com/users/flok99/events{/privacy}", "received_events_url": "https://api.github.com/users/flok99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-13T11:56:05Z", "updated_at": "2020-03-09T16:30:18Z", "closed_at": "2020-01-15T05:42:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nPlease consider adding type hinting.\r\n\r\ne.g. https://github.com/flok99/bitarray/commit/f733886b6ac1c7b99059305bf4e6b1177c819757", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/86", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/86/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/86/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/86", "id": 541226859, "node_id": "MDU6SXNzdWU1NDEyMjY4NTk=", "number": 86, "title": "ba2int() gives different answers for different endianness", "user": {"login": "dargueta", "id": 620513, "node_id": "MDQ6VXNlcjYyMDUxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/620513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dargueta", "html_url": "https://github.com/dargueta", "followers_url": "https://api.github.com/users/dargueta/followers", "following_url": "https://api.github.com/users/dargueta/following{/other_user}", "gists_url": "https://api.github.com/users/dargueta/gists{/gist_id}", "starred_url": "https://api.github.com/users/dargueta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dargueta/subscriptions", "organizations_url": "https://api.github.com/users/dargueta/orgs", "repos_url": "https://api.github.com/users/dargueta/repos", "events_url": "https://api.github.com/users/dargueta/events{/privacy}", "received_events_url": "https://api.github.com/users/dargueta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-20T22:22:39Z", "updated_at": "2020-01-07T18:40:42Z", "closed_at": "2019-12-22T02:38:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```py\r\nimport bitarray as ba\r\nfrom bitarray.util import ba2int as b2i\r\n\r\nb = ba.bitarray(\"110110110\")    # Default is big-endian\r\nprint(b[:3])            # Prints: bitarray('110') as expected\r\nassert b2i(b[:3]) == 6  # Works as expected\r\n\r\n\r\nb = ba.bitarray(\"110110110\", endian=\"little\")\r\nprint(b[:3])            # Prints: bitarray('110') as expected\r\nassert b2i(b[:3]) == 6  # Fails -- return value is 3\r\n\r\n\r\nvalue = 0\r\nfor this_bit in b[:3]:\r\n    value <<= 1\r\n    value |= this_bit\r\n\r\nassert value == 6   # Works as expected\r\n```\r\n\r\nThis is a bit confusing. One can argue that order of the bits is an implementation detail and that, since iterating over a bitarray returns the same order of the bits then converting a bitarray to an integer should give the same results regardless of the array's endianness. If the repr is the same, the operations should (in theory) return the same results, no?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/85", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/85/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/85/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/85", "id": 538456891, "node_id": "MDU6SXNzdWU1Mzg0NTY4OTE=", "number": 85, "title": "support convert negative integer to bitarray", "user": {"login": "apurance", "id": 34626681, "node_id": "MDQ6VXNlcjM0NjI2Njgx", "avatar_url": "https://avatars3.githubusercontent.com/u/34626681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apurance", "html_url": "https://github.com/apurance", "followers_url": "https://api.github.com/users/apurance/followers", "following_url": "https://api.github.com/users/apurance/following{/other_user}", "gists_url": "https://api.github.com/users/apurance/gists{/gist_id}", "starred_url": "https://api.github.com/users/apurance/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apurance/subscriptions", "organizations_url": "https://api.github.com/users/apurance/orgs", "repos_url": "https://api.github.com/users/apurance/repos", "events_url": "https://api.github.com/users/apurance/events{/privacy}", "received_events_url": "https://api.github.com/users/apurance/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-16T14:45:43Z", "updated_at": "2020-08-10T06:14:53Z", "closed_at": "2020-08-10T06:14:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "function int2ba() do **NOT** support negative integer\r\nas in bitarray/util.py line:164-165\r\n> if i < 0:\r\n        raise ValueError(\"non-negative integer expected\")\r\n\r\nso I suggest that:\r\n\r\n```python\r\n#roughly\r\ndef int2ba(n, width):\r\n    ba = bitarray()\r\n    for i in range(width):\r\n        ba.append((n >> i) & 1)\r\n    return ba\r\n```\r\nwhether the n is positive or negative, the complement specified by width can be output correctly\r\n\r\nfor example:\r\n```shell\r\n>>> int2ba(127, 8)\r\nbitarray('11111110')\r\n>>> int2ba(-128, 8)\r\nbitarray('00000001')\r\n```\r\n\r\nwhen width == 8\r\nit seems that the input interval is -128 to 127, and output complement, while the original function requires the input interval is 0 to 255, and output unsigned true form\r\nin fact, when the input is in the interval [-128, 127] and interval [0, 255], this function will output complement and unsigned true form respectively\r\nfor example:\r\n```shell\r\n>>> int2ba(-128, 8)\r\nbitarray('00000001')\r\n>>> int2ba(128, 8)\r\nbitarray('00000001')\r\n```\r\nfor bitarray('00000001'), it is interpreted as -128 when it is used as complement, meanwhile it is interpreted as 128 when it is used as unsigned true form", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/84", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/84/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/84/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/84", "id": 530789731, "node_id": "MDU6SXNzdWU1MzA3ODk3MzE=", "number": 84, "title": "Set bits by idxs ?", "user": {"login": "vsraptor", "id": 521677, "node_id": "MDQ6VXNlcjUyMTY3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/521677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsraptor", "html_url": "https://github.com/vsraptor", "followers_url": "https://api.github.com/users/vsraptor/followers", "following_url": "https://api.github.com/users/vsraptor/following{/other_user}", "gists_url": "https://api.github.com/users/vsraptor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsraptor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsraptor/subscriptions", "organizations_url": "https://api.github.com/users/vsraptor/orgs", "repos_url": "https://api.github.com/users/vsraptor/repos", "events_url": "https://api.github.com/users/vsraptor/events{/privacy}", "received_events_url": "https://api.github.com/users/vsraptor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-01T20:25:09Z", "updated_at": "2019-12-05T21:59:41Z", "closed_at": "2019-12-05T21:59:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there better/faster way to set bits by list of indexes : \r\n\r\n       def set_by_ixs(val, ixs):\r\n                for i in ixs : val[i] = bitarray(\"1\")\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/83", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/83/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/83/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/83", "id": 528850379, "node_id": "MDU6SXNzdWU1Mjg4NTAzNzk=", "number": 83, "title": "ValueError thrown with the following literal?", "user": {"login": "marcosimioni", "id": 22682005, "node_id": "MDQ6VXNlcjIyNjgyMDA1", "avatar_url": "https://avatars0.githubusercontent.com/u/22682005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcosimioni", "html_url": "https://github.com/marcosimioni", "followers_url": "https://api.github.com/users/marcosimioni/followers", "following_url": "https://api.github.com/users/marcosimioni/following{/other_user}", "gists_url": "https://api.github.com/users/marcosimioni/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcosimioni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcosimioni/subscriptions", "organizations_url": "https://api.github.com/users/marcosimioni/orgs", "repos_url": "https://api.github.com/users/marcosimioni/repos", "events_url": "https://api.github.com/users/marcosimioni/events{/privacy}", "received_events_url": "https://api.github.com/users/marcosimioni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-26T16:51:16Z", "updated_at": "2019-11-27T05:50:14Z", "closed_at": "2019-11-27T02:52:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone,\r\n\r\nany idea what's wrong with this literal?\r\n\r\n```\r\n(Pdb) v\r\nb'\\xff\\xff\\xff\\xff\\xff\\xff\\xf0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x1f\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x87\\xff\\xff\\xff\\xff\\xff\\x7f\\xff\\xff\\xff\\xff\\xff\\xff\\x80\\x07\\xff\\xff\\xff\\xff\\xff\\xff\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x03\\xff\\xff\\xff\\xff\\xfe\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00?\\xff\\xff\\xff\\xff\\xff\\xff\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xf0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\r\n(Pdb) len(v)\r\n180\r\n(Pdb) ba = bitarray.bitarray(v)\r\n*** ValueError\r\n```\r\n\r\nBitarray somewhat cannot parse it, and I still wasn't able to figure out why.\r\nBitstring, for example, has no issues with it:\r\n\r\n```\r\n(Pdb) bs = bitstring.Bits(v)\r\n(Pdb) bs.bin\r\nr\n```\r\n\r\nSome version info:\r\n\r\n```\r\n(Pdb) sys.version\r\n'3.5.2 (default, Oct  8 2019, 13:06:37) \\n[GCC 5.4.0 20160609]'\r\n(Pdb) bitarray.__version__\r\n'1.1.0'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/82", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/82/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/82/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/82", "id": 527858191, "node_id": "MDU6SXNzdWU1Mjc4NTgxOTE=", "number": 82, "title": "2D bitarray ", "user": {"login": "vsraptor", "id": 521677, "node_id": "MDQ6VXNlcjUyMTY3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/521677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsraptor", "html_url": "https://github.com/vsraptor", "followers_url": "https://api.github.com/users/vsraptor/followers", "following_url": "https://api.github.com/users/vsraptor/following{/other_user}", "gists_url": "https://api.github.com/users/vsraptor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsraptor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsraptor/subscriptions", "organizations_url": "https://api.github.com/users/vsraptor/orgs", "repos_url": "https://api.github.com/users/vsraptor/repos", "events_url": "https://api.github.com/users/vsraptor/events{/privacy}", "received_events_url": "https://api.github.com/users/vsraptor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-25T05:34:07Z", "updated_at": "2020-03-29T13:38:32Z", "closed_at": "2020-01-15T03:34:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've created in the past 2D bitarray : \r\n\r\n[bmap2D code](https://github.com/vsraptor/bi/blob/master/lib/bmap2D.py)\r\n\r\n[docs](http://www.igrok.site/bmap2D.html)\r\n\r\nOf course beign Python lib it will be slower than pure C implementation.\r\n\r\nDo you have plans on making NDim interface similar to numpy or this one ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/81", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/81/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/81/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/81", "id": 527721904, "node_id": "MDU6SXNzdWU1Mjc3MjE5MDQ=", "number": 81, "title": "adding an integer of a certain length", "user": {"login": "flok99", "id": 3216056, "node_id": "MDQ6VXNlcjMyMTYwNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3216056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flok99", "html_url": "https://github.com/flok99", "followers_url": "https://api.github.com/users/flok99/followers", "following_url": "https://api.github.com/users/flok99/following{/other_user}", "gists_url": "https://api.github.com/users/flok99/gists{/gist_id}", "starred_url": "https://api.github.com/users/flok99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flok99/subscriptions", "organizations_url": "https://api.github.com/users/flok99/orgs", "repos_url": "https://api.github.com/users/flok99/repos", "events_url": "https://api.github.com/users/flok99/events{/privacy}", "received_events_url": "https://api.github.com/users/flok99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-24T16:25:09Z", "updated_at": "2019-11-24T17:53:39Z", "closed_at": "2019-11-24T17:53:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIt would be cool to be able to add an integer of arbitrary size.\r\nThat is; that you can specify how many bits the integer is.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/80", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/80/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/80/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/80", "id": 510897499, "node_id": "MDU6SXNzdWU1MTA4OTc0OTk=", "number": 80, "title": "Suggestion: add a resize(n) method", "user": {"login": "Lucas-C", "id": 925560, "node_id": "MDQ6VXNlcjkyNTU2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/925560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucas-C", "html_url": "https://github.com/Lucas-C", "followers_url": "https://api.github.com/users/Lucas-C/followers", "following_url": "https://api.github.com/users/Lucas-C/following{/other_user}", "gists_url": "https://api.github.com/users/Lucas-C/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucas-C/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucas-C/subscriptions", "organizations_url": "https://api.github.com/users/Lucas-C/orgs", "repos_url": "https://api.github.com/users/Lucas-C/repos", "events_url": "https://api.github.com/users/Lucas-C/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucas-C/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-22T20:40:54Z", "updated_at": "2019-10-28T23:17:39Z", "closed_at": "2019-10-28T23:17:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nIf n < size:\r\n    would call delete_n(size - n, n)\r\nElif n > size:\r\n    would call resize(size + n) and then memset(self->ob_item + old_size , 0x00, n);\r\n```  \r\n\r\nIf you think this is a good idea, I can submit a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/79", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/79/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/79/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/79", "id": 506086860, "node_id": "MDU6SXNzdWU1MDYwODY4NjA=", "number": 79, "title": "ENH: Take advantage of 32-bit instructions", "user": {"login": "jrynd", "id": 2706662, "node_id": "MDQ6VXNlcjI3MDY2NjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2706662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrynd", "html_url": "https://github.com/jrynd", "followers_url": "https://api.github.com/users/jrynd/followers", "following_url": "https://api.github.com/users/jrynd/following{/other_user}", "gists_url": "https://api.github.com/users/jrynd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrynd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrynd/subscriptions", "organizations_url": "https://api.github.com/users/jrynd/orgs", "repos_url": "https://api.github.com/users/jrynd/repos", "events_url": "https://api.github.com/users/jrynd/events{/privacy}", "received_events_url": "https://api.github.com/users/jrynd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-11T22:46:36Z", "updated_at": "2020-07-30T06:19:10Z", "closed_at": "2020-07-30T06:19:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Most of the code deals with things a bit or a byte at a time. Could some speedup be realized by dealing with chunks of 32 bits when possible?\r\n\r\nIn particular, doing a misaligned copy would be possible by bitshift operations on a 32-bit buffer, rather than doing everything bitwise.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/78", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/78/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/78/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/78", "id": 505132326, "node_id": "MDU6SXNzdWU1MDUxMzIzMjY=", "number": 78, "title": "reversed find/index function", "user": {"login": "mabdelaal86", "id": 11019219, "node_id": "MDQ6VXNlcjExMDE5MjE5", "avatar_url": "https://avatars2.githubusercontent.com/u/11019219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mabdelaal86", "html_url": "https://github.com/mabdelaal86", "followers_url": "https://api.github.com/users/mabdelaal86/followers", "following_url": "https://api.github.com/users/mabdelaal86/following{/other_user}", "gists_url": "https://api.github.com/users/mabdelaal86/gists{/gist_id}", "starred_url": "https://api.github.com/users/mabdelaal86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mabdelaal86/subscriptions", "organizations_url": "https://api.github.com/users/mabdelaal86/orgs", "repos_url": "https://api.github.com/users/mabdelaal86/repos", "events_url": "https://api.github.com/users/mabdelaal86/events{/privacy}", "received_events_url": "https://api.github.com/users/mabdelaal86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-10T08:58:42Z", "updated_at": "2019-10-11T05:23:56Z", "closed_at": "2019-10-11T05:23:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is the `index` function which find a value from the start of the bitarray and return its index. Is there is a way to make the same but reversed from the end of the bitarray?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/77", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/77/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/77/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/77", "id": 505129935, "node_id": "MDU6SXNzdWU1MDUxMjk5MzU=", "number": 77, "title": "trim zeros", "user": {"login": "mabdelaal86", "id": 11019219, "node_id": "MDQ6VXNlcjExMDE5MjE5", "avatar_url": "https://avatars2.githubusercontent.com/u/11019219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mabdelaal86", "html_url": "https://github.com/mabdelaal86", "followers_url": "https://api.github.com/users/mabdelaal86/followers", "following_url": "https://api.github.com/users/mabdelaal86/following{/other_user}", "gists_url": "https://api.github.com/users/mabdelaal86/gists{/gist_id}", "starred_url": "https://api.github.com/users/mabdelaal86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mabdelaal86/subscriptions", "organizations_url": "https://api.github.com/users/mabdelaal86/orgs", "repos_url": "https://api.github.com/users/mabdelaal86/repos", "events_url": "https://api.github.com/users/mabdelaal86/events{/privacy}", "received_events_url": "https://api.github.com/users/mabdelaal86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-10T08:54:26Z", "updated_at": "2019-11-13T16:39:42Z", "closed_at": "2019-10-11T20:08:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have used this library, and it is really awesome.\r\n\r\nI just wondering if there is a way to trim zeros from the start and the end of the bitarrray. Just like trimming white spaces from a string in other languages.\r\n\r\nthanks a lot,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/74", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/74/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/74/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/74", "id": 476985225, "node_id": "MDU6SXNzdWU0NzY5ODUyMjU=", "number": 74, "title": "Bug: bitarray is hashable on Python 2, causes KeyError", "user": {"login": "dargueta", "id": 620513, "node_id": "MDQ6VXNlcjYyMDUxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/620513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dargueta", "html_url": "https://github.com/dargueta", "followers_url": "https://api.github.com/users/dargueta/followers", "following_url": "https://api.github.com/users/dargueta/following{/other_user}", "gists_url": "https://api.github.com/users/dargueta/gists{/gist_id}", "starred_url": "https://api.github.com/users/dargueta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dargueta/subscriptions", "organizations_url": "https://api.github.com/users/dargueta/orgs", "repos_url": "https://api.github.com/users/dargueta/repos", "events_url": "https://api.github.com/users/dargueta/events{/privacy}", "received_events_url": "https://api.github.com/users/dargueta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-05T17:56:25Z", "updated_at": "2019-11-06T22:09:26Z", "closed_at": "2019-11-02T20:31:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mutable objects shouldn't be able to be used as keys, as they can cause collisions and unexpected behavior. I haven't dug into why yet but on Python 2 bitarrays *are* hashable, allowing programmers to use them as dictionary keys.\r\n\r\nTo reproduce:\r\n\r\n```py\r\nimport bitarray\r\n\r\narray_one = bitarray.bitarray([True, False])\r\narray_two = bitarray.bitarray([False, False])\r\n\r\ndct = {\r\n    array_one: \"one\",\r\n    array_two: \"two\",\r\n}\r\n\r\narray_three = bitarray.bitarray([True, False])\r\narray_three == array_one  # Returns True\r\n\r\ndct[array_three]   # Should return \"one\", throws KeyError instead\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/72", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/72/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/72/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/72", "id": 438123542, "node_id": "MDU6SXNzdWU0MzgxMjM1NDI=", "number": 72, "title": "bitarray 0.9.1 fails to compile on Windows with VS 2015", "user": {"login": "nehaljwani", "id": 1779189, "node_id": "MDQ6VXNlcjE3NzkxODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1779189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nehaljwani", "html_url": "https://github.com/nehaljwani", "followers_url": "https://api.github.com/users/nehaljwani/followers", "following_url": "https://api.github.com/users/nehaljwani/following{/other_user}", "gists_url": "https://api.github.com/users/nehaljwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/nehaljwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nehaljwani/subscriptions", "organizations_url": "https://api.github.com/users/nehaljwani/orgs", "repos_url": "https://api.github.com/users/nehaljwani/repos", "events_url": "https://api.github.com/users/nehaljwani/events{/privacy}", "received_events_url": "https://api.github.com/users/nehaljwani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-29T01:31:59Z", "updated_at": "2019-04-29T19:37:53Z", "closed_at": "2019-04-29T19:37:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\amd64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -I%PREFIX%\\include -I%PREFIX%\\include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\ATLMFC\\INCLUDE\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\winrt\" -I%PREFIX%\\Library\\include -I%PREFIX%\\Library\\include /Tcbitarray/_bitarray.c /Fobuild\\temp.win-amd64-3.7\\Release\\bitarray/_bitarray.obj\r\n_bitarray.c\r\nbitarray/_bitarray.c(2431): error C2099: initializer is not a constant\r\nbitarray/_bitarray.c(2546): error C2099: initializer is not a constant\r\nbitarray/_bitarray.c(2910): error C2099: initializer is not a constant\r\nbitarray/_bitarray.c(3037): error C2099: initializer is not a constant\r\nerror: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.0\\\\VC\\\\BIN\\\\amd64\\\\cl.exe' failed with exit status 2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/69", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/69/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/69/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/69", "id": 396158169, "node_id": "MDU6SXNzdWUzOTYxNTgxNjk=", "number": 69, "title": "cannot derive class from bitarray", "user": {"login": "goulu", "id": 1368062, "node_id": "MDQ6VXNlcjEzNjgwNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1368062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goulu", "html_url": "https://github.com/goulu", "followers_url": "https://api.github.com/users/goulu/followers", "following_url": "https://api.github.com/users/goulu/following{/other_user}", "gists_url": "https://api.github.com/users/goulu/gists{/gist_id}", "starred_url": "https://api.github.com/users/goulu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goulu/subscriptions", "organizations_url": "https://api.github.com/users/goulu/orgs", "repos_url": "https://api.github.com/users/goulu/repos", "events_url": "https://api.github.com/users/goulu/events{/privacy}", "received_events_url": "https://api.github.com/users/goulu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-05T11:37:12Z", "updated_at": "2019-05-12T06:31:18Z", "closed_at": "2019-05-12T06:31:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nclass Sieve(bitarray):\r\n    def __init__(self, init):\r\n        bitarray.__init__(self, init)\r\n        # and more code ...\r\ns=Sieve([False,False,True,True])\r\n```\r\n\r\nfails with \r\n> TypeError: bitarray() argument 2 must be str, not list\r\n\r\n(surprisingly when calling Sieve constructor, not the bitarray.__init__ ...)\r\ntried various super() variants, no change...\r\n\r\nbitarray 0.8.3 (from Anaconda), python 3.7.1, Windows 10\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/68", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/68/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/68/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/68", "id": 394848749, "node_id": "MDU6SXNzdWUzOTQ4NDg3NDk=", "number": 68, "title": "test_bitarray.py: unittest.TestCase.assert_ is deprecated", "user": {"login": "chrstphrchvz", "id": 7941193, "node_id": "MDQ6VXNlcjc5NDExOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7941193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrstphrchvz", "html_url": "https://github.com/chrstphrchvz", "followers_url": "https://api.github.com/users/chrstphrchvz/followers", "following_url": "https://api.github.com/users/chrstphrchvz/following{/other_user}", "gists_url": "https://api.github.com/users/chrstphrchvz/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrstphrchvz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrstphrchvz/subscriptions", "organizations_url": "https://api.github.com/users/chrstphrchvz/orgs", "repos_url": "https://api.github.com/users/chrstphrchvz/repos", "events_url": "https://api.github.com/users/chrstphrchvz/events{/privacy}", "received_events_url": "https://api.github.com/users/chrstphrchvz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-30T05:51:44Z", "updated_at": "2019-10-30T21:16:59Z", "closed_at": "2019-10-30T21:16:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `unittest.TestCase.assert_()` alias is deprecated in [Python 2.7](https://docs.python.org/2/library/unittest.html#deprecated-aliases) and [Python 3.2+](https://docs.python.org/3/library/unittest.html#deprecated-aliases), so running test_bitarray.py prints 49 warnings like the following:\r\n\r\n```\r\nbitarray/test_bitarray.py:65: DeprecationWarning: Please use assertTrue instead.\r\n  self.assert_(0 <= unused < 8)\r\n```\r\n\r\nA quick solution might be to use `assertTrue()` instead; however [the unittest library also suggests](https://docs.python.org/2/library/unittest.html#unittest.TestCase.assertTrue) using the purpose-specific functions available in Python 2.7/3.1+ (e.g. `assertIs()` and  `assertIsInstance()`).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/67", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/67/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/67/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/67", "id": 385900669, "node_id": "MDU6SXNzdWUzODU5MDA2Njk=", "number": 67, "title": "Iterating set bits is inefficient", "user": {"login": "johncrenshaw", "id": 267357, "node_id": "MDQ6VXNlcjI2NzM1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/267357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johncrenshaw", "html_url": "https://github.com/johncrenshaw", "followers_url": "https://api.github.com/users/johncrenshaw/followers", "following_url": "https://api.github.com/users/johncrenshaw/following{/other_user}", "gists_url": "https://api.github.com/users/johncrenshaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/johncrenshaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johncrenshaw/subscriptions", "organizations_url": "https://api.github.com/users/johncrenshaw/orgs", "repos_url": "https://api.github.com/users/johncrenshaw/repos", "events_url": "https://api.github.com/users/johncrenshaw/events{/privacy}", "received_events_url": "https://api.github.com/users/johncrenshaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-29T19:54:48Z", "updated_at": "2020-08-16T04:52:10Z", "closed_at": "2020-08-16T04:50:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "A common need with a bit array is to iterate over all bits that are set (or all bits that are cleared). Right now this is accomplished via `arr.itersearch(bitarray('1'))`, but the internal implementation of `search()` (which is used by `itersearch()`) simply compares bit by bit via two loops. This implementation is ultimately very naive, requiring multiple registers, increments, compares, and jumps for every single bit, regardless of whether the bit is set. This could be sped up dramatically by having a dedicated iterator for set bits. This implementation could walk 32 or 64 bits at a time and quickly skip over regions containing no set bits at potentially hundreds of times the speed of the current implementation (a single QWORD operation replacing 64 masks, compares, bitshifts, increments, and jumps). It is also possible to use a \"count trailing zero\" and/or \"count leading zero\" operation to further reduce the number of required bitwise comparisons required in many cases (see https://lemire.me/blog/2018/02/21/iterating-over-set-bits-quickly/).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/66", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/66/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/66/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/66", "id": 376189728, "node_id": "MDU6SXNzdWUzNzYxODk3Mjg=", "number": 66, "title": "PyType_Ready usage", "user": {"login": "tombo315", "id": 11657822, "node_id": "MDQ6VXNlcjExNjU3ODIy", "avatar_url": "https://avatars2.githubusercontent.com/u/11657822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tombo315", "html_url": "https://github.com/tombo315", "followers_url": "https://api.github.com/users/tombo315/followers", "following_url": "https://api.github.com/users/tombo315/following{/other_user}", "gists_url": "https://api.github.com/users/tombo315/gists{/gist_id}", "starred_url": "https://api.github.com/users/tombo315/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tombo315/subscriptions", "organizations_url": "https://api.github.com/users/tombo315/orgs", "repos_url": "https://api.github.com/users/tombo315/repos", "events_url": "https://api.github.com/users/tombo315/events{/privacy}", "received_events_url": "https://api.github.com/users/tombo315/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-31T22:50:01Z", "updated_at": "2020-08-12T06:08:05Z", "closed_at": "2020-08-12T06:08:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was evaluating `bitarray` under pypy3 (6.0.0) and was hit with numerous breaks and tracebacks. When escalating my problem to the pypy developers ([issue here](https://bitbucket.org/pypy/pypy/issues/2907/iterator-pyobject-from-extensions-in-pypy3)). The feedback was:\r\n\r\n> The issue is this piece of code:\r\n>\r\n> static PyTypeObject DecodeIter_Type = {\r\n> #ifdef IS_PY3K\r\n>     PyVarObject_HEAD_INIT(&DecodeIter_Type, 0)\r\n> #else\r\n>     PyObject_HEAD_INIT(NULL)\r\n>     0,                                        /* ob_size */\r\n> #endif\r\n> ...\r\n> \r\n> On py3k, it causes the type of object returned by .iterdecode() to be an instance of itself. Additionally, PyType_Ready() is never called, which makes the type invalid, per CPython documentation. This should be fixed in bitarray.\r\n\r\nThis is consistent with the guidelines for [developing extensions](https://docs.python.org/3/extending/newtypes_tutorial.html?highlight=pytype_ready#defining-extension-types-tutorial).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/65", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/65/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/65/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/65", "id": 374700341, "node_id": "MDU6SXNzdWUzNzQ3MDAzNDE=", "number": 65, "title": "Add 'top' , 'tail' and 'toint' methods", "user": {"login": "NEWME0", "id": 4021124, "node_id": "MDQ6VXNlcjQwMjExMjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4021124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NEWME0", "html_url": "https://github.com/NEWME0", "followers_url": "https://api.github.com/users/NEWME0/followers", "following_url": "https://api.github.com/users/NEWME0/following{/other_user}", "gists_url": "https://api.github.com/users/NEWME0/gists{/gist_id}", "starred_url": "https://api.github.com/users/NEWME0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NEWME0/subscriptions", "organizations_url": "https://api.github.com/users/NEWME0/orgs", "repos_url": "https://api.github.com/users/NEWME0/repos", "events_url": "https://api.github.com/users/NEWME0/events{/privacy}", "received_events_url": "https://api.github.com/users/NEWME0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-27T23:34:06Z", "updated_at": "2019-05-12T07:33:02Z", "closed_at": "2019-05-12T07:33:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**top(count=1) -> bitarray**\r\nCut items from begin of array and return them.\r\n\r\n\\>\\>\\> from bitarray import bitarray\r\n\\>\\>\\> bitwise = bitarray('00111110')\r\n\\>\\>\\> bitwise.top(2)\r\nbitarray('00')\r\n\\>\\>\\> bitwise\r\nbitarray('111110')\r\n\r\n\r\n**tail(count=1) -> bitarray**\r\nCut items from end of array and return them.\r\n\r\n\\>\\>\\> from bitarray import bitarray\r\n\\>\\>\\> bitwise = bitarray('00111110')\r\n\\>\\>\\> bitwise.tail(2)\r\nbitarray('10')\r\n\\>\\>\\> bitwise\r\nbitarray('001111')", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/64", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/64/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/64/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/64", "id": 361223601, "node_id": "MDU6SXNzdWUzNjEyMjM2MDE=", "number": 64, "title": "Py2 problem: cannot read from a subprocess file, \"EOFError: could not find EOF\"", "user": {"login": "d33tah", "id": 295322, "node_id": "MDQ6VXNlcjI5NTMyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/295322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d33tah", "html_url": "https://github.com/d33tah", "followers_url": "https://api.github.com/users/d33tah/followers", "following_url": "https://api.github.com/users/d33tah/following{/other_user}", "gists_url": "https://api.github.com/users/d33tah/gists{/gist_id}", "starred_url": "https://api.github.com/users/d33tah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d33tah/subscriptions", "organizations_url": "https://api.github.com/users/d33tah/orgs", "repos_url": "https://api.github.com/users/d33tah/repos", "events_url": "https://api.github.com/users/d33tah/events{/privacy}", "received_events_url": "https://api.github.com/users/d33tah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-18T09:51:00Z", "updated_at": "2020-08-01T02:43:51Z", "closed_at": "2020-08-01T02:43:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's my test case:\r\n\r\n```\r\n>>> import bitarray, subprocess\r\n>>> f = subprocess.Popen(['zstd', '-qdc', '20151111-rdns.gz.zstd.coverage.bin.zstd'], stdout=subprocess.PIPE).stdout\r\n>>> b = bitarray.bitarray()\r\n>>> b.fromfile(f)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nEOFError: could not find EOF\r\n```\r\n\r\nOnly happens under Python2. Not that important since using Py3 is a workaround, but I thought I'd report it anyway.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/62", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/62/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/62/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/62", "id": 345316160, "node_id": "MDU6SXNzdWUzNDUzMTYxNjA=", "number": 62, "title": "Allow set plus resize", "user": {"login": "sfreilich", "id": 245611, "node_id": "MDQ6VXNlcjI0NTYxMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/245611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfreilich", "html_url": "https://github.com/sfreilich", "followers_url": "https://api.github.com/users/sfreilich/followers", "following_url": "https://api.github.com/users/sfreilich/following{/other_user}", "gists_url": "https://api.github.com/users/sfreilich/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfreilich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfreilich/subscriptions", "organizations_url": "https://api.github.com/users/sfreilich/orgs", "repos_url": "https://api.github.com/users/sfreilich/repos", "events_url": "https://api.github.com/users/sfreilich/events{/privacy}", "received_events_url": "https://api.github.com/users/sfreilich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-27T18:02:23Z", "updated_at": "2019-05-12T06:36:32Z", "closed_at": "2019-05-12T06:36:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "bitarray's `__setitem__` checks the existing bounds:\r\n\r\n```python\r\n>>> b = bitarray.bitarray()\r\n>>> i = 3\r\n>>> b[i] = True\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nIndexError: bitarray index out of range\r\n```\r\n\r\nFor sparser bitarrays, sometimes it's desirable to set an index (or a sequence of indices) to 1, resizing if necessary to accommodate the extra bits.\r\n\r\nThis can be done with:\r\n\r\n```python\r\n>>> b.extend(itertools.repeat(0, i+1-b.length()))\r\n>>> b[i] = True\r\n>>> b\r\nbitarray('0001')\r\n```\r\n\r\nBut it would be nice if there was a clean an efficient way to do that sort of thing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/60", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/60/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/60/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/60", "id": 339129533, "node_id": "MDU6SXNzdWUzMzkxMjk1MzM=", "number": 60, "title": "LICENSE file missing from sdist on PyPI", "user": {"login": "nehaljwani", "id": 1779189, "node_id": "MDQ6VXNlcjE3NzkxODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1779189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nehaljwani", "html_url": "https://github.com/nehaljwani", "followers_url": "https://api.github.com/users/nehaljwani/followers", "following_url": "https://api.github.com/users/nehaljwani/following{/other_user}", "gists_url": "https://api.github.com/users/nehaljwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/nehaljwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nehaljwani/subscriptions", "organizations_url": "https://api.github.com/users/nehaljwani/orgs", "repos_url": "https://api.github.com/users/nehaljwani/repos", "events_url": "https://api.github.com/users/nehaljwani/events{/privacy}", "received_events_url": "https://api.github.com/users/nehaljwani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-07T08:45:52Z", "updated_at": "2019-05-24T08:28:33Z", "closed_at": "2019-05-24T08:28:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://pypi.io/packages/source/b/bitarray/bitarray-0.8.3.tar.gz doesn't have LICENSE file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/58", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/58/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/58/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/58", "id": 328551161, "node_id": "MDU6SXNzdWUzMjg1NTExNjE=", "number": 58, "title": "Version 0.8.2.1 is not pep440 compliant", "user": {"login": "BradHolmes", "id": 8644351, "node_id": "MDQ6VXNlcjg2NDQzNTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8644351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BradHolmes", "html_url": "https://github.com/BradHolmes", "followers_url": "https://api.github.com/users/BradHolmes/followers", "following_url": "https://api.github.com/users/BradHolmes/following{/other_user}", "gists_url": "https://api.github.com/users/BradHolmes/gists{/gist_id}", "starred_url": "https://api.github.com/users/BradHolmes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BradHolmes/subscriptions", "organizations_url": "https://api.github.com/users/BradHolmes/orgs", "repos_url": "https://api.github.com/users/BradHolmes/repos", "events_url": "https://api.github.com/users/BradHolmes/events{/privacy}", "received_events_url": "https://api.github.com/users/BradHolmes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-01T14:54:21Z", "updated_at": "2018-07-06T16:22:22Z", "closed_at": "2018-07-06T16:22:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nFollowing on the recent problems with 0.8.2, it appears that the latest version is uploaded to pypi as 0.8.2.1, despite the fact that it says at https://pypi.org/project/bitarray/0.8.2/#history it is 0.8.2.\r\n\r\n```\r\npip install bitarray==0.8.2\r\n```\r\n\r\ndoes not work.  It reports:\r\n\r\n```\r\nCould not find a version that satisfies the requirement bitarray==0.8.2 (from -r foo (line 1)) (from versions: 0.1.0, 0.2.0, 0.2.1, 0.2.2, 0.2.3, 0.2.4, 0.2.5, 0.3.0, 0.3.1, 0.3.2, 0.3.3, 0.3.4, 0.3.5, 0.4.0, 0.5.0, 0.5.1, 0.5.2, 0.6.0, 0.7.0, 0.8.0, 0.8.1, 0.8.2.1)\r\n\r\nNo matching distribution found for bitarray==0.8.2 (from -r foo (line 1))\r\n```\r\n\r\nIs it possible to deploy this as version 0.8.3, and remove 0.8.2.1 completely from pypi?  Or alternatively, fix the 0.8.2 deployment to be saved as 0.8.2?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/57", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/57/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/57/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/57", "id": 327851227, "node_id": "MDU6SXNzdWUzMjc4NTEyMjc=", "number": 57, "title": "Unable to install bitarray 0.8.2", "user": {"login": "akale2408", "id": 2318358, "node_id": "MDQ6VXNlcjIzMTgzNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2318358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akale2408", "html_url": "https://github.com/akale2408", "followers_url": "https://api.github.com/users/akale2408/followers", "following_url": "https://api.github.com/users/akale2408/following{/other_user}", "gists_url": "https://api.github.com/users/akale2408/gists{/gist_id}", "starred_url": "https://api.github.com/users/akale2408/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akale2408/subscriptions", "organizations_url": "https://api.github.com/users/akale2408/orgs", "repos_url": "https://api.github.com/users/akale2408/repos", "events_url": "https://api.github.com/users/akale2408/events{/privacy}", "received_events_url": "https://api.github.com/users/akale2408/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-30T18:38:33Z", "updated_at": "2018-05-30T19:09:05Z", "closed_at": "2018-05-30T19:09:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get an error when I attempt to install this package.\r\n\r\n```\r\n$ pip install bitarray==0.8.2\r\nCollecting bitarray==0.8.2\r\n  Downloading [internal mirror]/bitarray-0.8.2.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/private/var/folders/b2/n_p6v7k57xzbxywzk1kykrnh0000gn/T/pip-build-s3sqrmv4/bitarray/setup.py\", line 7, in <module>\r\n        kwds['long_description'] = open('README.rst').read()\r\n    FileNotFoundError: [Errno 2] No such file or directory: 'README.rst'\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/b2/n_p6v7k57xzbxywzk1kykrnh0000gn/T/pip-build-s3sqrmv4/bitarray/\r\nYou are using pip version 9.0.1, however version 10.0.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n```\r\n\r\nThere is no error if I install `0.8.1`.\r\n\r\n@ilanschnell ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/53", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/53/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/53/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/53", "id": 316118616, "node_id": "MDU6SXNzdWUzMTYxMTg2MTY=", "number": 53, "title": "How to save multiple bitarray objects to list", "user": {"login": "szhong12", "id": 34156765, "node_id": "MDQ6VXNlcjM0MTU2NzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/34156765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szhong12", "html_url": "https://github.com/szhong12", "followers_url": "https://api.github.com/users/szhong12/followers", "following_url": "https://api.github.com/users/szhong12/following{/other_user}", "gists_url": "https://api.github.com/users/szhong12/gists{/gist_id}", "starred_url": "https://api.github.com/users/szhong12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szhong12/subscriptions", "organizations_url": "https://api.github.com/users/szhong12/orgs", "repos_url": "https://api.github.com/users/szhong12/repos", "events_url": "https://api.github.com/users/szhong12/events{/privacy}", "received_events_url": "https://api.github.com/users/szhong12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-20T03:52:08Z", "updated_at": "2019-05-12T07:42:55Z", "closed_at": "2019-05-12T07:42:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "MemoryError after running the following code:     \r\n\r\nbit_list = []\r\nfor i in range(3):\r\n    print (i)\r\n    a = bitarray(2**32)\r\n    bit_list.append(a)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/51", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/51/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/51/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/51", "id": 279863742, "node_id": "MDU6SXNzdWUyNzk4NjM3NDI=", "number": 51, "title": "sdist is missing PKG-INFO", "user": {"login": "mhbkb", "id": 8602122, "node_id": "MDQ6VXNlcjg2MDIxMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8602122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhbkb", "html_url": "https://github.com/mhbkb", "followers_url": "https://api.github.com/users/mhbkb/followers", "following_url": "https://api.github.com/users/mhbkb/following{/other_user}", "gists_url": "https://api.github.com/users/mhbkb/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhbkb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhbkb/subscriptions", "organizations_url": "https://api.github.com/users/mhbkb/orgs", "repos_url": "https://api.github.com/users/mhbkb/repos", "events_url": "https://api.github.com/users/mhbkb/events{/privacy}", "received_events_url": "https://api.github.com/users/mhbkb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-06T18:45:49Z", "updated_at": "2018-05-30T19:09:54Z", "closed_at": "2018-05-30T19:09:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey owners of bitarray,\r\n\r\nLooks like the sdist package of bitarray is missing PKG-INFO which will error out when we call `pkginfo.SDist(file_path)`.\r\n`ValueError: No PKG-INFO in archive: ../cache/bitarray-0.8.1.tar.gz`\r\n https://pypi.python.org/simple/bitarray/\r\n\r\nIt would be nice if we can include PKG-INFO in sdist at next release. \r\n\r\nThanks,\r\nHao", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/49", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/49/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/49/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/49", "id": 255713642, "node_id": "MDU6SXNzdWUyNTU3MTM2NDI=", "number": 49, "title": "bitarray does not register with collections.Sequence", "user": {"login": "egregius313", "id": 18200959, "node_id": "MDQ6VXNlcjE4MjAwOTU5", "avatar_url": "https://avatars2.githubusercontent.com/u/18200959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egregius313", "html_url": "https://github.com/egregius313", "followers_url": "https://api.github.com/users/egregius313/followers", "following_url": "https://api.github.com/users/egregius313/following{/other_user}", "gists_url": "https://api.github.com/users/egregius313/gists{/gist_id}", "starred_url": "https://api.github.com/users/egregius313/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egregius313/subscriptions", "organizations_url": "https://api.github.com/users/egregius313/orgs", "repos_url": "https://api.github.com/users/egregius313/repos", "events_url": "https://api.github.com/users/egregius313/events{/privacy}", "received_events_url": "https://api.github.com/users/egregius313/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-06T19:17:02Z", "updated_at": "2020-08-07T06:01:42Z", "closed_at": "2020-08-07T06:01:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have been using `bitarray` recently, and I realized that `bitarray` objects are not registered with the `collections.Sequence` abstract base class, even though it implements the necessary `__len__` and `__getattr__`.\r\n\r\nThis makes code that checks for implementation of the `Container`, `Iterable`, `Sized`, and `Sequence` abstract base classes in the `collections` module fail when using `bitarray`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/48", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/48/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/48/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/48", "id": 234519559, "node_id": "MDU6SXNzdWUyMzQ1MTk1NTk=", "number": 48, "title": "\"open file expected\" on large array", "user": {"login": "mjr129", "id": 14569360, "node_id": "MDQ6VXNlcjE0NTY5MzYw", "avatar_url": "https://avatars0.githubusercontent.com/u/14569360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjr129", "html_url": "https://github.com/mjr129", "followers_url": "https://api.github.com/users/mjr129/followers", "following_url": "https://api.github.com/users/mjr129/following{/other_user}", "gists_url": "https://api.github.com/users/mjr129/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjr129/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjr129/subscriptions", "organizations_url": "https://api.github.com/users/mjr129/orgs", "repos_url": "https://api.github.com/users/mjr129/repos", "events_url": "https://api.github.com/users/mjr129/events{/privacy}", "received_events_url": "https://api.github.com/users/mjr129/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-08T13:01:16Z", "updated_at": "2019-01-10T10:47:50Z", "closed_at": "2017-08-09T21:01:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Steps to reproduce\r\n\r\n```\r\nfrom bitarray import bitarray\r\nb = bitarray( 114873544900 )\r\nwith open( \"test.bitarray\", \"wb\" ) as file:\r\n   b.tofile( file )\r\n```\r\n\r\n# Observed\r\n* Misleading error message\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\nTypeError: open file expected\r\n```\r\n\r\n# Expected\r\n* Save the file successfully\r\n* ...or... a helpful error message\r\n\r\n# System details\r\n* OSX Sierra\r\n* Python 3.5\r\n\r\n# Assumptions\r\nGiven dealing with large data is one of `bitarray`s primary use cases, it should be able to do so.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/44", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/44/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/44/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/44", "id": 203864485, "node_id": "MDU6SXNzdWUyMDM4NjQ0ODU=", "number": 44, "title": " Release wheels on Pypi?", "user": {"login": "pombredanne", "id": 675997, "node_id": "MDQ6VXNlcjY3NTk5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/675997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pombredanne", "html_url": "https://github.com/pombredanne", "followers_url": "https://api.github.com/users/pombredanne/followers", "following_url": "https://api.github.com/users/pombredanne/following{/other_user}", "gists_url": "https://api.github.com/users/pombredanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/pombredanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pombredanne/subscriptions", "organizations_url": "https://api.github.com/users/pombredanne/orgs", "repos_url": "https://api.github.com/users/pombredanne/repos", "events_url": "https://api.github.com/users/pombredanne/events{/privacy}", "received_events_url": "https://api.github.com/users/pombredanne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-29T11:28:56Z", "updated_at": "2017-03-04T10:02:07Z", "closed_at": "2017-03-04T06:24:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be great to have pre-built wheels on Pypi.\r\nI am vendoring some here:https://github.com/nexB/scancode-toolkit/tree/1ff61e5858186210dd8393f7ee55c20c30168369/thirdparty/prod#cfc12116b3783dcbe14d11617e0230f8-170bd4072ed3b82dc55e8307cacd50d4982cdf8d and I build them with these \"build loops\" (on Linux, Mac and Windows through Travis and Appveyor):\r\n- https://github.com/pombreda/thirdparty \r\n- https://github.com/pombreda/thirdparty-manylinux/\r\n\r\nI would be willing to help to have this baked in this project.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/42", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/42/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/42/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/42", "id": 194190995, "node_id": "MDU6SXNzdWUxOTQxOTA5OTU=", "number": 42, "title": "Extending bitarray to allow more arguments?", "user": {"login": "vsraptor", "id": 521677, "node_id": "MDQ6VXNlcjUyMTY3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/521677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsraptor", "html_url": "https://github.com/vsraptor", "followers_url": "https://api.github.com/users/vsraptor/followers", "following_url": "https://api.github.com/users/vsraptor/following{/other_user}", "gists_url": "https://api.github.com/users/vsraptor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsraptor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsraptor/subscriptions", "organizations_url": "https://api.github.com/users/vsraptor/orgs", "repos_url": "https://api.github.com/users/vsraptor/repos", "events_url": "https://api.github.com/users/vsraptor/events{/privacy}", "received_events_url": "https://api.github.com/users/vsraptor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-07T22:30:11Z", "updated_at": "2016-12-08T02:19:46Z", "closed_at": "2016-12-08T02:19:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you comment on this issue :\r\nhttp://stackoverflow.com/questions/41027865/extending-bitarray-to-allow-more-arguments", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/41", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/41/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/41/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/41", "id": 191011147, "node_id": "MDU6SXNzdWUxOTEwMTExNDc=", "number": 41, "title": "Feature Request: cardinality", "user": {"login": "remiadon", "id": 2931080, "node_id": "MDQ6VXNlcjI5MzEwODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2931080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remiadon", "html_url": "https://github.com/remiadon", "followers_url": "https://api.github.com/users/remiadon/followers", "following_url": "https://api.github.com/users/remiadon/following{/other_user}", "gists_url": "https://api.github.com/users/remiadon/gists{/gist_id}", "starred_url": "https://api.github.com/users/remiadon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remiadon/subscriptions", "organizations_url": "https://api.github.com/users/remiadon/orgs", "repos_url": "https://api.github.com/users/remiadon/repos", "events_url": "https://api.github.com/users/remiadon/events{/privacy}", "received_events_url": "https://api.github.com/users/remiadon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-22T13:48:05Z", "updated_at": "2019-04-17T04:43:41Z", "closed_at": "2019-04-17T04:43:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone,\r\nFor one of my projects I would need to get the `cardinality` of a bit array, i.e the number of bits set to 1, [as defined in Java's BitSet class](https://docs.oracle.com/javase/7/docs/api/java/util/BitSet.html#cardinality())\r\n\r\nFor now the simplest way of doing this is using `sum`:\r\n```python\r\ncardinality = sum(1 for i in my_bitarray if i)\r\n```\r\n\r\nMy issue is that it is no that fast (between 10 and 50ms for a million bits array on my machine), I mean not that fast if I need to compute/use it quite often.\r\n\r\nIs there a better way to get the cardinality ?\r\nI suggest the cardinality to be an attribute and incrementing/decrementing it when setting a bit to 1 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/38", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/38/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/38/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/38", "id": 182113462, "node_id": "MDU6SXNzdWUxODIxMTM0NjI=", "number": 38, "title": "Feature Request: efficient way to concatenate lists of bitarrays", "user": {"login": "hayne", "id": 712769, "node_id": "MDQ6VXNlcjcxMjc2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/712769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hayne", "html_url": "https://github.com/hayne", "followers_url": "https://api.github.com/users/hayne/followers", "following_url": "https://api.github.com/users/hayne/following{/other_user}", "gists_url": "https://api.github.com/users/hayne/gists{/gist_id}", "starred_url": "https://api.github.com/users/hayne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hayne/subscriptions", "organizations_url": "https://api.github.com/users/hayne/orgs", "repos_url": "https://api.github.com/users/hayne/repos", "events_url": "https://api.github.com/users/hayne/events{/privacy}", "received_events_url": "https://api.github.com/users/hayne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-10T20:56:17Z", "updated_at": "2019-10-31T05:11:39Z", "closed_at": "2019-10-31T05:11:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my application, I have thousands of small bitarrays that I need to concatenate to get one large bitarray. There doesn't seem to be an efficient way of doing this.\n\nWhat I've tried:\n\n```\n# Try #1\n# Allocate large bitarray, then assign into it at offsets:\nnumBitArrays = len(bitArrayList)\nlengths = [len(bitArray) for bitArray in bitArrayList]\ntotalNumBits = sum(lengths)\nnewBitArray = bitarray.bitarray(totalNumBits)\noffset = 0\nfor i in xrange(numBitArrays):\n    length = lengths[i]\n    newBitArray[offset : offset + length] = bitArrayList[i]\n    offset += length\n\n# Try # 2\n# Use the + operator to concatenate bitarrays:\nnewBitArray = bitarray.bitarray(0)\nfor bitArray in bitArrayList:\n    newBitArray += bitArray\n\n# Try #3 \n# Get the bits as strings, concatenate strings, then create large bitarray from string\nbitsList = list()\nfor bitArray in bitArrayList:\n    bits = bitArray.to01()\n    bitsList.append(bits)\nnewBits = ''.join(bitsList)\nnewBitArray = bitarray.bitarray(newBits)\n```\n\nSurprisingly, the 3rd method seems to be about 25% faster than the others. But it takes more memory and still is a bit slow for my application with 3000 bitarrays to be concatenated\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/37", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/37/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/37/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/37", "id": 172620010, "node_id": "MDU6SXNzdWUxNzI2MjAwMTA=", "number": 37, "title": "memoryview does not work with bitarray on Python3", "user": {"login": "grove", "id": 326795, "node_id": "MDQ6VXNlcjMyNjc5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/326795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grove", "html_url": "https://github.com/grove", "followers_url": "https://api.github.com/users/grove/followers", "following_url": "https://api.github.com/users/grove/following{/other_user}", "gists_url": "https://api.github.com/users/grove/gists{/gist_id}", "starred_url": "https://api.github.com/users/grove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grove/subscriptions", "organizations_url": "https://api.github.com/users/grove/orgs", "repos_url": "https://api.github.com/users/grove/repos", "events_url": "https://api.github.com/users/grove/events{/privacy}", "received_events_url": "https://api.github.com/users/grove/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-23T06:13:05Z", "updated_at": "2019-10-31T05:33:27Z", "closed_at": "2019-10-31T05:33:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "It works fine with Python2, but not Python3:\n\n```\n$ python2\nPython 2.7.12 (default, Jun 29 2016, 14:05:02)\n[GCC 4.2.1 Compatible Apple LLVM 7.3.0 (clang-703.0.31)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from bitarray import bitarray\n>>> b = bitarray(\"000110011110\")\n>>> m = memoryview(b)\n>>>\n```\n\n```\n$ python3\nPython 3.5.2 (default, Jul 28 2016, 21:28:00)\n[GCC 4.2.1 Compatible Apple LLVM 7.3.0 (clang-703.0.31)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from bitarray import bitarray\n>>> b = bitarray(\"000110011110\")\n>>> m = memoryview(b)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: memoryview: a bytes-like object is required, not 'bitarray'\n>>>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/34", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/34/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/34/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/34", "id": 152033088, "node_id": "MDU6SXNzdWUxNTIwMzMwODg=", "number": 34, "title": "Check type of length argument", "user": {"login": "kallewoof", "id": 250224, "node_id": "MDQ6VXNlcjI1MDIyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/250224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kallewoof", "html_url": "https://github.com/kallewoof", "followers_url": "https://api.github.com/users/kallewoof/followers", "following_url": "https://api.github.com/users/kallewoof/following{/other_user}", "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}", "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions", "organizations_url": "https://api.github.com/users/kallewoof/orgs", "repos_url": "https://api.github.com/users/kallewoof/repos", "events_url": "https://api.github.com/users/kallewoof/events{/privacy}", "received_events_url": "https://api.github.com/users/kallewoof/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-30T14:20:44Z", "updated_at": "2019-05-12T07:24:36Z", "closed_at": "2019-05-12T07:24:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently passed a float to `bitarray()` without realizing it. It crashed with `\"TypeError: could not extend bitarray\"` which had me running in circles for a few hours before realizing it. A simple type check in `__init__` may spare others the lost time.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/32", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/32/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/32/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/32", "id": 106472582, "node_id": "MDU6SXNzdWUxMDY0NzI1ODI=", "number": 32, "title": "Should WITH_BUFFER be defined for python 3?", "user": {"login": "isaacl", "id": 1027886, "node_id": "MDQ6VXNlcjEwMjc4ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1027886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isaacl", "html_url": "https://github.com/isaacl", "followers_url": "https://api.github.com/users/isaacl/followers", "following_url": "https://api.github.com/users/isaacl/following{/other_user}", "gists_url": "https://api.github.com/users/isaacl/gists{/gist_id}", "starred_url": "https://api.github.com/users/isaacl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isaacl/subscriptions", "organizations_url": "https://api.github.com/users/isaacl/orgs", "repos_url": "https://api.github.com/users/isaacl/repos", "events_url": "https://api.github.com/users/isaacl/events{/privacy}", "received_events_url": "https://api.github.com/users/isaacl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-15T03:55:33Z", "updated_at": "2019-04-19T22:52:51Z", "closed_at": "2019-04-19T22:52:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe it is currently is only set for 2.7:\n\nhttps://github.com/ilanschnell/bitarray/blob/master/bitarray/_bitarray.c#L51-L54\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/31", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/31/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/31/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/31", "id": 96038568, "node_id": "MDU6SXNzdWU5NjAzODU2OA==", "number": 31, "title": "Insert efficiency", "user": {"login": "dsoprea", "id": 715626, "node_id": "MDQ6VXNlcjcxNTYyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/715626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsoprea", "html_url": "https://github.com/dsoprea", "followers_url": "https://api.github.com/users/dsoprea/followers", "following_url": "https://api.github.com/users/dsoprea/following{/other_user}", "gists_url": "https://api.github.com/users/dsoprea/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsoprea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsoprea/subscriptions", "organizations_url": "https://api.github.com/users/dsoprea/orgs", "repos_url": "https://api.github.com/users/dsoprea/repos", "events_url": "https://api.github.com/users/dsoprea/events{/privacy}", "received_events_url": "https://api.github.com/users/dsoprea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-20T10:49:25Z", "updated_at": "2019-05-13T05:56:33Z", "closed_at": "2019-05-13T05:56:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Am I correct in assuming that inserts to the middle of the array will require a resize?\n\nIt can't hurt to explicitly mention this in the docs.\n\nThanks for the project.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/27", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/27/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/27/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/27", "id": 92345320, "node_id": "MDU6SXNzdWU5MjM0NTMyMA==", "number": 27, "title": "Feature: set certain bit(s) to value", "user": {"login": "KimiNewt", "id": 2090554, "node_id": "MDQ6VXNlcjIwOTA1NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2090554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KimiNewt", "html_url": "https://github.com/KimiNewt", "followers_url": "https://api.github.com/users/KimiNewt/followers", "following_url": "https://api.github.com/users/KimiNewt/following{/other_user}", "gists_url": "https://api.github.com/users/KimiNewt/gists{/gist_id}", "starred_url": "https://api.github.com/users/KimiNewt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KimiNewt/subscriptions", "organizations_url": "https://api.github.com/users/KimiNewt/orgs", "repos_url": "https://api.github.com/users/KimiNewt/repos", "events_url": "https://api.github.com/users/KimiNewt/events{/privacy}", "received_events_url": "https://api.github.com/users/KimiNewt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-01T10:42:17Z", "updated_at": "2019-04-17T04:46:58Z", "closed_at": "2019-04-17T04:46:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently you can only append/insert new bits. A useful feature would be to set/toggle certain bits or a bits range, i.e.\n\nbitarr.set(5, True)\nbitarr.toggle(5)\nbitarr.set_range(5, 10, True)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/25", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/25/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/25/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/25", "id": 53828076, "node_id": "MDU6SXNzdWU1MzgyODA3Ng==", "number": 25, "title": "Feature requests: an immutable type and conversion from/to bytes at offsets", "user": {"login": "ceridwen", "id": 8268008, "node_id": "MDQ6VXNlcjgyNjgwMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8268008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ceridwen", "html_url": "https://github.com/ceridwen", "followers_url": "https://api.github.com/users/ceridwen/followers", "following_url": "https://api.github.com/users/ceridwen/following{/other_user}", "gists_url": "https://api.github.com/users/ceridwen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ceridwen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ceridwen/subscriptions", "organizations_url": "https://api.github.com/users/ceridwen/orgs", "repos_url": "https://api.github.com/users/ceridwen/repos", "events_url": "https://api.github.com/users/ceridwen/events{/privacy}", "received_events_url": "https://api.github.com/users/ceridwen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-09T02:45:51Z", "updated_at": "2020-07-30T08:48:49Z", "closed_at": "2020-07-30T08:48:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "1) It would be useful to have an immutable counterpart to the bitarray type, analogous to bytes for bytearray, for hashability and because immutable types are safer in important respects.\n\n2) Struct and similar other built-in functions and methods allow conversion to and from raw binary data at offsets, which is useful for dealing with bit arrays embedded inside larger data structures.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/24", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/24/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/24/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/24", "id": 52395163, "node_id": "MDU6SXNzdWU1MjM5NTE2Mw==", "number": 24, "title": "Unhashable", "user": {"login": "wreardan", "id": 3738874, "node_id": "MDQ6VXNlcjM3Mzg4NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3738874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wreardan", "html_url": "https://github.com/wreardan", "followers_url": "https://api.github.com/users/wreardan/followers", "following_url": "https://api.github.com/users/wreardan/following{/other_user}", "gists_url": "https://api.github.com/users/wreardan/gists{/gist_id}", "starred_url": "https://api.github.com/users/wreardan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wreardan/subscriptions", "organizations_url": "https://api.github.com/users/wreardan/orgs", "repos_url": "https://api.github.com/users/wreardan/repos", "events_url": "https://api.github.com/users/wreardan/events{/privacy}", "received_events_url": "https://api.github.com/users/wreardan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-12-18T17:47:35Z", "updated_at": "2019-10-14T03:57:13Z", "closed_at": "2019-10-14T03:57:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "TypeError: unhashable type: 'bitarray'\n\nIt would be useful to be able to use bitarrays as keys in dictionaries, and I don't think implementing this would be too bad, but I'm not familiar with the codebase.\n\nHere's the code that I was trying to use:\n\n```\nbitarray_dictionary = {}\nreverse_bitarray_dictionary = {}\nfor i,base in enumerate(dictionary):\n    binary = '{0:b}'.format(i)\n    b = bitarray(binary)\n    bitarray_dictionary[base] = b\n    reverse_bitarray_dictionary[b] = base\n```\n\nwhich I could then turn into an iterator:\n\n```\ndef characters(bitarray):\n    for i in range(0, len(bitarray), 2):\n        bits = bitarray[i:i+2]\n        yield reverse_bitarray_dictionary[bits]\n\n```\n\nSincerely,\nWesley\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/22", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/22/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/22/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/22", "id": 43012060, "node_id": "MDU6SXNzdWU0MzAxMjA2MA==", "number": 22, "title": "Installation on WIn 7 under python 2.7 & 3.4 ", "user": {"login": "P3Hosting", "id": 8807472, "node_id": "MDQ6VXNlcjg4MDc0NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8807472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P3Hosting", "html_url": "https://github.com/P3Hosting", "followers_url": "https://api.github.com/users/P3Hosting/followers", "following_url": "https://api.github.com/users/P3Hosting/following{/other_user}", "gists_url": "https://api.github.com/users/P3Hosting/gists{/gist_id}", "starred_url": "https://api.github.com/users/P3Hosting/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P3Hosting/subscriptions", "organizations_url": "https://api.github.com/users/P3Hosting/orgs", "repos_url": "https://api.github.com/users/P3Hosting/repos", "events_url": "https://api.github.com/users/P3Hosting/events{/privacy}", "received_events_url": "https://api.github.com/users/P3Hosting/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-09-17T13:42:23Z", "updated_at": "2019-08-15T14:22:56Z", "closed_at": "2019-04-17T04:51:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running setup.py install results in an error. This happens for both 2.7 & 3.4 versions of python\nX:>c:/python34/python.exe setup.py install\nrunning install\nrunning build\nrunning build_py\ncreating build\ncreating build\\lib.win-amd64-3.4\ncreating build\\lib.win-amd64-3.4\\bitarray\ncopying bitarray\\test_bitarray.py -> build\\lib.win-amd64-3.4\\bitarray\ncopying bitarray__init__.py -> build\\lib.win-amd64-3.4\\bitarray\nrunning build_ext\nbuilding 'bitarray._bitarray' extension\nerror: Unable to find vcvarsall.bat\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/21", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/21/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/21/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/21", "id": 40794430, "node_id": "MDU6SXNzdWU0MDc5NDQzMA==", "number": 21, "title": "Endian-neutral functions", "user": {"login": "sumerc", "id": 136531, "node_id": "MDQ6VXNlcjEzNjUzMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/136531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sumerc", "html_url": "https://github.com/sumerc", "followers_url": "https://api.github.com/users/sumerc/followers", "following_url": "https://api.github.com/users/sumerc/following{/other_user}", "gists_url": "https://api.github.com/users/sumerc/gists{/gist_id}", "starred_url": "https://api.github.com/users/sumerc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sumerc/subscriptions", "organizations_url": "https://api.github.com/users/sumerc/orgs", "repos_url": "https://api.github.com/users/sumerc/repos", "events_url": "https://api.github.com/users/sumerc/events{/privacy}", "received_events_url": "https://api.github.com/users/sumerc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-21T11:16:38Z", "updated_at": "2014-08-21T11:36:32Z", "closed_at": "2014-08-21T11:31:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am just talking out loudly, did not think about it too much, but:\n\nIt might be a good idea to detect endianness at runtime, and functions can be implemented in a endian neutral way. Let's say I have a huge bitset holding read articles of a user in a database. I will search the first free bit to find first underad article but, the returned index might differ between big-little endian platforms. \n\nIs it not a good idea to have endian-neutral functions by default?(and naturally user might explicitly change this setting) \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/19", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/19/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/19/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/19", "id": 32118538, "node_id": "MDU6SXNzdWUzMjExODUzOA==", "number": 19, "title": "Need to iterator over a bitmap to get all the indexes of 1 bits, how can i do this.", "user": {"login": "yihuang", "id": 236070, "node_id": "MDQ6VXNlcjIzNjA3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/236070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yihuang", "html_url": "https://github.com/yihuang", "followers_url": "https://api.github.com/users/yihuang/followers", "following_url": "https://api.github.com/users/yihuang/following{/other_user}", "gists_url": "https://api.github.com/users/yihuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yihuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yihuang/subscriptions", "organizations_url": "https://api.github.com/users/yihuang/orgs", "repos_url": "https://api.github.com/users/yihuang/repos", "events_url": "https://api.github.com/users/yihuang/events{/privacy}", "received_events_url": "https://api.github.com/users/yihuang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-24T03:54:06Z", "updated_at": "2019-10-31T06:14:29Z", "closed_at": "2019-10-31T06:14:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks, i'm trying to iterate a redis bitmap value.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/17", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/17/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/17/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/17", "id": 24728383, "node_id": "MDU6SXNzdWUyNDcyODM4Mw==", "number": 17, "title": "Inconsistent behavior", "user": {"login": "slowkow", "id": 209714, "node_id": "MDQ6VXNlcjIwOTcxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/209714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slowkow", "html_url": "https://github.com/slowkow", "followers_url": "https://api.github.com/users/slowkow/followers", "following_url": "https://api.github.com/users/slowkow/following{/other_user}", "gists_url": "https://api.github.com/users/slowkow/gists{/gist_id}", "starred_url": "https://api.github.com/users/slowkow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slowkow/subscriptions", "organizations_url": "https://api.github.com/users/slowkow/orgs", "repos_url": "https://api.github.com/users/slowkow/repos", "events_url": "https://api.github.com/users/slowkow/events{/privacy}", "received_events_url": "https://api.github.com/users/slowkow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-23T23:14:45Z", "updated_at": "2014-11-03T18:49:01Z", "closed_at": "2014-11-03T18:49:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I execute the same command twice and get different results. Why would this happen?\n\nI'm using bitarray 0.8.1 with Python 2.7.3 on Ubuntu Linux 12.04 64 bit.\n\n``` python\nIn [301]: x = bitarray(20); x[0:2] = True; x[4:7] = True; x[9:20] = True; x\nOut[301]: bitarray('11011110111111111111')\n\nIn [302]: x = bitarray(20); x[0:2] = True; x[4:7] = True; x[9:20] = True; x\nOut[302]: bitarray('11011110011111111111')\n\nIn [303]: x = bitarray(20); x[0:2] = True; x[4:7] = True; x[9:20] = True; x\nOut[303]: bitarray('11111110011111111111')\n\nIn [304]: x = bitarray(20); x[0:2] = True; x[4:7] = True; x[9:20] = True; x\nOut[304]: bitarray('11101110011111111111')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/13", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/13/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/13/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/13", "id": 17785451, "node_id": "MDU6SXNzdWUxNzc4NTQ1MQ==", "number": 13, "title": "use bitarray as daemon?", "user": {"login": "solos", "id": 542246, "node_id": "MDQ6VXNlcjU0MjI0Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/542246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solos", "html_url": "https://github.com/solos", "followers_url": "https://api.github.com/users/solos/followers", "following_url": "https://api.github.com/users/solos/following{/other_user}", "gists_url": "https://api.github.com/users/solos/gists{/gist_id}", "starred_url": "https://api.github.com/users/solos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solos/subscriptions", "organizations_url": "https://api.github.com/users/solos/orgs", "repos_url": "https://api.github.com/users/solos/repos", "events_url": "https://api.github.com/users/solos/events{/privacy}", "received_events_url": "https://api.github.com/users/solos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-08-08T02:48:05Z", "updated_at": "2013-11-03T00:47:48Z", "closed_at": "2013-11-03T00:47:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to use bitarray as daemon or will it be supported in the future?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/12", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/12/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/12/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/12", "id": 17481434, "node_id": "MDU6SXNzdWUxNzQ4MTQzNA==", "number": 12, "title": "Segmentation fault using bitarray", "user": {"login": "srobertjames", "id": 662612, "node_id": "MDQ6VXNlcjY2MjYxMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/662612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srobertjames", "html_url": "https://github.com/srobertjames", "followers_url": "https://api.github.com/users/srobertjames/followers", "following_url": "https://api.github.com/users/srobertjames/following{/other_user}", "gists_url": "https://api.github.com/users/srobertjames/gists{/gist_id}", "starred_url": "https://api.github.com/users/srobertjames/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srobertjames/subscriptions", "organizations_url": "https://api.github.com/users/srobertjames/orgs", "repos_url": "https://api.github.com/users/srobertjames/repos", "events_url": "https://api.github.com/users/srobertjames/events{/privacy}", "received_events_url": "https://api.github.com/users/srobertjames/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-31T22:43:19Z", "updated_at": "2019-04-19T23:18:44Z", "closed_at": "2019-04-19T23:18:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.  I just installed bitarray and have found a segfault.  I'm able to reduce it down to this code:\n\nIn [1]: from bitarray import *\nIn [2]: b = bitarray([False, True, False, False, True])\nIn [3]: t = bitarray([True])\nIn [4]: b.itersearch(t)\nzsh: segmentation fault  ipython\n\nUsing:\nPython 2.7.2+ (default, Jul 20 2012, 22:15:08) \n[GCC 4.6.1] on linux2\nInstalled bitarray using easy_install\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/11", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/11/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/11/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/11", "id": 12621459, "node_id": "MDU6SXNzdWUxMjYyMTQ1OQ==", "number": 11, "title": "Overwriting bitarray", "user": {"login": "agoose77", "id": 1248413, "node_id": "MDQ6VXNlcjEyNDg0MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1248413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agoose77", "html_url": "https://github.com/agoose77", "followers_url": "https://api.github.com/users/agoose77/followers", "following_url": "https://api.github.com/users/agoose77/following{/other_user}", "gists_url": "https://api.github.com/users/agoose77/gists{/gist_id}", "starred_url": "https://api.github.com/users/agoose77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agoose77/subscriptions", "organizations_url": "https://api.github.com/users/agoose77/orgs", "repos_url": "https://api.github.com/users/agoose77/repos", "events_url": "https://api.github.com/users/agoose77/events{/privacy}", "received_events_url": "https://api.github.com/users/agoose77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-03-29T22:37:03Z", "updated_at": "2019-05-24T08:30:42Z", "closed_at": "2019-05-24T08:30:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Ilan, \nIt seems illogical to me (being the purpose of my task to identify packet contents using a bitarray) that one cannot set the contents of the bitarray from bytes, instead only extending the bitarray. Furthermore, one cannot read the bitarray as an integer, nor construct one from bytes directly. Could you offer any assistance?\nThanks, Angus.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/10", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/10/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/10/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/10", "id": 10399877, "node_id": "MDU6SXNzdWUxMDM5OTg3Nw==", "number": 10, "title": "Segmentation Fault when casted to int", "user": {"login": "D3f0", "id": 46064, "node_id": "MDQ6VXNlcjQ2MDY0", "avatar_url": "https://avatars0.githubusercontent.com/u/46064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/D3f0", "html_url": "https://github.com/D3f0", "followers_url": "https://api.github.com/users/D3f0/followers", "following_url": "https://api.github.com/users/D3f0/following{/other_user}", "gists_url": "https://api.github.com/users/D3f0/gists{/gist_id}", "starred_url": "https://api.github.com/users/D3f0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/D3f0/subscriptions", "organizations_url": "https://api.github.com/users/D3f0/orgs", "repos_url": "https://api.github.com/users/D3f0/repos", "events_url": "https://api.github.com/users/D3f0/events{/privacy}", "received_events_url": "https://api.github.com/users/D3f0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-29T00:42:55Z", "updated_at": "2013-03-31T00:56:01Z", "closed_at": "2013-03-31T00:56:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I thought I would get a zero from this code, but an segfault is raised\n\n``` python\n>>> from bitarray import bitarray\n>>> b = bitarray()\n>>> int(b)\n[1]    23442 segmentation fault (core dumped)  python\n```\n\nTested in python 2.7.3 on arch linux 64 bit, installed though pip.\n\nI came across this lib in http://kmike.ru/python-data-structures/ and got interested since it could replace bitfield in my projects.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/9", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/9/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/9/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/9", "id": 7076774, "node_id": "MDU6SXNzdWU3MDc2Nzc0", "number": 9, "title": "link to Windows installers", "user": {"login": "billhayes", "id": 1766735, "node_id": "MDQ6VXNlcjE3NjY3MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1766735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billhayes", "html_url": "https://github.com/billhayes", "followers_url": "https://api.github.com/users/billhayes/followers", "following_url": "https://api.github.com/users/billhayes/following{/other_user}", "gists_url": "https://api.github.com/users/billhayes/gists{/gist_id}", "starred_url": "https://api.github.com/users/billhayes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billhayes/subscriptions", "organizations_url": "https://api.github.com/users/billhayes/orgs", "repos_url": "https://api.github.com/users/billhayes/repos", "events_url": "https://api.github.com/users/billhayes/events{/privacy}", "received_events_url": "https://api.github.com/users/billhayes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-09-24T01:21:43Z", "updated_at": "2019-05-12T07:33:52Z", "closed_at": "2019-05-12T07:33:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a link to Windows installers for different Py versions of bitarray:\nhttp://www.lfd.uci.edu/~gohlke/pythonlibs/#bitarray\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/4", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/4/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/4/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/4", "id": 3206820, "node_id": "MDU6SXNzdWUzMjA2ODIw", "number": 4, "title": "bitarray doesn't work with marshal", "user": {"login": "dusty-phillips", "id": 86920, "node_id": "MDQ6VXNlcjg2OTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/86920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dusty-phillips", "html_url": "https://github.com/dusty-phillips", "followers_url": "https://api.github.com/users/dusty-phillips/followers", "following_url": "https://api.github.com/users/dusty-phillips/following{/other_user}", "gists_url": "https://api.github.com/users/dusty-phillips/gists{/gist_id}", "starred_url": "https://api.github.com/users/dusty-phillips/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dusty-phillips/subscriptions", "organizations_url": "https://api.github.com/users/dusty-phillips/orgs", "repos_url": "https://api.github.com/users/dusty-phillips/repos", "events_url": "https://api.github.com/users/dusty-phillips/events{/privacy}", "received_events_url": "https://api.github.com/users/dusty-phillips/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-02-13T18:33:30Z", "updated_at": "2012-02-14T23:58:00Z", "closed_at": "2012-02-14T23:58:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dumping a bitarray directly via marshal does not store the correct format:\n\n``` python\n  >>> from bitarray import bitarray\n  >>> b = bitarray('10001101')\n  >>> b\n  bitarray('10001101')\n  >>> import marshal\n  >>> s = marshal.dumps(b)\n  >>> c = marshal.loads(s)\n  >>> c\n  '\\x8d'\n  >>> b # for comparison\n  bitarray('10001101')\n```\n\nA workaround is to dump and load mytes:\n\n``` python\n  >>> s = marshal.dumps(b.tobytes())\n  >>> c = bitarray()\n  >>> c.frombytes(marshal.loads(s))\n  >>> c\n  bitarray('10001101')\n  >>> b # for comparison\n  bitarray('10001101')\n```\n\nIt would be more convenient when marshaling bitarrays stored in lists, dicts, etc if it was not necessary to do this conversion.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ilanschnell/bitarray/issues/1", "repository_url": "https://api.github.com/repos/ilanschnell/bitarray", "labels_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/1/comments", "events_url": "https://api.github.com/repos/ilanschnell/bitarray/issues/1/events", "html_url": "https://github.com/ilanschnell/bitarray/issues/1", "id": 2935911, "node_id": "MDU6SXNzdWUyOTM1OTEx", "number": 1, "title": "bitarray.tostring behavior change between 0.3.5 and 0.4.0", "user": {"login": "tvo", "id": 43037, "node_id": "MDQ6VXNlcjQzMDM3", "avatar_url": "https://avatars3.githubusercontent.com/u/43037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tvo", "html_url": "https://github.com/tvo", "followers_url": "https://api.github.com/users/tvo/followers", "following_url": "https://api.github.com/users/tvo/following{/other_user}", "gists_url": "https://api.github.com/users/tvo/gists{/gist_id}", "starred_url": "https://api.github.com/users/tvo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tvo/subscriptions", "organizations_url": "https://api.github.com/users/tvo/orgs", "repos_url": "https://api.github.com/users/tvo/repos", "events_url": "https://api.github.com/users/tvo/events{/privacy}", "received_events_url": "https://api.github.com/users/tvo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-01-23T15:12:25Z", "updated_at": "2012-01-24T13:12:48Z", "closed_at": "2012-01-24T13:12:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm using bitarray, and I noticed a change in behavior of tostring.\n\nIn 0.3.5, the following code works:\n\n```\n>>> from bitarray import bitarray\n>>> bitarray(\"11111111\").tostring()\n'\\xff'\n```\n\nWhile in 0.4.0 and HEAD, it doesn't work:\n\n```\n>>> from bitarray import bitarray\n>>> bitarray(\"11111111\").tostring()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/.../virtualenv/lib/python2.7/site-packages/bitarray/__init__.py\", line 91, in tostring\n    return self.tobytes().decode()\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xff in position 0: ordinal not in range(128)\n```\n\nI noticed in 0.4.0 also `tobytes()` and `frombytes()` have been introduced. So my question is: is the change in behavior of `tostring()` intended and should I update my code to use `tobytes()` if bitarray >= 0.4.0 is detected, or is this change of behavior a bug in bitarray?\n\n-Tobi\n", "performed_via_github_app": null, "score": 1.0}]}