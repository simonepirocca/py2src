{"total_count": 109, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/243", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/243/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/243/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/243", "id": 560881267, "node_id": "MDU6SXNzdWU1NjA4ODEyNjc=", "number": 243, "title": "Bulk move to last page works incorrect when it is too small [bug]", "user": {"login": "AndreyMZ", "id": 9609370, "node_id": "MDQ6VXNlcjk2MDkzNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9609370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreyMZ", "html_url": "https://github.com/AndreyMZ", "followers_url": "https://api.github.com/users/AndreyMZ/followers", "following_url": "https://api.github.com/users/AndreyMZ/following{/other_user}", "gists_url": "https://api.github.com/users/AndreyMZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreyMZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreyMZ/subscriptions", "organizations_url": "https://api.github.com/users/AndreyMZ/orgs", "repos_url": "https://api.github.com/users/AndreyMZ/repos", "events_url": "https://api.github.com/users/AndreyMZ/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreyMZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-06T09:25:24Z", "updated_at": "2020-03-04T00:03:16Z", "closed_at": "2020-03-04T00:03:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Impact\r\nThe data in the database becomes inconsistent if you do this.\r\n\r\n### Steps to reproduce\r\n1. Run the [example](https://github.com/jrief/django-admin-sortable2/tree/45b8d026124b104e90500e41ee6d0948fb8f86b2/example) app.\r\n2. Go to sortable books: http://127.0.0.1:8000/admin/testapp/sortablebook/\r\n3. Select more than 5 items, e.g first 6 items: \"The Mythical Man-Month\", \"Design Patterns\", ..., \"Refactoring\".\r\n4. Select action *Move selected to last page* and click *Go*.\r\n5. Go to the last page: http://127.0.0.1:8000/admin/testapp/sortablebook/?p=2\r\n\r\n### Actual result\r\nInconsistent:\r\n1. \"Design Patterns\" with order 26.\r\n2. ... with order 27\r\n3. ... with order 28\r\n4. ... with order 29\r\n5. \"Refactoring\" with order **30**!\r\n\r\n### Expected result\r\nError, because the last page size (5) is too small for 6 items. No changes in orders.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/242", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/242/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/242/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/242", "id": 560863042, "node_id": "MDU6SXNzdWU1NjA4NjMwNDI=", "number": 242, "title": "Bulk move works incorrect when sorting order is descending [bug]", "user": {"login": "AndreyMZ", "id": 9609370, "node_id": "MDQ6VXNlcjk2MDkzNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9609370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreyMZ", "html_url": "https://github.com/AndreyMZ", "followers_url": "https://api.github.com/users/AndreyMZ/followers", "following_url": "https://api.github.com/users/AndreyMZ/following{/other_user}", "gists_url": "https://api.github.com/users/AndreyMZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreyMZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreyMZ/subscriptions", "organizations_url": "https://api.github.com/users/AndreyMZ/orgs", "repos_url": "https://api.github.com/users/AndreyMZ/repos", "events_url": "https://api.github.com/users/AndreyMZ/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreyMZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-06T08:50:32Z", "updated_at": "2020-03-04T00:03:16Z", "closed_at": "2020-03-04T00:03:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Steps to reproduce\r\n1. Run the [example](https://github.com/jrief/django-admin-sortable2/tree/45b8d026124b104e90500e41ee6d0948fb8f86b2/example) app.\r\n\t* Change [`SortableBookAdmin.list_display`](https://github.com/jrief/django-admin-sortable2/blob/master/example/testapp/admin.py#L24) to `['my_order', 'author', 'title']`.\r\n\t  This is required to workaround bug #241 until it is fixed.\r\n2. Go to sortable books: http://127.0.0.1:8000/admin/testapp/sortablebook/\r\n3. Sort table by *MY ORDER* descending: http://127.0.0.1:8000/admin/testapp/sortablebook/?o=-1\r\n4. Go to page *2*: http://127.0.0.1:8000/admin/testapp/sortablebook/?o=-1&p=1\r\n5. Select any two items, e.g. \"Learning jQuery\" (2nd) and \"Learning Python\" (4th).\r\n6. Select action *Move selected ... pages back* and click *Go*.\r\n7. Go to page *1*: http://127.0.0.1:8000/admin/testapp/sortablebook/?o=-1&p=0\r\n\r\n### Actual result\r\nInconsistent:\r\n1. \"Learn to Program with Minecraft Plugins\"\r\n2. \"Learning Python\"\r\n3. \"Practices of an Agile Developer\"\r\n4. \"Learning jQuery\"\r\n\r\n### Expected result\r\nAll the selected items are at the top of the page in the same relative order:\r\n1. \"Learning jQuery\"\r\n2. \"Learning Python\"\r\n3. \"Learn to Program with Minecraft Plugins\"\r\n4. \"Practices of an Agile Developer\"\r\n\r\n### Additional information\r\nMoving forward works incorrect too.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/241", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/241/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/241/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/241", "id": 560850744, "node_id": "MDU6SXNzdWU1NjA4NTA3NDQ=", "number": 241, "title": "Cannot move items when the order column is not first [bug]", "user": {"login": "AndreyMZ", "id": 9609370, "node_id": "MDQ6VXNlcjk2MDkzNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9609370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreyMZ", "html_url": "https://github.com/AndreyMZ", "followers_url": "https://api.github.com/users/AndreyMZ/followers", "following_url": "https://api.github.com/users/AndreyMZ/following{/other_user}", "gists_url": "https://api.github.com/users/AndreyMZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreyMZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreyMZ/subscriptions", "organizations_url": "https://api.github.com/users/AndreyMZ/orgs", "repos_url": "https://api.github.com/users/AndreyMZ/repos", "events_url": "https://api.github.com/users/AndreyMZ/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreyMZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-06T08:22:39Z", "updated_at": "2020-03-04T00:03:15Z", "closed_at": "2020-03-04T00:03:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Problem description\r\nIf the order column is not the first one (in `list_display`) and the sorting order is not default (the URL has `o` parameter), then it is not possible to move items.\r\n\r\n### Steps to reproduce\r\n1. Run the [example](https://github.com/jrief/django-admin-sortable2/tree/45b8d026124b104e90500e41ee6d0948fb8f86b2/example) app.\r\n2. Go to sortable books: http://127.0.0.1:8000/admin/testapp/sortablebook/\r\n3. Click on the *MY ORDER* column header one or more times.\r\n\r\n### Actual result\r\n![actual](https://user-images.githubusercontent.com/9609370/73918387-22b92300-48f4-11ea-91da-79e711acf498.png)\r\n\r\n### Expected result\r\n![expected](https://user-images.githubusercontent.com/9609370/73918400-277dd700-48f4-11ea-9d49-9cefa3239cf2.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/240", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/240/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/240/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/240", "id": 556457064, "node_id": "MDU6SXNzdWU1NTY0NTcwNjQ=", "number": 240, "title": "Could you please make a new release to fix the `ugettext_lazy` deprecation warning?", "user": {"login": "coredumperror", "id": 413571, "node_id": "MDQ6VXNlcjQxMzU3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/413571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coredumperror", "html_url": "https://github.com/coredumperror", "followers_url": "https://api.github.com/users/coredumperror/followers", "following_url": "https://api.github.com/users/coredumperror/following{/other_user}", "gists_url": "https://api.github.com/users/coredumperror/gists{/gist_id}", "starred_url": "https://api.github.com/users/coredumperror/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coredumperror/subscriptions", "organizations_url": "https://api.github.com/users/coredumperror/orgs", "repos_url": "https://api.github.com/users/coredumperror/repos", "events_url": "https://api.github.com/users/coredumperror/events{/privacy}", "received_events_url": "https://api.github.com/users/coredumperror/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-28T20:42:34Z", "updated_at": "2020-05-01T19:23:41Z", "closed_at": "2020-05-01T19:23:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm currently updating one of my code shop's apps to Django 3.0, and our policy is to avoid deprecation warnings. With our own code updated, the warnings we still get are from django-admin-sortable2. I see that you've already fixed the `ugettext_lazy` deprecation warning in master, but that was after the 0.7.5 release last month.\r\n\r\nI would greatly appreciate it if you could release version 0.7.6 asap, so I can pin my requirements file to a version with no deprecation warnings. Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/239", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/239/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/239/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/239", "id": 553086265, "node_id": "MDU6SXNzdWU1NTMwODYyNjU=", "number": 239, "title": "Conflict with django-tagulous", "user": {"login": "alex-msk", "id": 1683121, "node_id": "MDQ6VXNlcjE2ODMxMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1683121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-msk", "html_url": "https://github.com/alex-msk", "followers_url": "https://api.github.com/users/alex-msk/followers", "following_url": "https://api.github.com/users/alex-msk/following{/other_user}", "gists_url": "https://api.github.com/users/alex-msk/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-msk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-msk/subscriptions", "organizations_url": "https://api.github.com/users/alex-msk/orgs", "repos_url": "https://api.github.com/users/alex-msk/repos", "events_url": "https://api.github.com/users/alex-msk/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-msk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-21T19:40:00Z", "updated_at": "2020-05-01T19:24:22Z", "closed_at": "2020-05-01T19:24:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Try to use django-admin-sortable2 with django-tagulous (https://github.com/radiac/django-tagulous). \r\n\r\nAs a result, neither \"django-tagulous\" nor \"django-admin-sortable2\" work.\r\n\r\nI get an error in the console\r\n\r\n`TypeError: $el.select2 is not a function. (In '$el.select2(args)', '$el.select2' is undefined)`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/237", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/237/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/237/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/237", "id": 547334470, "node_id": "MDU6SXNzdWU1NDczMzQ0NzA=", "number": 237, "title": "Many to many field - sorting still not working property", "user": {"login": "DawidPL", "id": 32899009, "node_id": "MDQ6VXNlcjMyODk5MDA5", "avatar_url": "https://avatars0.githubusercontent.com/u/32899009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DawidPL", "html_url": "https://github.com/DawidPL", "followers_url": "https://api.github.com/users/DawidPL/followers", "following_url": "https://api.github.com/users/DawidPL/following{/other_user}", "gists_url": "https://api.github.com/users/DawidPL/gists{/gist_id}", "starred_url": "https://api.github.com/users/DawidPL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DawidPL/subscriptions", "organizations_url": "https://api.github.com/users/DawidPL/orgs", "repos_url": "https://api.github.com/users/DawidPL/repos", "events_url": "https://api.github.com/users/DawidPL/events{/privacy}", "received_events_url": "https://api.github.com/users/DawidPL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-09T08:50:36Z", "updated_at": "2020-01-21T12:10:25Z", "closed_at": "2020-01-21T12:10:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello again.\r\nI asked a question few days ago:\r\nhttps://github.com/jrief/django-admin-sortable2/issues/234\r\n\r\nI thought sorting is working properly with this solution but it's not. It's strange because sometimes it sorting part of images or only one, sometimes sorting in wrong order and sometimes doesn't sorting at all. I also make some language changes in adminsortable2 tabular.html - mayby there is a problem? \r\n\r\nHere is the part of my code:\r\n\r\nmodels.py\r\n```python\r\nclass Homepage(models.Model):\r\n\r\n    gallery = models.OneToOneField('Gallery', related_name='gallery', on_delete=models.SET_NULL, null=True, blank=True)\r\n\r\n\r\nclass Gallery(models.Model):\r\n\r\n    graphics = models.ManyToManyField('Image', through='GalleryPanel')\r\n\r\n\r\nclass GalleryPanel(models.Model):\r\n\r\n    gallery = models.ForeignKey('Gallery', on_delete=models.CASCADE)\r\n    image = models.ForeignKey('Image', on_delete=models.CASCADE)\r\n    my_order = models.PositiveIntegerField(default=0,  blank=False, null=False)\r\n\r\n    class Meta:\r\n        ordering = ['my_order',]\r\n\r\n\r\nclass Image(models.Model):\r\n\r\n    img = OptimizedImageField(upload_to='images', null=True)\r\n```\r\nviews.py\r\n```python\r\n\r\ndef index(request, *args, **kwargs):\r\n    homepage = Homepage.objects.first()\r\n    context = {\r\n        'homepage': homepage,\r\n    }\r\n    return render(request, 'home.html', context)\r\n```\r\nin home.html\r\n```python\r\n\r\n {% for image in homepage.gallery.graphics.all %}\r\n                    <img src=\"{{image.img.url}}\" height=\"300px\"/>\r\n                {% endfor %}\r\n```\r\nin admin.py\r\n```python\r\n\r\nclass ImageTabularInline(SortableInlineAdminMixin, admin.TabularInline):\r\n    model = GalleryPanel\r\n    extra = 1\r\n    ordering = ('my_order',)\r\n\r\n@admin.register(Image)\r\nclass ImageAdmin(admin.ModelAdmin):\r\n    list_display = ('id', 'title', 'thumbnail_display', 'img', \r\n                   'display', 'updated', 'created')\r\n    search_fields = ('img',)\r\n    thumbnail_display = AdminThumbnail(image_field='img_thumbnail')\r\n    actions = ['display_selected', 'hide_selected']\r\n\r\n    def display_selected(self, request, queryset):\r\n        queryset.update(display=True)\r\n\r\n    def hide_selected(self, request, queryset):\r\n        queryset.update(display=False)\r\n\r\n    display_selected.short_description = 'show images'\r\n    hide_selected.short_description = 'hide images'\r\n\r\n\r\n@admin.register(GalleryPanel)\r\nclass GalleryPanelAdmin(admin.ModelAdmin):\r\n    list_display = ('image',)\r\n    search_fields = ('image',)\r\n\r\n@admin.register(Gallery)\r\nclass GalleryAdmin(admin.ModelAdmin):\r\n    list_display = ('title', 'display', 'updated', 'created')\r\n    inlines = (ImageTabularInline, )\r\n\r\n```\r\nadminsortable2 -> tabular.html\r\n```python\r\n{% load i18n admin_urls static admin_modify %}\r\n<div class=\"inline-group sortable\" id=\"{{ inline_admin_formset.formset.prefix }}-group\">\r\n  <div class=\"tabular inline-related {% if forloop.last %}last-related{% endif %}\">\r\n{{ inline_admin_formset.formset.management_form }}\r\n<fieldset class=\"module {{ inline_admin_formset.classes }}\">\r\n   <h2>{{ inline_admin_formset.opts.verbose_name_plural|capfirst }}</h2>\r\n   {{ inline_admin_formset.formset.non_form_errors }}\r\n   <table>\r\n     <thead><tr><th>{% trans \"Sortowanie drag&drop\" %}</th>\r\n     {% for field in inline_admin_formset.fields %}\r\n       {% if not field.widget.is_hidden %}\r\n         <th{% if forloop.first %} colspan=\"2\"{% endif %}{% if field.required %} class=\"required\"{% endif %}>{{ field.label|capfirst }}\r\n         {% if field.help_text %}&nbsp;<img src=\"{% static \"admin/img/icon-unknown.svg\" %}\" class=\"help help-tooltip\" width=\"10\" height=\"10\" alt=\"({{ field.help_text|striptags }})\" title=\"{{ field.help_text|striptags }}\" />{% endif %}\r\n         </th>\r\n       {% endif %}\r\n     {% endfor %}\r\n     {% if inline_admin_formset.formset.can_delete %}<th>{% trans \"Usu\u0144\" %}</th>{% endif %}\r\n     </tr></thead>\r\n\r\n     <tbody>\r\n     {% for inline_admin_form in inline_admin_formset %}\r\n        {% if inline_admin_form.form.non_field_errors %}\r\n        <tr><td colspan=\"{{ inline_admin_form|cell_count|add:1 }}\">{{ inline_admin_form.form.non_field_errors }}</td></tr>\r\n        {% endif %}\r\n        <tr class=\"form-row {% cycle \"row1\" \"row2\" %} {% if inline_admin_form.original or inline_admin_form.show_url %}has_original{% endif %}{% if forloop.last %} empty-form{% endif %}\"\r\n             id=\"{{ inline_admin_formset.formset.prefix }}-{% if not forloop.last %}{{ forloop.counter0 }}{% else %}empty{% endif %}\">\r\n        <td class=\"drag\">&nbsp;</td>\r\n        <td class=\"original\">\r\n          {% if inline_admin_form.original or inline_admin_form.show_url %}<p>\r\n          {% if inline_admin_form.original %}\r\n          {{ inline_admin_form.original }}\r\n          {% if inline_admin_form.model_admin.show_change_link and inline_admin_form.model_admin.has_registered_model %}<a href=\"{% url inline_admin_form.model_admin.opts|admin_urlname:'change' inline_admin_form.original.pk|admin_urlquote %}\" class=\"inlinechangelink\">{% trans \"Zmie\u0144\" %}</a>{% endif %}\r\n          {% endif %}\r\n          {% if inline_admin_form.show_url %}<a href=\"{{ inline_admin_form.absolute_url }}\">{% trans \"Zobacz na stronie\" %}</a>{% endif %}\r\n            </p>{% endif %}\r\n          {% if inline_admin_form.needs_explicit_pk_field %}{{ inline_admin_form.pk_field.field }}{% endif %}\r\n          {{ inline_admin_form.fk_field.field }}\r\n          {% spaceless %}\r\n          {% for fieldset in inline_admin_form %}\r\n            {% for line in fieldset %}\r\n              {% for field in line %}\r\n                {% if field.field.is_hidden %} {{ field.field }} {% endif %}\r\n              {% endfor %}\r\n            {% endfor %}\r\n          {% endfor %}\r\n          {% endspaceless %}\r\n        </td>\r\n        {% for fieldset in inline_admin_form %}\r\n          {% for line in fieldset %}\r\n            {% for field in line %}\r\n              {% if not field.field.is_hidden %}\r\n              <td{% if field.field.name %} class=\"field-{{ field.field.name }}\"{% endif %}>\r\n              {% if field.is_readonly %}\r\n                  <p>{{ field.contents }}</p>\r\n              {% else %}\r\n                  {{ field.field.errors.as_ul }}\r\n                  {{ field.field }}\r\n              {% endif %}\r\n              </td>\r\n              {% endif %}\r\n            {% endfor %}\r\n          {% endfor %}\r\n        {% endfor %}\r\n        {% if inline_admin_formset.formset.can_delete %}\r\n          <td class=\"delete\">{% if inline_admin_form.original %}{{ inline_admin_form.deletion_field.field }}{% endif %}</td>\r\n        {% endif %}\r\n        </tr>\r\n     {% endfor %}\r\n     </tbody>\r\n   </table>\r\n</fieldset>\r\n  </div>\r\n</div>\r\n\r\n<script type=\"application/json\" class=\"inline-tabular-config\">\r\n{\r\n  \"prefix\": \"{{ inline_admin_formset.formset.prefix|escapejs }}\",\r\n  \"addText\": \"{% filter escapejs %}{% blocktrans with inline_admin_formset.opts.verbose_name|capfirst as verbose_name %}Dodaj kolejn\u0105 {{ verbose_name }}{% endblocktrans %}{% endfilter %}\",\r\n  \"deleteText\": \"{% filter escapejs %}{% trans 'Usu\u0144' %}{% endfilter %}\"\r\n}\r\n</script>\r\n<div class=\"default_order_field\" default_order_field=\"{{ inline_admin_formset.formset.default_order_field }}\" default_order_direction=\"{{ inline_admin_formset.formset.default_order_direction }}\"></div>\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/236", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/236/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/236/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/236", "id": 545726243, "node_id": "MDU6SXNzdWU1NDU3MjYyNDM=", "number": 236, "title": "Movable columns, hide", "user": {"login": "ManPython", "id": 25403861, "node_id": "MDQ6VXNlcjI1NDAzODYx", "avatar_url": "https://avatars2.githubusercontent.com/u/25403861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ManPython", "html_url": "https://github.com/ManPython", "followers_url": "https://api.github.com/users/ManPython/followers", "following_url": "https://api.github.com/users/ManPython/following{/other_user}", "gists_url": "https://api.github.com/users/ManPython/gists{/gist_id}", "starred_url": "https://api.github.com/users/ManPython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ManPython/subscriptions", "organizations_url": "https://api.github.com/users/ManPython/orgs", "repos_url": "https://api.github.com/users/ManPython/repos", "events_url": "https://api.github.com/users/ManPython/events{/privacy}", "received_events_url": "https://api.github.com/users/ManPython/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-06T13:27:35Z", "updated_at": "2020-01-06T14:43:43Z", "closed_at": "2020-01-06T14:43:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Movable columns - is request for feature to config columns directions and offer hide if not want or to much.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/234", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/234/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/234/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/234", "id": 541707606, "node_id": "MDU6SXNzdWU1NDE3MDc2MDY=", "number": 234, "title": "Many to Many Relations with Sortable Tabular Inlines is not saving order", "user": {"login": "DawidPL", "id": 32899009, "node_id": "MDQ6VXNlcjMyODk5MDA5", "avatar_url": "https://avatars0.githubusercontent.com/u/32899009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DawidPL", "html_url": "https://github.com/DawidPL", "followers_url": "https://api.github.com/users/DawidPL/followers", "following_url": "https://api.github.com/users/DawidPL/following{/other_user}", "gists_url": "https://api.github.com/users/DawidPL/gists{/gist_id}", "starred_url": "https://api.github.com/users/DawidPL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DawidPL/subscriptions", "organizations_url": "https://api.github.com/users/DawidPL/orgs", "repos_url": "https://api.github.com/users/DawidPL/repos", "events_url": "https://api.github.com/users/DawidPL/events{/privacy}", "received_events_url": "https://api.github.com/users/DawidPL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-23T11:13:06Z", "updated_at": "2020-01-07T08:02:41Z", "closed_at": "2020-01-07T08:02:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to be able to change images order inside each gallery. Everything works fine but when I drag and drop objects it's not saving order 'on fly'. When I click 'save' new order is saved in admin panel however on page is still default order. \r\n\r\n\r\nmodels.py\r\n\r\n```\r\nclass GalleryPanel(models.Model):\r\n    gallery = models.ForeignKey('Gallery', on_delete=models.CASCADE)\r\n    image = models.ForeignKey('Image', on_delete=models.CASCADE)\r\n    my_order = models.PositiveIntegerField(default=0, blank=False, null=False)\r\n\r\n    class Meta:\r\n        ordering = ['my_order',]\r\n\r\nclass Gallery(models.Model):\r\n\r\n    title = models.CharField(max_length=100)\r\n    graphics = models.ManyToManyField('Image', through='GalleryPanel')\r\n\r\nclass Image(models.Model):\r\n    my_order = models.PositiveIntegerField(default=0, blank=False, null=False)\r\n\r\n    class Meta:\r\n        ordering = ['my_order']\r\n```\r\nadmin.py\r\n\r\n```\r\nclass ImageTabularInline(SortableInlineAdminMixin, admin.TabularInline):\r\n    model = Gallery.graphics.through\r\n\r\n@admin.register(GalleryPanel)\r\nclass GalleryPanelAdmin(SortableAdminMixin, admin.ModelAdmin):\r\n    list_display = ('image', 'my_order')\r\n\r\n@admin.register(Gallery)\r\nclass GalleryAdmin(admin.ModelAdmin):\r\n    list_display = ('title', 'display', 'updated', 'created')\r\n    inlines = (ImageTabularInline, )\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/227", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/227/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/227/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/227", "id": 513042293, "node_id": "MDU6SXNzdWU1MTMwNDIyOTM=", "number": 227, "title": "Please, add LICENSE file", "user": {"login": "marcelometal", "id": 665903, "node_id": "MDQ6VXNlcjY2NTkwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/665903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcelometal", "html_url": "https://github.com/marcelometal", "followers_url": "https://api.github.com/users/marcelometal/followers", "following_url": "https://api.github.com/users/marcelometal/following{/other_user}", "gists_url": "https://api.github.com/users/marcelometal/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcelometal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcelometal/subscriptions", "organizations_url": "https://api.github.com/users/marcelometal/orgs", "repos_url": "https://api.github.com/users/marcelometal/repos", "events_url": "https://api.github.com/users/marcelometal/events{/privacy}", "received_events_url": "https://api.github.com/users/marcelometal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-28T00:05:11Z", "updated_at": "2019-10-28T07:58:23Z", "closed_at": "2019-10-28T07:58:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/225", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/225/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/225/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/225", "id": 469196163, "node_id": "MDU6SXNzdWU0NjkxOTYxNjM=", "number": 225, "title": "Release history not updated since 0.6.17", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-17T13:32:49Z", "updated_at": "2019-07-17T15:38:23Z", "closed_at": "2019-07-17T14:09:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThank you for this project.\r\n\r\nThe [release history](https://django-admin-sortable2.readthedocs.io/en/latest/changelog.html) doesn't seem to have been updated since version 0.6.17, which came out Dec 4, 2017, so upgrading is a bit hard as I don't know if I need to change anything about my project. Or am I missing something?\r\n\r\nThanks,\r\n\r\nAdam", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/224", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/224/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/224/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/224", "id": 467762070, "node_id": "MDU6SXNzdWU0Njc3NjIwNzA=", "number": 224, "title": "Visibly updating order numbers in real time - right after moving an item", "user": {"login": "vangravs", "id": 37309220, "node_id": "MDQ6VXNlcjM3MzA5MjIw", "avatar_url": "https://avatars1.githubusercontent.com/u/37309220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vangravs", "html_url": "https://github.com/vangravs", "followers_url": "https://api.github.com/users/vangravs/followers", "following_url": "https://api.github.com/users/vangravs/following{/other_user}", "gists_url": "https://api.github.com/users/vangravs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vangravs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vangravs/subscriptions", "organizations_url": "https://api.github.com/users/vangravs/orgs", "repos_url": "https://api.github.com/users/vangravs/repos", "events_url": "https://api.github.com/users/vangravs/events{/privacy}", "received_events_url": "https://api.github.com/users/vangravs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-13T20:13:42Z", "updated_at": "2019-08-13T20:27:16Z", "closed_at": "2019-08-13T20:27:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\nGreat plugin, works wondrously, many thanks for creating this!!!\r\n\r\nI wish to have the ordering with DAS2, display that value and have it updated after each move. Therefore I made a simple function in my models:\r\n\r\n`    def current_order(self):\r\n        item_order = self.order + 1\r\n        return item_order`\r\n\r\nbut the \"problem\" is that the values update only after a page refresh and I cant figure out how to change these order values in real time, after each drag. It kinda gets confusing when sorting many list items.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/222", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/222/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/222/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/222", "id": 441985475, "node_id": "MDU6SXNzdWU0NDE5ODU0NzU=", "number": 222, "title": "SortableInlineAdminMixin always shows 1 extra Inline form (Django 1.11)", "user": {"login": "jalMogo", "id": 42042460, "node_id": "MDQ6VXNlcjQyMDQyNDYw", "avatar_url": "https://avatars1.githubusercontent.com/u/42042460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jalMogo", "html_url": "https://github.com/jalMogo", "followers_url": "https://api.github.com/users/jalMogo/followers", "following_url": "https://api.github.com/users/jalMogo/following{/other_user}", "gists_url": "https://api.github.com/users/jalMogo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jalMogo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jalMogo/subscriptions", "organizations_url": "https://api.github.com/users/jalMogo/orgs", "repos_url": "https://api.github.com/users/jalMogo/repos", "events_url": "https://api.github.com/users/jalMogo/events{/privacy}", "received_events_url": "https://api.github.com/users/jalMogo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-08T23:26:33Z", "updated_at": "2019-05-09T06:18:44Z", "closed_at": "2019-05-09T06:18:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Repro:\r\nOn Django 1.11, create an inline admin form, eg:\r\n\r\n```python\r\nclass MyInlineModel(SortableInlineAdminMixin, admin.StackedInline):\r\n    model = models.MyInlineModel\r\n    extra = 0\r\n\r\nclass MyModelAdmin(admin.ModelAdmin):\r\n    model = models.MyModel\r\n    inlines = [\r\n        MyModelInline\r\n    ]\r\n\r\n\r\n```\r\n\r\n## Expected:\r\nSince `extra = 0`, there shouldn't be any form fields displayed.\r\nIf we set `extra = 2`, there should only be 2 form fields displayed.\r\n\r\n## Actual:\r\nThere are always `extra + 1` form fields displayed.\r\nie: Setting `extra = 0` will display 1 form field, and setting `extra = 2` will display 3 form fields!\r\n\r\n\r\n## Environment:\r\nDjango 1.11.20\r\n\r\n\r\n## Notes:\r\nIt looks like this bug was introduced in this PR: https://github.com/jrief/django-admin-sortable2/pull/218 which was an effort to resolve another issue here: https://github.com/jrief/django-admin-sortable2/issues/207\r\n\r\nDowngrading from `0.7.1` to `0.7` fixes this issue, but it took a very long time to figure this out!\r\nI think that change should either be reverted, or the changelog should be updated to note that `0.7.1` is not compatible with Django 1.11.\r\n\r\nI suspect this bug effects Django <2.1 as well.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/220", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/220/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/220/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/220", "id": 420404413, "node_id": "MDU6SXNzdWU0MjA0MDQ0MTM=", "number": 220, "title": "Django 2.1 gives error due to prefilling list_display_links", "user": {"login": "BrendaH", "id": 5462600, "node_id": "MDQ6VXNlcjU0NjI2MDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5462600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrendaH", "html_url": "https://github.com/BrendaH", "followers_url": "https://api.github.com/users/BrendaH/followers", "following_url": "https://api.github.com/users/BrendaH/following{/other_user}", "gists_url": "https://api.github.com/users/BrendaH/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrendaH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrendaH/subscriptions", "organizations_url": "https://api.github.com/users/BrendaH/orgs", "repos_url": "https://api.github.com/users/BrendaH/repos", "events_url": "https://api.github.com/users/BrendaH/events{/privacy}", "received_events_url": "https://api.github.com/users/BrendaH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-13T09:47:22Z", "updated_at": "2019-08-14T13:34:01Z", "closed_at": "2019-04-24T21:42:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django: 2.1.7\r\nAdmin sortable2: 0.7\r\n\r\nI have a special admin page where I do not want anything to be a link to the item because users sorting the content are not necessarily allowed to edit the items that can be sorted.\r\nSo, as per the Django docs, I set my settings like this:\r\n\r\n```\r\n    model = WhoIsWhoFunction\r\n    list_display = ['on_whoiswho', 'functionname', ]\r\n    list_display_links = None\r\n    list_editable = ['on_whoiswho']\r\n    sortable_by = []  # Disable sorting on all columns since adminsortable2 will take care of that\r\n```\r\n\r\nAnd then, to my surprise I get the following error:\r\n\r\n`<class 'pe.admin.WhoIsWhoFunctionAdmin'>: (admin.E123) The value of 'on_whoiswho' cannot be in both 'list_editable' and 'list_display_links'.`\r\n\r\nThis is caused by [the code here](https://github.com/jrief/django-admin-sortable2/blob/master/adminsortable2/admin.py#L101):\r\n```\r\n        if not self.list_display_links:\r\n            self.list_display_links = (self.list_display[0],)\r\n```\r\nThis code was there from the beginning, but why? If a developer thinks list_display_links should be empty, why do you fill it? Except for removing the default order field from that list, it does not seem to be used for anything, so why is it set?\r\n\r\nCommenting these lines out solves my problem and does not seem to have a negative effect.\r\n(Changing the order of my list_display fields so a different field than 'on_whoiswho' gets added to list_display_links also removes the error, but that gives me an unwanted link.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/219", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/219/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/219/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/219", "id": 420005557, "node_id": "MDU6SXNzdWU0MjAwMDU1NTc=", "number": 219, "title": "Optional ordering starting from 1", "user": {"login": "ppeczek", "id": 2931838, "node_id": "MDQ6VXNlcjI5MzE4Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2931838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppeczek", "html_url": "https://github.com/ppeczek", "followers_url": "https://api.github.com/users/ppeczek/followers", "following_url": "https://api.github.com/users/ppeczek/following{/other_user}", "gists_url": "https://api.github.com/users/ppeczek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppeczek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppeczek/subscriptions", "organizations_url": "https://api.github.com/users/ppeczek/orgs", "repos_url": "https://api.github.com/users/ppeczek/repos", "events_url": "https://api.github.com/users/ppeczek/events{/privacy}", "received_events_url": "https://api.github.com/users/ppeczek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-12T14:06:16Z", "updated_at": "2019-03-12T22:35:26Z", "closed_at": "2019-03-12T22:35:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to treat ordering as pages for my urls. Unfortunately it starts from 0, which is very typical for developing, but for that certain use case it's a flow. I imagine that it could be developed by setting variable in my django settings like:\r\n\r\n`ADMINSORTABLE_STARTS_WITH = 1`\r\n\r\nThat would change first value in ordering for 1.\r\n\r\nWhat is your opinion on that feature?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/217", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/217/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/217/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/217", "id": 390003023, "node_id": "MDU6SXNzdWUzOTAwMDMwMjM=", "number": 217, "title": "Configuration for a django-adminsortable2 inline-tabular form is invalid.", "user": {"login": "jpark2320", "id": 19990742, "node_id": "MDQ6VXNlcjE5OTkwNzQy", "avatar_url": "https://avatars3.githubusercontent.com/u/19990742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpark2320", "html_url": "https://github.com/jpark2320", "followers_url": "https://api.github.com/users/jpark2320/followers", "following_url": "https://api.github.com/users/jpark2320/following{/other_user}", "gists_url": "https://api.github.com/users/jpark2320/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpark2320/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpark2320/subscriptions", "organizations_url": "https://api.github.com/users/jpark2320/orgs", "repos_url": "https://api.github.com/users/jpark2320/repos", "events_url": "https://api.github.com/users/jpark2320/events{/privacy}", "received_events_url": "https://api.github.com/users/jpark2320/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-11T23:43:14Z", "updated_at": "2019-01-28T19:32:55Z", "closed_at": "2019-01-21T14:14:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I followed the installation and usage instructions, and I used `SortableInlineAdminMixin` for my TabularInline.\r\n\r\n```\r\nclass ImageInline(SortableInlineAdminMixin, admin.TabularInline):\r\n    model = Image\r\n\r\n\r\n@admin.register(Store)\r\nclass StoreAdmin(admin.ModelAdmin):\r\n    form = StoreForm\r\n    inlines = [\r\n        ImageInline,\r\n    ]\r\n```\r\n\r\nWhen I get into the page for Store in Django admin, the form breaks and it throws the following error on the console on the file `adminsortable2/js/inline-tabular.js`.\r\n\r\n`Configuration for a django-adminsortable2 inline-tabular form is invalid.`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/216", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/216/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/216/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/216", "id": 388238558, "node_id": "MDU6SXNzdWUzODgyMzg1NTg=", "number": 216, "title": "Error: (\"expected token 'end of print statement', got ':'\",)", "user": {"login": "776166", "id": 6876209, "node_id": "MDQ6VXNlcjY4NzYyMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6876209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/776166", "html_url": "https://github.com/776166", "followers_url": "https://api.github.com/users/776166/followers", "following_url": "https://api.github.com/users/776166/following{/other_user}", "gists_url": "https://api.github.com/users/776166/gists{/gist_id}", "starred_url": "https://api.github.com/users/776166/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/776166/subscriptions", "organizations_url": "https://api.github.com/users/776166/orgs", "repos_url": "https://api.github.com/users/776166/repos", "events_url": "https://api.github.com/users/776166/events{/privacy}", "received_events_url": "https://api.github.com/users/776166/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-06T14:30:31Z", "updated_at": "2018-12-06T21:11:17Z", "closed_at": "2018-12-06T15:12:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "(\"expected token 'end of print statement', got ':'\",)\r\n```\r\nRequest Method: | GET\r\nhttp://leopony.dev.madget.net/admin/django/engine/category/\r\n1.11.16\r\nTemplateSyntaxError\r\n(\"expected token 'end of print statement', got ':'\",)\r\n/home/madget/leopony/dev/env3.6/lib/python3.6/site-packages/jinja2/lexer.py in expect, line 384\r\n/home/madget/leopony/dev/env3.6/bin/python\r\n3.6.6\r\n```\r\nError during template rendering\r\nIn template /home/madget/leopony/dev/env3.6/lib/python3.6/site-packages/adminsortable2/templates/adminsortable2/change_list.html, error at line 8\r\n\r\nexpected token 'end of print statement', got ':'\r\n```\r\n{% extends \"admin/change_list.html\" %}\r\n{% block extrahead %}\r\n{{ block.super }}\r\n<script type=\"text/javascript\">\r\nwindow.admin_sortable2 = {\r\nupdate_url: '{{ sortable_update_url }}',\r\ncurrent_page: {{ cl.page_num \\| add:'1' }},\r\ntotal_pages: {{ cl.paginator.num_pages }}\r\n};\r\n</script>\r\n{% endblock %}\r\n```\r\n\r\ndjango==1.11.16", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/215", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/215/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/215/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/215", "id": 384688882, "node_id": "MDU6SXNzdWUzODQ2ODg4ODI=", "number": 215, "title": "Ordering inlines with unique constraint don't work", "user": {"login": "markosep", "id": 26898255, "node_id": "MDQ6VXNlcjI2ODk4MjU1", "avatar_url": "https://avatars0.githubusercontent.com/u/26898255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markosep", "html_url": "https://github.com/markosep", "followers_url": "https://api.github.com/users/markosep/followers", "following_url": "https://api.github.com/users/markosep/following{/other_user}", "gists_url": "https://api.github.com/users/markosep/gists{/gist_id}", "starred_url": "https://api.github.com/users/markosep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markosep/subscriptions", "organizations_url": "https://api.github.com/users/markosep/orgs", "repos_url": "https://api.github.com/users/markosep/repos", "events_url": "https://api.github.com/users/markosep/events{/privacy}", "received_events_url": "https://api.github.com/users/markosep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-27T09:03:37Z", "updated_at": "2018-12-07T07:42:58Z", "closed_at": "2018-12-07T07:42:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Reordering with a unique constraint works in list view, but for some reason it won't work with inline items. Is this a bug or a feature?\r\n\r\nThis is the starting position:\r\n<img width=\"528\" alt=\"screen shot 2018-11-27 at 10 48 14\" src=\"https://user-images.githubusercontent.com/26898255/49069818-e0e21680-f232-11e8-9961-cafd96733f70.png\">\r\n\r\nAfter I try to reorder and save, I get following:\r\n<img width=\"528\" alt=\"screen shot 2018-11-27 at 10 51 46\" src=\"https://user-images.githubusercontent.com/26898255/49069849-f3f4e680-f232-11e8-8a41-cb6b48577912.png\">\r\n\r\nI have a constraint:\r\nunique_together = ('cycle', 'ordinal')\r\n\r\nBased on documentation, I assume adding a unique constraint works only on PostqreSQL. I'm fine with that limitation, if it allows me to add the unique constraint and to make sure that there can't be two objects with the same ordinal.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/214", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/214/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/214/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/214", "id": 382422982, "node_id": "MDU6SXNzdWUzODI0MjI5ODI=", "number": 214, "title": "feature request - specify JSON encoder (or support Hashid field)", "user": {"login": "eyesee1", "id": 2981890, "node_id": "MDQ6VXNlcjI5ODE4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2981890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eyesee1", "html_url": "https://github.com/eyesee1", "followers_url": "https://api.github.com/users/eyesee1/followers", "following_url": "https://api.github.com/users/eyesee1/following{/other_user}", "gists_url": "https://api.github.com/users/eyesee1/gists{/gist_id}", "starred_url": "https://api.github.com/users/eyesee1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eyesee1/subscriptions", "organizations_url": "https://api.github.com/users/eyesee1/orgs", "repos_url": "https://api.github.com/users/eyesee1/repos", "events_url": "https://api.github.com/users/eyesee1/events{/privacy}", "received_events_url": "https://api.github.com/users/eyesee1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-19T22:41:09Z", "updated_at": "2019-08-13T20:27:36Z", "closed_at": "2019-08-13T20:27:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nFairly easy feature request.\r\n\r\nAllow override of the JSON encoder used in update_order (or make one that handles HashID fields) without throwing an exception. \r\n\r\nI ran into some trouble so I had to override the update_order method to stick an encoder in there\r\nthat calls str() on Hashids. https://github.com/nshafer/django-hashid-field\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/213", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/213/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/213/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/213", "id": 379856433, "node_id": "MDU6SXNzdWUzNzk4NTY0MzM=", "number": 213, "title": "Ordering by multiple fields", "user": {"login": "faanq", "id": 41148984, "node_id": "MDQ6VXNlcjQxMTQ4OTg0", "avatar_url": "https://avatars2.githubusercontent.com/u/41148984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faanq", "html_url": "https://github.com/faanq", "followers_url": "https://api.github.com/users/faanq/followers", "following_url": "https://api.github.com/users/faanq/following{/other_user}", "gists_url": "https://api.github.com/users/faanq/gists{/gist_id}", "starred_url": "https://api.github.com/users/faanq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faanq/subscriptions", "organizations_url": "https://api.github.com/users/faanq/orgs", "repos_url": "https://api.github.com/users/faanq/repos", "events_url": "https://api.github.com/users/faanq/events{/privacy}", "received_events_url": "https://api.github.com/users/faanq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-12T16:32:11Z", "updated_at": "2019-01-21T14:16:33Z", "closed_at": "2019-01-21T14:16:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I have have an online book store. On the website, authors can login to admin page (where they can see books only written by them). Right now, when authors sort books or add new ones within their admin pages ordering mixes and doesn't work the proper way. I guess this can be solved by adding another field to \"ordering\" tuple in Meta class of the model ( for example: ('author', 'book_id'), instead of just  ('book_id',)). If I understand correctly, this plugin does not support ordering for multiple fields right now. Maybe there is a hacky way to support this feature?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/211", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/211/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/211/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/211", "id": 371431634, "node_id": "MDU6SXNzdWUzNzE0MzE2MzQ=", "number": 211, "title": "use \"django-admin-sortable2\" in inlines hide \"Add another ...\" ", "user": {"login": "HosseinAssaran", "id": 26246084, "node_id": "MDQ6VXNlcjI2MjQ2MDg0", "avatar_url": "https://avatars3.githubusercontent.com/u/26246084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HosseinAssaran", "html_url": "https://github.com/HosseinAssaran", "followers_url": "https://api.github.com/users/HosseinAssaran/followers", "following_url": "https://api.github.com/users/HosseinAssaran/following{/other_user}", "gists_url": "https://api.github.com/users/HosseinAssaran/gists{/gist_id}", "starred_url": "https://api.github.com/users/HosseinAssaran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HosseinAssaran/subscriptions", "organizations_url": "https://api.github.com/users/HosseinAssaran/orgs", "repos_url": "https://api.github.com/users/HosseinAssaran/repos", "events_url": "https://api.github.com/users/HosseinAssaran/events{/privacy}", "received_events_url": "https://api.github.com/users/HosseinAssaran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-18T09:08:41Z", "updated_at": "2018-10-24T14:45:37Z", "closed_at": "2018-10-24T14:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use this plugin to sort my inlines. \r\nThe problem is:\r\nWithout use this plugin I see \"Add another Chapter\" without problem. Code below works well without this plugin \r\n\r\n```\r\nclass ChapterInline(admin.StackedInline):\r\n    model = models.Chapter\r\n    extra = 1\r\n```\r\n\r\n<img width=\"205\" alt=\"screen shot 2018-10-18 at 12 26 03 pm\" src=\"https://user-images.githubusercontent.com/26246084/47143006-13fac700-d2d1-11e8-86b5-85e32366f2e5.png\">\r\n\r\n But when I add SortableInlineAdminMixin  as new input argument to ChapterInline in admin.py like below example, It hides \"Add another  Chapter\":\r\n\r\n```\r\nclass ChapterInline(SortableInlineAdminMixin, admin.StackedInline):\r\n    model = models.Chapter\r\n    extra = 1\r\n```\r\n\r\n<img width=\"251\" alt=\"screen shot 2018-10-18 at 12 27 37 pm\" src=\"https://user-images.githubusercontent.com/26246084/47143074-3db3ee00-d2d1-11e8-9090-6e7d0d11e198.png\">\r\n\r\nI want to have both of them enable.  I want to be able to sort and also add another active in my project.\r\nPlease help me how can I solve this.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/208", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/208/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/208/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/208", "id": 365918792, "node_id": "MDU6SXNzdWUzNjU5MTg3OTI=", "number": 208, "title": "Inline \"classes=collapse\" option doesn't work with StackedInline", "user": {"login": "timmyomahony", "id": 615149, "node_id": "MDQ6VXNlcjYxNTE0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/615149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timmyomahony", "html_url": "https://github.com/timmyomahony", "followers_url": "https://api.github.com/users/timmyomahony/followers", "following_url": "https://api.github.com/users/timmyomahony/following{/other_user}", "gists_url": "https://api.github.com/users/timmyomahony/gists{/gist_id}", "starred_url": "https://api.github.com/users/timmyomahony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timmyomahony/subscriptions", "organizations_url": "https://api.github.com/users/timmyomahony/orgs", "repos_url": "https://api.github.com/users/timmyomahony/repos", "events_url": "https://api.github.com/users/timmyomahony/events{/privacy}", "received_events_url": "https://api.github.com/users/timmyomahony/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-02T14:15:28Z", "updated_at": "2019-11-21T08:51:08Z", "closed_at": "2019-01-21T14:17:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to add an inline model admin that is collapsed by default, using the [`classes=('collapse',)` admin option:](https://docs.djangoproject.com/en/2.1/ref/contrib/admin/#django.contrib.admin.InlineModelAdmin.classes)\r\n\r\n>  **InlineModelAdmin.classes**\r\n> A list or tuple containing extra CSS classes to apply to the fieldset that is rendered for the inlines. Defaults to None. As with classes configured in fieldsets, inlines with a collapse class will be initially collapsed and their header will have a small \u201cshow\u201d link.\r\n\r\nHere is the example I'm using:\r\n\r\n```\r\nclass FeatureInline(SortableInlineAdminMixin, admin.StackedInline):\r\n    \"\"\"Feature inline\"\"\"\r\n    model = models.Feature\r\n    extra = 0\r\n    classes = ('collapse', )\r\n```\r\n\r\nwhich doesn't seem to work. There is no error, but the inline appears regularly (i.e. not collapsed). \r\n\r\nIf I change to an `admin.TabularInline`, or if I remove `SortableInlineAdminMixin` altogether, the inline will correctly appear collapsed. \r\n\r\nI'm using Django 2.0.7 and the latest `django-admin-sortable2` (0.6.21)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/206", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/206/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/206/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/206", "id": 363057222, "node_id": "MDU6SXNzdWUzNjMwNTcyMjI=", "number": 206, "title": "New release ASAP", "user": {"login": "matevz", "id": 83672, "node_id": "MDQ6VXNlcjgzNjcy", "avatar_url": "https://avatars3.githubusercontent.com/u/83672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matevz", "html_url": "https://github.com/matevz", "followers_url": "https://api.github.com/users/matevz/followers", "following_url": "https://api.github.com/users/matevz/following{/other_user}", "gists_url": "https://api.github.com/users/matevz/gists{/gist_id}", "starred_url": "https://api.github.com/users/matevz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matevz/subscriptions", "organizations_url": "https://api.github.com/users/matevz/orgs", "repos_url": "https://api.github.com/users/matevz/repos", "events_url": "https://api.github.com/users/matevz/events{/privacy}", "received_events_url": "https://api.github.com/users/matevz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-09-24T08:45:06Z", "updated_at": "2019-01-23T16:07:01Z", "closed_at": "2019-01-21T14:13:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Adding new objects when using inlines don't work with the current pip version of django and jquery anymore. This was fixed in revision 2256bb0. Please make a new release ASAP.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/202", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/202/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/202/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/202", "id": 350731052, "node_id": "MDU6SXNzdWUzNTA3MzEwNTI=", "number": 202, "title": "Jquery issue", "user": {"login": "Aupourbau", "id": 17118172, "node_id": "MDQ6VXNlcjE3MTE4MTcy", "avatar_url": "https://avatars0.githubusercontent.com/u/17118172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aupourbau", "html_url": "https://github.com/Aupourbau", "followers_url": "https://api.github.com/users/Aupourbau/followers", "following_url": "https://api.github.com/users/Aupourbau/following{/other_user}", "gists_url": "https://api.github.com/users/Aupourbau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aupourbau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aupourbau/subscriptions", "organizations_url": "https://api.github.com/users/Aupourbau/orgs", "repos_url": "https://api.github.com/users/Aupourbau/repos", "events_url": "https://api.github.com/users/Aupourbau/events{/privacy}", "received_events_url": "https://api.github.com/users/Aupourbau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-15T08:41:59Z", "updated_at": "2018-09-05T22:51:54Z", "closed_at": "2018-08-18T04:31:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI m getting this error in the console for Inline set up (SortableInlineAdminMixin, admin.TabularInline):\r\n\"Configuration for a django-adminsortable2 inline-tabular form is invalid.\"\r\n\r\nIt might be because of Django 2.1  moving to Jquery 3.3.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/201", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/201/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/201/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/201", "id": 348385932, "node_id": "MDU6SXNzdWUzNDgzODU5MzI=", "number": 201, "title": "Not able to drag row in list view, but handle is showing", "user": {"login": "johansoetewey", "id": 26088833, "node_id": "MDQ6VXNlcjI2MDg4ODMz", "avatar_url": "https://avatars0.githubusercontent.com/u/26088833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johansoetewey", "html_url": "https://github.com/johansoetewey", "followers_url": "https://api.github.com/users/johansoetewey/followers", "following_url": "https://api.github.com/users/johansoetewey/following{/other_user}", "gists_url": "https://api.github.com/users/johansoetewey/gists{/gist_id}", "starred_url": "https://api.github.com/users/johansoetewey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johansoetewey/subscriptions", "organizations_url": "https://api.github.com/users/johansoetewey/orgs", "repos_url": "https://api.github.com/users/johansoetewey/repos", "events_url": "https://api.github.com/users/johansoetewey/events{/privacy}", "received_events_url": "https://api.github.com/users/johansoetewey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-07T15:59:47Z", "updated_at": "2019-04-24T21:32:29Z", "closed_at": "2019-04-24T21:32:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having a problem with latest version of django-admin-sortable2.\r\nProblem is that it not possible to drag a row. But it does show the drag hand and image.\r\n\r\nOur biggest changes are moving to Python 3, Django 2.1, latest version of django-admin-sortable2 (07/08). \r\n\r\nBefore the migration it was Python 2.7 and Django 1.8.\r\n\r\nMy admin code looks as following (short version):\r\n```\r\nfrom django.contrib import admin\r\nfrom adminsortable2.admin import SortableAdminMixin, SortableInlineAdminMixin\r\n\r\nfrom .models import *\r\n\r\nclass FilmAdmin(SortableAdminMixin, admin.ModelAdmin):\r\n    list_display = (\r\n        'priority',\r\n        'project_id',\r\n        'title',\r\n        'director',\r\n        'year',\r\n        'url_friendly_name',\r\n        'show_on_website',\r\n        'frontpage'\r\n    )\r\n    list_display_links = (\r\n        'project_id'\r\n    )\r\n    list_editable = (\r\n        'url_friendly_name',\r\n        'show_on_website',\r\n        'frontpage'\r\n    )\r\n    readonly_fields = ('project_id',)\r\n    inlines = [\r\n        InlineFilmSlide,\r\n        InlineSubtitle,\r\n        InlineScreening,\r\n        InlineAward,\r\n        InlineFilmCoproduction,\r\n        InlineFilmProduction,\r\n        InlineFilmSupportOrganisation\r\n    ]\r\n\r\n    def project_id(self, obj):\r\n        return obj.project_id()\r\n\r\nadmin.site.register(Film, FilmAdmin)\r\n```\r\n\r\nMy model looks as following (short version):\r\n```\r\nclass Film(models.Model):\r\n    priority = models.PositiveIntegerField(default=0, blank=False, null=False)\r\n\r\n    class Meta(object):\r\n        ordering = ['priority']\r\n```\r\n\r\nPriority is the sortable field.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/196", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/196/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/196/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/196", "id": 328571440, "node_id": "MDU6SXNzdWUzMjg1NzE0NDA=", "number": 196, "title": "Is this module compatible with django-polymorphic?", "user": {"login": "nachopro", "id": 260549, "node_id": "MDQ6VXNlcjI2MDU0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/260549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nachopro", "html_url": "https://github.com/nachopro", "followers_url": "https://api.github.com/users/nachopro/followers", "following_url": "https://api.github.com/users/nachopro/following{/other_user}", "gists_url": "https://api.github.com/users/nachopro/gists{/gist_id}", "starred_url": "https://api.github.com/users/nachopro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nachopro/subscriptions", "organizations_url": "https://api.github.com/users/nachopro/orgs", "repos_url": "https://api.github.com/users/nachopro/repos", "events_url": "https://api.github.com/users/nachopro/events{/privacy}", "received_events_url": "https://api.github.com/users/nachopro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-01T15:50:25Z", "updated_at": "2018-06-01T19:19:36Z", "closed_at": "2018-06-01T19:19:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm using sortable2 in this way:\r\n\r\n\r\nModel:\r\n```python\r\nclass Showcase(PolymorphicModel):\r\n    title = models.CharField(max_length=100)\r\n\r\n    index = models.PositiveIntegerField(default=0)\r\n    is_enabled = models.BooleanField(default=True)\r\n\r\n    class Meta:\r\n        ordering = ('index',)\r\n\r\n    objects = EnabledManager()\r\n\r\n    def __unicode__(self):\r\n        return u'{} ({})'.format(self.title, u'\u2714' if self.is_enabled else u'\u2718')\r\n```\r\n\r\nAdmin:\r\n```python\r\n@admin.register(Showcase)\r\nclass ShowcaseAdmin(SortableAdminMixin, PolymorphicParentModelAdmin):\r\n    base_model = Showcase\r\n    child_models = (ShowcaseStatus, ShowcaseFeatured, ShowcaseDynamic,\r\n                    ShowcaseAd)\r\n    list_filter = (PolymorphicChildModelFilter,)\r\n\r\n    list_display = (\r\n        'title',\r\n        'polymorphic_ctype',\r\n        'is_enabled'\r\n    )\r\n```\r\nSteps:\r\nI add two registers (without assigning value to `index`).\r\nI sort them.\r\nRefresh the admin page.\r\n\r\nSort unapplyed.\r\n\r\nHere a screenshot https://imgur.com/a/mDNARoN", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/195", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/195/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/195/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/195", "id": 308374143, "node_id": "MDU6SXNzdWUzMDgzNzQxNDM=", "number": 195, "title": "Order validation", "user": {"login": "hillmark", "id": 801177, "node_id": "MDQ6VXNlcjgwMTE3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/801177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hillmark", "html_url": "https://github.com/hillmark", "followers_url": "https://api.github.com/users/hillmark/followers", "following_url": "https://api.github.com/users/hillmark/following{/other_user}", "gists_url": "https://api.github.com/users/hillmark/gists{/gist_id}", "starred_url": "https://api.github.com/users/hillmark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hillmark/subscriptions", "organizations_url": "https://api.github.com/users/hillmark/orgs", "repos_url": "https://api.github.com/users/hillmark/repos", "events_url": "https://api.github.com/users/hillmark/events{/privacy}", "received_events_url": "https://api.github.com/users/hillmark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-25T18:44:31Z", "updated_at": "2018-03-26T09:54:02Z", "closed_at": "2018-03-26T09:53:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `SortableInlineAdminMixin` and would like to validate the proposed sort order raising a `ValidationError` if it fails to meet certain criteria, i.e. models with `name='foo'` cannot be placed before models with `name='bar'`.\r\n\r\nIs this possible? I've tried overriding the `clean` method of my `CustomInlineFormSet` subclass, but the forms always appear in the order they were rendered and their `order` has yet to be updated to reflect the new proposed ordering, so I'm unable to figure out the proposed order.\r\n\r\nThanks.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/193", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/193/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/193/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/193", "id": 306484925, "node_id": "MDU6SXNzdWUzMDY0ODQ5MjU=", "number": 193, "title": "Dragging Inline Entry to Bottom Does Not Relocate to Bottom of List", "user": {"login": "Pinaz993", "id": 4016145, "node_id": "MDQ6VXNlcjQwMTYxNDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4016145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pinaz993", "html_url": "https://github.com/Pinaz993", "followers_url": "https://api.github.com/users/Pinaz993/followers", "following_url": "https://api.github.com/users/Pinaz993/following{/other_user}", "gists_url": "https://api.github.com/users/Pinaz993/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pinaz993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pinaz993/subscriptions", "organizations_url": "https://api.github.com/users/Pinaz993/orgs", "repos_url": "https://api.github.com/users/Pinaz993/repos", "events_url": "https://api.github.com/users/Pinaz993/events{/privacy}", "received_events_url": "https://api.github.com/users/Pinaz993/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-19T14:25:51Z", "updated_at": "2018-03-19T15:15:57Z", "closed_at": "2018-03-19T15:13:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I try to drag an inline entry to the bottom of a list, the bottom entry does not move upwards as it should, making it impossible to drag an entry to the bottom. I must first drag it to the second to the bottom slot, and then drag the last entry upwards to relocate the original entry.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/191", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/191/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/191/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/191", "id": 300921066, "node_id": "MDU6SXNzdWUzMDA5MjEwNjY=", "number": 191, "title": "django-mptt support", "user": {"login": "Senpos", "id": 9695470, "node_id": "MDQ6VXNlcjk2OTU0NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9695470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Senpos", "html_url": "https://github.com/Senpos", "followers_url": "https://api.github.com/users/Senpos/followers", "following_url": "https://api.github.com/users/Senpos/following{/other_user}", "gists_url": "https://api.github.com/users/Senpos/gists{/gist_id}", "starred_url": "https://api.github.com/users/Senpos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Senpos/subscriptions", "organizations_url": "https://api.github.com/users/Senpos/orgs", "repos_url": "https://api.github.com/users/Senpos/repos", "events_url": "https://api.github.com/users/Senpos/events{/privacy}", "received_events_url": "https://api.github.com/users/Senpos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-28T07:39:30Z", "updated_at": "2019-08-13T20:28:34Z", "closed_at": "2019-08-13T20:28:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\n\r\nIs there a way to make `django-admin-sortable2` work with `django-mptt`?\r\n\r\nThey have different approach of ordering and use \r\n```\r\nclass MPTTMeta:\r\n        order_insertion_by = ['name']\r\n```\r\ninstead of \r\n```\r\nclass Meta:\r\n    ordering = ('field',)\r\n```\r\n[described here](https://django-mptt.github.io/django-mptt/tutorial.html#set-up-your-model)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/182", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/182/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/182/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/182", "id": 283110847, "node_id": "MDU6SXNzdWUyODMxMTA4NDc=", "number": 182, "title": "List view list_display _render not working in Django 2.0", "user": {"login": "denhartog", "id": 1668738, "node_id": "MDQ6VXNlcjE2Njg3Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1668738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denhartog", "html_url": "https://github.com/denhartog", "followers_url": "https://api.github.com/users/denhartog/followers", "following_url": "https://api.github.com/users/denhartog/following{/other_user}", "gists_url": "https://api.github.com/users/denhartog/gists{/gist_id}", "starred_url": "https://api.github.com/users/denhartog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denhartog/subscriptions", "organizations_url": "https://api.github.com/users/denhartog/orgs", "repos_url": "https://api.github.com/users/denhartog/repos", "events_url": "https://api.github.com/users/denhartog/events{/privacy}", "received_events_url": "https://api.github.com/users/denhartog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-19T05:43:33Z", "updated_at": "2018-01-04T06:41:34Z", "closed_at": "2018-01-04T06:41:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "List view is broken (screenshot is after on first one: Inspect > Edit as HTML > copy and paste):\r\n<img width=\"168\" alt=\"list\" src=\"https://user-images.githubusercontent.com/1668738/34142078-092d5d46-e43a-11e7-95a5-fb3032a3200c.png\">\r\n\r\nStacked inline _render works just fine:\r\n<img width=\"586\" alt=\"stacked\" src=\"https://user-images.githubusercontent.com/1668738/34142048-ec47376a-e439-11e7-9983-da034ad3fac4.png\">\r\n\r\nTabular inline _render works just fine:\r\n<img width=\"66\" alt=\"tabular\" src=\"https://user-images.githubusercontent.com/1668738/34142070-fc9490e0-e439-11e7-9375-d454d7934acf.png\">", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/179", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/179/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/179/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/179", "id": 277402405, "node_id": "MDU6SXNzdWUyNzc0MDI0MDU=", "number": 179, "title": "Unable dragging the top Faq_Card underneath the bottom Faq_card", "user": {"login": "DannyCarlsson90", "id": 34064297, "node_id": "MDQ6VXNlcjM0MDY0Mjk3", "avatar_url": "https://avatars3.githubusercontent.com/u/34064297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DannyCarlsson90", "html_url": "https://github.com/DannyCarlsson90", "followers_url": "https://api.github.com/users/DannyCarlsson90/followers", "following_url": "https://api.github.com/users/DannyCarlsson90/following{/other_user}", "gists_url": "https://api.github.com/users/DannyCarlsson90/gists{/gist_id}", "starred_url": "https://api.github.com/users/DannyCarlsson90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DannyCarlsson90/subscriptions", "organizations_url": "https://api.github.com/users/DannyCarlsson90/orgs", "repos_url": "https://api.github.com/users/DannyCarlsson90/repos", "events_url": "https://api.github.com/users/DannyCarlsson90/events{/privacy}", "received_events_url": "https://api.github.com/users/DannyCarlsson90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-28T14:23:17Z", "updated_at": "2017-12-07T22:34:24Z", "closed_at": "2017-12-07T22:34:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Address issue when having two Faq_Cards on a Faq, unable dragging the top Faq_Card underneath the bottom Faq_card", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/178", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/178/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/178/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/178", "id": 276771821, "node_id": "MDU6SXNzdWUyNzY3NzE4MjE=", "number": 178, "title": "Feature request: Support Many-to-One relationships", "user": {"login": "mkoistinen", "id": 615759, "node_id": "MDQ6VXNlcjYxNTc1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/615759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkoistinen", "html_url": "https://github.com/mkoistinen", "followers_url": "https://api.github.com/users/mkoistinen/followers", "following_url": "https://api.github.com/users/mkoistinen/following{/other_user}", "gists_url": "https://api.github.com/users/mkoistinen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkoistinen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkoistinen/subscriptions", "organizations_url": "https://api.github.com/users/mkoistinen/orgs", "repos_url": "https://api.github.com/users/mkoistinen/repos", "events_url": "https://api.github.com/users/mkoistinen/events{/privacy}", "received_events_url": "https://api.github.com/users/mkoistinen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-25T19:26:49Z", "updated_at": "2017-12-08T01:41:13Z", "closed_at": "2017-12-08T01:41:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I would like to request support for Many-to-One relationships. In the normal Django way, a la:\r\n\r\n````\r\n# models.py\r\n\r\nclass ModelA(models.Model):\r\n    ...\r\n\r\nclass ModelB(models.Model):\r\n    model_a = models.ForeignKey('ModelA', ..., related_name='model_bs')\r\n\r\n\r\n# admin.py\r\n\r\nclass ModelBInlineAdmin(SortableInlineMixin, admin.TabularInline):\r\n    model = ModelA.model_bs.through\r\n    ....\r\n\r\nclass ModelAAdmin(admin.ModelAdmin):\r\n    inlines = ('ModelBInlineAdmin', ...)\r\n    ....\r\n````\r\n\r\nI just tried it and it sadly fails. I had a look at the `django-admin-sortable2` code, looks like we just need a bit more introspection, but I didn't look _that_ deeply into it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/176", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/176/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/176/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/176", "id": 275684096, "node_id": "MDU6SXNzdWUyNzU2ODQwOTY=", "number": 176, "title": "Not working with bootstrap-admin", "user": {"login": "r0hi7", "id": 21152070, "node_id": "MDQ6VXNlcjIxMTUyMDcw", "avatar_url": "https://avatars3.githubusercontent.com/u/21152070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r0hi7", "html_url": "https://github.com/r0hi7", "followers_url": "https://api.github.com/users/r0hi7/followers", "following_url": "https://api.github.com/users/r0hi7/following{/other_user}", "gists_url": "https://api.github.com/users/r0hi7/gists{/gist_id}", "starred_url": "https://api.github.com/users/r0hi7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r0hi7/subscriptions", "organizations_url": "https://api.github.com/users/r0hi7/orgs", "repos_url": "https://api.github.com/users/r0hi7/repos", "events_url": "https://api.github.com/users/r0hi7/events{/privacy}", "received_events_url": "https://api.github.com/users/r0hi7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-21T11:51:09Z", "updated_at": "2017-11-22T09:29:58Z", "closed_at": "2017-11-22T09:29:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is an element overlap issue with the bootstrap-admin theme.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/175", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/175/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/175/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/175", "id": 270016102, "node_id": "MDU6SXNzdWUyNzAwMTYxMDI=", "number": 175, "title": "MultipleObjectsReturned: get() returned more than one -- it returned 2!", "user": {"login": "nachopro", "id": 260549, "node_id": "MDQ6VXNlcjI2MDU0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/260549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nachopro", "html_url": "https://github.com/nachopro", "followers_url": "https://api.github.com/users/nachopro/followers", "following_url": "https://api.github.com/users/nachopro/following{/other_user}", "gists_url": "https://api.github.com/users/nachopro/gists{/gist_id}", "starred_url": "https://api.github.com/users/nachopro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nachopro/subscriptions", "organizations_url": "https://api.github.com/users/nachopro/orgs", "repos_url": "https://api.github.com/users/nachopro/repos", "events_url": "https://api.github.com/users/nachopro/events{/privacy}", "received_events_url": "https://api.github.com/users/nachopro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-31T16:00:30Z", "updated_at": "2018-03-22T16:58:47Z", "closed_at": "2017-11-22T09:32:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I add a new object to my model, it saves a index = 0, then when I try to sort it I get this error:\r\n\r\n```python\r\nInternal Server Error: /admin/showcases/showcase/adminsortable2_update/\r\nTraceback (most recent call last):\r\n  File \"/home/nachopro/.virtualenvs/rootinks/lib/python2.7/site-packages/django/core/handlers/exception.py\", line 41, in inner\r\n    response = get_response(request)\r\n  File \"/home/nachopro/.virtualenvs/rootinks/lib/python2.7/site-packages/django/core/handlers/base.py\", line 187, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/home/nachopro/.virtualenvs/rootinks/lib/python2.7/site-packages/django/core/handlers/base.py\", line 185, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/home/nachopro/.virtualenvs/rootinks/lib/python2.7/site-packages/django/utils/decorators.py\", line 149, in _wrapped_view\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/home/nachopro/.virtualenvs/rootinks/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\r\n    response = view_func(request, *args, **kwargs)\r\n  File \"/home/nachopro/.virtualenvs/rootinks/lib/python2.7/site-packages/django/contrib/admin/sites.py\", line 224, in inner\r\n    return view(request, *args, **kwargs)\r\n  File \"/home/nachopro/.virtualenvs/rootinks/lib/python2.7/site-packages/adminsortable2/admin.py\", line 200, in update_order\r\n    moved_items = list(self._move_item(request, startorder, endorder))\r\n  File \"/home/nachopro/.virtualenvs/rootinks/lib/python2.7/site-packages/adminsortable2/admin.py\", line 259, in _move_item\r\n    obj = self.model.objects.get(**filters)\r\n  File \"/home/nachopro/.virtualenvs/rootinks/lib/python2.7/site-packages/django/db/models/manager.py\", line 85, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/home/nachopro/.virtualenvs/rootinks/lib/python2.7/site-packages/django/db/models/query.py\", line 384, in get\r\n    (self.model._meta.object_name, num)\r\nMultipleObjectsReturned: get() returned more than one Showcase -- it returned 2!\r\n```\r\n\r\nMy settings.py:\r\n\r\n```python\r\nINSTALLED_APPS = [\r\n    ...\r\n    'adminsortable2',\r\n    ...\r\n]\r\n```\r\n\r\nMy model:\r\n\r\n```python\r\nclass Showcase(PolymorphicModel, AuditModel):\r\n    title = models.CharField(max_length=100)\r\n\r\n    index = models.PositiveIntegerField(default=0)\r\n    is_enabled = models.BooleanField(default=True)\r\n\r\n    class Meta:\r\n        ordering = ('index',)\r\n```\r\n\r\nTo \"solve\" this issue I must edit all objects with non used index value.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/169", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/169/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/169/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/169", "id": 262707917, "node_id": "MDU6SXNzdWUyNjI3MDc5MTc=", "number": 169, "title": "Sortable doesn't see Meta.ordering from Abstract class", "user": {"login": "adi-", "id": 340741, "node_id": "MDQ6VXNlcjM0MDc0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/340741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adi-", "html_url": "https://github.com/adi-", "followers_url": "https://api.github.com/users/adi-/followers", "following_url": "https://api.github.com/users/adi-/following{/other_user}", "gists_url": "https://api.github.com/users/adi-/gists{/gist_id}", "starred_url": "https://api.github.com/users/adi-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adi-/subscriptions", "organizations_url": "https://api.github.com/users/adi-/orgs", "repos_url": "https://api.github.com/users/adi-/repos", "events_url": "https://api.github.com/users/adi-/events{/privacy}", "received_events_url": "https://api.github.com/users/adi-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-04T08:39:17Z", "updated_at": "2017-10-04T08:40:35Z", "closed_at": "2017-10-04T08:40:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/166", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/166/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/166/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/166", "id": 253679150, "node_id": "MDU6SXNzdWUyNTM2NzkxNTA=", "number": 166, "title": "SystemCheckError when ordering from version 0.6.12", "user": {"login": "stueken", "id": 11041129, "node_id": "MDQ6VXNlcjExMDQxMTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/11041129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stueken", "html_url": "https://github.com/stueken", "followers_url": "https://api.github.com/users/stueken/followers", "following_url": "https://api.github.com/users/stueken/following{/other_user}", "gists_url": "https://api.github.com/users/stueken/gists{/gist_id}", "starred_url": "https://api.github.com/users/stueken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stueken/subscriptions", "organizations_url": "https://api.github.com/users/stueken/orgs", "repos_url": "https://api.github.com/users/stueken/repos", "events_url": "https://api.github.com/users/stueken/events{/privacy}", "received_events_url": "https://api.github.com/users/stueken/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-29T14:18:36Z", "updated_at": "2019-08-13T20:07:24Z", "closed_at": "2019-08-13T20:07:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "After updating django-admin-sortable2 in Django 1.11, I'm getting a Django SystemCheckError when updating from 0.6.11 to 0.6.12 and the issue is not solved in the newest version 0.6.15: `\r\n(admin.E111) The value of 'list_display_links[0]' refers to 'selection_type', which is not defined in 'list_display'.` \r\n\r\nI can't really figure out what the problem is, but after removing the `ordering` attribute, the admin works fine. However, I need to accomplish the ordering I've had before the update. \r\n\r\nHere is my Admin:\r\n```python\r\n@admin.register(Selection)                                                                                                                                                                                                                                                                 \r\nclass SelectionAdmin(SortableAdminMixin, admin.ModelAdmin):                                                                                                                                                                                                                                    \r\n    list_display = ('selection_type', 'title')                                                                                                                                                                                                                                             \r\n    list_filter = ('selection_type',)                                                                                                                                                                                                                                                      \r\n    ordering = ('selection_type', '_order')\r\n```\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/164", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/164/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/164/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/164", "id": 249345748, "node_id": "MDU6SXNzdWUyNDkzNDU3NDg=", "number": 164, "title": "Error if list_display contains a callable", "user": {"login": "andybak", "id": 60035, "node_id": "MDQ6VXNlcjYwMDM1", "avatar_url": "https://avatars2.githubusercontent.com/u/60035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andybak", "html_url": "https://github.com/andybak", "followers_url": "https://api.github.com/users/andybak/followers", "following_url": "https://api.github.com/users/andybak/following{/other_user}", "gists_url": "https://api.github.com/users/andybak/gists{/gist_id}", "starred_url": "https://api.github.com/users/andybak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andybak/subscriptions", "organizations_url": "https://api.github.com/users/andybak/orgs", "repos_url": "https://api.github.com/users/andybak/repos", "events_url": "https://api.github.com/users/andybak/events{/privacy}", "received_events_url": "https://api.github.com/users/andybak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 46790328, "node_id": "MDU6TGFiZWw0Njc5MDMyOA==", "url": "https://api.github.com/repos/jrief/django-admin-sortable2/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-10T13:26:53Z", "updated_at": "2017-08-12T14:13:54Z", "closed_at": "2017-08-12T14:13:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "This should be valid:\r\n\r\n    list_display = [some_callable]\r\n\r\nbut the changes in [4a9008fe](https://github.com/jrief/django-admin-sortable2/commit/cf27cbd3a9323ed9c9648f7a3c5a938e4a9008fe) and [c32492ff](https://github.com/jrief/django-admin-sortable2/commit/140e66dd669f38f16033b3c0125f21b5c32492ff) only seem to handle strings:\r\n\r\n      File \".virtualenvs/lily/lib/python2.7/site-packages/adminsortable2/admin.py\", line 115, in __init__\r\n        print sub(r'^{}$'.format(self.default_order_field), '_reorder', e)\r\n      File \"/.virtualenvs/lily/lib/python2.7/re.py\", line 155, in sub\r\n        return _compile(pattern, flags).sub(repl, string, count)\r\n    TypeError: expected string or buffer", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/162", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/162/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/162/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/162", "id": 244812379, "node_id": "MDU6SXNzdWUyNDQ4MTIzNzk=", "number": 162, "title": "Removing all admin actions breaks admin-sortable2", "user": {"login": "mkoistinen", "id": 615759, "node_id": "MDQ6VXNlcjYxNTc1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/615759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkoistinen", "html_url": "https://github.com/mkoistinen", "followers_url": "https://api.github.com/users/mkoistinen/followers", "following_url": "https://api.github.com/users/mkoistinen/following{/other_user}", "gists_url": "https://api.github.com/users/mkoistinen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkoistinen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkoistinen/subscriptions", "organizations_url": "https://api.github.com/users/mkoistinen/orgs", "repos_url": "https://api.github.com/users/mkoistinen/repos", "events_url": "https://api.github.com/users/mkoistinen/events{/privacy}", "received_events_url": "https://api.github.com/users/mkoistinen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-22T00:41:55Z", "updated_at": "2017-07-23T20:51:53Z", "closed_at": "2017-07-23T20:51:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This appears to affect all versions going back to, at least, 2015.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/160", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/160/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/160/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/160", "id": 243263312, "node_id": "MDU6SXNzdWUyNDMyNjMzMTI=", "number": 160, "title": "Updated ordering values not getting saved", "user": {"login": "paddymul", "id": 40453, "node_id": "MDQ6VXNlcjQwNDUz", "avatar_url": "https://avatars2.githubusercontent.com/u/40453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paddymul", "html_url": "https://github.com/paddymul", "followers_url": "https://api.github.com/users/paddymul/followers", "following_url": "https://api.github.com/users/paddymul/following{/other_user}", "gists_url": "https://api.github.com/users/paddymul/gists{/gist_id}", "starred_url": "https://api.github.com/users/paddymul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paddymul/subscriptions", "organizations_url": "https://api.github.com/users/paddymul/orgs", "repos_url": "https://api.github.com/users/paddymul/repos", "events_url": "https://api.github.com/users/paddymul/events{/privacy}", "received_events_url": "https://api.github.com/users/paddymul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-07-16T20:13:16Z", "updated_at": "2017-08-12T14:14:28Z", "closed_at": "2017-08-12T14:14:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an application that uses django-admin-sortable2.  At some point the reordering functionality was working correctly.  After a series of changes to my application, the reordering functionality is no longer working.  Due to migrations and other changes it is not easy to do a git bisect to find the last working state.\r\n\r\nAs it is, the reordering renders, and inlines are draggable.  When I drag an inline to a new position then click save, the database isn't updated.\r\n\r\nI have put a pdb.set_trace on the inline model's save() function and I can see that no new value for the ordering parameter are being passed in.\r\n\r\nI'm not sure how to debug further.  \r\n\r\nI am currently running\r\nfirefox, django 1.11.3, grapelli, django-admin-sortable2 0.6.13\r\n\r\nI was seeing the same non working functionality when running against django 10.5, by disabling grapilli, and on django-admin-sortable2 0.6.4\r\n\r\nWhat can I do to provide you with more debugging information? I realize that this isn't a particularly specific bug report.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/159", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/159/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/159/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/159", "id": 235872000, "node_id": "MDU6SXNzdWUyMzU4NzIwMDA=", "number": 159, "title": "Make stacked inline's header more clear that it is sortable", "user": {"login": "nelsonvarela", "id": 598542, "node_id": "MDQ6VXNlcjU5ODU0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/598542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nelsonvarela", "html_url": "https://github.com/nelsonvarela", "followers_url": "https://api.github.com/users/nelsonvarela/followers", "following_url": "https://api.github.com/users/nelsonvarela/following{/other_user}", "gists_url": "https://api.github.com/users/nelsonvarela/gists{/gist_id}", "starred_url": "https://api.github.com/users/nelsonvarela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nelsonvarela/subscriptions", "organizations_url": "https://api.github.com/users/nelsonvarela/orgs", "repos_url": "https://api.github.com/users/nelsonvarela/repos", "events_url": "https://api.github.com/users/nelsonvarela/events{/privacy}", "received_events_url": "https://api.github.com/users/nelsonvarela/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-14T13:04:04Z", "updated_at": "2017-06-14T14:45:09Z", "closed_at": "2017-06-14T14:44:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "by using the same drag.png in the table/tabular inline.\r\nIt took me ages to understand how to sort stacked inline elements", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/155", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/155/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/155/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/155", "id": 230726691, "node_id": "MDU6SXNzdWUyMzA3MjY2OTE=", "number": 155, "title": "Sortable column not the first field", "user": {"login": "mtribaldos", "id": 2152765, "node_id": "MDQ6VXNlcjIxNTI3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2152765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtribaldos", "html_url": "https://github.com/mtribaldos", "followers_url": "https://api.github.com/users/mtribaldos/followers", "following_url": "https://api.github.com/users/mtribaldos/following{/other_user}", "gists_url": "https://api.github.com/users/mtribaldos/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtribaldos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtribaldos/subscriptions", "organizations_url": "https://api.github.com/users/mtribaldos/orgs", "repos_url": "https://api.github.com/users/mtribaldos/repos", "events_url": "https://api.github.com/users/mtribaldos/events{/privacy}", "received_events_url": "https://api.github.com/users/mtribaldos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-23T14:25:15Z", "updated_at": "2017-06-01T23:09:52Z", "closed_at": "2017-06-01T23:09:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi Jacob,\r\n\r\nit seems there exists the limitation that the sortable column always is the first column in the result list. As normally it's supposed one orders the fields left to right according to their relevance, in many cases I find it would be more suitable that the sortable column were the last field (or maybe in any other position). Is there any way to accomplish this?\r\n\r\nRegards.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/154", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/154/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/154/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/154", "id": 230362983, "node_id": "MDU6SXNzdWUyMzAzNjI5ODM=", "number": 154, "title": "Reverse Ordering", "user": {"login": "serdargkaya", "id": 13801579, "node_id": "MDQ6VXNlcjEzODAxNTc5", "avatar_url": "https://avatars2.githubusercontent.com/u/13801579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serdargkaya", "html_url": "https://github.com/serdargkaya", "followers_url": "https://api.github.com/users/serdargkaya/followers", "following_url": "https://api.github.com/users/serdargkaya/following{/other_user}", "gists_url": "https://api.github.com/users/serdargkaya/gists{/gist_id}", "starred_url": "https://api.github.com/users/serdargkaya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serdargkaya/subscriptions", "organizations_url": "https://api.github.com/users/serdargkaya/orgs", "repos_url": "https://api.github.com/users/serdargkaya/repos", "events_url": "https://api.github.com/users/serdargkaya/events{/privacy}", "received_events_url": "https://api.github.com/users/serdargkaya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-22T11:16:04Z", "updated_at": "2017-10-25T09:32:56Z", "closed_at": "2017-10-25T09:32:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Jacob. \r\n\r\nProblem with reverse ordering doesn't seems to be resolved. #143 \r\n\r\nDjango==1.11.1\r\ndjango-admin-sortable2==0.6.11", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/151", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/151/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/151/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/151", "id": 227081967, "node_id": "MDU6SXNzdWUyMjcwODE5Njc=", "number": 151, "title": "Sortable inline not appearing when DEBUG=False", "user": {"login": "mailbackwards", "id": 1697151, "node_id": "MDQ6VXNlcjE2OTcxNTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1697151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mailbackwards", "html_url": "https://github.com/mailbackwards", "followers_url": "https://api.github.com/users/mailbackwards/followers", "following_url": "https://api.github.com/users/mailbackwards/following{/other_user}", "gists_url": "https://api.github.com/users/mailbackwards/gists{/gist_id}", "starred_url": "https://api.github.com/users/mailbackwards/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mailbackwards/subscriptions", "organizations_url": "https://api.github.com/users/mailbackwards/orgs", "repos_url": "https://api.github.com/users/mailbackwards/repos", "events_url": "https://api.github.com/users/mailbackwards/events{/privacy}", "received_events_url": "https://api.github.com/users/mailbackwards/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-08T15:23:15Z", "updated_at": "2017-05-22T21:24:38Z", "closed_at": "2017-05-22T21:24:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have one `Content` model, and two different sortable inlines that link them: `RelatedContent`, and `ReadMoreRelatedContent`. They are very similar models/inlines, but when `settings.DEBUG` is set to `False`, only `RelatedContent` shows up; the `ReadMoreInline` does not appear. If I remove the sortable mixin or set `DEBUG` to `True`, both inlines appear as expected. Has anyone seen something like this before-- what could be the difference between these two models, and what would make `DEBUG=False` miss one of them? Any help appreciated-- thanks!\r\n\r\nPython 2.7, Django 1.8\r\n\r\n```python\r\n### models.py\r\n\r\nclass RelatedContent(models.Model):\r\n    content_item = models.ForeignKey(Content, related_name=\"reverse_related_content\")\r\n    content_relation = models.ForeignKey(Content, related_name=\"related_content\")\r\n    order = models.IntegerField(blank=False, null=False, default=0)\r\n\r\n    class Meta:\r\n        verbose_name_plural = 'Related content'\r\n        ordering = ['order']\r\n\r\nclass ReadMoreRelatedContent(models.Model):\r\n    source = models.ForeignKey(Content, related_name=\"read_more_targets\")\r\n    target = models.ForeignKey(Content, related_name=\"read_more_sources\")\r\n    order = models.IntegerField(blank=False, null=False, default=0)\r\n    summary_text = models.TextField(blank=True, null=True,\r\n        help_text=u'The text to use to populate the read-more link.')\r\n\r\n    def __unicode__(self):\r\n        return u'Read-more link: %s --> %s' % (\r\n            self.source.headline, self.target.headline)\r\n\r\n    class Meta:\r\n        ordering = ['order']\r\n\r\nclass Content(models.Model):\r\n    headline = models.CharField('Default headline', max_length=255,\r\n        help_text=u'The default display headline')\r\n    # more fields here... no M2M defined...\r\n\r\n\r\n### admin.py\r\n\r\nclass RelatedContentInline(SortableInlineAdminMixin, admin.TabularInline):\r\n    model = RelatedContent\r\n    ordering = ['order']\r\n    extra = 0\r\n    fk_name = 'content_relation'\r\n    raw_id_fields = ['content_item']\r\n    verbose_name = 'Related content'\r\n    verbose_name_plural = 'Related content'\r\n\r\nclass ReadMoreInline(SortableInlineAdminMixin, admin.TabularInline):\r\n    model = ReadMoreRelatedContent\r\n    extra = 3\r\n    fk_name = 'source'\r\n    raw_id_fields = ['target']\r\n    verbose_name = 'Read more'\r\n    verbose_name_plural = 'Read mores'\r\n\r\nclass ContentAdmin(admin.ModelAdmin):\r\n    # some other attributes\r\n    model = Content\r\n    inlines = [RelatedContentInline, ReadMoreInline]\r\n\r\nadmin.site.register(Content, ContentAdmin)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/150", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/150/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/150/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/150", "id": 226595545, "node_id": "MDU6SXNzdWUyMjY1OTU1NDU=", "number": 150, "title": "Problems using GenericTabularInline with SortableInlineAdminMixin", "user": {"login": "maj0rr", "id": 17593773, "node_id": "MDQ6VXNlcjE3NTkzNzcz", "avatar_url": "https://avatars2.githubusercontent.com/u/17593773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maj0rr", "html_url": "https://github.com/maj0rr", "followers_url": "https://api.github.com/users/maj0rr/followers", "following_url": "https://api.github.com/users/maj0rr/following{/other_user}", "gists_url": "https://api.github.com/users/maj0rr/gists{/gist_id}", "starred_url": "https://api.github.com/users/maj0rr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maj0rr/subscriptions", "organizations_url": "https://api.github.com/users/maj0rr/orgs", "repos_url": "https://api.github.com/users/maj0rr/repos", "events_url": "https://api.github.com/users/maj0rr/events{/privacy}", "received_events_url": "https://api.github.com/users/maj0rr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-05T14:44:43Z", "updated_at": "2017-07-25T10:56:32Z", "closed_at": "2017-05-08T13:07:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I just try to use the django.contrib.contenttypes.admin GenericTabularInline with the SortableInlineAdminMixin but don't get it work.\r\n\r\nThis is what I got:\r\nadmin:\r\n```\r\nclass MediaGalleryItemsAdminForm(BaseDestinationChoiceModelForm):\r\n    class Meta:\r\n        model = MediaGalleryItems\r\n        fields = ('my_order', 'image', 'description', 'label', 'destination')\r\n```\r\n\r\n```\r\nclass MediaGalleryItemsInlineAdmin(SortableInlineAdminMixin, GenericTabularInline):\r\n    model = MediaGalleryItems\r\n    extra = 0\r\n    form = MediaGalleryItemsAdminForm\r\n```\r\nmodel:\r\n```\r\nclass MediaGalleryItems(models.Model):\r\n\r\n    description = models.TextField(blank=True)\r\n    image = FilerImageField()\r\n    label = models.CharField(max_length=40, blank=True)\r\n    content_type = models.ForeignKey(ContentType,null=True,blank=True,)\r\n    object_id = models.PositiveIntegerField(null=True,blank=True)\r\n    destination = GenericForeignKey('content_type','object_id')\r\n    my_order = models.PositiveIntegerField(default=0, blank=False, null=False)\r\n```\r\n\r\nI get the error:\r\n```\r\ntype object 'MediaGalleryItemsFormFormSet' has no attribute 'fk'\r\n```\r\n\r\nIf I change the heredity to\r\n```\r\nGenericTabularInline, SortableInlineAdminMixin\r\n```\r\ninstead of \r\n```\r\nSortableInlineAdminMixin, GenericTabularInline\r\n```\r\nI don't get errors but it seems not working well -> all fields (which are filled normally) are not filled with input.\r\n\r\nAny idea about this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/146", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/146/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/146/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/146", "id": 218643265, "node_id": "MDU6SXNzdWUyMTg2NDMyNjU=", "number": 146, "title": "JavaScript code doesn\u2019t work on Firefox", "user": {"login": "merwok", "id": 635179, "node_id": "MDQ6VXNlcjYzNTE3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/635179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/merwok", "html_url": "https://github.com/merwok", "followers_url": "https://api.github.com/users/merwok/followers", "following_url": "https://api.github.com/users/merwok/following{/other_user}", "gists_url": "https://api.github.com/users/merwok/gists{/gist_id}", "starred_url": "https://api.github.com/users/merwok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/merwok/subscriptions", "organizations_url": "https://api.github.com/users/merwok/orgs", "repos_url": "https://api.github.com/users/merwok/repos", "events_url": "https://api.github.com/users/merwok/events{/privacy}", "received_events_url": "https://api.github.com/users/merwok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-31T23:37:42Z", "updated_at": "2017-12-07T22:36:53Z", "closed_at": "2017-12-07T22:36:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!  I have admin classes that work with Chromium but not Firefox.\r\n\r\nVersions: Python 3.5.3, Django 1.10.6, django-admin-sortable2 0.6.10, jQuery (from django admin) v2.2.3, Firefox ESR 45.8.0.\r\n\r\nSteps: follow docs, go to the admin page, create objects, reorder them.\r\n\r\nExpected: POST requests to the update URL, order is preserved after page refresh.\r\n\r\nObserved: no request, console logs: \u00abThe server responded: undefined\u00bb (from list-sortable.js:76, which is inside the error callback for the ``$.ajax`` call).\r\n\r\nStack trace:\r\n ![tmp](https://cloud.githubusercontent.com/assets/635179/24572800/18378b68-164a-11e7-9665-7bee147ace28.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/144", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/144/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/144/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/144", "id": 211458407, "node_id": "MDU6SXNzdWUyMTE0NTg0MDc=", "number": 144, "title": "Inline save no longer works after inline owner inherits from SortableAdminMixin", "user": {"login": "PeterCat12", "id": 8277047, "node_id": "MDQ6VXNlcjgyNzcwNDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8277047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterCat12", "html_url": "https://github.com/PeterCat12", "followers_url": "https://api.github.com/users/PeterCat12/followers", "following_url": "https://api.github.com/users/PeterCat12/following{/other_user}", "gists_url": "https://api.github.com/users/PeterCat12/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterCat12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterCat12/subscriptions", "organizations_url": "https://api.github.com/users/PeterCat12/orgs", "repos_url": "https://api.github.com/users/PeterCat12/repos", "events_url": "https://api.github.com/users/PeterCat12/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterCat12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-02T17:16:45Z", "updated_at": "2017-03-02T20:06:14Z", "closed_at": "2017-03-02T20:04:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "After making a \"parent\" modelAdmin object that possessed an sortable inline into a `SortableAdminMixin`, the inline is longer sortable, even after reverting all code changes.\r\n\r\noriginal admin models (removed irrelevant code but can post in its entirety):\r\n```python\r\nclass ImageInline(ThumbnailMixin, SortableInlineAdminMixin, admin.TabularInline):\r\n    model = Image\r\n    extra = 0\r\n     ...\r\n\r\nclass CollectionAdmin(admin.ModelAdmin):\r\n    inlines = [ImageInline]\r\n   ...\r\n```\r\n\r\noriginal models (removed irrelevant code but can post in its entirety):\r\n\r\n```python\r\nclass Collection(MetaInfoMixin, models.Model):\r\n   name = models.CharField(max_length=64)\r\n   active = models.BooleanField(default=True)\r\n\r\n  class Meta:\r\n        verbose_name = \"Collection\"\r\n        verbose_name_plural = \"Collections\"\r\n\r\n   def get_images(self):\r\n        return self.images.displayable().order_by('sort_order')\r\n\r\nclass Image(MetaInfoMixin, models.Model):\r\n    collection = models.ForeignKey(\r\n        'gallery.Collection', related_name=\"images\")\r\n    image = FilerImageField(blank=True, null=True)\r\n    sort_order = models.IntegerField(default=0)\r\n   \r\n   class Meta:\r\n        ordering = ('sort_order',)\r\n        index_together = [\r\n            [\"collection\", \"created\"],\r\n        ]\r\n```\r\n\r\nchanges in admin models:\r\n\r\n```python\r\nclass CollectionAdmin(SortableAdminMixin, admin.ModelAdmin):\r\n    inlines = [ImageInline]\r\n```\r\n\r\nchanges in models (Image class unchanged):\r\n\r\n ```python\r\nclass Collection(MetaInfoMixin, models.Model):\r\n    name = models.CharField(max_length=64)\r\n    active = models.BooleanField(default=True)\r\n    sort_order = models.IntegerField(default=0)\r\n\r\n   class Meta:\r\n        verbose_name = \"Collection\"\r\n        verbose_name_plural = \"Collections\"\r\n        ordering = ('sort_order',)\r\n\r\n   def get_images(self):\r\n        return self.images.displayable().order_by('sort_order')\r\n```\r\n`Collections` are now sortable but their inline `Images` are not. I can drag and drop them, but their new `sort_order` does not get saved (even after reverting all code changes and undoing the relevant migrations, which I find very strange) \r\n\r\nI am using django 1.9.10", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/143", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/143/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/143/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/143", "id": 208277601, "node_id": "MDU6SXNzdWUyMDgyNzc2MDE=", "number": 143, "title": "[bug] dragging gives newposition - 1", "user": {"login": "freskimo", "id": 12798467, "node_id": "MDQ6VXNlcjEyNzk4NDY3", "avatar_url": "https://avatars3.githubusercontent.com/u/12798467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freskimo", "html_url": "https://github.com/freskimo", "followers_url": "https://api.github.com/users/freskimo/followers", "following_url": "https://api.github.com/users/freskimo/following{/other_user}", "gists_url": "https://api.github.com/users/freskimo/gists{/gist_id}", "starred_url": "https://api.github.com/users/freskimo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freskimo/subscriptions", "organizations_url": "https://api.github.com/users/freskimo/orgs", "repos_url": "https://api.github.com/users/freskimo/repos", "events_url": "https://api.github.com/users/freskimo/events{/privacy}", "received_events_url": "https://api.github.com/users/freskimo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-02-16T23:07:47Z", "updated_at": "2017-05-22T11:13:26Z", "closed_at": "2017-02-17T07:59:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "When dragging an item e.g. 1 to 3 and then refresh the page the item gets order 2.\r\nI always need to drag the item one below the one i want.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/138", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/138/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/138/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/138", "id": 202576297, "node_id": "MDU6SXNzdWUyMDI1NzYyOTc=", "number": 138, "title": "SortableAdminMixin.update() is likely to clash with other ModelAdmin methods", "user": {"login": "andybak", "id": 60035, "node_id": "MDQ6VXNlcjYwMDM1", "avatar_url": "https://avatars2.githubusercontent.com/u/60035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andybak", "html_url": "https://github.com/andybak", "followers_url": "https://api.github.com/users/andybak/followers", "following_url": "https://api.github.com/users/andybak/following{/other_user}", "gists_url": "https://api.github.com/users/andybak/gists{/gist_id}", "starred_url": "https://api.github.com/users/andybak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andybak/subscriptions", "organizations_url": "https://api.github.com/users/andybak/orgs", "repos_url": "https://api.github.com/users/andybak/repos", "events_url": "https://api.github.com/users/andybak/events{/privacy}", "received_events_url": "https://api.github.com/users/andybak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-23T16:07:12Z", "updated_at": "2017-01-23T22:23:32Z", "closed_at": "2017-01-23T22:23:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "One of the perils of mixins is everything shares a namespace. Calling a method .update is probably a bad idea!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/137", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/137/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/137/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/137", "id": 200155870, "node_id": "MDU6SXNzdWUyMDAxNTU4NzA=", "number": 137, "title": "Add inline_admin_formset associated classes", "user": {"login": "marcoooo", "id": 611039, "node_id": "MDQ6VXNlcjYxMTAzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/611039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcoooo", "html_url": "https://github.com/marcoooo", "followers_url": "https://api.github.com/users/marcoooo/followers", "following_url": "https://api.github.com/users/marcoooo/following{/other_user}", "gists_url": "https://api.github.com/users/marcoooo/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcoooo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcoooo/subscriptions", "organizations_url": "https://api.github.com/users/marcoooo/orgs", "repos_url": "https://api.github.com/users/marcoooo/repos", "events_url": "https://api.github.com/users/marcoooo/events{/privacy}", "received_events_url": "https://api.github.com/users/marcoooo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-11T17:25:43Z", "updated_at": "2017-09-14T14:05:48Z", "closed_at": "2017-09-14T14:05:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I just run into this (little issue): il you use Django 1.10 and add a SortableMixin with TabularInline, you will loose the classes elements associated with inline classes definition (such as collapse functionnality).\r\n\r\nYou may correct this very simply modifying templates/adminsortable2/tabular.html\r\nreplacing : \r\n```html\r\n<div class=\"inline-group sortable\" id=\"{{ inline_admin_formset.formset.prefix }}-group\">\r\n  <div class=\"tabular inline-related {% if forloop.last %}last-related{% endif %}\">\r\n{{ inline_admin_formset.formset.management_form }}\r\n<fieldset class=\"module\">\r\n   <h2>{{ inline_admin_formset.opts.verbose_name_plural|capfirst }}</h2>\r\n   {{ inline_admin_formset.formset.non_form_errors }}\r\n   <table>\r\n     <thead><tr><th>{% trans \"Sort\" %}</th>\r\n ```\r\n\r\nwith \r\n```html\r\n{% load i18n admin_urls admin_static admin_modify %}\r\n<div class=\"inline-group sortable\" id=\"{{ inline_admin_formset.formset.prefix }}-group\">\r\n  <div class=\"tabular inline-related {% if forloop.last %}last-related{% endif %}\">\r\n{{ inline_admin_formset.formset.management_form }}\r\n<fieldset class=\"module **{{ inline_admin_formset.classes }}**\">\r\n   <h2>{{ inline_admin_formset.opts.verbose_name_plural|capfirst }}</h2>\r\n   {{ inline_admin_formset.formset.non_form_errors }}\r\n   <table>\r\n```\r\n\r\nWould you like a PR ?\r\nM.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/133", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/133/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/133/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/133", "id": 196597784, "node_id": "MDU6SXNzdWUxOTY1OTc3ODQ=", "number": 133, "title": "Does this package support Django version 1.10?", "user": {"login": "kapeed2091", "id": 7793159, "node_id": "MDQ6VXNlcjc3OTMxNTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7793159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapeed2091", "html_url": "https://github.com/kapeed2091", "followers_url": "https://api.github.com/users/kapeed2091/followers", "following_url": "https://api.github.com/users/kapeed2091/following{/other_user}", "gists_url": "https://api.github.com/users/kapeed2091/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapeed2091/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapeed2091/subscriptions", "organizations_url": "https://api.github.com/users/kapeed2091/orgs", "repos_url": "https://api.github.com/users/kapeed2091/repos", "events_url": "https://api.github.com/users/kapeed2091/events{/privacy}", "received_events_url": "https://api.github.com/users/kapeed2091/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-20T06:38:41Z", "updated_at": "2016-12-23T07:10:33Z", "closed_at": "2016-12-23T07:10:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/132", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/132/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/132/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/132", "id": 196556837, "node_id": "MDU6SXNzdWUxOTY1NTY4Mzc=", "number": 132, "title": "django-admin-sortable2 breaks django-cleanup", "user": {"login": "kennell", "id": 2326287, "node_id": "MDQ6VXNlcjIzMjYyODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2326287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennell", "html_url": "https://github.com/kennell", "followers_url": "https://api.github.com/users/kennell/followers", "following_url": "https://api.github.com/users/kennell/following{/other_user}", "gists_url": "https://api.github.com/users/kennell/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennell/subscriptions", "organizations_url": "https://api.github.com/users/kennell/orgs", "repos_url": "https://api.github.com/users/kennell/repos", "events_url": "https://api.github.com/users/kennell/events{/privacy}", "received_events_url": "https://api.github.com/users/kennell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-20T00:38:08Z", "updated_at": "2017-01-25T15:59:08Z", "closed_at": "2017-01-25T02:49:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please see https://github.com/un1t/django-cleanup/issues/34 for details", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/131", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/131/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/131/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/131", "id": 194040858, "node_id": "MDU6SXNzdWUxOTQwNDA4NTg=", "number": 131, "title": "Problem with polymorphic models", "user": {"login": "rfleschenberg", "id": 4319330, "node_id": "MDQ6VXNlcjQzMTkzMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4319330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfleschenberg", "html_url": "https://github.com/rfleschenberg", "followers_url": "https://api.github.com/users/rfleschenberg/followers", "following_url": "https://api.github.com/users/rfleschenberg/following{/other_user}", "gists_url": "https://api.github.com/users/rfleschenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfleschenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfleschenberg/subscriptions", "organizations_url": "https://api.github.com/users/rfleschenberg/orgs", "repos_url": "https://api.github.com/users/rfleschenberg/repos", "events_url": "https://api.github.com/users/rfleschenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/rfleschenberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-12-07T12:47:31Z", "updated_at": "2016-12-23T07:41:33Z", "closed_at": "2016-12-23T07:41:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "When used in combination with django-polymorphic, django-admin-sortable2 calculates the order incorrectly when inserting a new instance. This is because it operates on the child model in `SortableAdminMixin.get_max_order`:\r\n\r\n```\r\n(Pdb) self.model\r\n<class 'stofferia.models.commodity.Commodity'>\r\n(Pdb) self.model.objects.aggregate(max_order=Max(self.default_order_field))['max_order']\r\n395\r\n\r\n(Pdb) Product.objects.aggregate(max_order=Max(self.default_order_field))['max_order']\r\n1680\r\n```\r\n\r\nMaybe this can be fixed outside of django-admin-sortable2, for example by using a custom child class.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/129", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/129/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/129/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/129", "id": 188106511, "node_id": "MDU6SXNzdWUxODgxMDY1MTE=", "number": 129, "title": "Sortable and StackedInline", "user": {"login": "sylvainlb", "id": 1392451, "node_id": "MDQ6VXNlcjEzOTI0NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1392451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sylvainlb", "html_url": "https://github.com/sylvainlb", "followers_url": "https://api.github.com/users/sylvainlb/followers", "following_url": "https://api.github.com/users/sylvainlb/following{/other_user}", "gists_url": "https://api.github.com/users/sylvainlb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sylvainlb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sylvainlb/subscriptions", "organizations_url": "https://api.github.com/users/sylvainlb/orgs", "repos_url": "https://api.github.com/users/sylvainlb/repos", "events_url": "https://api.github.com/users/sylvainlb/events{/privacy}", "received_events_url": "https://api.github.com/users/sylvainlb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-08T21:21:20Z", "updated_at": "2016-11-09T16:04:10Z", "closed_at": "2016-11-09T16:04:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use ```class QuestionInline(SortableInlineAdminMixin, admin.TabularInline):``` I get what I expect, sortable lines. But when I replace `TabularInline` with `StackedInline` : ```class QuestionInline(SortableInlineAdminMixin, admin.StackedInline):``` The lines don't get sortable anymore.\r\nI'm using Django 1.9 with a very standard application.\r\nDoes StackedInline require specific configuration?\r\nWhat did I miss?\r\n\r\nThanks for your work!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/126", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/126/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/126/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/126", "id": 187766232, "node_id": "MDU6SXNzdWUxODc3NjYyMzI=", "number": 126, "title": "Make a new release to make latest fixes available", "user": {"login": "jperals", "id": 1257272, "node_id": "MDQ6VXNlcjEyNTcyNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1257272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jperals", "html_url": "https://github.com/jperals", "followers_url": "https://api.github.com/users/jperals/followers", "following_url": "https://api.github.com/users/jperals/following{/other_user}", "gists_url": "https://api.github.com/users/jperals/gists{/gist_id}", "starred_url": "https://api.github.com/users/jperals/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jperals/subscriptions", "organizations_url": "https://api.github.com/users/jperals/orgs", "repos_url": "https://api.github.com/users/jperals/repos", "events_url": "https://api.github.com/users/jperals/events{/privacy}", "received_events_url": "https://api.github.com/users/jperals/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-07T16:56:23Z", "updated_at": "2016-11-07T17:31:37Z", "closed_at": "2016-11-07T17:31:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had to manually apply the changes in commit 7d8ab0d in order to be able to use the `reorder` command. So this fix seems to work but it's not available on Pypi. Would it be a good idea to make a new release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/125", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/125/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/125/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/125", "id": 184526540, "node_id": "MDU6SXNzdWUxODQ1MjY1NDA=", "number": 125, "title": "Add to doc: ordering field must be in viewable fields for inlines", "user": {"login": "mitchelljkotler", "id": 136098, "node_id": "MDQ6VXNlcjEzNjA5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/136098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitchelljkotler", "html_url": "https://github.com/mitchelljkotler", "followers_url": "https://api.github.com/users/mitchelljkotler/followers", "following_url": "https://api.github.com/users/mitchelljkotler/following{/other_user}", "gists_url": "https://api.github.com/users/mitchelljkotler/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitchelljkotler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitchelljkotler/subscriptions", "organizations_url": "https://api.github.com/users/mitchelljkotler/orgs", "repos_url": "https://api.github.com/users/mitchelljkotler/repos", "events_url": "https://api.github.com/users/mitchelljkotler/events{/privacy}", "received_events_url": "https://api.github.com/users/mitchelljkotler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-21T16:28:40Z", "updated_at": "2017-01-26T14:52:04Z", "closed_at": "2017-01-25T22:24:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "For my inline, I have `fields` defined to choose which fields to show.  I did not add my ordering field to this tuple, and I could drag and drop my inlines, but the ordering would not persist with no indication  of what went wrong (my screen looked just like the screenshots.)  I eventually realized I needed to add the ordering field to the `fields` tuple, but it would be nice to make a note of that in the documentation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/118", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/118/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/118/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/118", "id": 179900445, "node_id": "MDU6SXNzdWUxNzk5MDA0NDU=", "number": 118, "title": "SortableInlineAdminMixin does not work with parler TranslatableTabularInline", "user": {"login": "racitup", "id": 18157195, "node_id": "MDQ6VXNlcjE4MTU3MTk1", "avatar_url": "https://avatars2.githubusercontent.com/u/18157195?v=4", "gravatar_id": "", "url": "https://api.github.com/users/racitup", "html_url": "https://github.com/racitup", "followers_url": "https://api.github.com/users/racitup/followers", "following_url": "https://api.github.com/users/racitup/following{/other_user}", "gists_url": "https://api.github.com/users/racitup/gists{/gist_id}", "starred_url": "https://api.github.com/users/racitup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/racitup/subscriptions", "organizations_url": "https://api.github.com/users/racitup/orgs", "repos_url": "https://api.github.com/users/racitup/repos", "events_url": "https://api.github.com/users/racitup/events{/privacy}", "received_events_url": "https://api.github.com/users/racitup/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-09-28T21:54:56Z", "updated_at": "2017-06-06T01:56:58Z", "closed_at": "2017-06-06T01:55:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have tried creating an inline admin using:\n`class ProductFAQAdminInline(SortableInlineAdminMixin, TranslatableTabularInline, admin.TabularInline):`.\nIf I omit the `admin.TabularInline`, adminsortable2 gives an error stating I need to subclass.\n\nI suspect the library is not written to support this but haven't checked in the code yet.\n\nThe javascript works and the item can be dragged, but on save and refresh, the item order has not changed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/115", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/115/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/115/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/115", "id": 169886295, "node_id": "MDU6SXNzdWUxNjk4ODYyOTU=", "number": 115, "title": "Meta for though model", "user": {"login": "babadoo", "id": 3744077, "node_id": "MDQ6VXNlcjM3NDQwNzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3744077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/babadoo", "html_url": "https://github.com/babadoo", "followers_url": "https://api.github.com/users/babadoo/followers", "following_url": "https://api.github.com/users/babadoo/following{/other_user}", "gists_url": "https://api.github.com/users/babadoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/babadoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/babadoo/subscriptions", "organizations_url": "https://api.github.com/users/babadoo/orgs", "repos_url": "https://api.github.com/users/babadoo/repos", "events_url": "https://api.github.com/users/babadoo/events{/privacy}", "received_events_url": "https://api.github.com/users/babadoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-08T10:03:19Z", "updated_at": "2016-08-08T10:15:26Z", "closed_at": "2016-08-08T10:15:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get an attributeerror for a ManyToMany Relation using a through model in inline admin with SortableInlineAdminMixin:\n\nmodels.py:\n\n```\nclass Provider(models.Model):\n    title = models.CharField(\"Titel\", max_length=255)\n    sorting = models.PositiveIntegerField(\"Sortierung\", default=0, blank=False, null=False)\n\n    class Meta:\n        ordering = ('sorting',)\n\n    def __str__(self):\n        return self.title\n\n\nclass Client(ContentObject):\n    providers = models.ManyToManyField(Provider, blank=True, related_name='clients')\n```\n\nadmin.py:\n\n```\nclass ProviderInlineAdmin(SortableInlineAdminMixin, admin.TabularInline):\n    list_display = ['title']\n    list_display_links = ('title',)\n    model = Client.providers.through\n\n@admin.register(Client)\nclass ClientAdmin(SortableAdminMixin, admin.ModelAdmin):\n    list_display = ['title']\n    readonly_fields = ('id',)\n    inlines = (ProviderInlineAdmin,)\n```\n\n```\nAttributeError: type object 'Client_providers' has no attribute 'Meta'\n\nTraceback Switch to copy-and-paste view\n\n    /usr/lib/python3.4/site-packages/adminsortable2/admin.py in __init__\n\n                    self.default_order_field = self.model._meta.ordering[0]\n\n         ...\n    \u25b6 Local vars\n    During handling of the above exception (list index out of range), another exception occurred:\n    /usr/lib/python3.4/site-packages/django/core/handlers/base.py in get_response\n\n                            response = self.process_exception_by_middleware(e, request)\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/site-packages/django/core/handlers/base.py in get_response\n\n                            response = wrapped_callback(request, *callback_args, **callback_kwargs)\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/site-packages/django/contrib/admin/options.py in wrapper\n\n                        return self.admin_site.admin_view(view)(*args, **kwargs)\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/site-packages/django/utils/decorators.py in _wrapped_view\n\n                            response = view_func(request, *args, **kwargs)\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/site-packages/django/views/decorators/cache.py in _wrapped_view_func\n\n                response = view_func(request, *args, **kwargs)\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/site-packages/django/contrib/admin/sites.py in inner\n\n                    return view(request, *args, **kwargs)\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/site-packages/django/contrib/admin/options.py in change_view\n\n                return self.changeform_view(request, object_id, form_url, extra_context)\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/site-packages/django/utils/decorators.py in _wrapper\n\n                    return bound_func(*args, **kwargs)\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/site-packages/django/utils/decorators.py in _wrapped_view\n\n                            response = view_func(request, *args, **kwargs)\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/site-packages/django/utils/decorators.py in bound_func\n\n                        return func.__get__(self, type(self))(*args2, **kwargs2)\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/contextlib.py in inner\n\n                        return func(*args, **kwds)\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/site-packages/django/contrib/admin/options.py in changeform_view\n\n                        formsets, inline_instances = self._create_formsets(request, obj, change=True)\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/site-packages/django/contrib/admin/options.py in _create_formsets\n\n                    formsets.append(FormSet(**formset_params))\n\n         ...\n    \u25b6 Local vars\n    /usr/lib/python3.4/site-packages/adminsortable2/admin.py in __init__\n\n                    self.default_order_field = self.model.Meta.ordering[0]\n\n         ...\n    \u25b6 Local vars \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/114", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/114/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/114/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/114", "id": 165927837, "node_id": "MDU6SXNzdWUxNjU5Mjc4Mzc=", "number": 114, "title": "Admin sortable exclude wrong field", "user": {"login": "Iv", "id": 139497, "node_id": "MDQ6VXNlcjEzOTQ5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/139497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Iv", "html_url": "https://github.com/Iv", "followers_url": "https://api.github.com/users/Iv/followers", "following_url": "https://api.github.com/users/Iv/following{/other_user}", "gists_url": "https://api.github.com/users/Iv/gists{/gist_id}", "starred_url": "https://api.github.com/users/Iv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Iv/subscriptions", "organizations_url": "https://api.github.com/users/Iv/orgs", "repos_url": "https://api.github.com/users/Iv/repos", "events_url": "https://api.github.com/users/Iv/events{/privacy}", "received_events_url": "https://api.github.com/users/Iv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-16T12:45:33Z", "updated_at": "2016-07-18T05:31:57Z", "closed_at": "2016-07-18T05:31:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have model with vendor and order:\n\n```\nclass Instrument(AbsoluteUrlMixin, AbstractProduct):\n    vendor = models.ForeignKey(Vendor)\n    type = models.ForeignKey(InstrumentType, default=None, null=True)\n    album = models.ForeignKey(Album, null=True, default=None, blank=True)\n\n   class Meta:\n        ordering = [\"vendor\", \"order\", \"slug\"]\n```\n\nIt sould be orderd by \"vendor\" and by \"order\" but **init** function from SortableAdminMixin hides vendor field from form. \n\n```\n def __init__(self, model, admin_site):\n        self.default_order_directions, self.default_order_field = _get_default_ordering(model)\n        super(SortableAdminMixin, self).__init__(model, admin_site)\n        if not isinstance(self.exclude, (list, tuple)):\n            self.exclude = [self.default_order_field]\n        elif not self.exclude or self.default_order_field != self.exclude[0]:\n            self.exclude = [self.default_order_field] + list(self.exclude)\n        if not self.list_display_links:\n            self.list_display_links = (self.list_display[0],)\n        self._add_reorder_method()\n        self.list_display = ['_reorder'] + list(self.list_display)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/113", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/113/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/113/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/113", "id": 164195637, "node_id": "MDU6SXNzdWUxNjQxOTU2Mzc=", "number": 113, "title": "An invalid form control with name='page' is not focusable.", "user": {"login": "joseph2002", "id": 5656381, "node_id": "MDQ6VXNlcjU2NTYzODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5656381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joseph2002", "html_url": "https://github.com/joseph2002", "followers_url": "https://api.github.com/users/joseph2002/followers", "following_url": "https://api.github.com/users/joseph2002/following{/other_user}", "gists_url": "https://api.github.com/users/joseph2002/gists{/gist_id}", "starred_url": "https://api.github.com/users/joseph2002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joseph2002/subscriptions", "organizations_url": "https://api.github.com/users/joseph2002/orgs", "repos_url": "https://api.github.com/users/joseph2002/repos", "events_url": "https://api.github.com/users/joseph2002/events{/privacy}", "received_events_url": "https://api.github.com/users/joseph2002/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-06T23:10:48Z", "updated_at": "2016-10-28T20:37:00Z", "closed_at": "2016-10-28T20:37:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Chromium report this when I run delete selected action on SortableAdminMixin. \nI think this is caused by setting max=0 and min=2 to #changelist-form-page when there is only one page. By submitting, chromium find the form is invalid, but can not focus on the hidden #changelist-form-page field.\n\nbtw. I use grappelli, don't know whether it is ok for original admin\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/110", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/110/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/110/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/110", "id": 163509701, "node_id": "MDU6SXNzdWUxNjM1MDk3MDE=", "number": 110, "title": "Ordering not saved if not specified in admin.TabularInline.fields?", "user": {"login": "wasabigeek", "id": 4256705, "node_id": "MDQ6VXNlcjQyNTY3MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4256705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wasabigeek", "html_url": "https://github.com/wasabigeek", "followers_url": "https://api.github.com/users/wasabigeek/followers", "following_url": "https://api.github.com/users/wasabigeek/following{/other_user}", "gists_url": "https://api.github.com/users/wasabigeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/wasabigeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wasabigeek/subscriptions", "organizations_url": "https://api.github.com/users/wasabigeek/orgs", "repos_url": "https://api.github.com/users/wasabigeek/repos", "events_url": "https://api.github.com/users/wasabigeek/events{/privacy}", "received_events_url": "https://api.github.com/users/wasabigeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-02T09:04:44Z", "updated_at": "2016-07-05T17:59:02Z", "closed_at": "2016-07-02T10:53:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "In admin.TabularInline.fields, if I leave out the ordering field, changes in the ordering are not saved. Is this expected?\n\ne.g.\nmodels.py\n\n```\nclass Photo(models.Model):\n    name = models.CharField(max_length=255)\n    order = models.PositiveIntegerField(default=0, blank=False, null=False)\n\n\n    class Meta(object):\n        ordering = ('order',)\n\n```\n\nadmin.py\n\n```\nclass PhotoInline(SortableInlineAdminMixin, admin.TabularInline):\n    model = Photo\n    extra = 0\n    fields = ('name',)\n    readonly_fields = ('admin_img','photo')\n\n\nclass VenueAdmin(ImportExportActionModelAdmin):\n    list_display=('name')\n    inlines = [\n        PhotoInline,\n    ]\n    pass\n```\n\nAfter changing the order in the Admin interface and saving, the order is not saved. I have to change `fields = ('name',)` to `fields = ('name', 'order')`.\n\nIf it's expected behaviour, propose to state this in the documentation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/101", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/101/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/101/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/101", "id": 153324111, "node_id": "MDU6SXNzdWUxNTMzMjQxMTE=", "number": 101, "title": "Allow override SortableAdminMixin.get_max_order based on request ", "user": {"login": "joseph2002", "id": 5656381, "node_id": "MDQ6VXNlcjU2NTYzODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5656381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joseph2002", "html_url": "https://github.com/joseph2002", "followers_url": "https://api.github.com/users/joseph2002/followers", "following_url": "https://api.github.com/users/joseph2002/following{/other_user}", "gists_url": "https://api.github.com/users/joseph2002/gists{/gist_id}", "starred_url": "https://api.github.com/users/joseph2002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joseph2002/subscriptions", "organizations_url": "https://api.github.com/users/joseph2002/orgs", "repos_url": "https://api.github.com/users/joseph2002/repos", "events_url": "https://api.github.com/users/joseph2002/events{/privacy}", "received_events_url": "https://api.github.com/users/joseph2002/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-05T20:55:38Z", "updated_at": "2016-06-11T14:29:37Z", "closed_at": "2016-06-11T14:29:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could the get_max_order method take the request and obj(optional) as an argument, e.g. get_max_order(self, request, obj=None), so that it is possible to do some subset ordering based on foreignkey, with combination of get_extra_model_filters\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/100", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/100/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/100/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/100", "id": 151835875, "node_id": "MDU6SXNzdWUxNTE4MzU4NzU=", "number": 100, "title": "Actions = none breaks functionality", "user": {"login": "jbreuer95", "id": 5371337, "node_id": "MDQ6VXNlcjUzNzEzMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5371337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbreuer95", "html_url": "https://github.com/jbreuer95", "followers_url": "https://api.github.com/users/jbreuer95/followers", "following_url": "https://api.github.com/users/jbreuer95/following{/other_user}", "gists_url": "https://api.github.com/users/jbreuer95/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbreuer95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbreuer95/subscriptions", "organizations_url": "https://api.github.com/users/jbreuer95/orgs", "repos_url": "https://api.github.com/users/jbreuer95/repos", "events_url": "https://api.github.com/users/jbreuer95/events{/privacy}", "received_events_url": "https://api.github.com/users/jbreuer95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-04-29T10:21:34Z", "updated_at": "2016-06-11T15:33:17Z", "closed_at": "2016-06-11T15:33:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "when actions = none the sorting bar gets really long and sorting only works once.\nwhen you try to move an item a second time it uses the old id.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/98", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/98/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/98/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/98", "id": 148001678, "node_id": "MDU6SXNzdWUxNDgwMDE2Nzg=", "number": 98, "title": "js error in admin (list-sortable.js)", "user": {"login": "metaforx", "id": 1083778, "node_id": "MDQ6VXNlcjEwODM3Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1083778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metaforx", "html_url": "https://github.com/metaforx", "followers_url": "https://api.github.com/users/metaforx/followers", "following_url": "https://api.github.com/users/metaforx/following{/other_user}", "gists_url": "https://api.github.com/users/metaforx/gists{/gist_id}", "starred_url": "https://api.github.com/users/metaforx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metaforx/subscriptions", "organizations_url": "https://api.github.com/users/metaforx/orgs", "repos_url": "https://api.github.com/users/metaforx/repos", "events_url": "https://api.github.com/users/metaforx/events{/privacy}", "received_events_url": "https://api.github.com/users/metaforx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-04-13T09:29:34Z", "updated_at": "2017-11-30T22:18:37Z", "closed_at": "2016-06-11T14:13:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Uncaught TypeError: jQuery.getQueryParams is not a function\n\nIt might be that jquery is not yet ready at the point where list-sortable functions are called. \n\nI tried removing inlines, admin-style, but the issue stays. Any idea what this could be? I am running 0.6.3 and also had this issue with 0.6.2\n\nThanks for any help. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/95", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/95/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/95/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/95", "id": 139235399, "node_id": "MDU6SXNzdWUxMzkyMzUzOTk=", "number": 95, "title": "Installing with Docker pip3 cause UnicodeDecodeError", "user": {"login": "trung-kitchenstories", "id": 17542317, "node_id": "MDQ6VXNlcjE3NTQyMzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/17542317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trung-kitchenstories", "html_url": "https://github.com/trung-kitchenstories", "followers_url": "https://api.github.com/users/trung-kitchenstories/followers", "following_url": "https://api.github.com/users/trung-kitchenstories/following{/other_user}", "gists_url": "https://api.github.com/users/trung-kitchenstories/gists{/gist_id}", "starred_url": "https://api.github.com/users/trung-kitchenstories/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trung-kitchenstories/subscriptions", "organizations_url": "https://api.github.com/users/trung-kitchenstories/orgs", "repos_url": "https://api.github.com/users/trung-kitchenstories/repos", "events_url": "https://api.github.com/users/trung-kitchenstories/events{/privacy}", "received_events_url": "https://api.github.com/users/trung-kitchenstories/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-08T10:15:12Z", "updated_at": "2016-03-08T10:40:56Z", "closed_at": "2016-03-08T10:40:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to install **django-admin-sortable2==0.6.2** in Docker with pip3 this error occurs.\n\nError:\n\n```\nCollecting django-admin-sortable2==0.6.2 (from -r /tmp/requirements.txt (line 11))\n  Downloading django-admin-sortable2-0.6.2.tar.gz (47kB)\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-build-7uiq52zk/django-admin-sortable2/setup.py\", line 33, in <module>\n        long_description=convert('README.md', 'rst'),\n      File \"/tmp/pip-build-7uiq52zk/django-admin-sortable2/setup.py\", line 11, in convert\n        return fd.read()\n      File \"/usr/lib/python3.4/encodings/ascii.py\", line 26, in decode\n        return codecs.ascii_decode(input, self.errors)[0]\n    UnicodeDecodeError: 'ascii' codec can't decode byte 0xc5 in position 876: ordinal not in range(128)\n```\n\nThe Fix works with **codecs** instead of **io**\nFix: \n\n```\ntry:\n    from pypandoc import convert\nexcept ImportError:\n    import codecs\n    def convert(filename, fmt):\n        with codecs.open(filename, 'r', 'utf-8') as fd:\n            return fd.read()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/93", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/93/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/93/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/93", "id": 135987037, "node_id": "MDU6SXNzdWUxMzU5ODcwMzc=", "number": 93, "title": "when my save_model handle some not null fields(those exclude) problem", "user": {"login": "leench", "id": 157350, "node_id": "MDQ6VXNlcjE1NzM1MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/157350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leench", "html_url": "https://github.com/leench", "followers_url": "https://api.github.com/users/leench/followers", "following_url": "https://api.github.com/users/leench/following{/other_user}", "gists_url": "https://api.github.com/users/leench/gists{/gist_id}", "starred_url": "https://api.github.com/users/leench/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leench/subscriptions", "organizations_url": "https://api.github.com/users/leench/orgs", "repos_url": "https://api.github.com/users/leench/repos", "events_url": "https://api.github.com/users/leench/events{/privacy}", "received_events_url": "https://api.github.com/users/leench/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-24T07:57:03Z", "updated_at": "2016-02-24T08:47:36Z", "closed_at": "2016-02-24T08:46:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "in class SortableAdminMixin\n\n```\n    def save_model(self, request, obj, form, change):\n        if not change:\n            setattr(obj, self.default_order_field, self.get_max_order() + 1)\n        super(SortableAdminMixin, self).save_model(request, obj, form, change)\n```\n\nthat maybe can fix\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/92", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/92/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/92/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/92", "id": 135969441, "node_id": "MDU6SXNzdWUxMzU5Njk0NDE=", "number": 92, "title": "a bug when ModelAdmin.exclude is a tuple", "user": {"login": "leench", "id": 157350, "node_id": "MDQ6VXNlcjE1NzM1MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/157350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leench", "html_url": "https://github.com/leench", "followers_url": "https://api.github.com/users/leench/followers", "following_url": "https://api.github.com/users/leench/following{/other_user}", "gists_url": "https://api.github.com/users/leench/gists{/gist_id}", "starred_url": "https://api.github.com/users/leench/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leench/subscriptions", "organizations_url": "https://api.github.com/users/leench/orgs", "repos_url": "https://api.github.com/users/leench/repos", "events_url": "https://api.github.com/users/leench/events{/privacy}", "received_events_url": "https://api.github.com/users/leench/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-02-24T06:17:35Z", "updated_at": "2017-05-31T14:08:44Z", "closed_at": "2016-02-24T07:06:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "adminsortable2/admin.py\", line 60, in **init**\n    self.exclude = [self.default_order_field] + self.exclude\nTypeError: can only concatenate list (not \"tuple\") to list\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/87", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/87/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/87/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/87", "id": 126477696, "node_id": "MDU6SXNzdWUxMjY0Nzc2OTY=", "number": 87, "title": "Javascript Error: sortable_current_page is not defined", "user": {"login": "chadsaun", "id": 381024, "node_id": "MDQ6VXNlcjM4MTAyNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/381024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadsaun", "html_url": "https://github.com/chadsaun", "followers_url": "https://api.github.com/users/chadsaun/followers", "following_url": "https://api.github.com/users/chadsaun/following{/other_user}", "gists_url": "https://api.github.com/users/chadsaun/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadsaun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadsaun/subscriptions", "organizations_url": "https://api.github.com/users/chadsaun/orgs", "repos_url": "https://api.github.com/users/chadsaun/repos", "events_url": "https://api.github.com/users/chadsaun/events{/privacy}", "received_events_url": "https://api.github.com/users/chadsaun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-13T18:03:46Z", "updated_at": "2016-01-22T10:02:50Z", "closed_at": "2016-01-14T18:38:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting this JS error when I'm viewing a specific Artwork Category and viewing the tabular inline of all the artwork.  \n\n<img width=\"886\" alt=\"screen shot 2016-01-13 at 10 55 51 am\" src=\"https://cloud.githubusercontent.com/assets/381024/12303483/d7ad9db8-b9e7-11e5-9a1c-7a1a39f7073d.png\">\n\nHere is my setup:\n\n```\nclass ArtworkAdminInline(SortableInlineAdminMixin, admin.TabularInline):\n    model = Artwork\n    image_thumb = image_file('obj.image', short_description='Thumbnail')\n    readonly_fields = ('image_thumb',)\n\nclass ArtworkCategoryAdmin(SortableAdminMixin, admin.ModelAdmin):\n    inlines = [ArtworkAdminInline]\n```\n\nI'm not sure why it's including `list-sortable.js` on this page since all it needs is just `inline-sortable.js`.  If I restart my localhost server this will work fine and only include `inline-sortable`.  But if I browse back to the list of Artwork Categories and then go into a different Artwork Category, then it includes both of those js files and I get the error.\n\nI'm using Django 1.8 and django-admin-sortable2 0.6.0\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/83", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/83/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/83/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/83", "id": 122465744, "node_id": "MDU6SXNzdWUxMjI0NjU3NDQ=", "number": 83, "title": "Adding fields to InlineModelAdmin classes results in a KeyError", "user": {"login": "max-pfeiffer", "id": 13573675, "node_id": "MDQ6VXNlcjEzNTczNjc1", "avatar_url": "https://avatars2.githubusercontent.com/u/13573675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-pfeiffer", "html_url": "https://github.com/max-pfeiffer", "followers_url": "https://api.github.com/users/max-pfeiffer/followers", "following_url": "https://api.github.com/users/max-pfeiffer/following{/other_user}", "gists_url": "https://api.github.com/users/max-pfeiffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-pfeiffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-pfeiffer/subscriptions", "organizations_url": "https://api.github.com/users/max-pfeiffer/orgs", "repos_url": "https://api.github.com/users/max-pfeiffer/repos", "events_url": "https://api.github.com/users/max-pfeiffer/events{/privacy}", "received_events_url": "https://api.github.com/users/max-pfeiffer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-12-16T09:48:21Z", "updated_at": "2016-03-30T16:08:42Z", "closed_at": "2016-03-30T16:08:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When adding field entries to BaseModelAdmin.fields in one of the InlineModelAdmin classes django-admin-sortable throws a KeyError. I didn't test it with the ModelAdmin class.\n\nThis is probably due to field that holds the position value, which is marked as hidden. But this is not good, because sometimes you need to specify fields.\n\nAlso it would be good if you can display the position value in an inline. This makes sense when you have a lot of inlines and you want to place an inline on a certain position.\n\nUsing:\nDjango==1.8.7\ndjango-admin-sortable2==0.6.2\n\n![screen shot 2015-12-16 at 10 46 12](https://cloud.githubusercontent.com/assets/13573675/11837619/5a0c74bc-a3e2-11e5-8020-635ab3d6ebdd.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/82", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/82/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/82/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/82", "id": 122458735, "node_id": "MDU6SXNzdWUxMjI0NTg3MzU=", "number": 82, "title": "SortableInlineAdminMixin screws up TabularInline colums", "user": {"login": "max-pfeiffer", "id": 13573675, "node_id": "MDQ6VXNlcjEzNTczNjc1", "avatar_url": "https://avatars2.githubusercontent.com/u/13573675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-pfeiffer", "html_url": "https://github.com/max-pfeiffer", "followers_url": "https://api.github.com/users/max-pfeiffer/followers", "following_url": "https://api.github.com/users/max-pfeiffer/following{/other_user}", "gists_url": "https://api.github.com/users/max-pfeiffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-pfeiffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-pfeiffer/subscriptions", "organizations_url": "https://api.github.com/users/max-pfeiffer/orgs", "repos_url": "https://api.github.com/users/max-pfeiffer/repos", "events_url": "https://api.github.com/users/max-pfeiffer/events{/privacy}", "received_events_url": "https://api.github.com/users/max-pfeiffer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-12-16T09:09:09Z", "updated_at": "2016-06-11T14:06:06Z", "closed_at": "2016-06-11T14:06:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When combinig SortableInlineAdminMixin and TabularInline classes, the column titles doesn't match the column contents any more.\n\nI seems that the content in the column after the \"Sort\" column is not rendered properly into the view. It is shifted one column further. See screenshot.\n\nUsing:\nDjango==1.8.7\ndjango-admin-sortable2==0.6.2\n\n![screen shot 2015-12-16 at 10 06 07](https://cloud.githubusercontent.com/assets/13573675/11836737/eee8508e-a3dc-11e5-870f-057251953aa2.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/81", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/81/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/81/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/81", "id": 122270023, "node_id": "MDU6SXNzdWUxMjIyNzAwMjM=", "number": 81, "title": "SortableInlineAdminMixin interferes with InlineModelAdmin.show_change_link", "user": {"login": "max-pfeiffer", "id": 13573675, "node_id": "MDQ6VXNlcjEzNTczNjc1", "avatar_url": "https://avatars2.githubusercontent.com/u/13573675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-pfeiffer", "html_url": "https://github.com/max-pfeiffer", "followers_url": "https://api.github.com/users/max-pfeiffer/followers", "following_url": "https://api.github.com/users/max-pfeiffer/following{/other_user}", "gists_url": "https://api.github.com/users/max-pfeiffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-pfeiffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-pfeiffer/subscriptions", "organizations_url": "https://api.github.com/users/max-pfeiffer/orgs", "repos_url": "https://api.github.com/users/max-pfeiffer/repos", "events_url": "https://api.github.com/users/max-pfeiffer/events{/privacy}", "received_events_url": "https://api.github.com/users/max-pfeiffer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-15T13:17:18Z", "updated_at": "2019-08-13T20:28:53Z", "closed_at": "2019-08-13T20:28:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using the SortableInlineAdminMixin class the [new Django 1.8 feature InlineModelAdmin.show_change_link](https://docs.djangoproject.com/en/1.8/ref/contrib/admin/#inlinemodeladmin-objects) does't work any more.\n\nTo reproduce:\n1. Add show_change_link=True to your inline model.\n2. Change Link appears ontop of inline\n3. Add the SortableInlineAdminMixin to your Inline class\n4. Change link disappears\n\nUsing:\nDjango==1.8.7\ndjango-admin-sortable2==0.6.2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/79", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/79/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/79/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/79", "id": 121694195, "node_id": "MDU6SXNzdWUxMjE2OTQxOTU=", "number": 79, "title": "Wrong sortable_update url with multiple sortable models", "user": {"login": "beslave", "id": 1387623, "node_id": "MDQ6VXNlcjEzODc2MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1387623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/beslave", "html_url": "https://github.com/beslave", "followers_url": "https://api.github.com/users/beslave/followers", "following_url": "https://api.github.com/users/beslave/following{/other_user}", "gists_url": "https://api.github.com/users/beslave/gists{/gist_id}", "starred_url": "https://api.github.com/users/beslave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/beslave/subscriptions", "organizations_url": "https://api.github.com/users/beslave/orgs", "repos_url": "https://api.github.com/users/beslave/repos", "events_url": "https://api.github.com/users/beslave/events{/privacy}", "received_events_url": "https://api.github.com/users/beslave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-11T11:50:15Z", "updated_at": "2015-12-11T16:27:19Z", "closed_at": "2015-12-11T16:27:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think there is a bug.\n`{% url 'admin:sortable_update' %}` always return 'sortable_update' url for last registered url SortableAdmin.\nFor example, I have three models: ModelOne, ModelTwo, ModelThree.\nAll this model are registered as SortableAdmin instances for admin panel.\nI go to /admin/example_app/model_three and see that\n\n```\nvar sortable_current_page = '/admin/example_app/model_three/adminsortable2_update';\n```\n\nIt's fine, but when I go to modelOne or modelTwo page, the link is the same. So if I drag some ModelOne/ModelTwo the order field will be update for ModelThree instances (or error if instance with same order field value is absent)\n\n![different_urls](https://cloud.githubusercontent.com/assets/1387623/11743092/6784c8de-a00d-11e5-8a0a-ee2cb914e59e.png)\nAs you see url for sort_update is wrong (it's url for some Section model, but page is for Contacts list)\n\n![debug_info](https://cloud.githubusercontent.com/assets/1387623/11743091/6784273a-a00d-11e5-91d6-c28190ad43f2.png)\nIt's error for case when I try to sort some instance of MyModel with order=X but OtherModel.objects.get(order=X) is absent\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/78", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/78/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/78/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/78", "id": 120441806, "node_id": "MDU6SXNzdWUxMjA0NDE4MDY=", "number": 78, "title": "Regression in #74", "user": {"login": "jrief", "id": 1132472, "node_id": "MDQ6VXNlcjExMzI0NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1132472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrief", "html_url": "https://github.com/jrief", "followers_url": "https://api.github.com/users/jrief/followers", "following_url": "https://api.github.com/users/jrief/following{/other_user}", "gists_url": "https://api.github.com/users/jrief/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrief/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrief/subscriptions", "organizations_url": "https://api.github.com/users/jrief/orgs", "repos_url": "https://api.github.com/users/jrief/repos", "events_url": "https://api.github.com/users/jrief/events{/privacy}", "received_events_url": "https://api.github.com/users/jrief/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-04T16:53:18Z", "updated_at": "2015-12-05T15:33:55Z", "closed_at": "2015-12-04T16:54:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "@teddybeermaniac Today I came across a nasty regression introduced by #74.\nWhenever list-sortable.js is included by a detail view, the change_list.html template can't initialize the global variables sortable_current_page and sortable_total_pages. Then accessing these variables results into a Undefined exception.\n\nPatch for this is on the way. Please recheck in your envionment.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/77", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/77/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/77/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/77", "id": 119924426, "node_id": "MDU6SXNzdWUxMTk5MjQ0MjY=", "number": 77, "title": "Admin action Move to other page with ordering = ('-position',)", "user": {"login": "wullerot", "id": 699130, "node_id": "MDQ6VXNlcjY5OTEzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/699130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wullerot", "html_url": "https://github.com/wullerot", "followers_url": "https://api.github.com/users/wullerot/followers", "following_url": "https://api.github.com/users/wullerot/following{/other_user}", "gists_url": "https://api.github.com/users/wullerot/gists{/gist_id}", "starred_url": "https://api.github.com/users/wullerot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wullerot/subscriptions", "organizations_url": "https://api.github.com/users/wullerot/orgs", "repos_url": "https://api.github.com/users/wullerot/repos", "events_url": "https://api.github.com/users/wullerot/events{/privacy}", "received_events_url": "https://api.github.com/users/wullerot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-02T11:42:58Z", "updated_at": "2016-06-11T14:26:18Z", "closed_at": "2016-06-11T14:26:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Somewhat related to [#76](https://github.com/jrief/django-admin-sortable2/issues/76)\nif you define \"negative\" ordering (ordering = ('-position',)) the admin actions which moves the selected item(s) back don't work. The \"endorder\" value in _bulk_move gets a completely wrong value. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/76", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/76/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/76/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/76", "id": 119821055, "node_id": "MDU6SXNzdWUxMTk4MjEwNTU=", "number": 76, "title": "Management commant reorder & ordering = ('-position',)", "user": {"login": "wullerot", "id": 699130, "node_id": "MDQ6VXNlcjY5OTEzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/699130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wullerot", "html_url": "https://github.com/wullerot", "followers_url": "https://api.github.com/users/wullerot/followers", "following_url": "https://api.github.com/users/wullerot/following{/other_user}", "gists_url": "https://api.github.com/users/wullerot/gists{/gist_id}", "starred_url": "https://api.github.com/users/wullerot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wullerot/subscriptions", "organizations_url": "https://api.github.com/users/wullerot/orgs", "repos_url": "https://api.github.com/users/wullerot/repos", "events_url": "https://api.github.com/users/wullerot/events{/privacy}", "received_events_url": "https://api.github.com/users/wullerot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-01T22:18:37Z", "updated_at": "2015-12-01T22:30:57Z", "closed_at": "2015-12-01T22:30:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \nthink i found a little bug in the management command reorder. \nif i have a negative ordering ( ordering=('-position',) ) the reorder command fails silently\n\nthis could be fixed:\nin management.command.reorder line 24\n\n``` python\norderfield = Model._meta.ordering[0]\n```\n\nshould be replaced with\n\n``` python\norderfield = Model._meta.ordering[0]\nif orderfield[0] == '-':\n    orderfield = orderfield[1:]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/75", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/75/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/75/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/75", "id": 119731655, "node_id": "MDU6SXNzdWUxMTk3MzE2NTU=", "number": 75, "title": "New Inline objects are saved as first object", "user": {"login": "max-pfeiffer", "id": 13573675, "node_id": "MDQ6VXNlcjEzNTczNjc1", "avatar_url": "https://avatars2.githubusercontent.com/u/13573675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-pfeiffer", "html_url": "https://github.com/max-pfeiffer", "followers_url": "https://api.github.com/users/max-pfeiffer/followers", "following_url": "https://api.github.com/users/max-pfeiffer/following{/other_user}", "gists_url": "https://api.github.com/users/max-pfeiffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-pfeiffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-pfeiffer/subscriptions", "organizations_url": "https://api.github.com/users/max-pfeiffer/orgs", "repos_url": "https://api.github.com/users/max-pfeiffer/repos", "events_url": "https://api.github.com/users/max-pfeiffer/events{/privacy}", "received_events_url": "https://api.github.com/users/max-pfeiffer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-01T14:48:35Z", "updated_at": "2015-12-08T11:45:23Z", "closed_at": "2015-12-08T11:45:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When adding inline objects (SortableInlineAdminMixin) with the plus button, first they appear at the bottom of the list of inlines.\nWhen saved they become the first item. To reproduce:\n1. Add an inline object with plus button: object appears at the bottom of the list\n2. Hit the save and edit button: object \"jumps\" to top of the list\n\nI was using Firefox 42.0. Django setup:\n\nDjango==1.8.6\ndjango-admin-sortable2==0.6.0\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/70", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/70/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/70/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/70", "id": 93994828, "node_id": "MDU6SXNzdWU5Mzk5NDgyOA==", "number": 70, "title": "Dragging first to last in list doesn't work", "user": {"login": "mbox", "id": 85581, "node_id": "MDQ6VXNlcjg1NTgx", "avatar_url": "https://avatars0.githubusercontent.com/u/85581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbox", "html_url": "https://github.com/mbox", "followers_url": "https://api.github.com/users/mbox/followers", "following_url": "https://api.github.com/users/mbox/following{/other_user}", "gists_url": "https://api.github.com/users/mbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbox/subscriptions", "organizations_url": "https://api.github.com/users/mbox/orgs", "repos_url": "https://api.github.com/users/mbox/repos", "events_url": "https://api.github.com/users/mbox/events{/privacy}", "received_events_url": "https://api.github.com/users/mbox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-07-09T08:55:57Z", "updated_at": "2016-06-11T14:40:00Z", "closed_at": "2016-06-11T14:40:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Steps to reproduce:\n- Using SortableAdminMixin (sort on the change_list view)\n- Create 3 items in the admin\n- Try to drag the top item to the second position - works fine\n- Try to drag the top item to the _end_ of the list - it drops as the _second_ item not the last\n\nSeen with 0.5.1, Django 1.6.11, Safari on OS X 10.10.4\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/69", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/69/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/69/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/69", "id": 93867239, "node_id": "MDU6SXNzdWU5Mzg2NzIzOQ==", "number": 69, "title": "SortableAdminMixin object has no attribute 'get_queryset'", "user": {"login": "jonearley", "id": 1678665, "node_id": "MDQ6VXNlcjE2Nzg2NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1678665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonearley", "html_url": "https://github.com/jonearley", "followers_url": "https://api.github.com/users/jonearley/followers", "following_url": "https://api.github.com/users/jonearley/following{/other_user}", "gists_url": "https://api.github.com/users/jonearley/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonearley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonearley/subscriptions", "organizations_url": "https://api.github.com/users/jonearley/orgs", "repos_url": "https://api.github.com/users/jonearley/repos", "events_url": "https://api.github.com/users/jonearley/events{/privacy}", "received_events_url": "https://api.github.com/users/jonearley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-08T19:16:39Z", "updated_at": "2016-06-11T14:37:51Z", "closed_at": "2016-06-11T14:37:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the SortableAdminMixin I keep getting 'object has no attribute 'get_queryset''.\n\n``` python\n\n# admin.py\n\nfrom adminsortable2.admin import SortableAdminMixin,\n\n...\n\nclass ListAdmin(SortableAdminMixin, admin.ModelAdmin):\n    list_per_page = 20\n    list_display = ('title', 'created_by', 'publish_date', 'expire_date',\n        'status', 'comments', 'is_featured', 'bookmatch')\n    search_fields = ['title', ]\n    filter_horizontal = ('tags',)\n    list_filter = ['status', ListDeleteRequestFilter,\n        IsFeaturedFilter, 'bookmatch', 'tags', ]\n\n    inlines = (ListItemInlineAdmin,)\n    actions = [draft_list, inreview_list, publish_list, archive_list,\n        feature_list, unfeature_list]\n\nadmin.site.register(List, ListAdmin)\n\n```\n\n``` python\n\n# part of the traceback\n\n...\n\nFile \".../lib/python2.7/site-packages/adminsortable2/admin.py\" in get_actions\n  86.         paginator = self.get_paginator(request, self.get_queryset(request), self.list_per_page)\n\nException Type: AttributeError at /admin/selects/list/\nException Value: 'ListAdmin' object has no attribute 'get_queryset'\n\n```\n\nAm I doing something wrong or is this a bug?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/67", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/67/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/67/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/67", "id": 90412373, "node_id": "MDU6SXNzdWU5MDQxMjM3Mw==", "number": 67, "title": "Please: use an iterator in the \"reorder\" command", "user": {"login": "tecnosegugio", "id": 5406051, "node_id": "MDQ6VXNlcjU0MDYwNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5406051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tecnosegugio", "html_url": "https://github.com/tecnosegugio", "followers_url": "https://api.github.com/users/tecnosegugio/followers", "following_url": "https://api.github.com/users/tecnosegugio/following{/other_user}", "gists_url": "https://api.github.com/users/tecnosegugio/gists{/gist_id}", "starred_url": "https://api.github.com/users/tecnosegugio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tecnosegugio/subscriptions", "organizations_url": "https://api.github.com/users/tecnosegugio/orgs", "repos_url": "https://api.github.com/users/tecnosegugio/repos", "events_url": "https://api.github.com/users/tecnosegugio/events{/privacy}", "received_events_url": "https://api.github.com/users/tecnosegugio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-06-23T15:00:59Z", "updated_at": "2015-06-25T18:57:45Z", "closed_at": "2015-06-23T15:57:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Executing a \"reorder\" on a table with hundred of thousands records require a lot of memory and time.\n\nThe problem come from the loop:\nfor obj in Model.objects.all():\nwhich usually load in memory the whole resultset.\n\nTry instead something like:\nfor obj in Model.objects.iterator():\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/66", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/66/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/66/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/66", "id": 87320109, "node_id": "MDU6SXNzdWU4NzMyMDEwOQ==", "number": 66, "title": "when adding a new inline, it appears at first position after save", "user": {"login": "benzkji", "id": 463867, "node_id": "MDQ6VXNlcjQ2Mzg2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/463867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benzkji", "html_url": "https://github.com/benzkji", "followers_url": "https://api.github.com/users/benzkji/followers", "following_url": "https://api.github.com/users/benzkji/following{/other_user}", "gists_url": "https://api.github.com/users/benzkji/gists{/gist_id}", "starred_url": "https://api.github.com/users/benzkji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benzkji/subscriptions", "organizations_url": "https://api.github.com/users/benzkji/orgs", "repos_url": "https://api.github.com/users/benzkji/repos", "events_url": "https://api.github.com/users/benzkji/events{/privacy}", "received_events_url": "https://api.github.com/users/benzkji/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-06-11T11:57:16Z", "updated_at": "2015-11-20T11:51:13Z", "closed_at": "2015-11-20T11:51:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "when adding a new inline, it appears at first position after save, although when adding, it as added at last position. one must not order before save (common use case...) to reproduce this.\n\nwhen addding `default=999` in the order field definition, it works as expected. I'm not sure how it should behave, as the docs say `default=0`...?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/56", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/56/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/56/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/56", "id": 69023052, "node_id": "MDU6SXNzdWU2OTAyMzA1Mg==", "number": 56, "title": "Tabular inline entire row draggable", "user": {"login": "nicholasserra", "id": 512288, "node_id": "MDQ6VXNlcjUxMjI4OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/512288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholasserra", "html_url": "https://github.com/nicholasserra", "followers_url": "https://api.github.com/users/nicholasserra/followers", "following_url": "https://api.github.com/users/nicholasserra/following{/other_user}", "gists_url": "https://api.github.com/users/nicholasserra/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholasserra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholasserra/subscriptions", "organizations_url": "https://api.github.com/users/nicholasserra/orgs", "repos_url": "https://api.github.com/users/nicholasserra/repos", "events_url": "https://api.github.com/users/nicholasserra/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholasserra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-16T22:33:44Z", "updated_at": "2015-04-28T15:37:52Z", "closed_at": "2015-04-28T15:37:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just need some confirmation on whether this is a bug. On tabular inlines, instead of just the \"sort\" area activating the drag and drop, then entire row activates it. I can click anywhere in the tabular row and drag the row around. \n\nFrom the docs it seems like the desired behavior is that only the spot to the very left in the 'sort' column should activate drag.\n\nLooking to dive in and fix this, but not sure if it's intended behavior. Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/55", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/55/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/55/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/55", "id": 68819978, "node_id": "MDU6SXNzdWU2ODgxOTk3OA==", "number": 55, "title": "Django 1.7: Sortable2 1.5 TabularInline template THEAD colspan=2 broken", "user": {"login": "denhartog", "id": 1668738, "node_id": "MDQ6VXNlcjE2Njg3Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1668738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denhartog", "html_url": "https://github.com/denhartog", "followers_url": "https://api.github.com/users/denhartog/followers", "following_url": "https://api.github.com/users/denhartog/following{/other_user}", "gists_url": "https://api.github.com/users/denhartog/gists{/gist_id}", "starred_url": "https://api.github.com/users/denhartog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denhartog/subscriptions", "organizations_url": "https://api.github.com/users/denhartog/orgs", "repos_url": "https://api.github.com/users/denhartog/repos", "events_url": "https://api.github.com/users/denhartog/events{/privacy}", "received_events_url": "https://api.github.com/users/denhartog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-04-16T01:00:02Z", "updated_at": "2016-06-11T14:05:32Z", "closed_at": "2016-06-11T14:05:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I upgraded Sortable2 today and now my inline admin change form is not displaying properly.\n\nI used `collectstatic`.\n\nI think I narrowed down the cause to the fact that `<th{% if forloop.first %} colspan=\"2\"{% endif %}` is not being applied to my first field from the `tabular-1.5.html` template.\n\nIn a browser (Chrome; using Inspect Elements), if I add `colspan=\"2\"` to the first (technically second after \"Sort\") column it displays properly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/54", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/54/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/54/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/54", "id": 67530845, "node_id": "MDU6SXNzdWU2NzUzMDg0NQ==", "number": 54, "title": "Html minifier makes the reorder handle disappear", "user": {"login": "dinoperovic", "id": 1486159, "node_id": "MDQ6VXNlcjE0ODYxNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1486159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dinoperovic", "html_url": "https://github.com/dinoperovic", "followers_url": "https://api.github.com/users/dinoperovic/followers", "following_url": "https://api.github.com/users/dinoperovic/following{/other_user}", "gists_url": "https://api.github.com/users/dinoperovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/dinoperovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dinoperovic/subscriptions", "organizations_url": "https://api.github.com/users/dinoperovic/orgs", "repos_url": "https://api.github.com/users/dinoperovic/repos", "events_url": "https://api.github.com/users/dinoperovic/events{/privacy}", "received_events_url": "https://api.github.com/users/dinoperovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-10T07:24:36Z", "updated_at": "2015-04-10T09:23:06Z", "closed_at": "2015-04-10T09:23:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a html minifier like [django-htmlmin](https://github.com/cobrateam/django-htmlmin) the reorder handle disappears because `&nbsp;` is removed from drag div.\n\nWithout htmlmin:\n`<td class=\"field-_reorder\"><div class=\"drag\" order=\"1\">&nbsp;</div></td>`\n\nWith htmlmin:\n`<td class=\"field-_reorder\"><div class=\"drag\" order=\"1\"></div></td>`\n\nHad to exclude admin from the minifier:\n`EXCLUDE_FROM_MINIFYING = (r'^admin/', )`\n\nJust wanted to point this out.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/53", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/53/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/53/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/53", "id": 65754450, "node_id": "MDU6SXNzdWU2NTc1NDQ1MA==", "number": 53, "title": "adminsortable package name still used in documentation", "user": {"login": "chucksmash", "id": 3101367, "node_id": "MDQ6VXNlcjMxMDEzNjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3101367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chucksmash", "html_url": "https://github.com/chucksmash", "followers_url": "https://api.github.com/users/chucksmash/followers", "following_url": "https://api.github.com/users/chucksmash/following{/other_user}", "gists_url": "https://api.github.com/users/chucksmash/gists{/gist_id}", "starred_url": "https://api.github.com/users/chucksmash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chucksmash/subscriptions", "organizations_url": "https://api.github.com/users/chucksmash/orgs", "repos_url": "https://api.github.com/users/chucksmash/repos", "events_url": "https://api.github.com/users/chucksmash/events{/privacy}", "received_events_url": "https://api.github.com/users/chucksmash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-01T18:53:58Z", "updated_at": "2015-04-01T20:58:07Z", "closed_at": "2015-04-01T20:58:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The project documentation on readthedocs doesn't yet reflect the new package name in several places. Opening a bug for this since it's likely to trip up potential users trying to follow the docs. Here are the occurrences I found:\n\nhttp://django-admin-sortable2.readthedocs.org/en/latest/installation.html#configuration\n\n``` python\nINSTALLED_APPS = (\n    ...\n    'adminsortable',\n    ...\n)\n```\n\nhttp://django-admin-sortable2.readthedocs.org/en/latest/usage.html#integrate-into-a-list-view\n\n``` python\nfrom adminsortable.admin import SortableAdminMixin\n```\n\nhttp://django-admin-sortable2.readthedocs.org/en/latest/usage.html#integrate-into-a-detail-view\n\n``` python\nfrom adminsortable.admin import SortableInlineAdminMixin\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/50", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/50/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/50/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/50", "id": 64509451, "node_id": "MDU6SXNzdWU2NDUwOTQ1MQ==", "number": 50, "title": "Silenced AttributeError for enable_sorting leads to bad list of admin media", "user": {"login": "stefanw", "id": 78356, "node_id": "MDQ6VXNlcjc4MzU2", "avatar_url": "https://avatars0.githubusercontent.com/u/78356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanw", "html_url": "https://github.com/stefanw", "followers_url": "https://api.github.com/users/stefanw/followers", "following_url": "https://api.github.com/users/stefanw/following{/other_user}", "gists_url": "https://api.github.com/users/stefanw/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanw/subscriptions", "organizations_url": "https://api.github.com/users/stefanw/orgs", "repos_url": "https://api.github.com/users/stefanw/repos", "events_url": "https://api.github.com/users/stefanw/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-26T11:59:04Z", "updated_at": "2016-06-11T14:36:59Z", "closed_at": "2016-06-11T14:36:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "`enable_sorting` is set in [`get_changelist`](https://github.com/jrief/django-admin-sortable2/blob/master/adminsortable/admin.py#L103) and checked during gathering of `media`.\n\nHowever, on the detail page `get_changelist` is not called and therefore accessing `enable_sorting` results in an `AttributeError` that is silenced by the media machinery (afaik). This somehow leads to bad media order (Django's jQuery not loaded on top, but in the middle of the stack). This results in JavaScript errors on the page.\n\nA workaround is settings `enable_sorting = False` on your `ModelAdmin` subclass. But this should probably be set on the Mixin itself.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/48", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/48/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/48/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/48", "id": 64051915, "node_id": "MDU6SXNzdWU2NDA1MTkxNQ==", "number": 48, "title": "Change application namespace to not clash with django-admin-sortable", "user": {"login": "mkoistinen", "id": 615759, "node_id": "MDQ6VXNlcjYxNTc1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/615759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkoistinen", "html_url": "https://github.com/mkoistinen", "followers_url": "https://api.github.com/users/mkoistinen/followers", "following_url": "https://api.github.com/users/mkoistinen/following{/other_user}", "gists_url": "https://api.github.com/users/mkoistinen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkoistinen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkoistinen/subscriptions", "organizations_url": "https://api.github.com/users/mkoistinen/orgs", "repos_url": "https://api.github.com/users/mkoistinen/repos", "events_url": "https://api.github.com/users/mkoistinen/events{/privacy}", "received_events_url": "https://api.github.com/users/mkoistinen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-24T17:19:43Z", "updated_at": "2015-03-26T16:11:14Z", "closed_at": "2015-03-26T16:11:14Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I have a number of projects where I currently use django-admin-sortable, but would like to use django-admin-sortable2 because of its clean and lightweight approach to solving the sortable FK problem.\n\nUnfortunately, because both libraries use the same package name: `adminsortable`, it is rather difficult if not impossible to use them side-by-side in the same project during transition. It also means that all of my migration history has to be either rewritten or discarded, because the existing migrations reference `adminsortable.SortableForeignKey`, which does not exist in this package.\n\nI propose (and will submit a PR for shortly) that we change the application package name to 'adminsortable2'. This will have only the smallest implications to new users, but means many more people will be able to use this library.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/45", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/45/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/45/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/45", "id": 58712048, "node_id": "MDU6SXNzdWU1ODcxMjA0OA==", "number": 45, "title": "Changelog", "user": {"login": "rhymes", "id": 146201, "node_id": "MDQ6VXNlcjE0NjIwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/146201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhymes", "html_url": "https://github.com/rhymes", "followers_url": "https://api.github.com/users/rhymes/followers", "following_url": "https://api.github.com/users/rhymes/following{/other_user}", "gists_url": "https://api.github.com/users/rhymes/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhymes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhymes/subscriptions", "organizations_url": "https://api.github.com/users/rhymes/orgs", "repos_url": "https://api.github.com/users/rhymes/repos", "events_url": "https://api.github.com/users/rhymes/events{/privacy}", "received_events_url": "https://api.github.com/users/rhymes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-24T09:19:44Z", "updated_at": "2015-02-24T09:32:15Z", "closed_at": "2015-02-24T09:21:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be very handy to have a Changelog documenting the various releases in the future.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/42", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/42/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/42/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/42", "id": 57163406, "node_id": "MDU6SXNzdWU1NzE2MzQwNg==", "number": 42, "title": "Sorting does not work when ordering is descending `(-order,)`", "user": {"login": "tino", "id": 99524, "node_id": "MDQ6VXNlcjk5NTI0", "avatar_url": "https://avatars2.githubusercontent.com/u/99524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tino", "html_url": "https://github.com/tino", "followers_url": "https://api.github.com/users/tino/followers", "following_url": "https://api.github.com/users/tino/following{/other_user}", "gists_url": "https://api.github.com/users/tino/gists{/gist_id}", "starred_url": "https://api.github.com/users/tino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tino/subscriptions", "organizations_url": "https://api.github.com/users/tino/orgs", "repos_url": "https://api.github.com/users/tino/repos", "events_url": "https://api.github.com/users/tino/events{/privacy}", "received_events_url": "https://api.github.com/users/tino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-02-10T11:36:57Z", "updated_at": "2015-02-16T10:56:39Z", "closed_at": "2015-02-11T19:18:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I want new items to appear up top, so I reverted the sort order on the model:\n\n```\nclass Meta:\n        ordering = ('-order',)\n```\n\nThe order shown in the admin is correct, but all strange things happen when I sort. I can never get an item in the right place, they jump back or end up higher or lower.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/41", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/41/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/41/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/41", "id": 53017595, "node_id": "MDU6SXNzdWU1MzAxNzU5NQ==", "number": 41, "title": "Ambiguity in sort field selector.", "user": {"login": "lvaz", "id": 982130, "node_id": "MDQ6VXNlcjk4MjEzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/982130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lvaz", "html_url": "https://github.com/lvaz", "followers_url": "https://api.github.com/users/lvaz/followers", "following_url": "https://api.github.com/users/lvaz/following{/other_user}", "gists_url": "https://api.github.com/users/lvaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lvaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lvaz/subscriptions", "organizations_url": "https://api.github.com/users/lvaz/orgs", "repos_url": "https://api.github.com/users/lvaz/repos", "events_url": "https://api.github.com/users/lvaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lvaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-29T03:21:03Z", "updated_at": "2014-12-30T12:38:47Z", "closed_at": "2014-12-30T12:38:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a small mistake on file inline-sortable.js, line 5. You used the `$=` selector to find and fill the sort field, which is ambiguous because it automatically fills the sort number to all fields that end with the value set at `default_order_field`. For instance, I have a table with two sort fields: `sort_order` and `filter_sort_order`, and I only want it to sort by `sort_order`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/40", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/40/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/40/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/40", "id": 52884499, "node_id": "MDU6SXNzdWU1Mjg4NDQ5OQ==", "number": 40, "title": "Integration with django-parler", "user": {"login": "georgema1982", "id": 727970, "node_id": "MDQ6VXNlcjcyNzk3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/727970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgema1982", "html_url": "https://github.com/georgema1982", "followers_url": "https://api.github.com/users/georgema1982/followers", "following_url": "https://api.github.com/users/georgema1982/following{/other_user}", "gists_url": "https://api.github.com/users/georgema1982/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgema1982/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgema1982/subscriptions", "organizations_url": "https://api.github.com/users/georgema1982/orgs", "repos_url": "https://api.github.com/users/georgema1982/repos", "events_url": "https://api.github.com/users/georgema1982/events{/privacy}", "received_events_url": "https://api.github.com/users/georgema1982/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-26T06:24:52Z", "updated_at": "2014-12-30T13:13:11Z", "closed_at": "2014-12-30T13:10:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I find that SortableAdminMixin works well with django-parler. But SortableInlineAdminMixin isn't. So right now if a model is both translatable and inline sortable, I'm out of luck. Not sure how to achieve something like: class BlahAdmin(SortableInlineAdminMixin, TranslatableTabularInline).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/39", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/39/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/39/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/39", "id": 49023069, "node_id": "MDU6SXNzdWU0OTAyMzA2OQ==", "number": 39, "title": "Add Another Item doesn't appear anymore", "user": {"login": "posenberg", "id": 6570515, "node_id": "MDQ6VXNlcjY1NzA1MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6570515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/posenberg", "html_url": "https://github.com/posenberg", "followers_url": "https://api.github.com/users/posenberg/followers", "following_url": "https://api.github.com/users/posenberg/following{/other_user}", "gists_url": "https://api.github.com/users/posenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/posenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/posenberg/subscriptions", "organizations_url": "https://api.github.com/users/posenberg/orgs", "repos_url": "https://api.github.com/users/posenberg/repos", "events_url": "https://api.github.com/users/posenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/posenberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-17T01:05:22Z", "updated_at": "2014-11-21T03:40:06Z", "closed_at": "2014-11-21T03:40:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I've been using django-admin-sortable2 to sort the order of pictures in my carousel image galleries. It worked marvelously. But lately, \n- Add Another Item \n  doesn't appear at the bottom of the page anymore. \n\nI'm using Django==1.6.7\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/33", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/33/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/33/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/33", "id": 42699145, "node_id": "MDU6SXNzdWU0MjY5OTE0NQ==", "number": 33, "title": "ImportError: No module named adminsortable", "user": {"login": "matiasbenedetto", "id": 1310626, "node_id": "MDQ6VXNlcjEzMTA2MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1310626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matiasbenedetto", "html_url": "https://github.com/matiasbenedetto", "followers_url": "https://api.github.com/users/matiasbenedetto/followers", "following_url": "https://api.github.com/users/matiasbenedetto/following{/other_user}", "gists_url": "https://api.github.com/users/matiasbenedetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/matiasbenedetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matiasbenedetto/subscriptions", "organizations_url": "https://api.github.com/users/matiasbenedetto/orgs", "repos_url": "https://api.github.com/users/matiasbenedetto/repos", "events_url": "https://api.github.com/users/matiasbenedetto/events{/privacy}", "received_events_url": "https://api.github.com/users/matiasbenedetto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-09-13T16:07:20Z", "updated_at": "2020-01-21T15:36:20Z", "closed_at": "2014-12-29T10:16:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, im using Django 1.7 and im geting this error when in run python manage.py runserver:\n\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/home/matias/env/sudestada/local/lib/python2.7/site-packages/django/core/management/**init**.py\", line 385, in execute_from_command_line\n    utility.execute()\n  File \"/home/matias/env/sudestada/local/lib/python2.7/site-packages/django/core/management/**init**.py\", line 354, in execute\n    django.setup()\n  File \"/home/matias/env/sudestada/local/lib/python2.7/site-packages/django/**init**.py\", line 21, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/home/matias/env/sudestada/local/lib/python2.7/site-packages/django/apps/registry.py\", line 85, in populate\n    app_config = AppConfig.create(entry)\n  File \"/home/matias/env/sudestada/local/lib/python2.7/site-packages/django/apps/config.py\", line 87, in create\n    module = import_module(entry)\n  File \"/usr/lib/python2.7/importlib/**init**.py\", line 37, in import_module\n    **import**(name)\nImportError: No module named adminsortable\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/28", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/28/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/28/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/28", "id": 35124290, "node_id": "MDU6SXNzdWUzNTEyNDI5MA==", "number": 28, "title": "Add locales", "user": {"login": "yakky", "id": 714711, "node_id": "MDQ6VXNlcjcxNDcxMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/714711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yakky", "html_url": "https://github.com/yakky", "followers_url": "https://api.github.com/users/yakky/followers", "following_url": "https://api.github.com/users/yakky/following{/other_user}", "gists_url": "https://api.github.com/users/yakky/gists{/gist_id}", "starred_url": "https://api.github.com/users/yakky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yakky/subscriptions", "organizations_url": "https://api.github.com/users/yakky/orgs", "repos_url": "https://api.github.com/users/yakky/repos", "events_url": "https://api.github.com/users/yakky/events{/privacy}", "received_events_url": "https://api.github.com/users/yakky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-06-06T07:25:42Z", "updated_at": "2014-06-06T20:34:51Z", "closed_at": "2014-06-06T20:34:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be useful if django-admin-sortable2 would ship with embedded translations as the code is correctly setup. I can help if needed\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/25", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/25/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/25/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/25", "id": 33978880, "node_id": "MDU6SXNzdWUzMzk3ODg4MA==", "number": 25, "title": "admin.TabularInline problem in django 1.5.x", "user": {"login": "Alex-Sichkar", "id": 1922086, "node_id": "MDQ6VXNlcjE5MjIwODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1922086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alex-Sichkar", "html_url": "https://github.com/Alex-Sichkar", "followers_url": "https://api.github.com/users/Alex-Sichkar/followers", "following_url": "https://api.github.com/users/Alex-Sichkar/following{/other_user}", "gists_url": "https://api.github.com/users/Alex-Sichkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alex-Sichkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alex-Sichkar/subscriptions", "organizations_url": "https://api.github.com/users/Alex-Sichkar/orgs", "repos_url": "https://api.github.com/users/Alex-Sichkar/repos", "events_url": "https://api.github.com/users/Alex-Sichkar/events{/privacy}", "received_events_url": "https://api.github.com/users/Alex-Sichkar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-05-21T12:49:26Z", "updated_at": "2016-06-11T14:36:20Z", "closed_at": "2016-06-11T14:36:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "\"Order\" field don't hide. For now I use a workaround to solve it. In template tabular-1.5.html I changed this:\n\n``` html\n<td{% if field.field.name %} class=\"field-{{ field.field.name }}{% if field.field.is_hidden %} is_hidden{% endif %}\"{% endif %}>\n```\n\nto this:\n\n``` html\n<td{% if field.field.name %} class=\"field-{{ field.field.name }}{% if field.field.name == inline_admin_formset.formset.default_order_field %} is_hidden{% endif %}\"{% endif %}>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/24", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/24/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/24/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/24", "id": 33720431, "node_id": "MDU6SXNzdWUzMzcyMDQzMQ==", "number": 24, "title": "Original values word-wrap out of view in TabularInlines", "user": {"login": "alanwj", "id": 189152, "node_id": "MDQ6VXNlcjE4OTE1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/189152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanwj", "html_url": "https://github.com/alanwj", "followers_url": "https://api.github.com/users/alanwj/followers", "following_url": "https://api.github.com/users/alanwj/following{/other_user}", "gists_url": "https://api.github.com/users/alanwj/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanwj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanwj/subscriptions", "organizations_url": "https://api.github.com/users/alanwj/orgs", "repos_url": "https://api.github.com/users/alanwj/repos", "events_url": "https://api.github.com/users/alanwj/events{/privacy}", "received_events_url": "https://api.github.com/users/alanwj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-05-17T01:19:49Z", "updated_at": "2016-06-11T14:35:53Z", "closed_at": "2016-06-11T14:35:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any time the original value of a model instance (as determined by its **str** method) contains a character upon which word wrap could occur, such as space or dash, the rest of the value is word wrapped out of visibility.\n\nAs an example, create a TabularInline for the following model:\n\n```\nfrom localflavor.us.models import PhoneNumberField\n\n@python_2_unicode_compatible\nclass PhoneNumber(models.Model):\n    other_model = models.ForeignKey('OtherModel')\n    number = PhoneNumberField('phone number')\n\n    order = models.PositiveSmallIntegerField(default=0)\n\n    class Meta(object):\n        ordering = ('order',)\n\n    def __str__(self):\n        return self.number\n```\n\nAfter saving the phone number '123-456-7890', the original value will be subsequently displayed as '123-'.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/23", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/23/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/23/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/23", "id": 33574204, "node_id": "MDU6SXNzdWUzMzU3NDIwNA==", "number": 23, "title": "<input> and <select> are not selectable with mouse click in Firefox", "user": {"login": "erhan-", "id": 3534714, "node_id": "MDQ6VXNlcjM1MzQ3MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3534714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erhan-", "html_url": "https://github.com/erhan-", "followers_url": "https://api.github.com/users/erhan-/followers", "following_url": "https://api.github.com/users/erhan-/following{/other_user}", "gists_url": "https://api.github.com/users/erhan-/gists{/gist_id}", "starred_url": "https://api.github.com/users/erhan-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erhan-/subscriptions", "organizations_url": "https://api.github.com/users/erhan-/orgs", "repos_url": "https://api.github.com/users/erhan-/repos", "events_url": "https://api.github.com/users/erhan-/events{/privacy}", "received_events_url": "https://api.github.com/users/erhan-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-05-15T10:43:28Z", "updated_at": "2015-04-14T22:40:27Z", "closed_at": "2014-06-07T11:13:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, \n\nthanks for your nifty tool first.\n\nSo I'm using this application with django cms 3 and I have following problem with inline sortables:\n\nWhen I try to click on a <input> or <select> tag, I automatically start dragging that object. As a workaround I can click with right click on that input field first and then it is selected and I can write in it or I can tab till to the input field.\n\nStrangely this problem is only in firefox. On a webkit based browser there is no problem.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/22", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/22/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/22/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/22", "id": 32780854, "node_id": "MDU6SXNzdWUzMjc4MDg1NA==", "number": 22, "title": "Heads up on RemovedInDjango18Warning", "user": {"login": "wpg4665", "id": 621376, "node_id": "MDQ6VXNlcjYyMTM3Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/621376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wpg4665", "html_url": "https://github.com/wpg4665", "followers_url": "https://api.github.com/users/wpg4665/followers", "following_url": "https://api.github.com/users/wpg4665/following{/other_user}", "gists_url": "https://api.github.com/users/wpg4665/gists{/gist_id}", "starred_url": "https://api.github.com/users/wpg4665/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wpg4665/subscriptions", "organizations_url": "https://api.github.com/users/wpg4665/orgs", "repos_url": "https://api.github.com/users/wpg4665/repos", "events_url": "https://api.github.com/users/wpg4665/events{/privacy}", "received_events_url": "https://api.github.com/users/wpg4665/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-05T00:00:36Z", "updated_at": "2016-06-11T14:34:42Z", "closed_at": "2016-06-11T14:34:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Apparently, in Django 1.7, they've depreciated BaseModelAdmin.queryset in favor of get_queryset and are planning to remove in Django 1.8. Just wanted to give you a heads up since I'm getting the warnings.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/21", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/21/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/21/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/21", "id": 32711577, "node_id": "MDU6SXNzdWUzMjcxMTU3Nw==", "number": 21, "title": "Field required error with placeholders", "user": {"login": "ygini", "id": 202334, "node_id": "MDQ6VXNlcjIwMjMzNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/202334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ygini", "html_url": "https://github.com/ygini", "followers_url": "https://api.github.com/users/ygini/followers", "following_url": "https://api.github.com/users/ygini/following{/other_user}", "gists_url": "https://api.github.com/users/ygini/gists{/gist_id}", "starred_url": "https://api.github.com/users/ygini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ygini/subscriptions", "organizations_url": "https://api.github.com/users/ygini/orgs", "repos_url": "https://api.github.com/users/ygini/repos", "events_url": "https://api.github.com/users/ygini/events{/privacy}", "received_events_url": "https://api.github.com/users/ygini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-05-02T17:52:56Z", "updated_at": "2016-06-11T14:34:28Z", "closed_at": "2016-06-11T14:34:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "By default, TabularLine show more line than necessary in the admin, to simplify the adding process.\n\nI've a bug with django-admin-sortable2 and that feature. Django-admin-sortable2 keep trying to reorder un existing fields, leading me to a field required error when I try to save.\n\nIf I remove the SortableInlineAdminMixin option, everything work, even manual reordering.\n\nIt look like django-admin-sortable2 try to edit the order settings for each field, even the one without values.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/20", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/20/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/20/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/20", "id": 32293436, "node_id": "MDU6SXNzdWUzMjI5MzQzNg==", "number": 20, "title": "TypeError (types.MethodType takes three arguments?)", "user": {"login": "Hexcles", "id": 1436812, "node_id": "MDQ6VXNlcjE0MzY4MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1436812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hexcles", "html_url": "https://github.com/Hexcles", "followers_url": "https://api.github.com/users/Hexcles/followers", "following_url": "https://api.github.com/users/Hexcles/following{/other_user}", "gists_url": "https://api.github.com/users/Hexcles/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hexcles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hexcles/subscriptions", "organizations_url": "https://api.github.com/users/Hexcles/orgs", "repos_url": "https://api.github.com/users/Hexcles/repos", "events_url": "https://api.github.com/users/Hexcles/events{/privacy}", "received_events_url": "https://api.github.com/users/Hexcles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-26T17:13:06Z", "updated_at": "2014-04-26T19:45:25Z", "closed_at": "2014-04-26T19:45:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I write the following code to make a ListAdmin sortable:\n\n``` python\nfrom django.contrib import admin\nfrom mall.models import HomepageItem\nfrom adminsortable.admin import SortableAdminMixin\n\nclass HomepageItemAdmin(SortableAdminMixin, admin.ModelAdmin):\n    pass\nadmin.site.register(HomepageItem, HomepageItemAdmin)\n```\n\nOnce I run the server and browse the root URL, I get the TypeError exception, which lies in: https://github.com/jrief/django-admin-sortable2/blob/master/adminsortable/admin.py#L129\n\nThe MethodType (imported from types) takes only two arguments, but there are three in the code.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/19", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/19/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/19/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/19", "id": 31758171, "node_id": "MDU6SXNzdWUzMTc1ODE3MQ==", "number": 19, "title": "Ordering is not updated in the database", "user": {"login": "sachitad", "id": 2049878, "node_id": "MDQ6VXNlcjIwNDk4Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2049878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sachitad", "html_url": "https://github.com/sachitad", "followers_url": "https://api.github.com/users/sachitad/followers", "following_url": "https://api.github.com/users/sachitad/following{/other_user}", "gists_url": "https://api.github.com/users/sachitad/gists{/gist_id}", "starred_url": "https://api.github.com/users/sachitad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sachitad/subscriptions", "organizations_url": "https://api.github.com/users/sachitad/orgs", "repos_url": "https://api.github.com/users/sachitad/repos", "events_url": "https://api.github.com/users/sachitad/events{/privacy}", "received_events_url": "https://api.github.com/users/sachitad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2014-04-17T20:12:24Z", "updated_at": "2015-10-05T19:51:19Z", "closed_at": "2014-12-29T10:18:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nWhen I drag and drop the model datas from one row to another, they are not updated in the db. Thus when I refresh the page it's the same. What am I missing?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/18", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/18/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/18/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/18", "id": 31390724, "node_id": "MDU6SXNzdWUzMTM5MDcyNA==", "number": 18, "title": "Unsortable inline models become draggable when there is a sortable inline model", "user": {"login": "Hexcles", "id": 1436812, "node_id": "MDQ6VXNlcjE0MzY4MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1436812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hexcles", "html_url": "https://github.com/Hexcles", "followers_url": "https://api.github.com/users/Hexcles/followers", "following_url": "https://api.github.com/users/Hexcles/following{/other_user}", "gists_url": "https://api.github.com/users/Hexcles/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hexcles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hexcles/subscriptions", "organizations_url": "https://api.github.com/users/Hexcles/orgs", "repos_url": "https://api.github.com/users/Hexcles/repos", "events_url": "https://api.github.com/users/Hexcles/events{/privacy}", "received_events_url": "https://api.github.com/users/Hexcles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-12T20:35:30Z", "updated_at": "2014-04-25T20:33:24Z", "closed_at": "2014-04-14T17:46:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a model admin, suppose we have two inline models: one is sortable and the other is not. If I add the SortableInlineAdminMixin to the sortable model, on the admin page, the entries of the other (unsortable) model become draggable as well (however, the drag-and-drop has no actual effects because there is no ordering).\n\nI think the problem lies in the inline-sortable.js file: it simply adds drag-and-drop support to all inline models without checking they are sortable or not. And if there is one sortable inline model, this js will be included and thus all inline models are draggable.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/17", "repository_url": "https://api.github.com/repos/jrief/django-admin-sortable2", "labels_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/17/comments", "events_url": "https://api.github.com/repos/jrief/django-admin-sortable2/issues/17/events", "html_url": "https://github.com/jrief/django-admin-sortable2/issues/17", "id": 30728559, "node_id": "MDU6SXNzdWUzMDcyODU1OQ==", "number": 17, "title": "In setup.py, install_requires=['Django>=1.4'] is dangerous!", "user": {"login": "coredumperror", "id": 413571, "node_id": "MDQ6VXNlcjQxMzU3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/413571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coredumperror", "html_url": "https://github.com/coredumperror", "followers_url": "https://api.github.com/users/coredumperror/followers", "following_url": "https://api.github.com/users/coredumperror/following{/other_user}", "gists_url": "https://api.github.com/users/coredumperror/gists{/gist_id}", "starred_url": "https://api.github.com/users/coredumperror/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coredumperror/subscriptions", "organizations_url": "https://api.github.com/users/coredumperror/orgs", "repos_url": "https://api.github.com/users/coredumperror/repos", "events_url": "https://api.github.com/users/coredumperror/events{/privacy}", "received_events_url": "https://api.github.com/users/coredumperror/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-02T21:45:40Z", "updated_at": "2014-04-02T21:56:09Z", "closed_at": "2014-04-02T21:56:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I recently updated my installation of django-admin-sortable2 using \"pip install --upgrade django-admin-sortable2\", and it did something I didn't expect and absolutely don't want to happen: _pip also updated my Django_ (to 1.6.2). It appears to have done this because of the `install_requires=['Django>=1.4']` parameter to `setup()`.\n\nThis is extremely dangerous, because as I understand it, pip will gladly upgrade Django to 1.7 (whenever that comes out officially on PyPI). This would be disastrous! Even upgrades to minor point releases would be bad, because the user didn't ask for them.\n\nI've looked at a few other popular Django apps, and none of them use an `install_requires` setting in their setup.py files. So I think the best course of action is to remove it.\n", "performed_via_github_app": null, "score": 1.0}]}