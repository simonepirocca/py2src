{"total_count": 16, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/117", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/117/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/117/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/117", "id": 652094340, "node_id": "MDU6SXNzdWU2NTIwOTQzNDA=", "number": 117, "title": "MockModel never \"in\" MockSet in Python 2.7 ", "user": {"login": "mapx", "id": 4576282, "node_id": "MDQ6VXNlcjQ1NzYyODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4576282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mapx", "html_url": "https://github.com/mapx", "followers_url": "https://api.github.com/users/mapx/followers", "following_url": "https://api.github.com/users/mapx/following{/other_user}", "gists_url": "https://api.github.com/users/mapx/gists{/gist_id}", "starred_url": "https://api.github.com/users/mapx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mapx/subscriptions", "organizations_url": "https://api.github.com/users/mapx/orgs", "repos_url": "https://api.github.com/users/mapx/repos", "events_url": "https://api.github.com/users/mapx/events{/privacy}", "received_events_url": "https://api.github.com/users/mapx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T07:56:52Z", "updated_at": "2020-07-08T07:40:16Z", "closed_at": "2020-07-08T07:40:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\nIn [1]: foos = MockSet(MockModel(id=1))\r\n\r\nIn [2]: foo = foos[0]\r\n\r\nIn [3]: foo in foos\r\nOut[3]: False\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/111", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/111/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/111/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/111", "id": 608557663, "node_id": "MDU6SXNzdWU2MDg1NTc2NjM=", "number": 111, "title": "Build is broken with pip 20.1", "user": {"login": "rbusquet", "id": 7198302, "node_id": "MDQ6VXNlcjcxOTgzMDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7198302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbusquet", "html_url": "https://github.com/rbusquet", "followers_url": "https://api.github.com/users/rbusquet/followers", "following_url": "https://api.github.com/users/rbusquet/following{/other_user}", "gists_url": "https://api.github.com/users/rbusquet/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbusquet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbusquet/subscriptions", "organizations_url": "https://api.github.com/users/rbusquet/orgs", "repos_url": "https://api.github.com/users/rbusquet/repos", "events_url": "https://api.github.com/users/rbusquet/events{/privacy}", "received_events_url": "https://api.github.com/users/rbusquet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-28T19:27:03Z", "updated_at": "2020-05-05T12:38:57Z", "closed_at": "2020-05-04T02:13:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nCollecting django-mock-queries\r\n  Downloading django_mock_queries-2.1.4.tar.gz (19 kB)\r\n    ERROR: Command errored out with exit status 1:\r\n     command: ~/.pyenv/versions/3.5.9/envs/venv/bin/python3.5 -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/private/var/folders/zx/2wg3gb553mzf9qmv349dbczr0000gp/T/pip-install-a_7srd3z/django-mock-queries/setup.py'\"'\"'; __file__='\"'\"'/private/var/folders/zx/2wg3gb553mzf9qmv349dbczr0000gp/T/pip-install-a_7srd3z/django-mock-queries/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /private/var/folders/zx/2wg3gb553mzf9qmv349dbczr0000gp/T/pip-pip-egg-info-wafekgr9\r\n         cwd: /private/var/folders/zx/2wg3gb553mzf9qmv349dbczr0000gp/T/pip-install-a_7srd3z/django-mock-queries/\r\n    Complete output (7 lines):\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/private/var/folders/zx/2wg3gb553mzf9qmv349dbczr0000gp/T/pip-install-a_7srd3z/django-mock-queries/setup.py\", line 9, in <module>\r\n        req = [str(ir.req) for ir in install_req]\r\n      File \"/private/var/folders/zx/2wg3gb553mzf9qmv349dbczr0000gp/T/pip-install-a_7srd3z/django-mock-queries/setup.py\", line 9, in <listcomp>\r\n        req = [str(ir.req) for ir in install_req]\r\n    AttributeError: 'ParsedRequirement' object has no attribute 'req'\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\r\n```\r\n\r\nfrom https://github.com/pypa/pip/issues/2286#issuecomment-68285791\r\n\r\n> @dstufft: A setup.py which is importing pip is a broken setup.py already. We do not offer a programmatic API for people to use nor do we offer any backwards compatibility guarantees for any of the functions inside of pip.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/104", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/104/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/104/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/104", "id": 544645421, "node_id": "MDU6SXNzdWU1NDQ2NDU0MjE=", "number": 104, "title": "Add support for Django 3", "user": {"login": "leovanzella", "id": 1300810, "node_id": "MDQ6VXNlcjEzMDA4MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1300810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leovanzella", "html_url": "https://github.com/leovanzella", "followers_url": "https://api.github.com/users/leovanzella/followers", "following_url": "https://api.github.com/users/leovanzella/following{/other_user}", "gists_url": "https://api.github.com/users/leovanzella/gists{/gist_id}", "starred_url": "https://api.github.com/users/leovanzella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leovanzella/subscriptions", "organizations_url": "https://api.github.com/users/leovanzella/orgs", "repos_url": "https://api.github.com/users/leovanzella/repos", "events_url": "https://api.github.com/users/leovanzella/events{/privacy}", "received_events_url": "https://api.github.com/users/leovanzella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-02T16:19:23Z", "updated_at": "2020-03-03T18:27:57Z", "closed_at": "2020-03-03T18:27:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI see in the requirements/core.txt that Django is limited to version 2. What could be done so Django 3.0 can be supported?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/103", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/103/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/103/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/103", "id": 532874682, "node_id": "MDU6SXNzdWU1MzI4NzQ2ODI=", "number": 103, "title": "Values list doesn't act as expected", "user": {"login": "bruno-pinheiro-ac", "id": 57412826, "node_id": "MDQ6VXNlcjU3NDEyODI2", "avatar_url": "https://avatars3.githubusercontent.com/u/57412826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bruno-pinheiro-ac", "html_url": "https://github.com/bruno-pinheiro-ac", "followers_url": "https://api.github.com/users/bruno-pinheiro-ac/followers", "following_url": "https://api.github.com/users/bruno-pinheiro-ac/following{/other_user}", "gists_url": "https://api.github.com/users/bruno-pinheiro-ac/gists{/gist_id}", "starred_url": "https://api.github.com/users/bruno-pinheiro-ac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bruno-pinheiro-ac/subscriptions", "organizations_url": "https://api.github.com/users/bruno-pinheiro-ac/orgs", "repos_url": "https://api.github.com/users/bruno-pinheiro-ac/repos", "events_url": "https://api.github.com/users/bruno-pinheiro-ac/events{/privacy}", "received_events_url": "https://api.github.com/users/bruno-pinheiro-ac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-04T19:02:34Z", "updated_at": "2019-12-04T19:24:30Z", "closed_at": "2019-12-04T19:24:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "When calling values_list on a MockSet is expected a list containing the attributes provided as parameter. This is Django's behavior.\r\n\r\nCurrently calling values_list is returning a MockSet.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/96", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/96/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/96/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/96", "id": 438806090, "node_id": "MDU6SXNzdWU0Mzg4MDYwOTA=", "number": 96, "title": "Breaking changes in 2.1.2: ignored filtered elements", "user": {"login": "dannywillems", "id": 6018454, "node_id": "MDQ6VXNlcjYwMTg0NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6018454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannywillems", "html_url": "https://github.com/dannywillems", "followers_url": "https://api.github.com/users/dannywillems/followers", "following_url": "https://api.github.com/users/dannywillems/following{/other_user}", "gists_url": "https://api.github.com/users/dannywillems/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannywillems/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannywillems/subscriptions", "organizations_url": "https://api.github.com/users/dannywillems/orgs", "repos_url": "https://api.github.com/users/dannywillems/repos", "events_url": "https://api.github.com/users/dannywillems/events{/privacy}", "received_events_url": "https://api.github.com/users/dannywillems/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-30T14:23:42Z", "updated_at": "2019-05-04T20:20:24Z", "closed_at": "2019-05-04T20:20:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nSeems there is a breaking change in the filter implementation, maybe introduced 08b5d769c5c797968f3a8c3db68173324a01162f.\r\n\r\nI cannot reproduce with a simple example, but seems some items are ignored while using filter on a mocked QuerySet, even there should be filtered. Downgrading to 2.1.1 works.\r\n\r\nI suppose it is when the value is an integer or any other type. You only want to check it is not None, not just if the value is `True`. I would suggest changing it in `if first is not None`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/91", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/91/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/91/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/91", "id": 360172295, "node_id": "MDU6SXNzdWUzNjAxNzIyOTU=", "number": 91, "title": "Mocking serializer: ListSerializer object is not callable", "user": {"login": "AdrienLemaire", "id": 260983, "node_id": "MDQ6VXNlcjI2MDk4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/260983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdrienLemaire", "html_url": "https://github.com/AdrienLemaire", "followers_url": "https://api.github.com/users/AdrienLemaire/followers", "following_url": "https://api.github.com/users/AdrienLemaire/following{/other_user}", "gists_url": "https://api.github.com/users/AdrienLemaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdrienLemaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdrienLemaire/subscriptions", "organizations_url": "https://api.github.com/users/AdrienLemaire/orgs", "repos_url": "https://api.github.com/users/AdrienLemaire/repos", "events_url": "https://api.github.com/users/AdrienLemaire/events{/privacy}", "received_events_url": "https://api.github.com/users/AdrienLemaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-14T06:25:43Z", "updated_at": "2018-10-09T13:00:58Z", "closed_at": "2018-10-09T13:00:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "In order to increase coverage, I'm trying to test my serializer methods, such as \r\n\r\nserializer\r\n```py\r\nfrom rest_framework import serializers\r\nfrom app.models import Host, HostRole\r\n\r\nclass HostSerializer(serializers.ModelSerializer):\r\n    hostrole_set = serializers.SerializerMethodField('get_main_hostrole')\r\n    class Meta:\r\n        model = Host\r\n        fields = ('hostrole_set')\r\n\r\n    def get_main_hostrole(self, host):\r\n        qs = HostRole.objects.filter(role_type=\"main\", host=host)\r\n        serializer = HostRoleSerializer(instance=qs, many=True)\r\n        return serializer.data\r\n```\r\n\r\ntest\r\n```py\r\nfrom django.test import TestCase\r\nfrom app.serializers import HostSerializer, HostRoleSerializer, HostRole\r\nfrom django_mock_queries.query import MockSet, MockModel\r\nfrom unittest.mock import patch\r\n\r\n\r\n\r\nHOST = MockModel(pk=1)\r\nHOST_ROLES = MockSet(\r\n    MockModel(\r\n        pk=1,\r\n        host=1,\r\n        roletype='main',\r\n        name='Main role',\r\n    ),\r\n    MockModel(pk=2, host=HOST, role_type='sub', name='Sub role'),\r\n    model=HostRole,\r\n)\r\n\r\nclass HostSerializerTestCase(TestCase):\r\n    @patch('app.serializers.hosts.HostRole', objects=HOST_ROLES)\r\n    def test_get_main_hostrole(self, mock_objects):\r\n        self.assertEqual(\r\n            HostSerializer().get_main_hostrole(HOST),\r\n            {\r\n                'pk': 1,\r\n                'host': 1,\r\n                'roletype': 'main',\r\n                'name': 'Main role',\r\n            },\r\n        )\r\n```\r\n\r\nthis results on the test failing with\r\n```\r\nAssertionError: [] != {'pk': 1, 'host': 1, 'roletype': 'main', 'name': 'Main role'} \r\n```\r\n\r\nIf I try to replace `host=1` with `host=HOST` in the HOST_ROLES MockModel, it fails on \r\n`return serializer.data` with this error:\r\n```\r\n/usr/local/lib/python3.7/site-packages/rest_framework/serializers.py:514: in to_representation\r\n    attribute = field.get_attribute(instance)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = PrimaryKeyRelatedField(read_only=True)\r\ninstance = {'pk': 1, 'host': {'pk': 1, 'save': <PropertyMock id='139917611941784'>, '_MockModel__meta': <django_mock_queries.quer...e_type': None, 'task': None, 'description': None, 'about': None,}\r\n\r\n    def get_attribute(self, instance):\r\n        if self.use_pk_only_optimization() and self.source_attrs:\r\n            # Optimized case, return a mock object only containing the pk attribute.\r\n            try:\r\n                instance = get_attribute(instance, self.source_attrs[:-1])\r\n>               value = instance.serializable_value(self.source_attrs[-1])\r\nE               TypeError: 'NoneType' object is not callable\r\n\r\n/usr/local/lib/python3.7/site-packages/rest_framework/relations.py:167: TypeError\r\n```\r\n\r\n\r\n\r\nRe-reading your doc, I tried using the assert_serializer method, but I'm unclear on the best way to use it. When adding a breakpoint after `serializer = HostRoleSerializer(instance=qs, many=True)`:\r\n```py\r\nipdb> assert_serializer(serializer).instance(qs.first()).returns('pk', 'name').run()                      \r\n*** TypeError: 'ListSerializer' object is not callable   \r\n```\r\nI just want my test to verify that the `HostSerializer.get_main_hostrole(HOST)` is gonna return the data from the host role with roletype='main'.\r\n\r\nDid you spot a mistake in my test ? Or do you have a better idea on how to complete this test ? Thanks for the support", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/88", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/88/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/88/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/88", "id": 338858890, "node_id": "MDU6SXNzdWUzMzg4NTg4OTA=", "number": 88, "title": "MockSet doesn't seem to copy all of its related model's properties.", "user": {"login": "AdrienLemaire", "id": 260983, "node_id": "MDQ6VXNlcjI2MDk4Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/260983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdrienLemaire", "html_url": "https://github.com/AdrienLemaire", "followers_url": "https://api.github.com/users/AdrienLemaire/followers", "following_url": "https://api.github.com/users/AdrienLemaire/following{/other_user}", "gists_url": "https://api.github.com/users/AdrienLemaire/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdrienLemaire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdrienLemaire/subscriptions", "organizations_url": "https://api.github.com/users/AdrienLemaire/orgs", "repos_url": "https://api.github.com/users/AdrienLemaire/repos", "events_url": "https://api.github.com/users/AdrienLemaire/events{/privacy}", "received_events_url": "https://api.github.com/users/AdrienLemaire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-06T08:55:34Z", "updated_at": "2020-03-22T13:28:47Z", "closed_at": "2018-07-07T23:30:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "View\r\n```py\r\nfrom django.shortcuts import get_object_or_404\r\nfrom rest_framework import viewsets\r\nfrom rest_framework.response import Response\r\nfrom app.authentication import FirebaseAuthentication\r\nfrom app.models import User\r\nfrom app.serializers import UserSerializer\r\n\r\nclass UserViewSet(viewsets.ModelViewSet):\r\n    queryset = User.objects.all()\r\n    serializer_class = UserSerializer\r\n\r\n    def retrieve(self, request, pk=None):\r\n        queryset = User.objects.all()\r\n        user = get_object_or_404(queryset, pk=pk)\r\n        serializer = UserSerializer(user)\r\n        return Response(serializer.data)\r\n```\r\n\r\nTest\r\n```py\r\ndef generate_fake_user(pk, name):\r\n    return {\r\n        'pk': pk,\r\n        'email': '{}@example.com'.format(name),\r\n        'password': 'password{}'.format(name),\r\n    }\r\n\r\nclass UserViewSetTestCase(TestCase):\r\n    users = MockSet(\r\n        User(**generate_fake_user(1, 'A')),\r\n        User(**generate_fake_user(2, 'B')))\r\n    user_objects = patch(\r\n        'app.models.user.User.objects.all',\r\n        return_value=users)\r\n\r\n    @user_objects\r\n    def test_retrieve(self, usersMock):\r\n        request = RequestFactory()\r\n        request.user = AnonymousUser()\r\n        result = UserViewSet().retrieve(request)\r\n```\r\n\r\nThis raises\r\n```\r\nAttributeError: 'NoneType' object has no attribute 'DoesNotExist'\r\n```\r\n\r\nI'm trying to test the situation where no user can be found for the pk queried, and `get_object_or_404` uses `except queryset.model.DoesNotExist:`\r\nThe problem with that queryset is a **MockSet**, which apparently doesn't handle model for parameter.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/83", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/83/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/83/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/83", "id": 321364140, "node_id": "MDU6SXNzdWUzMjEzNjQxNDA=", "number": 83, "title": "Filter by attribute with False value is not working", "user": {"login": "zuzelvp", "id": 77488, "node_id": "MDQ6VXNlcjc3NDg4", "avatar_url": "https://avatars1.githubusercontent.com/u/77488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zuzelvp", "html_url": "https://github.com/zuzelvp", "followers_url": "https://api.github.com/users/zuzelvp/followers", "following_url": "https://api.github.com/users/zuzelvp/following{/other_user}", "gists_url": "https://api.github.com/users/zuzelvp/gists{/gist_id}", "starred_url": "https://api.github.com/users/zuzelvp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zuzelvp/subscriptions", "organizations_url": "https://api.github.com/users/zuzelvp/orgs", "repos_url": "https://api.github.com/users/zuzelvp/repos", "events_url": "https://api.github.com/users/zuzelvp/events{/privacy}", "received_events_url": "https://api.github.com/users/zuzelvp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-08T22:09:07Z", "updated_at": "2018-05-09T08:24:53Z", "closed_at": "2018-05-09T08:24:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Will push a PR for it in a sec.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/81", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/81/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/81/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/81", "id": 315239539, "node_id": "MDU6SXNzdWUzMTUyMzk1Mzk=", "number": 81, "title": "Plans for releasing `MockSet` as a child of `MagicMock`?", "user": {"login": "jourdanrodrigues", "id": 6227037, "node_id": "MDQ6VXNlcjYyMjcwMzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6227037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jourdanrodrigues", "html_url": "https://github.com/jourdanrodrigues", "followers_url": "https://api.github.com/users/jourdanrodrigues/followers", "following_url": "https://api.github.com/users/jourdanrodrigues/following{/other_user}", "gists_url": "https://api.github.com/users/jourdanrodrigues/gists{/gist_id}", "starred_url": "https://api.github.com/users/jourdanrodrigues/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jourdanrodrigues/subscriptions", "organizations_url": "https://api.github.com/users/jourdanrodrigues/orgs", "repos_url": "https://api.github.com/users/jourdanrodrigues/repos", "events_url": "https://api.github.com/users/jourdanrodrigues/events{/privacy}", "received_events_url": "https://api.github.com/users/jourdanrodrigues/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-17T21:19:41Z", "updated_at": "2018-04-21T15:06:23Z", "closed_at": "2018-04-21T15:06:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see it's implemented in `master` branch, but the latest release, v1.0.7, doesn't have it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/80", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/80/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/80/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/80", "id": 315133667, "node_id": "MDU6SXNzdWUzMTUxMzM2Njc=", "number": 80, "title": "Incompatible with pip 10.0.0", "user": {"login": "yeeland", "id": 464746, "node_id": "MDQ6VXNlcjQ2NDc0Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/464746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yeeland", "html_url": "https://github.com/yeeland", "followers_url": "https://api.github.com/users/yeeland/followers", "following_url": "https://api.github.com/users/yeeland/following{/other_user}", "gists_url": "https://api.github.com/users/yeeland/gists{/gist_id}", "starred_url": "https://api.github.com/users/yeeland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yeeland/subscriptions", "organizations_url": "https://api.github.com/users/yeeland/orgs", "repos_url": "https://api.github.com/users/yeeland/repos", "events_url": "https://api.github.com/users/yeeland/events{/privacy}", "received_events_url": "https://api.github.com/users/yeeland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-17T16:18:20Z", "updated_at": "2018-04-19T15:44:50Z", "closed_at": "2018-04-19T15:44:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running into issues in `setup.py`.  `pip.req` seems to have been moved to `pip._internal.req`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/77", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/77/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/77/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/77", "id": 305990066, "node_id": "MDU6SXNzdWUzMDU5OTAwNjY=", "number": 77, "title": "`.distinct()` when using a regular model: 'ModelName has no attribute items`", "user": {"login": "zak10", "id": 4020772, "node_id": "MDQ6VXNlcjQwMjA3NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4020772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zak10", "html_url": "https://github.com/zak10", "followers_url": "https://api.github.com/users/zak10/followers", "following_url": "https://api.github.com/users/zak10/following{/other_user}", "gists_url": "https://api.github.com/users/zak10/gists{/gist_id}", "starred_url": "https://api.github.com/users/zak10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zak10/subscriptions", "organizations_url": "https://api.github.com/users/zak10/orgs", "repos_url": "https://api.github.com/users/zak10/repos", "events_url": "https://api.github.com/users/zak10/events{/privacy}", "received_events_url": "https://api.github.com/users/zak10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-16T16:16:20Z", "updated_at": "2018-03-17T01:49:13Z", "closed_at": "2018-03-17T01:49:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to run the following I get `ModelA has no attribute items`:\r\n\r\n```python\r\nclass ModelA(models.Model):\r\n  b = models.ForeignKey(ModelB)\r\n   ...\r\nclass ModelB(models.Model):\r\n  ...\r\n\r\ndef some_func():\r\n    ModelA.objects.filter(\r\n        b__in=...\r\n    ).distinct('some_field').count()\r\n```\r\n\r\n\r\n```python\r\nsrc/pkg/test.py:11: in quantity\r\n    ).distinct('some_field').count()\r\n/usr/local/lib/python3.6/site-packages/mock/mock.py:1062: in __call__\r\n    return _mock_self._mock_call(*args, **kwargs)\r\n/usr/local/lib/python3.6/site-packages/mock/mock.py:1128: in _mock_call\r\n    ret_val = effect(*args, **kwargs)\r\n/usr/local/lib/python3.6/site-packages/django_mock_queries/query.py:171: in distinct\r\n    key = hash_dict(item, *fields)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nobj = <ModelA: None>, fields = ('some_field',)\r\n\r\n    def hash_dict(obj, *fields):\r\n>       return hash(tuple(sorted((k, v) for k, v in obj.items() if not fields or k in fields)))\r\nE       AttributeError: 'ModelA' object has no attribute 'items'\r\n```\r\n\r\nLooking in `MockSet:distinct` it loops through an `items` property, which doesn't exist on a regular model.\r\n\r\nIs there any way to pass in `ModelA` to the MockSet instead of a `MockModel`?\r\n\r\n```python\r\nmock_set.add(\r\n  ModelA(some_field='a')\r\n)\r\n```\r\ninstead of\r\n```python\r\nmock_set.add(\r\n  MockModel(some_field='a')\r\n)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/69", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/69/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/69/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/69", "id": 301008017, "node_id": "MDU6SXNzdWUzMDEwMDgwMTc=", "number": 69, "title": "Support for Django 2.0", "user": {"login": "tnedev", "id": 4305270, "node_id": "MDQ6VXNlcjQzMDUyNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4305270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnedev", "html_url": "https://github.com/tnedev", "followers_url": "https://api.github.com/users/tnedev/followers", "following_url": "https://api.github.com/users/tnedev/following{/other_user}", "gists_url": "https://api.github.com/users/tnedev/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnedev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnedev/subscriptions", "organizations_url": "https://api.github.com/users/tnedev/orgs", "repos_url": "https://api.github.com/users/tnedev/repos", "events_url": "https://api.github.com/users/tnedev/events{/privacy}", "received_events_url": "https://api.github.com/users/tnedev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-28T12:36:58Z", "updated_at": "2018-03-03T00:44:21Z", "closed_at": "2018-03-02T13:20:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nWhat needs to be done for this app to support Django 2.0?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/65", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/65/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/65/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/65", "id": 296911517, "node_id": "MDU6SXNzdWUyOTY5MTE1MTc=", "number": 65, "title": "values().distinct()fails with TypeError: unhashable type: 'dict'", "user": {"login": "zuzelvp", "id": 77488, "node_id": "MDQ6VXNlcjc3NDg4", "avatar_url": "https://avatars1.githubusercontent.com/u/77488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zuzelvp", "html_url": "https://github.com/zuzelvp", "followers_url": "https://api.github.com/users/zuzelvp/followers", "following_url": "https://api.github.com/users/zuzelvp/following{/other_user}", "gists_url": "https://api.github.com/users/zuzelvp/gists{/gist_id}", "starred_url": "https://api.github.com/users/zuzelvp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zuzelvp/subscriptions", "organizations_url": "https://api.github.com/users/zuzelvp/orgs", "repos_url": "https://api.github.com/users/zuzelvp/repos", "events_url": "https://api.github.com/users/zuzelvp/events{/privacy}", "received_events_url": "https://api.github.com/users/zuzelvp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-02-13T22:37:55Z", "updated_at": "2018-02-16T14:00:17Z", "closed_at": "2018-02-16T13:59:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Will try to fix in a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/60", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/60/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/60/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/60", "id": 296552328, "node_id": "MDU6SXNzdWUyOTY1NTIzMjg=", "number": 60, "title": "AND operator is not handled properly causing random tests", "user": {"login": "zuzelvp", "id": 77488, "node_id": "MDQ6VXNlcjc3NDg4", "avatar_url": "https://avatars1.githubusercontent.com/u/77488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zuzelvp", "html_url": "https://github.com/zuzelvp", "followers_url": "https://api.github.com/users/zuzelvp/followers", "following_url": "https://api.github.com/users/zuzelvp/following{/other_user}", "gists_url": "https://api.github.com/users/zuzelvp/gists{/gist_id}", "starred_url": "https://api.github.com/users/zuzelvp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zuzelvp/subscriptions", "organizations_url": "https://api.github.com/users/zuzelvp/orgs", "repos_url": "https://api.github.com/users/zuzelvp/repos", "events_url": "https://api.github.com/users/zuzelvp/events{/privacy}", "received_events_url": "https://api.github.com/users/zuzelvp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-12T22:47:44Z", "updated_at": "2018-02-13T09:58:39Z", "closed_at": "2018-02-13T09:12:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I will try to create a PR but reporting the issue before that just in case. At https://github.com/stphivos/django-mock-queries/blob/master/django_mock_queries/query.py#L68\r\n\r\nIf all the results of previous childs are empty except for the last child the result of the last child is returned instead of the intersection.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/50", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/50/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/50/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/50", "id": 232041873, "node_id": "MDU6SXNzdWUyMzIwNDE4NzM=", "number": 50, "title": "Model.objects.create can't take an instance parameter", "user": {"login": "benjaminrigaud", "id": 1983087, "node_id": "MDQ6VXNlcjE5ODMwODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1983087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benjaminrigaud", "html_url": "https://github.com/benjaminrigaud", "followers_url": "https://api.github.com/users/benjaminrigaud/followers", "following_url": "https://api.github.com/users/benjaminrigaud/following{/other_user}", "gists_url": "https://api.github.com/users/benjaminrigaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/benjaminrigaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benjaminrigaud/subscriptions", "organizations_url": "https://api.github.com/users/benjaminrigaud/orgs", "repos_url": "https://api.github.com/users/benjaminrigaud/repos", "events_url": "https://api.github.com/users/benjaminrigaud/events{/privacy}", "received_events_url": "https://api.github.com/users/benjaminrigaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-29T14:45:30Z", "updated_at": "2017-05-31T15:42:49Z", "closed_at": "2017-05-31T15:42:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI have been trying to use django-mock-queries with FactoryBoy and I had an issue when creating a set of instances via a DjangoModelFactory using a SubFactory\r\n\r\nI made a repo to reproduce the issue:\r\n\r\nhttps://github.com/benjaminrigaud/django-mock-queries-and-factory-boy\r\n```python\r\n======================================================================\r\nERROR: test_mock (issue.main.tests.test_mock_factory_boy.FactoryBoyTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/me/venvs/django-mock-queries-and-factory-boy/local/lib/python2.7/site-packages/mock/mock.py\", line 1305, in patched\r\n    return func(*args, **keywargs)\r\n  File \"/home/me/venvs/django-mock-queries-and-factory-boy/local/lib/python2.7/site-packages/django_mock_queries/mocks.py\", line 281, in absorb_mocks\r\n    return target(test_case)\r\n  File \"/home/me/venvs/django-mock-queries-and-factory-boy/local/lib/python2.7/site-packages/mock/mock.py\", line 1305, in patched\r\n    return func(*args, **keywargs)\r\n  File \"/home/me/venvs/django-mock-queries-and-factory-boy/local/lib/python2.7/site-packages/django_mock_queries/mocks.py\", line 281, in absorb_mocks\r\n    return target(test_case)\r\n  File \"/home/me/projects/django-mock-queries-and-factory-boy/issue/main/tests/test_mock_factory_boy.py\", line 29, in test_mock\r\n    b2 = BFactoryWithSub()\r\n  File \"/home/me/venvs/django-mock-queries-and-factory-boy/local/lib/python2.7/site-packages/factory/base.py\", line 69, in __call__\r\n    return cls.create(**kwargs)\r\n  File \"/home/me/venvs/django-mock-queries-and-factory-boy/local/lib/python2.7/site-packages/factory/base.py\", line 623, in create\r\n    return cls._generate(True, attrs)\r\n  File \"/home/me/venvs/django-mock-queries-and-factory-boy/local/lib/python2.7/site-packages/factory/base.py\", line 548, in _generate\r\n    obj = cls._prepare(create, **attrs)\r\n  File \"/home/me/venvs/django-mock-queries-and-factory-boy/local/lib/python2.7/site-packages/factory/base.py\", line 523, in _prepare\r\n    return cls._create(model_class, *args, **kwargs)\r\n  File \"/home/me/venvs/django-mock-queries-and-factory-boy/local/lib/python2.7/site-packages/factory/django.py\", line 181, in _create\r\n    return manager.create(*args, **kwargs)\r\n  File \"/home/me/venvs/django-mock-queries-and-factory-boy/local/lib/python2.7/site-packages/mock/mock.py\", line 1062, in __call__\r\n    return _mock_self._mock_call(*args, **kwargs)\r\n  File \"/home/me/venvs/django-mock-queries-and-factory-boy/local/lib/python2.7/site-packages/mock/mock.py\", line 1128, in _mock_call\r\n    ret_val = effect(*args, **kwargs)\r\n  File \"/home/me/venvs/django-mock-queries-and-factory-boy/local/lib/python2.7/site-packages/django_mock_queries/query.py\", line 199, in create\r\n    raise ValueError('{} is an invalid keyword argument for this function'.format(k))\r\nValueError: a is an invalid keyword argument for this function\r\n\r\n----------------------------------------------------------------------\r\n\r\n```\r\nI am digging a bit to understand the limitations.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/48", "repository_url": "https://api.github.com/repos/stphivos/django-mock-queries", "labels_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/48/comments", "events_url": "https://api.github.com/repos/stphivos/django-mock-queries/issues/48/events", "html_url": "https://github.com/stphivos/django-mock-queries/issues/48", "id": 226427757, "node_id": "MDU6SXNzdWUyMjY0Mjc3NTc=", "number": 48, "title": "Q objects with negation", "user": {"login": "wongjas", "id": 1818355, "node_id": "MDQ6VXNlcjE4MTgzNTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1818355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wongjas", "html_url": "https://github.com/wongjas", "followers_url": "https://api.github.com/users/wongjas/followers", "following_url": "https://api.github.com/users/wongjas/following{/other_user}", "gists_url": "https://api.github.com/users/wongjas/gists{/gist_id}", "starred_url": "https://api.github.com/users/wongjas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wongjas/subscriptions", "organizations_url": "https://api.github.com/users/wongjas/orgs", "repos_url": "https://api.github.com/users/wongjas/repos", "events_url": "https://api.github.com/users/wongjas/events{/privacy}", "received_events_url": "https://api.github.com/users/wongjas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-04T22:36:12Z", "updated_at": "2017-05-08T22:10:14Z", "closed_at": "2017-05-08T22:10:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to get queries like `~Q(field=value) ` and by extension, more complex queries like `~Q(field1=value1) | Q(field2=value2)` to work?", "performed_via_github_app": null, "score": 1.0}]}