{"total_count": 77, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/196", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/196/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/196/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/196", "id": 667683678, "node_id": "MDU6SXNzdWU2Njc2ODM2Nzg=", "number": 196, "title": "NoneType error when submiting feed with no Marketplaceids", "user": {"login": "nuno407", "id": 11352538, "node_id": "MDQ6VXNlcjExMzUyNTM4", "avatar_url": "https://avatars2.githubusercontent.com/u/11352538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nuno407", "html_url": "https://github.com/nuno407", "followers_url": "https://api.github.com/users/nuno407/followers", "following_url": "https://api.github.com/users/nuno407/following{/other_user}", "gists_url": "https://api.github.com/users/nuno407/gists{/gist_id}", "starred_url": "https://api.github.com/users/nuno407/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nuno407/subscriptions", "organizations_url": "https://api.github.com/users/nuno407/orgs", "repos_url": "https://api.github.com/users/nuno407/repos", "events_url": "https://api.github.com/users/nuno407/events{/privacy}", "received_events_url": "https://api.github.com/users/nuno407/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T09:13:53Z", "updated_at": "2020-07-29T13:25:12Z", "closed_at": "2020-07-29T13:25:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI \ud83d\udc4b ,\r\n\r\nI would like to submit a bug report.\r\n\r\nAccording to the docs in http://docs.developer.amazonservices.com/en_US/feeds/Feeds_SubmitFeed.html\r\nthe use of the query param is not required in the majority of the feeds (only for Product Images Feeds) therefore calls to the method submit_feeds from Feeds class should be able to coupe with it. It happens that, if no market place is provided , the library will crash in https://github.com/python-amazon-mws/python-amazon-mws/blob/develop/mws/utils.py#L154 saying `TypeError: 'NoneType' object is not iterable`. This bug seems to be caused by https://github.com/python-amazon-mws/python-amazon-mws/pull/124.\r\n\r\nRegards,\r\nNuno", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/192", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/192/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/192/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/192", "id": 663565976, "node_id": "MDU6SXNzdWU2NjM1NjU5NzY=", "number": 192, "title": "About calling list_financial_events_by_next_token", "user": {"login": "854350999", "id": 53171984, "node_id": "MDQ6VXNlcjUzMTcxOTg0", "avatar_url": "https://avatars2.githubusercontent.com/u/53171984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/854350999", "html_url": "https://github.com/854350999", "followers_url": "https://api.github.com/users/854350999/followers", "following_url": "https://api.github.com/users/854350999/following{/other_user}", "gists_url": "https://api.github.com/users/854350999/gists{/gist_id}", "starred_url": "https://api.github.com/users/854350999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/854350999/subscriptions", "organizations_url": "https://api.github.com/users/854350999/orgs", "repos_url": "https://api.github.com/users/854350999/repos", "events_url": "https://api.github.com/users/854350999/events{/privacy}", "received_events_url": "https://api.github.com/users/854350999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-22T08:12:43Z", "updated_at": "2020-08-05T01:23:29Z", "closed_at": "2020-08-05T01:23:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I call list_financial_events_by_next_token, it will not report an error due to timeout. This seems to be a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/190", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/190/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/190/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/190", "id": 658127239, "node_id": "MDU6SXNzdWU2NTgxMjcyMzk=", "number": 190, "title": "can't get report of some report type", "user": {"login": "Jared66", "id": 63780946, "node_id": "MDQ6VXNlcjYzNzgwOTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/63780946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jared66", "html_url": "https://github.com/Jared66", "followers_url": "https://api.github.com/users/Jared66/followers", "following_url": "https://api.github.com/users/Jared66/following{/other_user}", "gists_url": "https://api.github.com/users/Jared66/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jared66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jared66/subscriptions", "organizations_url": "https://api.github.com/users/Jared66/orgs", "repos_url": "https://api.github.com/users/Jared66/repos", "events_url": "https://api.github.com/users/Jared66/events{/privacy}", "received_events_url": "https://api.github.com/users/Jared66/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-16T11:51:03Z", "updated_at": "2020-07-16T15:55:45Z", "closed_at": "2020-07-16T15:55:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can get the report data whose type is `_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_ORDER_DATE_`, but I can't get the report of `_GET_FLAT_FILE_ORDERS_DATA_`\r\n\r\nSee the attached picture to get more details.\r\n\r\nIn fact, I just want to know the sales volume of each SKU in every day. But I find that the data from `_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_ORDER_DATE_` is very inaccurate. Does anyone have a better method to achieve my purpose ?\r\n\r\n![_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_ORDER_DATE_](https://user-images.githubusercontent.com/63780946/87667785-86962080-c79d-11ea-9ef2-e334a2842f9f.png)\r\n\r\n\r\n![_GET_FLAT_FILE_ORDERS_DATA_](https://user-images.githubusercontent.com/63780946/87667804-8f86f200-c79d-11ea-8d64-405aa30b565d.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/188", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/188/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/188/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/188", "id": 656146448, "node_id": "MDU6SXNzdWU2NTYxNDY0NDg=", "number": 188, "title": "Dictwrapper xml decode exception", "user": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-07-13T21:17:53Z", "updated_at": "2020-08-04T14:24:56Z", "closed_at": "2020-08-04T14:24:56Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Reported that there are sometimes Unicode decode errors reported at the .decode()\n\nMight be worth handling this error and returning mwseception with the response attached so that it can be decoded by the user correctly, along with providing better and easier troubleshooting", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/186", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/186/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/186/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/186", "id": 655184092, "node_id": "MDU6SXNzdWU2NTUxODQwOTI=", "number": 186, "title": "Can't find the \"Business Reports\" API", "user": {"login": "Jared66", "id": 63780946, "node_id": "MDQ6VXNlcjYzNzgwOTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/63780946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jared66", "html_url": "https://github.com/Jared66", "followers_url": "https://api.github.com/users/Jared66/followers", "following_url": "https://api.github.com/users/Jared66/following{/other_user}", "gists_url": "https://api.github.com/users/Jared66/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jared66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jared66/subscriptions", "organizations_url": "https://api.github.com/users/Jared66/orgs", "repos_url": "https://api.github.com/users/Jared66/repos", "events_url": "https://api.github.com/users/Jared66/events{/privacy}", "received_events_url": "https://api.github.com/users/Jared66/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-11T10:38:25Z", "updated_at": "2020-07-16T12:25:02Z", "closed_at": "2020-07-16T12:24:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can obtain the \"**Unit Session Percentage**\" from the  report \"**Detail Page Sales and Traffic by Child Item**\" of \"**Business Reports**\"  (see the attached picture) to know how many pepole visited my product details page and how many items they bought for a product.\r\n\r\nBut I can't find any APIs to get that data :\r\nhttps://docs.developer.amazonservices.com/en_UK/reports/Reports_ReportType.html\r\n\r\n![Business Reports](https://user-images.githubusercontent.com/63780946/87222330-6df4c780-c3a5-11ea-9806-2b0856e069fc.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/185", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/185/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/185/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/185", "id": 649518320, "node_id": "MDU6SXNzdWU2NDk1MTgzMjA=", "number": 185, "title": "How to use OutboundShipments?", "user": {"login": "854350999", "id": 53171984, "node_id": "MDQ6VXNlcjUzMTcxOTg0", "avatar_url": "https://avatars2.githubusercontent.com/u/53171984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/854350999", "html_url": "https://github.com/854350999", "followers_url": "https://api.github.com/users/854350999/followers", "following_url": "https://api.github.com/users/854350999/following{/other_user}", "gists_url": "https://api.github.com/users/854350999/gists{/gist_id}", "starred_url": "https://api.github.com/users/854350999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/854350999/subscriptions", "organizations_url": "https://api.github.com/users/854350999/orgs", "repos_url": "https://api.github.com/users/854350999/repos", "events_url": "https://api.github.com/users/854350999/events{/privacy}", "received_events_url": "https://api.github.com/users/854350999/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 864842079, "node_id": "MDU6TGFiZWw4NjQ4NDIwNzk=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": "Good issues for new coders to contribute to"}, {"id": 484974578, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzg=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-02T01:53:13Z", "updated_at": "2020-08-05T08:37:09Z", "closed_at": "2020-08-05T08:37:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "like Ttile", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/178", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/178/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/178/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/178", "id": 640056441, "node_id": "MDU6SXNzdWU2NDAwNTY0NDE=", "number": 178, "title": "ReportOptions in request_report", "user": {"login": "deathdropsk8", "id": 67031404, "node_id": "MDQ6VXNlcjY3MDMxNDA0", "avatar_url": "https://avatars3.githubusercontent.com/u/67031404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deathdropsk8", "html_url": "https://github.com/deathdropsk8", "followers_url": "https://api.github.com/users/deathdropsk8/followers", "following_url": "https://api.github.com/users/deathdropsk8/following{/other_user}", "gists_url": "https://api.github.com/users/deathdropsk8/gists{/gist_id}", "starred_url": "https://api.github.com/users/deathdropsk8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deathdropsk8/subscriptions", "organizations_url": "https://api.github.com/users/deathdropsk8/orgs", "repos_url": "https://api.github.com/users/deathdropsk8/repos", "events_url": "https://api.github.com/users/deathdropsk8/events{/privacy}", "received_events_url": "https://api.github.com/users/deathdropsk8/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974577, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzc=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-06-17T00:36:40Z", "updated_at": "2020-08-14T14:11:43Z", "closed_at": "2020-08-14T14:11:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "So there  currently isnt a way I can see to request a custom report in the request_report function. In my personal instance I am downloading a '_GET_MERCHANT_LISTINGS_ALL_DATA_' and need to add in 'ReportOptions=custom%3Dtrue' to the HTTP GET request. There is currently no way to do it in the current library. Request specifics can be found at the below like from Amazon https://docs.developer.amazonservices.com/en_UK/reports/Reports_ReportType.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/176", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/176/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/176/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/176", "id": 616215090, "node_id": "MDU6SXNzdWU2MTYyMTUwOTA=", "number": 176, "title": "Cannot get subscriptions ", "user": {"login": "dsiq-rd", "id": 62310862, "node_id": "MDQ6VXNlcjYyMzEwODYy", "avatar_url": "https://avatars3.githubusercontent.com/u/62310862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsiq-rd", "html_url": "https://github.com/dsiq-rd", "followers_url": "https://api.github.com/users/dsiq-rd/followers", "following_url": "https://api.github.com/users/dsiq-rd/following{/other_user}", "gists_url": "https://api.github.com/users/dsiq-rd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsiq-rd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsiq-rd/subscriptions", "organizations_url": "https://api.github.com/users/dsiq-rd/orgs", "repos_url": "https://api.github.com/users/dsiq-rd/repos", "events_url": "https://api.github.com/users/dsiq-rd/events{/privacy}", "received_events_url": "https://api.github.com/users/dsiq-rd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-05-11T21:57:37Z", "updated_at": "2020-05-13T19:20:29Z", "closed_at": "2020-05-13T19:20:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have done everything including creating a new SQS queue, registering the queue and creating subscriptions. When I list registered urls and subscriptions I see everything as expected but I am not able to receive messages.\r\n\r\nMy queue is also having the required permissions and pricinipal set as per documentation.\r\n\r\nI would appreciate any help on this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/174", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/174/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/174/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/174", "id": 606497500, "node_id": "MDU6SXNzdWU2MDY0OTc1MDA=", "number": 174, "title": "cant get order status attribute to work", "user": {"login": "rick0403", "id": 34018745, "node_id": "MDQ6VXNlcjM0MDE4NzQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/34018745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rick0403", "html_url": "https://github.com/rick0403", "followers_url": "https://api.github.com/users/rick0403/followers", "following_url": "https://api.github.com/users/rick0403/following{/other_user}", "gists_url": "https://api.github.com/users/rick0403/gists{/gist_id}", "starred_url": "https://api.github.com/users/rick0403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rick0403/subscriptions", "organizations_url": "https://api.github.com/users/rick0403/orgs", "repos_url": "https://api.github.com/users/rick0403/repos", "events_url": "https://api.github.com/users/rick0403/events{/privacy}", "received_events_url": "https://api.github.com/users/rick0403/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-24T18:17:27Z", "updated_at": "2020-05-02T17:50:32Z", "closed_at": "2020-05-02T17:50:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Great library! ... the door to Amazon MWS is creaking open!\r\nThis works for me, supplying the 'created_after' parameter:\r\norders = orders_api.list_orders(marketplaceids=[marketplace_usa], created_after='2020-04-23')\r\n\r\nI want to request only unshipped orders, which works fine in the scratchpad:\r\n &OrderStatus.Status.1=Unshipped\r\nI see in the mws api file orders.py there is a order_statuses parameter, but when I try to sneak it in like this:\r\norders = orders_api.list_orders(marketplaceids=[marketplace_usa], created_after='2020-04-23', order_statuses='Unshipped')\r\n\r\nI get the error:\r\nTraceback (most recent call last):\r\n  File \"getMWSorders.py\", line 15, in <module>\r\n    orders = orders_api.list_orders(marketplaceids=[marketplace_usa], created_after='2020-04-23', order_statuses='Unshipped')\r\n  File \"C:\\Users\\rdmos\\Miniconda3\\lib\\site-packages\\mws\\utils.py\", line 250, in _wrapped_func\r\n    return request_func(self, *args, **kwargs)\r\nTypeError: list_orders() got an unexpected keyword argument 'order_statuses'\r\n\r\nHow can I request only 'Unshipped\" orders?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/173", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/173/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/173/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/173", "id": 603348368, "node_id": "MDU6SXNzdWU2MDMzNDgzNjg=", "number": 173, "title": "Does anyone know how to use the MerchantFulfillment method?", "user": {"login": "Xbeninni", "id": 33538292, "node_id": "MDQ6VXNlcjMzNTM4Mjky", "avatar_url": "https://avatars0.githubusercontent.com/u/33538292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xbeninni", "html_url": "https://github.com/Xbeninni", "followers_url": "https://api.github.com/users/Xbeninni/followers", "following_url": "https://api.github.com/users/Xbeninni/following{/other_user}", "gists_url": "https://api.github.com/users/Xbeninni/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xbeninni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xbeninni/subscriptions", "organizations_url": "https://api.github.com/users/Xbeninni/orgs", "repos_url": "https://api.github.com/users/Xbeninni/repos", "events_url": "https://api.github.com/users/Xbeninni/events{/privacy}", "received_events_url": "https://api.github.com/users/Xbeninni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-04-20T15:59:09Z", "updated_at": "2020-04-23T03:20:53Z", "closed_at": "2020-04-22T05:35:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey everyone,\r\n\r\nI'm integrating the MerchantFulfillment API into our software, and I use this library. Does anyone know how to use this method? I see this library does include it [here](https://github.com/python-amazon-mws/python-amazon-mws/blob/develop/mws/apis/merchant_fulfillment.py).\r\n\r\nSomething like below. Input: order detail, Output: a list of shipping rate\r\n\r\n```\r\nimport mws, os\r\n\r\ndef getRate(order): \r\n    merchant_api = mws.MerchantFulfillment(\r\n        access_key= os.environ['MWS_ACCESS_KEY'],\r\n        secret_key= os.environ['MWS_SECRET_KEY'],\r\n        account_id= os.environ['MWS_ACCOUNT_ID'])\r\n   \r\n    # some code here\r\n    response = merchant_api.get_eligible_shipping_services()\r\n```\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/172", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/172/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/172/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/172", "id": 600642043, "node_id": "MDU6SXNzdWU2MDA2NDIwNDM=", "number": 172, "title": "Retrive more than 100 orders", "user": {"login": "thiras", "id": 5150432, "node_id": "MDQ6VXNlcjUxNTA0MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5150432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thiras", "html_url": "https://github.com/thiras", "followers_url": "https://api.github.com/users/thiras/followers", "following_url": "https://api.github.com/users/thiras/following{/other_user}", "gists_url": "https://api.github.com/users/thiras/gists{/gist_id}", "starred_url": "https://api.github.com/users/thiras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thiras/subscriptions", "organizations_url": "https://api.github.com/users/thiras/orgs", "repos_url": "https://api.github.com/users/thiras/repos", "events_url": "https://api.github.com/users/thiras/events{/privacy}", "received_events_url": "https://api.github.com/users/thiras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-15T23:13:19Z", "updated_at": "2020-04-21T20:45:22Z", "closed_at": "2020-04-15T23:34:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI've searched through documentation and source code but couldn't find a way to get more than 100 orders or how to do second request after the first 100.\r\n\r\nIs there a way to get more than 100?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/170", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/170/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/170/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/170", "id": 593910857, "node_id": "MDU6SXNzdWU1OTM5MTA4NTc=", "number": 170, "title": "Parse FinanceEvents", "user": {"login": "mbolder", "id": 1629706, "node_id": "MDQ6VXNlcjE2Mjk3MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1629706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbolder", "html_url": "https://github.com/mbolder", "followers_url": "https://api.github.com/users/mbolder/followers", "following_url": "https://api.github.com/users/mbolder/following{/other_user}", "gists_url": "https://api.github.com/users/mbolder/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbolder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbolder/subscriptions", "organizations_url": "https://api.github.com/users/mbolder/orgs", "repos_url": "https://api.github.com/users/mbolder/repos", "events_url": "https://api.github.com/users/mbolder/events{/privacy}", "received_events_url": "https://api.github.com/users/mbolder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974580, "node_id": "MDU6TGFiZWw0ODQ5NzQ1ODA=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-04-04T15:00:53Z", "updated_at": "2020-04-07T19:23:05Z", "closed_at": "2020-04-06T20:40:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am stuck trying to parse the results from list_financial_events report.\r\nI have got two problems, a.) how do I check if an event is empty \r\nand b.) how do iterate over the dicts in order to create one set of information per order?\r\n\r\nSo far I worked on this, but I get the error \"list indices must be integers or slices, not str\"\r\n\r\n```python\r\ndef print_dict(v, prefix=''):\r\n    if isinstance(v, dict):\r\n        for k, v2 in v.items():\r\n            p2 = \"{}['{}']\".format(prefix, k)\r\n            print_dict(v2, p2)\r\n    elif isinstance(v, list):\r\n        for i, v2 in enumerate(v):\r\n            p2 = \"{}[{}]\".format(prefix, i)\r\n            print_dict(v2, p2)\r\n    else:\r\n        print('{} = {}'.format(prefix, repr(v)))\r\n\r\ndef getAmaFinanceEvents(groupID):\r\n    finance_api = mws.Finances(access_key, secret_key, merchant_id, region=\"DE\")\r\n    events = finance_api.list_financial_events(financial_event_group_id=groupID)\r\n    events = events.parsed\r\n    print_dict(events)\r\n    Subscriptionfee = events.FinancialEvents.ServiceFeeEventList.ServiceFeeEvent.FeeList.FeeComponent.FeeAmount.CurrencyAmount\r\n    i=0\r\n    for event in enumerate(events.FinancialEvents.ShipmentEventList.ShipmentEvent):\r\n        AmazonOrderID = events['FinancialEvents']['ShipmentEventList']['ShipmentEvent'][i]['AmazonOrderId']['value']\r\n        Principal =     events['FinancialEvents']['ShipmentEventList']['ShipmentEvent'][i]['ShipmentItemList']['ShipmentItem']['ItemChargeList']['ChargeComponent'][0]['ChargeAmount']['CurrencyAmount']['value']\r\n        ShippingCharge =events['FinancialEvents']['ShipmentEventList']['ShipmentEvent'][i]['ShipmentItemList']['ShipmentItem']['ItemChargeList']['ChargeComponent'][4]['ChargeAmount']['CurrencyAmount']['value']\r\n        i=i+1\r\n        print (AmazonOrderID,Principal,ShippingCharge)\r\n```\r\n\r\nAny thoughts or comments would greatly appreciated. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/164", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/164/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/164/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/164", "id": 583241225, "node_id": "MDU6SXNzdWU1ODMyNDEyMjU=", "number": 164, "title": "Get Asin information for 2 o more asins", "user": {"login": "evollution", "id": 5673772, "node_id": "MDQ6VXNlcjU2NzM3NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5673772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evollution", "html_url": "https://github.com/evollution", "followers_url": "https://api.github.com/users/evollution/followers", "following_url": "https://api.github.com/users/evollution/following{/other_user}", "gists_url": "https://api.github.com/users/evollution/gists{/gist_id}", "starred_url": "https://api.github.com/users/evollution/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evollution/subscriptions", "organizations_url": "https://api.github.com/users/evollution/orgs", "repos_url": "https://api.github.com/users/evollution/repos", "events_url": "https://api.github.com/users/evollution/events{/privacy}", "received_events_url": "https://api.github.com/users/evollution/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-17T19:18:23Z", "updated_at": "2020-05-02T18:37:04Z", "closed_at": "2020-05-02T18:37:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom mws import mws\r\n\r\naccess_key = 'accesskey' #replace with your access key\r\nseller_id = 'merchantid' #replace with your seller id\r\nsecret_key = 'secretkey' #replace with your secret key\r\nmarketplace_usa = 'ATVPDKIKX0DER'\r\n\r\nproducts_api = mws.Products(access_key, secret_key, seller_id, region='US')\r\nproducts = products_api.list_matching_products(marketplaceid=marketplace_usa, query='*')\r\n```\r\n\r\nThis example works perfect for 1 product, but how can i add 2 or more products?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/163", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/163/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/163/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/163", "id": 583079639, "node_id": "MDU6SXNzdWU1ODMwNzk2Mzk=", "number": 163, "title": "Encoding issue with API: list_order_items", "user": {"login": "Dan-Stephen", "id": 23228120, "node_id": "MDQ6VXNlcjIzMjI4MTIw", "avatar_url": "https://avatars3.githubusercontent.com/u/23228120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dan-Stephen", "html_url": "https://github.com/Dan-Stephen", "followers_url": "https://api.github.com/users/Dan-Stephen/followers", "following_url": "https://api.github.com/users/Dan-Stephen/following{/other_user}", "gists_url": "https://api.github.com/users/Dan-Stephen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dan-Stephen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dan-Stephen/subscriptions", "organizations_url": "https://api.github.com/users/Dan-Stephen/orgs", "repos_url": "https://api.github.com/users/Dan-Stephen/repos", "events_url": "https://api.github.com/users/Dan-Stephen/events{/privacy}", "received_events_url": "https://api.github.com/users/Dan-Stephen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-17T15:04:27Z", "updated_at": "2020-08-06T23:06:23Z", "closed_at": "2020-08-06T23:06:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm developing an app interacting with Amazon Japan site.(Using lib mws 0.8.7) \r\n\r\nThrough the logs for import order data I found that the data type returned by this API is DictWrapper, but some of the fields (for example, 'OrderItems' ->'OrderItem'->'Title'->'value') get garbled characters(like '\u00e3\\x80\\x8c3\u00e6\\x9e\\x9a\u00e5\\x85\u00a5\u00e3\\x82\\x8a\u00e3\\x80\\x8dNintendo Switch \u00e4\u00bf\\x9d\u00e8\\xad\u00b7\u00e3').\r\nIt looks like decoding is missed before packaging special fields data into a DictWrapper model.\r\n\r\nSame problem happens in other places like calling API list_orders.\r\n\r\nKindly please advice how can I proceed. Thanks!  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/162", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/162/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/162/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/162", "id": 582814848, "node_id": "MDU6SXNzdWU1ODI4MTQ4NDg=", "number": 162, "title": "easyship api support", "user": {"login": "KushGoyal", "id": 4709156, "node_id": "MDQ6VXNlcjQ3MDkxNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4709156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KushGoyal", "html_url": "https://github.com/KushGoyal", "followers_url": "https://api.github.com/users/KushGoyal/followers", "following_url": "https://api.github.com/users/KushGoyal/following{/other_user}", "gists_url": "https://api.github.com/users/KushGoyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/KushGoyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KushGoyal/subscriptions", "organizations_url": "https://api.github.com/users/KushGoyal/orgs", "repos_url": "https://api.github.com/users/KushGoyal/repos", "events_url": "https://api.github.com/users/KushGoyal/events{/privacy}", "received_events_url": "https://api.github.com/users/KushGoyal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-17T07:38:30Z", "updated_at": "2020-06-25T16:06:53Z", "closed_at": "2020-06-25T16:06:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I want to create a pull request with easyship api support.\r\n\r\nWhich branch should I use to create the pull request - master or develop?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/161", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/161/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/161/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/161", "id": 578276080, "node_id": "MDU6SXNzdWU1NzgyNzYwODA=", "number": 161, "title": "requests.exceptions.SSLError: HTTPSConnectionPool", "user": {"login": "posidonius", "id": 26072127, "node_id": "MDQ6VXNlcjI2MDcyMTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/26072127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/posidonius", "html_url": "https://github.com/posidonius", "followers_url": "https://api.github.com/users/posidonius/followers", "following_url": "https://api.github.com/users/posidonius/following{/other_user}", "gists_url": "https://api.github.com/users/posidonius/gists{/gist_id}", "starred_url": "https://api.github.com/users/posidonius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/posidonius/subscriptions", "organizations_url": "https://api.github.com/users/posidonius/orgs", "repos_url": "https://api.github.com/users/posidonius/repos", "events_url": "https://api.github.com/users/posidonius/events{/privacy}", "received_events_url": "https://api.github.com/users/posidonius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-10T01:14:26Z", "updated_at": "2020-03-10T01:18:31Z", "closed_at": "2020-03-10T01:18:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Did Amazon MWS recently change policy regarding SSL? Maybe in February? Software I've written basically broke around Feb 20 or Feb 21. Just debugging now and I see an SSL error.\r\n\r\n`requests.exceptions.SSLError: HTTPSConnectionPool`\r\n`Caused by SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")`\r\n\r\nI did some searching around to see if Amazon published news about SSL authentication and haven't found any references to a change.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/160", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/160/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/160/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/160", "id": 577837714, "node_id": "MDU6SXNzdWU1Nzc4Mzc3MTQ=", "number": 160, "title": "next_token", "user": {"login": "evollution", "id": 5673772, "node_id": "MDQ6VXNlcjU2NzM3NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5673772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evollution", "html_url": "https://github.com/evollution", "followers_url": "https://api.github.com/users/evollution/followers", "following_url": "https://api.github.com/users/evollution/following{/other_user}", "gists_url": "https://api.github.com/users/evollution/gists{/gist_id}", "starred_url": "https://api.github.com/users/evollution/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evollution/subscriptions", "organizations_url": "https://api.github.com/users/evollution/orgs", "repos_url": "https://api.github.com/users/evollution/repos", "events_url": "https://api.github.com/users/evollution/events{/privacy}", "received_events_url": "https://api.github.com/users/evollution/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-09T11:26:49Z", "updated_at": "2020-03-09T11:27:04Z", "closed_at": "2020-03-09T11:27:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/158", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/158/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/158/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/158", "id": 573681468, "node_id": "MDU6SXNzdWU1NzM2ODE0Njg=", "number": 158, "title": "how to parser the xml file ", "user": {"login": "didierzhu", "id": 44839002, "node_id": "MDQ6VXNlcjQ0ODM5MDAy", "avatar_url": "https://avatars3.githubusercontent.com/u/44839002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/didierzhu", "html_url": "https://github.com/didierzhu", "followers_url": "https://api.github.com/users/didierzhu/followers", "following_url": "https://api.github.com/users/didierzhu/following{/other_user}", "gists_url": "https://api.github.com/users/didierzhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/didierzhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/didierzhu/subscriptions", "organizations_url": "https://api.github.com/users/didierzhu/orgs", "repos_url": "https://api.github.com/users/didierzhu/repos", "events_url": "https://api.github.com/users/didierzhu/events{/privacy}", "received_events_url": "https://api.github.com/users/didierzhu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-02T02:44:42Z", "updated_at": "2020-08-05T16:52:25Z", "closed_at": "2020-08-05T16:52:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am a beginner,I try to print the order information to csv, I have a question on how to parser the xml file.\r\nimport mws.mws\r\nimport xml.etree.ElementTree as ET\r\nfrom lxml import etree\r\n.....\r\norders_api = mws.Orders(access_key,secret_key,account_id,region)\r\norders = orders_api.list_orders(marketplaceids=MarketplaceID,created_after='2020-02-23')\r\nxml_file = orders.original\r\nroot = ET.fromstring(xml_file)\r\nns = xml.nsmap[None]\r\nns = '{%s}' % ns\r\nfor item in xml.findall(\"{0}ListOrderResult/{0}Orders/{0}Order\".format(ns)):\r\n    print(item)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/150", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/150/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/150/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/150", "id": 563381618, "node_id": "MDU6SXNzdWU1NjMzODE2MTg=", "number": 150, "title": "[Announcement] PyCon 2020 Sprints (Apr 20-23, Pittsburgh PA USA)", "user": {"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-11T18:03:11Z", "updated_at": "2020-05-02T18:47:00Z", "closed_at": "2020-05-02T18:47:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi folks,\r\n\r\n---\r\n\r\n**Update 2020-03-12**: [PyCon's blog announced yesterday](https://pycon.blogspot.com/2020/03/march-12-update-on-covid-19.html) they are \"exploring options to either reschedule or cancel\" the event, in light of the spread of COVID-19.\r\n\r\nAs such, unless they come out and say \"yes it's still on!\", I likely won't be attending the conference in person as I planned. But I've still blocked time off work that I intend to use to focus on `python-amazon-mws` development (or \"PAM\" as I've been calling it).\r\n\r\nSo, still planning to do sprints and push this project over the hump to 1.0.0. I'll just do it remotely like usual. :)\r\n\r\n---\r\n\r\n**Original:**\r\n\r\nWriting to quickly (*Edit: yeah that worked out great*) announce that I'll be attending [PyCon 2020](https://us.pycon.org/2020/), taking place in Pittsburgh PA USA from April 15 through 23.\r\n\r\nActually I'll really only be attending for the sprints taking place from the 20th through the 23rd (flying home the 24th). A goal of mine is to get focused on `python-amazon-mws` (or perhaps PAM for short? :) ), hopefully drumming up some additional help at the conference and/or participating online, so that we can fix up a number of our outstanding issues and get to a 1.0 version release.\r\n\r\nIf anyone else watching this space is planning to attend PyCon, let's commiserate here and/or on our [Gitter](https://gitter.im/python-amazon-mws/community) chat (sparse though it may be) and work out some details.\r\n\r\nThose helping maintain here, let's take some time over these next couple months to align feature and coverage requests as needed so we can get rolling when the sprints get started.\r\n\r\nOne major help would be a proper set of docs for the package. Though most of the functionality mirrors MWS, of course; there are some key ways this library can and will augment the API with a touch of OOP and extra tooling. We need more robust documentation to help newer users get started, and that's a great opportunity for new contributors to the project get their toes wet.\r\n\r\nI'll keep this space updated with additional details as the conference approaches.\r\n\r\nThanks, and hope to see some folks there!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/149", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/149/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/149/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/149", "id": 557073043, "node_id": "MDU6SXNzdWU1NTcwNzMwNDM=", "number": 149, "title": "Error:  no Orders attribute", "user": {"login": "JGSpeights", "id": 16258639, "node_id": "MDQ6VXNlcjE2MjU4NjM5", "avatar_url": "https://avatars2.githubusercontent.com/u/16258639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JGSpeights", "html_url": "https://github.com/JGSpeights", "followers_url": "https://api.github.com/users/JGSpeights/followers", "following_url": "https://api.github.com/users/JGSpeights/following{/other_user}", "gists_url": "https://api.github.com/users/JGSpeights/gists{/gist_id}", "starred_url": "https://api.github.com/users/JGSpeights/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JGSpeights/subscriptions", "organizations_url": "https://api.github.com/users/JGSpeights/orgs", "repos_url": "https://api.github.com/users/JGSpeights/repos", "events_url": "https://api.github.com/users/JGSpeights/events{/privacy}", "received_events_url": "https://api.github.com/users/JGSpeights/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974580, "node_id": "MDU6TGFiZWw0ODQ5NzQ1ODA=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2020-01-29T19:37:58Z", "updated_at": "2020-08-14T14:12:52Z", "closed_at": "2020-08-14T14:12:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am trying to get a simple program working using the library.  I tried the following example, and receive this error.  Do you know what might cause this?\r\nThanks!\r\n\r\npython mws.py\r\n```python\r\nTraceback (most recent call last):\r\n  File \"mws.py\", line 1, in <module>\r\n    import mws, os\r\n  File \"/home/ubuntu/environment/mws/mws.py\", line 2, in <module>\r\n    orders_api = mws.Orders(\r\nAttributeError: module 'mws' has no attribute 'Orders'\r\n```\r\n\r\nHere is my sample program:\r\n\r\n```python\r\nimport mws, os\r\norders_api = mws.Orders(\r\n    access_key=os.environ['MWS_ACCESS_KEY'],\r\n    secret_key=os.environ['MWS_SECRET_KEY'],\r\n    account_id=os.environ['MWS_ACCOUNT_ID'],\r\n    region='US'   \r\n)\r\n\r\nservice_status = orders_api.get_service_status()\r\n\r\nprint(service_status.original)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/148", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/148/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/148/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/148", "id": 549162987, "node_id": "MDU6SXNzdWU1NDkxNjI5ODc=", "number": 148, "title": "SyntaxError: invalid syntax", "user": {"login": "ip7571", "id": 45295491, "node_id": "MDQ6VXNlcjQ1Mjk1NDkx", "avatar_url": "https://avatars0.githubusercontent.com/u/45295491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ip7571", "html_url": "https://github.com/ip7571", "followers_url": "https://api.github.com/users/ip7571/followers", "following_url": "https://api.github.com/users/ip7571/following{/other_user}", "gists_url": "https://api.github.com/users/ip7571/gists{/gist_id}", "starred_url": "https://api.github.com/users/ip7571/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ip7571/subscriptions", "organizations_url": "https://api.github.com/users/ip7571/orgs", "repos_url": "https://api.github.com/users/ip7571/repos", "events_url": "https://api.github.com/users/ip7571/events{/privacy}", "received_events_url": "https://api.github.com/users/ip7571/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-13T20:28:25Z", "updated_at": "2020-01-14T21:09:52Z", "closed_at": "2020-01-14T21:09:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Importing MWS package was running fine and I had a few package updates then I started getting this invalid syntax issue. \r\n\r\n```python\r\nTraceback (most recent call last):\r\n\r\n  File \"/Users/name/anaconda3/lib/python3.7/site-packages/IPython/core/interactiveshell.py\", line 3296, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n\r\n  File \"<ipython-input-2-bcbf2e2a5a3d>\", line 4, in <module>\r\n    from mws import mws\r\n\r\n  File \"/Users/name/anaconda3/lib/python3.7/site-packages/mws/mws.py\", line 204\r\n    except HTTPError, e:\r\n                    ^\r\nSyntaxError: invalid syntax\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/145", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/145/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/145/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/145", "id": 542840711, "node_id": "MDU6SXNzdWU1NDI4NDA3MTE=", "number": 145, "title": "Add Amazon NL region to Marketplaces Enum", "user": {"login": "ceijssen", "id": 11404961, "node_id": "MDQ6VXNlcjExNDA0OTYx", "avatar_url": "https://avatars1.githubusercontent.com/u/11404961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ceijssen", "html_url": "https://github.com/ceijssen", "followers_url": "https://api.github.com/users/ceijssen/followers", "following_url": "https://api.github.com/users/ceijssen/following{/other_user}", "gists_url": "https://api.github.com/users/ceijssen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ceijssen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ceijssen/subscriptions", "organizations_url": "https://api.github.com/users/ceijssen/orgs", "repos_url": "https://api.github.com/users/ceijssen/repos", "events_url": "https://api.github.com/users/ceijssen/events{/privacy}", "received_events_url": "https://api.github.com/users/ceijssen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2019-12-27T11:13:53Z", "updated_at": "2020-02-26T10:08:43Z", "closed_at": "2020-02-26T10:08:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nAmazon is currently expanding its business to the Netherlands and I've received their NL marketplace ID. I'm not really familiar with contributing to this project, so I preferred creating an issue instead :sweat_smile: I think the only line needed to add to the `Marketplaces(Enum)` class in `mws/mws.py` is the following:\r\n\r\n`NL = ('https://mws-eu.amazonservices.com', 'A1805IZSGTT6HS')`\r\n\r\nNot sure if it needs to be added elsewhere too. \r\n\r\nWould appreciate if this could be added :-) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/139", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/139/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/139/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/139", "id": 540749496, "node_id": "MDU6SXNzdWU1NDA3NDk0OTY=", "number": 139, "title": "apis folder missing with pip install of develop branch", "user": {"login": "kenlittleton", "id": 1812591, "node_id": "MDQ6VXNlcjE4MTI1OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1812591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenlittleton", "html_url": "https://github.com/kenlittleton", "followers_url": "https://api.github.com/users/kenlittleton/followers", "following_url": "https://api.github.com/users/kenlittleton/following{/other_user}", "gists_url": "https://api.github.com/users/kenlittleton/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenlittleton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenlittleton/subscriptions", "organizations_url": "https://api.github.com/users/kenlittleton/orgs", "repos_url": "https://api.github.com/users/kenlittleton/repos", "events_url": "https://api.github.com/users/kenlittleton/events{/privacy}", "received_events_url": "https://api.github.com/users/kenlittleton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-20T04:29:18Z", "updated_at": "2019-12-20T10:38:56Z", "closed_at": "2019-12-20T10:38:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems the 'apis' folder is not installed when using pip to install the develop branch from github.\r\n\r\n`pip install git+https://github.com/python-amazon-mws/python-amazon-mws.git@develop#egg=mws`\r\n\r\n**Exception:**  _ModuleNotFoundError: No module named 'mws.apis'_\r\n\r\n**Workaround:**  Download develop branch and copy the api folder into your virtual environment.\r\n\r\n**Alternate:**  Installs into a src folder in your virtual environment.\r\n\r\n`pip install -e git://github.com/python-amazon-mws/python-amazon-mws.git@develop#egg=mws`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/138", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/138/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/138/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/138", "id": 539001761, "node_id": "MDU6SXNzdWU1MzkwMDE3NjE=", "number": 138, "title": "submitting flat file in .xlsm format via submit_feet()", "user": {"login": "btcorgtfo", "id": 52311503, "node_id": "MDQ6VXNlcjUyMzExNTAz", "avatar_url": "https://avatars0.githubusercontent.com/u/52311503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btcorgtfo", "html_url": "https://github.com/btcorgtfo", "followers_url": "https://api.github.com/users/btcorgtfo/followers", "following_url": "https://api.github.com/users/btcorgtfo/following{/other_user}", "gists_url": "https://api.github.com/users/btcorgtfo/gists{/gist_id}", "starred_url": "https://api.github.com/users/btcorgtfo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btcorgtfo/subscriptions", "organizations_url": "https://api.github.com/users/btcorgtfo/orgs", "repos_url": "https://api.github.com/users/btcorgtfo/repos", "events_url": "https://api.github.com/users/btcorgtfo/events{/privacy}", "received_events_url": "https://api.github.com/users/btcorgtfo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-17T11:17:18Z", "updated_at": "2019-12-17T14:59:49Z", "closed_at": "2019-12-17T14:42:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\n\r\nI'd like to submit a flat file to update an existing product in my seller central account.\r\n\r\n1. Any idea which is the correct feed?\r\n_POST_FLAT_FILE_LISTINGS_DATA_ or _POST_FLAT_FILE_INVLOADER_DATA_\r\n\r\n2. If i try to submit i get the error\r\nTypeError: Unicode-objects must be encoded before hashing\r\n\r\nAs feed=.. is use the path as a string.\r\n\r\nbest regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/137", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/137/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/137/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/137", "id": 538548615, "node_id": "MDU6SXNzdWU1Mzg1NDg2MTU=", "number": 137, "title": "Is this a dead project?", "user": {"login": "samamorgan", "id": 356814, "node_id": "MDQ6VXNlcjM1NjgxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/356814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samamorgan", "html_url": "https://github.com/samamorgan", "followers_url": "https://api.github.com/users/samamorgan/followers", "following_url": "https://api.github.com/users/samamorgan/following{/other_user}", "gists_url": "https://api.github.com/users/samamorgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/samamorgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samamorgan/subscriptions", "organizations_url": "https://api.github.com/users/samamorgan/orgs", "repos_url": "https://api.github.com/users/samamorgan/repos", "events_url": "https://api.github.com/users/samamorgan/events{/privacy}", "received_events_url": "https://api.github.com/users/samamorgan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 814087944, "node_id": "MDU6TGFiZWw4MTQwODc5NDQ=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/discussion", "name": "discussion", "color": "ea4dc0", "default": false, "description": null}, {"id": 484974578, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzg=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2019-12-16T17:24:19Z", "updated_at": "2019-12-22T11:51:33Z", "closed_at": "2019-12-22T11:51:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking at the commit history, this has seen no activity for quite some time, and the develop branch doesn't appear to ever have had any features merged.\r\n\r\nWhat is the status of this project? It's currently the only useful Python 3 MWS lib, and I'd rather not have to roll my own.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/136", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/136/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/136/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/136", "id": 527207126, "node_id": "MDU6SXNzdWU1MjcyMDcxMjY=", "number": 136, "title": "get_my_price_for_asin not return the proper response", "user": {"login": "DanishAbsar", "id": 18595466, "node_id": "MDQ6VXNlcjE4NTk1NDY2", "avatar_url": "https://avatars3.githubusercontent.com/u/18595466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanishAbsar", "html_url": "https://github.com/DanishAbsar", "followers_url": "https://api.github.com/users/DanishAbsar/followers", "following_url": "https://api.github.com/users/DanishAbsar/following{/other_user}", "gists_url": "https://api.github.com/users/DanishAbsar/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanishAbsar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanishAbsar/subscriptions", "organizations_url": "https://api.github.com/users/DanishAbsar/orgs", "repos_url": "https://api.github.com/users/DanishAbsar/repos", "events_url": "https://api.github.com/users/DanishAbsar/events{/privacy}", "received_events_url": "https://api.github.com/users/DanishAbsar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-22T13:51:56Z", "updated_at": "2019-12-12T09:01:17Z", "closed_at": "2019-12-12T09:01:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm unable to get my price for the ASIN, through get_my_price_for_asin method.\r\n\r\nwhen I call get_matching_product then I'm getting the listing price.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/133", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/133/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/133/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/133", "id": 516409359, "node_id": "MDU6SXNzdWU1MTY0MDkzNTk=", "number": 133, "title": "NextToken in list_orders", "user": {"login": "anthonyattard", "id": 8838135, "node_id": "MDQ6VXNlcjg4MzgxMzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/8838135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthonyattard", "html_url": "https://github.com/anthonyattard", "followers_url": "https://api.github.com/users/anthonyattard/followers", "following_url": "https://api.github.com/users/anthonyattard/following{/other_user}", "gists_url": "https://api.github.com/users/anthonyattard/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthonyattard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthonyattard/subscriptions", "organizations_url": "https://api.github.com/users/anthonyattard/orgs", "repos_url": "https://api.github.com/users/anthonyattard/repos", "events_url": "https://api.github.com/users/anthonyattard/events{/privacy}", "received_events_url": "https://api.github.com/users/anthonyattard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974580, "node_id": "MDU6TGFiZWw0ODQ5NzQ1ODA=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-11-02T00:07:57Z", "updated_at": "2020-04-21T20:45:45Z", "closed_at": "2019-12-31T01:12:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I pass the next_token so that I get results beyond the first page on an API call?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/130", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/130/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/130/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/130", "id": 505611859, "node_id": "MDU6SXNzdWU1MDU2MTE4NTk=", "number": 130, "title": "Whether parameters can be provided to remove the \"value\" node from each layer", "user": {"login": "probeyang", "id": 18691244, "node_id": "MDQ6VXNlcjE4NjkxMjQ0", "avatar_url": "https://avatars3.githubusercontent.com/u/18691244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/probeyang", "html_url": "https://github.com/probeyang", "followers_url": "https://api.github.com/users/probeyang/followers", "following_url": "https://api.github.com/users/probeyang/following{/other_user}", "gists_url": "https://api.github.com/users/probeyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/probeyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/probeyang/subscriptions", "organizations_url": "https://api.github.com/users/probeyang/orgs", "repos_url": "https://api.github.com/users/probeyang/repos", "events_url": "https://api.github.com/users/probeyang/events{/privacy}", "received_events_url": "https://api.github.com/users/probeyang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974576, "node_id": "MDU6TGFiZWw0ODQ5NzQ1NzY=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 484974580, "node_id": "MDU6TGFiZWw0ODQ5NzQ1ODA=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-11T03:09:59Z", "updated_at": "2019-10-16T13:27:30Z", "closed_at": "2019-10-16T13:13:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "The interface provided by boto does not have the \"value\" node in each layer. I use it work very well, but it have not finance interface. so now i start to use python-amazon-mws , but it adds a node to every layer of my interface. The original structure is very complex. I don't want to traverse another layer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/129", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/129/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/129/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/129", "id": 496968119, "node_id": "MDU6SXNzdWU0OTY5NjgxMTk=", "number": 129, "title": "_UPLOAD_VAT_INVOICE_", "user": {"login": "mbolder", "id": 1629706, "node_id": "MDQ6VXNlcjE2Mjk3MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1629706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbolder", "html_url": "https://github.com/mbolder", "followers_url": "https://api.github.com/users/mbolder/followers", "following_url": "https://api.github.com/users/mbolder/following{/other_user}", "gists_url": "https://api.github.com/users/mbolder/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbolder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbolder/subscriptions", "organizations_url": "https://api.github.com/users/mbolder/orgs", "repos_url": "https://api.github.com/users/mbolder/repos", "events_url": "https://api.github.com/users/mbolder/events{/privacy}", "received_events_url": "https://api.github.com/users/mbolder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2019-09-23T08:48:53Z", "updated_at": "2020-08-18T16:26:44Z", "closed_at": "2020-08-18T16:26:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am desperately trying to create a submit feed with the feed type \"_UPLOAD_VAT_INVOICE_\". The given example by Amazon is only in Java, and I cannot make a lot of sense of it. I understand that the feed should be something like that :\r\n\r\n```\r\nmetadata:OrderId='xxx-xxxxxxx-xxxxxxxx';metadata:TotalAmount='0.00';metadata:TotalVATAmount='0.00';metadata:InvoiceNumber='RExxxxx'\r\n```\r\n\r\nBut how/where can add a pdf file in order to upload it?\r\n\r\n```java\r\nfeed_api = mws.Feeds(access_key,secret_key,merchant_id,region='DE')\r\nfeed_options=\"metadata:OrderId='xxx-xxxxxxx-xxxxxxxx';metadata:TotalAmount='0.00';metadata:TotalVATAmount='0.00';metadata:InvoiceNumber='RExxxxx'\"\r\nfeed_options= feed_options.encode('utf-8')\r\nfeed_rsp = feed_api.submit_feed(feed_type='_UPLOAD_VAT_INVOICE_',feed=feed_options)\r\nfeedid = feed_rsp.parsed\r\nreqId\t= feedid.FeedSubmissionInfo.FeedSubmissionId\r\nreqStat\t= feedid.FeedSubmissionInfo.FeedProcessingStatus\r\nprint(\"Feed Submit ID:\", reqId, \"Status:\", reqStat)\r\n```\r\nKind Regards\r\nMarkus", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/120", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/120/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/120/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/120", "id": 451082261, "node_id": "MDU6SXNzdWU0NTEwODIyNjE=", "number": 120, "title": "How to update features, description and title?", "user": {"login": "JasonCrowe", "id": 1906730, "node_id": "MDQ6VXNlcjE5MDY3MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1906730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JasonCrowe", "html_url": "https://github.com/JasonCrowe", "followers_url": "https://api.github.com/users/JasonCrowe/followers", "following_url": "https://api.github.com/users/JasonCrowe/following{/other_user}", "gists_url": "https://api.github.com/users/JasonCrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/JasonCrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JasonCrowe/subscriptions", "organizations_url": "https://api.github.com/users/JasonCrowe/orgs", "repos_url": "https://api.github.com/users/JasonCrowe/repos", "events_url": "https://api.github.com/users/JasonCrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/JasonCrowe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-01T12:46:39Z", "updated_at": "2019-06-24T15:30:48Z", "closed_at": "2019-06-24T15:30:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to create a system that will update the features, description, and title of thousands of items. It's probably obvious why I don't want to do this in Seller Central. \ud83e\udd23\r\n\r\nIs this possible through the API?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/119", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/119/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/119/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/119", "id": 440173054, "node_id": "MDU6SXNzdWU0NDAxNzMwNTQ=", "number": 119, "title": "Orders details to file", "user": {"login": "nicolaerario", "id": 37365465, "node_id": "MDQ6VXNlcjM3MzY1NDY1", "avatar_url": "https://avatars0.githubusercontent.com/u/37365465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolaerario", "html_url": "https://github.com/nicolaerario", "followers_url": "https://api.github.com/users/nicolaerario/followers", "following_url": "https://api.github.com/users/nicolaerario/following{/other_user}", "gists_url": "https://api.github.com/users/nicolaerario/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolaerario/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolaerario/subscriptions", "organizations_url": "https://api.github.com/users/nicolaerario/orgs", "repos_url": "https://api.github.com/users/nicolaerario/repos", "events_url": "https://api.github.com/users/nicolaerario/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolaerario/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-03T18:45:08Z", "updated_at": "2019-10-17T08:24:54Z", "closed_at": "2019-10-17T08:24:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Full details of an order are divided into two separate requests:\r\nlistOrders and listOrderItems;\r\nwhat code do you use to have a file with the details of the customer and his order in a single file?\r\nMoreover, the XML generated by the requests are quite nested and therefore difficult to manage", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/118", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/118/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/118/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/118", "id": 437566189, "node_id": "MDU6SXNzdWU0Mzc1NjYxODk=", "number": 118, "title": "Product Creation", "user": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974580, "node_id": "MDU6TGFiZWw0ODQ5NzQ1ODA=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-04-26T08:49:02Z", "updated_at": "2019-10-16T13:13:53Z", "closed_at": "2019-10-16T13:13:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Before I get started on making products via the API, has anyone here got any experiences with doing this, and any hints and tips / pitfalls to watch out for?\r\n\r\nIt looks like I need to upload a flat file using the `_POST_FLAT_FILE_LISTINGS_DATA_` type.\r\nHowever, these files seem to be incredibly convuluted to make as TSV files (its doable but seems to be a rather horrible way to do it)\r\n\r\nAny feedback welcome!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/117", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/117/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/117/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/117", "id": 422547526, "node_id": "MDU6SXNzdWU0MjI1NDc1MjY=", "number": 117, "title": "MWS Encryption", "user": {"login": "xlcheese", "id": 48706441, "node_id": "MDQ6VXNlcjQ4NzA2NDQx", "avatar_url": "https://avatars1.githubusercontent.com/u/48706441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xlcheese", "html_url": "https://github.com/xlcheese", "followers_url": "https://api.github.com/users/xlcheese/followers", "following_url": "https://api.github.com/users/xlcheese/following{/other_user}", "gists_url": "https://api.github.com/users/xlcheese/gists{/gist_id}", "starred_url": "https://api.github.com/users/xlcheese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xlcheese/subscriptions", "organizations_url": "https://api.github.com/users/xlcheese/orgs", "repos_url": "https://api.github.com/users/xlcheese/repos", "events_url": "https://api.github.com/users/xlcheese/events{/privacy}", "received_events_url": "https://api.github.com/users/xlcheese/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-19T05:14:57Z", "updated_at": "2019-03-20T19:11:52Z", "closed_at": "2019-03-20T19:11:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does this use encryption as required by Amazon?  \r\n\r\nhttps://docs.developer.amazonservices.com/en_US/dev_guide/DG_DataProtectionPolicy.html\r\n\r\nAmazon Policy:  Encryption in Transit. Developers must encrypt all Amazon Information in transit (e.g., when the data traverses a network, or is otherwise sent between hosts. This can be accomplished using HTTP over TLS (HTTPS). Developers must enforce this security control on all applicable external endpoints used by customers as well as internal communication channels (e.g., data propagation channels among storage layer nodes, connections to external dependencies) and operational tooling. Developers must disable communication channels which do not provide encryption in transit even if unused (e.g., removing the related dead code, configuring dependencies only with encrypted channels, and restricting access credentials to use of encrypted channels). Developers must use data message-level encryption (e.g., using AWS Encryption SDK) where channel encryption (e.g., using TLS) terminates in untrusted multi-tenant hardware (e.g., untrusted proxies).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/116", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/116/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/116/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/116", "id": 421107294, "node_id": "MDU6SXNzdWU0MjExMDcyOTQ=", "number": 116, "title": "submitfeed example upload file", "user": {"login": "ssheduardo", "id": 1160138, "node_id": "MDQ6VXNlcjExNjAxMzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1160138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssheduardo", "html_url": "https://github.com/ssheduardo", "followers_url": "https://api.github.com/users/ssheduardo/followers", "following_url": "https://api.github.com/users/ssheduardo/following{/other_user}", "gists_url": "https://api.github.com/users/ssheduardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssheduardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssheduardo/subscriptions", "organizations_url": "https://api.github.com/users/ssheduardo/orgs", "repos_url": "https://api.github.com/users/ssheduardo/repos", "events_url": "https://api.github.com/users/ssheduardo/events{/privacy}", "received_events_url": "https://api.github.com/users/ssheduardo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974576, "node_id": "MDU6TGFiZWw0ODQ5NzQ1NzY=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-14T16:02:34Z", "updated_at": "2019-03-14T16:26:12Z", "closed_at": "2019-03-14T16:26:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nHow to send a file using submitfeed.\r\nAnyone have example?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/108", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/108/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/108/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/108", "id": 411401491, "node_id": "MDU6SXNzdWU0MTE0MDE0OTE=", "number": 108, "title": "Change item's quantity", "user": {"login": "Sneerbol", "id": 23613367, "node_id": "MDQ6VXNlcjIzNjEzMzY3", "avatar_url": "https://avatars1.githubusercontent.com/u/23613367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sneerbol", "html_url": "https://github.com/Sneerbol", "followers_url": "https://api.github.com/users/Sneerbol/followers", "following_url": "https://api.github.com/users/Sneerbol/following{/other_user}", "gists_url": "https://api.github.com/users/Sneerbol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sneerbol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sneerbol/subscriptions", "organizations_url": "https://api.github.com/users/Sneerbol/orgs", "repos_url": "https://api.github.com/users/Sneerbol/repos", "events_url": "https://api.github.com/users/Sneerbol/events{/privacy}", "received_events_url": "https://api.github.com/users/Sneerbol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-02-18T10:20:08Z", "updated_at": "2019-03-01T19:58:45Z", "closed_at": "2019-03-01T13:11:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need find item by name and change item's quantity to zero(for example)\r\nSo... Can I do it with python-amazon-mws ? If I can please - help me  with code :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/104", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/104/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/104/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/104", "id": 404078652, "node_id": "MDU6SXNzdWU0MDQwNzg2NTI=", "number": 104, "title": "return params of request in response", "user": {"login": "elcolumbio", "id": 20401370, "node_id": "MDQ6VXNlcjIwNDAxMzcw", "avatar_url": "https://avatars2.githubusercontent.com/u/20401370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolumbio", "html_url": "https://github.com/elcolumbio", "followers_url": "https://api.github.com/users/elcolumbio/followers", "following_url": "https://api.github.com/users/elcolumbio/following{/other_user}", "gists_url": "https://api.github.com/users/elcolumbio/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolumbio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolumbio/subscriptions", "organizations_url": "https://api.github.com/users/elcolumbio/orgs", "repos_url": "https://api.github.com/users/elcolumbio/repos", "events_url": "https://api.github.com/users/elcolumbio/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolumbio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-29T01:15:11Z", "updated_at": "2019-01-29T02:04:11Z", "closed_at": "2019-01-29T01:43:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "return params of request in response, maybe as hidden parameter: _request_params .\r\nHidden since it's not needed for normal users, because we have methods like clean_params which handle user input well.\r\n\r\nWe would be able to write tests like @GriceTurrble  commented.\r\nAnd it is easier to see what possibly went wrong with your request.\r\n\r\nI dont think the params are accessible right now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/103", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/103/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/103/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/103", "id": 402839463, "node_id": "MDU6SXNzdWU0MDI4Mzk0NjM=", "number": 103, "title": "Guaranteeing that an order is new", "user": {"login": "tchoedak", "id": 3946411, "node_id": "MDQ6VXNlcjM5NDY0MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3946411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tchoedak", "html_url": "https://github.com/tchoedak", "followers_url": "https://api.github.com/users/tchoedak/followers", "following_url": "https://api.github.com/users/tchoedak/following{/other_user}", "gists_url": "https://api.github.com/users/tchoedak/gists{/gist_id}", "starred_url": "https://api.github.com/users/tchoedak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tchoedak/subscriptions", "organizations_url": "https://api.github.com/users/tchoedak/orgs", "repos_url": "https://api.github.com/users/tchoedak/repos", "events_url": "https://api.github.com/users/tchoedak/events{/privacy}", "received_events_url": "https://api.github.com/users/tchoedak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-24T18:30:10Z", "updated_at": "2019-03-01T17:52:42Z", "closed_at": "2019-03-01T17:52:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "This may not be terribly relevant to this project, but I have a feeling this project's users are likely to be most informed about this stuff.\r\n\r\nWhen using the ListOrders endpoint and receiving orders informations, how do folks typically ensure that an order is new?\r\n\r\nIs it sufficient just to hit the ListOrders API and check for any *new* AmazonOrderIds where new can be determined by checking if those AmazonOrderIds exist in some DB that your storing orders in?\r\n\r\nIt seems to me almost every new order goes into a `Pending` status. Is it then more accurate to use the method above, but also check for OrderStatus == 'Pending'?\r\n\r\nBTW love the work put into this project and i've been leveraging it in my own personal project (tchoedak/anoti) to send notifications on new orders (hence this question).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/102", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/102/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/102/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/102", "id": 398569629, "node_id": "MDU6SXNzdWUzOTg1Njk2Mjk=", "number": 102, "title": "Unable to read a bytes object", "user": {"login": "Mitalee", "id": 5144837, "node_id": "MDQ6VXNlcjUxNDQ4Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5144837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mitalee", "html_url": "https://github.com/Mitalee", "followers_url": "https://api.github.com/users/Mitalee/followers", "following_url": "https://api.github.com/users/Mitalee/following{/other_user}", "gists_url": "https://api.github.com/users/Mitalee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mitalee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mitalee/subscriptions", "organizations_url": "https://api.github.com/users/Mitalee/orgs", "repos_url": "https://api.github.com/users/Mitalee/repos", "events_url": "https://api.github.com/users/Mitalee/events{/privacy}", "received_events_url": "https://api.github.com/users/Mitalee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-12T16:41:14Z", "updated_at": "2019-01-16T08:12:55Z", "closed_at": "2019-01-16T08:12:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nWhile using the reports api, the following was returned\r\n\r\n```\r\n>>> r.parsed\r\nb'PK\\x03\\x04\\x14\\x00\\x08\\x08\\x08\\x00dy#N\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x19\\x00\\x00\\x00MTR_B2C-DECEMBER-2018.csv'\r\n>>> type(r)\r\n<class 'mws.mws.DataWrapper'>\r\n>>> type(r.original)\r\n<class 'bytes'>\r\n```\r\n\r\nboth csv.reader and pandas are unable to read this object. Any help is appreciated.\r\n\r\nRegards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/100", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/100/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/100/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/100", "id": 383530419, "node_id": "MDU6SXNzdWUzODM1MzA0MTk=", "number": 100, "title": "character encoding", "user": {"login": "TomOnGit", "id": 2782947, "node_id": "MDQ6VXNlcjI3ODI5NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2782947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomOnGit", "html_url": "https://github.com/TomOnGit", "followers_url": "https://api.github.com/users/TomOnGit/followers", "following_url": "https://api.github.com/users/TomOnGit/following{/other_user}", "gists_url": "https://api.github.com/users/TomOnGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomOnGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomOnGit/subscriptions", "organizations_url": "https://api.github.com/users/TomOnGit/orgs", "repos_url": "https://api.github.com/users/TomOnGit/repos", "events_url": "https://api.github.com/users/TomOnGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TomOnGit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974576, "node_id": "MDU6TGFiZWw0ODQ5NzQ1NzY=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-11-22T13:13:14Z", "updated_at": "2019-03-15T23:31:17Z", "closed_at": "2019-03-15T23:31:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a character encoding issue with orders.parsed from the orders_api.\r\n\r\nprint(orders.parsed['Orders']['Order']) shows:\r\nCIUDAD DE M\u00c3\\x89XICO\r\nwhich should be:\r\nCIUDAD DE M\u00c9XICO\r\n\r\nI'm using Python 3.6.5 on MacOS Mojave\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/99", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/99/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/99/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/99", "id": 383161186, "node_id": "MDU6SXNzdWUzODMxNjExODY=", "number": 99, "title": "Is Amazon the seller", "user": {"login": "JasonCrowe", "id": 1906730, "node_id": "MDQ6VXNlcjE5MDY3MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1906730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JasonCrowe", "html_url": "https://github.com/JasonCrowe", "followers_url": "https://api.github.com/users/JasonCrowe/followers", "following_url": "https://api.github.com/users/JasonCrowe/following{/other_user}", "gists_url": "https://api.github.com/users/JasonCrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/JasonCrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JasonCrowe/subscriptions", "organizations_url": "https://api.github.com/users/JasonCrowe/orgs", "repos_url": "https://api.github.com/users/JasonCrowe/repos", "events_url": "https://api.github.com/users/JasonCrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/JasonCrowe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-21T15:08:19Z", "updated_at": "2019-03-01T15:13:24Z", "closed_at": "2019-03-01T15:13:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found that I can detect the sales channel (FBM or FBA) in get_lowest_offer_listings_for_asin. \r\n\r\nDoes anyone know where I can find if Amazon is the seller?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/98", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/98/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/98/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/98", "id": 379519121, "node_id": "MDU6SXNzdWUzNzk1MTkxMjE=", "number": 98, "title": "Timestamp error (timestamp must follow ISO8601) while querying the reports API", "user": {"login": "Mitalee", "id": 5144837, "node_id": "MDQ6VXNlcjUxNDQ4Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5144837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mitalee", "html_url": "https://github.com/Mitalee", "followers_url": "https://api.github.com/users/Mitalee/followers", "following_url": "https://api.github.com/users/Mitalee/following{/other_user}", "gists_url": "https://api.github.com/users/Mitalee/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mitalee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mitalee/subscriptions", "organizations_url": "https://api.github.com/users/Mitalee/orgs", "repos_url": "https://api.github.com/users/Mitalee/repos", "events_url": "https://api.github.com/users/Mitalee/events{/privacy}", "received_events_url": "https://api.github.com/users/Mitalee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-11T12:41:48Z", "updated_at": "2018-11-11T15:03:31Z", "closed_at": "2018-11-11T15:03:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "While querying the reports API:\r\n```\r\nr = reports_api.get_report_list(types=\"xxx\",fromdate='01-09-2018', todate='05-09-2018')\r\n```\r\nthe following error is received:\r\n```\r\npython3.6/site-packages/mws/mws.py\", line 261, in make_request\r\n    raise error\r\nmws.mws.MWSError: <?xml version=\"1.0\"?>\r\n<ErrorResponse xmlns=\"http://mws.amazonaws.com/doc/2009-01-01/\">\r\n  <Error>\r\n    <Type>Sender</Type>\r\n    <Code>MalformedInput</Code>\r\n    <Message>timestamp must follow ISO8601</Message>\r\n  </Error>\r\n\r\n```\r\n\r\nIs anyone else facing the same issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/94", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/94/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/94/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/94", "id": 365589786, "node_id": "MDU6SXNzdWUzNjU1ODk3ODY=", "number": 94, "title": "Accessing dict information", "user": {"login": "JasonCrowe", "id": 1906730, "node_id": "MDQ6VXNlcjE5MDY3MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1906730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JasonCrowe", "html_url": "https://github.com/JasonCrowe", "followers_url": "https://api.github.com/users/JasonCrowe/followers", "following_url": "https://api.github.com/users/JasonCrowe/following{/other_user}", "gists_url": "https://api.github.com/users/JasonCrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/JasonCrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JasonCrowe/subscriptions", "organizations_url": "https://api.github.com/users/JasonCrowe/orgs", "repos_url": "https://api.github.com/users/JasonCrowe/repos", "events_url": "https://api.github.com/users/JasonCrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/JasonCrowe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-01T18:38:57Z", "updated_at": "2018-10-11T16:02:36Z", "closed_at": "2018-10-11T16:02:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "For asin:\r\nB071Z8LD77\r\n\r\nI am getting data with this:\r\n`top_category = products_api.get_product_categories_for_asin(marketplaceid=marketplace_usa, asin=self.asin).parsed`\r\n\r\n`{'Self': {'Parent': {'Parent': {'Parent': {'Parent': {'Parent': {'ProductCategoryId': {'value': '16310101'},\r\n                                                                 'ProductCategoryName': {'value': 'Grocery & Gourmet Food'}},\r\n                                                      'ProductCategoryId': {'value': '16310211'},\r\n                                                      'ProductCategoryName': {'value': 'Categories'}},\r\n                                           'ProductCategoryId': {'value': '16310231'},\r\n                                           'ProductCategoryName': {'value': 'Beverages'}},\r\n                                'ProductCategoryId': {'value': '16521305011'},\r\n                                'ProductCategoryName': {'value': 'Coffee, Tea & Cocoa'}},\r\n                     'ProductCategoryId': {'value': '16318031'},\r\n                     'ProductCategoryName': {'value': 'Coffee'}},\r\n          'ProductCategoryId': {'value': '14978414011'},\r\n          'ProductCategoryName': {'value': 'Single-Serve Capsules & Pods'}}}`\r\n\r\nMy question is how can I get the top-level category from this? I know I can use:\r\ntop_category.Self.Parent.Parent.Parent.Parent.Parent.ProductCategoryName but the next asin may not have this many nested levels of 'parent'.\r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/92", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/92/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/92/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/92", "id": 362934855, "node_id": "MDU6SXNzdWUzNjI5MzQ4NTU=", "number": 92, "title": "Request signature too far in the past", "user": {"login": "KshitizGIT", "id": 8330582, "node_id": "MDQ6VXNlcjgzMzA1ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8330582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KshitizGIT", "html_url": "https://github.com/KshitizGIT", "followers_url": "https://api.github.com/users/KshitizGIT/followers", "following_url": "https://api.github.com/users/KshitizGIT/following{/other_user}", "gists_url": "https://api.github.com/users/KshitizGIT/gists{/gist_id}", "starred_url": "https://api.github.com/users/KshitizGIT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KshitizGIT/subscriptions", "organizations_url": "https://api.github.com/users/KshitizGIT/orgs", "repos_url": "https://api.github.com/users/KshitizGIT/repos", "events_url": "https://api.github.com/users/KshitizGIT/events{/privacy}", "received_events_url": "https://api.github.com/users/KshitizGIT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-23T11:25:24Z", "updated_at": "2018-09-23T14:57:35Z", "closed_at": "2018-09-23T14:57:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "<?xml version=\"1.0\"?>\\n<ErrorResponse xmlns=\"http://mws.amazonaws.com/doc/2009-01-01/\">\\n  <Error>\\n    <Type>Sender</Type>\\n    <Code>RequestExpired</Code>\\n    <Message>Request signature is too far in the past and has expired. Timestamp date: 2018-09-23T10:04:57Z</Message>\\n  </Error>\\n  <RequestID>cc980489-5f56-4f50-ab65-ca7027d52c75</RequestID>\\n</ErrorResponse>\r\n\r\n\r\nSome times, the above error message shows up . Any ideas why this error message occurs and how to best resolve this ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/91", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/91/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/91/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/91", "id": 337390545, "node_id": "MDU6SXNzdWUzMzczOTA1NDU=", "number": 91, "title": "API doesn't support AU Marketplace", "user": {"login": "SanghviChirag", "id": 11367944, "node_id": "MDQ6VXNlcjExMzY3OTQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/11367944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SanghviChirag", "html_url": "https://github.com/SanghviChirag", "followers_url": "https://api.github.com/users/SanghviChirag/followers", "following_url": "https://api.github.com/users/SanghviChirag/following{/other_user}", "gists_url": "https://api.github.com/users/SanghviChirag/gists{/gist_id}", "starred_url": "https://api.github.com/users/SanghviChirag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SanghviChirag/subscriptions", "organizations_url": "https://api.github.com/users/SanghviChirag/orgs", "repos_url": "https://api.github.com/users/SanghviChirag/repos", "events_url": "https://api.github.com/users/SanghviChirag/events{/privacy}", "received_events_url": "https://api.github.com/users/SanghviChirag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-02T06:53:23Z", "updated_at": "2018-08-02T19:54:53Z", "closed_at": "2018-08-02T19:54:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "To support AU marketplace, I think we just need to add AU \r\nendpoint: \"https://mws.amazonservices.com.au\"  # A39IBJ37TRP1C6\r\nI didn't dig much, we need to do anything else.\r\n\r\nHelp me if there is anything else to do", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/90", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/90/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/90/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/90", "id": 337287735, "node_id": "MDU6SXNzdWUzMzcyODc3MzU=", "number": 90, "title": "Proxy not getting set in the make_request method .", "user": {"login": "nateshmbhat", "id": 23279926, "node_id": "MDQ6VXNlcjIzMjc5OTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/23279926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nateshmbhat", "html_url": "https://github.com/nateshmbhat", "followers_url": "https://api.github.com/users/nateshmbhat/followers", "following_url": "https://api.github.com/users/nateshmbhat/following{/other_user}", "gists_url": "https://api.github.com/users/nateshmbhat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nateshmbhat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nateshmbhat/subscriptions", "organizations_url": "https://api.github.com/users/nateshmbhat/orgs", "repos_url": "https://api.github.com/users/nateshmbhat/repos", "events_url": "https://api.github.com/users/nateshmbhat/events{/privacy}", "received_events_url": "https://api.github.com/users/nateshmbhat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-01T12:35:09Z", "updated_at": "2018-07-01T12:55:39Z", "closed_at": "2018-07-01T12:55:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have instantiated the Orders class like this with a proxy of \"proxy.server:3128\" .\r\n`\r\nmws.Orders(access_key=ACCESS_KEY , secret_key=SECRET_KEY , auth_token= AUTH_TOKEN , account_id = 'A35G3R8LMVKV8X' , region='IN' , proxy=\"proxy.server:3128\")`\r\n\r\nWhen I added a `print(\"proxies = \" , proxies)` in the make_request method , it prints : `proxies =  {'http': None, 'https': None}`\r\n\r\nThis is a small snippet from the make_request method in which I am printing the proxies.\r\n```\r\n\r\n try:\r\n            # The parameters are included in the url string.\r\n            print(\"proxies = \" , proxies ) ; \r\n            response = requests.request(method, url, data=kwargs.get(\r\n                'body', ''), headers=headers, proxies=proxies)\r\n            response.raise_for_status()\r\n\r\n            if 'content-md5' in response.headers:\r\n                validate_hash(response)\r\n            parsed_response = DataWrapper(response, rootkey)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/89", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/89/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/89/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/89", "id": 337192761, "node_id": "MDU6SXNzdWUzMzcxOTI3NjE=", "number": 89, "title": "Getting NewConnectionError", "user": {"login": "nateshmbhat", "id": 23279926, "node_id": "MDQ6VXNlcjIzMjc5OTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/23279926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nateshmbhat", "html_url": "https://github.com/nateshmbhat", "followers_url": "https://api.github.com/users/nateshmbhat/followers", "following_url": "https://api.github.com/users/nateshmbhat/following{/other_user}", "gists_url": "https://api.github.com/users/nateshmbhat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nateshmbhat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nateshmbhat/subscriptions", "organizations_url": "https://api.github.com/users/nateshmbhat/orgs", "repos_url": "https://api.github.com/users/nateshmbhat/repos", "events_url": "https://api.github.com/users/nateshmbhat/events{/privacy}", "received_events_url": "https://api.github.com/users/nateshmbhat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-30T06:52:00Z", "updated_at": "2018-07-01T13:11:21Z", "closed_at": "2018-07-01T13:11:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have deployed my project on pythonanywhere . I am now using the pull request from  \"https://github.com/innotrade24/python-amazon-mws1\" and when I run it on local machine it works . \r\n\r\nThe old version I was using (master branch version) was working fine in pythonanywhere. Once I used the library from pull request i am getting  this below error .\r\n\r\nHow do I fix this ?\r\n\r\nhere is the full traceback  : \r\n\r\nThey have mentioned in this site : http://help.pythonanywhere.com/pages/403ForbiddenError/  , that it needs to use a proxy for that to work but requests module automatically handles that. But in this case I am still getting the error . Please help :/ \r\n\r\n ```\r\n File \"/home/daedalcrafters/daedal-crafters/OrderManagement/amazon_mws/interface.py\", line 113, in _get_report_from_reporttype_                                                                                 \r\n    report_request_resp = self.reportsapi.request_report(marketplace_ids=['A21TJRUUN4KGV'] , start_date= olderdate.isoformat() , end_date = laterdate.isoformat() , report_type= reporttype).parsed              \r\n  File \"/home/daedalcrafters/daedal-crafters/OrderManagement/amazon_mws/mws/apis/reports.py\", line 43, in request_report                                                                                         \r\n    return self.make_request(data)                                                                                                                                                                               \r\n  File \"/home/daedalcrafters/daedal-crafters/OrderManagement/amazon_mws/mws/mws.py\", line 326, in make_request                                                                                                   \r\n    'body', ''), headers=headers, proxies=proxies)                                                                                                                                                               \r\n  File \"/home/daedalcrafters/.virtualenvs/myenv/lib/python3.6/site-packages/requests/api.py\", line 58, in request                                                                                                \r\n    return session.request(method=method, url=url, **kwargs)                                                                                                                                                     \r\n  File \"/home/daedalcrafters/.virtualenvs/myenv/lib/python3.6/site-packages/requests/sessions.py\", line 508, in request                                                                                          \r\n    resp = self.send(prep, **send_kwargs)                                                                                                                                                                        \r\n  File \"/home/daedalcrafters/.virtualenvs/myenv/lib/python3.6/site-packages/requests/sessions.py\", line 618, in send                                                                                             \r\n    r = adapter.send(request, **kwargs)                                                                                                                                                                          \r\n  File \"/home/daedalcrafters/.virtualenvs/myenv/lib/python3.6/site-packages/requests/adapters.py\", line 508, in send                                                                                             \r\n    raise ConnectionError(e, request=request)                                                                                                                                                                    \r\nException : HTTPSConnectionPool(host='mws.amazonservices.in', port=443): Max retries exceeded with url: /?AWSAccessKeyId=key&Action=RequestReport&EndDate=2018-06-30T06%3A50%3A54.982501&MWSAuthToken=mytoken&MarketplaceIdList.Id.1=A21TJRUUN4KGV&Merchant=A35G3R8LMVKV8X&ReportType=_GET_XML_ALL_ORDERS_DATA_BY_ORDER_DATE_&SignatureMethod=HmacSHA256&SignatureVersion=2&StartDate=2018-05-31T06%3A50%3A54.982501&Timestamp=2018-06-30T06%3A50%3A55&Version=2009-01-01&Signature=TfTZhEGjqUD7TFF1gC02PMUo0GISNJ8pie5YUnoEAvU%3D (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x7f1e56950860>: Failed to establish a new connection: [Errno 111] Connection refused',))                                                                                            \r\n^CTraceback (most recent call last):                                                                                                                                                                             \r\n  File \"/home/daedalcrafters/.virtualenvs/myenv/lib/python3.6/site-packages/urllib3/connection.py\", line 141, in _new_conn                                                                                       \r\n    (self.host, self.port), self.timeout, **extra_kw)                                                                                                                                                            \r\n  File \"/home/daedalcrafters/.virtualenvs/myenv/lib/python3.6/site-packages/urllib3/util/connection.py\", line 83, in create_connection                                                                           \r\n    raise err                                                                                                                                                                                                    \r\n  File \"/home/daedalcrafters/.virtualenvs/myenv/lib/python3.6/site-packages/urllib3/util/connection.py\", line 73, in create_connection                                                                           \r\n    sock.connect(sa)                                                                                                                                                                                             \r\nConnectionRefusedError: [Errno 111] Connection refused\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/88", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/88/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/88/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/88", "id": 336872548, "node_id": "MDU6SXNzdWUzMzY4NzI1NDg=", "number": 88, "title": "Wrong content length maybe amazon error ", "user": {"login": "nateshmbhat", "id": 23279926, "node_id": "MDQ6VXNlcjIzMjc5OTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/23279926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nateshmbhat", "html_url": "https://github.com/nateshmbhat", "followers_url": "https://api.github.com/users/nateshmbhat/followers", "following_url": "https://api.github.com/users/nateshmbhat/following{/other_user}", "gists_url": "https://api.github.com/users/nateshmbhat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nateshmbhat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nateshmbhat/subscriptions", "organizations_url": "https://api.github.com/users/nateshmbhat/orgs", "repos_url": "https://api.github.com/users/nateshmbhat/repos", "events_url": "https://api.github.com/users/nateshmbhat/events{/privacy}", "received_events_url": "https://api.github.com/users/nateshmbhat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-29T05:57:38Z", "updated_at": "2018-06-29T07:10:49Z", "closed_at": "2018-06-29T06:57:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nIt was working fine 2 days back . Now Error is popping up everytime . \r\nHere is my complete error traceback : It even has the reportid , get the report and please check whats the problem . \r\n\r\n```\r\n\r\nreport ID :  11319737708017711\r\nException : Wrong Contentlength, maybe amazon error...\r\n  File \"<ipython-input-3-e36bd121ae40>\", line 167, in _get_report_from_reporttype_\r\n    resp = self.reportsapi.get_report(report_id=reportid)\r\n  File \"C:\\Users\\Natesh\\Desktop\\amazon-mws\\src\\mws\\mws.py\", line 420, in get_report\r\n    return self.make_request(data)\r\n  File \"C:\\Users\\Natesh\\Desktop\\amazon-mws\\src\\mws\\mws.py\", line 254, in make_request\r\n    parsed_response = DataWrapper(data, response.headers)\r\n  File \"C:\\Users\\Natesh\\Desktop\\amazon-mws\\src\\mws\\mws.py\", line 126, in __init__\r\n    raise MWSError(\"Wrong Contentlength, maybe amazon error...\")\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n~\\Desktop\\amazon-mws\\src\\mws\\mws.py in make_request(self, extra_data, method, **kwargs)\r\n    247                 try:\r\n--> 248                     parsed_response = DictWrapper(data, rootkey)\r\n    249                 except TypeError:  # raised when using Python 3 and trying to remove_namespace()\r\n\r\n~\\Desktop\\amazon-mws\\src\\mws\\mws.py in __init__(self, xml, rootkey)\r\n    105         self._rootkey = rootkey\r\n--> 106         self._mydict = utils.XML2Dict().fromstring(remove_namespace(xml))\r\n    107         self._response_dict = self._mydict.get(list(self._mydict.keys())[0], self._mydict)\r\n\r\n~\\Desktop\\amazon-mws\\src\\mws\\mws.py in remove_namespace(xml)\r\n     97     regex = re.compile(' xmlns(:ns2)?=\"[^\"]+\"|(ns2:)|(xml:)')\r\n---> 98     return regex.sub('', xml)\r\n     99 \r\n\r\nTypeError: cannot use a string pattern on a bytes-like object\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nParseError                                Traceback (most recent call last)\r\n~\\Desktop\\amazon-mws\\src\\mws\\mws.py in make_request(self, extra_data, method, **kwargs)\r\n    250                     # When we got CSV as result, we will got error on this\r\n--> 251                     parsed_response = DictWrapper(response.text, rootkey)\r\n    252 \r\n\r\n~\\Desktop\\amazon-mws\\src\\mws\\mws.py in __init__(self, xml, rootkey)\r\n    105         self._rootkey = rootkey\r\n--> 106         self._mydict = utils.XML2Dict().fromstring(remove_namespace(xml))\r\n    107         self._response_dict = self._mydict.get(list(self._mydict.keys())[0], self._mydict)\r\n\r\n~\\Desktop\\amazon-mws\\src\\mws\\utils.py in fromstring(self, str_)\r\n    105         \"\"\"\r\n--> 106         text = ET.fromstring(str_)\r\n    107         root_tag, root_tree = self._namespace_split(text.tag, self._parse_node(text))\r\n\r\nc:\\program files\\python35\\lib\\xml\\etree\\ElementTree.py in XML(text, parser)\r\n   1333     parser.feed(text)\r\n-> 1334     return parser.close()\r\n   1335 \r\n\r\nParseError: no element found: line 1929, column 37\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nMWSError                                  Traceback (most recent call last)\r\n<ipython-input-3-e36bd121ae40> in _get_report_from_reporttype_(self, reporttype, olderdate, laterdate)\r\n    166 \r\n--> 167             resp = self.reportsapi.get_report(report_id=reportid)\r\n    168             report = None ;\r\n\r\n~\\Desktop\\amazon-mws\\src\\mws\\mws.py in get_report(self, report_id)\r\n    419         data = dict(Action='GetReport', ReportId=report_id)\r\n--> 420         return self.make_request(data)\r\n    421 \r\n\r\n~\\Desktop\\amazon-mws\\src\\mws\\mws.py in make_request(self, extra_data, method, **kwargs)\r\n    253             except XMLError:\r\n--> 254                 parsed_response = DataWrapper(data, response.headers)\r\n    255 \r\n\r\n~\\Desktop\\amazon-mws\\src\\mws\\mws.py in __init__(self, data, header)\r\n    125             if header['content-md5'].encode() != hash_:\r\n--> 126                 raise MWSError(\"Wrong Contentlength, maybe amazon error...\")\r\n    127 \r\n\r\nMWSError: Wrong Contentlength, maybe amazon error...\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-33-5b2d9a183fb9> in <module>()\r\n----> 1 orders = obj._get_report_from_reporttype_('_GET_XML_ALL_ORDERS_DATA_BY_ORDER_DATE_' , olderdate=datetime.datetime.now()-datetime.timedelta(days = 2) , laterdate=datetime.datetime.now())\r\n\r\n<ipython-input-3-e36bd121ae40> in _get_report_from_reporttype_(self, reporttype, olderdate, laterdate)\r\n    182             log.error('Exception : {}'.format(E)) ;\r\n    183 \r\n--> 184             print(resp.original)\r\n    185 \r\n\r\n~\\Desktop\\amazon-mws\\src\\mws\\utils.py in __getattr__(self, item)\r\n     33 \r\n     34     def __getattr__(self, item):\r\n---> 35         node = self.__getitem__(item)\r\n     36 \r\n     37         if isinstance(node, dict) and 'value' in node and len(node) == 1:\r\n\r\nKeyError: 'original'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/85", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/85/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/85/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/85", "id": 334091967, "node_id": "MDU6SXNzdWUzMzQwOTE5Njc=", "number": 85, "title": "Missing required parameter SellerId.", "user": {"login": "anuj9196", "id": 6560085, "node_id": "MDQ6VXNlcjY1NjAwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6560085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuj9196", "html_url": "https://github.com/anuj9196", "followers_url": "https://api.github.com/users/anuj9196/followers", "following_url": "https://api.github.com/users/anuj9196/following{/other_user}", "gists_url": "https://api.github.com/users/anuj9196/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuj9196/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuj9196/subscriptions", "organizations_url": "https://api.github.com/users/anuj9196/orgs", "repos_url": "https://api.github.com/users/anuj9196/repos", "events_url": "https://api.github.com/users/anuj9196/events{/privacy}", "received_events_url": "https://api.github.com/users/anuj9196/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-20T14:00:13Z", "updated_at": "2019-10-16T13:15:16Z", "closed_at": "2019-10-16T13:15:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm listing categories of the product using ASIN\r\n```\r\nproducts_api = mws.Products(\r\n        access_key=settings.MWS_CLIENT_KEY,\r\n        secret_key=settings.MWS_CLIENT_SECRET,\r\n        account_id=settings.MWS_SELLER_ID,\r\n        region='US'\r\n    )\r\n\r\n    products = products_api.get_product_categories_for_asin(\r\n        marketplaceid=settings.MWS_MARKETPLACE_ID,\r\n        asin=asin,\r\n    )\r\n\r\n    print(products)\r\n```\r\n\r\nBut this is giving error\r\n\r\n```\r\nmws.mws.MWSError: <?xml version=\"1.0\"?>\r\n<ErrorResponse xmlns=\"http://mws.amazonservices.com/schema/Products/2011-10-01\">\r\n  <Error>\r\n    <Type>Sender</Type>\r\n    <Code>InvalidParameterValue</Code>\r\n    <Message>Missing required parameter SellerId.</Message>\r\n  </Error>\r\n  <RequestID>ebc6f742-43b5-4f98-b681-974599284db7</RequestID>\r\n</ErrorResponse>\r\n```\r\n\r\nI tried same credentials with https://mws.amazonservices.com/scratchpad/index.html\r\n\r\nand it's working fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/83", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/83/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/83/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/83", "id": 330140957, "node_id": "MDU6SXNzdWUzMzAxNDA5NTc=", "number": 83, "title": "drop pyhon 2.7 support in 1.0 release", "user": {"login": "elcolumbio", "id": 20401370, "node_id": "MDQ6VXNlcjIwNDAxMzcw", "avatar_url": "https://avatars2.githubusercontent.com/u/20401370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolumbio", "html_url": "https://github.com/elcolumbio", "followers_url": "https://api.github.com/users/elcolumbio/followers", "following_url": "https://api.github.com/users/elcolumbio/following{/other_user}", "gists_url": "https://api.github.com/users/elcolumbio/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolumbio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolumbio/subscriptions", "organizations_url": "https://api.github.com/users/elcolumbio/orgs", "repos_url": "https://api.github.com/users/elcolumbio/repos", "events_url": "https://api.github.com/users/elcolumbio/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolumbio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-07T06:58:34Z", "updated_at": "2018-06-13T17:33:33Z", "closed_at": "2018-06-13T11:30:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "- We are a small library, so we really should have a relentless focus on improving.\r\nI just found an example dicussion in our upstream dependency [requests](\r\nhttps://github.com/requests/requests/issues/4659).\r\nAn argument is in 18 month pyhon 2.7 is dead. Tests will start to break ...\r\nBut it will be way sooner, since our upstream dependencies will switch earlier.\r\n\r\nWe can release a stable 0.9 which people can use, if they like to use old software in the first place.\r\n\r\nTo support python 2.7 is already taking like 1/5 additional efforts, which could be better spent.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/82", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/82/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/82/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/82", "id": 328815179, "node_id": "MDU6SXNzdWUzMjg4MTUxNzk=", "number": 82, "title": "flatten the response", "user": {"login": "elcolumbio", "id": 20401370, "node_id": "MDQ6VXNlcjIwNDAxMzcw", "avatar_url": "https://avatars2.githubusercontent.com/u/20401370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolumbio", "html_url": "https://github.com/elcolumbio", "followers_url": "https://api.github.com/users/elcolumbio/followers", "following_url": "https://api.github.com/users/elcolumbio/following{/other_user}", "gists_url": "https://api.github.com/users/elcolumbio/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolumbio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolumbio/subscriptions", "organizations_url": "https://api.github.com/users/elcolumbio/orgs", "repos_url": "https://api.github.com/users/elcolumbio/repos", "events_url": "https://api.github.com/users/elcolumbio/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolumbio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-03T09:52:37Z", "updated_at": "2018-06-29T04:11:22Z", "closed_at": "2018-06-11T16:38:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Like @GriceTurrble  said that is after 1.0.\r\nStill it maybe useful right now.\r\n\r\nA flattener is really nice for the nested data.\r\n[This one](https://github.com/innotrade24/mwstools) is not perfect but it does some magic.\r\nIt works only with #75.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/76", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/76/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/76/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/76", "id": 327182209, "node_id": "MDU6SXNzdWUzMjcxODIyMDk=", "number": 76, "title": "encoding of reports", "user": {"login": "elcolumbio", "id": 20401370, "node_id": "MDQ6VXNlcjIwNDAxMzcw", "avatar_url": "https://avatars2.githubusercontent.com/u/20401370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolumbio", "html_url": "https://github.com/elcolumbio", "followers_url": "https://api.github.com/users/elcolumbio/followers", "following_url": "https://api.github.com/users/elcolumbio/following{/other_user}", "gists_url": "https://api.github.com/users/elcolumbio/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolumbio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolumbio/subscriptions", "organizations_url": "https://api.github.com/users/elcolumbio/orgs", "repos_url": "https://api.github.com/users/elcolumbio/repos", "events_url": "https://api.github.com/users/elcolumbio/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolumbio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-29T06:14:05Z", "updated_at": "2018-05-31T05:09:39Z", "closed_at": "2018-05-31T05:09:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "amazon returns wrong encoding in header:\r\n'Content-Type': 'text/plain;charset=Cp1252'\r\n\r\nwith the request library we get this for free:\r\nhttp://docs.python-requests.org/en/master/api/#requests.Response.apparent_encoding\r\nwhich seems to be the right encoding.\r\n\r\ni try to fix it. seems to be easy", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/73", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/73/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/73/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/73", "id": 326781426, "node_id": "MDU6SXNzdWUzMjY3ODE0MjY=", "number": 73, "title": "TypeError: quote_from_bytes() expected bytes", "user": {"login": "nateshmbhat", "id": 23279926, "node_id": "MDQ6VXNlcjIzMjc5OTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/23279926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nateshmbhat", "html_url": "https://github.com/nateshmbhat", "followers_url": "https://api.github.com/users/nateshmbhat/followers", "following_url": "https://api.github.com/users/nateshmbhat/following{/other_user}", "gists_url": "https://api.github.com/users/nateshmbhat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nateshmbhat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nateshmbhat/subscriptions", "organizations_url": "https://api.github.com/users/nateshmbhat/orgs", "repos_url": "https://api.github.com/users/nateshmbhat/repos", "events_url": "https://api.github.com/users/nateshmbhat/events{/privacy}", "received_events_url": "https://api.github.com/users/nateshmbhat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-05-27T02:16:15Z", "updated_at": "2018-05-31T16:33:42Z", "closed_at": "2018-05-31T02:17:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "This error occurs everytime when it uses make_request method .\r\n\r\nPython 3.5.2 (v3.5.2:4def2a2901a5, Jun 25 2016, 22:18:55) [MSC v.1900 64 bit (AMD64)]\r\n\r\n```\r\n~\\Desktop\\amazon-mws\\src\\mws\\utils.py in _wrapped_func(self, *args, **kwargs)\r\n    248                 # Token captured: run the \"next\" action.\r\n    249                 return self.action_by_next_token(action_name, next_token)\r\n--> 250             return request_func(self, *args, **kwargs)\r\n    251         return _wrapped_func\r\n    252     return _decorator\r\n\r\n~\\Desktop\\amazon-mws\\src\\mws\\mws.py in list_inventory_supply(self, skus, datetime_, response_group, next_token)\r\n   1280                     )\r\n   1281         data.update(utils.enumerate_param('SellerSkus.member.', skus))\r\n-> 1282         return self.make_request(data, \"POST\")\r\n   1283 \r\n   1284     def list_inventory_supply_by_next_token(self, token):\r\n\r\n~\\Desktop\\amazon-mws\\src\\mws\\mws.py in make_request(self, extra_data, method, **kwargs)\r\n    218         params = self.get_params()\r\n    219         params.update(extra_data)\r\n--> 220         request_description = calc_request_description(params)\r\n    221         signature = self.calc_signature(method, request_description)\r\n    222         url = \"{domain}{uri}?{description}&Signature={signature}\".format(\r\n\r\n~\\Desktop\\amazon-mws\\src\\mws\\mws.py in calc_request_description(params)\r\n     78     request_description = ''\r\n     79     for key in sorted(params):\r\n---> 80         encoded_value = quote(params[key], safe='-_.~')\r\n     81         request_description += '&{}={}'.format(key, encoded_value)\r\n     82     return request_description[1:]  # don't include leading ampersand\r\n\r\nc:\\program files\\python35\\lib\\urllib\\parse.py in quote(string, safe, encoding, errors)\r\n    710         if errors is not None:\r\n    711             raise TypeError(\"quote() doesn't support 'errors' for bytes\")\r\n--> 712     return quote_from_bytes(string, safe)\r\n    713 \r\n    714 def quote_plus(string, safe='', encoding=None, errors=None):\r\n\r\nc:\\program files\\python35\\lib\\urllib\\parse.py in quote_from_bytes(bs, safe)\r\n    735     \"\"\"\r\n    736     if not isinstance(bs, (bytes, bytearray)):\r\n--> 737         raise TypeError(\"quote_from_bytes() expected bytes\")\r\n    738     if not bs:\r\n    739         return ''\r\n\r\nTypeError: quote_from_bytes() expected bytes\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/70", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/70/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/70/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/70", "id": 324334028, "node_id": "MDU6SXNzdWUzMjQzMzQwMjg=", "number": 70, "title": "mws.Orders().list_order_items()  can only get item info one order_id per time? ", "user": {"login": "archtaurus", "id": 1265068, "node_id": "MDQ6VXNlcjEyNjUwNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1265068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/archtaurus", "html_url": "https://github.com/archtaurus", "followers_url": "https://api.github.com/users/archtaurus/followers", "following_url": "https://api.github.com/users/archtaurus/following{/other_user}", "gists_url": "https://api.github.com/users/archtaurus/gists{/gist_id}", "starred_url": "https://api.github.com/users/archtaurus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/archtaurus/subscriptions", "organizations_url": "https://api.github.com/users/archtaurus/orgs", "repos_url": "https://api.github.com/users/archtaurus/repos", "events_url": "https://api.github.com/users/archtaurus/events{/privacy}", "received_events_url": "https://api.github.com/users/archtaurus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-18T09:22:47Z", "updated_at": "2018-05-22T13:53:54Z", "closed_at": "2018-05-22T13:53:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "This method called **list_order_items**, but its parameter **amazon_order_id** not accept a list of ids.\r\nIs that so? Or how to get many items' information with all order_id I get from the **list_orders** method?\r\n\r\nBTW, my english is badly good! sigh ... ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/63", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/63/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/63/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/63", "id": 315282491, "node_id": "MDU6SXNzdWUzMTUyODI0OTE=", "number": 63, "title": "enable deepcopy for DictWrapper", "user": {"login": "elcolumbio", "id": 20401370, "node_id": "MDQ6VXNlcjIwNDAxMzcw", "avatar_url": "https://avatars2.githubusercontent.com/u/20401370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolumbio", "html_url": "https://github.com/elcolumbio", "followers_url": "https://api.github.com/users/elcolumbio/followers", "following_url": "https://api.github.com/users/elcolumbio/following{/other_user}", "gists_url": "https://api.github.com/users/elcolumbio/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolumbio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolumbio/subscriptions", "organizations_url": "https://api.github.com/users/elcolumbio/orgs", "repos_url": "https://api.github.com/users/elcolumbio/repos", "events_url": "https://api.github.com/users/elcolumbio/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolumbio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-18T00:00:30Z", "updated_at": "2018-05-31T05:09:57Z", "closed_at": "2018-05-31T05:09:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "i run into this because i want to dump the response object into a yaml file.\r\n\r\n```\r\nproducts_api = mws.Products()\r\nproducts = products_api.get_x()\r\nmydict = vars(products)  # same as products.__dict__\r\ntype(mydict['_response_dict'])\r\n\r\n```\r\nthis returns\r\nluigipipe.mws.mws.utils.ObjectDict\r\n\r\ni think it should return: dict\r\n\r\nA very simple approach for problems of that kind i found [here](https://www.peterbe.com/plog/must__deepcopy__).\r\n\r\nIf you think that is a good idea i can try to understand and fix this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/62", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/62/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/62/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/62", "id": 311324615, "node_id": "MDU6SXNzdWUzMTEzMjQ2MTU=", "number": 62, "title": "Feeds API getting data", "user": {"login": "lolcats4u", "id": 26174434, "node_id": "MDQ6VXNlcjI2MTc0NDM0", "avatar_url": "https://avatars0.githubusercontent.com/u/26174434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lolcats4u", "html_url": "https://github.com/lolcats4u", "followers_url": "https://api.github.com/users/lolcats4u/followers", "following_url": "https://api.github.com/users/lolcats4u/following{/other_user}", "gists_url": "https://api.github.com/users/lolcats4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/lolcats4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lolcats4u/subscriptions", "organizations_url": "https://api.github.com/users/lolcats4u/orgs", "repos_url": "https://api.github.com/users/lolcats4u/repos", "events_url": "https://api.github.com/users/lolcats4u/events{/privacy}", "received_events_url": "https://api.github.com/users/lolcats4u/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-04T17:36:40Z", "updated_at": "2018-04-05T16:33:35Z", "closed_at": "2018-04-05T16:25:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been trying to get the data out of the get_feed_submission list here:\r\nfeedlist = feeds_api.get_feed_submission_list\r\nfor which there is the normal object response at some address...\r\n<bound method Feeds.get_feed_submission_list of <mws.mws.Feeds object at 0x11a586080>>\r\n\r\nHowever whenever I try to get the data using the usual methods I can't seem to get them to work.\r\nsomething = feedlist.response\r\nAttributeError: 'function' object has no attribute 'response'\r\nsomething1 = feedlist.original\r\nAttributeError: 'function' object has no attribute 'original'\r\nsomehting2 = feedlist.parsed\r\nAttributeError: 'function' object has no attribute 'parsed'\r\n\r\nso I was wondering how to get the data from this feeds object", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/60", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/60/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/60/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/60", "id": 306851990, "node_id": "MDU6SXNzdWUzMDY4NTE5OTA=", "number": 60, "title": "Develop Branch: get_competitive_pricing_for_sku", "user": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-20T12:52:13Z", "updated_at": "2018-03-20T15:16:55Z", "closed_at": "2018-03-20T15:16:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Using the following:\r\n\r\nsku_list:\r\n\r\n```\r\n['arttpatch', 'dun474p20', 'epippegenplawch1', 'fatnumacompact2', 'fen0113010705', 'fen0144603502', 'fen0144603506', 'fen0144703580', 'fen0146102502', 'fen0197002706', 'gen8330apm', 'gro5ar4', 'hosbnc58110', 'hosbnc58115', 'hoswti172', 'ibaaf75gbkf', 'ibarg370ahmzbmt', 'levmpd2036', 'lin30435', 'lin30437']\r\n```\r\n\r\nRequesting competitive pricing for this list of items works on the current mws master branch, but fails with the new develop.\r\n\r\nOutputting the following error\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n<ErrorResponse xmlns=\"http://mws.amazonservices.com/schema/Products/2011-10-01\">\r\n  <Error>\r\n    <Type>Sender</Type>\r\n    <Code>SignatureDoesNotMatch</Code>\r\n    <Message>The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.</Message>\r\n  </Error>\r\n  <RequestID>b5c4fb44-54be-41b3-85a0-58d321758f70</RequestID>\r\n</ErrorResponse>\r\n<?xml version=\"1.0\"?>\r\n<ErrorResponse xmlns=\"http://mws.amazonservices.com/schema/Products/2011-10-01\">\r\n  <Error>\r\n    <Type>Sender</Type>\r\n    <Code>SignatureDoesNotMatch</Code>\r\n    <Message>The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.</Message>\r\n  </Error>\r\n  <RequestID>b5c4fb44-54be-41b3-85a0-58d321758f70</RequestID>\r\n</ErrorResponse><?xml version=\"1.0\"?>\r\n<ErrorResponse xmlns=\"http://mws.amazonservices.com/schema/Products/2011-10-01\">\r\n  <Error>\r\n    <Type>Sender</Type>\r\n    <Code>SignatureDoesNotMatch</Code>\r\n    <Message>The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.</Message>\r\n  </Error>\r\n  <RequestID>b5c4fb44-54be-41b3-85a0-58d321758f70</RequestID>\r\n</ErrorResponse>\r\n```\r\n\r\nI believe this is to do with the description being calculated differently on this branch and will investigate.\r\n\r\nFailed:\r\n```\r\nAWSAccessKeyId=[REDACTED]&Action=GetCompetitivePricingForSKU&MarketplaceId=A1F83G8C2ARO7P&SellerId=[REDACTED]&SellerSKUList.SellerSKU.10=fen0197002706&SellerSKUList.SellerSKU.11=gen8330apm&SellerSKUList.SellerSKU.12=gro5ar4&SellerSKUList.SellerSKU.13=hosbnc58110&SellerSKUList.SellerSKU.14=hosbnc58115&SellerSKUList.SellerSKU.15=hoswti172&SellerSKUList.SellerSKU.16=ibaaf75gbkf&SellerSKUList.SellerSKU.17=ibarg370ahmzbmt&SellerSKUList.SellerSKU.18=levmpd2036&SellerSKUList.SellerSKU.19=lin30435&SellerSKUList.SellerSKU.1=arttpatch&SellerSKUList.SellerSKU.20=lin30437&SellerSKUList.SellerSKU.2=dun474p20&SellerSKUList.SellerSKU.3=epippegenplawch1&SellerSKUList.SellerSKU.4=fatnumacompact2&SellerSKUList.SellerSKU.5=fen0113010705&SellerSKUList.SellerSKU.6=fen0144603502&SellerSKUList.SellerSKU.7=fen0144603506&SellerSKUList.SellerSKU.8=fen0144703580&SellerSKUList.SellerSKU.9=fen0146102502&SignatureMethod=HmacSHA256&SignatureVersion=2&Timestamp=2018-03-20T12%3A34%3A24&Version=2011-10-01\r\n```\r\nWorks:\r\n```\r\nAWSAccessKeyId=[REDACTED]&Action=GetCompetitivePricingForSKU&MarketplaceId=A1F83G8C2ARO7P&SellerId=[REDACTED]&SellerSKUList.SellerSKU.1=arttpatch&SellerSKUList.SellerSKU.10=fen0197002706&SellerSKUList.SellerSKU.11=gen8330apm&SellerSKUList.SellerSKU.12=gro5ar4&SellerSKUList.SellerSKU.13=hosbnc58110&SellerSKUList.SellerSKU.14=hosbnc58115&SellerSKUList.SellerSKU.15=hoswti172&SellerSKUList.SellerSKU.16=ibaaf75gbkf&SellerSKUList.SellerSKU.17=ibarg370ahmzbmt&SellerSKUList.SellerSKU.18=levmpd2036&SellerSKUList.SellerSKU.19=lin30435&SellerSKUList.SellerSKU.2=dun474p20&SellerSKUList.SellerSKU.20=lin30437&SellerSKUList.SellerSKU.3=epippegenplawch1&SellerSKUList.SellerSKU.4=fatnumacompact2&SellerSKUList.SellerSKU.5=fen0113010705&SellerSKUList.SellerSKU.6=fen0144603502&SellerSKUList.SellerSKU.7=fen0144603506&SellerSKUList.SellerSKU.8=fen0144703580&SellerSKUList.SellerSKU.9=fen0146102502&SignatureMethod=HmacSHA256&SignatureVersion=2&Timestamp=2018-03-20T12%3A41%3A27Z&Version=2011-10-01\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/59", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/59/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/59/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/59", "id": 306536634, "node_id": "MDU6SXNzdWUzMDY1MzY2MzQ=", "number": 59, "title": "Remove `__all__` from mws.py", "user": {"login": "jameshiew", "id": 2990876, "node_id": "MDQ6VXNlcjI5OTA4NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2990876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jameshiew", "html_url": "https://github.com/jameshiew", "followers_url": "https://api.github.com/users/jameshiew/followers", "following_url": "https://api.github.com/users/jameshiew/following{/other_user}", "gists_url": "https://api.github.com/users/jameshiew/gists{/gist_id}", "starred_url": "https://api.github.com/users/jameshiew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jameshiew/subscriptions", "organizations_url": "https://api.github.com/users/jameshiew/orgs", "repos_url": "https://api.github.com/users/jameshiew/repos", "events_url": "https://api.github.com/users/jameshiew/events{/privacy}", "received_events_url": "https://api.github.com/users/jameshiew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-19T16:29:46Z", "updated_at": "2018-03-20T15:17:09Z", "closed_at": "2018-03-20T15:17:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The upstream didn't have an `__all__`, it was a bad idea of me to add this in. I thought it made things cleaner but actually some applications might import things like `MWS` which is not listed in `__all__`. I actually have an application I developed some years back which does this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/56", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/56/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/56/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/56", "id": 304519775, "node_id": "MDU6SXNzdWUzMDQ1MTk3NzU=", "number": 56, "title": "Need a \"clean\" method for parameter validation", "user": {"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974577, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzc=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 864842079, "node_id": "MDU6TGFiZWw4NjQ4NDIwNzk=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/good%20first%20issue", "name": "good first issue", "color": "1d76db", "default": true, "description": "Good issues for new coders to contribute to"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/milestones/3", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/milestone/3", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/milestones/3/labels", "id": 3108669, "node_id": "MDk6TWlsZXN0b25lMzEwODY2OQ==", "number": 3, "title": "1.0.0", "description": "Full coverage of the MWS API, incorporation of the xmltodict dependency, and added test coverage and documentation.", "creator": {"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 2, "state": "open", "created_at": "2018-02-12T17:31:36Z", "updated_at": "2020-08-03T18:41:35Z", "due_on": "2020-10-02T07:00:00Z", "closed_at": null}, "comments": 9, "created_at": "2018-03-12T20:03:18Z", "updated_at": "2018-05-11T16:44:31Z", "closed_at": "2018-05-11T16:44:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "While writing some request method tests recently, I came across some mild confusion, conceptually speaking.\r\n\r\nWe perform a parameter validation for `datetime`s within the `make_request` method, here:\r\n\r\nhttps://github.com/python-amazon-mws/python-amazon-mws/blob/7dd4a509e0f699885383d9b638e8d9b24bb57875/mws/mws.py#L249-L251\r\n\r\nAside from this, params are not validated much further. The next time they are touched in a similar fashion is inside `calc_request_description`:\r\n\r\nhttps://github.com/python-amazon-mws/python-amazon-mws/blob/7dd4a509e0f699885383d9b638e8d9b24bb57875/mws/mws.py#L81-L84\r\n\r\nHere, the parameter value passes through `str` and `urllib.parse.quote` (on Python 2, `urllib.quote`). That `str` conversion is necessary to prevent errors when passing the value through `quote`, which is fine.\r\n\r\n---\r\n\r\n**Problem**: These two spots represent two different points of input validation that only A) convert `datetime` objects to strings in ISO-8601 format, and B) convert any other value to `str` (while not catching any exceptions that could be raised by `str`). While it isn't breaking much, it limits options for further validation, as well as adding some confusion as to whether and/or when any validation is being performed.\r\n\r\n---\r\n\r\n**Solution**: Would like to write a \"clean\" method that all parameters pass through, taking the \"raw\" parameters as input and returning a \"cleaned\" version of the params dict. Downstream code should be able to rely on every value of the parameter dict being a string **or** a useful exception being raised if a parameter value cannot be converted.\r\n\r\nThe \"clean\" method should be called inside the `make_request` method, in about the same spot as the current `datetime` validation code (the call to the \"clean\" method should replace that validation, in fact).\r\n\r\n---\r\n\r\nAt time of writing, I'm busy with test methods, day job, and home stuff. If anyone else wants to pick this off, feel free to do so.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/54", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/54/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/54/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/54", "id": 304099352, "node_id": "MDU6SXNzdWUzMDQwOTkzNTI=", "number": 54, "title": "General Announcements [2019-03-26: getting back in the swing of things]", "user": {"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 862803923, "node_id": "MDU6TGFiZWw4NjI4MDM5MjM=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/announcements", "name": "announcements", "color": "16e596", "default": false, "description": "Project updates"}], "state": "closed", "locked": false, "assignee": {"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/milestones/3", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/milestone/3", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/milestones/3/labels", "id": 3108669, "node_id": "MDk6TWlsZXN0b25lMzEwODY2OQ==", "number": 3, "title": "1.0.0", "description": "Full coverage of the MWS API, incorporation of the xmltodict dependency, and added test coverage and documentation.", "creator": {"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 2, "state": "open", "created_at": "2018-02-12T17:31:36Z", "updated_at": "2020-08-03T18:41:35Z", "due_on": "2020-10-02T07:00:00Z", "closed_at": null}, "comments": 7, "created_at": "2018-03-10T19:53:26Z", "updated_at": "2019-03-28T23:08:41Z", "closed_at": "2019-03-28T23:08:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For lack of a solid option at the moment and a lack of desire to set up a proper blog right now, I am using this issue as an announcement. So: hi, folks. \ud83d\ude03 \r\n\r\n## Updates\r\n### 2018-06-01\r\nWe've had some progress lately, mainly thanks to contributors donating their time. Thank you to those who have added content recently to improve the project. :) [*(full comment)*](https://github.com/python-amazon-mws/python-amazon-mws/issues/54#issuecomment-393930822)\r\n\r\n### 2018-05-08\r\n**Quick update**: we have detached python-amazon-mws from the original upstream repo, so this is now a \"normal\" repository. [*(full comment)*](https://github.com/python-amazon-mws/python-amazon-mws/issues/54#issuecomment-387454140)\r\n\r\n### 2018-03-10\r\n**Update to an update**: I've merged `feature-request-testing` branch to `develop`. This provides a framework for request method automated testing throughout the project, with some example tests provided for the Inventory API. [*(full comment)*](https://github.com/python-amazon-mws/python-amazon-mws/issues/54#issuecomment-372063251)\r\n\r\n---\r\n\r\n*Original post from 2018-03-10 follows*\r\n\r\nAll current PRs have been merged and accepted into the `develop` branch, bringing that branch up-to-date with the current set of changes. Now's a good time for a change I've been working on, **separating the `mws` module into component modules**.\r\n\r\n## API modules\r\nEach MWS API will be covered by the same class of the same name as before. Now, however, code will be moved into the `apis` sub-directory. Each API lives within its own module, which allows for easier editing in future as we don't need to sift through the monolithic `mws` module to make those changes.\r\n\r\nAs much as possible, I've tried to ensure that the changes remain backwards-compatible:\r\n\r\n* You should still be able to access API classes using the style `from mws import ApiClass`.\r\n* **breaking change**: if your code relied on an import such as `from mws.mws import ApiClass`, this will no longer work. You must edit downstream code to match `from mws import ApiClass`\r\n* Alternatively, `from mws.apis import ApiClass` will work just the same, though this not necessary.\r\n  * You could get *even more* specific, if you like: `from mws.apis.inventory import Inventory`. This is almost positively *not* necessary for accessing the API class.\r\n\r\n## New space for API-specific code\r\nBecause APIs are now separated into component modules, there is now ample space for additional data, constants, and functions specific to that API. For example, we may expand on sections such as the `Reports` API to include constants for each [ReportType enumeration](http://docs.developer.amazonservices.com/en_US/reports/Reports_ReportType.html), which can aid both internal code (adding checks for the enumeration used) and downstream development (providing easy access to the enumeration types, relieving some of the pressure on end users to dive into Amazon MWS documentation every time they want to make a change).\r\n\r\nAn example of this will be present in the InboundShipments API, with the use of the separate `parse_item_args` method (previously a method of the InboundShipments class).\r\n\r\n## Decorators\r\nWith the introduction of the InboundShipments API, we provided a decorator for `next_token_action`, allowing users to call the same request method with a `next_token` kwarg to automatically call that method's `ByNextToken` action. This decorator was previously housed in the `utils` module.\r\n\r\nWith this update, I've moved it into its own `decorators` module, which can be home to other useful decorators in future, if necessary.\r\n\r\n## Roadmap\r\nAs mentioned, this change is being merged into the `develop` branch today. I would have waited until after a 0.9 release first, but I felt it best to push it earlier so that others can play around with it as we continue to move forward in fixing up the project. Further, since there are some (albeit minor) breaking changes with this merge, a new minor release just won't cut it.\r\n\r\nTherefore, the next release will be **1.0**. I'm looking to bolster the functionality of the project so that it can cover a majority of use-cases and function as the de facto version of `python-amazon-mws` in the wild. The \"roadmap\" project will be updated later today to reflect this.\r\n\r\nOn that last note (\"being the de facto version of `python-amazon-mws`\"): once we move to a 1.0 release, I will be requesting that this project be separated from its upstream (by czpython). That will provide us with a bit more control over the project and some additional tools (searching this repo is not currently possible, because it is still technically a fork).\r\n\r\n## Q&A\r\nFeel free to post questions here regarding these changes, future plans, and so on. Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/51", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/51/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/51/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/51", "id": 301602951, "node_id": "MDU6SXNzdWUzMDE2MDI5NTE=", "number": 51, "title": "Inventory", "user": {"login": "lolcats4u", "id": 26174434, "node_id": "MDQ6VXNlcjI2MTc0NDM0", "avatar_url": "https://avatars0.githubusercontent.com/u/26174434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lolcats4u", "html_url": "https://github.com/lolcats4u", "followers_url": "https://api.github.com/users/lolcats4u/followers", "following_url": "https://api.github.com/users/lolcats4u/following{/other_user}", "gists_url": "https://api.github.com/users/lolcats4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/lolcats4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lolcats4u/subscriptions", "organizations_url": "https://api.github.com/users/lolcats4u/orgs", "repos_url": "https://api.github.com/users/lolcats4u/repos", "events_url": "https://api.github.com/users/lolcats4u/events{/privacy}", "received_events_url": "https://api.github.com/users/lolcats4u/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-01T23:47:57Z", "updated_at": "2018-03-08T21:07:53Z", "closed_at": "2018-03-08T21:07:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "How would one request a full inventory report or list? There's support to use for specific skus but suppose I wanted to just know the entire inventory and dump it in a text file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/49", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/49/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/49/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/49", "id": 300424626, "node_id": "MDU6SXNzdWUzMDA0MjQ2MjY=", "number": 49, "title": "parse finance api response", "user": {"login": "elcolumbio", "id": 20401370, "node_id": "MDQ6VXNlcjIwNDAxMzcw", "avatar_url": "https://avatars2.githubusercontent.com/u/20401370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolumbio", "html_url": "https://github.com/elcolumbio", "followers_url": "https://api.github.com/users/elcolumbio/followers", "following_url": "https://api.github.com/users/elcolumbio/following{/other_user}", "gists_url": "https://api.github.com/users/elcolumbio/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolumbio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolumbio/subscriptions", "organizations_url": "https://api.github.com/users/elcolumbio/orgs", "repos_url": "https://api.github.com/users/elcolumbio/repos", "events_url": "https://api.github.com/users/elcolumbio/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolumbio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-26T22:42:18Z", "updated_at": "2018-03-08T21:08:34Z", "closed_at": "2018-03-08T21:08:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am struggling with the finance api response.\r\nI want:\r\n- select features\r\n- robust and complete data\r\n\r\nwhat i tried so far:\r\nfor me it seems not so straight forward.\r\nhttps://gist.github.com/elcolumbio/dfbbc26e2585425e2f4d47879bc9c584\r\n\r\nI would like to help building a wrapper to make it easier.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/48", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/48/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/48/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/48", "id": 298956317, "node_id": "MDU6SXNzdWUyOTg5NTYzMTc=", "number": 48, "title": "Feature Request: Merchant Fulfillment", "user": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-02-21T12:45:40Z", "updated_at": "2018-03-10T20:02:25Z", "closed_at": "2018-03-10T20:02:25Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "http://docs.developer.amazonservices.com/en_UK/merch_fulfill/MerchFulfill_Overview.html\r\n\r\nAmazon are really pushing their seller fulfilled prime service, which requires labels to be produced via their system. Link above.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/39", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/39/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/39/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/39", "id": 290948749, "node_id": "MDU6SXNzdWUyOTA5NDg3NDk=", "number": 39, "title": "Should `'User-Agent'` header have version pushed?", "user": {"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-23T18:38:57Z", "updated_at": "2018-03-12T15:11:26Z", "closed_at": "2018-03-12T15:11:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See: https://github.com/python-amazon-mws/python-amazon-mws/blob/6fc53edb4fe1b529bb94835744d1aa86171d0e03/mws/mws.py#L223\r\n\r\nThis looks like a version string added to the `User-Agent` header. I don't know best practices in this case, so the question: should we pull the project version in here to use an up-to-date version string when making new requests?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/38", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/38/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/38/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/38", "id": 290915347, "node_id": "MDU6SXNzdWUyOTA5MTUzNDc=", "number": 38, "title": "Increase test coverage for requests by checking input params", "user": {"login": "GriceTurrble", "id": 9964605, "node_id": "MDQ6VXNlcjk5NjQ2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9964605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GriceTurrble", "html_url": "https://github.com/GriceTurrble", "followers_url": "https://api.github.com/users/GriceTurrble/followers", "following_url": "https://api.github.com/users/GriceTurrble/following{/other_user}", "gists_url": "https://api.github.com/users/GriceTurrble/gists{/gist_id}", "starred_url": "https://api.github.com/users/GriceTurrble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GriceTurrble/subscriptions", "organizations_url": "https://api.github.com/users/GriceTurrble/orgs", "repos_url": "https://api.github.com/users/GriceTurrble/repos", "events_url": "https://api.github.com/users/GriceTurrble/events{/privacy}", "received_events_url": "https://api.github.com/users/GriceTurrble/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 814087944, "node_id": "MDU6TGFiZWw4MTQwODc5NDQ=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/discussion", "name": "discussion", "color": "ea4dc0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-23T16:59:11Z", "updated_at": "2018-03-12T15:11:52Z", "closed_at": "2018-03-12T15:11:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Given the nature of the package, it is not currently possible to test all the different request methods through automation, since testing responses requires valid Amazon Seller credentials to make a connection. Even if we were able to use Seller credentials to perform an automated test, there is no (last I heard) testing environment on the MWS side, so any request made has potential to wreak havoc in that Seller's production environment.\r\n\r\nRather than try to check MWS's response, we can make testing simpler by stopping short of actually sending a request. All that is really needed is to get either the parameter dict or the request string that a given request method constructs, testing that against pre-set data.\r\n\r\n---\r\n\r\nI am thinking the best option is to have an attribute on the base `MWS` class, something like `debug_params`, as a boolean. When testing, we just switch it to True, then `make_request` would be set to return the full param set instead of sending a request. Our test cases for these requests then need to initialize the APIs and switch on this \"debug mode\" in order to proceed.\r\n\r\nThis does mean that *some* code would not be covered, specifically the latter half of `make_request` that builds a DictWrapper or DataWrapper from the response. We can find some ways to cover that separately later, though, since right now I think covering the request methods is more important.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/37", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/37/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/37/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/37", "id": 290472114, "node_id": "MDU6SXNzdWUyOTA0NzIxMTQ=", "number": 37, "title": "Deal with Amazon's throttling", "user": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974577, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzc=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-01-22T13:52:02Z", "updated_at": "2019-10-18T15:21:25Z", "closed_at": "2019-10-18T15:21:25Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Currently its very easy to hit Amazon's api limits.\r\n\r\nIs it worth:\r\n\r\na) Writing a helper system to deal with this in MWS\r\nb) Using something existing outside of MWS (Like Tenacity)\r\nc) Integrating Tenacity into the project as a dependancy\r\n\r\n?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/36", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/36/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/36/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/36", "id": 290422689, "node_id": "MDU6SXNzdWUyOTA0MjI2ODk=", "number": 36, "title": "Feature request: Always return list of items", "user": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974577, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzc=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-22T10:51:14Z", "updated_at": "2018-03-12T15:12:50Z", "closed_at": "2018-03-12T15:12:50Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "for example, when using the Orders.list_order_items method, it is always necessary to do\r\n\r\n`isinstance(order_items.parsed.OrderItems.OrderItem, list)`\r\n\r\nThis is repetition on a grand scale, so could possibly do we fixing in the module.\r\n\r\nIt may not be sensible to make this happen for ALL parts of the module as it could cause problems. Possibly just in select 'pinch points'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/34", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/34/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/34/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/34", "id": 288415020, "node_id": "MDU6SXNzdWUyODg0MTUwMjA=", "number": 34, "title": "Request for new maintainer", "user": {"login": "jameshiew", "id": 2990876, "node_id": "MDQ6VXNlcjI5OTA4NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2990876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jameshiew", "html_url": "https://github.com/jameshiew", "followers_url": "https://api.github.com/users/jameshiew/followers", "following_url": "https://api.github.com/users/jameshiew/following{/other_user}", "gists_url": "https://api.github.com/users/jameshiew/gists{/gist_id}", "starred_url": "https://api.github.com/users/jameshiew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jameshiew/subscriptions", "organizations_url": "https://api.github.com/users/jameshiew/orgs", "repos_url": "https://api.github.com/users/jameshiew/repos", "events_url": "https://api.github.com/users/jameshiew/events{/privacy}", "received_events_url": "https://api.github.com/users/jameshiew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-14T15:07:27Z", "updated_at": "2018-03-12T18:32:15Z", "closed_at": "2018-03-12T18:32:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Unfortunately I cannot maintain this package any longer. There are some great PRs and I don't have the focus now to properly integrate them, but it would be a shame to let them sit still. If you think you'd be up for maintaining the package and have some experience with python-amazon-mws I can move this Github repo over to an organization and also transfer over the pip package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/32", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/32/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/32/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/32", "id": 282440747, "node_id": "MDU6SXNzdWUyODI0NDA3NDc=", "number": 32, "title": "NextToken corrupted", "user": {"login": "CoMartel", "id": 9109487, "node_id": "MDQ6VXNlcjkxMDk0ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9109487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CoMartel", "html_url": "https://github.com/CoMartel", "followers_url": "https://api.github.com/users/CoMartel/followers", "following_url": "https://api.github.com/users/CoMartel/following{/other_user}", "gists_url": "https://api.github.com/users/CoMartel/gists{/gist_id}", "starred_url": "https://api.github.com/users/CoMartel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CoMartel/subscriptions", "organizations_url": "https://api.github.com/users/CoMartel/orgs", "repos_url": "https://api.github.com/users/CoMartel/repos", "events_url": "https://api.github.com/users/CoMartel/events{/privacy}", "received_events_url": "https://api.github.com/users/CoMartel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-15T14:17:44Z", "updated_at": "2017-12-15T14:52:56Z", "closed_at": "2017-12-15T14:52:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirst, thanks a lot for your work! It made it really easy to communicate with MWS.\r\n\r\nI'm trying to retrieve all orders since a long time ago, and I have to go through a lot of pages, using \"orders_api.list_order_items_by_next_token()\"\r\n\r\nMy issue is that MWS is returning an error : \r\n\r\n`MWSError: <?xml version=\"1.0\"?>                                                                                                                              <ErrorResponse xmlns=\"https://mws.amazonservices.com/Orders/2013-09-01\">                                                                                       <Error>                                                                                                                                                        <Type>Sender</Type>                                                                                                                                          <Code>NextTokenCorrupted</Code>                                                                                                                              <Message>We could not decode your NextToken.</Message>                                                                                                     </Error>                                                                                                                                                     <RequestId>66a476d9-5e39-4749-9d24-0f0eb144c2de</RequestId>                                                                                                </ErrorResponse> `\r\n\r\n\r\nMy Token : `'94HPGhjwKyV/YYuZQbKv1QafEPREmauvizt1MIhPYZZbsgeHy/DuWGI4ng+mAxhBnCRKY29ynn3NeGyEmOrLe7q8xqAchQNKtU38YwqRuVIwqcbUqh/LhCJ0wMvlylZkE3RvwDUQBA2PLkbo+RzWuc0I2oB+AODGnOuH9R+FS+UrZQy/V771Wx35jNz11rwFrh4UqkkfQWA2QiSqpH/3gzvpWxLDu6V0kSSzHy0mGpCfpVJGS+vu5pFHMXy6XL5l/6rjAfCll94wI2FDUn7uCTzBkCWg0Z/wsJdJobvDtjaUELdOx1y44x2EM4mxRhI1BfS02qhrrgmld87/uwC4WaomF+AypslNStz4vwzMbNU93cf9JM/dXCDd8WY6S5qIC7lkadWl+YjiGdvkjrjldO07RNBq9UDfR2MsVNGnbkXLc/qP8a7QJ8Een7QBpmb/G8zE6YuflsyoTzmSGfWp2PyAULdxUEMyTzGCBmL1RoSabG1W2DI/elTKWZCcypVTY6OSkm5sDP9ZJvmuQ0mk4Epd8Re7bpJfPMG4jNqghnlDZBmR6xJsEr5KRLN5wRPF1YGxuBKk5+eybflF5uWu/iHPH7EsHndai5Q+A8Zi3sU='`\r\n\r\n\r\nWhat could be the issue? Any tips on how to fix this ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/30", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/30/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/30/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/30", "id": 281071006, "node_id": "MDU6SXNzdWUyODEwNzEwMDY=", "number": 30, "title": "Question/Problem with certain characters", "user": {"login": "dfrdmn", "id": 271423, "node_id": "MDQ6VXNlcjI3MTQyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/271423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfrdmn", "html_url": "https://github.com/dfrdmn", "followers_url": "https://api.github.com/users/dfrdmn/followers", "following_url": "https://api.github.com/users/dfrdmn/following{/other_user}", "gists_url": "https://api.github.com/users/dfrdmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfrdmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfrdmn/subscriptions", "organizations_url": "https://api.github.com/users/dfrdmn/orgs", "repos_url": "https://api.github.com/users/dfrdmn/repos", "events_url": "https://api.github.com/users/dfrdmn/events{/privacy}", "received_events_url": "https://api.github.com/users/dfrdmn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-12-11T16:03:20Z", "updated_at": "2020-08-06T23:06:02Z", "closed_at": "2020-08-06T23:06:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, thanks for the work and updates to the original.\r\n\r\nI just updated from python 2.7 to 3.6 and am (not surprisingly) running into some string errors. When executing `get_matching_product_for_id`, we have a number of products that should return accented characters such as: `'Publisher': {'value': 'B\u00e4renreiter'}`; however we are currently getting `'Publisher': {'value': 'B\u00c3\u00a4renreiter'}`.\r\n\r\nFrom the interpreter, I see the following:\r\n* `response.parsed` returns `'Publisher': {'value': 'B\u00c3\u00a4renreiter'}`\r\n* `response.original` returns `<ns2:Publisher>B\u00c3\u00a4renreiter</ns2:Publisher>`\r\n* `response.response.text` returns `<ns2:Publisher>B\u00c3\u00a4renreiter</ns2:Publisher>`\r\n* `response.response.content` returns `<ns2:Publisher>B\\xc3\\xa4renreiter</ns2:Publisher>` (now we're getting somewhere!)\r\n* `response.response.content.decode('utf-8')` returns `<ns2:Publisher>B\u00e4renreiter</ns2:Publisher>`\r\n\r\nIt looks like requests is interpreting the encoding incorrectly which is validated by seeing that  `response.response.encoding` is set to `'ISO-8859-1'`.\r\n\r\nI'm pretty naive when it comes to encodings, so this may be a problem with my setup. However, since Amazon states that this XML will always be UTF-8, would it makes sense to do `data = response.content.decode('utf-8')` in [L209](https://github.com/jameshiew/python-amazon-mws/blob/e7fdc9463e9e42122707c48fc55e34097ed65e8a/mws/mws.py#L209) of mws.py?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/28", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/28/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/28/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/28", "id": 259999079, "node_id": "MDU6SXNzdWUyNTk5OTkwNzk=", "number": 28, "title": "How to handle special characters", "user": {"login": "Telcrome", "id": 4445277, "node_id": "MDQ6VXNlcjQ0NDUyNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4445277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Telcrome", "html_url": "https://github.com/Telcrome", "followers_url": "https://api.github.com/users/Telcrome/followers", "following_url": "https://api.github.com/users/Telcrome/following{/other_user}", "gists_url": "https://api.github.com/users/Telcrome/gists{/gist_id}", "starred_url": "https://api.github.com/users/Telcrome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Telcrome/subscriptions", "organizations_url": "https://api.github.com/users/Telcrome/orgs", "repos_url": "https://api.github.com/users/Telcrome/repos", "events_url": "https://api.github.com/users/Telcrome/events{/privacy}", "received_events_url": "https://api.github.com/users/Telcrome/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-23T10:36:41Z", "updated_at": "2017-09-28T13:46:00Z", "closed_at": "2017-09-28T13:46:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "![special](https://user-images.githubusercontent.com/4445277/30772451-af539dc0-a05b-11e7-9cfc-8a859e973591.png)\r\n\r\nHow can i get Sch\u00fclzke from the API instead of that?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/21", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/21/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/21/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/21", "id": 236686070, "node_id": "MDU6SXNzdWUyMzY2ODYwNzA=", "number": 21, "title": "Add report type enums", "user": {"login": "jameshiew", "id": 2990876, "node_id": "MDQ6VXNlcjI5OTA4NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2990876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jameshiew", "html_url": "https://github.com/jameshiew", "followers_url": "https://api.github.com/users/jameshiew/followers", "following_url": "https://api.github.com/users/jameshiew/following{/other_user}", "gists_url": "https://api.github.com/users/jameshiew/gists{/gist_id}", "starred_url": "https://api.github.com/users/jameshiew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jameshiew/subscriptions", "organizations_url": "https://api.github.com/users/jameshiew/orgs", "repos_url": "https://api.github.com/users/jameshiew/repos", "events_url": "https://api.github.com/users/jameshiew/events{/privacy}", "received_events_url": "https://api.github.com/users/jameshiew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974577, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzc=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-17T21:49:17Z", "updated_at": "2018-06-01T15:57:12Z", "closed_at": "2018-06-01T15:57:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://docs.developer.amazonservices.com/en_UK/reports/Reports_ReportType.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/20", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/20/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/20/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/20", "id": 236686057, "node_id": "MDU6SXNzdWUyMzY2ODYwNTc=", "number": 20, "title": "Add feed type enums", "user": {"login": "jameshiew", "id": 2990876, "node_id": "MDQ6VXNlcjI5OTA4NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2990876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jameshiew", "html_url": "https://github.com/jameshiew", "followers_url": "https://api.github.com/users/jameshiew/followers", "following_url": "https://api.github.com/users/jameshiew/following{/other_user}", "gists_url": "https://api.github.com/users/jameshiew/gists{/gist_id}", "starred_url": "https://api.github.com/users/jameshiew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jameshiew/subscriptions", "organizations_url": "https://api.github.com/users/jameshiew/orgs", "repos_url": "https://api.github.com/users/jameshiew/repos", "events_url": "https://api.github.com/users/jameshiew/events{/privacy}", "received_events_url": "https://api.github.com/users/jameshiew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974577, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzc=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-17T21:48:56Z", "updated_at": "2020-06-25T16:07:46Z", "closed_at": "2020-06-25T16:07:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://docs.developer.amazonservices.com/en_UK/feeds/Feeds_FeedType.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/19", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/19/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/19/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/19", "id": 236686014, "node_id": "MDU6SXNzdWUyMzY2ODYwMTQ=", "number": 19, "title": "Add marketplace ID enums", "user": {"login": "jameshiew", "id": 2990876, "node_id": "MDQ6VXNlcjI5OTA4NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2990876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jameshiew", "html_url": "https://github.com/jameshiew", "followers_url": "https://api.github.com/users/jameshiew/followers", "following_url": "https://api.github.com/users/jameshiew/following{/other_user}", "gists_url": "https://api.github.com/users/jameshiew/gists{/gist_id}", "starred_url": "https://api.github.com/users/jameshiew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jameshiew/subscriptions", "organizations_url": "https://api.github.com/users/jameshiew/orgs", "repos_url": "https://api.github.com/users/jameshiew/repos", "events_url": "https://api.github.com/users/jameshiew/events{/privacy}", "received_events_url": "https://api.github.com/users/jameshiew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974577, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzc=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-17T21:48:05Z", "updated_at": "2018-08-02T19:52:29Z", "closed_at": "2018-08-02T19:52:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "At the moment they appear in the comments, but it would be useful if they were exposed as enums", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/18", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/18/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/18/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/18", "id": 236685749, "node_id": "MDU6SXNzdWUyMzY2ODU3NDk=", "number": 18, "title": "Add Subscriptions API", "user": {"login": "jameshiew", "id": 2990876, "node_id": "MDQ6VXNlcjI5OTA4NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2990876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jameshiew", "html_url": "https://github.com/jameshiew", "followers_url": "https://api.github.com/users/jameshiew/followers", "following_url": "https://api.github.com/users/jameshiew/following{/other_user}", "gists_url": "https://api.github.com/users/jameshiew/gists{/gist_id}", "starred_url": "https://api.github.com/users/jameshiew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jameshiew/subscriptions", "organizations_url": "https://api.github.com/users/jameshiew/orgs", "repos_url": "https://api.github.com/users/jameshiew/repos", "events_url": "https://api.github.com/users/jameshiew/events{/privacy}", "received_events_url": "https://api.github.com/users/jameshiew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974577, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzc=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-17T21:41:53Z", "updated_at": "2018-05-11T16:23:06Z", "closed_at": "2018-05-11T16:23:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://docs.developer.amazonservices.com/en_UK/subscriptions/index.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/17", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/17/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/17/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/17", "id": 236685704, "node_id": "MDU6SXNzdWUyMzY2ODU3MDQ=", "number": 17, "title": "Add Finances API", "user": {"login": "jameshiew", "id": 2990876, "node_id": "MDQ6VXNlcjI5OTA4NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2990876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jameshiew", "html_url": "https://github.com/jameshiew", "followers_url": "https://api.github.com/users/jameshiew/followers", "following_url": "https://api.github.com/users/jameshiew/following{/other_user}", "gists_url": "https://api.github.com/users/jameshiew/gists{/gist_id}", "starred_url": "https://api.github.com/users/jameshiew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jameshiew/subscriptions", "organizations_url": "https://api.github.com/users/jameshiew/orgs", "repos_url": "https://api.github.com/users/jameshiew/repos", "events_url": "https://api.github.com/users/jameshiew/events{/privacy}", "received_events_url": "https://api.github.com/users/jameshiew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974577, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzc=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-17T21:40:53Z", "updated_at": "2018-02-06T16:53:59Z", "closed_at": "2018-02-06T16:53:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://docs.developer.amazonservices.com/en_UK/finances/index.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/16", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/16/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/16/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/16", "id": 236685491, "node_id": "MDU6SXNzdWUyMzY2ODU0OTE=", "number": 16, "title": "Finish OutboundShipments API", "user": {"login": "jameshiew", "id": 2990876, "node_id": "MDQ6VXNlcjI5OTA4NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2990876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jameshiew", "html_url": "https://github.com/jameshiew", "followers_url": "https://api.github.com/users/jameshiew/followers", "following_url": "https://api.github.com/users/jameshiew/following{/other_user}", "gists_url": "https://api.github.com/users/jameshiew/gists{/gist_id}", "starred_url": "https://api.github.com/users/jameshiew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jameshiew/subscriptions", "organizations_url": "https://api.github.com/users/jameshiew/orgs", "repos_url": "https://api.github.com/users/jameshiew/repos", "events_url": "https://api.github.com/users/jameshiew/events{/privacy}", "received_events_url": "https://api.github.com/users/jameshiew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974577, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzc=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-17T21:36:04Z", "updated_at": "2020-06-25T16:07:45Z", "closed_at": "2020-06-25T16:07:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://docs.developer.amazonservices.com/en_UK/fba_outbound/index.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/15", "repository_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws", "labels_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/15/comments", "events_url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/issues/15/events", "html_url": "https://github.com/python-amazon-mws/python-amazon-mws/issues/15", "id": 236685484, "node_id": "MDU6SXNzdWUyMzY2ODU0ODQ=", "number": 15, "title": "Finish InboundShipments API", "user": {"login": "jameshiew", "id": 2990876, "node_id": "MDQ6VXNlcjI5OTA4NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2990876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jameshiew", "html_url": "https://github.com/jameshiew", "followers_url": "https://api.github.com/users/jameshiew/followers", "following_url": "https://api.github.com/users/jameshiew/following{/other_user}", "gists_url": "https://api.github.com/users/jameshiew/gists{/gist_id}", "starred_url": "https://api.github.com/users/jameshiew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jameshiew/subscriptions", "organizations_url": "https://api.github.com/users/jameshiew/orgs", "repos_url": "https://api.github.com/users/jameshiew/repos", "events_url": "https://api.github.com/users/jameshiew/events{/privacy}", "received_events_url": "https://api.github.com/users/jameshiew/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 484974577, "node_id": "MDU6TGFiZWw0ODQ5NzQ1Nzc=", "url": "https://api.github.com/repos/python-amazon-mws/python-amazon-mws/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-17T21:35:57Z", "updated_at": "2020-06-25T16:07:45Z", "closed_at": "2020-06-25T16:07:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "http://docs.developer.amazonservices.com/en_UK/fba_inbound/index.html", "performed_via_github_app": null, "score": 1.0}]}