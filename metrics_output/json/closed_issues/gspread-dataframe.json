{"total_count": 16, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/25", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/25/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/25/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/25", "id": 627271270, "node_id": "MDU6SXNzdWU2MjcyNzEyNzA=", "number": 25, "title": "nrows option not working in get_as_dataframe", "user": {"login": "roburdo", "id": 34795556, "node_id": "MDQ6VXNlcjM0Nzk1NTU2", "avatar_url": "https://avatars0.githubusercontent.com/u/34795556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roburdo", "html_url": "https://github.com/roburdo", "followers_url": "https://api.github.com/users/roburdo/followers", "following_url": "https://api.github.com/users/roburdo/following{/other_user}", "gists_url": "https://api.github.com/users/roburdo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roburdo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roburdo/subscriptions", "organizations_url": "https://api.github.com/users/roburdo/orgs", "repos_url": "https://api.github.com/users/roburdo/repos", "events_url": "https://api.github.com/users/roburdo/events{/privacy}", "received_events_url": "https://api.github.com/users/roburdo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558143813, "node_id": "MDU6TGFiZWw1NTgxNDM4MTM=", "url": "https://api.github.com/repos/robin900/gspread-dataframe/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-05-29T13:31:48Z", "updated_at": "2020-06-02T02:18:02Z", "closed_at": "2020-06-02T02:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \r\nI want to get as dataframe 39 rows of a spreadsheet using nrows, but it is not working and it is importing more than 1,000 rows. I tried different sintaxes, but none of them are working.\r\nWould you be able to help me?\r\nThanks!\r\n\r\n# Generate Data Frames from Spreadsheets\r\naux = ws_contact.get_all_values()\r\ndf_contact=get_as_dataframe(ws_contact,nrows=39)\r\n\r\n![image](https://user-images.githubusercontent.com/34795556/83265245-36ccad00-a18f-11ea-8fc4-839775173983.png)\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/24", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/24/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/24/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/24", "id": 614276966, "node_id": "MDU6SXNzdWU2MTQyNzY5NjY=", "number": 24, "title": "Support for (value_render_option)", "user": {"login": "apar-tiwari", "id": 61064197, "node_id": "MDQ6VXNlcjYxMDY0MTk3", "avatar_url": "https://avatars0.githubusercontent.com/u/61064197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apar-tiwari", "html_url": "https://github.com/apar-tiwari", "followers_url": "https://api.github.com/users/apar-tiwari/followers", "following_url": "https://api.github.com/users/apar-tiwari/following{/other_user}", "gists_url": "https://api.github.com/users/apar-tiwari/gists{/gist_id}", "starred_url": "https://api.github.com/users/apar-tiwari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apar-tiwari/subscriptions", "organizations_url": "https://api.github.com/users/apar-tiwari/orgs", "repos_url": "https://api.github.com/users/apar-tiwari/repos", "events_url": "https://api.github.com/users/apar-tiwari/events{/privacy}", "received_events_url": "https://api.github.com/users/apar-tiwari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-07T19:03:07Z", "updated_at": "2020-05-07T21:24:02Z", "closed_at": "2020-05-07T21:24:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting formula on my pd df instead of the values \r\nValueError: could not convert string to float: '=iferror(BB3/W3,\"\")'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/23", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/23/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/23/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/23", "id": 602551282, "node_id": "MDU6SXNzdWU2MDI1NTEyODI=", "number": 23, "title": "Installation issue", "user": {"login": "jpmckinney", "id": 26463, "node_id": "MDQ6VXNlcjI2NDYz", "avatar_url": "https://avatars1.githubusercontent.com/u/26463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpmckinney", "html_url": "https://github.com/jpmckinney", "followers_url": "https://api.github.com/users/jpmckinney/followers", "following_url": "https://api.github.com/users/jpmckinney/following{/other_user}", "gists_url": "https://api.github.com/users/jpmckinney/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpmckinney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpmckinney/subscriptions", "organizations_url": "https://api.github.com/users/jpmckinney/orgs", "repos_url": "https://api.github.com/users/jpmckinney/repos", "events_url": "https://api.github.com/users/jpmckinney/events{/privacy}", "received_events_url": "https://api.github.com/users/jpmckinney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-18T21:03:43Z", "updated_at": "2020-04-19T22:01:11Z", "closed_at": "2020-04-19T22:01:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing the following error when trying to build documentation on ReadTheDocs for a package that depends on gspread-dataframe. I'm not sure what the issue is.\r\n\r\nI can reproduce by running `python setup.py install --force` on this package: https://github.com/open-contracting/kingfisher-colab/blob/master/setup.py\r\n\r\n```\r\nSearching for gspread-dataframe\r\nReading https://pypi.python.org/simple/gspread-dataframe/\r\nDownloading https://files.pythonhosted.org/packages/a5/60/274ba137f89b4cbbb3695a544a2ef48c64e7ab8072a0d3542f6cdb5d904d/gspread-dataframe-3.0.5.tar.gz#sha256=97170b36e2e92fa93102e6c73a19e2da1223eec6c11c08b48e3fdb56c3043790\r\nBest match: gspread-dataframe 3.0.5\r\nProcessing gspread-dataframe-3.0.5.tar.gz\r\nWriting /var/folders/cs/3pnj707s581bjnsfv0wndqkh0000gn/T/easy_install-03z8zowc/gspread-dataframe-3.0.5/setup.cfg\r\nRunning gspread-dataframe-3.0.5/setup.py -q bdist_egg --dist-dir /var/folders/cs/3pnj707s581bjnsfv0wndqkh0000gn/T/easy_install-03z8zowc/gspread-dataframe-3.0.5/egg-dist-tmp-8r41z5mh\r\nerror: [Errno 2] No such file or directory: '/var/folders/cs/3pnj707s581bjnsfv0wndqkh0000gn/T/easy_install-03z8zowc/gspread-dataframe-3.0.5/VERSION'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/20", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/20/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/20/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/20", "id": 592243696, "node_id": "MDU6SXNzdWU1OTIyNDM2OTY=", "number": 20, "title": "hierarchical indexes are uploaded as a single column", "user": {"login": "sam-s", "id": 1596894, "node_id": "MDQ6VXNlcjE1OTY4OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1596894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam-s", "html_url": "https://github.com/sam-s", "followers_url": "https://api.github.com/users/sam-s/followers", "following_url": "https://api.github.com/users/sam-s/following{/other_user}", "gists_url": "https://api.github.com/users/sam-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam-s/subscriptions", "organizations_url": "https://api.github.com/users/sam-s/orgs", "repos_url": "https://api.github.com/users/sam-s/repos", "events_url": "https://api.github.com/users/sam-s/events{/privacy}", "received_events_url": "https://api.github.com/users/sam-s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558143815, "node_id": "MDU6TGFiZWw1NTgxNDM4MTU=", "url": "https://api.github.com/repos/robin900/gspread-dataframe/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-04-01T22:34:59Z", "updated_at": "2020-04-02T23:19:04Z", "closed_at": "2020-04-02T20:04:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Hierarchical indexes](https://pandas.pydata.org/pandas-docs/stable/user_guide/advanced.html#advanced-hierarchical) are uploaded as tuples.\r\nE.g., `DataFrame`\r\n```\r\nfirst  second third\r\nbar    one      1\r\n       two      2\r\nbaz    one      3\r\n       two      4\r\n```\r\nis uploaded as *2* column sheet\r\n```\r\n                third\r\n(\"bar\",\"one\")    1\r\n(\"bar\",\"two\")    2\r\n(\"baz\",\"one\")    3\r\n(\"baz\",\"two\")    4\r\n```\r\ninstead of 3 columns\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/19", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/19/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/19/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/19", "id": 571648683, "node_id": "MDU6SXNzdWU1NzE2NDg2ODM=", "number": 19, "title": "RFE: enable \"prettyfing\" on upload", "user": {"login": "sam-s", "id": 1596894, "node_id": "MDQ6VXNlcjE1OTY4OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1596894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam-s", "html_url": "https://github.com/sam-s", "followers_url": "https://api.github.com/users/sam-s/followers", "following_url": "https://api.github.com/users/sam-s/following{/other_user}", "gists_url": "https://api.github.com/users/sam-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam-s/subscriptions", "organizations_url": "https://api.github.com/users/sam-s/orgs", "repos_url": "https://api.github.com/users/sam-s/repos", "events_url": "https://api.github.com/users/sam-s/events{/privacy}", "received_events_url": "https://api.github.com/users/sam-s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558143815, "node_id": "MDU6TGFiZWw1NTgxNDM4MTU=", "url": "https://api.github.com/repos/robin900/gspread-dataframe/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-26T20:45:22Z", "updated_at": "2020-03-31T17:02:58Z", "closed_at": "2020-03-31T17:02:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to be able to \r\n1. set column types (e.g., `%` or date, as well and the precision)\r\n1. set column width (as when I double click on column border, it becomes as wide/narrow as necessary/sufficient)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/17", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/17/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/17/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/17", "id": 562128906, "node_id": "MDU6SXNzdWU1NjIxMjg5MDY=", "number": 17, "title": "Deprecation warning due to invalid escape sequences in Python 3.8", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-09T06:09:24Z", "updated_at": "2020-02-09T18:39:24Z", "closed_at": "2020-02-09T17:32:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Deprecation warnings are raised due to invalid escape sequences in Python 3.8 . Below is a log of the warnings raised during compiling all the python files. Using raw strings or escaping them will fix this issue.\r\n\r\n```\r\nfind . -iname '*.py'  | xargs -P 4 -I{} python -Wall -m py_compile {}\r\n\r\n./gspread_dataframe.py:121: DeprecationWarning: invalid escape sequence \\*\r\n  \"\"\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/16", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/16/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/16/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/16", "id": 409345248, "node_id": "MDU6SXNzdWU0MDkzNDUyNDg=", "number": 16, "title": "gspread-dataframe doesn't handle '+' signs correctly", "user": {"login": "EricLSD", "id": 1113174, "node_id": "MDQ6VXNlcjExMTMxNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1113174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricLSD", "html_url": "https://github.com/EricLSD", "followers_url": "https://api.github.com/users/EricLSD/followers", "following_url": "https://api.github.com/users/EricLSD/following{/other_user}", "gists_url": "https://api.github.com/users/EricLSD/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricLSD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricLSD/subscriptions", "organizations_url": "https://api.github.com/users/EricLSD/orgs", "repos_url": "https://api.github.com/users/EricLSD/repos", "events_url": "https://api.github.com/users/EricLSD/events{/privacy}", "received_events_url": "https://api.github.com/users/EricLSD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-12T15:05:20Z", "updated_at": "2019-08-06T14:17:28Z", "closed_at": "2019-08-06T14:17:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an issue, not sure if it is on the get_as_dataframe() or set_as_dataframe(), with a worksheet where one column will hold ('? | '+ | '-).   I suspect it is in the get_as_dataframe().\r\n\r\nThe gspread-dataframe library has no issue with the question mark however with the plus (+) and minus (-) I have taken steps to ensure that these characters are written as strings, prefixing them with an apostrophe.  When gspread-dataframe does a get_as_dataframe() or a set_as_dataframe() these string characters become non-string characters, instead becoming math operations that result in #ERROR in the worksheet cells.\r\n\r\nMy program first performs a get_as_dataframe() then appends to that dataframe and then does a set_as_dataframe().  I suspect the issue is actually in the get_as_dataframe() because the newly appended dataframe items are written out to the worksheet correctly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/15", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/15/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/15/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/15", "id": 364818739, "node_id": "MDU6SXNzdWUzNjQ4MTg3Mzk=", "number": 15, "title": "TRUE/FALSE values become 1.0/0.0 when using get_as_dataframe()", "user": {"login": "chozelinek", "id": 2077497, "node_id": "MDQ6VXNlcjIwNzc0OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2077497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chozelinek", "html_url": "https://github.com/chozelinek", "followers_url": "https://api.github.com/users/chozelinek/followers", "following_url": "https://api.github.com/users/chozelinek/following{/other_user}", "gists_url": "https://api.github.com/users/chozelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/chozelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chozelinek/subscriptions", "organizations_url": "https://api.github.com/users/chozelinek/orgs", "repos_url": "https://api.github.com/users/chozelinek/repos", "events_url": "https://api.github.com/users/chozelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/chozelinek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 558143818, "node_id": "MDU6TGFiZWw1NTgxNDM4MTg=", "url": "https://api.github.com/repos/robin900/gspread-dataframe/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-28T09:50:21Z", "updated_at": "2019-08-06T13:32:01Z", "closed_at": "2019-08-06T13:31:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI'm trying to get the content of a GSheet as dataframe.\r\n\r\nThe GSheet contains something like:\r\n\r\nv1 | v2 | v3\r\n-- | -- | --\r\nA | TRUE | FALSE\r\nB | TRUE | FALSE\r\nC | FALSE | TRUE\r\nD | TRUE | TRUE\r\n\r\nThen I get the worksheet loaded as in the tutorial:\r\n\r\n```python\r\ngsheet = gc.open_by_url(url)\r\n\r\nworksheet = gsheet.worksheet(\"Sheet1\")\r\n\r\ndf = get_as_dataframe(worksheet, parse_dates=True, header=0)\r\n```\r\n\r\nBut the output shows no boolean (that's what I'd expect) but floats of 0.0 or 1.0.\r\n\r\nv1 |\tv2 | v3\r\n---|---|---\r\nA | 1.0 | 0.0\r\nB | 1.0 | 0.0\r\nC | 0.0 | 1.0\r\nD | 1.0 | 1.0\r\n\r\nShould I use pass some parameter to the function? Is there a solution to overcome this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/13", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/13/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/13/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/13", "id": 343546636, "node_id": "MDU6SXNzdWUzNDM1NDY2MzY=", "number": 13, "title": "Not all columns are copied to the google sheet", "user": {"login": "Laila92", "id": 32102074, "node_id": "MDQ6VXNlcjMyMTAyMDc0", "avatar_url": "https://avatars2.githubusercontent.com/u/32102074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Laila92", "html_url": "https://github.com/Laila92", "followers_url": "https://api.github.com/users/Laila92/followers", "following_url": "https://api.github.com/users/Laila92/following{/other_user}", "gists_url": "https://api.github.com/users/Laila92/gists{/gist_id}", "starred_url": "https://api.github.com/users/Laila92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Laila92/subscriptions", "organizations_url": "https://api.github.com/users/Laila92/orgs", "repos_url": "https://api.github.com/users/Laila92/repos", "events_url": "https://api.github.com/users/Laila92/events{/privacy}", "received_events_url": "https://api.github.com/users/Laila92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-23T09:03:01Z", "updated_at": "2018-07-25T07:01:01Z", "closed_at": "2018-07-24T17:21:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to write my pandas dataframe to a google sheet using the gspread_data package. Adding include_index=True should add an extra column to the sheet with the index from the dataframe, but it does not add it for me. My code:\r\n\r\n```\r\nfrom gspread_dataframe import get_as_dataframe, set_with_dataframe\r\ndf=pd.read_csv(r'C:\\Users\\Laila\\Desktop\\rawData18Sheet.csv',thousands=',', \r\nindex_col='Client',parse_dates=True,encoding = \"ISO-8859-1\",usecols=columns)\r\n\r\ntest_sheet = client.open(\"2018 Raw Data\").worksheet(\"test_sheet\")\r\n\r\nset_with_dataframe(test_sheet, df,resize=True, \r\ninclude_index=True)\r\n```\r\nI did set the index when I read the dataframe from a csv, and pulling the index with df.index.values gives me the values I want in the index of the google sheet.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/11", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/11/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/11/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/11", "id": 315885318, "node_id": "MDU6SXNzdWUzMTU4ODUzMTg=", "number": 11, "title": "Support gspread 3.0.0 and higher", "user": {"login": "robin900", "id": 325578, "node_id": "MDQ6VXNlcjMyNTU3OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/325578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robin900", "html_url": "https://github.com/robin900", "followers_url": "https://api.github.com/users/robin900/followers", "following_url": "https://api.github.com/users/robin900/following{/other_user}", "gists_url": "https://api.github.com/users/robin900/gists{/gist_id}", "starred_url": "https://api.github.com/users/robin900/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robin900/subscriptions", "organizations_url": "https://api.github.com/users/robin900/orgs", "repos_url": "https://api.github.com/users/robin900/repos", "events_url": "https://api.github.com/users/robin900/events{/privacy}", "received_events_url": "https://api.github.com/users/robin900/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-19T13:46:35Z", "updated_at": "2018-04-19T16:19:56Z", "closed_at": "2018-04-19T16:19:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "gspread just released 3.0.0, which has a very different internal structure and API, and most thrillingly -- uses the v4 Sheets API, which offers cell-styling powers previously prohibitied to gspread users.\r\n\r\nMy general plan is to make a breaking change to gspread-dataframe to support only gspread 3.0.0 and later, and release it as a major version increase. Bugfix releases to 2.1, if ever necessary, i'll make from a 2.1 maintenance branch.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/10", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/10/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/10/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/10", "id": 315577222, "node_id": "MDU6SXNzdWUzMTU1NzcyMjI=", "number": 10, "title": "No module named 'gspread.ns'", "user": {"login": "LouisGerondeau", "id": 33055880, "node_id": "MDQ6VXNlcjMzMDU1ODgw", "avatar_url": "https://avatars0.githubusercontent.com/u/33055880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LouisGerondeau", "html_url": "https://github.com/LouisGerondeau", "followers_url": "https://api.github.com/users/LouisGerondeau/followers", "following_url": "https://api.github.com/users/LouisGerondeau/following{/other_user}", "gists_url": "https://api.github.com/users/LouisGerondeau/gists{/gist_id}", "starred_url": "https://api.github.com/users/LouisGerondeau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LouisGerondeau/subscriptions", "organizations_url": "https://api.github.com/users/LouisGerondeau/orgs", "repos_url": "https://api.github.com/users/LouisGerondeau/repos", "events_url": "https://api.github.com/users/LouisGerondeau/events{/privacy}", "received_events_url": "https://api.github.com/users/LouisGerondeau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-18T17:42:00Z", "updated_at": "2018-04-19T16:25:58Z", "closed_at": "2018-04-19T16:25:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm geting this error message on :  \r\nfrom gspread_dataframe import get_as_dataframe, set_with_dataframe\r\n\r\nI'm using the latest gspread release (3.0.0) which doesn't seem to contain the ns module", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/9", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/9/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/9/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/9", "id": 315146367, "node_id": "MDU6SXNzdWUzMTUxNDYzNjc=", "number": 9, "title": "...object has no attribute...", "user": {"login": "mmergola", "id": 37993783, "node_id": "MDQ6VXNlcjM3OTkzNzgz", "avatar_url": "https://avatars2.githubusercontent.com/u/37993783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmergola", "html_url": "https://github.com/mmergola", "followers_url": "https://api.github.com/users/mmergola/followers", "following_url": "https://api.github.com/users/mmergola/following{/other_user}", "gists_url": "https://api.github.com/users/mmergola/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmergola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmergola/subscriptions", "organizations_url": "https://api.github.com/users/mmergola/orgs", "repos_url": "https://api.github.com/users/mmergola/repos", "events_url": "https://api.github.com/users/mmergola/events{/privacy}", "received_events_url": "https://api.github.com/users/mmergola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-17T16:51:38Z", "updated_at": "2018-04-19T16:26:13Z", "closed_at": "2018-04-19T16:26:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I might be in the wrong spot for this, but I keep getting the following error:\r\n\r\nAttributeError: 'Client' object has no attribute 'get_cells_feed'\r\n\r\nThis happens whenever I try to write to my Google Spreadsheet using any DataFrame.\r\n\r\nSometimes it happens in the resize_to_minimum function, and other times it happens in the _get_all_values function, but I believe it errors as soon as it tries to read the client.worksheet.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/6", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/6/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/6/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/6", "id": 245572138, "node_id": "MDU6SXNzdWUyNDU1NzIxMzg=", "number": 6, "title": "Dataframe columns with lists in them do not work", "user": {"login": "schwallie", "id": 4173578, "node_id": "MDQ6VXNlcjQxNzM1Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4173578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schwallie", "html_url": "https://github.com/schwallie", "followers_url": "https://api.github.com/users/schwallie/followers", "following_url": "https://api.github.com/users/schwallie/following{/other_user}", "gists_url": "https://api.github.com/users/schwallie/gists{/gist_id}", "starred_url": "https://api.github.com/users/schwallie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schwallie/subscriptions", "organizations_url": "https://api.github.com/users/schwallie/orgs", "repos_url": "https://api.github.com/users/schwallie/repos", "events_url": "https://api.github.com/users/schwallie/events{/privacy}", "received_events_url": "https://api.github.com/users/schwallie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-07-26T00:26:08Z", "updated_at": "2017-07-28T13:27:13Z", "closed_at": "2017-07-26T22:06:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Got an error on what I think is a column with a list in it:\r\n\r\n```Traceback (most recent call last):\r\n  File \"get_paypal.py\", line 789, in main\r\n    donor, wkb='OTAT Donor Database', wks='DonorLevel')\r\n  File \"/Users/---/Desktop/repos/otat/config.py\", line 246, in upload_to_google\r\n    set_with_dataframe(worksheet, df, include_index=True)\r\n  File \"/usr/local/lib/python2.7/site-packages/gspread_dataframe.py\", line 185, in set_with_dataframe\r\n    _cellrepr(cell_value, allow_formulas))\r\n  File \"/usr/local/lib/python2.7/site-packages/gspread_dataframe.py\", line 51, in _cellrepr\r\n    if pd.isnull(value):\r\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/4", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/4/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/4/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/4", "id": 218179250, "node_id": "MDU6SXNzdWUyMTgxNzkyNTA=", "number": 4, "title": "Bug: Minimum number of cols not respected", "user": {"login": "thorbjornwolf", "id": 3935060, "node_id": "MDQ6VXNlcjM5MzUwNjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3935060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thorbjornwolf", "html_url": "https://github.com/thorbjornwolf", "followers_url": "https://api.github.com/users/thorbjornwolf/followers", "following_url": "https://api.github.com/users/thorbjornwolf/following{/other_user}", "gists_url": "https://api.github.com/users/thorbjornwolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/thorbjornwolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thorbjornwolf/subscriptions", "organizations_url": "https://api.github.com/users/thorbjornwolf/orgs", "repos_url": "https://api.github.com/users/thorbjornwolf/repos", "events_url": "https://api.github.com/users/thorbjornwolf/events{/privacy}", "received_events_url": "https://api.github.com/users/thorbjornwolf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-30T12:23:53Z", "updated_at": "2017-03-31T03:16:20Z", "closed_at": "2017-03-31T03:16:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The problem is [in line 74](https://github.com/robin900/gspread-dataframe/blob/master/gspread_dataframe.py#L74): It should say `and` instead of `or`, so that *if* `cols` is not None, we check whether it is less than `current_cols`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/2", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/2/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/2/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/2", "id": 217573360, "node_id": "MDU6SXNzdWUyMTc1NzMzNjA=", "number": 2, "title": "Have get_as_dataframe use pandas TextParser", "user": {"login": "robin900", "id": 325578, "node_id": "MDQ6VXNlcjMyNTU3OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/325578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robin900", "html_url": "https://github.com/robin900", "followers_url": "https://api.github.com/users/robin900/followers", "following_url": "https://api.github.com/users/robin900/following{/other_user}", "gists_url": "https://api.github.com/users/robin900/gists{/gist_id}", "starred_url": "https://api.github.com/users/robin900/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robin900/subscriptions", "organizations_url": "https://api.github.com/users/robin900/orgs", "repos_url": "https://api.github.com/users/robin900/repos", "events_url": "https://api.github.com/users/robin900/events{/privacy}", "received_events_url": "https://api.github.com/users/robin900/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-28T14:11:33Z", "updated_at": "2018-07-24T17:42:11Z", "closed_at": "2017-03-29T13:14:24Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The discussion in #1 resulted in a plan to have `get_as_dataframe` use the available `TextParser` in `pandas.io.parsers`, and thus use all the available parsing options offered by `TextParser`, instead of designing our own set of parsing options.\r\n\r\nTo switch to using `TextParser`:\r\n- [x] Support `evaluate_formulas` properly.\r\n- [x] Add unit tests (that depend on pandas) to test the various parsing options.\r\n- [x] Cut a major release (2.0) with an adequate CHANGELOG.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/1", "repository_url": "https://api.github.com/repos/robin900/gspread-dataframe", "labels_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/1/comments", "events_url": "https://api.github.com/repos/robin900/gspread-dataframe/issues/1/events", "html_url": "https://github.com/robin900/gspread-dataframe/issues/1", "id": 216084127, "node_id": "MDU6SXNzdWUyMTYwODQxMjc=", "number": 1, "title": "Inferring dtypes in get_as_dataframe", "user": {"login": "thorbjornwolf", "id": 3935060, "node_id": "MDQ6VXNlcjM5MzUwNjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3935060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thorbjornwolf", "html_url": "https://github.com/thorbjornwolf", "followers_url": "https://api.github.com/users/thorbjornwolf/followers", "following_url": "https://api.github.com/users/thorbjornwolf/following{/other_user}", "gists_url": "https://api.github.com/users/thorbjornwolf/gists{/gist_id}", "starred_url": "https://api.github.com/users/thorbjornwolf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thorbjornwolf/subscriptions", "organizations_url": "https://api.github.com/users/thorbjornwolf/orgs", "repos_url": "https://api.github.com/users/thorbjornwolf/repos", "events_url": "https://api.github.com/users/thorbjornwolf/events{/privacy}", "received_events_url": "https://api.github.com/users/thorbjornwolf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-22T14:32:46Z", "updated_at": "2017-03-28T14:12:35Z", "closed_at": "2017-03-28T14:12:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is an enhancement proposal.\r\n\r\nFor my use case, it could be nice if gspread-dataframe was able to try to infer column dtypes when fetching data from a sheet. While individual cells are converted through `numericise`, their column dtype remains `object`, and the returned dataframe fails equality checks with the original dataframe.\r\n\r\n## Motivating example\r\n\r\n```python\r\n>>> df = pd.DataFrame({'a': [4,1,2,4],\r\n...                    'b': list('abba')},\r\n...                    index=pd.Index(list('ABCD'), name='our index'))\r\n>>> df\r\n           a  b\r\nour index      \r\nA          4  a\r\nB          1  b\r\nC          2  b\r\nD          4  a\r\n>>> df.dtypes\r\na     int64\r\nb    object\r\ndtype: object\r\n>>> ws =  # Get a test worksheet here\r\n>>> set_with_dataframe(ws, df, include_index=True, resize=True)\r\n>>> r = get_as_dataframe(ws, index_column_number=1)\r\n>>> r  # Looks as expected\r\n           a  b\r\nour index      \r\nA          4  a\r\nB          1  b\r\nC          2  b\r\nD          4  a\r\n>>> r.dtypes  # All object dtype\r\na    object\r\nb    object\r\ndtype: object\r\n>>> [type(v) for v in r['a']]  # correctly converted to int\r\n[int, int, int, int]\r\n>>> df.equals(r)  # The equality check fails\r\nFalse\r\n>>> df['a'].equals(r['a'])  # because of the dtype of column 'a'.\r\nFalse\r\n>>> df['a'] == r['a']  # The values *are* the same, though.\r\nour index\r\nA    True\r\nB    True\r\nC    True\r\nD    True\r\nName: a, dtype: bool\r\n>>> df['b'].equals(r['b'])  # str works as expected\r\nTrue\r\n```\r\n\r\n## Suggested solution\r\nI am unsure what is the best way to deal with this, and whether it is a general enough use-case to warrant an addition to `gspread-dataframe`. At any rate, the following code is my initial stab at how dtype inference could be implemented:\r\n\r\n```python\r\nimport pandas as pd\r\n\r\nconverters = (\r\n    pd.to_numeric,\r\n    pd.to_timedelta,\r\n    pd.to_datetime,\r\n)\r\n\r\n\r\ndef _assign_column_dtypes(df):\r\n    for conv in converters:\r\n        for col in df:\r\n            if df[col].dtype != object:\r\n                continue\r\n            df[col] = conv(df[col], errors='ignore')\r\n\r\n    return df\r\n```\r\n\r\nIt intentionally places timedelta before datetime, as '00:03:00' can be interpreted as either one by pandas. In my use-case, datetimes always include a date, so '00:03:00' would definitely be a timedelta.\r\n\r\n## Take it for a spin!\r\n\r\n```python\r\n# Construct a dataframe where everything is either str or object\r\nn = 10\r\ndf = pd.DataFrame({\r\n    'datetime str': pd.date_range('2017-03-15', freq='D', periods=n\r\n                                  ).astype(str),\r\n    'timedelta str': pd.timedelta_range('00:03:00', periods=n, freq='10 s'\r\n                                        ).to_native_types().astype(str),\r\n    'int obj': pd.Series(range(n), dtype=object),\r\n    'int str': [str(i) for i in range(n)],\r\n    'float obj': pd.Series(map(float, range(n)), dtype=object),\r\n    'float str': [str(float(i)) for i in range(n)],\r\n})\r\n\r\nprint(df)\r\n#   datetime str float obj float str int obj int str timedelta str\r\n# 0   2017-03-15         0       0.0       0       0      00:03:00\r\n# 1   2017-03-16         1       1.0       1       1      00:03:10\r\n# 2   2017-03-17         2       2.0       2       2      00:03:20\r\n# 3   2017-03-18         3       3.0       3       3      00:03:30\r\n# 4   2017-03-19         4       4.0       4       4      00:03:40\r\n# 5   2017-03-20         5       5.0       5       5      00:03:50\r\n# 6   2017-03-21         6       6.0       6       6      00:04:00\r\n# 7   2017-03-22         7       7.0       7       7      00:04:10\r\n# 8   2017-03-23         8       8.0       8       8      00:04:20\r\n# 9   2017-03-24         9       9.0       9       9      00:04:30\r\n\r\nprint(df.dtypes)\r\n# datetime str     object\r\n# float obj        object\r\n# float str        object\r\n# int obj          object\r\n# int str          object\r\n# timedelta str    object\r\n# dtype: object\r\n\r\n\r\ndf = _assign_column_dtypes(df)\r\n\r\nprint(df)\r\n#   datetime str  float obj  float str  int obj  int str  timedelta str\r\n# 0   2017-03-15        0.0        0.0        0        0       00:03:00\r\n# 1   2017-03-16        1.0        1.0        1        1       00:03:10\r\n# 2   2017-03-17        2.0        2.0        2        2       00:03:20\r\n# 3   2017-03-18        3.0        3.0        3        3       00:03:30\r\n# 4   2017-03-19        4.0        4.0        4        4       00:03:40\r\n# 5   2017-03-20        5.0        5.0        5        5       00:03:50\r\n# 6   2017-03-21        6.0        6.0        6        6       00:04:00\r\n# 7   2017-03-22        7.0        7.0        7        7       00:04:10\r\n# 8   2017-03-23        8.0        8.0        8        8       00:04:20\r\n# 9   2017-03-24        9.0        9.0        9        9       00:04:30\r\n\r\nprint(df.dtypes)\r\n# datetime str      datetime64[ns]\r\n# float obj                float64\r\n# float str                float64\r\n# int obj                    int64\r\n# int str                    int64\r\n# timedelta str    timedelta64[ns]\r\n# dtype: object\r\n```", "performed_via_github_app": null, "score": 1.0}]}