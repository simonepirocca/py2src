{"total_count": 63, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/167", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/167/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/167/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/167", "id": 664459552, "node_id": "MDU6SXNzdWU2NjQ0NTk1NTI=", "number": 167, "title": "3.0.1 seems to brake drag&drop ordering", "user": {"login": "tschale", "id": 5681839, "node_id": "MDQ6VXNlcjU2ODE4Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5681839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschale", "html_url": "https://github.com/tschale", "followers_url": "https://api.github.com/users/tschale/followers", "following_url": "https://api.github.com/users/tschale/following{/other_user}", "gists_url": "https://api.github.com/users/tschale/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschale/subscriptions", "organizations_url": "https://api.github.com/users/tschale/orgs", "repos_url": "https://api.github.com/users/tschale/repos", "events_url": "https://api.github.com/users/tschale/events{/privacy}", "received_events_url": "https://api.github.com/users/tschale/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-23T13:08:27Z", "updated_at": "2020-07-23T17:45:40Z", "closed_at": "2020-07-23T16:52:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "The items won't drag&drop, but stay in place and get selected. Works on 3.0.0, on 3.0.1 I get following error in Chrome:\r\n![image](https://user-images.githubusercontent.com/5681839/88289899-3c112880-ccf6-11ea-9fad-6bd0a730e9e6.png)\r\n\r\nDjango 2.2.14\r\npython 3.7.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/163", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/163/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/163/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/163", "id": 663900474, "node_id": "MDU6SXNzdWU2NjM5MDA0NzQ=", "number": 163, "title": "German translation missing in pypi package", "user": {"login": "tschale", "id": 5681839, "node_id": "MDQ6VXNlcjU2ODE4Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5681839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschale", "html_url": "https://github.com/tschale", "followers_url": "https://api.github.com/users/tschale/followers", "following_url": "https://api.github.com/users/tschale/following{/other_user}", "gists_url": "https://api.github.com/users/tschale/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschale/subscriptions", "organizations_url": "https://api.github.com/users/tschale/orgs", "repos_url": "https://api.github.com/users/tschale/repos", "events_url": "https://api.github.com/users/tschale/events{/privacy}", "received_events_url": "https://api.github.com/users/tschale/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-22T16:40:47Z", "updated_at": "2020-07-23T07:25:14Z", "closed_at": "2020-07-23T02:34:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like the `de`-translations folder is missing in the pypi package. The downloaded wheel only contains `cs` and `fr` translations:\r\n![image](https://user-images.githubusercontent.com/5681839/88203876-c308c700-cc4a-11ea-9025-3bc3e89dba23.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/161", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/161/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/161/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/161", "id": 598843995, "node_id": "MDU6SXNzdWU1OTg4NDM5OTU=", "number": 161, "title": "Migration from ManyToManyField to SortedManyToManyField", "user": {"login": "ixlan", "id": 6791828, "node_id": "MDQ6VXNlcjY3OTE4Mjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6791828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ixlan", "html_url": "https://github.com/ixlan", "followers_url": "https://api.github.com/users/ixlan/followers", "following_url": "https://api.github.com/users/ixlan/following{/other_user}", "gists_url": "https://api.github.com/users/ixlan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ixlan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ixlan/subscriptions", "organizations_url": "https://api.github.com/users/ixlan/orgs", "repos_url": "https://api.github.com/users/ixlan/repos", "events_url": "https://api.github.com/users/ixlan/events{/privacy}", "received_events_url": "https://api.github.com/users/ixlan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-13T11:45:03Z", "updated_at": "2020-04-13T11:56:53Z", "closed_at": "2020-04-13T11:56:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to migrate from ManyToManyField to SortedManyToManyField, howerver, when I alter a migration file by modifying operation's list item to AlterSortedManyToManyField, and run the migration, I get the following error. I do not have a through table, just a plain ManyToManyField.\r\n\r\nDjango 2.2.3\r\n\r\n```\r\n  File \"...lib/python3.7/site-packages/sortedm2m/operations.py\", line 21, in database_forwards\r\n    to_m2m_model = get_rel(to_field).through\r\nAttributeError: 'NoneType' object has no attribute 'through'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/144", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/144/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/144/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/144", "id": 478104553, "node_id": "MDU6SXNzdWU0NzgxMDQ1NTM=", "number": 144, "title": "The VM for testing Postgres is obsolete", "user": {"login": "richardbarran", "id": 94111, "node_id": "MDQ6VXNlcjk0MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/94111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardbarran", "html_url": "https://github.com/richardbarran", "followers_url": "https://api.github.com/users/richardbarran/followers", "following_url": "https://api.github.com/users/richardbarran/following{/other_user}", "gists_url": "https://api.github.com/users/richardbarran/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardbarran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardbarran/subscriptions", "organizations_url": "https://api.github.com/users/richardbarran/orgs", "repos_url": "https://api.github.com/users/richardbarran/repos", "events_url": "https://api.github.com/users/richardbarran/events{/privacy}", "received_events_url": "https://api.github.com/users/richardbarran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-07T19:38:31Z", "updated_at": "2019-08-27T20:04:29Z", "closed_at": "2019-08-27T20:04:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Installs Ubuntu 14.04 with Python 2.7 (which is about to be EOLifed). Fails to run on my machine as it installs the latest Django (which is not compatible with Python 2.7).\r\n\r\nTODO: update VM image. Test, identify if anything else is missing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/143", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/143/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/143/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/143", "id": 477934597, "node_id": "MDU6SXNzdWU0Nzc5MzQ1OTc=", "number": 143, "title": "Planning for the next release", "user": {"login": "richardbarran", "id": 94111, "node_id": "MDQ6VXNlcjk0MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/94111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardbarran", "html_url": "https://github.com/richardbarran", "followers_url": "https://api.github.com/users/richardbarran/followers", "following_url": "https://api.github.com/users/richardbarran/following{/other_user}", "gists_url": "https://api.github.com/users/richardbarran/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardbarran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardbarran/subscriptions", "organizations_url": "https://api.github.com/users/richardbarran/orgs", "repos_url": "https://api.github.com/users/richardbarran/repos", "events_url": "https://api.github.com/users/richardbarran/events{/privacy}", "received_events_url": "https://api.github.com/users/richardbarran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2019-08-07T13:37:44Z", "updated_at": "2019-08-27T16:39:45Z", "closed_at": "2019-08-27T16:33:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nThere's been a flurry of activity on this project in the last few months, but it seems to have calmed down. May I suggest that this ticket can be used to log what needs to happen in order to release a new version of this package?\r\nAs I see it:\r\n\r\n- Django 2.2 compatibility: PR #134 and also the PRs based on it #141 and #142. I think that #142 is the most up to date PR and should be used as a base to move forward. Comments?\r\n- Add pylint PR #140.\r\n- Release!\r\n\r\nIs my assesment correct? @clintonb  @joehybird @DragoonAethis?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/137", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/137/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/137/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/137", "id": 461356154, "node_id": "MDU6SXNzdWU0NjEzNTYxNTQ=", "number": 137, "title": "Add code coverage tooling", "user": {"login": "clintonb", "id": 910510, "node_id": "MDQ6VXNlcjkxMDUxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/910510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintonb", "html_url": "https://github.com/clintonb", "followers_url": "https://api.github.com/users/clintonb/followers", "following_url": "https://api.github.com/users/clintonb/following{/other_user}", "gists_url": "https://api.github.com/users/clintonb/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintonb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintonb/subscriptions", "organizations_url": "https://api.github.com/users/clintonb/orgs", "repos_url": "https://api.github.com/users/clintonb/repos", "events_url": "https://api.github.com/users/clintonb/events{/privacy}", "received_events_url": "https://api.github.com/users/clintonb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-27T07:10:00Z", "updated_at": "2019-06-29T21:28:43Z", "closed_at": "2019-06-29T21:28:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add a tool like Codecov or Coveralls to report test coverage.\r\n\r\nRelated: https://github.com/jazzband/roadies/issues/152", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/133", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/133/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/133/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/133", "id": 444877824, "node_id": "MDU6SXNzdWU0NDQ4Nzc4MjQ=", "number": 133, "title": "Uncaught TypeError when field is empty", "user": {"login": "alstr", "id": 11612438, "node_id": "MDQ6VXNlcjExNjEyNDM4", "avatar_url": "https://avatars2.githubusercontent.com/u/11612438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alstr", "html_url": "https://github.com/alstr", "followers_url": "https://api.github.com/users/alstr/followers", "following_url": "https://api.github.com/users/alstr/following{/other_user}", "gists_url": "https://api.github.com/users/alstr/gists{/gist_id}", "starred_url": "https://api.github.com/users/alstr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alstr/subscriptions", "organizations_url": "https://api.github.com/users/alstr/orgs", "repos_url": "https://api.github.com/users/alstr/repos", "events_url": "https://api.github.com/users/alstr/events{/privacy}", "received_events_url": "https://api.github.com/users/alstr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-16T10:30:12Z", "updated_at": "2019-05-23T15:12:44Z", "closed_at": "2019-05-23T15:12:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a gallery model with a SortedManyToManyField consisting of photos, pretty standard.\r\n\r\nWhen I go to create a new gallery in Django admin, and the SortedManyToManyField has no photos to display, the following error appears in the web console:\r\n\r\n`Uncaught TypeError: Cannot read property 'match' of undefined`\r\n\r\nSpecifically it is referring to this line in the static widget.js file:\r\n\r\n`id = label.attr('for').match(/^(.*)_\\d+$/)[1];`\r\n\r\nThis error means that when adding a new item to the SortedManyToManyField via the popup window, the window never closes after saving and the widget is not populated with the new item.\r\n\r\nA browser refresh is required to populate the widget. The error no longer occurs once there is at least one photo created.\r\n\r\nThe issues as I have identified it are:\r\n\r\n- When I first load the change form, the label has no `for` attribute and there is no input to go with it, so the match function will always fail.\r\n- Even when I manually specify the label `for`, the regex fails.\r\n\r\nIf I change the code and ensure it doesn't fall over getting the ID, everything works as intended.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/130", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/130/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/130/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/130", "id": 432958426, "node_id": "MDU6SXNzdWU0MzI5NTg0MjY=", "number": 130, "title": "support Django 2.2", "user": {"login": "kennir", "id": 876410, "node_id": "MDQ6VXNlcjg3NjQxMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/876410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennir", "html_url": "https://github.com/kennir", "followers_url": "https://api.github.com/users/kennir/followers", "following_url": "https://api.github.com/users/kennir/following{/other_user}", "gists_url": "https://api.github.com/users/kennir/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennir/subscriptions", "organizations_url": "https://api.github.com/users/kennir/orgs", "repos_url": "https://api.github.com/users/kennir/repos", "events_url": "https://api.github.com/users/kennir/events{/privacy}", "received_events_url": "https://api.github.com/users/kennir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-04-14T10:47:40Z", "updated_at": "2019-07-29T03:07:10Z", "closed_at": "2019-07-29T01:49:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Modify sortedm2m field will raise a exception after upgrade to Django 2.2\r\n\r\nTypeError: _add_items() got an unexpected keyword argument 'through_defaults'\r\n\r\nHow can I fix it", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/112", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/112/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/112/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/112", "id": 232021482, "node_id": "MDU6SXNzdWUyMzIwMjE0ODI=", "number": 112, "title": "What is the status of this project?", "user": {"login": "clintonb", "id": 910510, "node_id": "MDQ6VXNlcjkxMDUxMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/910510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clintonb", "html_url": "https://github.com/clintonb", "followers_url": "https://api.github.com/users/clintonb/followers", "following_url": "https://api.github.com/users/clintonb/following{/other_user}", "gists_url": "https://api.github.com/users/clintonb/gists{/gist_id}", "starred_url": "https://api.github.com/users/clintonb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clintonb/subscriptions", "organizations_url": "https://api.github.com/users/clintonb/orgs", "repos_url": "https://api.github.com/users/clintonb/repos", "events_url": "https://api.github.com/users/clintonb/events{/privacy}", "received_events_url": "https://api.github.com/users/clintonb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2017-05-29T13:20:17Z", "updated_at": "2019-06-27T05:25:59Z", "closed_at": "2019-06-27T05:25:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The lack of development on this project in the past four months has lead to my, and others, wondering the state of this project. Is this project still maintained? If so, can we expand the group of maintainers authorized to merge and release code?\r\n\r\nIf this package is not maintained, can the following steps be taken?\r\n\r\n1. Now: Update the README to reflect the state of the project, and request new maintainers.\r\n\r\n2. Later: Transfer ownership of the project (including the PyPI package) to new maintainers.\r\n\r\n3. Later: Update the README of this repo to point to the location of the new repo.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/107", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/107/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/107/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/107", "id": 224230112, "node_id": "MDU6SXNzdWUyMjQyMzAxMTI=", "number": 107, "title": "In Admin: build_attrs() got an unexpected keyword argument", "user": {"login": "astarrh", "id": 12860245, "node_id": "MDQ6VXNlcjEyODYwMjQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/12860245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astarrh", "html_url": "https://github.com/astarrh", "followers_url": "https://api.github.com/users/astarrh/followers", "following_url": "https://api.github.com/users/astarrh/following{/other_user}", "gists_url": "https://api.github.com/users/astarrh/gists{/gist_id}", "starred_url": "https://api.github.com/users/astarrh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astarrh/subscriptions", "organizations_url": "https://api.github.com/users/astarrh/orgs", "repos_url": "https://api.github.com/users/astarrh/repos", "events_url": "https://api.github.com/users/astarrh/events{/privacy}", "received_events_url": "https://api.github.com/users/astarrh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-25T18:24:15Z", "updated_at": "2017-08-01T19:14:06Z", "closed_at": "2017-08-01T19:14:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.6.1 - Django 1.11 - Windows 10 - Package version: 1.3.3\r\n\r\nI'm not really sure what's going on, but whenever I try to open an object in my admin panel, I get the following error:\r\n\r\n`TypeError at /admin/Events/event/17/change/\r\nbuild_attrs() got an unexpected keyword argument 'name'`\r\n\r\nException is located at:\r\n\r\n`C:\\Users\\Adam\\Envs\\otherlane_2\\lib\\site-packages\\sortedm2m\\forms.py in build_attrs, line 35`\r\n\r\nThis is the start of the function. This last line seems to be the issue:\r\n\r\n        def render(self, name, value, attrs=None, choices=()):\r\n            if value is None: value = []\r\n            has_id = attrs and 'id' in attrs\r\n            final_attrs = self.build_attrs(attrs, name=name)\r\n\r\nIt seems CKEditor had a similar problem and had to undergo a revision:\r\nhttps://github.com/django-ckeditor/django-ckeditor/pull/364/files     ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/105", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/105/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/105/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/105", "id": 217514507, "node_id": "MDU6SXNzdWUyMTc1MTQ1MDc=", "number": 105, "title": "Duplicated TestStringReference class", "user": {"login": "nemesisdesign", "id": 841044, "node_id": "MDQ6VXNlcjg0MTA0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/841044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nemesisdesign", "html_url": "https://github.com/nemesisdesign", "followers_url": "https://api.github.com/users/nemesisdesign/followers", "following_url": "https://api.github.com/users/nemesisdesign/following{/other_user}", "gists_url": "https://api.github.com/users/nemesisdesign/gists{/gist_id}", "starred_url": "https://api.github.com/users/nemesisdesign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nemesisdesign/subscriptions", "organizations_url": "https://api.github.com/users/nemesisdesign/orgs", "repos_url": "https://api.github.com/users/nemesisdesign/repos", "events_url": "https://api.github.com/users/nemesisdesign/events{/privacy}", "received_events_url": "https://api.github.com/users/nemesisdesign/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-28T10:27:05Z", "updated_at": "2017-08-01T18:59:10Z", "closed_at": "2017-08-01T18:59:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like there is a [duplicated TestStringReference class](https://github.com/gregmuellegger/django-sortedm2m/blob/master/sortedm2m_tests/test_field.py#L186-L192).\r\n\r\nI think the piece of code I just linked is not being executed currently.\r\n\r\nPossible solutions would be:\r\n\r\n1. rename it\r\n2. delete it\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/98", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/98/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/98/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/98", "id": 208078713, "node_id": "MDU6SXNzdWUyMDgwNzg3MTM=", "number": 98, "title": "How make field is blank?", "user": {"login": "k0st1an", "id": 426513, "node_id": "MDQ6VXNlcjQyNjUxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/426513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k0st1an", "html_url": "https://github.com/k0st1an", "followers_url": "https://api.github.com/users/k0st1an/followers", "following_url": "https://api.github.com/users/k0st1an/following{/other_user}", "gists_url": "https://api.github.com/users/k0st1an/gists{/gist_id}", "starred_url": "https://api.github.com/users/k0st1an/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k0st1an/subscriptions", "organizations_url": "https://api.github.com/users/k0st1an/orgs", "repos_url": "https://api.github.com/users/k0st1an/repos", "events_url": "https://api.github.com/users/k0st1an/events{/privacy}", "received_events_url": "https://api.github.com/users/k0st1an/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-16T10:20:12Z", "updated_at": "2017-02-16T10:37:04Z", "closed_at": "2017-02-16T10:37:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "In model:\r\n\r\n```\r\npictures = SortedManyToManyField(\r\n        Picture, verbose_name='\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a', blank=True\r\n    )\r\n```\r\n\r\nBut in admin panel this field is required. How I fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/96", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/96/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/96/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/96", "id": 206260561, "node_id": "MDU6SXNzdWUyMDYyNjA1NjE=", "number": 96, "title": "How to improve str() representation of relationships? Eg: when deleting from admin", "user": {"login": "nemesisdesign", "id": 841044, "node_id": "MDQ6VXNlcjg0MTA0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/841044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nemesisdesign", "html_url": "https://github.com/nemesisdesign", "followers_url": "https://api.github.com/users/nemesisdesign/followers", "following_url": "https://api.github.com/users/nemesisdesign/following{/other_user}", "gists_url": "https://api.github.com/users/nemesisdesign/gists{/gist_id}", "starred_url": "https://api.github.com/users/nemesisdesign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nemesisdesign/subscriptions", "organizations_url": "https://api.github.com/users/nemesisdesign/orgs", "repos_url": "https://api.github.com/users/nemesisdesign/repos", "events_url": "https://api.github.com/users/nemesisdesign/events{/privacy}", "received_events_url": "https://api.github.com/users/nemesisdesign/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-02-08T17:03:38Z", "updated_at": "2017-08-01T19:20:41Z", "closed_at": "2017-08-01T19:20:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have two models: `Config` and `Template` ([django-netjsonconfig](https://github.com/openwisp/django-netjsonconfig)), `Config` has a sortedm2m relation to `Template`.\r\n\r\nWhen deleting an object which has m2m relationships from admin interface, django says:\r\n\r\n```\r\nAre you sure?\r\n\r\n    Are you sure you want to delete the selected template? All of the following objects and their related items will be deleted:\r\n\r\nSummary\r\n\r\n    - Config-template relationships: 6\r\n    - Templates: 1\r\n\r\nObjects\r\n\r\n    - Template: [Generic-OpenWRT] Wireless settings\r\n        - Config-template relationship: Config_templates object\r\n        - Config-template relationship: Config_templates object\r\n        - Config-template relationship: Config_templates object\r\n        - Config-template relationship: Config_templates object\r\n        - Config-template relationship: Config_templates object\r\n        - Config-template relationship: Config_templates object\r\n```\r\n\r\nThe repetition of `Config-template relationship: Config_templates object` conveys no information. I would like to display something more useful.\r\n\r\nFor example, each config has a name, let's say I'm deleting a template which was installed on two config objects named `Auditorium` and `Gym`\r\n\r\nI've been able to accomplish this only through monkey patching:\r\n\r\n```python\r\nclass Config(models.Model):\r\n    # ...\r\n    pass\r\n\r\ndef sortedm2m__str__(self):\r\n    \"\"\"\r\n    Improves string representation of m2m relationship objects\r\n    \"\"\"\r\n    return self.config.name\r\n\r\nConfig.templates.through.__str__ = sortedm2m__str__\r\n```\r\n\r\nBut I'm wondering if there's a better way. Any suggestion?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/95", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/95/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/95/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/95", "id": 204324914, "node_id": "MDU6SXNzdWUyMDQzMjQ5MTQ=", "number": 95, "title": "Self-referential Sorted M2M has parent included", "user": {"login": "gandalfar", "id": 13806, "node_id": "MDQ6VXNlcjEzODA2", "avatar_url": "https://avatars1.githubusercontent.com/u/13806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gandalfar", "html_url": "https://github.com/gandalfar", "followers_url": "https://api.github.com/users/gandalfar/followers", "following_url": "https://api.github.com/users/gandalfar/following{/other_user}", "gists_url": "https://api.github.com/users/gandalfar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gandalfar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gandalfar/subscriptions", "organizations_url": "https://api.github.com/users/gandalfar/orgs", "repos_url": "https://api.github.com/users/gandalfar/repos", "events_url": "https://api.github.com/users/gandalfar/events{/privacy}", "received_events_url": "https://api.github.com/users/gandalfar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-31T15:08:51Z", "updated_at": "2017-08-02T20:22:49Z", "closed_at": "2017-08-02T20:22:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using a model such as:\r\n\r\n```\r\nclass MenuItem(models.Model):\r\n    title = models.CharField(max_length=255)\r\n    children = SortedManyToManyField('self')\r\n```\r\n\r\nSeems to almost work. The problem is that parent is visible in children:\r\n\r\n```\r\nIn [3]: parent = MenuItem.objects.create(title='Parent')\r\nIn [4]: child1 = MenuItem.objects.create(title='First child')\r\nIn [5]: child2 = MenuItem.objects.create(title='Second child')\r\n\r\nIn [6]: parent.children.all()\r\nOut[6]: <QuerySet []>\r\n\r\nIn [7]: child1.children.all()\r\nOut[7]: <QuerySet []>\r\n\r\nIn [9]: parent.children.add(child1)\r\nIn [10]: parent.children.add(child2)\r\n\r\nIn [11]: parent.children.all()\r\nOut[11]: <QuerySet [<MenuItem: First child>, <MenuItem: Second child>]>\r\n\r\nIn [12]: child1.children.all()\r\nOut[12]: <QuerySet [<MenuItem: Parent>]>\r\n```\r\n\r\nIn my understanding, Out[12] should still return Empty Queryset.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/91", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/91/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/91/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/91", "id": 189293573, "node_id": "MDU6SXNzdWUxODkyOTM1NzM=", "number": 91, "title": "Missing javascript method html_unescape. ", "user": {"login": "Tipuch", "id": 12447782, "node_id": "MDQ6VXNlcjEyNDQ3Nzgy", "avatar_url": "https://avatars2.githubusercontent.com/u/12447782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tipuch", "html_url": "https://github.com/Tipuch", "followers_url": "https://api.github.com/users/Tipuch/followers", "following_url": "https://api.github.com/users/Tipuch/following{/other_user}", "gists_url": "https://api.github.com/users/Tipuch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tipuch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tipuch/subscriptions", "organizations_url": "https://api.github.com/users/Tipuch/orgs", "repos_url": "https://api.github.com/users/Tipuch/repos", "events_url": "https://api.github.com/users/Tipuch/events{/privacy}", "received_events_url": "https://api.github.com/users/Tipuch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-11-15T03:52:44Z", "updated_at": "2017-01-02T15:12:24Z", "closed_at": "2017-01-02T14:51:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When adding an element to a sortedm2m field through the admin (through a popup).\r\nWhen saving the instance the popup doesn't close, and there is this single error in the javascript console:\r\nReferenceError: html_unescape is not defined  (widget.js:91:17).\r\nIt apparently can't find the html_unescape javascript function for some reason. \r\n\r\ntested with Django1.10.3, django-sortedm2m==1.3.2\r\n\r\n`if (window.showAddAnotherPopup) {\r\n            var django_dismissAddAnotherPopup = window[dismissPopupFnName];\r\n            window[dismissPopupFnName] = function (win, newId, newRepr) {\r\n                // newId and newRepr are expected to have previously been escaped by\r\n                // django.utils.html.escape.\r\n                newId = html_unescape(newId);`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/90", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/90/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/90/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/90", "id": 176187741, "node_id": "MDU6SXNzdWUxNzYxODc3NDE=", "number": 90, "title": "Unable to add multiple objects and drop/dragging feature not working", "user": {"login": "vivaelnino9", "id": 10341653, "node_id": "MDQ6VXNlcjEwMzQxNjUz", "avatar_url": "https://avatars3.githubusercontent.com/u/10341653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vivaelnino9", "html_url": "https://github.com/vivaelnino9", "followers_url": "https://api.github.com/users/vivaelnino9/followers", "following_url": "https://api.github.com/users/vivaelnino9/following{/other_user}", "gists_url": "https://api.github.com/users/vivaelnino9/gists{/gist_id}", "starred_url": "https://api.github.com/users/vivaelnino9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vivaelnino9/subscriptions", "organizations_url": "https://api.github.com/users/vivaelnino9/orgs", "repos_url": "https://api.github.com/users/vivaelnino9/repos", "events_url": "https://api.github.com/users/vivaelnino9/events{/privacy}", "received_events_url": "https://api.github.com/users/vivaelnino9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-10T16:18:50Z", "updated_at": "2017-08-01T19:16:20Z", "closed_at": "2017-08-01T19:16:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey! \nI came across sortedm2m through photologue and I am very interested in using it, however it is not working as planned and I cannot come to figure it out why not.  I intend on creating an application similar to photologue (and the example you give in your doc) with a gallery object that you can add multiple photo objects to. I am able to make a gallery object and have it point to a photo object, however when I select more than one photo object, it will only add the most recently checked object in the table of checkboxes for photos. No errors will be produced, on the contrary, there will be a success message indicating that the object was changed successfully. \n\nAlong with that, I am unable to drag & drop the photo objects in the list to actually sort them. When hovering over a photo object, the cursor turns in to the drag & drop icon but it only highlights the text, not moving any of them. \n\nI figured maybe it was something I was doing wrong, but then I decided to build the example \"testapp\" that you provided in your repo, which is bare-boned like the way I am trying to utilize sortedm2m, and I still got the same result: ParkingArea object only allowing one Car object to be added and drag/drop feature not working (parallel to my Gallery and Photo object respectively). However, after looking at phologue's demo website that the developer provides, their admin page is able to successfully use sortedm2m the way it was intended. \n\nYour documentation doesn't really explain if there is anything to modify in admin.py file so maybe I am missing some sort of necessary step there? I am out of ideas on my end, maybe you can help? \n\nHere are the portions of my models that use sortedm2m:\n\n``` python\n#models.py\nfrom sortedm2m.fields import SortedManyToManyField\n\n class ImageModel(models.Model): \n\n    image = ThumbnailerImageField(\n        'image',\n        max_length=100,\n        upload_to='photos'\n    )\n    ...\n    class Meta:\n        abstract = True\n    ...\n class Photo(ImageModel):\n\n    title = models.CharField(\n        'title',\n        max_length=250,\n        unique=True\n    )\n    ...\n class Gallery(models.Model):\n\n    title = models.CharField(\n        'title',\n        max_length=250,\n        unique=True\n    )\n    photos = SortedManyToManyField(\n        Photo,\n        related_name='gallery',\n        verbose_name='photos',\n        blank=True\n    )\n    ...\n```\n\nLet me know if there is any other information you would like me to provide about my app, however I tried to make it similar to the way it is projected in your example project.\n\nThanks!\nLucas\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/89", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/89/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/89/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/89", "id": 176096166, "node_id": "MDU6SXNzdWUxNzYwOTYxNjY=", "number": 89, "title": "Deprecation warnings on Django 1.10", "user": {"login": "mdentremont", "id": 1106324, "node_id": "MDQ6VXNlcjExMDYzMjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1106324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdentremont", "html_url": "https://github.com/mdentremont", "followers_url": "https://api.github.com/users/mdentremont/followers", "following_url": "https://api.github.com/users/mdentremont/following{/other_user}", "gists_url": "https://api.github.com/users/mdentremont/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdentremont/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdentremont/subscriptions", "organizations_url": "https://api.github.com/users/mdentremont/orgs", "repos_url": "https://api.github.com/users/mdentremont/repos", "events_url": "https://api.github.com/users/mdentremont/events{/privacy}", "received_events_url": "https://api.github.com/users/mdentremont/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-09T20:01:11Z", "updated_at": "2017-06-08T21:25:29Z", "closed_at": "2017-06-08T21:25:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "After updating to Django 1.10, I'm seeing a deprecation warnings which originate from django-sortedm2m:\n\n```\n...\n/Users/<username>/.virtualenvs/<proj>/lib/python3.5/site-packages/sortedm2m/fields.py:334: RemovedInDjango20Warning: Usage of ForeignObjectRel.to attribute has been deprecated. Use the model attribute instead.\n  to_model = self.rel.to\n/Users/<username>/.virtualenvs/<proj>/lib/python3.5/site-packages/sortedm2m/fields.py:354: RemovedInDjango20Warning: Usage of field.rel has been deprecated. Use field.remote_field instead.\n  if self.rel.to == RECURSIVE_RELATIONSHIP_CONSTANT or to_object_name == klass._meta.object_name:\n/Users/<username>/.virtualenvs/<proj>/lib/python3.5/site-packages/sortedm2m/fields.py:354: RemovedInDjango20Warning: Usage of ForeignObjectRel.to attribute has been deprecated. Use the model attribute instead.\n  if self.rel.to == RECURSIVE_RELATIONSHIP_CONSTANT or to_object_name == klass._meta.object_name:\n/Users/<username>/.virtualenvs/<proj>/lib/python3.5/site-packages/sortedm2m/compat.py:37: RemovedInDjango20Warning: Usage of field.rel has been deprecated. Use field.remote_field instead.\n  db_constraint=field.rel.db_constraint)\n/Users/<username>/.virtualenvs/<proj>/lib/python3.5/site-packages/sortedm2m/fields.py:360: RemovedInDjango20Warning: on_delete will be a required arg for ForeignKey in Django 2.0. Set it to models.CASCADE on models and in existing migrations if you want to maintain the current default behavior. See https://docs.djangoproject.com/en/1.10/ref/models/fields/#django.db.models.ForeignKey.on_delete\n  **get_foreignkey_field_kwargs(self))\n...\n```\n\nMost of these look fairly minor, but it just might be slightly annoying to make the changes work across older versions of Django.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/88", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/88/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/88/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/88", "id": 170536625, "node_id": "MDU6SXNzdWUxNzA1MzY2MjU=", "number": 88, "title": "How to get queryset in sorted order?", "user": {"login": "NathanielHill", "id": 15079979, "node_id": "MDQ6VXNlcjE1MDc5OTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/15079979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NathanielHill", "html_url": "https://github.com/NathanielHill", "followers_url": "https://api.github.com/users/NathanielHill/followers", "following_url": "https://api.github.com/users/NathanielHill/following{/other_user}", "gists_url": "https://api.github.com/users/NathanielHill/gists{/gist_id}", "starred_url": "https://api.github.com/users/NathanielHill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NathanielHill/subscriptions", "organizations_url": "https://api.github.com/users/NathanielHill/orgs", "repos_url": "https://api.github.com/users/NathanielHill/repos", "events_url": "https://api.github.com/users/NathanielHill/events{/privacy}", "received_events_url": "https://api.github.com/users/NathanielHill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-10T22:46:34Z", "updated_at": "2016-12-07T21:45:33Z", "closed_at": "2016-12-07T21:45:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using DRF to expose my data via a REST API, and just realized I'm not serving it in the order it has been arranged in via the Django admin interface. What is the correct method for building the queryset in sorted order?\n\n`queryset = GalleryPage.objects.all()`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/87", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/87/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/87/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/87", "id": 168535334, "node_id": "MDU6SXNzdWUxNjg1MzUzMzQ=", "number": 87, "title": "Problem with AlterSortedManyToManyField or the documentation about it", "user": {"login": "jannon", "id": 224806, "node_id": "MDQ6VXNlcjIyNDgwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/224806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jannon", "html_url": "https://github.com/jannon", "followers_url": "https://api.github.com/users/jannon/followers", "following_url": "https://api.github.com/users/jannon/following{/other_user}", "gists_url": "https://api.github.com/users/jannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jannon/subscriptions", "organizations_url": "https://api.github.com/users/jannon/orgs", "repos_url": "https://api.github.com/users/jannon/repos", "events_url": "https://api.github.com/users/jannon/events{/privacy}", "received_events_url": "https://api.github.com/users/jannon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-31T20:02:32Z", "updated_at": "2017-08-02T20:43:09Z", "closed_at": "2017-08-02T20:31:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, so I just found django-sortedm2m and am stoked about it, but I ran into a little problem integrating it.  The problem is a little similar to #60 so hopefully I'll shed a little light on what might be going on\n\nI have an two existing models with a many-to-many relationship with a custom through-table.  That table already has an 'order' field. As such, as per the Readme on github, I used the `sort_value_field_name`.  I also followed the Readme and modified the created migration to use `AlterSortedManyToManyField`.\n\nThe problem is that `AlterSortedManyToManyField` does not take into account a custom sort value field name.  It only uses the default: [operations.py:77](https://github.com/gregmuellegger/django-sortedm2m/blob/master/sortedm2m/operations.py#L77)\n\nFor my situation, the solution was simple.  Just don't use the operation and everything else else just works great!  But I think maybe either the operation should take into account a `sort_value_field_name` set on the field or, more simply, the documentation should just highlight that if you have an existing field and through table, don't change the migration.\n\nThanks the package\n\nEDIT: oh, I also had to add `_sort_field_name = 'order'` to my through model, so maybe it should be addressed in `AlterSortedManyToManyField`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/86", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/86/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/86/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/86", "id": 165189624, "node_id": "MDU6SXNzdWUxNjUxODk2MjQ=", "number": 86, "title": "Silent failure when adding duplicate items", "user": {"login": "nhammond", "id": 1828858, "node_id": "MDQ6VXNlcjE4Mjg4NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1828858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhammond", "html_url": "https://github.com/nhammond", "followers_url": "https://api.github.com/users/nhammond/followers", "following_url": "https://api.github.com/users/nhammond/following{/other_user}", "gists_url": "https://api.github.com/users/nhammond/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhammond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhammond/subscriptions", "organizations_url": "https://api.github.com/users/nhammond/orgs", "repos_url": "https://api.github.com/users/nhammond/repos", "events_url": "https://api.github.com/users/nhammond/events{/privacy}", "received_events_url": "https://api.github.com/users/nhammond/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-12T21:49:56Z", "updated_at": "2016-08-11T11:12:48Z", "closed_at": "2016-08-11T11:12:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Adding a duplicate of the same model instance to a SortedManyToMany relationship silently fails.\n\nIntuitively, I can understand how unordered Django ManyToMany fields behave as a Set and do not allow duplicates. But for an ordered relationship, I would expect it to behave like a List, and dropping duplicates is counterintuitive.\n\nAre there any known workarounds, or do you know of any other tools better suited for implementing list/queue/stack behavior where duplicates are allowed?\n\n```\n# models.py\n\nfrom django.db import models\nfrom sortedm2m.fields import SortedManyToManyField\n\nclass Task(models.Model):\n    name = models.CharField(max_length=255)\n\nclass Routine(models.Model):\n    tasks = SortedManyToManyField('Task')\n```\n\n```\n# usage:\nsleep = Task(name='sleep')\nsleep.save()\n\neat = Task(name='eat')\neat.save()\n\nwork =Task(name='work')\nwork.save()\n\nroutine = Routine()\nroutine.save()\n\n routine.tasks.add(eat)   # 1\n routine.tasks.add(work) # 2\n routine.tasks.add(eat)    # 3 = duplicate of 1\n routine.tasks.add(sleep) # 4\n\n routine.tasks.count() # returns 3\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/85", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/85/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/85/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/85", "id": 164709446, "node_id": "MDU6SXNzdWUxNjQ3MDk0NDY=", "number": 85, "title": "Widget not diplaying properly in forms.", "user": {"login": "kashsingh", "id": 12440889, "node_id": "MDQ6VXNlcjEyNDQwODg5", "avatar_url": "https://avatars3.githubusercontent.com/u/12440889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kashsingh", "html_url": "https://github.com/kashsingh", "followers_url": "https://api.github.com/users/kashsingh/followers", "following_url": "https://api.github.com/users/kashsingh/following{/other_user}", "gists_url": "https://api.github.com/users/kashsingh/gists{/gist_id}", "starred_url": "https://api.github.com/users/kashsingh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kashsingh/subscriptions", "organizations_url": "https://api.github.com/users/kashsingh/orgs", "repos_url": "https://api.github.com/users/kashsingh/repos", "events_url": "https://api.github.com/users/kashsingh/events{/privacy}", "received_events_url": "https://api.github.com/users/kashsingh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-10T10:29:07Z", "updated_at": "2017-08-02T20:44:45Z", "closed_at": "2017-08-02T20:44:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I am quite new to Django and was trying to implement the sortedm2m widget in my forms. The code I used is\n\n> class TrackForm(forms.ModelForm):\n>     title = forms.CharField(max_length=128, help_text=\"Please enter the track title.\")\n>     views = forms.IntegerField(widget=forms.HiddenInput(), initial=0)\n>     genres = SortedMultipleChoiceField(queryset=Genre.objects.all())\n\nbut I got this. It is plain list of labels without the scroller, also multiple objects cannot be added only one of the selected object is added to the Trackform data. I am thinking, it may be due failing widget.\n\n![screenshot from 2016-07-10 15 54 48](https://cloud.githubusercontent.com/assets/12440889/16713002/e6d0a3f6-46b6-11e6-9d81-2cfd7fdb7d6c.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/84", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/84/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/84/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/84", "id": 161325634, "node_id": "MDU6SXNzdWUxNjEzMjU2MzQ=", "number": 84, "title": "Thumbnails in admin template?", "user": {"login": "NathanielHill", "id": 15079979, "node_id": "MDQ6VXNlcjE1MDc5OTc5", "avatar_url": "https://avatars1.githubusercontent.com/u/15079979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NathanielHill", "html_url": "https://github.com/NathanielHill", "followers_url": "https://api.github.com/users/NathanielHill/followers", "following_url": "https://api.github.com/users/NathanielHill/following{/other_user}", "gists_url": "https://api.github.com/users/NathanielHill/gists{/gist_id}", "starred_url": "https://api.github.com/users/NathanielHill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NathanielHill/subscriptions", "organizations_url": "https://api.github.com/users/NathanielHill/orgs", "repos_url": "https://api.github.com/users/NathanielHill/repos", "events_url": "https://api.github.com/users/NathanielHill/events{/privacy}", "received_events_url": "https://api.github.com/users/NathanielHill/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-21T00:32:35Z", "updated_at": "2018-11-21T11:36:09Z", "closed_at": "2016-08-10T22:42:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a simple way to display thumbnails in the admin interface? I've set **str**() to return an anchor tag with appropriate href (as I've done in the rest of admin), but it gets escaped by your template. This seems like an important feature, since dragging and dropping a list of filenames is far from optimal in the case of a photo gallery.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/82", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/82/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/82/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/82", "id": 157591405, "node_id": "MDU6SXNzdWUxNTc1OTE0MDU=", "number": 82, "title": "Using TEMPLATES setting does not work with django-mobile", "user": {"login": "gregmuellegger", "id": 88278, "node_id": "MDQ6VXNlcjg4Mjc4", "avatar_url": "https://avatars3.githubusercontent.com/u/88278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregmuellegger", "html_url": "https://github.com/gregmuellegger", "followers_url": "https://api.github.com/users/gregmuellegger/followers", "following_url": "https://api.github.com/users/gregmuellegger/following{/other_user}", "gists_url": "https://api.github.com/users/gregmuellegger/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregmuellegger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregmuellegger/subscriptions", "organizations_url": "https://api.github.com/users/gregmuellegger/orgs", "repos_url": "https://api.github.com/users/gregmuellegger/repos", "events_url": "https://api.github.com/users/gregmuellegger/events{/privacy}", "received_events_url": "https://api.github.com/users/gregmuellegger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-31T05:16:02Z", "updated_at": "2017-08-01T19:09:48Z", "closed_at": "2017-08-01T19:09:48Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I received this bugreport by email:\n\n> I'm trying to get django-mobile working with a clean install of Wagtail CMS (https://wagtail.io/)\n> \n> I made separate mobile templates and followed the install instructions but it doesn't work out of the box and I'm wondering if you had any tips?\n> \n> To get it to work at all actually I had to change in the settings from:\n\n```\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            os.path.join(PROJECT_DIR, 'templates'),\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n```\n\n> to this:\n\n```\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            os.path.join(PROJECT_DIR, 'templates'),\n        ],\n        #'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n                'django_mobile.context_processors.flavour',\n            ],\n            'loaders': [\n                # insert your TEMPLATE_LOADERS here\n                ##'django_mobile.loader.CachedLoader',\n                'django_mobile.loader.Loader',\n                'django.template.loaders.filesystem.Loader',\n                'django.template.loaders.app_directories.Loader',\n            ],\n        },\n    },\n]\n```\n\n> commenting out the APP_DIRS to make loaders work. While this didn't seem to break wagtail as long as I add the app_directories.Loader, django-mobile still isn't working :(\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/80", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/80/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/80/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/80", "id": 156762027, "node_id": "MDU6SXNzdWUxNTY3NjIwMjc=", "number": 80, "title": "Regression in 1.3", "user": {"login": "czpython", "id": 994951, "node_id": "MDQ6VXNlcjk5NDk1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/994951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czpython", "html_url": "https://github.com/czpython", "followers_url": "https://api.github.com/users/czpython/followers", "following_url": "https://api.github.com/users/czpython/following{/other_user}", "gists_url": "https://api.github.com/users/czpython/gists{/gist_id}", "starred_url": "https://api.github.com/users/czpython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czpython/subscriptions", "organizations_url": "https://api.github.com/users/czpython/orgs", "repos_url": "https://api.github.com/users/czpython/repos", "events_url": "https://api.github.com/users/czpython/events{/privacy}", "received_events_url": "https://api.github.com/users/czpython/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-05-25T14:15:47Z", "updated_at": "2016-06-28T20:20:15Z", "closed_at": "2016-06-28T20:20:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\nI'm getting a `TypeError NoneType object is not iterable` when saving an object in the admin.\nI think it's related to the line above where the check for None was removed.\nhttps://github.com/gregmuellegger/django-sortedm2m/commit/428a8a85c0e7fad42e6d89db4d3a0ab10a508017#commitcomment-17613670\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/78", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/78/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/78/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/78", "id": 156316088, "node_id": "MDU6SXNzdWUxNTYzMTYwODg=", "number": 78, "title": "Drag and & not working when rendered using `bootstrap_form` template tag", "user": {"login": "mick88", "id": 4239561, "node_id": "MDQ6VXNlcjQyMzk1NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4239561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mick88", "html_url": "https://github.com/mick88", "followers_url": "https://api.github.com/users/mick88/followers", "following_url": "https://api.github.com/users/mick88/following{/other_user}", "gists_url": "https://api.github.com/users/mick88/gists{/gist_id}", "starred_url": "https://api.github.com/users/mick88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mick88/subscriptions", "organizations_url": "https://api.github.com/users/mick88/orgs", "repos_url": "https://api.github.com/users/mick88/repos", "events_url": "https://api.github.com/users/mick88/events{/privacy}", "received_events_url": "https://api.github.com/users/mick88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-05-23T16:56:44Z", "updated_at": "2016-05-24T20:32:00Z", "closed_at": "2016-05-24T20:32:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using `django-bootstrap3==6.2.2` and render my form using `{% bootstrap_form form %}`. \nThe resulting widget renders fine, but drag and drop does not work. \n\nI'm including js using `{{ form.media }}`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/77", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/77/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/77/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/77", "id": 155477160, "node_id": "MDU6SXNzdWUxNTU0NzcxNjA=", "number": 77, "title": "Using a \"through\" intermediate model", "user": {"login": "bjesus", "id": 55081, "node_id": "MDQ6VXNlcjU1MDgx", "avatar_url": "https://avatars0.githubusercontent.com/u/55081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjesus", "html_url": "https://github.com/bjesus", "followers_url": "https://api.github.com/users/bjesus/followers", "following_url": "https://api.github.com/users/bjesus/following{/other_user}", "gists_url": "https://api.github.com/users/bjesus/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjesus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjesus/subscriptions", "organizations_url": "https://api.github.com/users/bjesus/orgs", "repos_url": "https://api.github.com/users/bjesus/repos", "events_url": "https://api.github.com/users/bjesus/events{/privacy}", "received_events_url": "https://api.github.com/users/bjesus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-18T11:22:02Z", "updated_at": "2020-03-04T09:09:39Z", "closed_at": "2016-06-27T18:11:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI couldn't get sortedm2m to work when tried with an intermediate model. Without it works perfectly.\n\nMy code is like this:\n\n```\nclass Photo(models.Model):\n    file = models.ImageField()\n\nclass Gallery(models.Model):\n    name = models.CharField(max_length=1000, default=\"\")\n    photos = SortedManyToManyField(Photo, through=\"PhotosToGalleries\")\n\nclass PhotosToGalleries(models.Model):\n    gallery = models.ForeignKey(Gallery, on_delete=models.CASCADE)\n    photo = models.ForeignKey(Photo, on_delete=models.CASCADE)\n    featured = models.BooleanField()\n```\n\nAll seems fine, but I see nothing in the admin panel, and when trying to run `some_gallery_object.photos.all()` I the following error:\n`AttributeError: type object 'PhotosToGalleries' has no attribute '_sort_field_name'`\n\nDoes sortedm2m supports defining my own intermediate model?\n\nI'm using Django 1.9.5 with Python 3.\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/74", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/74/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/74/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/74", "id": 140944811, "node_id": "MDU6SXNzdWUxNDA5NDQ4MTE=", "number": 74, "title": "Access to sort_value column value ", "user": {"login": "cheluis", "id": 130223, "node_id": "MDQ6VXNlcjEzMDIyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/130223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cheluis", "html_url": "https://github.com/cheluis", "followers_url": "https://api.github.com/users/cheluis/followers", "following_url": "https://api.github.com/users/cheluis/following{/other_user}", "gists_url": "https://api.github.com/users/cheluis/gists{/gist_id}", "starred_url": "https://api.github.com/users/cheluis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cheluis/subscriptions", "organizations_url": "https://api.github.com/users/cheluis/orgs", "repos_url": "https://api.github.com/users/cheluis/repos", "events_url": "https://api.github.com/users/cheluis/events{/privacy}", "received_events_url": "https://api.github.com/users/cheluis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-15T11:29:37Z", "updated_at": "2016-03-18T17:47:30Z", "closed_at": "2016-03-18T17:47:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Greetings, I am trying to use sorted to order some questions inside a quiz, so far I have these two models:\n\n```\nclass Quiz(models.Models):\n    text = models.CharField(max_length=255)\n    questions = SortedManyToManyField(\"Question\")\n\nclass Question(models.Model):\n    text = models.CharField(max_length=255)\n    .\n    .\n    .\n```\n\nIn my views I need to get the sorted_value column value but its not accessible. Question object has not sorted_value property. I used to have a property called \"order\", I removed but the migration created kept the field. But when I reorder questions inside admin,  the value which is changed is sort_value. I need to access this sort_value.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/73", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/73/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/73/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/73", "id": 131037270, "node_id": "MDU6SXNzdWUxMzEwMzcyNzA=", "number": 73, "title": "Checkbox not displayed when using jet dashboard", "user": {"login": "alexandrenorman", "id": 4385468, "node_id": "MDQ6VXNlcjQzODU0Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4385468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexandrenorman", "html_url": "https://github.com/alexandrenorman", "followers_url": "https://api.github.com/users/alexandrenorman/followers", "following_url": "https://api.github.com/users/alexandrenorman/following{/other_user}", "gists_url": "https://api.github.com/users/alexandrenorman/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexandrenorman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexandrenorman/subscriptions", "organizations_url": "https://api.github.com/users/alexandrenorman/orgs", "repos_url": "https://api.github.com/users/alexandrenorman/repos", "events_url": "https://api.github.com/users/alexandrenorman/events{/privacy}", "received_events_url": "https://api.github.com/users/alexandrenorman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-03T14:10:56Z", "updated_at": "2017-08-02T20:43:39Z", "closed_at": "2017-08-02T20:43:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When used with jet dashboard (http://jet.geex-arts.com/), \ncheckbox are not displayed in admin. This prevents user to select fields.\n\nCorrection proposal for templates/sortedm2m/sorted_checkbox_select_multiple_widget.html:\n\n```\n11c11\n<         <li><label{{ row.label_for|safe }}>{{ row.rendered_cb }} {{ row.option_label }}</label></li>\n\n---\n>         <li>{{ row.rendered_cb }} <label{{ row.label_for|safe }}>{{ row.option_label }}</label></li>\n15c15\n<         <li><label{{ row.label_for|safe }}>{{ row.rendered_cb }} {{ row.option_label }}</label></li>\n\n---\n>         <li>{{ row.rendered_cb }} <label{{ row.label_for|safe }}>{{ row.option_label }}</label></li\n```\n\nThis way, it works. Did not see any drawback. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/71", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/71/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/71/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/71", "id": 122237734, "node_id": "MDU6SXNzdWUxMjIyMzc3MzQ=", "number": 71, "title": "collectstatic with S3BotoStorage", "user": {"login": "erm0l0v", "id": 1074603, "node_id": "MDQ6VXNlcjEwNzQ2MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1074603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erm0l0v", "html_url": "https://github.com/erm0l0v", "followers_url": "https://api.github.com/users/erm0l0v/followers", "following_url": "https://api.github.com/users/erm0l0v/following{/other_user}", "gists_url": "https://api.github.com/users/erm0l0v/gists{/gist_id}", "starred_url": "https://api.github.com/users/erm0l0v/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erm0l0v/subscriptions", "organizations_url": "https://api.github.com/users/erm0l0v/orgs", "repos_url": "https://api.github.com/users/erm0l0v/repos", "events_url": "https://api.github.com/users/erm0l0v/events{/privacy}", "received_events_url": "https://api.github.com/users/erm0l0v/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-15T10:13:29Z", "updated_at": "2015-12-17T10:06:47Z", "closed_at": "2015-12-17T10:06:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi Guys. \n\nI have problem with **collectstatic** command.\n\nI use `S3BotoStorage` with `ManifestFilesMixin` as a static files storage and I got an error after run **collectstatic**.\n\nhttps://github.com/gregmuellegger/django-sortedm2m/blob/1.1.1/sortedm2m/forms.py#L28\n\n`static` function tries to get file from S3, but it impossible until **collectstatic** will be done.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/69", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/69/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/69/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/69", "id": 119887082, "node_id": "MDU6SXNzdWUxMTk4ODcwODI=", "number": 69, "title": "Push Django 1.9 support to PyPI", "user": {"login": "outime", "id": 62993, "node_id": "MDQ6VXNlcjYyOTkz", "avatar_url": "https://avatars2.githubusercontent.com/u/62993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/outime", "html_url": "https://github.com/outime", "followers_url": "https://api.github.com/users/outime/followers", "following_url": "https://api.github.com/users/outime/following{/other_user}", "gists_url": "https://api.github.com/users/outime/gists{/gist_id}", "starred_url": "https://api.github.com/users/outime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/outime/subscriptions", "organizations_url": "https://api.github.com/users/outime/orgs", "repos_url": "https://api.github.com/users/outime/repos", "events_url": "https://api.github.com/users/outime/events{/privacy}", "received_events_url": "https://api.github.com/users/outime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-02T07:53:21Z", "updated_at": "2015-12-02T10:22:38Z", "closed_at": "2015-12-02T10:17:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Django 1.9 [has been released](https://www.djangoproject.com/weblog/2015/dec/01/django-19-released/) and django-sortedm2m package [at PyPI](https://pypi.python.org/pypi/django-sortedm2m) doesn't have support for it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/66", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/66/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/66/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/66", "id": 115473341, "node_id": "MDU6SXNzdWUxMTU0NzMzNDE=", "number": 66, "title": "how to update the order of m2m", "user": {"login": "wliyongfeng", "id": 2264908, "node_id": "MDQ6VXNlcjIyNjQ5MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2264908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wliyongfeng", "html_url": "https://github.com/wliyongfeng", "followers_url": "https://api.github.com/users/wliyongfeng/followers", "following_url": "https://api.github.com/users/wliyongfeng/following{/other_user}", "gists_url": "https://api.github.com/users/wliyongfeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/wliyongfeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wliyongfeng/subscriptions", "organizations_url": "https://api.github.com/users/wliyongfeng/orgs", "repos_url": "https://api.github.com/users/wliyongfeng/repos", "events_url": "https://api.github.com/users/wliyongfeng/events{/privacy}", "received_events_url": "https://api.github.com/users/wliyongfeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-06T09:56:39Z", "updated_at": "2015-11-27T02:21:31Z", "closed_at": "2015-11-27T02:21:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know from the doc that we can keep the order as we added. For example\n\n``` python\nclass Photo(models.Model):\n    name = models.CharField(max_length=100)\n\n\nclass Gallery(models.Model):\n    name = models.CharField(max_length=100, default='gallery')\n    photos = SortedManyToManyField(Photo)\n\n\np1 = Photo.objects.create(name='photo 1')\np2 = Photo.objects.create(name='photo 2')\np3 = Photo.objects.create(name='photo 3')\n\ngallery = Gallery.objects.create(name='gallery')\ngallery.photos.add(p1)\ngallery.photos.add(p2)\ngallery.photos.add(p3)\n```\n\nso photos in gallery keep in order [p1, p2, p3]. But how can I update this order, is there a convenient way provided?\n\nsorry it maybe a simple question, but I didn't figure out.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/64", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/64/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/64/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/64", "id": 112466002, "node_id": "MDU6SXNzdWUxMTI0NjYwMDI=", "number": 64, "title": "Django 1.9 support", "user": {"login": "wengole", "id": 383857, "node_id": "MDQ6VXNlcjM4Mzg1Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/383857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wengole", "html_url": "https://github.com/wengole", "followers_url": "https://api.github.com/users/wengole/followers", "following_url": "https://api.github.com/users/wengole/following{/other_user}", "gists_url": "https://api.github.com/users/wengole/gists{/gist_id}", "starred_url": "https://api.github.com/users/wengole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wengole/subscriptions", "organizations_url": "https://api.github.com/users/wengole/orgs", "repos_url": "https://api.github.com/users/wengole/repos", "events_url": "https://api.github.com/users/wengole/events{/privacy}", "received_events_url": "https://api.github.com/users/wengole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-20T21:37:32Z", "updated_at": "2015-12-02T14:50:25Z", "closed_at": "2015-12-01T22:28:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just took 1.9b1 for a spin, and immediately get this trying to start my app using SortedManyToManyField\n\n```\nFile \".../sortedm2m/fields.py\", line 8, in <module>\n    from django.db.models.fields.related import add_lazy_relation, create_many_related_manager\n```\n\nLooks like create_many_related_manager has been removed, but I can't find explicit reference to this in the release notes.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/63", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/63/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/63/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/63", "id": 108382742, "node_id": "MDU6SXNzdWUxMDgzODI3NDI=", "number": 63, "title": "How can a person manually migrate from a m2m to a sortedm2m?", "user": {"login": "dangayle", "id": 129611, "node_id": "MDQ6VXNlcjEyOTYxMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/129611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dangayle", "html_url": "https://github.com/dangayle", "followers_url": "https://api.github.com/users/dangayle/followers", "following_url": "https://api.github.com/users/dangayle/following{/other_user}", "gists_url": "https://api.github.com/users/dangayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/dangayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dangayle/subscriptions", "organizations_url": "https://api.github.com/users/dangayle/orgs", "repos_url": "https://api.github.com/users/dangayle/repos", "events_url": "https://api.github.com/users/dangayle/events{/privacy}", "received_events_url": "https://api.github.com/users/dangayle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-25T18:26:01Z", "updated_at": "2015-09-28T10:25:38Z", "closed_at": "2015-09-28T10:25:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have some models that aren't in South, and we've forgotten how to make that migration manually.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/62", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/62/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/62/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/62", "id": 106767902, "node_id": "MDU6SXNzdWUxMDY3Njc5MDI=", "number": 62, "title": "False child relation with SortedMany2ManyField('self')", "user": {"login": "submarcos", "id": 7448208, "node_id": "MDQ6VXNlcjc0NDgyMDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7448208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/submarcos", "html_url": "https://github.com/submarcos", "followers_url": "https://api.github.com/users/submarcos/followers", "following_url": "https://api.github.com/users/submarcos/following{/other_user}", "gists_url": "https://api.github.com/users/submarcos/gists{/gist_id}", "starred_url": "https://api.github.com/users/submarcos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/submarcos/subscriptions", "organizations_url": "https://api.github.com/users/submarcos/orgs", "repos_url": "https://api.github.com/users/submarcos/repos", "events_url": "https://api.github.com/users/submarcos/events{/privacy}", "received_events_url": "https://api.github.com/users/submarcos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-16T12:56:01Z", "updated_at": "2015-09-16T14:27:10Z", "closed_at": "2015-09-16T14:27:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I created a model with a SortedMany2ManyField to itself named children.\nI created 4 Treks, test1, test2, test3 and test4 with no children.\nI opened test1 in admin, selected test2, test3, test4 as children, and saved it.\n\nNow, if I open test2, test3 or test4, I see test1 as a child...\nIt only appends when the SortedMany2ManyField link 'self'\n\n![capture du 2015-09-16 14 49 14](https://cloud.githubusercontent.com/assets/7448208/9905067/d40ea80e-5c82-11e5-95f3-2d93c1fe33d2.png)\non the picture, 3 first are expected, 3 last are unexpected\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/60", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/60/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/60/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/60", "id": 102607656, "node_id": "MDU6SXNzdWUxMDI2MDc2NTY=", "number": 60, "title": "Name of order field in migrations", "user": {"login": "TyVik", "id": 927459, "node_id": "MDQ6VXNlcjkyNzQ1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/927459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TyVik", "html_url": "https://github.com/TyVik", "followers_url": "https://api.github.com/users/TyVik/followers", "following_url": "https://api.github.com/users/TyVik/following{/other_user}", "gists_url": "https://api.github.com/users/TyVik/gists{/gist_id}", "starred_url": "https://api.github.com/users/TyVik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TyVik/subscriptions", "organizations_url": "https://api.github.com/users/TyVik/orgs", "repos_url": "https://api.github.com/users/TyVik/repos", "events_url": "https://api.github.com/users/TyVik/events{/privacy}", "received_events_url": "https://api.github.com/users/TyVik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-08-23T10:43:16Z", "updated_at": "2015-09-10T07:03:06Z", "closed_at": "2015-09-10T04:54:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Problem IMHO in migrations of Django 1.7 (not South). I use custom field name for order field in M2M:\n\n``` python\nattributes = SortedManyToManyField(Attribute, sort_value_field_name='order')\n```\n\nthen make migration and apply it. After which in db was created M2M table with default field name ('sort_value') instead my overriding name ('order').\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/58", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/58/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/58/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/58", "id": 97942239, "node_id": "MDU6SXNzdWU5Nzk0MjIzOQ==", "number": 58, "title": "Legacy templates don't work, are incomplete", "user": {"login": "mkoistinen", "id": 615759, "node_id": "MDQ6VXNlcjYxNTc1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/615759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkoistinen", "html_url": "https://github.com/mkoistinen", "followers_url": "https://api.github.com/users/mkoistinen/followers", "following_url": "https://api.github.com/users/mkoistinen/following{/other_user}", "gists_url": "https://api.github.com/users/mkoistinen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkoistinen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkoistinen/subscriptions", "organizations_url": "https://api.github.com/users/mkoistinen/orgs", "repos_url": "https://api.github.com/users/mkoistinen/repos", "events_url": "https://api.github.com/users/mkoistinen/events{/privacy}", "received_events_url": "https://api.github.com/users/mkoistinen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-29T13:58:27Z", "updated_at": "2015-07-29T13:58:49Z", "closed_at": "2015-07-29T13:58:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/57", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/57/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/57/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/57", "id": 97804982, "node_id": "MDU6SXNzdWU5NzgwNDk4Mg==", "number": 57, "title": "Add related object popup error prevents operation when no related objects already exist", "user": {"login": "mkoistinen", "id": 615759, "node_id": "MDQ6VXNlcjYxNTc1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/615759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkoistinen", "html_url": "https://github.com/mkoistinen", "followers_url": "https://api.github.com/users/mkoistinen/followers", "following_url": "https://api.github.com/users/mkoistinen/following{/other_user}", "gists_url": "https://api.github.com/users/mkoistinen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkoistinen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkoistinen/subscriptions", "organizations_url": "https://api.github.com/users/mkoistinen/orgs", "repos_url": "https://api.github.com/users/mkoistinen/repos", "events_url": "https://api.github.com/users/mkoistinen/events{/privacy}", "received_events_url": "https://api.github.com/users/mkoistinen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-07-28T21:23:25Z", "updated_at": "2016-06-27T17:57:57Z", "closed_at": "2016-06-27T17:50:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using sortedm2m's :heavy_plus_sign: in a change form to add a related object works fine when related objects exist, but fails when there are none to start with.\n\nI have demonstrated this with [this concise video](https://youtu.be/TNlezwxCtsk). This was made using a pristine virtenv and installing only Django v1.7.9 and django-sortedm2m v1.0.1. Here is a link to my [project files](http://cl.ly/0f1O180g1a0f) for your testing pleasure. admin account = admin/password.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/55", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/55/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/55/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/55", "id": 89095116, "node_id": "MDU6SXNzdWU4OTA5NTExNg==", "number": 55, "title": "Migrate problem", "user": {"login": "FTCr", "id": 3773642, "node_id": "MDQ6VXNlcjM3NzM2NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3773642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FTCr", "html_url": "https://github.com/FTCr", "followers_url": "https://api.github.com/users/FTCr/followers", "following_url": "https://api.github.com/users/FTCr/following{/other_user}", "gists_url": "https://api.github.com/users/FTCr/gists{/gist_id}", "starred_url": "https://api.github.com/users/FTCr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FTCr/subscriptions", "organizations_url": "https://api.github.com/users/FTCr/orgs", "repos_url": "https://api.github.com/users/FTCr/repos", "events_url": "https://api.github.com/users/FTCr/events{/privacy}", "received_events_url": "https://api.github.com/users/FTCr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-17T18:45:30Z", "updated_at": "2015-06-17T22:32:13Z", "closed_at": "2015-06-17T22:17:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "> Before applying it, edit the migration file and change in the operations list migrations.AlterField to AlterSortedManyToManyField (import it from sortedm2m.operations). This operation will take care of changing the intermediate tables, add the ordering field and fill in default values.\n\nAfter this and migrate.\n\n``` python\nApplying shop.0032_auto_20150617_2132...Traceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Volumes/WDC/Documents/Development/Web/rifktk-virtualenv/lib/python3.4/site-packages/django/core/management/__init__.py\", line 338, in execute_from_command_line\n    utility.execute()\n  File \"/Volumes/WDC/Documents/Development/Web/rifktk-virtualenv/lib/python3.4/site-packages/django/core/management/__init__.py\", line 330, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Volumes/WDC/Documents/Development/Web/rifktk-virtualenv/lib/python3.4/site-packages/django/core/management/base.py\", line 390, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/Volumes/WDC/Documents/Development/Web/rifktk-virtualenv/lib/python3.4/site-packages/django/core/management/base.py\", line 441, in execute\n    output = self.handle(*args, **options)\n  File \"/Volumes/WDC/Documents/Development/Web/rifktk-virtualenv/lib/python3.4/site-packages/django/core/management/commands/migrate.py\", line 221, in handle\n    executor.migrate(targets, plan, fake=fake, fake_initial=fake_initial)\n  File \"/Volumes/WDC/Documents/Development/Web/rifktk-virtualenv/lib/python3.4/site-packages/django/db/migrations/executor.py\", line 110, in migrate\n    self.apply_migration(states[migration], migration, fake=fake, fake_initial=fake_initial)\n  File \"/Volumes/WDC/Documents/Development/Web/rifktk-virtualenv/lib/python3.4/site-packages/django/db/migrations/executor.py\", line 147, in apply_migration\n    state = migration.apply(state, schema_editor)\n  File \"/Volumes/WDC/Documents/Development/Web/rifktk-virtualenv/lib/python3.4/site-packages/django/db/migrations/migration.py\", line 115, in apply\n    operation.database_forwards(self.app_label, schema_editor, old_state, project_state)\n  File \"/Volumes/WDC/Documents/Development/Web/rifktk-virtualenv/lib/python3.4/site-packages/sortedm2m/operations.py\", line 12, in database_forwards\n    to_model = to_state.render().get_model(app_label, self.model_name)\nAttributeError: 'ProjectState' object has no attribute 'render'\n```\n\ndjango 1.8, python3. thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/51", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/51/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/51/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/51", "id": 78887791, "node_id": "MDU6SXNzdWU3ODg4Nzc5MQ==", "number": 51, "title": "RemovedInDjango19Warning", "user": {"login": "jspitzen", "id": 6212844, "node_id": "MDQ6VXNlcjYyMTI4NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6212844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jspitzen", "html_url": "https://github.com/jspitzen", "followers_url": "https://api.github.com/users/jspitzen/followers", "following_url": "https://api.github.com/users/jspitzen/following{/other_user}", "gists_url": "https://api.github.com/users/jspitzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jspitzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jspitzen/subscriptions", "organizations_url": "https://api.github.com/users/jspitzen/orgs", "repos_url": "https://api.github.com/users/jspitzen/repos", "events_url": "https://api.github.com/users/jspitzen/events{/privacy}", "received_events_url": "https://api.github.com/users/jspitzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/milestones/1", "html_url": "https://github.com/jazzband/django-sortedm2m/milestone/1", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/milestones/1/labels", "id": 1122906, "node_id": "MDk6TWlsZXN0b25lMTEyMjkwNg==", "number": 1, "title": "0.10.0", "description": "", "creator": {"login": "gregmuellegger", "id": 88278, "node_id": "MDQ6VXNlcjg4Mjc4", "avatar_url": "https://avatars3.githubusercontent.com/u/88278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregmuellegger", "html_url": "https://github.com/gregmuellegger", "followers_url": "https://api.github.com/users/gregmuellegger/followers", "following_url": "https://api.github.com/users/gregmuellegger/following{/other_user}", "gists_url": "https://api.github.com/users/gregmuellegger/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregmuellegger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregmuellegger/subscriptions", "organizations_url": "https://api.github.com/users/gregmuellegger/orgs", "repos_url": "https://api.github.com/users/gregmuellegger/repos", "events_url": "https://api.github.com/users/gregmuellegger/events{/privacy}", "received_events_url": "https://api.github.com/users/gregmuellegger/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2015-05-21T09:31:22Z", "updated_at": "2015-05-21T22:32:41Z", "due_on": null, "closed_at": "2015-05-21T22:32:41Z"}, "comments": 3, "created_at": "2015-05-21T08:23:13Z", "updated_at": "2015-05-21T22:33:33Z", "closed_at": "2015-05-21T08:32:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When adding a related item (in my example a choice to a multiplechoice question:\n\n```\n>>> q.choices.add(c)\n/home/jorick/.virtualenvs/allianz/lib/python3.4/site-packages/sortedm2m/fields.py:88: RemovedInDjango19Warning: django.db.models.get_model is deprecated.\n  model = models.get_model(klass._meta.app_label, name)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/50", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/50/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/50/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/50", "id": 78438026, "node_id": "MDU6SXNzdWU3ODQzODAyNg==", "number": 50, "title": "sort_value_field_name is not recognized / Django 1.8.1", "user": {"login": "chrko", "id": 309376, "node_id": "MDQ6VXNlcjMwOTM3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/309376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrko", "html_url": "https://github.com/chrko", "followers_url": "https://api.github.com/users/chrko/followers", "following_url": "https://api.github.com/users/chrko/following{/other_user}", "gists_url": "https://api.github.com/users/chrko/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrko/subscriptions", "organizations_url": "https://api.github.com/users/chrko/orgs", "repos_url": "https://api.github.com/users/chrko/repos", "events_url": "https://api.github.com/users/chrko/events{/privacy}", "received_events_url": "https://api.github.com/users/chrko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/milestones/1", "html_url": "https://github.com/jazzband/django-sortedm2m/milestone/1", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/milestones/1/labels", "id": 1122906, "node_id": "MDk6TWlsZXN0b25lMTEyMjkwNg==", "number": 1, "title": "0.10.0", "description": "", "creator": {"login": "gregmuellegger", "id": 88278, "node_id": "MDQ6VXNlcjg4Mjc4", "avatar_url": "https://avatars3.githubusercontent.com/u/88278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregmuellegger", "html_url": "https://github.com/gregmuellegger", "followers_url": "https://api.github.com/users/gregmuellegger/followers", "following_url": "https://api.github.com/users/gregmuellegger/following{/other_user}", "gists_url": "https://api.github.com/users/gregmuellegger/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregmuellegger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregmuellegger/subscriptions", "organizations_url": "https://api.github.com/users/gregmuellegger/orgs", "repos_url": "https://api.github.com/users/gregmuellegger/repos", "events_url": "https://api.github.com/users/gregmuellegger/events{/privacy}", "received_events_url": "https://api.github.com/users/gregmuellegger/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2015-05-21T09:31:22Z", "updated_at": "2015-05-21T22:32:41Z", "due_on": null, "closed_at": "2015-05-21T22:32:41Z"}, "comments": 3, "created_at": "2015-05-20T08:55:31Z", "updated_at": "2015-05-21T22:00:22Z", "closed_at": "2015-05-21T22:00:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nI don't get the option `sort_value_field_name` persited to migrations and adding manually also does not recognize it.\n\nmodel:\n\n``` python\nnodes = SortedManyToManyField(Node, sort_value_field_name='order')\n```\n\nmigration:\n\n``` python\nmigrations.AddField(\n    model_name='location',\n    name='nodes',\n    field=sortedm2m.fields.SortedManyToManyField(to='campus.Node', help_text=None, sort_value_field_name='order'),\n),\n```\n\nI got lost in the process of \"Rendering model states\u2026\" I think.\n\nI run ./manage.py migrate in pycharm with debugging and break point in my subclass implementing the new hook of #49.\nThe function called three times. First run perfect (I think this is registering in the app), second and third run shows `attrs['_sort_field_name'] = 'sort_value'` in the calling stack of rendering state in the migration?!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/49", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/49/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/49/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/49", "id": 78206191, "node_id": "MDU6SXNzdWU3ODIwNjE5MQ==", "number": 49, "title": "Unique over the three values", "user": {"login": "chrko", "id": 309376, "node_id": "MDQ6VXNlcjMwOTM3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/309376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrko", "html_url": "https://github.com/chrko", "followers_url": "https://api.github.com/users/chrko/followers", "following_url": "https://api.github.com/users/chrko/following{/other_user}", "gists_url": "https://api.github.com/users/chrko/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrko/subscriptions", "organizations_url": "https://api.github.com/users/chrko/orgs", "repos_url": "https://api.github.com/users/chrko/repos", "events_url": "https://api.github.com/users/chrko/events{/privacy}", "received_events_url": "https://api.github.com/users/chrko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/milestones/1", "html_url": "https://github.com/jazzband/django-sortedm2m/milestone/1", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/milestones/1/labels", "id": 1122906, "node_id": "MDk6TWlsZXN0b25lMTEyMjkwNg==", "number": 1, "title": "0.10.0", "description": "", "creator": {"login": "gregmuellegger", "id": 88278, "node_id": "MDQ6VXNlcjg4Mjc4", "avatar_url": "https://avatars3.githubusercontent.com/u/88278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregmuellegger", "html_url": "https://github.com/gregmuellegger", "followers_url": "https://api.github.com/users/gregmuellegger/followers", "following_url": "https://api.github.com/users/gregmuellegger/following{/other_user}", "gists_url": "https://api.github.com/users/gregmuellegger/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregmuellegger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregmuellegger/subscriptions", "organizations_url": "https://api.github.com/users/gregmuellegger/orgs", "repos_url": "https://api.github.com/users/gregmuellegger/repos", "events_url": "https://api.github.com/users/gregmuellegger/events{/privacy}", "received_events_url": "https://api.github.com/users/gregmuellegger/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 3, "state": "closed", "created_at": "2015-05-21T09:31:22Z", "updated_at": "2015-05-21T22:32:41Z", "due_on": null, "closed_at": "2015-05-21T22:32:41Z"}, "comments": 6, "created_at": "2015-05-19T18:45:40Z", "updated_at": "2015-05-21T19:44:34Z", "closed_at": "2015-05-21T09:29:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In my current project I have the problem that I want the unique index over the three columns `(from_, to, field.sort_value_field_name)` in generated through model which is currently specified fix: [53322c4a[\u2026]/sortedm2m/fields.py#L74](https://github.com/gregmuellegger/django-sortedm2m/blob/5322c4a8a7680d60f6cbe6401d2bf7953273abd8/sortedm2m/fields.py#L74)\n\nWhat should I do in this case?\n\nShould be there an option `three_column_unique`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/46", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/46/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/46/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/46", "id": 59011089, "node_id": "MDU6SXNzdWU1OTAxMTA4OQ==", "number": 46, "title": "using raw_id_fields, ordering cannot be changed", "user": {"login": "smcoll", "id": 321438, "node_id": "MDQ6VXNlcjMyMTQzOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/321438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smcoll", "html_url": "https://github.com/smcoll", "followers_url": "https://api.github.com/users/smcoll/followers", "following_url": "https://api.github.com/users/smcoll/following{/other_user}", "gists_url": "https://api.github.com/users/smcoll/gists{/gist_id}", "starred_url": "https://api.github.com/users/smcoll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smcoll/subscriptions", "organizations_url": "https://api.github.com/users/smcoll/orgs", "repos_url": "https://api.github.com/users/smcoll/repos", "events_url": "https://api.github.com/users/smcoll/events{/privacy}", "received_events_url": "https://api.github.com/users/smcoll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-02-26T03:08:17Z", "updated_at": "2015-03-02T08:33:53Z", "closed_at": "2015-03-02T08:33:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "i have a SortedManyToManyField listed in my ModelAdmin's raw_id_fields.  Adding and removing IDs works perfectly, but changing the order of the IDs does not work; when the form is saved, the original sort order is retained.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/45", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/45/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/45/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/45", "id": 56285036, "node_id": "MDU6SXNzdWU1NjI4NTAzNg==", "number": 45, "title": "IntegrityError when migrating model", "user": {"login": "rolandgeider", "id": 2280729, "node_id": "MDQ6VXNlcjIyODA3Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2280729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rolandgeider", "html_url": "https://github.com/rolandgeider", "followers_url": "https://api.github.com/users/rolandgeider/followers", "following_url": "https://api.github.com/users/rolandgeider/following{/other_user}", "gists_url": "https://api.github.com/users/rolandgeider/gists{/gist_id}", "starred_url": "https://api.github.com/users/rolandgeider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rolandgeider/subscriptions", "organizations_url": "https://api.github.com/users/rolandgeider/orgs", "repos_url": "https://api.github.com/users/rolandgeider/repos", "events_url": "https://api.github.com/users/rolandgeider/events{/privacy}", "received_events_url": "https://api.github.com/users/rolandgeider/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-02-02T19:58:13Z", "updated_at": "2015-02-06T14:43:49Z", "closed_at": "2015-02-06T14:43:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Perhaps I am missing something very obvious, but after migrating an existing m2m to a sorted m2m I get an IntegrityError (development setup, so using sqlite)\n\n```\ndjango.db.utils.IntegrityError: NOT NULL constraint failed: manager_set_exercises__new.sort_value\n```\n\nShouldn't `make_sort_by_field` in operations.py add a sort field with a default?\n\n`field = models.IntegerField(name=SORT_VALUE_FIELD_NAME, default=1)`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/44", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/44/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/44/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/44", "id": 56202548, "node_id": "MDU6SXNzdWU1NjIwMjU0OA==", "number": 44, "title": "Migrations are broken in Django 1.7.4", "user": {"login": "outime", "id": 62993, "node_id": "MDQ6VXNlcjYyOTkz", "avatar_url": "https://avatars2.githubusercontent.com/u/62993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/outime", "html_url": "https://github.com/outime", "followers_url": "https://api.github.com/users/outime/followers", "following_url": "https://api.github.com/users/outime/following{/other_user}", "gists_url": "https://api.github.com/users/outime/gists{/gist_id}", "starred_url": "https://api.github.com/users/outime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/outime/subscriptions", "organizations_url": "https://api.github.com/users/outime/orgs", "repos_url": "https://api.github.com/users/outime/repos", "events_url": "https://api.github.com/users/outime/events{/privacy}", "received_events_url": "https://api.github.com/users/outime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-02T06:57:30Z", "updated_at": "2015-02-02T10:55:18Z", "closed_at": "2015-02-02T10:55:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've just upgraded from Django 1.7.1 to Django 1.7.4 straight. There was one issue in the Django project (check https://code.djangoproject.com/ticket/24104) which was making some other app to break when running migrations with SQLite at least (typically used in tests).\n\nI tried to run the tests in Django 1.7.3 and django-sortedm2m fields were fine, so it can very well be related with that issue. Hopefully this is enough to address the problem quickly.\n\nHere is the traceback:\n\n```\nRunning migrations:\n\n  Applying a.0001_initial... OK\n\n  Applying b.0001_initial... OK\n\n  (...)\n\n  Applying c.0001_initial... OK\n\n  Applying c.0002_auto_20141110_1027...Traceback (most recent call last):\n\n  File \"manage.py\", line 9, in <module>\n\n    execute_from_command_line(sys.argv)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 385, in execute_from_command_line\n\n    utility.execute()\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 377, in execute\n\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/core/management/commands/test.py\", line 50, in run_from_argv\n\n    super(Command, self).run_from_argv(argv)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/core/management/base.py\", line 288, in run_from_argv\n\n    self.execute(*args, **options.__dict__)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/core/management/commands/test.py\", line 71, in execute\n\n    super(Command, self).execute(*args, **options)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/core/management/base.py\", line 338, in execute\n\n    output = self.handle(*args, **options)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/core/management/commands/test.py\", line 88, in handle\n\n    failures = test_runner.run_tests(test_labels)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/test/runner.py\", line 147, in run_tests\n\n    old_config = self.setup_databases()\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/test/runner.py\", line 109, in setup_databases\n\n    return setup_databases(self.verbosity, self.interactive, **kwargs)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/test/runner.py\", line 299, in setup_databases\n\n    serialize=connection.settings_dict.get(\"TEST\", {}).get(\"SERIALIZE\", True),\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/db/backends/creation.py\", line 377, in create_test_db\n\n    test_flush=True,\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 115, in call_command\n\n    return klass.execute(*args, **defaults)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/core/management/base.py\", line 338, in execute\n\n    output = self.handle(*args, **options)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/core/management/commands/migrate.py\", line 161, in handle\n\n    executor.migrate(targets, plan, fake=options.get(\"fake\", False))\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 68, in migrate\n\n    self.apply_migration(migration, fake=fake)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 102, in apply_migration\n\n    migration.apply(project_state, schema_editor)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/db/migrations/migration.py\", line 108, in apply\n\n    operation.database_forwards(self.app_label, schema_editor, project_state, new_state)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/db/migrations/operations/fields.py\", line 37, in database_forwards\n\n    field,\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/db/backends/sqlite3/schema.py\", line 176, in add_field\n\n    self._remake_table(model, create_fields=[field])\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/db/backends/sqlite3/schema.py\", line 144, in _remake_table\n\n    self.quote_name(model._meta.db_table),\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/db/backends/schema.py\", line 102, in execute\n\n    cursor.execute(sql, params)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 65, in execute\n\n    return self.cursor.execute(sql, params)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/db/utils.py\", line 94, in __exit__\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 65, in execute\n\n    return self.cursor.execute(sql, params)\n\n  File \"/home/user/virtualenv/local/lib/python2.7/site-packages/django/db/backends/sqlite3/base.py\", line 485, in execute\n\n    return Database.Cursor.execute(self, query, params)\n\ndjango.db.utils.OperationalError: table shop_shop__new has no column named shop_actions\n```\n\n`shop_actions` is a sortedm2m field and is the only type of field breaking. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/43", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/43/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/43/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/43", "id": 55764074, "node_id": "MDU6SXNzdWU1NTc2NDA3NA==", "number": 43, "title": "Django Migrations no longer work with Django 1.7.4", "user": {"login": "mkoistinen", "id": 615759, "node_id": "MDQ6VXNlcjYxNTc1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/615759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkoistinen", "html_url": "https://github.com/mkoistinen", "followers_url": "https://api.github.com/users/mkoistinen/followers", "following_url": "https://api.github.com/users/mkoistinen/following{/other_user}", "gists_url": "https://api.github.com/users/mkoistinen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkoistinen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkoistinen/subscriptions", "organizations_url": "https://api.github.com/users/mkoistinen/orgs", "repos_url": "https://api.github.com/users/mkoistinen/repos", "events_url": "https://api.github.com/users/mkoistinen/events{/privacy}", "received_events_url": "https://api.github.com/users/mkoistinen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-01-28T14:41:58Z", "updated_at": "2015-01-30T14:15:24Z", "closed_at": "2015-01-29T13:46:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a simple model that uses latest PyPI release of SortedM2M. Django migrations work with Django 1.7.3, but not with Django 1.7.4. I'm pretty sure this is why: https://code.djangoproject.com/ticket/24104, or possibly this one: https://code.djangoproject.com/ticket/24135\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/41", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/41/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/41/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/41", "id": 50080103, "node_id": "MDU6SXNzdWU1MDA4MDEwMw==", "number": 41, "title": "South migrations broken in >= 0.8.0", "user": {"login": "cheif", "id": 678919, "node_id": "MDQ6VXNlcjY3ODkxOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/678919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cheif", "html_url": "https://github.com/cheif", "followers_url": "https://api.github.com/users/cheif/followers", "following_url": "https://api.github.com/users/cheif/following{/other_user}", "gists_url": "https://api.github.com/users/cheif/gists{/gist_id}", "starred_url": "https://api.github.com/users/cheif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cheif/subscriptions", "organizations_url": "https://api.github.com/users/cheif/orgs", "repos_url": "https://api.github.com/users/cheif/repos", "events_url": "https://api.github.com/users/cheif/events{/privacy}", "received_events_url": "https://api.github.com/users/cheif/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-25T20:33:52Z", "updated_at": "2015-02-02T14:13:49Z", "closed_at": "2015-02-02T14:13:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there.\n\nIt seems like migrations using south (On django 1.6 in my case) broke with the 0.8.0 release, manually verified through bisecting, haven't gotten through to finding the exact commit.\n\nAnyway, my migration looks something like:\n\n``` python\ndef forwards(self, orm):\n    ParentModel = orm.ParentModel\n    for o in ParentModel.objects.all():\n        o.sorted_m2m_field.add(o.old_field)\n```\n\nRunning this migration gives: \n\n``` python\n    o.sorted_m2m_field.add(o.old_field)\n  File \"/opt/src/env/local/lib/python2.7/site-packages/django/db/models/fields/related.py\", line 583, in add\n    self._add_items(self.source_field_name, self.target_field_name, *objs)\n  File \"/opt/src/env/local/lib/python2.7/site-packages/sortedm2m/fields.py\", line 226, in _add_items\n    with atomic(using=db, savepoint=False):\n  File \"/opt/src/env/local/lib/python2.7/site-packages/django/db/transaction.py\", line 251, in __enter__\n    \"The outermost 'atomic' block cannot use \"\ndjango.db.transaction.TransactionManagementError: The outermost 'atomic' block cannot use savepoint = False when autocommit is off.\n```\n\nI suppose this has something to do with incompatible changes between south and django1.7-style migrations, I will try to dig in a little further myself aswell.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/33", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/33/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/33/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/33", "id": 42927801, "node_id": "MDU6SXNzdWU0MjkyNzgwMQ==", "number": 33, "title": "[django 1.7 + postgres] Migrations doesn't seem to work", "user": {"login": "pathes", "id": 2782408, "node_id": "MDQ6VXNlcjI3ODI0MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2782408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pathes", "html_url": "https://github.com/pathes", "followers_url": "https://api.github.com/users/pathes/followers", "following_url": "https://api.github.com/users/pathes/following{/other_user}", "gists_url": "https://api.github.com/users/pathes/gists{/gist_id}", "starred_url": "https://api.github.com/users/pathes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pathes/subscriptions", "organizations_url": "https://api.github.com/users/pathes/orgs", "repos_url": "https://api.github.com/users/pathes/repos", "events_url": "https://api.github.com/users/pathes/events{/privacy}", "received_events_url": "https://api.github.com/users/pathes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-16T20:14:42Z", "updated_at": "2014-09-23T19:34:38Z", "closed_at": "2014-09-23T10:44:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "As a minimal example, I created `foo` app with `Photo` and `Gallery` models. Here's `models.py`:\n\n``` python\nfrom django.db import models\nfrom sortedm2m.fields import SortedManyToManyField\n\n\nclass Photo(models.Model):\n    name = models.CharField(max_length=50)\n\n\nclass Gallery(models.Model):\n    name = models.CharField(max_length=50)\n    photos = SortedManyToManyField(Photo)\n```\n\nThen, i've run `manage.py makemigrations foo`, which created `0001_initial.py`:\n\n``` python\n# -*- coding: utf-8 -*-\nfrom __future__ import unicode_literals\n\nfrom django.db import models, migrations\nimport sortedm2m.fields\n\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n    ]\n\n    operations = [\n        migrations.CreateModel(\n            name='Gallery',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=50)),\n            ],\n            options={\n            },\n            bases=(models.Model,),\n        ),\n        migrations.CreateModel(\n            name='Photo',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=50)),\n            ],\n            options={\n            },\n            bases=(models.Model,),\n        ),\n        migrations.AddField(\n            model_name='gallery',\n            name='photos',\n            field=sortedm2m.fields.SortedManyToManyField(to='foo.Photo', help_text=None),\n            preserve_default=True,\n        ),\n    ]\n```\n\nWhen I run `manage.py migrate foo`, I get a PostgreSQL error:\n\n```\npsycopg2.ProgrammingError: ERROR:  relation \"foo_gallery_photos\" does not exist\nLINE 1: SELECT COUNT(*) FROM \"foo_gallery_photos\"\n```\n\nCan you reproduce this error? If so, this is a critical issue, django 1.7 is already released as stable.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/32", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/32/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/32/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/32", "id": 41582604, "node_id": "MDU6SXNzdWU0MTU4MjYwNA==", "number": 32, "title": "Performance - browser freezes with 14k+ items", "user": {"login": "radeksvarz", "id": 6020891, "node_id": "MDQ6VXNlcjYwMjA4OTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6020891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radeksvarz", "html_url": "https://github.com/radeksvarz", "followers_url": "https://api.github.com/users/radeksvarz/followers", "following_url": "https://api.github.com/users/radeksvarz/following{/other_user}", "gists_url": "https://api.github.com/users/radeksvarz/gists{/gist_id}", "starred_url": "https://api.github.com/users/radeksvarz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radeksvarz/subscriptions", "organizations_url": "https://api.github.com/users/radeksvarz/orgs", "repos_url": "https://api.github.com/users/radeksvarz/repos", "events_url": "https://api.github.com/users/radeksvarz/events{/privacy}", "received_events_url": "https://api.github.com/users/radeksvarz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-31T09:48:53Z", "updated_at": "2014-10-08T20:21:52Z", "closed_at": "2014-10-08T20:21:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have tested sortedm2m with the Django 1.6.6 and Mezzanine 3.1.9 having 14000+ items in the m2m.\n\nThe admin page in Chrome starts to allocate too much memory 1,5+ GB then it is killed by browser.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/31", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/31/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/31/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/31", "id": 40405502, "node_id": "MDU6SXNzdWU0MDQwNTUwMg==", "number": 31, "title": "ProgrammingError or OperationalError?", "user": {"login": "richardbarran", "id": 94111, "node_id": "MDQ6VXNlcjk0MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/94111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardbarran", "html_url": "https://github.com/richardbarran", "followers_url": "https://api.github.com/users/richardbarran/followers", "following_url": "https://api.github.com/users/richardbarran/following{/other_user}", "gists_url": "https://api.github.com/users/richardbarran/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardbarran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardbarran/subscriptions", "organizations_url": "https://api.github.com/users/richardbarran/orgs", "repos_url": "https://api.github.com/users/richardbarran/repos", "events_url": "https://api.github.com/users/richardbarran/events{/privacy}", "received_events_url": "https://api.github.com/users/richardbarran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-08-16T07:06:35Z", "updated_at": "2014-09-23T22:30:32Z", "closed_at": "2014-08-16T21:46:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nI'm using django-sortedm2m in a project that I maintain: [django-photologue](https://github.com/jdriscoll/django-photologue). I think that I've found a bug related to django 1.7 migrations.\n\nDjango-photologue comes with its own Example Project (under folder `/example_project/`).\nIf I check out photologue, then setup this example project as per the README, in the\nfollowing environment:\n- Python 3.3\n- Django 1.7c2\n\nBy default the Example Project uses SQLite3 as a database; when I run the migrations,\nthe database is set up normally.\n\nIf I then edit `settings.py` to use Postgres as a database, and run the migrations for this\nnew database, I get the following error:\n\n```\n(photologue-3.3-1.7c2)vagrant@test2:~/projects/photologue/django-photologue/example_project$ ./manage.py migrate photologue \nOperations to perform:\n  Apply all migrations: photologue\nRunning migrations:\n  Applying photologue.0001_initial...Traceback (most recent call last):\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/backends/utils.py\", line 65, in execute\n    return self.cursor.execute(sql, params)\npsycopg2.ProgrammingError: relation \"photologue_gallery_photos\" does not exist\nLINE 1: SELECT COUNT(*) FROM \"photologue_gallery_photos\"\n                             ^\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"./manage.py\", line 14, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/core/management/__init__.py\", line 385, in execute_from_command_line\n    utility.execute()\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/core/management/__init__.py\", line 377, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/core/management/base.py\", line 288, in run_from_argv\n    self.execute(*args, **options.__dict__)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/core/management/base.py\", line 337, in execute\n    output = self.handle(*args, **options)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/core/management/commands/migrate.py\", line 160, in handle\n    executor.migrate(targets, plan, fake=options.get(\"fake\", False))\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/migrations/executor.py\", line 63, in migrate\n    self.apply_migration(migration, fake=fake)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/migrations/executor.py\", line 97, in apply_migration\n    migration.apply(project_state, schema_editor)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/migrations/migration.py\", line 107, in apply\n    operation.database_forwards(self.app_label, schema_editor, project_state, new_state)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/migrations/operations/fields.py\", line 37, in database_forwards\n    field,\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/backends/schema.py\", line 395, in add_field\n    return self.create_model(field.rel.through)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/backends/schema.py\", line 208, in create_model\n    definition, extra_params = self.column_sql(model, field)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/backends/schema.py\", line 120, in column_sql\n    default_value = self.effective_default(field)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/backends/schema.py\", line 170, in effective_default\n    default = field.get_default()\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/models/fields/__init__.py\", line 719, in get_default\n    return self.default()\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/utils/functional.py\", line 17, in _curried\n    return _curried_func(*(args + moreargs), **dict(kwargs, **morekwargs))\n  File \"/home/vagrant/projects/photologue/django-sortedm2m/sortedm2m/fields.py\", line 98, in default_sort_value\n    return model._default_manager.count()\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/models/manager.py\", line 92, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/models/query.py\", line 338, in count\n    return self.query.get_count(using=self.db)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/models/sql/query.py\", line 424, in get_count\n    number = obj.get_aggregation(using=using)[None]\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/models/sql/query.py\", line 390, in get_aggregation\n    result = query.get_compiler(using).execute_sql(SINGLE)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/models/sql/compiler.py\", line 785, in execute_sql\n    cursor.execute(sql, params)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/backends/utils.py\", line 81, in execute\n    return super(CursorDebugWrapper, self).execute(sql, params)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/backends/utils.py\", line 65, in execute\n    return self.cursor.execute(sql, params)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/utils.py\", line 94, in __exit__\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/utils/six.py\", line 549, in reraise\n    raise value.with_traceback(tb)\n  File \"/home/vagrant/.virtualenvs/photologue-3.3-1.7c2/lib/python3.3/site-packages/django/db/backends/utils.py\", line 65, in execute\n    return self.cursor.execute(sql, params)\ndjango.db.utils.ProgrammingError: relation \"photologue_gallery_photos\" does not exist\nLINE 1: SELECT COUNT(*) FROM \"photologue_gallery_photos\"\n                             ^\n(photologue-3.3-1.7c2)vagrant@test2:~/projects/photologue/django-photologue/example_project$\n```\n\nThe error is coming from sorted-m2m fields.py, line 98 - it's set up to trap `OperationalError` exceptions, but a `ProgrammingError` is raised instead.\n\nPlease let me know if I can supply any more relevant information.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/30", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/30/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/30/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/30", "id": 39350126, "node_id": "MDU6SXNzdWUzOTM1MDEyNg==", "number": 30, "title": "Provide ``save=False`` feature for autofixture", "user": {"login": "rotherfuchs", "id": 3027083, "node_id": "MDQ6VXNlcjMwMjcwODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3027083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rotherfuchs", "html_url": "https://github.com/rotherfuchs", "followers_url": "https://api.github.com/users/rotherfuchs/followers", "following_url": "https://api.github.com/users/rotherfuchs/following{/other_user}", "gists_url": "https://api.github.com/users/rotherfuchs/gists{/gist_id}", "starred_url": "https://api.github.com/users/rotherfuchs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rotherfuchs/subscriptions", "organizations_url": "https://api.github.com/users/rotherfuchs/orgs", "repos_url": "https://api.github.com/users/rotherfuchs/repos", "events_url": "https://api.github.com/users/rotherfuchs/events{/privacy}", "received_events_url": "https://api.github.com/users/rotherfuchs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-02T14:42:08Z", "updated_at": "2014-08-05T21:04:36Z", "closed_at": "2014-08-05T21:04:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be splendid if one could provide a `save` boolean when creating the fixture, to not save the test data immediately to the database. \n\nIn my case I'm using AutoFixture for test cases, and within the test_addData() TestCase I'd like to generate the data via autofixture, but the actual creation should be done by the functionality being tested.\n\nExample:\nfixture = AutoFixture(Data, field_values={'unique_id': '12345'})\nfixture.create(1, autosave=False)\n\nCheers\nFabian\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/29", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/29/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/29/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/29", "id": 36465409, "node_id": "MDU6SXNzdWUzNjQ2NTQwOQ==", "number": 29, "title": "1.7 Migration: RuntimeError: Conflicting 'gallery_photos' models in application 'my_app'", "user": {"login": "batisteo", "id": 2727048, "node_id": "MDQ6VXNlcjI3MjcwNDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2727048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/batisteo", "html_url": "https://github.com/batisteo", "followers_url": "https://api.github.com/users/batisteo/followers", "following_url": "https://api.github.com/users/batisteo/following{/other_user}", "gists_url": "https://api.github.com/users/batisteo/gists{/gist_id}", "starred_url": "https://api.github.com/users/batisteo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/batisteo/subscriptions", "organizations_url": "https://api.github.com/users/batisteo/orgs", "repos_url": "https://api.github.com/users/batisteo/repos", "events_url": "https://api.github.com/users/batisteo/events{/privacy}", "received_events_url": "https://api.github.com/users/batisteo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-06-25T10:10:39Z", "updated_at": "2014-06-26T14:39:04Z", "closed_at": "2014-06-25T22:38:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got a runtime error after creating Gallery and Photo models, and making migrations. I'm using Django 1.7b4.\nI hope it will help.\n\n```\n# my_project/my_app/models.py\n\nfrom django.db import models\nfrom django_extensions.db.models import TimeStampedModel\nfrom sortedm2m.fields import SortedManyToManyField\n\nclass Event(TimeStampedModel):\n    name = models.CharField(_(\"name\"), max_length=255, blank=True)\n    start = models.DateTimeField(_(\"start\"))\n    \u2026\n\n    class Meta:\n        verbose_name = _(\"event\")\n        verbose_name_plural = _(\"events\")\n\n    def __unicode__(self):\n        return self.name\n\n\nclass Gallery(TimeStampedModel):\n    event = models.OneToOneField('my_app.Event',\n            verbose_name=_(\"event\"), on_delete=models.PROTECT)\n    photos = SortedManyToManyField('my_app.Photo')\n\n    class Meta:\n        verbose_name = _(\"Gallery\")\n        verbose_name_plural = _(\"Galleries\")\n\n    def __unicode__(self):\n        name = self.event.name\n        start = self.event.start.strftime('%d %B %Y')\n        return name + \" (\" + start + \")\"\n\n\nclass Photo(TimeStampedModel):\n    legend = models.CharField(_(\"legend\"), max_length=255, blank=True)\n    image = models.ImageField(upload_to=\"photo/%Y/%m/\")\n\n    class Meta:\n        verbose_name = _(\"Photo\")\n        verbose_name_plural = _(\"Photos\")\n\n    def __unicode__(self):\n        return self.legend\n```\n\nAfter adding Gallery and Photo model class:\n\n```\n$ dj makemigrations my_app\n\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 427, in execute_from_command_line\n    utility.execute()\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 419, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 288, in run_from_argv\n    self.execute(*args, **options.__dict__)\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/core/management/base.py\", line 337, in execute\n    output = self.handle(*args, **options)\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/core/management/commands/makemigrations.py\", line 97, in handle\n    changes = autodetector.changes(graph=loader.graph, trim_to_apps=app_labels or None)\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/db/migrations/autodetector.py\", line 36, in changes\n    changes = self._detect_changes()\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/db/migrations/autodetector.py\", line 54, in _detect_changes\n    new_apps = self.to_state.render()\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/db/migrations/state.py\", line 64, in render\n    model.render(self.apps)\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/db/migrations/state.py\", line 270, in render\n    body,\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/db/models/base.py\", line 171, in __new__\n    new_class.add_to_class(obj_name, obj)\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/db/models/base.py\", line 303, in add_to_class\n    value.contribute_to_class(cls, name)\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/sortedm2m/fields.py\", line 247, in contribute_to_class\n    self.rel.through = create_sorted_many_to_many_intermediate_model(self, cls)\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/sortedm2m/fields.py\", line 73, in create_sorted_many_to_many_intermediate_model\n    '_to_field_name': to,\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/db/models/base.py\", line 289, in __new__\n    new_class._meta.apps.register_model(new_class._meta.app_label, new_class)\n  File \"/home/batisteo/my_project/env/local/lib/python2.7/site-packages/django/apps/registry.py\", line 201, in register_model\n    (model_name, app_label, app_models[model_name], model))\nRuntimeError: Conflicting 'gallery_photos' models in application 'my_app': <class 'my_app.models.Gallery_photos'> and <class 'Gallery_photos'>.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/25", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/25/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/25/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/25", "id": 34222194, "node_id": "MDU6SXNzdWUzNDIyMjE5NA==", "number": 25, "title": "Running the test suite?", "user": {"login": "brez", "id": 22939, "node_id": "MDQ6VXNlcjIyOTM5", "avatar_url": "https://avatars1.githubusercontent.com/u/22939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brez", "html_url": "https://github.com/brez", "followers_url": "https://api.github.com/users/brez/followers", "following_url": "https://api.github.com/users/brez/following{/other_user}", "gists_url": "https://api.github.com/users/brez/gists{/gist_id}", "starred_url": "https://api.github.com/users/brez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brez/subscriptions", "organizations_url": "https://api.github.com/users/brez/orgs", "repos_url": "https://api.github.com/users/brez/repos", "events_url": "https://api.github.com/users/brez/events{/privacy}", "received_events_url": "https://api.github.com/users/brez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-24T01:44:18Z", "updated_at": "2014-05-24T01:59:08Z", "closed_at": "2014-05-24T01:59:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried:\n\n```\n$ python runtest.py\n```\n\nBut got:\n\n```\nRuntimeError: App registry isn't ready yet.\n```\n\nAm am I just missing the obvious? how to run the suite?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/24", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/24/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/24/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/24", "id": 33979124, "node_id": "MDU6SXNzdWUzMzk3OTEyNA==", "number": 24, "title": "Support for Django 1.7", "user": {"login": "richardbarran", "id": 94111, "node_id": "MDQ6VXNlcjk0MTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/94111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardbarran", "html_url": "https://github.com/richardbarran", "followers_url": "https://api.github.com/users/richardbarran/followers", "following_url": "https://api.github.com/users/richardbarran/following{/other_user}", "gists_url": "https://api.github.com/users/richardbarran/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardbarran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardbarran/subscriptions", "organizations_url": "https://api.github.com/users/richardbarran/orgs", "repos_url": "https://api.github.com/users/richardbarran/repos", "events_url": "https://api.github.com/users/richardbarran/events{/privacy}", "received_events_url": "https://api.github.com/users/richardbarran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-05-21T12:52:58Z", "updated_at": "2014-06-27T13:59:07Z", "closed_at": "2014-06-25T22:36:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Django 1.7 will be released \"soon\"](https://www.djangoproject.com/weblog/2014/apr/10/getting-ready-django-17/) - in one week or one month, who knows! - and is feature-frozen, so we can start testing 3rd party applications against it.\n\nIt introduces a new database schema migration system, in replacement of South. This will mean quite a few changes for sortedm2m.\n\nAn interesting blog on supporting the new migrations system: http://treyhunner.com/2014/03/migrating-to-django-1-dot-7/\n\nBackground:\n\nI'm the maintainer of [django-photologue](https://github.com/jdriscoll/django-photologue), which depends on sortedm2m, and when I run Photologue's unit tests against Django 1.7 I get several errors such as:\n\n``` python\n======================================================================\nERROR: test_previous_gallery_mismatch (photologue.tests.test_photo.PreviousNextTest)\nPhoto does not belong to the gallery.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/vagrant/projects/photologue/django-photologue/example_project/../photologue/tests/test_photo.py\", line 116, in setUp\n    self.test_gallery.photos.add(self.pl1)\n  File \"/home/vagrant/.virtualenvs/photologue-2.7-1.7b/local/lib/python2.7/site-packages/django/db/models/fields/related.py\", line 915, in add\n    self._add_items(self.source_field_name, self.target_field_name, *objs)\n  File \"/home/vagrant/.virtualenvs/photologue-2.7-1.7b/local/lib/python2.7/site-packages/sortedm2m/fields.py\", line 163, in _add_items\n    source_field_name: self._fk_val,\n  File \"/home/vagrant/.virtualenvs/photologue-2.7-1.7b/local/lib/python2.7/site-packages/model_utils/managers.py\", line 245, in __getattr__\n    return getattr(self.get_queryset(), name)\nAttributeError: 'PhotoQuerySet' object has no attribute '_fk_val'\n```\n\nMy initial impression is that sortedm2m was relying on some internal (hidden) variable within Django in order to work, and that this non-public API has been changed.\n\nAt the moment I'm looking into other upgrade issues with Photologue. If/when I finish with these I might also be able to take a closer look at sortedm2m.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/22", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/22/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/22/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/22", "id": 32840521, "node_id": "MDU6SXNzdWUzMjg0MDUyMQ==", "number": 22, "title": "TypeError: Error when calling the metaclass bases", "user": {"login": "fbngrm", "id": 1113842, "node_id": "MDQ6VXNlcjExMTM4NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1113842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fbngrm", "html_url": "https://github.com/fbngrm", "followers_url": "https://api.github.com/users/fbngrm/followers", "following_url": "https://api.github.com/users/fbngrm/following{/other_user}", "gists_url": "https://api.github.com/users/fbngrm/gists{/gist_id}", "starred_url": "https://api.github.com/users/fbngrm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fbngrm/subscriptions", "organizations_url": "https://api.github.com/users/fbngrm/orgs", "repos_url": "https://api.github.com/users/fbngrm/repos", "events_url": "https://api.github.com/users/fbngrm/events{/privacy}", "received_events_url": "https://api.github.com/users/fbngrm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-05-05T20:08:00Z", "updated_at": "2014-05-06T16:23:31Z", "closed_at": "2014-05-06T16:23:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using South for migrations I get a TypeError when initializing:\n\n./manage.py schemamigration myapp --initial\n\nTypeError: Error when calling the metaclass bases\n    type() argument 1 must be string, not unicode\n\n```\nclass Photo(models.Model):\n    name = models.CharField(max_length=50)\n    image = models.ImageField(upload_to='...')\n\nclass Gallery(models.Model):\n    name = models.CharField(max_length=50)\n    photos = SortedManyToManyField(Photo)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/21", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/21/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/21/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/21", "id": 32609122, "node_id": "MDU6SXNzdWUzMjYwOTEyMg==", "number": 21, "title": "Limiting items count", "user": {"login": "tbazadaykin", "id": 6541960, "node_id": "MDQ6VXNlcjY1NDE5NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6541960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbazadaykin", "html_url": "https://github.com/tbazadaykin", "followers_url": "https://api.github.com/users/tbazadaykin/followers", "following_url": "https://api.github.com/users/tbazadaykin/following{/other_user}", "gists_url": "https://api.github.com/users/tbazadaykin/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbazadaykin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbazadaykin/subscriptions", "organizations_url": "https://api.github.com/users/tbazadaykin/orgs", "repos_url": "https://api.github.com/users/tbazadaykin/repos", "events_url": "https://api.github.com/users/tbazadaykin/events{/privacy}", "received_events_url": "https://api.github.com/users/tbazadaykin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-01T11:34:58Z", "updated_at": "2014-05-08T21:53:15Z", "closed_at": "2014-05-08T21:53:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is example from description:\n\n``` python\nfrom django.db import models\nfrom sortedm2m.fields import SortedManyToManyField\n\nclass Photo(models.Model):\n    name = models.CharField(max_length=50)\n    image = models.ImageField(upload_to='...')\n\nclass Gallery(models.Model):\n    name = models.CharField(max_length=50)\n    photos = SortedManyToManyField(Photo)\n```\n\nSo, what if `Photo` model contains 100,000 items. Will be generated 100,000 `<input type=\"checkbox\">` in admin interface? As shows my practice, this leads to hang the browser.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/20", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/20/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/20/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/20", "id": 30398551, "node_id": "MDU6SXNzdWUzMDM5ODU1MQ==", "number": 20, "title": "Admin inlines", "user": {"login": "vapkarian", "id": 1900211, "node_id": "MDQ6VXNlcjE5MDAyMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1900211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vapkarian", "html_url": "https://github.com/vapkarian", "followers_url": "https://api.github.com/users/vapkarian/followers", "following_url": "https://api.github.com/users/vapkarian/following{/other_user}", "gists_url": "https://api.github.com/users/vapkarian/gists{/gist_id}", "starred_url": "https://api.github.com/users/vapkarian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vapkarian/subscriptions", "organizations_url": "https://api.github.com/users/vapkarian/orgs", "repos_url": "https://api.github.com/users/vapkarian/repos", "events_url": "https://api.github.com/users/vapkarian/events{/privacy}", "received_events_url": "https://api.github.com/users/vapkarian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-03-28T15:52:30Z", "updated_at": "2015-01-09T14:23:23Z", "closed_at": "2015-01-09T14:23:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "If inline form contains sortedm2m field, drag-n-drop won't worked when I click \"Add another inline form\". How I can re-init this functionality? Also, I cannot change ordering of selected items without uncheking one of them, changing ordering and checking again.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/16", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/16/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/16/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/16", "id": 16113072, "node_id": "MDU6SXNzdWUxNjExMzA3Mg==", "number": 16, "title": "Not quite compatible with django-cms placeholders outside of the cms", "user": {"login": "mkoistinen", "id": 615759, "node_id": "MDQ6VXNlcjYxNTc1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/615759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkoistinen", "html_url": "https://github.com/mkoistinen", "followers_url": "https://api.github.com/users/mkoistinen/followers", "following_url": "https://api.github.com/users/mkoistinen/following{/other_user}", "gists_url": "https://api.github.com/users/mkoistinen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkoistinen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkoistinen/subscriptions", "organizations_url": "https://api.github.com/users/mkoistinen/orgs", "repos_url": "https://api.github.com/users/mkoistinen/repos", "events_url": "https://api.github.com/users/mkoistinen/events{/privacy}", "received_events_url": "https://api.github.com/users/mkoistinen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-27T20:41:24Z", "updated_at": "2014-10-08T20:23:05Z", "closed_at": "2014-10-08T20:23:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "All this is on Django 1.4.2, django-cms 2.3.3, sortedm2m 0.5.0\n\nI have a model that has 3 SortedManyToManyField and several PlaceholderFields (see: http://django-cms.readthedocs.org/en/2.3.3/extending_cms/placeholders.html#placeholders-outside-the-cms)\n\nI am using fieldsets in Admin and it seems that if block that contains my sortedm2m's comes before _all_ of the placeholder fieldset blocks (each can contain only a single Placeholder), then, jquery.ui.sortable throws a number of errors, beginning with:\n\n```\nUncaught TypeError: Cannot read property 'constructor' of undefined jquery.ui.sortable.js:467\n$.widget.$.extend._connectWith jquery.ui.sortable.js:467\n$.widget.$.extend._refreshItems jquery.ui.sortable.js:525\n$.widget.$.extend.refresh jquery.ui.sortable.js:461\n$.widget.$.extend._init jquery.ui.sortable.js:23\n$.Widget._createWidget jquery-ui.js:360\n$.(anonymous function).(anonymous function) jquery-ui.js:263\n(anonymous function) jquery-ui.js:323\njQuery.extend.each jquery.js:580\njQuery.fn.jQuery.each jquery.js:245\n$.fn.(anonymous function) jquery-ui.js:315\n(anonymous function) widget.js:24\njQuery.extend.each jquery.js:580\njQuery.fn.jQuery.each jquery.js:245\n(anonymous function) widget.js:7\njQuery.extend.ready jquery.js:392\nDOMContentLoaded jquery.js:745\n```\n\nOddly, if at least one of the Placeholder blocks comes before the block containing the sortedm2m's, it all happily co-exists.  I've tried changing up which ones come first, etc., and the only thing that helps, is when _there is at least one_ of the placeholder blocks first.\n\nIf it helps, here's what my fieldsets definition looks like:\n\n``` python\n\nclass MyModelAdmin(Placeholder):\n\n    ...  # other options\n\n    fieldsets = (\n        (None, {\n            'fields': (\n                ('name', 'slug', ),\n                ('start_date', 'end_date', 'location', ),\n                ('seat_price', 'num_seats', ),\n                'published',\n            ),\n        }),\n        # This is broken like this. it MUST follow at least ONE of the placeholder groups.\n        ('Speakers, Sponsors, Learn Options', {\n            'classes': ['collapse'],\n            'fields': (\n                'speakers',  # This is a sortedm2m\n                'sponsors',  # This is a sortedm2m\n                'learn_options',  # This is a sortedm2m\n            ),\n        }),\n        ('Detail Page Content', {\n            'classes': ['plugin-holder', 'plugin-holder-nopage'],\n            'fields': (\n                'description_ph',   # This is a Placeholder\n            ),\n        }),\n        ...  # More placeholder blocks\n    )\n```\n\nAlso, I tried removing the 'collapse' class from my sortedm2m's fieldset, it seems to make no difference either way.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/14", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/14/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/14/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/14", "id": 14892622, "node_id": "MDU6SXNzdWUxNDg5MjYyMg==", "number": 14, "title": "Remove URLs from PyPI per PEP 438", "user": {"login": "treyhunner", "id": 285352, "node_id": "MDQ6VXNlcjI4NTM1Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/285352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treyhunner", "html_url": "https://github.com/treyhunner", "followers_url": "https://api.github.com/users/treyhunner/followers", "following_url": "https://api.github.com/users/treyhunner/following{/other_user}", "gists_url": "https://api.github.com/users/treyhunner/gists{/gist_id}", "starred_url": "https://api.github.com/users/treyhunner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treyhunner/subscriptions", "organizations_url": "https://api.github.com/users/treyhunner/orgs", "repos_url": "https://api.github.com/users/treyhunner/repos", "events_url": "https://api.github.com/users/treyhunner/events{/privacy}", "received_events_url": "https://api.github.com/users/treyhunner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-05-29T14:29:43Z", "updated_at": "2013-05-29T17:06:09Z", "closed_at": "2013-05-29T17:06:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Problem discovered using [pep438](https://github.com/treyhunner/pep438) tool:\n\n```\n$ sudo pip install pep438\n$ pep438 django-sortedm2m\n\u2717 django-sortedm2m: 2 URLs\n```\n\nPage showing extra links: http://pypi-externals.caremad.io/django-sortedm2m/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/13", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/13/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/13/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/13", "id": 13668282, "node_id": "MDU6SXNzdWUxMzY2ODI4Mg==", "number": 13, "title": "Is important! required in widget.css?", "user": {"login": "JimBroad", "id": 1847791, "node_id": "MDQ6VXNlcjE4NDc3OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1847791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JimBroad", "html_url": "https://github.com/JimBroad", "followers_url": "https://api.github.com/users/JimBroad/followers", "following_url": "https://api.github.com/users/JimBroad/following{/other_user}", "gists_url": "https://api.github.com/users/JimBroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/JimBroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JimBroad/subscriptions", "organizations_url": "https://api.github.com/users/JimBroad/orgs", "repos_url": "https://api.github.com/users/JimBroad/repos", "events_url": "https://api.github.com/users/JimBroad/events{/privacy}", "received_events_url": "https://api.github.com/users/JimBroad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-04-26T00:18:14Z", "updated_at": "2014-10-08T20:22:15Z", "closed_at": "2014-10-08T20:22:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can make it someone troublesome to theme via css, just curious...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/12", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/12/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/12/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/12", "id": 13668198, "node_id": "MDU6SXNzdWUxMzY2ODE5OA==", "number": 12, "title": "widget.js adds sortedm2m class to too many ul's", "user": {"login": "JimBroad", "id": 1847791, "node_id": "MDQ6VXNlcjE4NDc3OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1847791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JimBroad", "html_url": "https://github.com/JimBroad", "followers_url": "https://api.github.com/users/JimBroad/followers", "following_url": "https://api.github.com/users/JimBroad/following{/other_user}", "gists_url": "https://api.github.com/users/JimBroad/gists{/gist_id}", "starred_url": "https://api.github.com/users/JimBroad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JimBroad/subscriptions", "organizations_url": "https://api.github.com/users/JimBroad/orgs", "repos_url": "https://api.github.com/users/JimBroad/repos", "events_url": "https://api.github.com/users/JimBroad/events{/privacy}", "received_events_url": "https://api.github.com/users/JimBroad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-04-26T00:15:26Z", "updated_at": "2014-10-08T20:29:02Z", "closed_at": "2014-10-08T20:29:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Very useful app...\n\nUsing 0.4.0,myself, but appears to be the same in latest.\n\nwidget.js\n7.        $('.sortedm2m').parents('ul').each(function () {\nI believe should be:\n7.        $('.sortedm2m').parents('ul:first').each(function () {\n\nhits further parents if its in nested ul.\n\nProbably does not affect many, but first parent really is what you are after in this case.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/7", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/7/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/7/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/7", "id": 7285953, "node_id": "MDU6SXNzdWU3Mjg1OTUz", "number": 7, "title": "South's --auto doesn't work for ManyToManyField -> SortedManyToManyField", "user": {"login": "akaihola", "id": 13725, "node_id": "MDQ6VXNlcjEzNzI1", "avatar_url": "https://avatars3.githubusercontent.com/u/13725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akaihola", "html_url": "https://github.com/akaihola", "followers_url": "https://api.github.com/users/akaihola/followers", "following_url": "https://api.github.com/users/akaihola/following{/other_user}", "gists_url": "https://api.github.com/users/akaihola/gists{/gist_id}", "starred_url": "https://api.github.com/users/akaihola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akaihola/subscriptions", "organizations_url": "https://api.github.com/users/akaihola/orgs", "repos_url": "https://api.github.com/users/akaihola/repos", "events_url": "https://api.github.com/users/akaihola/events{/privacy}", "received_events_url": "https://api.github.com/users/akaihola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2012-10-02T08:17:54Z", "updated_at": "2015-04-24T15:58:27Z", "closed_at": "2015-02-02T14:13:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I have a `Poll` model with a `questions = models.ManyToManyField(Question)`, and I change the field into a SortedManyToManyField, South doesn't detect the change:\n\n```\n$ ./manage.py schemamigration --auto polls\nNothing seems to have changed.\n```\n\nThis is Django pre-1.5, django-sortedm2m 0.4.0 and South 0.7.6.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/6", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/6/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/6/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/6", "id": 5455593, "node_id": "MDU6SXNzdWU1NDU1NTkz", "number": 6, "title": "Enhancement: Flag to allow duplicate model entries.", "user": {"login": "lgunsch", "id": 493645, "node_id": "MDQ6VXNlcjQ5MzY0NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/493645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgunsch", "html_url": "https://github.com/lgunsch", "followers_url": "https://api.github.com/users/lgunsch/followers", "following_url": "https://api.github.com/users/lgunsch/following{/other_user}", "gists_url": "https://api.github.com/users/lgunsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgunsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgunsch/subscriptions", "organizations_url": "https://api.github.com/users/lgunsch/orgs", "repos_url": "https://api.github.com/users/lgunsch/repos", "events_url": "https://api.github.com/users/lgunsch/events{/privacy}", "received_events_url": "https://api.github.com/users/lgunsch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-07-05T23:10:54Z", "updated_at": "2012-07-06T08:14:29Z", "closed_at": "2012-07-06T08:14:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIt would be great if having duplicate model entries in a `SortedManyToManyField` could be enabled. Perhaps an optional flag like say `allow_duplicates` that defaults to `False` could be used?\n\nCheers,\nLewis\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/3", "repository_url": "https://api.github.com/repos/jazzband/django-sortedm2m", "labels_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/3/comments", "events_url": "https://api.github.com/repos/jazzband/django-sortedm2m/issues/3/events", "html_url": "https://github.com/jazzband/django-sortedm2m/issues/3", "id": 4893286, "node_id": "MDU6SXNzdWU0ODkzMjg2", "number": 3, "title": "Broken in Django 1.4?", "user": {"login": "tylerball", "id": 73874, "node_id": "MDQ6VXNlcjczODc0", "avatar_url": "https://avatars3.githubusercontent.com/u/73874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tylerball", "html_url": "https://github.com/tylerball", "followers_url": "https://api.github.com/users/tylerball/followers", "following_url": "https://api.github.com/users/tylerball/following{/other_user}", "gists_url": "https://api.github.com/users/tylerball/gists{/gist_id}", "starred_url": "https://api.github.com/users/tylerball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tylerball/subscriptions", "organizations_url": "https://api.github.com/users/tylerball/orgs", "repos_url": "https://api.github.com/users/tylerball/repos", "events_url": "https://api.github.com/users/tylerball/events{/privacy}", "received_events_url": "https://api.github.com/users/tylerball/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-06-04T18:06:51Z", "updated_at": "2012-10-02T09:22:02Z", "closed_at": "2012-10-02T09:22:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting `__init__() got an unexpected keyword argument 'core_filters'` on Django 1.4\n\nFull traceback: http://dpaste.com/755220/\n", "performed_via_github_app": null, "score": 1.0}]}