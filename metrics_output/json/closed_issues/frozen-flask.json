{"total_count": 38, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/99", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/99/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/99/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/99", "id": 580631874, "node_id": "MDU6SXNzdWU1ODA2MzE4NzQ=", "number": 99, "title": "CI fails for Python 2.x versions and for PyPy", "user": {"login": "honzajavorek", "id": 283441, "node_id": "MDQ6VXNlcjI4MzQ0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/283441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzajavorek", "html_url": "https://github.com/honzajavorek", "followers_url": "https://api.github.com/users/honzajavorek/followers", "following_url": "https://api.github.com/users/honzajavorek/following{/other_user}", "gists_url": "https://api.github.com/users/honzajavorek/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzajavorek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzajavorek/subscriptions", "organizations_url": "https://api.github.com/users/honzajavorek/orgs", "repos_url": "https://api.github.com/users/honzajavorek/repos", "events_url": "https://api.github.com/users/honzajavorek/events{/privacy}", "received_events_url": "https://api.github.com/users/honzajavorek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-13T14:20:05Z", "updated_at": "2020-03-17T15:18:13Z", "closed_at": "2020-03-17T15:18:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Perhaps they removed the 2.x versions already? I've been searching the internet for a solution, but to no avail. It seems Flask itself [is using Azure pipelines](https://github.com/pallets/flask/blob/master/.azure-pipelines.yml), which still might have these available.\r\n\r\n@tswast if you think it is a good idea, I might try to migrate the project to [GitHub Actions](https://github.com/features/actions) or sth like that. Let me know! I think it's important to have the CI green as otherwise it inhibits contributions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/95", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/95/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/95/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/95", "id": 574548045, "node_id": "MDU6SXNzdWU1NzQ1NDgwNDU=", "number": 95, "title": "Compatibility with Python 3.9", "user": {"login": "honzajavorek", "id": 283441, "node_id": "MDQ6VXNlcjI4MzQ0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/283441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzajavorek", "html_url": "https://github.com/honzajavorek", "followers_url": "https://api.github.com/users/honzajavorek/followers", "following_url": "https://api.github.com/users/honzajavorek/following{/other_user}", "gists_url": "https://api.github.com/users/honzajavorek/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzajavorek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzajavorek/subscriptions", "organizations_url": "https://api.github.com/users/honzajavorek/orgs", "repos_url": "https://api.github.com/users/honzajavorek/repos", "events_url": "https://api.github.com/users/honzajavorek/events{/privacy}", "received_events_url": "https://api.github.com/users/honzajavorek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-03T09:59:24Z", "updated_at": "2020-03-16T15:43:00Z", "closed_at": "2020-03-16T15:43:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm getting following warnings:\r\n\r\n```\r\n/Users/honza/.local/share/virtualenvs/python.cz-s2NxYiyq/lib/python3.7/site-packages/flask_frozen/__init__.py:29\r\n  /Users/honza/.local/share/virtualenvs/python.cz-s2NxYiyq/lib/python3.7/site-packages/flask_frozen/__init__.py:29:\r\n  DeprecationWarning: Using or importing the ABCs from 'collections' instead\r\n  of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working\r\n    from collections import Mapping, namedtuple\r\n\r\ntests/views_test.py::test_get_involved_cs_renders_ordinary_issue\r\n  /Users/honza/.local/share/virtualenvs/python.cz-s2NxYiyq/lib/python3.7/site-packages/ics/icalendar.py:59:\r\n  DeprecationWarning: Using or importing the ABCs from 'collections' instead\r\n  of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working\r\n    elif isinstance(imports, collections.Iterable):\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/92", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/92/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/92/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/92", "id": 358920060, "node_id": "MDU6SXNzdWUzNTg5MjAwNjA=", "number": 92, "title": "Is there a way to get the freezing working with a modified APPLICATION_ROOT?", "user": {"login": "honzajavorek", "id": 283441, "node_id": "MDQ6VXNlcjI4MzQ0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/283441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzajavorek", "html_url": "https://github.com/honzajavorek", "followers_url": "https://api.github.com/users/honzajavorek/followers", "following_url": "https://api.github.com/users/honzajavorek/following{/other_user}", "gists_url": "https://api.github.com/users/honzajavorek/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzajavorek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzajavorek/subscriptions", "organizations_url": "https://api.github.com/users/honzajavorek/orgs", "repos_url": "https://api.github.com/users/honzajavorek/repos", "events_url": "https://api.github.com/users/honzajavorek/events{/privacy}", "received_events_url": "https://api.github.com/users/honzajavorek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-11T07:26:04Z", "updated_at": "2020-01-18T11:21:18Z", "closed_at": "2020-01-18T11:21:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When deploying the frozen website to GitHub Project Pages, it's not in the root of the domain, but on a path: `https://honzajavorek.github.io/project/`\r\n\r\nHow do I make the site in a way that it works correctly? I tried to set the `APPLICATION_ROOT` to `'/project'` according to this advice: https://stackoverflow.com/a/18967744/325365\r\n\r\n```\r\napp.config['APPLICATION_ROOT'] = '/project'\r\n```\r\n\r\nWhen I serve the site locally, it ignores the path and the development server seems to work correctly, but freezing for production just fails:\r\n\r\n```\r\nValueError: Unexpected status '404 NOT FOUND' on URL /map/static/icon.png\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/91", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/91/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/91/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/91", "id": 358281021, "node_id": "MDU6SXNzdWUzNTgyODEwMjE=", "number": 91, "title": ".geojson file extension gets recognized as application/octet-stream", "user": {"login": "honzajavorek", "id": 283441, "node_id": "MDQ6VXNlcjI4MzQ0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/283441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzajavorek", "html_url": "https://github.com/honzajavorek", "followers_url": "https://api.github.com/users/honzajavorek/followers", "following_url": "https://api.github.com/users/honzajavorek/following{/other_user}", "gists_url": "https://api.github.com/users/honzajavorek/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzajavorek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzajavorek/subscriptions", "organizations_url": "https://api.github.com/users/honzajavorek/orgs", "repos_url": "https://api.github.com/users/honzajavorek/repos", "events_url": "https://api.github.com/users/honzajavorek/events{/privacy}", "received_events_url": "https://api.github.com/users/honzajavorek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-08T09:48:53Z", "updated_at": "2018-09-11T07:20:59Z", "closed_at": "2018-09-11T07:20:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Should I serve it with `.json` or is there a better way to solve this?\r\n\r\n-----\r\n\r\nRelated to https://github.com/pyvec/elsa/issues/58", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/86", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/86/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/86/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/86", "id": 262277289, "node_id": "MDU6SXNzdWUyNjIyNzcyODk=", "number": 86, "title": "Feature request: more granular skipping with user-supplied filter function", "user": {"login": "zmwangx", "id": 4149852, "node_id": "MDQ6VXNlcjQxNDk4NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4149852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmwangx", "html_url": "https://github.com/zmwangx", "followers_url": "https://api.github.com/users/zmwangx/followers", "following_url": "https://api.github.com/users/zmwangx/following{/other_user}", "gists_url": "https://api.github.com/users/zmwangx/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmwangx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmwangx/subscriptions", "organizations_url": "https://api.github.com/users/zmwangx/orgs", "repos_url": "https://api.github.com/users/zmwangx/repos", "events_url": "https://api.github.com/users/zmwangx/events{/privacy}", "received_events_url": "https://api.github.com/users/zmwangx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 686469098, "node_id": "MDU6TGFiZWw2ODY0NjkwOTg=", "url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/labels/enhancement", "name": "enhancement", "color": "bfd4f2", "default": true, "description": null}, {"id": 528387633, "node_id": "MDU6TGFiZWw1MjgzODc2MzM=", "url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/labels/help%20wanted", "name": "help wanted", "color": "fbca04", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-03T01:23:03Z", "updated_at": "2017-11-16T23:38:50Z", "closed_at": "2017-11-16T23:38:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently Frozen-Flask either regenerates all files, or skips all existing files when `FREEZER_SKIP_EXISTING` is set to `True`. This poses a difficulty when part of the site is slow to generate but only needs to be generated once, while the rest of the site changes all the time (see example app below). It would be nice to be able to supply a filter function `skip(url, path) -> bool` to decide whether to skip a URL.\r\n\r\nPlease excuse me if this functionality is already possible.\r\n\r\n---\r\n\r\nExample app: Each day a new page for that day is added; this page is expensive to generate, but its content is fixed once generated. The index needs to be regenerated every time a new page is added. The whole site takes minutes to generate, but it really should take ~1s to generate what's new or changed.\r\n\r\n```py\r\n#!/usr/bin/env python3\r\n\r\nimport datetime\r\nimport time\r\n\r\nimport flask\r\n\r\n\r\napp = flask.Flask(__name__)\r\n\r\n\r\nINDEX_TEMPLATE = '''\\\r\n<html>\r\n<head><title>Days</title></head>\r\n<body>\r\n  <ul>\r\n    {% for date in dates -%}\r\n    <li><a href=\"{{ url_for('day', date=date) }}\">{{ date }}</a></li>\r\n    {% endfor -%}\r\n  </ul>\r\n</body>\r\n</html>\r\n'''\r\n\r\n\r\n@app.route('/')\r\ndef index():\r\n    date = datetime.date(2017, 1, 1)\r\n    dates = []\r\n    while date <= datetime.date.today():\r\n        dates.append(str(date))\r\n        date += datetime.timedelta(1)\r\n    return flask.render_template_string(INDEX_TEMPLATE, dates=dates)\r\n\r\n\r\n@app.route('/<date>.txt')\r\ndef day(date):\r\n    time.sleep(1)\r\n    return flask.Response(date, mimetype='text/plain')\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```\r\n\r\nA simple filter function would solve the problem:\r\n\r\n```py\r\ndef skip(url, path):\r\n    return url.endswith('.txt') and os.path.exists(os.path.join('build', path))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/82", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/82/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/82/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/82", "id": 247243598, "node_id": "MDU6SXNzdWUyNDcyNDM1OTg=", "number": 82, "title": "Best way to handle sessions?", "user": {"login": "owenbrown", "id": 1725390, "node_id": "MDQ6VXNlcjE3MjUzOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1725390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/owenbrown", "html_url": "https://github.com/owenbrown", "followers_url": "https://api.github.com/users/owenbrown/followers", "following_url": "https://api.github.com/users/owenbrown/following{/other_user}", "gists_url": "https://api.github.com/users/owenbrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/owenbrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/owenbrown/subscriptions", "organizations_url": "https://api.github.com/users/owenbrown/orgs", "repos_url": "https://api.github.com/users/owenbrown/repos", "events_url": "https://api.github.com/users/owenbrown/events{/privacy}", "received_events_url": "https://api.github.com/users/owenbrown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-02T00:57:26Z", "updated_at": "2017-08-02T16:54:54Z", "closed_at": "2017-08-02T16:54:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Our company purchases advertising to drive users to our site.\r\nWe love the durability and scalability of Frozen Flask.\r\nWe need to be able to to pass parameters in when a user lands on the site, cookie the user, and then pass the session_id associated with the user when the user ultimately clicks on an affiliate referral link. \r\nWhat is the best way to do this with Frozen Flask? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/76", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/76/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/76/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/76", "id": 220381584, "node_id": "MDU6SXNzdWUyMjAzODE1ODQ=", "number": 76, "title": "Should I expect Frozen-Flask to be slow?", "user": {"login": "hieu-n", "id": 6425119, "node_id": "MDQ6VXNlcjY0MjUxMTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6425119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hieu-n", "html_url": "https://github.com/hieu-n", "followers_url": "https://api.github.com/users/hieu-n/followers", "following_url": "https://api.github.com/users/hieu-n/following{/other_user}", "gists_url": "https://api.github.com/users/hieu-n/gists{/gist_id}", "starred_url": "https://api.github.com/users/hieu-n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hieu-n/subscriptions", "organizations_url": "https://api.github.com/users/hieu-n/orgs", "repos_url": "https://api.github.com/users/hieu-n/repos", "events_url": "https://api.github.com/users/hieu-n/events{/privacy}", "received_events_url": "https://api.github.com/users/hieu-n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-08T07:06:54Z", "updated_at": "2017-04-11T08:25:53Z", "closed_at": "2017-04-11T08:25:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "My flask site is a product catalog which has about 2000 products. I attempted to use Frozen-Flask to freeze my site. However, `freezer.freeze() ` seems to take forever to complete. Is it expected? Or there might be something wrong with my site.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/69", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/69/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/69/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/69", "id": 203286522, "node_id": "MDU6SXNzdWUyMDMyODY1MjI=", "number": 69, "title": "Feature Request : Skip existing files", "user": {"login": "Goutte", "id": 592545, "node_id": "MDQ6VXNlcjU5MjU0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/592545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Goutte", "html_url": "https://github.com/Goutte", "followers_url": "https://api.github.com/users/Goutte/followers", "following_url": "https://api.github.com/users/Goutte/following{/other_user}", "gists_url": "https://api.github.com/users/Goutte/gists{/gist_id}", "starred_url": "https://api.github.com/users/Goutte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Goutte/subscriptions", "organizations_url": "https://api.github.com/users/Goutte/orgs", "repos_url": "https://api.github.com/users/Goutte/repos", "events_url": "https://api.github.com/users/Goutte/events{/privacy}", "received_events_url": "https://api.github.com/users/Goutte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-26T03:43:56Z", "updated_at": "2017-01-26T22:14:54Z", "closed_at": "2017-01-26T22:14:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello !\r\n\r\nI'm generating a huge website (the generation can take several days, and yes I optimized it as best as I can) ; some pages are quite long to generate (about half a minute).\r\n\r\nI plan on adding more pages in the future, and I'd rather not re-generate everything every time.\r\nI know I can mess with my URL generators to hack that feature, but it's dirty and not good design. Besides, I have to guess what the output file's name will be, and frozen-flask already knows this internally.\r\n\r\nSo I'm suggesting a `FREEZER_SKIP_EXISTING` configuration option, defaulted to `False`. ~~Is this doable ?~~ Would you agree ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/61", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/61/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/61/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/61", "id": 173462878, "node_id": "MDU6SXNzdWUxNzM0NjI4Nzg=", "number": 61, "title": "Project maintenance", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-08-26T14:13:09Z", "updated_at": "2016-10-12T07:45:59Z", "closed_at": "2016-10-10T16:24:25Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi all,\n\nHaving moved on to other things, I\u2019m not interested in spending time on Frozen-Flask anymore. It has been effectively abandoned for some time. Still, there are a few open issues and pull requests and people occasionally file/submit new ones. The project needs a maintainer to live on, but it won\u2019t be me.\n\nI\u2019ve you\u2019d like to do this, comment here and I\u2019ll give you access on github and PyPI. (Please include your PyPI username in the comment.)\n\nCC people who have contributed pull requests: @tswast, @smbsimon, @MykolaBilyi, @mblayman, @aventurella, @singingwolfboy, @sodastsai, @mivade, @max-k, @HeyImAlex, @homeworkprod, @croach, @grayj, @vaus, @equalsraf, @benvinegar, @jokull, @amit-bansil, @rduplain.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/58", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/58/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/58/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/58", "id": 166607526, "node_id": "MDU6SXNzdWUxNjY2MDc1MjY=", "number": 58, "title": "Protected pages?", "user": {"login": "jredd", "id": 8050852, "node_id": "MDQ6VXNlcjgwNTA4NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8050852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jredd", "html_url": "https://github.com/jredd", "followers_url": "https://api.github.com/users/jredd/followers", "following_url": "https://api.github.com/users/jredd/following{/other_user}", "gists_url": "https://api.github.com/users/jredd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jredd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jredd/subscriptions", "organizations_url": "https://api.github.com/users/jredd/orgs", "repos_url": "https://api.github.com/users/jredd/repos", "events_url": "https://api.github.com/users/jredd/events{/privacy}", "received_events_url": "https://api.github.com/users/jredd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-20T15:16:53Z", "updated_at": "2016-08-28T01:44:32Z", "closed_at": "2016-08-28T01:44:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was looking into this module for archiving pages for audit purposes but the site i'm developing has protected pages. Is there any configuration settings that will allow frozen to still capture protected pages?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/57", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/57/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/57/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/57", "id": 153814108, "node_id": "MDU6SXNzdWUxNTM4MTQxMDg=", "number": 57, "title": "0.12 tag missing", "user": {"login": "vext01", "id": 604955, "node_id": "MDQ6VXNlcjYwNDk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/604955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vext01", "html_url": "https://github.com/vext01", "followers_url": "https://api.github.com/users/vext01/followers", "following_url": "https://api.github.com/users/vext01/following{/other_user}", "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}", "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vext01/subscriptions", "organizations_url": "https://api.github.com/users/vext01/orgs", "repos_url": "https://api.github.com/users/vext01/repos", "events_url": "https://api.github.com/users/vext01/events{/privacy}", "received_events_url": "https://api.github.com/users/vext01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-09T16:18:35Z", "updated_at": "2016-08-28T00:59:29Z", "closed_at": "2016-08-28T00:59:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/55", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/55/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/55/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/55", "id": 122090434, "node_id": "MDU6SXNzdWUxMjIwOTA0MzQ=", "number": 55, "title": "Sitemap.xml generation?", "user": {"login": "commadelimited", "id": 563460, "node_id": "MDQ6VXNlcjU2MzQ2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/563460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/commadelimited", "html_url": "https://github.com/commadelimited", "followers_url": "https://api.github.com/users/commadelimited/followers", "following_url": "https://api.github.com/users/commadelimited/following{/other_user}", "gists_url": "https://api.github.com/users/commadelimited/gists{/gist_id}", "starred_url": "https://api.github.com/users/commadelimited/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/commadelimited/subscriptions", "organizations_url": "https://api.github.com/users/commadelimited/orgs", "repos_url": "https://api.github.com/users/commadelimited/repos", "events_url": "https://api.github.com/users/commadelimited/events{/privacy}", "received_events_url": "https://api.github.com/users/commadelimited/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-14T17:28:31Z", "updated_at": "2015-12-15T13:16:56Z", "closed_at": "2015-12-15T13:16:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've raised a question about autogenerating a sitemap.xml file over on the FlatPages repo. I wondered if that perhaps should belong here instead:\nhttps://github.com/SimonSapin/Flask-FlatPages/issues/49\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/54", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/54/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/54/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/54", "id": 116742311, "node_id": "MDU6SXNzdWUxMTY3NDIzMTE=", "number": 54, "title": "Frozen-Flask and Flask-Classy", "user": {"login": "Julien76", "id": 1630303, "node_id": "MDQ6VXNlcjE2MzAzMDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1630303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julien76", "html_url": "https://github.com/Julien76", "followers_url": "https://api.github.com/users/Julien76/followers", "following_url": "https://api.github.com/users/Julien76/following{/other_user}", "gists_url": "https://api.github.com/users/Julien76/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julien76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julien76/subscriptions", "organizations_url": "https://api.github.com/users/Julien76/orgs", "repos_url": "https://api.github.com/users/Julien76/repos", "events_url": "https://api.github.com/users/Julien76/events{/privacy}", "received_events_url": "https://api.github.com/users/Julien76/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-13T10:30:34Z", "updated_at": "2016-05-12T09:51:26Z", "closed_at": "2016-05-12T09:51:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm setting a website using Flask-Classy and Frozen-Flask, but I fail to understand how can i link the two:\nHow frozen-flask generator should be configure to work with flask-classy?\n\nFor example, I have this Flask-Classy view:\n\n```\nclass FooView(FlaskView):\n    def bar(self, something):\n        return render_template('bar.html', something=something)\n```\n\nMy url is then:\n\n```\n/foo/bar/<something>\n```\n\nHow should I write the Frozen-Flask generator:\n\n```\n@freezer.register_generator\ndef XXX():\n    for s in something_db:\n        yield {'something': something}\n```\n\nI fail to name properly XXX. Of course I could try forcing flask-classy to use a defined endpoint, but I would  loose one of the advantage of flask-classy.\n\nThanks in advance for your help.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/53", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/53/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/53/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/53", "id": 103515944, "node_id": "MDU6SXNzdWUxMDM1MTU5NDQ=", "number": 53, "title": "Frozen-Flask and Flask-Bable(ex)", "user": {"login": "matrixise", "id": 38737, "node_id": "MDQ6VXNlcjM4NzM3", "avatar_url": "https://avatars2.githubusercontent.com/u/38737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matrixise", "html_url": "https://github.com/matrixise", "followers_url": "https://api.github.com/users/matrixise/followers", "following_url": "https://api.github.com/users/matrixise/following{/other_user}", "gists_url": "https://api.github.com/users/matrixise/gists{/gist_id}", "starred_url": "https://api.github.com/users/matrixise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matrixise/subscriptions", "organizations_url": "https://api.github.com/users/matrixise/orgs", "repos_url": "https://api.github.com/users/matrixise/repos", "events_url": "https://api.github.com/users/matrixise/events{/privacy}", "received_events_url": "https://api.github.com/users/matrixise/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-27T13:55:50Z", "updated_at": "2016-08-26T14:01:23Z", "closed_at": "2016-08-26T14:01:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\n\nIf we use Babel, we have to define a localeselector function where we will use the right locale in function of the parameters of the browser. But in the case of Frozen-Flask, how can we simulate the selection of a language ? For example, french or english ?\n\nThe reason, I would like to freeze an i18n website.\n\nIs it possible? I don't have a code to explain, but it's just a question.\n\nThank you,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/52", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/52/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/52/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/52", "id": 99029036, "node_id": "MDU6SXNzdWU5OTAyOTAzNg==", "number": 52, "title": "Static files cause error during freezing after switching to Python 3", "user": {"login": "Markus00000", "id": 985977, "node_id": "MDQ6VXNlcjk4NTk3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/985977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Markus00000", "html_url": "https://github.com/Markus00000", "followers_url": "https://api.github.com/users/Markus00000/followers", "following_url": "https://api.github.com/users/Markus00000/following{/other_user}", "gists_url": "https://api.github.com/users/Markus00000/gists{/gist_id}", "starred_url": "https://api.github.com/users/Markus00000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Markus00000/subscriptions", "organizations_url": "https://api.github.com/users/Markus00000/orgs", "repos_url": "https://api.github.com/users/Markus00000/repos", "events_url": "https://api.github.com/users/Markus00000/events{/privacy}", "received_events_url": "https://api.github.com/users/Markus00000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-08-04T18:24:41Z", "updated_at": "2015-08-06T03:24:53Z", "closed_at": "2015-08-06T03:24:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "After switching to Python 3 this error occurs for every file in `/static/`:\n\n```\nTraceback (most recent call last):\n  File \"site.py\", line 621, in <module>\n    freezer.freeze()\n  File \"/home/me/dev/site/lib/python3.4/site-packages/flask_frozen/__init__.py\", line 149, in freeze\n    new_filename = self._build_one(url)\n  File \"/home/me/dev/site/lib/python3.4/site-packages/flask_frozen/__init__.py\", line 257, in _build_one\n    base_url=base_url)\n  File \"/home/me/dev/site/lib/python3.4/site-packages/werkzeug/test.py\", line 774, in get\n    return self.open(*args, **kw)\n  File \"/home/me/dev/site/lib/python3.4/site-packages/flask/testing.py\", line 108, in open\n    follow_redirects=follow_redirects)\n  File \"/home/me/dev/site/lib/python3.4/site-packages/werkzeug/test.py\", line 742, in open\n    response = self.run_wsgi_app(environ, buffered=buffered)\n  File \"/home/me/dev/site/lib/python3.4/site-packages/werkzeug/test.py\", line 661, in run_wsgi_app\n    self.cookie_jar.extract_wsgi(environ, rv[2])\n  File \"/home/me/dev/site/lib/python3.4/site-packages/werkzeug/test.py\", line 187, in extract_wsgi\n    U2Request(get_current_url(environ)),\n  File \"/usr/lib64/python3.4/urllib/request.py\", line 266, in __init__\n    self.full_url = url\n  File \"/usr/lib64/python3.4/urllib/request.py\", line 292, in full_url\n    self._parse()\n  File \"/usr/lib64/python3.4/urllib/request.py\", line 321, in _parse\n    raise ValueError(\"unknown url type: %r\" % self.full_url)\nValueError: unknown url type: ':///static/zipped.zip'\n```\n\nI am using this setting:\n\n```\napp.config['FREEZER_BASE_URL'] = '/'\n```\n\nNot setting `FREEZER_BASE_URL` resolves the error.\n\nI tried the current git version of Frozen-Flask with the same result.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/51", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/51/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/51/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/51", "id": 95945955, "node_id": "MDU6SXNzdWU5NTk0NTk1NQ==", "number": 51, "title": "test suite is locale dependent - breaks on non enlish locale", "user": {"login": "oorestisime", "id": 3874836, "node_id": "MDQ6VXNlcjM4NzQ4MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3874836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oorestisime", "html_url": "https://github.com/oorestisime", "followers_url": "https://api.github.com/users/oorestisime/followers", "following_url": "https://api.github.com/users/oorestisime/following{/other_user}", "gists_url": "https://api.github.com/users/oorestisime/gists{/gist_id}", "starred_url": "https://api.github.com/users/oorestisime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oorestisime/subscriptions", "organizations_url": "https://api.github.com/users/oorestisime/orgs", "repos_url": "https://api.github.com/users/oorestisime/repos", "events_url": "https://api.github.com/users/oorestisime/events{/privacy}", "received_events_url": "https://api.github.com/users/oorestisime/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-07-19T20:22:18Z", "updated_at": "2015-07-20T07:34:36Z", "closed_at": "2015-07-20T06:13:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nThanks for the great work in frozen-flask. I have found an error in the test suite due to some locale configuration. \nWhen my locale is set to en_US.UTF-8 the test suite works perfectly fine. On the other hand when it is set to fr_CH.UTF-8 then 60 tests fail because of this same error:\n\n```\nfrozen-flask/frozen-flask-0.11/flask_frozen/__init__.py\", line 287, in _build_one\n    if not os.path.isdir(dirname):\n  File \"/usr/lib/python3.4/genericpath.py\", line 42, in isdir\n    st = os.stat(s)\nUnicodeEncodeError: 'ascii' codec can't encode character '\\xf8' in position 25: ordinal not in range(128)\n```\n\nIt seems to me that there are some issues with the UTF-8 support. I can bypass that error by utf-encoding the dirname but then other glitches arise.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/49", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/49/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/49/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/49", "id": 86091527, "node_id": "MDU6SXNzdWU4NjA5MTUyNw==", "number": 49, "title": "New release", "user": {"login": "tanzaho", "id": 2247438, "node_id": "MDQ6VXNlcjIyNDc0Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2247438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanzaho", "html_url": "https://github.com/tanzaho", "followers_url": "https://api.github.com/users/tanzaho/followers", "following_url": "https://api.github.com/users/tanzaho/following{/other_user}", "gists_url": "https://api.github.com/users/tanzaho/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanzaho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanzaho/subscriptions", "organizations_url": "https://api.github.com/users/tanzaho/orgs", "repos_url": "https://api.github.com/users/tanzaho/repos", "events_url": "https://api.github.com/users/tanzaho/events{/privacy}", "received_events_url": "https://api.github.com/users/tanzaho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-08T08:57:12Z", "updated_at": "2016-08-28T02:17:05Z", "closed_at": "2016-08-28T02:17:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Simon,\n\nWhat about a new official release, so that the Pypi repo reflects better the Github one ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/46", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/46/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/46/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/46", "id": 60745641, "node_id": "MDU6SXNzdWU2MDc0NTY0MQ==", "number": 46, "title": "CLI freezer", "user": {"login": "calvin", "id": 5280, "node_id": "MDQ6VXNlcjUyODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calvin", "html_url": "https://github.com/calvin", "followers_url": "https://api.github.com/users/calvin/followers", "following_url": "https://api.github.com/users/calvin/following{/other_user}", "gists_url": "https://api.github.com/users/calvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/calvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calvin/subscriptions", "organizations_url": "https://api.github.com/users/calvin/orgs", "repos_url": "https://api.github.com/users/calvin/repos", "events_url": "https://api.github.com/users/calvin/events{/privacy}", "received_events_url": "https://api.github.com/users/calvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-11T23:11:53Z", "updated_at": "2016-08-26T14:00:38Z", "closed_at": "2016-08-26T14:00:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Simon,\n\nFirst of all, thanks for the package. It works beautifully.\n\nHaving said that, I think it would be nicer if it comes with a command line interface that generates static files without worrying about custom URL generators. So I'm proposing a command with the following interface:\n\n```\n$ flask-freezer [OPTIONS] APP_MODULE space-separated-urls < additional-new-line-separated-urls\n```\n\nwhere: \n- `[OPTIONS]` are the same as current `frozen_flask` options. (i.e. `destination`, `destination-ignore`, etc)\n- `APP_MODULE` is of the pattern `$(MODULE_NAME):$(FLASK_VARIABLE_NAME)`.\n- `space-separated-urls` is a list of urls to be used in the generator\n\nAdditionally, the command can accept list of urls via `stdin`. \n\nInternally, it would a create  `Freezer` instance and with an URL generator that iterates over the URLs.\n\nThoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/45", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/45/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/45/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/45", "id": 41418630, "node_id": "MDU6SXNzdWU0MTQxODYzMA==", "number": 45, "title": "Ignore endpoints in no_argument_rules()?", "user": {"login": "daboross", "id": 1152146, "node_id": "MDQ6VXNlcjExNTIxNDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1152146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daboross", "html_url": "https://github.com/daboross", "followers_url": "https://api.github.com/users/daboross/followers", "following_url": "https://api.github.com/users/daboross/following{/other_user}", "gists_url": "https://api.github.com/users/daboross/gists{/gist_id}", "starred_url": "https://api.github.com/users/daboross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daboross/subscriptions", "organizations_url": "https://api.github.com/users/daboross/orgs", "repos_url": "https://api.github.com/users/daboross/repos", "events_url": "https://api.github.com/users/daboross/events{/privacy}", "received_events_url": "https://api.github.com/users/daboross/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-28T17:36:21Z", "updated_at": "2016-01-18T21:43:59Z", "closed_at": "2014-08-28T20:58:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently using Frozen-Flask to generate static content for my website, to be served by Nginx. However, I'm also using flask running normally provide dynamic content for the website. With nginx's 'try_urls' ability, if Frozen-Flask generates a static page it's served by nginx, otherwise the request is forwarded to the Flask app running normally.\n\nThe one problem with this setup is that Frozen-Flask generates static pages for the paths which should be dynamic. Because they accept parameters in the form of `?param=value`, Frozen-Flask sees them as 'no_argument' rules, and thus static files are generated where the app should serve dynamic ones.\n\nThis is my current workaround:\n\n```\napp.config['FREEZER_IGNORE_ENDPOINTS'] = ['endpoint1', 'endpoint2']\n\n\n# This is a copy of Freezer.no_argument_rules() modified to ignore certain paths\ndef no_argument_rules_urls_with_ignore():\n    \"\"\"URL generator for URL rules that take no arguments.\"\"\"\n    ignored = app.config.get('FREEZER_IGNORE_ENDPOINTS', [])\n    for rule in app.url_map.iter_rules():\n        if rule.endpoint not in ignored and not rule.arguments and 'GET' in rule.methods:\n            yield rule.endpoint, {}\n\n\nfreezer = Freezer(app=app, with_no_argument_rules=False)\nfreezer.register_generator(no_argument_rules_urls_with_ignore)\n```\n\nCould something like this be included in Frozen-Flask by default?\n\nThis is similar to https://github.com/SimonSapin/Frozen-Flask/pull/44, but I don't think Frozen-Flask needs to process all generated urls, just ones in no_argument_rules. All other generated urls can be controlled other ways, either by the user editing his/her generators, or adding `with_static_files=False`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/41", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/41/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/41/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/41", "id": 29486307, "node_id": "MDU6SXNzdWUyOTQ4NjMwNw==", "number": 41, "title": "Add file extension to files without extensions", "user": {"login": "markhildreth", "id": 609906, "node_id": "MDQ6VXNlcjYwOTkwNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/609906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markhildreth", "html_url": "https://github.com/markhildreth", "followers_url": "https://api.github.com/users/markhildreth/followers", "following_url": "https://api.github.com/users/markhildreth/following{/other_user}", "gists_url": "https://api.github.com/users/markhildreth/gists{/gist_id}", "starred_url": "https://api.github.com/users/markhildreth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markhildreth/subscriptions", "organizations_url": "https://api.github.com/users/markhildreth/orgs", "repos_url": "https://api.github.com/users/markhildreth/repos", "events_url": "https://api.github.com/users/markhildreth/events{/privacy}", "received_events_url": "https://api.github.com/users/markhildreth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-03-15T05:10:03Z", "updated_at": "2020-04-20T18:28:18Z", "closed_at": "2020-04-20T18:28:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Assume you have a site that looks something like this...\n\n``` python\n@app.route('/')\ndef index():\n    #...\n\n@app.route('/archive')\ndef archive():\n    #...\n\n@app.route('/archive/<int:year>')\ndef archive_year(year):\n    #...\n```\n\nThis should generate urls such as below:\n- `/`\n- `/archive`\n- `/archive/2013`\n\nThe way I've handled these URLs in the past is to have my URLs mapped to the filenames shown below using the web server (Nginx):\n- `/` => `/index.html`\n- `/archive` => `/archive.html`\n- `/archive/2013` => `/archive/2013.html`\n\nI don't see a way to generate the filenames the way I've shown with Frozen Flask. For example, the \"archive\" page will always be created as the filename `/archive`. I can't change the URL from `/archive` to `/archive/` or `/archive.html` without breaking existing links. I also can't change the web server to just look for `/archive` at `/archive/index.html` because Frozen-Flask can't actually generate the application I've shown above (since it will create the `archive` file, and then be unable to create the `archive` directory).\n\nI am thinking on working on a patch that would add a new configuration item, something like `FREEZER_FORCE_HTML_EXTENSION`. This would take any file that wouldn't ordinarily have a .html extension for the generated file and give it one (if the response was actually an HTML content type). Thus, when `/archive` is generated, the view renders it as `text/html`, and therefore gives it an `html` file extension when generated.\n\nBefore putting effort into this, I wanted to see if this is a feature that would be accepted if I created it. Additionally, I am wondering if you had any input or tips on its development, specifically on writing the tests. It seems all of the tests work on the assumption that the files will always be generated with the same names, where as this feature would obviously not hold to that assumption.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/38", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/38/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/38/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/38", "id": 24000120, "node_id": "MDU6SXNzdWUyNDAwMDEyMA==", "number": 38, "title": "Option to ignore certain static files", "user": {"login": "gregplaysguitar", "id": 23109, "node_id": "MDQ6VXNlcjIzMTA5", "avatar_url": "https://avatars2.githubusercontent.com/u/23109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregplaysguitar", "html_url": "https://github.com/gregplaysguitar", "followers_url": "https://api.github.com/users/gregplaysguitar/followers", "following_url": "https://api.github.com/users/gregplaysguitar/following{/other_user}", "gists_url": "https://api.github.com/users/gregplaysguitar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregplaysguitar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregplaysguitar/subscriptions", "organizations_url": "https://api.github.com/users/gregplaysguitar/orgs", "repos_url": "https://api.github.com/users/gregplaysguitar/repos", "events_url": "https://api.github.com/users/gregplaysguitar/events{/privacy}", "received_events_url": "https://api.github.com/users/gregplaysguitar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-09T22:59:48Z", "updated_at": "2014-01-31T00:44:22Z", "closed_at": "2014-01-31T00:44:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've had to set `with_static_files=False` to avoid having all my raw .scss and non-compressed javascript copied into the build directory, and created a url generator to pull in the non-linked static files I _do_ want, such as css-referenced images and webfonts.\n\nThis works fine, but it'd be nice if there was a setting to prevent certain static directories from being copied, so I didn't have to write the generator.\n\nGreat app all the same!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/37", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/37/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/37/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/37", "id": 19067859, "node_id": "MDU6SXNzdWUxOTA2Nzg1OQ==", "number": 37, "title": "Creating 9 million static pages - how to?", "user": {"login": "handloomweaver", "id": 456254, "node_id": "MDQ6VXNlcjQ1NjI1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/456254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/handloomweaver", "html_url": "https://github.com/handloomweaver", "followers_url": "https://api.github.com/users/handloomweaver/followers", "following_url": "https://api.github.com/users/handloomweaver/following{/other_user}", "gists_url": "https://api.github.com/users/handloomweaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/handloomweaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/handloomweaver/subscriptions", "organizations_url": "https://api.github.com/users/handloomweaver/orgs", "repos_url": "https://api.github.com/users/handloomweaver/repos", "events_url": "https://api.github.com/users/handloomweaver/events{/privacy}", "received_events_url": "https://api.github.com/users/handloomweaver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-05T18:57:13Z", "updated_at": "2016-08-26T13:59:39Z", "closed_at": "2016-08-26T13:59:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to find a solution to a problem and wondered if frozen-flask could be that solution. My company has been asked to create a lot of pages for a travel site, nearly 9 million (!) that are the same template but contain different data taken from an API call. We'd ideally like to serve them statically because of the expensive API call and to reduce server load. Now to query the API to fetch the data to generate the template takes in order of 0.1 of a second on average so it could take 10 days or something to create all the pages! So my question is: is Frozen Flask only designed to create the static pages in \"a oner\" or can it be configured somehow to chew through the page creation in a batch as a job or can it go live like a regular Flask app and when a page is requested a static version is created and the next time that url is queried the static version is served?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/36", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/36/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/36/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/36", "id": 18744478, "node_id": "MDU6SXNzdWUxODc0NDQ3OA==", "number": 36, "title": "It breaks with SERVER_NAME defined", "user": {"login": "iurisilvio", "id": 105852, "node_id": "MDQ6VXNlcjEwNTg1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/105852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iurisilvio", "html_url": "https://github.com/iurisilvio", "followers_url": "https://api.github.com/users/iurisilvio/followers", "following_url": "https://api.github.com/users/iurisilvio/following{/other_user}", "gists_url": "https://api.github.com/users/iurisilvio/gists{/gist_id}", "starred_url": "https://api.github.com/users/iurisilvio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iurisilvio/subscriptions", "organizations_url": "https://api.github.com/users/iurisilvio/orgs", "repos_url": "https://api.github.com/users/iurisilvio/repos", "events_url": "https://api.github.com/users/iurisilvio/events{/privacy}", "received_events_url": "https://api.github.com/users/iurisilvio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-08-29T17:23:38Z", "updated_at": "2013-09-02T15:24:34Z", "closed_at": "2013-09-01T14:11:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to freeze my app, I get a `ValueError` when SERVER_NAME is defined.\n\n`SERVER_NAME = 'www.example.com'`\n\nThe `url_for` try to generate the external URL without scheme (`://www.example.com`). I'm using Flask 0.10.1 and last Frozen-Flask.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/34", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/34/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/34/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/34", "id": 15022378, "node_id": "MDU6SXNzdWUxNTAyMjM3OA==", "number": 34, "title": "FREEZER_BASE_URL did not support below domain root", "user": {"login": "mblayman", "id": 636865, "node_id": "MDQ6VXNlcjYzNjg2NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/636865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mblayman", "html_url": "https://github.com/mblayman", "followers_url": "https://api.github.com/users/mblayman/followers", "following_url": "https://api.github.com/users/mblayman/following{/other_user}", "gists_url": "https://api.github.com/users/mblayman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mblayman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mblayman/subscriptions", "organizations_url": "https://api.github.com/users/mblayman/orgs", "repos_url": "https://api.github.com/users/mblayman/repos", "events_url": "https://api.github.com/users/mblayman/events{/privacy}", "received_events_url": "https://api.github.com/users/mblayman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-06-01T03:36:00Z", "updated_at": "2016-05-29T09:30:44Z", "closed_at": "2013-06-04T09:32:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to freeze my project's documentation and host it on pythonhosted.org. I got the impression that `FREEZER_BASE_URL` was the way to do that. I set:\n\n``` python\nFREEZER_BASE_URL = 'http://pythonhosted.org/MyProject/'\n```\n\nWhen I ran, I got a 404 from a route and the freezing process aborted. Just to compare, I got rid of 'MyProject/' so that just the URL was specified. In that case, everything worked.\n\nIs this not the way to specify paths below the domain root?\n\nMy assumption was based on the documentation stating \"or if your application is not at the root of its domain name.\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/30", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/30/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/30/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/30", "id": 14775963, "node_id": "MDU6SXNzdWUxNDc3NTk2Mw==", "number": 30, "title": "`relative_url_for` trips on anchors", "user": {"login": "homeworkprod", "id": 95277, "node_id": "MDQ6VXNlcjk1Mjc3", "avatar_url": "https://avatars0.githubusercontent.com/u/95277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/homeworkprod", "html_url": "https://github.com/homeworkprod", "followers_url": "https://api.github.com/users/homeworkprod/followers", "following_url": "https://api.github.com/users/homeworkprod/following{/other_user}", "gists_url": "https://api.github.com/users/homeworkprod/gists{/gist_id}", "starred_url": "https://api.github.com/users/homeworkprod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/homeworkprod/subscriptions", "organizations_url": "https://api.github.com/users/homeworkprod/orgs", "repos_url": "https://api.github.com/users/homeworkprod/repos", "events_url": "https://api.github.com/users/homeworkprod/events{/privacy}", "received_events_url": "https://api.github.com/users/homeworkprod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-05-26T22:12:54Z", "updated_at": "2013-06-04T09:06:21Z", "closed_at": "2013-06-04T09:06:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `relative_url_for` method introduced in version 0.10 uses the na\u00efve approach of appending `index.html` if an URL ends with a slash.\n\nThis, however, fails for URLs with an anchor (e. g. `http://wiki.example.com/pages/Bacon#Positive-Effects-on-the-Human-Mind` or `/items/123/#some-superb-item`).\n\nFlask introduced the `_anchor` keyword argument to `url_for` (http://flask.pocoo.org/docs/api/#flask.url_for) in version 0.9.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/29", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/29/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/29/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/29", "id": 14774671, "node_id": "MDU6SXNzdWUxNDc3NDY3MQ==", "number": 29, "title": "Ignore certain endpoints", "user": {"login": "mblayman", "id": 636865, "node_id": "MDQ6VXNlcjYzNjg2NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/636865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mblayman", "html_url": "https://github.com/mblayman", "followers_url": "https://api.github.com/users/mblayman/followers", "following_url": "https://api.github.com/users/mblayman/following{/other_user}", "gists_url": "https://api.github.com/users/mblayman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mblayman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mblayman/subscriptions", "organizations_url": "https://api.github.com/users/mblayman/orgs", "repos_url": "https://api.github.com/users/mblayman/repos", "events_url": "https://api.github.com/users/mblayman/events{/privacy}", "received_events_url": "https://api.github.com/users/mblayman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2013-05-26T20:11:09Z", "updated_at": "2016-09-13T03:44:46Z", "closed_at": "2016-09-13T03:44:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Ok, I think I have a real \"issue\" this time. :)\n\nI am running my app through Frozen Flask and the app has basic CRUD operations. The problem that I'm encountering is that the freeze process is following the delete endpoint. This has the unfortunate side-effect of actually deleting all the page content in my app. Thus, the next time I run the freeze method, there is a lot less frozen stuff.\n\nI didn't see any method in the documentation for getting freeze to ignore certain endpoints. Is this possible or desired?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/28", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/28/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/28/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/28", "id": 14764635, "node_id": "MDU6SXNzdWUxNDc2NDYzNQ==", "number": 28, "title": "Totally silent logger", "user": {"login": "mblayman", "id": 636865, "node_id": "MDQ6VXNlcjYzNjg2NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/636865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mblayman", "html_url": "https://github.com/mblayman", "followers_url": "https://api.github.com/users/mblayman/followers", "following_url": "https://api.github.com/users/mblayman/following{/other_user}", "gists_url": "https://api.github.com/users/mblayman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mblayman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mblayman/subscriptions", "organizations_url": "https://api.github.com/users/mblayman/orgs", "repos_url": "https://api.github.com/users/mblayman/repos", "events_url": "https://api.github.com/users/mblayman/events{/privacy}", "received_events_url": "https://api.github.com/users/mblayman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-05-26T00:28:11Z", "updated_at": "2013-05-26T02:14:47Z", "closed_at": "2013-05-26T02:13:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to make frozen flask go completely silent with regard to logging because I'm attempting to integrate it into a tool that I'm writing. Even when I set log_url_for to False, I'm still getting some output from a route (I think it's the index, but I'm not sure how to narrow it down).\n\nI would love to see frozen flask be able to completely suppress all command line output.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/27", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/27/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/27/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/27", "id": 12381919, "node_id": "MDU6SXNzdWUxMjM4MTkxOQ==", "number": 27, "title": "Version name", "user": {"login": "mittenchops", "id": 1584795, "node_id": "MDQ6VXNlcjE1ODQ3OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1584795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mittenchops", "html_url": "https://github.com/mittenchops", "followers_url": "https://api.github.com/users/mittenchops/followers", "following_url": "https://api.github.com/users/mittenchops/following{/other_user}", "gists_url": "https://api.github.com/users/mittenchops/gists{/gist_id}", "starred_url": "https://api.github.com/users/mittenchops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mittenchops/subscriptions", "organizations_url": "https://api.github.com/users/mittenchops/orgs", "repos_url": "https://api.github.com/users/mittenchops/repos", "events_url": "https://api.github.com/users/mittenchops/events{/privacy}", "received_events_url": "https://api.github.com/users/mittenchops/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-03-24T22:28:59Z", "updated_at": "2013-03-27T06:40:29Z", "closed_at": "2013-03-24T23:31:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation says the current version is 0.1, following 0.9, 0.8, 0.7...  The current version should be v1.0, right?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/26", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/26/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/26/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/26", "id": 11954302, "node_id": "MDU6SXNzdWUxMTk1NDMwMg==", "number": 26, "title": "FREEZER_DESTINATION always prefixes the app root", "user": {"login": "shuhaowu", "id": 338100, "node_id": "MDQ6VXNlcjMzODEwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/338100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shuhaowu", "html_url": "https://github.com/shuhaowu", "followers_url": "https://api.github.com/users/shuhaowu/followers", "following_url": "https://api.github.com/users/shuhaowu/following{/other_user}", "gists_url": "https://api.github.com/users/shuhaowu/gists{/gist_id}", "starred_url": "https://api.github.com/users/shuhaowu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shuhaowu/subscriptions", "organizations_url": "https://api.github.com/users/shuhaowu/orgs", "repos_url": "https://api.github.com/users/shuhaowu/repos", "events_url": "https://api.github.com/users/shuhaowu/events{/privacy}", "received_events_url": "https://api.github.com/users/shuhaowu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-03-13T00:17:15Z", "updated_at": "2013-06-04T09:08:45Z", "closed_at": "2013-06-04T09:08:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "While this is not necessarily an issue, it could be if this is not desired (as i actually want cwd.. but this does not necessarily have to happen here.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/24", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/24/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/24/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/24", "id": 10295731, "node_id": "MDU6SXNzdWUxMDI5NTczMQ==", "number": 24, "title": "Add an ignored files config to prevent freezing from overwriting/removing files", "user": {"login": "croach", "id": 10200, "node_id": "MDQ6VXNlcjEwMjAw", "avatar_url": "https://avatars0.githubusercontent.com/u/10200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/croach", "html_url": "https://github.com/croach", "followers_url": "https://api.github.com/users/croach/followers", "following_url": "https://api.github.com/users/croach/following{/other_user}", "gists_url": "https://api.github.com/users/croach/gists{/gist_id}", "starred_url": "https://api.github.com/users/croach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/croach/subscriptions", "organizations_url": "https://api.github.com/users/croach/orgs", "repos_url": "https://api.github.com/users/croach/repos", "events_url": "https://api.github.com/users/croach/events{/privacy}", "received_events_url": "https://api.github.com/users/croach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-01-25T00:31:15Z", "updated_at": "2013-01-25T00:40:46Z", "closed_at": "2013-01-25T00:40:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using Frozen-Flask to create my blog which I publish through Github Pages. The problem is that freezing removes all of the files in the .git directory of my blog's github repo which kills the repository. I could build to a different destination and then copy over all of the files to my github repo, but that is a tedious and error prone process. Instead, it would be nice to have a config setting that would allow you to specify files and directories to ignore during the freezing process (something akin to the .gitignore file). \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/19", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/19/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/19/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/19", "id": 6100143, "node_id": "MDU6SXNzdWU2MTAwMTQz", "number": 19, "title": "Generate relative urls", "user": {"login": "vaus", "id": 2070677, "node_id": "MDQ6VXNlcjIwNzA2Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2070677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaus", "html_url": "https://github.com/vaus", "followers_url": "https://api.github.com/users/vaus/followers", "following_url": "https://api.github.com/users/vaus/following{/other_user}", "gists_url": "https://api.github.com/users/vaus/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaus/subscriptions", "organizations_url": "https://api.github.com/users/vaus/orgs", "repos_url": "https://api.github.com/users/vaus/repos", "events_url": "https://api.github.com/users/vaus/events{/privacy}", "received_events_url": "https://api.github.com/users/vaus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-08-08T11:02:19Z", "updated_at": "2012-08-13T12:13:52Z", "closed_at": "2012-08-13T12:13:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm writing a Jekyll-like static generator based on Frozen-Flask and I thought it would be neat if the final generated website had only relative urls and could be browsed or shared to others without a web server around.\n\nI propose adding a `FREEZER_RELATIVE_URLS` option to Frozen-Flask. Here is a snippet that  hooks Flask's `url_for` to generate relative urls based on the current request:\n\n``` python\nfrom flask import request, url_for\nimport posixpath\n\ndef relative_url_for(endpoint, **values):\n    \"\"\"Like url_for, but generates relative paths for each request.\"\"\"\n    request_path = request.path.lstrip('/')\n    url = url_for(endpoint, **values).lstrip('/')\n\n    if not request_path or request_path.endswith('/'):\n        request_path += 'index.html'\n\n    if not url or url.endswith('/'):\n        url += 'index.html'\n\n    return posixpath.relpath(url, posixpath.dirname(request_path))\n\napp.jinja_env.globals['url_for'] = relative_url_for\n```\n\nNote that it should only be used with Frozen-Flask, as Flask itself (when running live) distinguishes between routes like `/` and `/index.html`. Please, integrate it into Frozen-Flask if you think it's worth it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/13", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/13/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/13/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/13", "id": 4252532, "node_id": "MDU6SXNzdWU0MjUyNTMy", "number": 13, "title": "Support duplication of static files to root directory", "user": {"login": "singingwolfboy", "id": 132355, "node_id": "MDQ6VXNlcjEzMjM1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/132355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/singingwolfboy", "html_url": "https://github.com/singingwolfboy", "followers_url": "https://api.github.com/users/singingwolfboy/followers", "following_url": "https://api.github.com/users/singingwolfboy/following{/other_user}", "gists_url": "https://api.github.com/users/singingwolfboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/singingwolfboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/singingwolfboy/subscriptions", "organizations_url": "https://api.github.com/users/singingwolfboy/orgs", "repos_url": "https://api.github.com/users/singingwolfboy/repos", "events_url": "https://api.github.com/users/singingwolfboy/events{/privacy}", "received_events_url": "https://api.github.com/users/singingwolfboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-04-24T01:52:43Z", "updated_at": "2012-04-27T23:05:19Z", "closed_at": "2012-04-27T23:05:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are a few URLs that certain clients give special treatment to: for example, `/favicon.ico` and `/apple-touch-icon.png`. I have these files in my static directory, and I want them to be accessible under `/static/favicon.ico` and `/static/apple-touch-icon.png`, but I also want the special root-level URL versions to work. As a result, I have this code in my views, to explicitly indicate the root-level URLs:\n\n``` python\nfrom functools import partial\nfrom myapp import app\nROOT_ASSETS = (\"favicon.ico\", \"apple-touch-icon.png\")\n\nfor asset in ROOT_ASSETS:\n    url = \"/\"+asset\n    name = asset.replace(\".\", \"_\")\n    app.add_url_rule(url, name, partial(app.send_static_file, filename=asset))\n```\n\nI would expect that using `frozen_flask` to freeze this project would result in two copies of these static files: one in the root of the build directory, and one the static directory inside of the build directory. In fact, the files appear only in the latter location, not the former.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/11", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/11/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/11/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/11", "id": 3901116, "node_id": "MDU6SXNzdWUzOTAxMTE2", "number": 11, "title": "AssertionError on relative URLs", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-03-30T16:53:55Z", "updated_at": "2012-08-13T09:41:52Z", "closed_at": "2012-08-13T09:41:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "An URL generator yielding a relative URL can cause AssertionError:\n\nhttp://paste.pocoo.org/show/573652/\n\nWe should have a more explicit error message, and closer to the source of the error.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/10", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/10/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/10/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/10", "id": 3185357, "node_id": "MDU6SXNzdWUzMTg1MzU3", "number": 10, "title": "Documentation - example using `run_with_reloader`", "user": {"login": "mgax", "id": 27617, "node_id": "MDQ6VXNlcjI3NjE3", "avatar_url": "https://avatars2.githubusercontent.com/u/27617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgax", "html_url": "https://github.com/mgax", "followers_url": "https://api.github.com/users/mgax/followers", "following_url": "https://api.github.com/users/mgax/following{/other_user}", "gists_url": "https://api.github.com/users/mgax/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgax/subscriptions", "organizations_url": "https://api.github.com/users/mgax/orgs", "repos_url": "https://api.github.com/users/mgax/repos", "events_url": "https://api.github.com/users/mgax/events{/privacy}", "received_events_url": "https://api.github.com/users/mgax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-02-11T15:17:39Z", "updated_at": "2012-02-13T13:42:47Z", "closed_at": "2012-02-13T13:42:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following snippet proved handy to avoid manually restarting the app during development, it should be mentioned somehow in the documentation:\n\n```\ndef main():\n    freezer.freeze()\n    freezer.serve()\n\nif __name__ == '__main__':\n    from werkzeug.serving import run_with_reloader\n    run_with_reloader(main)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/8", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/8/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/8/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/8", "id": 2850559, "node_id": "MDU6SXNzdWUyODUwNTU5", "number": 8, "title": "Mimetype guessing is unreliable, not cross-platform", "user": {"login": "benvinegar", "id": 2153, "node_id": "MDQ6VXNlcjIxNTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benvinegar", "html_url": "https://github.com/benvinegar", "followers_url": "https://api.github.com/users/benvinegar/followers", "following_url": "https://api.github.com/users/benvinegar/following{/other_user}", "gists_url": "https://api.github.com/users/benvinegar/gists{/gist_id}", "starred_url": "https://api.github.com/users/benvinegar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benvinegar/subscriptions", "organizations_url": "https://api.github.com/users/benvinegar/orgs", "repos_url": "https://api.github.com/users/benvinegar/repos", "events_url": "https://api.github.com/users/benvinegar/events{/privacy}", "received_events_url": "https://api.github.com/users/benvinegar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-01-16T04:12:02Z", "updated_at": "2012-01-16T11:25:49Z", "closed_at": "2012-01-16T11:25:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm curious why Frozen-Flask throws an exception if the mimetype of the generated file doesn't match it's own guess (from mimetypes.guess_type). I've found that mimetypes.guess_type is wholly unreliable, and returns different results depending on the platform.\n\nFor example, on Windows, `mimetypes.guess_type('file.js')`, returns application/x-javascript, but on OS X, it returns just application/javascript. There are others like this (.json is another).\n\nBasically, this means that if I want to write cross-platform code that builds a static website using Flask-Frozen, I have to use mimetypes.guess_type myself, just to make sure I'm passing the same mimetype that Flask-Frozen expects. That seems to defeat the purpose. I'd ask that you just remove this check, because while it's a good sanity check in theory, it doesn't work in practice.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/5", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/5/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/5/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/5", "id": 1174198, "node_id": "MDU6SXNzdWUxMTc0MTk4", "number": 5, "title": "Tests with unicode filenames fail on OS X", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2011-07-06T14:34:27Z", "updated_at": "2011-07-20T06:42:51Z", "closed_at": "2011-07-20T06:42:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Amit Bansil has reported that tests with unicode filenames fail on OS X with this kind of errors:\n\n```\nTraceback (most recent call last):\n  File \"/private/tmp/Frozen-Flask/flaskext/frozen/tests/__init__.py\", line 196, in test_nothing_else_matters\n    self.assertEquals(set(walk_directory(dest)), expected_files)\nAssertionError: set(['index.html', 'where_am_i/index.html', 'robots.txt', 'admin/static/style.css', 'static/style.css', 'admin/index.html', 'page/I l\\xc3\\xb8ve\\xcc\\x88 Unicode/index.html', 'product_1/index.html', 'product_0/index.html', 'product_2/index.html']) != set(['index.html', 'where_am_i/index.html', 'robots.txt', 'admin/static/style.css', 'admin/index.html', 'static/style.css', 'product_1/index.html', 'product_0/index.html', 'product_2/index.html', 'page/I l\\xc3\\xb8v\\xc3\\xab Unicode/index.html'])\n```\n\nWhat is going on is that different sequences of Unicode code points can be equivalent. In this example, a _'LATIN SMALL LETTER E WITH DIAERESIS' (U+00EB)_ is equivalent to a _'LATIN SMALL LETTER E' (U+0065)_ followed by a _'COMBINING DIAERESIS' (U+0308)_, and both are represented as **\u00eb**. Mac OS X [normalizes](http://en.wikipedia.org/wiki/Unicode_equivalence#Normal_forms) filenames before storing them, so a filename we get with listdir() might not be the same as the one we wrote. They will be equivalent, but may not compare equal in Python. Linux just stores bytes without changing them so I did not see this problem. However if you open() a file to read it the same normalization happens as when you wrote it, so normalization should not be a problem for Frozen-Flask outside of tests.\n\nI think that the correct solution here is to [normalize](http://docs.python.org/library/unicodedata.html#unicodedata.normalize) all filenames before comparing them in tests. What normalization is used does not matter as long as it is the same on both sides of ==.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/2", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/2/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/2/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/2", "id": 1053546, "node_id": "MDU6SXNzdWUxMDUzNTQ2", "number": 2, "title": "Should warn when an URL generator seems to be missing", "user": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2011-06-14T07:47:27Z", "updated_at": "2011-06-26T21:33:55Z", "closed_at": "2011-06-26T21:33:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "A suggestion from Ron DuPlain:\n\n> - Do not silently build an app that has URL rules with arguments that\n>   do not have a URL generator.  Warn or raise an error, providing\n>   options in app.config.\n\nThis seems to be a good idea, but the desired behavior is not obvious.\n\nIn Flask each app has a URL map. That map has several rules. Each rules has an endpoint, and have zero or more arguments. `url_for()` takes and endpoint (the name of the view function as a string when we use `@app.route(...)`) as well as the values for arguments. The important detail is that more than one URl rule may have the same endpoint.\n\nFrozen-Flask takes URL generator functions. These may return parameters for `url_for()` or plain URLs as strings, or a mix of both. Usually we make an URL generator function for each view/endpoint but this is not a requirement: the same generator could give URLs for more that one endpoint, or for all of them.\n\nSo endpoints may have more than one URL rule (with varying parameter number), a generator may give results for more than one endpoint, and results may not even go through the url_for/endpoint system at all.\n\nWe can start by warning when and endpoint in the URL map has no generated URL at all. Are there more cases when the feedback can be more helpful?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/1", "repository_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask", "labels_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/1/comments", "events_url": "https://api.github.com/repos/Frozen-Flask/Frozen-Flask/issues/1/events", "html_url": "https://github.com/Frozen-Flask/Frozen-Flask/issues/1", "id": 613770, "node_id": "MDU6SXNzdWU2MTM3NzA=", "number": 1, "title": "mimetype vs. filename extension", "user": {"login": "ThomasWaldmann", "id": 356103, "node_id": "MDQ6VXNlcjM1NjEwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/356103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThomasWaldmann", "html_url": "https://github.com/ThomasWaldmann", "followers_url": "https://api.github.com/users/ThomasWaldmann/followers", "following_url": "https://api.github.com/users/ThomasWaldmann/following{/other_user}", "gists_url": "https://api.github.com/users/ThomasWaldmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThomasWaldmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThomasWaldmann/subscriptions", "organizations_url": "https://api.github.com/users/ThomasWaldmann/orgs", "repos_url": "https://api.github.com/users/ThomasWaldmann/repos", "events_url": "https://api.github.com/users/ThomasWaldmann/events{/privacy}", "received_events_url": "https://api.github.com/users/ThomasWaldmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2011-02-21T00:35:40Z", "updated_at": "2012-01-18T09:38:42Z", "closed_at": "2011-06-02T20:48:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "  File \".../Flask_Static-0.1-py2.6.egg/flaskext/static.py\", line 131, in _build_one\n    % (basename, guessed_type, response.content_type)\nAssertionError: Filaname extension of 'mail_recovery_token' (type application/octet-stream) does not match Content-Type: text/html; charset=utf-8\n\na) Typo \"Filaname\"\n\nb) that assertion is problematic anyway. I tried to do a static html dump functionality for MoinMoin Wiki (moin2), but there are usually no \"extensions\" on the item names, mimetype is ONLY supplied as content-type. Even if there was some item url \".../foo.zip\", the default rendering of it would be text/html, not the zip mimetype. So, for moin2 this means: forget about extensions, use content-type only.\n\nc) If one wants to use the dump directly with a browser (without web server), one would need generated filename extensions for the dumped static files, because there is no server generating content-type. Even if there was some server generating content-type, it would be wrong (see above).\n\nI guess all this means flask-static needs to append an appropriate filename extensions based on the supplied content-type at dumping time.\n\nLinks to those resources then of course also need that filename extension...\n", "performed_via_github_app": null, "score": 1.0}]}