{"total_count": 62, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/91", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/91/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/91/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/91", "id": 493833978, "node_id": "MDU6SXNzdWU0OTM4MzM5Nzg=", "number": 91, "title": "\"py3\" version of backported futures 3.1.1 in Pypi", "user": {"login": "jcmackie", "id": 4962911, "node_id": "MDQ6VXNlcjQ5NjI5MTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4962911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmackie", "html_url": "https://github.com/jcmackie", "followers_url": "https://api.github.com/users/jcmackie/followers", "following_url": "https://api.github.com/users/jcmackie/following{/other_user}", "gists_url": "https://api.github.com/users/jcmackie/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmackie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmackie/subscriptions", "organizations_url": "https://api.github.com/users/jcmackie/orgs", "repos_url": "https://api.github.com/users/jcmackie/repos", "events_url": "https://api.github.com/users/jcmackie/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmackie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-16T03:50:17Z", "updated_at": "2019-09-16T06:48:37Z", "closed_at": "2019-09-16T05:48:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nRecently one of our builds broke due to a mismatch hash of 'futures' 3.1.1.\r\n\r\nWhen I investigated I found that just in this particular version, a py3 version of the same package was built and published to Pypi.org on the 15th of September 2019: https://pypi.org/project/futures/3.1.1/#files\r\n\r\nBecause we install this library, for backwards compatibility, in a Python 3 virtual environment, the py3 package was preferred, however the hash did not match what we have in our Pipfile.lock obviously.\r\n\r\nIf this was a mistake can you please un-publish this py3 package of Futures 3.1.1.\r\n\r\nRegards,\r\nJames", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/90", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/90/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/90/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/90", "id": 493707759, "node_id": "MDU6SXNzdWU0OTM3MDc3NTk=", "number": 90, "title": "3.1.1 is broken and we need a post release", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935547, "node_id": "MDU6TGFiZWwxODY5MzU1NDc=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-15T07:57:44Z", "updated_at": "2019-09-15T09:07:49Z", "closed_at": "2019-09-15T08:09:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Invalid syntax is a good enough reason for making a new release. Some tools are requesting older versions for a reason (py27 compatbility). Please fix this in a post release.\r\n\r\n```\r\n  File \"/Users/ssbarnea/.pyenv/versions/3.6.8/lib/python3.6/asyncio/__init__.py\", line 21, in <module>\r\n    from .base_events import *\r\n  File \"/Users/ssbarnea/.pyenv/versions/3.6.8/lib/python3.6/asyncio/base_events.py\", line 17, in <module>\r\n    import concurrent.futures\r\n  File \"/Users/ssbarnea/.pyenv/versions/3.6.8/lib/python3.6/site-packages/concurrent/futures/__init__.py\", line 8, in <module>\r\n    from concurrent.futures._base import (FIRST_COMPLETED,\r\n  File \"/Users/ssbarnea/.pyenv/versions/3.6.8/lib/python3.6/site-packages/concurrent/futures/_base.py\", line 381\r\n    raise exception_type, self._exception, self._traceback\r\n                        ^\r\nSyntaxError: invalid syntax\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/88", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/88/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/88/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/88", "id": 467442120, "node_id": "MDU6SXNzdWU0Njc0NDIxMjA=", "number": 88, "title": "ThreadPoolExecutor doesn't reuse threads until #threads == max_workers", "user": {"login": "CeresCa", "id": 5327960, "node_id": "MDQ6VXNlcjUzMjc5NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5327960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CeresCa", "html_url": "https://github.com/CeresCa", "followers_url": "https://api.github.com/users/CeresCa/followers", "following_url": "https://api.github.com/users/CeresCa/following{/other_user}", "gists_url": "https://api.github.com/users/CeresCa/gists{/gist_id}", "starred_url": "https://api.github.com/users/CeresCa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CeresCa/subscriptions", "organizations_url": "https://api.github.com/users/CeresCa/orgs", "repos_url": "https://api.github.com/users/CeresCa/repos", "events_url": "https://api.github.com/users/CeresCa/events{/privacy}", "received_events_url": "https://api.github.com/users/CeresCa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935545, "node_id": "MDU6TGFiZWwxODY5MzU1NDU=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-12T14:23:43Z", "updated_at": "2019-07-15T09:26:08Z", "closed_at": "2019-07-15T09:26:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Issue discussion:  \r\n[issue24882 ThreadPoolExecutor doesn't reuse threads until #threads == max_workers](https://bugs.python.org/issue24882)\r\nThis bug was fixed in Python 3.8:\r\n[bpo-24882: Let ThreadPoolExecutor reuse idle threads before creating \u2026](https://github.com/python/cpython/commit/904e34d4e6b6007986dcc585d5c553ee8ae06f95)\r\nI hope to see upstream changes be backported to  this package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/87", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/87/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/87/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/87", "id": 463373784, "node_id": "MDU6SXNzdWU0NjMzNzM3ODQ=", "number": 87, "title": "fail to transfer some div in function", "user": {"login": "BichengWang", "id": 31808103, "node_id": "MDQ6VXNlcjMxODA4MTAz", "avatar_url": "https://avatars1.githubusercontent.com/u/31808103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BichengWang", "html_url": "https://github.com/BichengWang", "followers_url": "https://api.github.com/users/BichengWang/followers", "following_url": "https://api.github.com/users/BichengWang/following{/other_user}", "gists_url": "https://api.github.com/users/BichengWang/gists{/gist_id}", "starred_url": "https://api.github.com/users/BichengWang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BichengWang/subscriptions", "organizations_url": "https://api.github.com/users/BichengWang/orgs", "repos_url": "https://api.github.com/users/BichengWang/repos", "events_url": "https://api.github.com/users/BichengWang/events{/privacy}", "received_events_url": "https://api.github.com/users/BichengWang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935547, "node_id": "MDU6TGFiZWwxODY5MzU1NDc=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-02T18:28:08Z", "updated_at": "2019-07-15T09:15:17Z", "closed_at": "2019-07-15T09:15:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "python2 code:\r\n```\r\ndef integer_time(ms):\r\n    return ms / 60 * 60\r\n```\r\n```futurize -w --stage2```fail to detect these kinds of div.\r\nIt should become following format in python3\r\n```\r\ndef integer_time(ms):\r\n    return old_div(ms, 60) * 60\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/86", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/86/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/86/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/86", "id": 460289145, "node_id": "MDU6SXNzdWU0NjAyODkxNDU=", "number": 86, "title": "Each time set_result/set_exception/set_exception_info is invoked, done callbacks are executed repeatedly", "user": {"login": "tim-chow", "id": 11242763, "node_id": "MDQ6VXNlcjExMjQyNzYz", "avatar_url": "https://avatars0.githubusercontent.com/u/11242763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tim-chow", "html_url": "https://github.com/tim-chow", "followers_url": "https://api.github.com/users/tim-chow/followers", "following_url": "https://api.github.com/users/tim-chow/following{/other_user}", "gists_url": "https://api.github.com/users/tim-chow/gists{/gist_id}", "starred_url": "https://api.github.com/users/tim-chow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tim-chow/subscriptions", "organizations_url": "https://api.github.com/users/tim-chow/orgs", "repos_url": "https://api.github.com/users/tim-chow/repos", "events_url": "https://api.github.com/users/tim-chow/events{/privacy}", "received_events_url": "https://api.github.com/users/tim-chow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935549, "node_id": "MDU6TGFiZWwxODY5MzU1NDk=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-25T08:40:55Z", "updated_at": "2019-06-25T11:06:22Z", "closed_at": "2019-06-25T11:06:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "below is an example:\r\n<pre>\r\nfrom concurrent.futures import Future\r\n\r\ndef done_callback(f):\r\n    print(\"done callback is invoked\")\r\n\r\nf = Future()\r\nf.add_done_callback(done_callback)\r\nf.set_result('first set')\r\nf.set_result('second set')\r\n</pre>\r\nthe output is:\r\n<pre>\r\ndone callback is invoked\r\ndone callback is invoked\r\n</pre>\r\n\r\nI think that future can only be set once, it's better. and in this case, done callbacks will be invoked only once.\r\n<pre>\r\nclass Future(object):\r\n    ...\r\n    def set_result(self, result):\r\n        \"\"\"Sets the return value of work associated with the future.\r\n        Should only be used by Executor implementations and unit tests.\r\n        \"\"\"\r\n        with self._condition:\r\n            if self.done():\r\n                return\r\n            ...\r\n\r\n    def set_exception_info(self, exception, traceback):\r\n        \"\"\"Sets the result of the future as being the given exception\r\n        and traceback.\r\n        Should only be used by Executor implementations and unit tests.\r\n        \"\"\"\r\n        with self._condition:\r\n            if self.done():\r\n                return\r\n            ...\r\n</pre>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/85", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/85/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/85/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/85", "id": 435389237, "node_id": "MDU6SXNzdWU0MzUzODkyMzc=", "number": 85, "title": "SyntaxError: invalid syntax", "user": {"login": "TianMingChen", "id": 20785298, "node_id": "MDQ6VXNlcjIwNzg1Mjk4", "avatar_url": "https://avatars2.githubusercontent.com/u/20785298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TianMingChen", "html_url": "https://github.com/TianMingChen", "followers_url": "https://api.github.com/users/TianMingChen/followers", "following_url": "https://api.github.com/users/TianMingChen/following{/other_user}", "gists_url": "https://api.github.com/users/TianMingChen/gists{/gist_id}", "starred_url": "https://api.github.com/users/TianMingChen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TianMingChen/subscriptions", "organizations_url": "https://api.github.com/users/TianMingChen/orgs", "repos_url": "https://api.github.com/users/TianMingChen/repos", "events_url": "https://api.github.com/users/TianMingChen/events{/privacy}", "received_events_url": "https://api.github.com/users/TianMingChen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935548, "node_id": "MDU6TGFiZWwxODY5MzU1NDg=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-20T11:44:59Z", "updated_at": "2019-04-21T13:21:59Z", "closed_at": "2019-04-20T19:55:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "![\u56fe\u7247](https://user-images.githubusercontent.com/20785298/56456853-bab94080-63a4-11e9-8d38-796513dbdf81.png)\r\nhow to solve this prolem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/84", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/84/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/84/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/84", "id": 389179986, "node_id": "MDU6SXNzdWUzODkxNzk5ODY=", "number": 84, "title": "I cant install future", "user": {"login": "eagleman111", "id": 31673462, "node_id": "MDQ6VXNlcjMxNjczNDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/31673462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eagleman111", "html_url": "https://github.com/eagleman111", "followers_url": "https://api.github.com/users/eagleman111/followers", "following_url": "https://api.github.com/users/eagleman111/following{/other_user}", "gists_url": "https://api.github.com/users/eagleman111/gists{/gist_id}", "starred_url": "https://api.github.com/users/eagleman111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eagleman111/subscriptions", "organizations_url": "https://api.github.com/users/eagleman111/orgs", "repos_url": "https://api.github.com/users/eagleman111/repos", "events_url": "https://api.github.com/users/eagleman111/events{/privacy}", "received_events_url": "https://api.github.com/users/eagleman111/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935548, "node_id": "MDU6TGFiZWwxODY5MzU1NDg=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-10T07:52:52Z", "updated_at": "2018-12-10T09:41:33Z", "closed_at": "2018-12-10T09:41:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nWhen I try to install it, it show ssl security error, any help?\r\npip install future\r\nCollecting future\r\nc:\\python27\\lib\\site-packages\\pip\\_vendor\\requests\\packages\\urllib3\\util\\ssl_.py:318: SNIMissingWarning: An HTTPS request has been made, but the SNI (Subject Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/security.html#snimissingwarning.\r\n  SNIMissingWarning\r\nc:\\python27\\lib\\site-packages\\pip\\_vendor\\requests\\packages\\urllib3\\util\\ssl_.py:122: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/security.html#insecureplatformwarning.\r\n  InsecurePlatformWarning\r\n  Could not fetch URL https://pypi.python.org/simple/future/: There was a problem confirming the ssl certificate: [Errno 1] _ssl.c:499: error:1407742E:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version - skipping\r\n  Could not find a version that satisfies the requirement future (from versions: )\r\nNo matching distribution found for future\r\nc:\\python27\\lib\\site-packages\\pip\\_vendor\\requests\\packages\\urllib3\\util\\ssl_.py:122: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/security.html#insecureplatformwarning.\r\n  InsecurePlatformWarning", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/83", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/83/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/83/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/83", "id": 322837442, "node_id": "MDU6SXNzdWUzMjI4Mzc0NDI=", "number": 83, "title": "futures 3.1.2 breaks the world :-)", "user": {"login": "kapilt", "id": 21650, "node_id": "MDQ6VXNlcjIxNjUw", "avatar_url": "https://avatars3.githubusercontent.com/u/21650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kapilt", "html_url": "https://github.com/kapilt", "followers_url": "https://api.github.com/users/kapilt/followers", "following_url": "https://api.github.com/users/kapilt/following{/other_user}", "gists_url": "https://api.github.com/users/kapilt/gists{/gist_id}", "starred_url": "https://api.github.com/users/kapilt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kapilt/subscriptions", "organizations_url": "https://api.github.com/users/kapilt/orgs", "repos_url": "https://api.github.com/users/kapilt/repos", "events_url": "https://api.github.com/users/kapilt/events{/privacy}", "received_events_url": "https://api.github.com/users/kapilt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-05-14T14:18:59Z", "updated_at": "2018-05-16T22:34:25Z", "closed_at": "2018-05-15T16:34:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have a python 2/3 compatible package that uses third party dependencies that use concurrent.futures then using 3.1.2 causes an error on install for python 3.  Thats unfortunate as its a common dependency for things that are 2/3 compatible. I have a half-dozen third party libraries in venv that depend on futures.\r\n\r\n```\r\nCollecting futures==3.1.2 (from -r requirements.txt (line 8))\r\n  Using cached https://files.pythonhosted.org/packages/4a/f4/418e844d868e34638486732417fb82b05031910059d88b86aaea9c70f699/futures-3.1.2.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    This backport is meant only for Python 2.\r\n    It does not work on Python 3, and Python 3 users do not need it as the concurrent.futures package is available in the standard library.\r\n    For projects that work on both Python 2 and 3, the dependency needs to be conditional on the Python version, like so:\r\n    extras_require={':python_version == \"2.7\"': ['futures']}\r\n    \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/82", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/82/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/82/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/82", "id": 322779505, "node_id": "MDU6SXNzdWUzMjI3Nzk1MDU=", "number": 82, "title": "3.1.2 does not specify Requires-Python", "user": {"login": "Alphadelta14", "id": 480845, "node_id": "MDQ6VXNlcjQ4MDg0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/480845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alphadelta14", "html_url": "https://github.com/Alphadelta14", "followers_url": "https://api.github.com/users/Alphadelta14/followers", "following_url": "https://api.github.com/users/Alphadelta14/following{/other_user}", "gists_url": "https://api.github.com/users/Alphadelta14/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alphadelta14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alphadelta14/subscriptions", "organizations_url": "https://api.github.com/users/Alphadelta14/orgs", "repos_url": "https://api.github.com/users/Alphadelta14/repos", "events_url": "https://api.github.com/users/Alphadelta14/events{/privacy}", "received_events_url": "https://api.github.com/users/Alphadelta14/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-14T11:37:50Z", "updated_at": "2018-05-15T16:18:12Z", "closed_at": "2018-05-14T11:42:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "A new error was added to this package when installing on Python 3. However, most versions of this package have some sort of `Requires-Python: >=2.6, <3` in their PKG-INFO / metadata corresponding to `python_requires='>=2.6, <3',` in setup.py. Unfortunately, the 3.1.2 version of this package does not, so it fails miserably.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/78", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/78/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/78/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/78", "id": 318253976, "node_id": "MDU6SXNzdWUzMTgyNTM5NzY=", "number": 78, "title": "Issue: __get_result incorrectly overwrites the correct version when installed on python 3. ", "user": {"login": "mpacer", "id": 2482408, "node_id": "MDQ6VXNlcjI0ODI0MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2482408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpacer", "html_url": "https://github.com/mpacer", "followers_url": "https://api.github.com/users/mpacer/followers", "following_url": "https://api.github.com/users/mpacer/following{/other_user}", "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions", "organizations_url": "https://api.github.com/users/mpacer/orgs", "repos_url": "https://api.github.com/users/mpacer/repos", "events_url": "https://api.github.com/users/mpacer/events{/privacy}", "received_events_url": "https://api.github.com/users/mpacer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935549, "node_id": "MDU6TGFiZWwxODY5MzU1NDk=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-27T02:08:12Z", "updated_at": "2018-04-27T07:34:02Z", "closed_at": "2018-04-27T07:33:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/agronholm/pythonfutures/blob/5edbc65401fd578e195c2f0e2e8d3a6b5404f6bc/concurrent/futures/_base.py#L405-L416\r\n\r\nI'm happy to make a PR to fix this, but I think the real solution is to release a new version that does not include the `python_requires='>=2.6, <3',`  and raises an error instead of a warning when attempted to be installed on python 3. \r\n\r\nFor example, the monkey patching will break `pytest` if installed on `python3` with version `3.1.1`. That means if someone does `pip3 install -U futures`, that `python3` executable would install a `futures==3.1.1` because it doesn't have a `python_requires='>=2.6, <3',` which is what stops `pip3` from even seeing that `futures 3.2.0` exists. \r\n\r\nIf we were to raise an error in a way analogous to what we do in IPython:\r\nhttps://github.com/ipython/ipython/blob/01bd59ec7c184171df0cb0d933c5672e8c20b67e/setup.py#L25-L58:\r\n```python\r\nif sys.version_info < (3, 4):\r\n    pip_message = 'This may be due to an out of date pip. Make sure you have pip >= 9.0.1.'\r\n    try:\r\n        import pip\r\n        pip_version = tuple([int(x) for x in pip.__version__.split('.')[:3]])\r\n        if pip_version < (9, 0, 1) :\r\n            pip_message = 'Your pip version is out of date, please install pip >= 9.0.1. '\\\r\n            'pip {} detected.'.format(pip.__version__)\r\n        else:\r\n            # pip is new enough - it must be something else\r\n            pip_message = ''\r\n    except Exception:\r\n        pass\r\n\r\n\r\n    error = \"\"\"\r\nIPython 7.0+ supports Python 3.4 and above.\r\nWhen using Python 2.7, please install IPython 5.x LTS Long Term Support version.\r\nPython 3.3 was supported up to IPython 6.x.\r\nSee IPython `README.rst` file for more information:\r\n    https://github.com/ipython/ipython/blob/master/README.rst\r\nPython {py} detected.\r\n{pip}\r\n\"\"\".format(py=sys.version_info, pip=pip_message )\r\n\r\n    print(error, file=sys.stderr)\r\n    sys.exit(1)\r\n```\r\nthen `pip install -U futures` would successfully avoid breaking peoples' `python3` executables by not allowing itself to be installed. I'll happiliy make a PR for this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/76", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/76/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/76/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/76", "id": 309466692, "node_id": "MDU6SXNzdWUzMDk0NjY2OTI=", "number": 76, "title": "Update PyPi please", "user": {"login": "j-walker23", "id": 2018885, "node_id": "MDQ6VXNlcjIwMTg4ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2018885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-walker23", "html_url": "https://github.com/j-walker23", "followers_url": "https://api.github.com/users/j-walker23/followers", "following_url": "https://api.github.com/users/j-walker23/following{/other_user}", "gists_url": "https://api.github.com/users/j-walker23/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-walker23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-walker23/subscriptions", "organizations_url": "https://api.github.com/users/j-walker23/orgs", "repos_url": "https://api.github.com/users/j-walker23/repos", "events_url": "https://api.github.com/users/j-walker23/events{/privacy}", "received_events_url": "https://api.github.com/users/j-walker23/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935547, "node_id": "MDU6TGFiZWwxODY5MzU1NDc=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-28T17:49:24Z", "updated_at": "2018-04-05T08:08:14Z", "closed_at": "2018-03-29T09:11:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "`pip install futures==3.2.0`\r\n\r\nCollecting futures==3.2.0\r\n  Could not find a version that satisfies the requirement futures==3.2.0 (from versions: 0.2.python3, 0.1, 0.2, 1.0, 2.0, 2.1, 2.1.1, 2.1.2, 2.1.3, 2.1.4, 2.1.5, 2.1.6, 2.2.0, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.0.5, 3.1.0, 3.1.1)\r\nNo matching distribution found for futures==3.2.0\r\n\r\nOriginating from https://github.com/pypa/pipenv/issues/1579.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/74", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/74/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/74/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/74", "id": 306192192, "node_id": "MDU6SXNzdWUzMDYxOTIxOTI=", "number": 74, "title": "dill instead of pickle", "user": {"login": "runflowcode", "id": 5005532, "node_id": "MDQ6VXNlcjUwMDU1MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5005532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/runflowcode", "html_url": "https://github.com/runflowcode", "followers_url": "https://api.github.com/users/runflowcode/followers", "following_url": "https://api.github.com/users/runflowcode/following{/other_user}", "gists_url": "https://api.github.com/users/runflowcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/runflowcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/runflowcode/subscriptions", "organizations_url": "https://api.github.com/users/runflowcode/orgs", "repos_url": "https://api.github.com/users/runflowcode/repos", "events_url": "https://api.github.com/users/runflowcode/events{/privacy}", "received_events_url": "https://api.github.com/users/runflowcode/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935545, "node_id": "MDU6TGFiZWwxODY5MzU1NDU=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-17T21:32:05Z", "updated_at": "2018-03-18T09:09:47Z", "closed_at": "2018-03-18T09:09:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nWould it be possible to use dill instead of pickle for your queues ? Dill is a better alternative for serialization than pickle. \r\n\r\nhttps://stackoverflow.com/questions/8804830/python-multiprocessing-pickling-error", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/69", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/69/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/69/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/69", "id": 274403444, "node_id": "MDU6SXNzdWUyNzQ0MDM0NDQ=", "number": 69, "title": "Cross-Compatibility of Python 2 and 3 in a single folder.", "user": {"login": "slee047", "id": 25880359, "node_id": "MDQ6VXNlcjI1ODgwMzU5", "avatar_url": "https://avatars2.githubusercontent.com/u/25880359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slee047", "html_url": "https://github.com/slee047", "followers_url": "https://api.github.com/users/slee047/followers", "following_url": "https://api.github.com/users/slee047/following{/other_user}", "gists_url": "https://api.github.com/users/slee047/gists{/gist_id}", "starred_url": "https://api.github.com/users/slee047/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slee047/subscriptions", "organizations_url": "https://api.github.com/users/slee047/orgs", "repos_url": "https://api.github.com/users/slee047/repos", "events_url": "https://api.github.com/users/slee047/events{/privacy}", "received_events_url": "https://api.github.com/users/slee047/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-16T05:59:30Z", "updated_at": "2017-11-21T07:35:09Z", "closed_at": "2017-11-21T07:35:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have a corporate project that requires maintain of compatibility between 2.7 and 3.X (Mainly 3.6.Y).\r\n\r\nDue to Firewall policy, I could not use pip install X for installing various dependencies that requires futures. This includes _apscheduler_ etc.\r\n\r\nThe only way for me to install these modules is via `--install-lib` (More on:\r\n [https://docs.python.org/2/install/index.html](url)) option with the use of environment variable `PythonPath` with the use of .tar / .zip version.\r\n\r\n\r\nSo, I have installed both Python 2.7 and 3.6 on separate folders in _C:\\_ and a common Module Path at _C:\\Python_Modules_. This will result _apscheduler_ crash for Python 3 version. This is because _apscheduler_ for Python 3 tries to import futures from Python 2 egg regardless if I tried to compile Futures for Python 3 or not.\r\n\r\nAttempted to compile Futures in Python 3 resulted a redundancy warning.\r\n![redundant for python3](https://user-images.githubusercontent.com/25880359/32875780-a851b90a-cad4-11e7-8fdc-b0046c3cd970.png)\r\n\r\nThe first one is:\r\n`raise exception_type, self._exception, self._traceback` in line 381 of _base.py\r\n![first issue](https://user-images.githubusercontent.com/25880359/32875527-67d940e2-cad3-11e7-961c-4a9a387992c5.png)\r\n\r\nThe fix is to change the file (futures-3.1.1\\build\\lib\\concurrent\\futures\\_base.py) with these:\r\n1. Change the line 381 code to:\r\n`raise_with_traceback(exception_type(self._exception))`\r\n2: Add this line of code below line 9 (`import types`) so as to import the traceback feature.\r\n`from future.utils import raise_with_traceback`\r\n\r\nThe changed code (Change the extension from txt to py) can be downloaded here:\r\n[_base.txt](https://github.com/agronholm/pythonfutures/files/1477434/_base.txt)\r\n\r\n\r\n\r\nThe second one is the issue of the Queue and queue for Python 2 and 3 compatibility.\r\n![second issue](https://user-images.githubusercontent.com/25880359/32876004-afbc334a-cad5-11e7-9099-ea291f8277a3.png)\r\n\r\nThis is also faced by other modules such as [https://github.com/docker/compose/issues/2108](url)\r\n\r\nThe fix is to change the file (futures-3.1.1\\build\\lib\\concurrent\\futures\\thread.py) with this on line 8:\r\n```\r\ntry:\r\n\timport Queue as queue\r\nexcept ImportError:\r\n\timport queue\r\n```\r\n\r\nThe changed code (Change the extension from txt to py) can be downloaded here:\r\n[thread.txt](https://github.com/agronholm/pythonfutures/files/1477458/thread.txt)\r\n\r\n\r\nWith these changes on both files, I will able to solve this issue of futures module not able to use in Python 3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/68", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/68/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/68/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/68", "id": 274158334, "node_id": "MDU6SXNzdWUyNzQxNTgzMzQ=", "number": 68, "title": "how to kill program", "user": {"login": "daiguadaidai", "id": 11887263, "node_id": "MDQ6VXNlcjExODg3MjYz", "avatar_url": "https://avatars2.githubusercontent.com/u/11887263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daiguadaidai", "html_url": "https://github.com/daiguadaidai", "followers_url": "https://api.github.com/users/daiguadaidai/followers", "following_url": "https://api.github.com/users/daiguadaidai/following{/other_user}", "gists_url": "https://api.github.com/users/daiguadaidai/gists{/gist_id}", "starred_url": "https://api.github.com/users/daiguadaidai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daiguadaidai/subscriptions", "organizations_url": "https://api.github.com/users/daiguadaidai/orgs", "repos_url": "https://api.github.com/users/daiguadaidai/repos", "events_url": "https://api.github.com/users/daiguadaidai/events{/privacy}", "received_events_url": "https://api.github.com/users/daiguadaidai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935548, "node_id": "MDU6TGFiZWwxODY5MzU1NDg=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-15T13:35:50Z", "updated_at": "2017-12-01T10:58:46Z", "closed_at": "2017-12-01T00:39:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run program but can't kill parent proccess.\r\n\r\ncode:\r\n\r\n```\r\n#-*- coding:utf-8 -*-\r\nfrom concurrent import futures\r\nimport os\r\nimport sys\r\nimport signal\r\n \r\ndef test(num):\r\n    import time\r\n    \r\n    print os.getpid()\r\n    time.sleep(100)\r\n    return time.ctime(), num\r\n\r\ndef handle_interrupt(signum, frame):\r\n    print 'CAUGHT SIGINT!!!!!!!!!!!!!!!!!!!'\r\n    sys.exit(1)\r\n\r\ndef main():\r\n\r\n    signal.signal(signal.SIGTERM, handle_interrupt) # kill\r\n    signal.signal(signal.SIGINT, handle_interrupt)  # Ctrl+C\r\n    signal.signal(signal.SIGQUIT, handle_interrupt) # Ctrl+\\\r\n\r\n    with futures.ProcessPoolExecutor(max_workers=3) as executor:\r\n        print 'id:', id(executor)\r\n        future1 = executor.submit(test,1)\r\n        future2 = executor.submit(test,2)\r\n        print future1\r\n        print future1\r\n\r\n        print future1.result()\r\n        print future2.result()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nrun and press `Ctrl + C` can exit program:\r\n\r\n```\r\npython mul_future.py \r\nid: 140637338392144\r\n<Future at 0x7fe8a35b8ad0 state=running>\r\n<Future at 0x7fe8a35b8ad0 state=running>\r\n2082\r\n2083\r\n^C\r\nCAUGHT SIGINT!!!!!!!!!!!!!!!!!!!\r\nCAUGHT SIGINT!!!!!!!!!!!!!!!!!!!\r\nCAUGHT SIGINT!!!!!!!!!!!!!!!!!!!\r\nCAUGHT SIGINT!!!!!!!!!!!!!!!!!!!\r\n```\r\n\r\n**But use kill can't exit program**\r\n\r\n**session1:**run program:\r\n\r\n```\r\npython mul_future.py \r\nid: 140243206338128\r\n<Future at 0x7f8cdf41aad0 state=running>\r\n<Future at 0x7f8cdf41aad0 state=running>\r\n2091\r\n2092\r\n```\r\n\r\n**session2:**kill parent proccess:\r\n\r\n```\r\nps -ef | grep python\r\nroot      2087  1910  0 21:32 pts/0    00:00:00 python mul_future.py\r\nroot      2091  2087  0 21:32 pts/0    00:00:00 python mul_future.py\r\nroot      2092  2087  0 21:32 pts/0    00:00:00 python mul_future.py\r\nroot      2093  2087  0 21:32 pts/0    00:00:00 python mul_future.py\r\n\r\nkill 2087\r\n\r\nps -ef | grep python\r\nroot      2087  1910  0 21:32 pts/0    00:00:00 python mul_future.py\r\nroot      2091  2087  0 21:32 pts/0    00:00:00 python mul_future.py\r\nroot      2092  2087  0 21:32 pts/0    00:00:00 python mul_future.py\r\nroot      2093  2087  0 21:32 pts/0    00:00:00 python mul_future.py\r\n```\r\n\r\nwhat should i do?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/63", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/63/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/63/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/63", "id": 232331016, "node_id": "MDU6SXNzdWUyMzIzMzEwMTY=", "number": 63, "title": "Backport: Issue #27664: Allow specifying prefix for thread name in concurrent.futures.ThreadPoolExecutor", "user": {"login": "normanr", "id": 14849, "node_id": "MDQ6VXNlcjE0ODQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/14849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/normanr", "html_url": "https://github.com/normanr", "followers_url": "https://api.github.com/users/normanr/followers", "following_url": "https://api.github.com/users/normanr/following{/other_user}", "gists_url": "https://api.github.com/users/normanr/gists{/gist_id}", "starred_url": "https://api.github.com/users/normanr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/normanr/subscriptions", "organizations_url": "https://api.github.com/users/normanr/orgs", "repos_url": "https://api.github.com/users/normanr/repos", "events_url": "https://api.github.com/users/normanr/events{/privacy}", "received_events_url": "https://api.github.com/users/normanr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-30T17:51:13Z", "updated_at": "2017-12-04T18:00:30Z", "closed_at": "2017-08-08T15:34:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please consider including the changes for thread_name_prefix:\r\n\r\nhttp://bugs.python.org/issue27664, commit: https://github.com/python/cpython/commit/50abe877ee6f50ebd9cfe228d314220e071fa3c6\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/62", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/62/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/62/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/62", "id": 221756736, "node_id": "MDU6SXNzdWUyMjE3NTY3MzY=", "number": 62, "title": "Please maintain your PyPI project", "user": {"login": "shend", "id": 1657841, "node_id": "MDQ6VXNlcjE2NTc4NDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1657841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shend", "html_url": "https://github.com/shend", "followers_url": "https://api.github.com/users/shend/followers", "following_url": "https://api.github.com/users/shend/following{/other_user}", "gists_url": "https://api.github.com/users/shend/gists{/gist_id}", "starred_url": "https://api.github.com/users/shend/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shend/subscriptions", "organizations_url": "https://api.github.com/users/shend/orgs", "repos_url": "https://api.github.com/users/shend/repos", "events_url": "https://api.github.com/users/shend/events{/privacy}", "received_events_url": "https://api.github.com/users/shend/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-14T07:17:20Z", "updated_at": "2017-04-14T13:58:43Z", "closed_at": "2017-04-14T13:58:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "The PyPI project did not upload a new version since 2016-02-14, please upload the new 3.1.0 to PyPI. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/56", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/56/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/56/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/56", "id": 168881687, "node_id": "MDU6SXNzdWUxNjg4ODE2ODc=", "number": 56, "title": " issue with proxy authentication when installing the package \"futures: 3.0.5\" (\"futures 3.0.3\" seems to works fine)", "user": {"login": "tarrade", "id": 12021701, "node_id": "MDQ6VXNlcjEyMDIxNzAx", "avatar_url": "https://avatars0.githubusercontent.com/u/12021701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tarrade", "html_url": "https://github.com/tarrade", "followers_url": "https://api.github.com/users/tarrade/followers", "following_url": "https://api.github.com/users/tarrade/following{/other_user}", "gists_url": "https://api.github.com/users/tarrade/gists{/gist_id}", "starred_url": "https://api.github.com/users/tarrade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tarrade/subscriptions", "organizations_url": "https://api.github.com/users/tarrade/orgs", "repos_url": "https://api.github.com/users/tarrade/repos", "events_url": "https://api.github.com/users/tarrade/events{/privacy}", "received_events_url": "https://api.github.com/users/tarrade/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935547, "node_id": "MDU6TGFiZWwxODY5MzU1NDc=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-02T13:13:34Z", "updated_at": "2016-08-02T13:27:29Z", "closed_at": "2016-08-02T13:16:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nNot sure what is the best place to post this. Please tell me if this is not the right place.\n\nI installed conda 3.18.8 (My company used this version) on a PC (Windows 7):\n\nH:>conda info\nCurrent conda install:\n             platform : win-64\n        conda version : 3.18.8\n  conda-build version : 1.18.2\n       python version : 2.7.11.final.0\n     requests version : 2.8.1\n     root environment : C:\\Program Files\\Anaconda2  (writable)\n  default environment : C:\\Program Files\\Anaconda2\n     envs directories : C:\\Program Files\\Anaconda2\\envs\n        package cache : C:\\Program Files\\Anaconda2\\pkgs\n         channel URLs : https://repo.continuum.io/pkgs/free/win-64/\n                        https://repo.continuum.io/pkgs/free/noarch/\n                        https://repo.continuum.io/pkgs/pro/win-64/\n                        https://repo.continuum.io/pkgs/pro/noarch/\n          config file : C:\\Users\\C172685.condarc\n    is foreign system : False\n\nwith a condarc file for the proxy config and with the following packages:\n\npip\nscipy\ncx_oracle\nanaconda-navigator\nblaze\nconda-manager\ndill\net_xmlfile\n\nwhich gave me\nanaconda                  2.4.1\nconda                       4.1.11\n\nwhen I install \"futures: 3.0.5-py27_0 defaults\" I get an issue with the proxy (see screenshot 1)\n![screenshot 1](https://cloud.githubusercontent.com/assets/12021701/17329454/030095d6-58c3-11e6-9fc7-b59fb0024506.png)\n\nas you ca see it asked for \"https proxy username: Password:\"\n-> I can see all the character when I type the pwd\n-> the pwd doesn't work\n-> it will ask me again the pwd and then it will be stuck and I will have to kill the windows ! \n\nI thought it was an issue with the proxy with our company but if I removed it it works fine again (no issue with the pwd) !(see screenshot 2)\n![screenshot 2](https://cloud.githubusercontent.com/assets/12021701/17329500/2fb99e24-58c3-11e6-8801-696504ed9c33.png)\n\nI also find that: futures  3.0.3 works fine\nDo expert understand my issue with futures: 3.0.5-py27_0 defaults ? Why it affect the authentication with the proxy ?\n\nI am new with conda and almost now knowledge with proxy.\n\nThanks a lot\nCheers\nFabien\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/55", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/55/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/55/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/55", "id": 157670027, "node_id": "MDU6SXNzdWUxNTc2NzAwMjc=", "number": 55, "title": "ThreadPoolExecutor should fail when max_worker is 0", "user": {"login": "leplatrem", "id": 546692, "node_id": "MDQ6VXNlcjU0NjY5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/546692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leplatrem", "html_url": "https://github.com/leplatrem", "followers_url": "https://api.github.com/users/leplatrem/followers", "following_url": "https://api.github.com/users/leplatrem/following{/other_user}", "gists_url": "https://api.github.com/users/leplatrem/gists{/gist_id}", "starred_url": "https://api.github.com/users/leplatrem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leplatrem/subscriptions", "organizations_url": "https://api.github.com/users/leplatrem/orgs", "repos_url": "https://api.github.com/users/leplatrem/repos", "events_url": "https://api.github.com/users/leplatrem/events{/privacy}", "received_events_url": "https://api.github.com/users/leplatrem/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935543, "node_id": "MDU6TGFiZWwxODY5MzU1NDM=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-05-31T13:21:43Z", "updated_at": "2016-11-21T14:22:27Z", "closed_at": "2016-11-08T23:40:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed a difference when instantiated the executor with `ThreadPoolExecutor(max_workers=0)`.\nThe backport does not raise, whereas the 3.5 raises a ValueError:\n\n```\n  File \"/opt/python/3.5.0/lib/python3.5/concurrent/futures/thread.py\", line 96, in __init__\n    raise ValueError(\"max_workers must be greater than 0\")\n\nValueError: max_workers must be greater than 0\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/54", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/54/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/54/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/54", "id": 139202586, "node_id": "MDU6SXNzdWUxMzkyMDI1ODY=", "number": 54, "title": "ThreadPoolExecutor should have a default value of None for the max_workers argument", "user": {"login": "jbg", "id": 39903, "node_id": "MDQ6VXNlcjM5OTAz", "avatar_url": "https://avatars3.githubusercontent.com/u/39903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbg", "html_url": "https://github.com/jbg", "followers_url": "https://api.github.com/users/jbg/followers", "following_url": "https://api.github.com/users/jbg/following{/other_user}", "gists_url": "https://api.github.com/users/jbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbg/subscriptions", "organizations_url": "https://api.github.com/users/jbg/orgs", "repos_url": "https://api.github.com/users/jbg/repos", "events_url": "https://api.github.com/users/jbg/events{/privacy}", "received_events_url": "https://api.github.com/users/jbg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-08T07:29:20Z", "updated_at": "2016-11-08T23:40:57Z", "closed_at": "2016-11-08T23:40:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://docs.python.org/dev/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/53", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/53/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/53/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/53", "id": 136333750, "node_id": "MDU6SXNzdWUxMzYzMzM3NTA=", "number": 53, "title": "PSF License and BSD license validity clarification", "user": {"login": "vlna", "id": 8721731, "node_id": "MDQ6VXNlcjg3MjE3MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8721731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlna", "html_url": "https://github.com/vlna", "followers_url": "https://api.github.com/users/vlna/followers", "following_url": "https://api.github.com/users/vlna/following{/other_user}", "gists_url": "https://api.github.com/users/vlna/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlna/subscriptions", "organizations_url": "https://api.github.com/users/vlna/orgs", "repos_url": "https://api.github.com/users/vlna/repos", "events_url": "https://api.github.com/users/vlna/events{/privacy}", "received_events_url": "https://api.github.com/users/vlna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-25T09:44:45Z", "updated_at": "2017-04-14T13:57:48Z", "closed_at": "2017-04-14T13:57:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Main license is BSD but individual files have PSF License header. It makes confusion about correct licensing terms.\n\nIt needs clarification which license(s) is/are valid for this package.\n\nMain LICENSE file (BSD) was created on on Jun 11, 2009 and not modified later. PSF License boilerplates in individual files were added on 13 Nov 2010, commit @69d0be403e5e118a3bf23a4fc8f1c49f4fd4d36c\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/51", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/51/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/51/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/51", "id": 127070650, "node_id": "MDU6SXNzdWUxMjcwNzA2NTA=", "number": 51, "title": "missing braces in concurrent/futures/_base.py", "user": {"login": "lebeier", "id": 4088438, "node_id": "MDQ6VXNlcjQwODg0Mzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4088438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lebeier", "html_url": "https://github.com/lebeier", "followers_url": "https://api.github.com/users/lebeier/followers", "following_url": "https://api.github.com/users/lebeier/following{/other_user}", "gists_url": "https://api.github.com/users/lebeier/gists{/gist_id}", "starred_url": "https://api.github.com/users/lebeier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lebeier/subscriptions", "organizations_url": "https://api.github.com/users/lebeier/orgs", "repos_url": "https://api.github.com/users/lebeier/repos", "events_url": "https://api.github.com/users/lebeier/events{/privacy}", "received_events_url": "https://api.github.com/users/lebeier/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935547, "node_id": "MDU6TGFiZWwxODY5MzU1NDc=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-01-17T02:59:25Z", "updated_at": "2016-01-18T14:09:04Z", "closed_at": "2016-01-17T03:55:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The missing braces in line 357 \n**raise type(self._exception), self._exception, self._traceback**\nneeds to be updated to\n**raise (type(self._exception), self._exception, self._traceback)**\n\nThis issue is causing django-pipeline to break as it depends on this package.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/49", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/49/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/49/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/49", "id": 119281543, "node_id": "MDU6SXNzdWUxMTkyODE1NDM=", "number": 49, "title": "Add Readme.md", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-28T09:10:22Z", "updated_at": "2017-02-19T19:02:29Z", "closed_at": "2017-02-19T19:02:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/48", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/48/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/48/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/48", "id": 114934327, "node_id": "MDU6SXNzdWUxMTQ5MzQzMjc=", "number": 48, "title": "child processes inherit parent's global state?", "user": {"login": "mariusnita", "id": 5980501, "node_id": "MDQ6VXNlcjU5ODA1MDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5980501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariusnita", "html_url": "https://github.com/mariusnita", "followers_url": "https://api.github.com/users/mariusnita/followers", "following_url": "https://api.github.com/users/mariusnita/following{/other_user}", "gists_url": "https://api.github.com/users/mariusnita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariusnita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariusnita/subscriptions", "organizations_url": "https://api.github.com/users/mariusnita/orgs", "repos_url": "https://api.github.com/users/mariusnita/repos", "events_url": "https://api.github.com/users/mariusnita/events{/privacy}", "received_events_url": "https://api.github.com/users/mariusnita/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-03T23:27:18Z", "updated_at": "2015-11-03T23:35:58Z", "closed_at": "2015-11-03T23:35:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\n``` python\nimport concurrent.futures as cf\n\nBEEP = None\n\ndef foo(x):\n    print BEEP\n\nif __name__ == '__main__':\n    BEEP = 500\n    with cf.ProcessPoolExecutor(max_workers=4) as executor:\n        for i in xrange(10):\n            executor.submit(foo, i)\n```\n\nIn this example, I would expect all the processes to print `None`, but they all print `500`. Is this the correct behavior?\n\nIf so, is there a way to exec clean processes without inheriting memory from the parent?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/46", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/46/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/46/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/46", "id": 112639155, "node_id": "MDU6SXNzdWUxMTI2MzkxNTU=", "number": 46, "title": "Support Python3 in tests", "user": {"login": "domenkozar", "id": 126339, "node_id": "MDQ6VXNlcjEyNjMzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/126339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domenkozar", "html_url": "https://github.com/domenkozar", "followers_url": "https://api.github.com/users/domenkozar/followers", "following_url": "https://api.github.com/users/domenkozar/following{/other_user}", "gists_url": "https://api.github.com/users/domenkozar/gists{/gist_id}", "starred_url": "https://api.github.com/users/domenkozar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domenkozar/subscriptions", "organizations_url": "https://api.github.com/users/domenkozar/orgs", "repos_url": "https://api.github.com/users/domenkozar/repos", "events_url": "https://api.github.com/users/domenkozar/events{/privacy}", "received_events_url": "https://api.github.com/users/domenkozar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935547, "node_id": "MDU6TGFiZWwxODY5MzU1NDc=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-21T17:25:24Z", "updated_at": "2015-10-22T19:53:31Z", "closed_at": "2015-10-21T17:35:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n\n======================================================================\nERROR: test_futures (unittest.loader.ModuleImportFailure)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/nix/store/lwz7kmb4jzgh3da04p1pa723i6084xk0-python3-3.4.3/lib/python3.4/unittest/case.py\", line 58, in testPartExecutor\n    yield\n  File \"/nix/store/lwz7kmb4jzgh3da04p1pa723i6084xk0-python3-3.4.3/lib/python3.4/unittest/case.py\", line 577, in run\n    testMethod()\n  File \"/nix/store/lwz7kmb4jzgh3da04p1pa723i6084xk0-python3-3.4.3/lib/python3.4/unittest/loader.py\", line 32, in testFailure\n    raise exception\nImportError: Failed to import test module: test_futures\nTraceback (most recent call last):\n  File \"/nix/store/lwz7kmb4jzgh3da04p1pa723i6084xk0-python3-3.4.3/lib/python3.4/unittest/loader.py\", line 312, in _find_tests\n    module = self._get_module_from_name(name)\n  File \"/nix/store/lwz7kmb4jzgh3da04p1pa723i6084xk0-python3-3.4.3/lib/python3.4/unittest/loader.py\", line 290, in _get_module_from_name\n    __import__(name)\n  File \"/tmp/nix-build-python3.4-futures-3.0.2.drv-0/futures-3.0.2/test_futures.py\", line 10, in <module>\n    from StringIO import StringIO\nImportError: No module named 'StringIO'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/44", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/44/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/44/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/44", "id": 98022076, "node_id": "MDU6SXNzdWU5ODAyMjA3Ng==", "number": 44, "title": "len(Executor) return number of items in queue?", "user": {"login": "jcpunk", "id": 3534830, "node_id": "MDQ6VXNlcjM1MzQ4MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3534830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcpunk", "html_url": "https://github.com/jcpunk", "followers_url": "https://api.github.com/users/jcpunk/followers", "following_url": "https://api.github.com/users/jcpunk/following{/other_user}", "gists_url": "https://api.github.com/users/jcpunk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcpunk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcpunk/subscriptions", "organizations_url": "https://api.github.com/users/jcpunk/orgs", "repos_url": "https://api.github.com/users/jcpunk/repos", "events_url": "https://api.github.com/users/jcpunk/events{/privacy}", "received_events_url": "https://api.github.com/users/jcpunk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-29T20:25:08Z", "updated_at": "2015-07-29T20:34:17Z", "closed_at": "2015-07-29T20:34:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "As a feature request, can the Executor respond to a len() request by showing the number of non-finished/canceled items in the pool?\n\nI would like a clean pythonic way of seeing how many items remain to be executed and this seemed the way to go.\n\npsudo-code:\n\n``` python\n    myvar = list(range(1, 30))\n\n    pool = concurrent.futures.ThreadPoolExecutor(max_workers=2)\n    results = pool.map(myfunction, myvar)\n\n    for result in results:\n        print(\"waiting for \" + str(len(pool)) + \" tasks to finish\")\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/41", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/41/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/41/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/41", "id": 95028411, "node_id": "MDU6SXNzdWU5NTAyODQxMQ==", "number": 41, "title": "syntax error with  raise type(self._exception), self._exception, self._traceback (_base.py)", "user": {"login": "sdpython", "id": 4695832, "node_id": "MDQ6VXNlcjQ2OTU4MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4695832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdpython", "html_url": "https://github.com/sdpython", "followers_url": "https://api.github.com/users/sdpython/followers", "following_url": "https://api.github.com/users/sdpython/following{/other_user}", "gists_url": "https://api.github.com/users/sdpython/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdpython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdpython/subscriptions", "organizations_url": "https://api.github.com/users/sdpython/orgs", "repos_url": "https://api.github.com/users/sdpython/repos", "events_url": "https://api.github.com/users/sdpython/events{/privacy}", "received_events_url": "https://api.github.com/users/sdpython/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186935547, "node_id": "MDU6TGFiZWwxODY5MzU1NDc=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2015-07-14T20:06:47Z", "updated_at": "2018-11-20T12:03:07Z", "closed_at": "2015-08-03T14:25:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed futures 3.0.3 and it raised the following exception:\n\n```\nfrom IPython.kernel import KernelManager\n```\n\n  File \"c:\\apythonensae\\python\\lib\\site-packages\\IPython\\kernel__init__.py\", line 4, in <module>\n    from . import zmq\n  File \"c:\\apythonensae\\python\\lib\\site-packages\\IPython\\kernel\\zmq__init__.py\", line 10, in <module>\n    from .session import Session\n  File \"c:\\apythonensae\\python\\lib\\site-packages\\IPython\\kernel\\zmq\\session.py\", line 41, in <module>\n    from zmq.eventloop.ioloop import IOLoop\n  File \"c:\\apythonensae\\python\\lib\\site-packages\\zmq\\eventloop__init__.py\", line 3, in <module>\n    from zmq.eventloop.ioloop import IOLoop\n  File \"c:\\apythonensae\\python\\lib\\site-packages\\zmq\\eventloop\\ioloop.py\", line 35, in <module>\n    from tornado.ioloop import PollIOLoop, PeriodicCallback\n  File \"c:\\apythonensae\\python\\lib\\site-packages\\tornado\\ioloop.py\", line 46, in <module>\n    from tornado.concurrent import TracebackFuture, is_future\n  File \"c:\\apythonensae\\python\\lib\\site-packages\\tornado\\concurrent.py\", line 37, in <module>\n    from concurrent import futures\n  File \"c:\\apythonensae\\python\\lib\\site-packages\\concurrent\\futures__init__.py\", line 8, in <module>\n    from concurrent.futures._base import (FIRST_COMPLETED,\n  File \"c:\\apythonensae\\python\\lib\\site-packages\\concurrent\\futures_base.py\", line 355\n    raise type(self._exception), self._exception, self._traceback\n                               ^\nSyntaxError: invalid syntax\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/39", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/39/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/39/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/39", "id": 94372389, "node_id": "MDU6SXNzdWU5NDM3MjM4OQ==", "number": 39, "title": "Map is still greedy", "user": {"login": "mathieulongtin", "id": 617359, "node_id": "MDQ6VXNlcjYxNzM1OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/617359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathieulongtin", "html_url": "https://github.com/mathieulongtin", "followers_url": "https://api.github.com/users/mathieulongtin/followers", "following_url": "https://api.github.com/users/mathieulongtin/following{/other_user}", "gists_url": "https://api.github.com/users/mathieulongtin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathieulongtin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathieulongtin/subscriptions", "organizations_url": "https://api.github.com/users/mathieulongtin/orgs", "repos_url": "https://api.github.com/users/mathieulongtin/repos", "events_url": "https://api.github.com/users/mathieulongtin/events{/privacy}", "received_events_url": "https://api.github.com/users/mathieulongtin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-10T19:14:08Z", "updated_at": "2016-11-02T18:39:20Z", "closed_at": "2015-07-20T16:44:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Further test of map suggests it is still greedy. If you submit a large iterator, it gets consumed almost immediately, causing memory issues.\n\nHere's a simple test. If map wasn't greedy, it would print \"time to first result\" almost immediately. But it prints when the processing is almost done.\n\n```\nimport concurrent.futures\nimport time\nimport sys\n\ndef job(i):\n    return i\n\nwith concurrent.futures.ThreadPoolExecutor(max_workers=4) as executor:\n    s = 0\n    start_time = time.time()\n    for i in executor.map(job, xrange(1, 100000)):\n        if s == 0:\n            print \"time to first result=%.3f s\" % (time.time() - start_time)\n        s += i\n    print \"time to finish=%.3f s\" % (time.time() - start_time)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/38", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/38/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/38/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/38", "id": 77966695, "node_id": "MDU6SXNzdWU3Nzk2NjY5NQ==", "number": 38, "title": "Testsuite failures", "user": {"login": "nijel", "id": 212189, "node_id": "MDQ6VXNlcjIxMjE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/212189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nijel", "html_url": "https://github.com/nijel", "followers_url": "https://api.github.com/users/nijel/followers", "following_url": "https://api.github.com/users/nijel/following{/other_user}", "gists_url": "https://api.github.com/users/nijel/gists{/gist_id}", "starred_url": "https://api.github.com/users/nijel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nijel/subscriptions", "organizations_url": "https://api.github.com/users/nijel/orgs", "repos_url": "https://api.github.com/users/nijel/repos", "events_url": "https://api.github.com/users/nijel/events{/privacy}", "received_events_url": "https://api.github.com/users/nijel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-19T07:02:14Z", "updated_at": "2015-06-12T21:49:39Z", "closed_at": "2015-06-12T21:49:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "In some cases the repr does not match test expectations:\n\n```\nTraceback (most recent call last):\n  File \"test_futures.py\", line 578, in test_repr\n    '<Future at 0x[0-9a-f]+ state=pending>')\nAssertionError: Regexp didn't match: '<Future at 0x[0-9a-f]+ state=pending>' not found in '<Future at 0xf6f3a24cL state=pending>'\n```\n\nFollowing patch fixes it:\n\nhttps://build.opensuse.org/package/view_file/devel:languages:python/python-futures/fix-testsuite.patch?expand=1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/36", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/36/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/36/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/36", "id": 68257839, "node_id": "MDU6SXNzdWU2ODI1NzgzOQ==", "number": 36, "title": "error: can't start new thread", "user": {"login": "lansman", "id": 1588720, "node_id": "MDQ6VXNlcjE1ODg3MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1588720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lansman", "html_url": "https://github.com/lansman", "followers_url": "https://api.github.com/users/lansman/followers", "following_url": "https://api.github.com/users/lansman/following{/other_user}", "gists_url": "https://api.github.com/users/lansman/gists{/gist_id}", "starred_url": "https://api.github.com/users/lansman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lansman/subscriptions", "organizations_url": "https://api.github.com/users/lansman/orgs", "repos_url": "https://api.github.com/users/lansman/repos", "events_url": "https://api.github.com/users/lansman/events{/privacy}", "received_events_url": "https://api.github.com/users/lansman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 206947500, "node_id": "MDU6TGFiZWwyMDY5NDc1MDA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/awaiting%20input", "name": "awaiting input", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-14T04:18:26Z", "updated_at": "2016-02-26T05:16:07Z", "closed_at": "2016-02-26T05:16:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Windows 7 x64, python 2.7.9\nI use requests-features library which uses python-futures.\n\nI call this usual code (got from requests-futures examples) that makes requests to some internet-API many-many times in loop. And it seems it creates 1 new thread per each request, so it seems bug. \n\nfrom requests_futures.sessions import FuturesSession as SessionAsync\nsession = SessionAsync(max_workers=2)\nresp = session.get(self.main_address,\n                   params=self.query_params,\n                   background_callback=self.parse_response,\n                   proxies=...,\n                   timeout=...)\n\nWhen loops counter comes to ~600 and number of threads comes to 600, fall occurs:\n\n  File \"C:\\myscript.py\", line 223, in get_coords_for_addr\n    timeout=self.web_config.timeout)\n  File \"C:\\Python27\\ArcGIS10.2\\lib\\site-packages\\requests\\sessions.py\", line 476, in get\n    return self.request('GET', url, *_kwargs)\n  File \"C:\\Python27\\ArcGIS10.2\\lib\\site-packages\\requests_futures\\sessions.py\", line 73, in request\n    return self.executor.submit(func, *args, *_kwargs)\n  File \"C:\\Python27\\ArcGIS10.2\\lib\\site-packages\\concurrent\\futures\\thread.py\", line 111, in submit\n    self._adjust_thread_count()\n  File \"C:\\Python27\\ArcGIS10.2\\lib\\site-packages\\concurrent\\futures\\thread.py\", line 127, in _adjust_thread_count\n    t.start()\n  File \"C:\\Python27\\ArcGIS10.2\\lib\\threading.py\", line 745, in start\n    _start_new_thread(self.__bootstrap, ())\nerror: can't start new thread\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/35", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/35/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/35/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/35", "id": 65070601, "node_id": "MDU6SXNzdWU2NTA3MDYwMQ==", "number": 35, "title": "Threading needs at least one statement after submit to start", "user": {"login": "thorstenkampe", "id": 475462, "node_id": "MDQ6VXNlcjQ3NTQ2Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/475462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thorstenkampe", "html_url": "https://github.com/thorstenkampe", "followers_url": "https://api.github.com/users/thorstenkampe/followers", "following_url": "https://api.github.com/users/thorstenkampe/following{/other_user}", "gists_url": "https://api.github.com/users/thorstenkampe/gists{/gist_id}", "starred_url": "https://api.github.com/users/thorstenkampe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thorstenkampe/subscriptions", "organizations_url": "https://api.github.com/users/thorstenkampe/orgs", "repos_url": "https://api.github.com/users/thorstenkampe/repos", "events_url": "https://api.github.com/users/thorstenkampe/events{/privacy}", "received_events_url": "https://api.github.com/users/thorstenkampe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-29T15:31:13Z", "updated_at": "2015-05-04T01:05:28Z", "closed_at": "2015-05-03T05:23:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "OS: Windows 8.1, Python 2.7.9 32-bit and 3.4.3 64-bit, also tested under Cygwin and Ubuntu 14.10\n\nThe following code snippet will return `False` on Python2 with `pythonfutures` and `True` on Python3 with the builtin module:\n\n```\nimport time, concurrent.futures\n\nexecutor = concurrent.futures.ThreadPoolExecutor(max_workers = 1)\nfuture   = executor.submit(time.sleep, 1)\n#print('')\nprint(future.running())\n```\n\nIf you uncomment `print('')`, Python2 with `pythonfutures` will print `True`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/33", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/33/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/33/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/33", "id": 61388154, "node_id": "MDU6SXNzdWU2MTM4ODE1NA==", "number": 33, "title": "atexit hooks are wrongly used", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-14T03:43:44Z", "updated_at": "2015-06-12T21:29:19Z", "closed_at": "2015-06-12T21:28:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI do not know how to reproduce with small program, but when using tornado \ntests, I receive that:\n\n--------------------------------\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/atexit.py\", line 24, in _run_exitfuncs\n    func(*targs, **kargs)\n  File \"/home/mmarkk/.local/lib/python2.7/site-packages/concurrent/futures/process.py\", line 82, in _python_exit\n    items = list(_threads_queues.items())\nAttributeError: 'NoneType' object has no attribute 'items'\nError in atexit._run_exitfuncs:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/atexit.py\", line 24, in _run_exitfuncs\n    func(*targs, **kargs)\n  File \"/home/mmarkk/.local/lib/python2.7/site-packages/concurrent/futures/thread.py\", line 41, in _python_exit\n    items = list(_threads_queues.items())\nAttributeError: 'NoneType' object has no attribute 'items'\nError in sys.exitfunc:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/atexit.py\", line 24, in _run_exitfuncs\n    func(*targs, **kargs)\n  File \"/home/mmarkk/.local/lib/python2.7/site-packages/concurrent/futures/thread.py\", line 41, in _python_exit\n    items = list(_threads_queues.items())\nAttributeError: 'NoneType' object has no attribute 'items'\n---------------------------\n\nBut this problem is easily fixed with that:\n\n--- process.py  2015-01-21 15:27:49.458086156 +0500\n+++ process.py.new  2015-01-21 15:28:10.906259116 +0500\n@@ -76,7 +76,7 @@\n _threads_queues = weakref.WeakKeyDictionary()\n _shutdown = False\n\n-def _python_exit():\n+def _python_exit(_threads_queues=_threads_queues):\n     global _shutdown\n     _shutdown = True\n     items = list(_threads_queues.items())\n\n\n!!!!! and exactly the same for threads.py !!!!\n\nWhat the hell? I do not know how the _threads_queues may become None.\n\n```\n\nOriginal issue reported on code.google.com by `socketp...@gmail.com` on 21 Jan 2015 at 10:29\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/31", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/31/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/31/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/31", "id": 61388149, "node_id": "MDU6SXNzdWU2MTM4ODE0OQ==", "number": 31, "title": "concurrency errors running multiple processes together with a process pool executor", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}, {"id": 206947500, "node_id": "MDU6TGFiZWwyMDY5NDc1MDA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/awaiting%20input", "name": "awaiting input", "color": "fbca04", "default": false, "description": null}, {"id": 186935547, "node_id": "MDU6TGFiZWwxODY5MzU1NDc=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-14T03:43:43Z", "updated_at": "2017-10-03T13:45:44Z", "closed_at": "2017-10-03T13:45:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI'm trying to run multiple processes and at the same time use the \nconcurrent.futures.ProcessPoolExecutor to run CPU intensive jobs. The first few \nrequests are happily served, but then a KeyError is raised from \nconcurrent.futures.process, and the server hangs.\n\nI submitted a bug report for Tornado, and they suggest it's a problem with \nconcurrent package.\n\nThis is the simplest form I stripped the code to.\n\nserver:\n\n\"\"\"\nserver runs 2 processes and does job on a ProcessPoolExecutor\n\"\"\"\nimport tornado.web\nimport tornado.ioloop\nimport tornado.gen\nimport tornado.options\nimport tornado.httpserver\n\nfrom concurrent.futures import ProcessPoolExecutor\n\n\nclass MainHandler(tornado.web.RequestHandler):\n\n    executor = ProcessPoolExecutor(1)\n\n    @tornado.gen.coroutine\n    def post(self):\n        num = int(self.request.body)\n        result = yield self.executor.submit(pow, num, 2)\n        self.finish(str(result))\n\n\napplication = tornado.web.Application([\n    (r\"/\", MainHandler),\n])\n\n\ndef main():\n    tornado.options.parse_command_line()\n    server = tornado.httpserver.HTTPServer(application)\n    server.bind(8888)\n    server.start(2)\n    tornado.ioloop.IOLoop.instance().start()\n\n\nif __name__ == '__main__':\n    main()\nclient\n\n\"\"\"\nclient\n\"\"\"\nfrom tornado.httpclient import AsyncHTTPClient\nfrom tornado.gen import coroutine\nfrom tornado.ioloop import IOLoop\n\n\n@coroutine\ndef remote_compute(num):\n    rsp = yield AsyncHTTPClient().fetch(\n        'http://127.0.0.1:8888', method='POST', body=str(num))\n    print 'result:', rsp.body\n\nIOLoop.instance().run_sync(lambda: remote_compute(10))\nerror traceback\n\nException in thread Thread-1:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/python/2.7.7_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"/usr/local/Cellar/python/2.7.7_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 763, in run\n    self.__target(*self.__args, **self.__kwargs)\n  File \"/Users/cliffxuan/.virtualenvs/executor/lib/python2.7/site-packages/concurrent/futures/process.py\", line 216, in _queue_management_worker\n    work_item = pending_work_items[result_item.work_id]\nKeyError: 0\n```\n\nOriginal issue reported on code.google.com by `cliff.x...@gmail.com` on 15 Oct 2014 at 8:44\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/32", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/32/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/32/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/32", "id": 61388152, "node_id": "MDU6SXNzdWU2MTM4ODE1Mg==", "number": 32, "title": "Please apply the fix for http://bugs.python.org/issue16284", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-14T03:43:43Z", "updated_at": "2015-05-03T05:40:21Z", "closed_at": "2015-05-03T05:40:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nThe absence of the patches from http://bugs.python.org/issue16284 \n(concurrent.futures ThreadPoolExecutor keeps unnecessary references to worker \nfunctions) leads to memory leaks. Currently we have to monkey-patch the library.\n\nThanks!\n```\n\nOriginal issue reported on code.google.com by `kisl...@gmail.com` on 15 Nov 2014 at 8:14\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/29", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/29/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/29/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/29", "id": 61388144, "node_id": "MDU6SXNzdWU2MTM4ODE0NA==", "number": 29, "title": "Child process termination not known by Parent error in concurrent.futures", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}, {"id": 186935546, "node_id": "MDU6TGFiZWwxODY5MzU1NDY=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}, {"id": 186935549, "node_id": "MDU6TGFiZWwxODY5MzU1NDk=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-14T03:43:42Z", "updated_at": "2015-05-03T06:23:08Z", "closed_at": "2015-05-03T06:23:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\n1. Submit a task using ProcessPoolExecutor\n2. kill -9 <one_of_childrens_pid>\n3. parent process gets blocked forever.\n\nWhat is the expected output? What do you see instead?\n\nWe encountered an error in which if a child process dies or crashes the parent \nprocess is not notified and parent goes in blocked state. Other children are \neither in blocked or timed out state.\n\nWe were able to reproduce this scenario by using following code and by killing \none of the child.\n\n#!/home/y/bin64/python2.7\n\nimport concurrent.futures\nimport time\nimport signal\nimport os\nimport sys\nimport traceback\n\n\ndef just_wait(identifier):\n    time.sleep(20)\n    return identifier\n\ndef signal_handler(sig, stack):\n    try:\n        result = os.waitpid(-1, os.WNOHANG)\n        while result[0]:\n            print(\"Reaped child process %s\" % result[0])\n            result = os.waitpid(-1, os.WNOHANG)\n        traceback.print_stack()\n        sys.exit()    \n    except (OSError):\n        pass\n\ndef main():\n    with concurrent.futures.ProcessPoolExecutor(max_workers=30) as executor:\n        future_to_id = [executor.submit(just_wait, i) for i in range(1, 31)]\n        for future in concurrent.futures.as_completed(future_to_id):\n            returned_id = future.result()\n            print \"Process Id: \", returned_id\n\nif __name__=='__main__':\n    signal.signal(signal.SIGCHLD, signal_handler)\n    main()\n\nThe status of one of the child processes:\n$sudo strace -p 30974\nPassword: \nProcess 30974 attached - interrupt to quit\nrestart_syscall(<... resuming interrupted call ...>) = -1 ETIMEDOUT (Connection \ntimed out)\ngettimeofday({1410964539, 104107}, NULL) = 0\ngettimeofday({1410964539, 104165}, NULL) = 0\nfutex(0x7f3e698e7000, FUTEX_WAIT_BITSET|FUTEX_CLOCK_REALTIME, 0, {1410964539, \n204165000}, ffffffff) = -1 ETIMEDOUT (Connection timed out)\ngettimeofday({1410964539, 204812}, NULL) = 0\ngettimeofday({1410964539, 204845}, NULL) = 0\n\nThe status for parent process:\nsudo strace -p 30948\nProcess 30948 attached - interrupt to quit\nfutex(0x1addc30, FUTEX_WAIT_PRIVATE, 0, NULL\n\nWhat version of the product are you using? On what operating system?\nRHEL - 6.4.\n\nPlease provide any additional information below.\nHere's the related issue that got fixed in python 3.3 - \nhttp://bugs.python.org/issue9205\nSince we are using python 2.7.5, is this possible to backport this fix as well \nto futures for 2.7.5.\n\n```\n\nOriginal issue reported on code.google.com by `immil...@yahoo-inc.com` on 17 Sep 2014 at 9:25\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/27", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/27/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/27/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/27", "id": 61388132, "node_id": "MDU6SXNzdWU2MTM4ODEzMg==", "number": 27, "title": "pypy compat", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}, {"id": 206947500, "node_id": "MDU6TGFiZWwyMDY5NDc1MDA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/awaiting%20input", "name": "awaiting input", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-14T03:43:41Z", "updated_at": "2016-01-17T18:45:39Z", "closed_at": "2016-01-17T18:45:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "``````\nWhat steps will reproduce the problem?\n1. run testsuite under pypy\n2.\n3.\n\nWhat is the expected output? What do you see instead?\npass all. 1 hang and an outrgiht fail\n\nWhat version of the product are you using? On what operating system?\nfutures-2.1.6\n\nPlease provide any additional information below.\n\ndoes a hang @\n\n\ntest_del_shutdown (__main__.ProcessPoolShutdownTest) ...\n\nOn removing those two instances, then\n\n```python\n======================================================================\nFAIL: test_repr (__main__.FutureTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_futures.py\", line 577, in test_repr\n    '<Future at 0x[0-9a-f]+ state=pending>')\nAssertionError: Regexp didn't match: '<Future at 0x[0-9a-f]+ state=pending>' \nnot found in '<Future at 0x7f2ad3bf26e8L state=pending>'\n\n----------------------------------------------------------------------\nRan 56 tests in 46.216s\n\nFAILED (failures=1)\nTraceback (most recent call last):\n  File \"app_main.py\", line 72, in run_toplevel\n  File \"test_futures.py\", line 723, in <module>\n    test_main()\n  File \"test_futures.py\", line 46, in decorator\n    return func(*args)\n  File \"test_futures.py\", line 718, in test_main\n    ThreadPoolShutdownTest)\n  File \"/usr/lib64/pypy/lib-python/2.7/test/test_support.py\", line 1144, in run_unittest\n    _run_suite(suite)\n  File \"/usr/lib64/pypy/lib-python/2.7/test/test_support.py\", line 1098, in _run_suite\n    raise TestFailed(err)\nTestFailed: Traceback (most recent call last):\n  File \"test_futures.py\", line 577, in test_repr\n    '<Future at 0x[0-9a-f]+ state=pending>')\nAssertionError: Regexp didn't match: '<Future at 0x[0-9a-f]+ state=pending>' \nnot found in '<Future at 0x7f2ad3bf26e8L state=pending>'\n``````\n\nI don't see any benefit in a full log. Do you?\n\n```\n\nOriginal issue reported on code.google.com by `del...@iinet.com.au` on 5 May 2014 at 4:47\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/28", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/28/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/28/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/28", "id": 61388138, "node_id": "MDU6SXNzdWU2MTM4ODEzOA==", "number": 28, "title": "ThreadPoolExecutor#map() doesn't start tasks until generator is used", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-14T03:43:41Z", "updated_at": "2015-05-03T05:40:52Z", "closed_at": "2015-05-03T05:40:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nSee this simple source: http://paste.pound-python.org/show/ZTWE9gxRpAX5qsgMGS2H/\n\nOn Python 3, the prints happen before the generator is used at all. On Python \n2, they don't happen and RuntimeError is raised when trying to iterate on the \nreturned generator.\n\nPython 2.7.8 on OS X 10.9 with futures 2.1.6.\n```\n\nOriginal issue reported on code.google.com by `remirampin@gmail.com` on 30 Aug 2014 at 9:23\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/25", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/25/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/25/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/25", "id": 61388126, "node_id": "MDU6SXNzdWU2MTM4ODEyNg==", "number": 25, "title": "Ctrl-C doesn't end the program", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-14T03:43:40Z", "updated_at": "2016-01-18T07:18:17Z", "closed_at": "2016-01-18T00:39:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI'm using Python 2.7, and my program ignores SIGTERM signals when using \nThreadPoolExecutor.\n\nAfter some debugging I found that my main thread is blocked on Thread.join(), \nand it holds the interruption until the call returns.\n\nMy solution is to use join(timeout), as it will respect the interruptions and \nallow the program to exit properly.\n\nThe next issue I found was that the atexit hook will try to wait for pending \nthreads anyway.\nIf the program ended without waiting on these, I suppose skipping this step is \nprobably not too bad either.\n\nNot a great solution, but works for me :)\n```\n\nOriginal issue reported on code.google.com by `pa...@inutilfutil.com` on 1 Nov 2013 at 11:57\n\nAttachments:\n- [futures.patch](https://storage.googleapis.com/google-code-attachments/pythonfutures/issue-25/comment-0/futures.patch)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/26", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/26/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/26/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/26", "id": 61388127, "node_id": "MDU6SXNzdWU2MTM4ODEyNw==", "number": 26, "title": "Tracebacks lost when exception is thrown in worker", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-14T03:43:40Z", "updated_at": "2015-03-14T03:43:41Z", "closed_at": "2015-03-14T03:43:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhen an exception is thrown in a thread or subprocess the exception is \ncaptured, but not the traceback - this can make it difficult to see where an \nerror is coming from, as the exception is simply re-raised in result() or \nreturned from exception()\n\nThis patch adds a traceback attribute to the thrown exception with a string \nserialized version of the stacktrace.\n\n\n\n```\n\nOriginal issue reported on code.google.com by `br...@rdnzl.net` on 5 Feb 2014 at 10:50\n\nAttachments:\n- [traceback.patch](https://storage.googleapis.com/google-code-attachments/pythonfutures/issue-26/comment-0/traceback.patch)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/21", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/21/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/21/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/21", "id": 61388121, "node_id": "MDU6SXNzdWU2MTM4ODEyMQ==", "number": 21, "title": "Improvement: Faster exit on shutdown for thread pooling", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}, {"id": 186935549, "node_id": "MDU6TGFiZWwxODY5MzU1NDk=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-14T03:43:39Z", "updated_at": "2017-08-08T15:49:32Z", "closed_at": "2017-08-08T15:49:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI propose changing\n        while True:\n            try:\n                work_item = work_queue.get(block=True, timeout=0.1)\n            except queue.Empty:\n                executor = executor_reference()\n                # Exit if:\n                #   - The interpreter is shutting down OR\n                #   - The executor that owns the worker has been collected OR\n                #   - The executor that owns the worker has been shutdown.\n                if _shutdown or executor is None or executor._shutdown:\n                    return\n                del executor\n            else:\n                work_item.run()\n\nTo\n        while True:\n            executor = executor_reference()\n            # Exit if:\n            #   - The interpreter is shutting down OR\n            #   - The executor that owns the worker has been collected OR\n            #   - The executor that owns the worker has been shutdown.\n            if _shutdown or executor is None or executor._shutdown:\n                return\n            del executor\n            try:\n                work_item = work_queue.get(block=True, timeout=0.1)\n            except queue.Empty:\n                pass\n            else:\n                work_item.run()\n\nThis would allow you not to have to wait for workers to go through the pool. \nSince we just wait in shutdown for the threads to finish, it should (as far as \nI can see) be safe to just make the threads unconditionally check whether they \nshould exit and do so. As it is, you *have to* wait for all submitted work to \nfinish before exiting interpreter which is imo inconvenient.\n```\n\nOriginal issue reported on code.google.com by `seppo.yl...@gmail.com` on 10 Jun 2013 at 9:24\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/22", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/22/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/22/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/22", "id": 61388122, "node_id": "MDU6SXNzdWU2MTM4ODEyMg==", "number": 22, "title": "release 2.1.4 regression. ", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-14T03:43:39Z", "updated_at": "2015-05-02T20:34:09Z", "closed_at": "2015-05-02T20:34:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. acquire tarball from pypi, the only one I gather\n2. unpack and count\n3.\n\nWhat is the expected output? What do you see instead?\nCHANGES  concurrent  crawl.py  docs  futures  futures.egg-info  LICENSE  \nPKG-INFO  primes.py  setup.cfg  setup.py  test_futures.py  tox.ini\n\nconcurrent  futures  futures.egg-info  PKG-INFO  setup.cfg  setup.py\n\nWhat version of the product are you using? On what operating system?\nthe latest release 2.1.4, gentoo\n\nPlease provide any additional information below.\n\nSomeone left out half the source code.   ooopsie\n\n```\n\nOriginal issue reported on code.google.com by `del...@iinet.com.au` on 29 Jun 2013 at 7:25\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/23", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/23/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/23/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/23", "id": 61388123, "node_id": "MDU6SXNzdWU2MTM4ODEyMw==", "number": 23, "title": "futures-2.1.4.tar.gz underdone.", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-14T03:43:39Z", "updated_at": "2015-05-02T20:34:40Z", "closed_at": "2015-05-02T20:34:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. unpack futures-2.1.4.tar.gz\n2.\n3.\n\nWhat is the expected output? What do you see instead?\n\nCHANGES  concurrent  docs  futures  LICENSE  setup.cfg  setup.py  \ntest_futures.py  tox.ini\n\nconcurrent  futures  LICENSE  setup.cfg  setup.py\n\nWhat version of the product are you using? On what operating system?\n2.1.4\n\nPlease provide any additional information below.\n\nSomeone left out required source files, most importantly test_futures.py, \narguably less importantly the WHOLE docs folder, plus CHANGES tox.ini,  The \nmain has more content, but these represent an adequate list of MISIING source \ncontent to top it up to a similar standard to 2.1.3.\nIt's beyond me how to run the tests when test_futures.py isn't there!\n\n\n```\n\nOriginal issue reported on code.google.com by `del...@iinet.com.au` on 6 Jul 2013 at 11:08\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/24", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/24/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/24/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/24", "id": 61388125, "node_id": "MDU6SXNzdWU2MTM4ODEyNQ==", "number": 24, "title": "No task_done() call in ThreadPoolExecutor?", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}, {"id": 186935548, "node_id": "MDU6TGFiZWwxODY5MzU1NDg=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-14T03:43:39Z", "updated_at": "2015-05-03T06:18:37Z", "closed_at": "2015-05-03T06:18:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nThis is more of a curiosity than a bug report. Sorry but I wasn't sure where \nelse to ask.\n\nI don't see a work_queue.task_done() call in thread.py.  Is that on purpose?\n\nI'm new to threads and queues in python, so please excuse my ignorance, but \nwouldn't this disrupt proper shutdown?\n\nThanks.\n```\n\nOriginal issue reported on code.google.com by `bucha...@gmail.com` on 10 Oct 2013 at 8:37\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/19", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/19/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/19/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/19", "id": 61388112, "node_id": "MDU6SXNzdWU2MTM4ODExMg==", "number": 19, "title": "Sync with upstream changes", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}, {"id": 186935549, "node_id": "MDU6TGFiZWwxODY5MzU1NDk=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-03-14T03:43:38Z", "updated_at": "2017-08-08T15:47:16Z", "closed_at": "2017-08-08T15:47:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nThe concurrent.futures module in cpython has had some changes since this \nbackport was released; it would be good to sync up with cpython 3.3.  I'm \nparticularly interested in this change:\n  http://hg.python.org/cpython/annotate/4390d6939a56/Lib/concurrent/futures/thread.py#130\nwhich prevents a 100ms delay when shutting down a ThreadPoolExecutor.\n```\n\nOriginal issue reported on code.google.com by `ben.darn...@gmail.com` on 23 May 2013 at 3:28\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/20", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/20/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/20/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/20", "id": 61388116, "node_id": "MDU6SXNzdWU2MTM4ODExNg==", "number": 20, "title": "map is greedy", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-14T03:43:38Z", "updated_at": "2015-07-08T20:16:21Z", "closed_at": "2015-05-03T06:32:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nmap includes this line:\n\n  fs = [self.submit(fn, *args) for args in zip(*iterables)]\n\nThat means no futures code gets executed until all the iterables have been \ncompletely consumed.  If each iteration of an iterable can take quite some \ntime, that means a long wait before any futures even starts.\n\nIt also means a humungous list is built up if the iterables returns many items. \n For example if iterable was xrange(2000000) then that fs list is going to be 2 \nmillion items long even if num_workers was something like 8.\n\nA generator expression should be used instead.\n```\n\nOriginal issue reported on code.google.com by `rogerbinns` on 7 Jun 2013 at 2:01\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/16", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/16/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/16/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/16", "id": 61388104, "node_id": "MDU6SXNzdWU2MTM4ODEwNA==", "number": 16, "title": "Futures holding on to WorkItem references preventing garbage collection", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-14T03:43:37Z", "updated_at": "2015-05-03T05:44:07Z", "closed_at": "2015-05-03T05:44:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nAfter using heapy/guppy on my daemon application to try and locate memory \nproblems I found that the futures work item objects we're being held as \nreferences which was preventing the data I had passed through my worker \nfunction from being garbage collected. \n\nAfter searching about the web I ran into an issue that was logged very recently \n(last month) against the futures library in Python 3.\n\nhttp://bugs.python.org/issue16284\n\nThis issue should provide all the details (plus the fix) and simply needs to be \nback ported. I made some of the changes locally just to test it out and my \nmemory has noticably improved.\n\nWhat steps will reproduce the problem?\n1. Use guppy/heapy and start a monitor on a daemon like process\n2. Have your daemon process (or just while true main thread) submit work \nthrough to ThreadPoolExecutor\n3. submit a couple jobs to warm up the memory then reset the heap reference \npoint [hp.setref()]\n4. check the heap [hp.heap()]\n5. run another job through the futures and check the heap\n\nWhat is the expected output? What do you see instead?\nI expected the memory to return back to the previous value after the job was \ndone, but it grew on each subsequent job instead and digging into the main \nculprits turned out to be objects that were being referenced in the futures \nwork item.\n\nWhat version of the product are you using? On what operating system?\nfutures 2.1.3\n\nPlease provide any additional information below.\nAgain, looks like someone else has already found this very problem in the \nformal futures library of python 3 and has fixed it, you can find all the \ndetails here: http://bugs.python.org/issue16284\n\n```\n\nOriginal issue reported on code.google.com by `tmashin...@hotmail.com` on 15 Nov 2012 at 7:16\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/17", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/17/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/17/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/17", "id": 61388107, "node_id": "MDU6SXNzdWU2MTM4ODEwNw==", "number": 17, "title": "Make multiprocessing optional", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-14T03:43:37Z", "updated_at": "2015-05-02T20:36:01Z", "closed_at": "2015-05-02T20:36:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI would suggest that multiprocessing is only an optional dependency. If it is \nnot  installed the ProcessPoolExecutor is just not available.\n\nThis would enable threaded futures on systems where you cannot compile/install \nthe multiprocessing package.\n```\n\nOriginal issue reported on code.google.com by `marc.sch...@gmail.com` on 20 Feb 2013 at 12:57\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/18", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/18/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/18/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/18", "id": 61388108, "node_id": "MDU6SXNzdWU2MTM4ODEwOA==", "number": 18, "title": "Python 2.5 compatibility", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-14T03:43:37Z", "updated_at": "2015-05-02T20:36:46Z", "closed_at": "2015-05-02T20:36:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nAccording to PyPI it should be compatible with Python 2.5, but there is an \nissue with `notify_all`. It should be notifyAll on Python 2.5.\n```\n\nOriginal issue reported on code.google.com by `marc.sch...@gmail.com` on 9 Apr 2013 at 1:08\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/15", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/15/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/15/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/15", "id": 61388100, "node_id": "MDU6SXNzdWU2MTM4ODEwMA==", "number": 15, "title": "Traceback of Exceptions from parallel tasks is truncated", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-14T03:43:36Z", "updated_at": "2015-05-03T06:15:47Z", "closed_at": "2015-05-03T06:15:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI submit a job to the ThreadPoolExecutor. The job raises an exception which is \nreraised by future.result(), but the traceback starts at the future.result() \ncall.\n\nThis does not happen in Python3 because tracebacks are attached to the \nexception.\n\nThe commits leading up to \nhttps://bitbucket.org/bluehorn/pythonfutures/changeset/31103a24718d43c23ab6dd5be\n15bbb2a31e0ce2b fix this by storing sys.exc_info()[2] into the future.\n\nPlease consider merging my changes.\n\n```\n\nOriginal issue reported on code.google.com by `t.landsc...@gmail.com` on 28 Sep 2012 at 4:07\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/13", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/13/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/13/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/13", "id": 61388092, "node_id": "MDU6SXNzdWU2MTM4ODA5Mg==", "number": 13, "title": "pthread_cond_wait: Invalid argument", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}, {"id": 186935547, "node_id": "MDU6TGFiZWwxODY5MzU1NDc=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-14T03:43:35Z", "updated_at": "2015-05-03T06:13:16Z", "closed_at": "2015-05-03T06:13:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Runs 10-15 threads\n2. Wait 1-10 minutes\n\nWhat is the expected output? What do you see instead?\n\npthread_cond_wait: Invalid argument\n\nWhat version of the product are you using? On what operating system?\n\nfutures v2.1.2, Mac OS X Snow Leopard\n\n\n```\n\nOriginal issue reported on code.google.com by `anton.pa...@gmail.com` on 29 May 2011 at 7:33\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/14", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/14/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/14/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/14", "id": 61388096, "node_id": "MDU6SXNzdWU2MTM4ODA5Ng==", "number": 14, "title": "Race condition in concurrent.futures / http://bugs.python.org/issue14406", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-14T03:43:35Z", "updated_at": "2015-03-14T03:43:36Z", "closed_at": "2015-03-14T03:43:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\nflist = [executor.submit(...) for x in ...]\nfutures.wait(flist)\n\nWhat is the expected output? What do you see instead?\n\nthe wait call should return, but it doesn't do that.\n\nWhat version of the product are you using? On what operating system?\n\nfutures-2.1.2\n\nPlease provide any additional information below.\n\nsee http://bugs.python.org/issue14406\n\n```\n\nOriginal issue reported on code.google.com by `schmir@gmail.com` on 20 Aug 2012 at 12:48\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/12", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/12/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/12/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/12", "id": 61388084, "node_id": "MDU6SXNzdWU2MTM4ODA4NA==", "number": 12, "title": "ProcessPoolExecutor is broken", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-14T03:43:34Z", "updated_at": "2015-03-14T03:43:35Z", "closed_at": "2015-03-14T03:43:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nPlus, the Python process gets stuck in a state where KeyboardInterrupt doesn't \nwork.\n\nAs of latest release (2.1.2):\n\n$ ipython\nPython 2.6.5 (r265:79063, Apr 16 2010, 13:57:41)\nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.10 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object'. ?object also works, ?? prints more.\n\nIn [1]: import futures\n/home/yang/env/lib/python2.6/site-packages/futures/__init__.py:24: \nDeprecationWarning: The futures package has been deprecated. Use the \nconcurrent.futures package instead.\n  DeprecationWarning)\n\nIn [2]: from concurrent.futures import *\n\nIn [3]: def go(x): print x\n   ...: \n\nIn [4]: with ProcessPoolExecutor(1) as p: list(p.map(go, range(3)))\n   ...: \nTraceback (most recent call last):\n  File \"/home/yang/env/lib/python2.6/multiprocessing/queues.py\", line 242, in _feed\n    send(obj)\nPicklingError: Can't pickle <type 'function'>: attribute lookup \n__builtin__.function failed\n\n^CProcess Process-1:\nTraceback (most recent call last):\n  File \"/home/yang/env/lib/python2.6/multiprocessing/process.py\", line 232, in _bootstrap\n    self.run()\n  File \"/home/yang/env/lib/python2.6/multiprocessing/process.py\", line 88, in run \n    self._target(*self._args, **self._kwargs)\n  File \"/home/yang/env/lib/python2.6/site-packages/concurrent/futures/process.py\", line 140, in _process_worker\n    call_item = call_queue.get(block=True, timeout=0.1)\n  File \"/home/yang/env/lib/python2.6/multiprocessing/queues.py\", line 103, in get \n    if not self._poll(block and (deadline-time.time()) or 0.0):\nKeyboardInterrupt\n\n```\n\nOriginal issue reported on code.google.com by `yaa...@gmail.com` on 19 Apr 2011 at 9:28\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/10", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/10/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/10/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/10", "id": 61388077, "node_id": "MDU6SXNzdWU2MTM4ODA3Nw==", "number": 10, "title": "Exception in thread QueueFeederThread", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-14T03:43:33Z", "updated_at": "2015-05-03T06:34:17Z", "closed_at": "2015-05-03T06:34:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\n1. Create new executor based on the ProcessPoolExecutor\n2. Set max_workers=8\n3. Submit two tasks to run\n4. wait on all futures\n\n\n\nWhat is the expected output? What do you see instead?\n\nNo exceptions, program runs to completion.  Instead seeing an exception, unsure \nof cause (sometimes the program runs fine, other times it doesn't).\n\n\nProgram Output (sporadically hits this):\n\n\"Exception in thread QueueFeederThread (most likely raised during interpreter \nshutdown):\nTraceback (most recent call last):\n  File \"/usr/lib/python2.6/threading.py\", line 532, in __bootstrap_inner\n  File \"/usr/lib/python2.6/threading.py\", line 484, in run\n  File \"/usr/lib/python2.6/multiprocessing/queues.py\", line 233, in _feed\n<type 'exceptions.TypeError'>: 'NoneType' object is not callable\n\"\n\n\n\n\n\nWhat version of the product are you using? On what operating system?\n\nUbuntu 11.04\nPython 2.6.6\n```\n\nOriginal issue reported on code.google.com by `wolfgang...@gmail.com` on 11 Jan 2011 at 1:50\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/11", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/11/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/11/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/11", "id": 61388082, "node_id": "MDU6SXNzdWU2MTM4ODA4Mg==", "number": 11, "title": "ProcessPoolExecutor doesn't take initializer", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-14T03:43:33Z", "updated_at": "2015-05-03T05:41:32Z", "closed_at": "2015-05-03T05:41:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nNo way to pass an initializer to multiprocess.Pool.\n```\n\nOriginal issue reported on code.google.com by `yanghate...@gmail.com` on 2 Apr 2011 at 12:50\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/9", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/9/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/9/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/9", "id": 61388073, "node_id": "MDU6SXNzdWU2MTM4ODA3Mw==", "number": 9, "title": "Backport new API to Python 2 futures", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-14T03:43:32Z", "updated_at": "2015-03-14T03:43:33Z", "closed_at": "2015-03-14T03:43:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nPython 2 is here to stay for a long time. There's value in having a consistent \nAPI to both reduce confusion and so that users don't have to worry about one \nday migrating to a different API. Plus it's low-hanging fruit.\n```\n\nOriginal issue reported on code.google.com by `yanghate...@gmail.com` on 10 Nov 2010 at 4:03\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/8", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/8/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/8/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/8", "id": 61388069, "node_id": "MDU6SXNzdWU2MTM4ODA2OQ==", "number": 8, "title": "Preserve exception info when re-raising", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-14T03:43:31Z", "updated_at": "2015-03-14T03:43:32Z", "closed_at": "2015-03-14T03:43:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nCurrently the code does stuff like:\n\n        except Exception, e:\n            ...\n            raise e # should just be 'raise'\n\nand:\n\n    def __get_result(self):\n        if self._exception:\n            raise self._exception\n            # better to store complete exc_info & use 3-parameter raise\n            # a,b,c = self._exc_info; raise a,b,c\n        else:\n            return self._result\n\nAs such, re-raised exceptions lose a great deal of information because the \ntracebacks are missing. The suggested fixes are also in line with your \nphilosophy discussed in #2, in that you want to preserve the original exception.\n```\n\nOriginal issue reported on code.google.com by `yanghate...@gmail.com` on 10 Nov 2010 at 4:00\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/6", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/6/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/6/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/6", "id": 61388062, "node_id": "MDU6SXNzdWU2MTM4ODA2Mg==", "number": 6, "title": "Eliminate Globals used for thread tracking", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-14T03:43:30Z", "updated_at": "2015-03-14T03:43:30Z", "closed_at": "2015-03-14T03:43:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nThis patch adds a tracker to the base Executor that is used to track all \nthreads / processes created by the Executor and do proper cleanup of said \nthreads on Executor Shutdown / Python Exit.\n\nThis also unifies the API between Process|ThreadPoolExecutor a little as \nwell. Making max_workers optional on both, and defaulting to cpu_count. \nAdds a worker_count property to the base Executor, that returns the number \nof workers, which is used instead of len(self._processes|threads) since the \nthreads and processes are now tracked in the trackers. Also since the \nshutdown method is unified between the two implementations now it moves it \nto the base Executor.\n\n\nAll Tests pass on win32 & Ubuntu, I dont have access to OSX to test there\n```\n\nOriginal issue reported on code.google.com by `digitalx...@gmail.com` on 21 May 2010 at 7:29\n\nAttachments:\n- [tracker.diff](https://storage.googleapis.com/google-code-attachments/pythonfutures/issue-6/comment-0/tracker.diff)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/7", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/7/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/7/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/7", "id": 61388067, "node_id": "MDU6SXNzdWU2MTM4ODA2Nw==", "number": 7, "title": "Deferred Class Would Be Nice", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-14T03:43:30Z", "updated_at": "2015-03-14T03:43:31Z", "closed_at": "2015-03-14T03:43:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI've found this to personally be very useful in conjunction with Future\n\nIt allows for chaining and distribution of results and errors\n\nAn implementation of Deferred using Future. It only works with my pyev Future \nclass though as Future requires the loop to be passed around.\n\nhttp://bitbucket.org/bfrog/whizzer/src/tip/whizzer/futures.py\n```\n\nOriginal issue reported on code.google.com by `thomas.burdick@gmail.com` on 1 Sep 2010 at 10:57\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/4", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/4/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/4/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/4", "id": 61388053, "node_id": "MDU6SXNzdWU2MTM4ODA1Mw==", "number": 4, "title": "Callback when done", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-14T03:43:29Z", "updated_at": "2015-03-14T03:43:29Z", "closed_at": "2015-03-14T03:43:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI think that it will be good to have the possibility to specify a \"callback\"\nto be run when the future is done.\nThis will make it easier to get it integrated with GUIs (or other\nsituations where we prefer to have signals, not polling)\n\n```\n\nOriginal issue reported on code.google.com by `boy...@gmail.com` on 16 Apr 2010 at 9:18\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/5", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/5/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/5/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/5", "id": 61388057, "node_id": "MDU6SXNzdWU2MTM4ODA1Nw==", "number": 5, "title": "Examples as written fail on windows", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-14T03:43:29Z", "updated_at": "2015-03-14T03:43:30Z", "closed_at": "2015-03-14T03:43:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nRun primes.py, crawl.py or moprocessmoproblems.py on windows and you will \ncrash the system (or force a restart to make it usable again).\n\n```\n\nOriginal issue reported on code.google.com by `digitalx...@gmail.com` on 21 May 2010 at 5:40\n\nAttachments:\n- [win_examples.diff](https://storage.googleapis.com/google-code-attachments/pythonfutures/issue-5/comment-0/win_examples.diff)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/3", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/3/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/3/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/3", "id": 61388046, "node_id": "MDU6SXNzdWU2MTM4ODA0Ng==", "number": 3, "title": "more responsive, unordered, run_to_results", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-14T03:43:28Z", "updated_at": "2015-03-14T03:43:29Z", "closed_at": "2015-03-14T03:43:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nCurrently, Executor.run_to_results iterates through the FutureList, waiting\nfor each future to finish *before* continuing with the next one. The\nresults are returned in the same order as the list of input tasks.\n\nPlease could a generator-method be made that yields when *any* future\nfinishes (and possibly return results in a different order from the\ninputs). This is quite a common pattern; however at the moment I'm having\nto implement this using the hack below (since FutureList has no way to keep\ntrack of what has already been yielded), which doesn't scale.\n\n\n-            for future in fs:\n-                if timeout is None:\n-                    yield future.result()\n-                else:\n-                    yield future.result(end_time - time.time())\n+            yielded = [False] * len(fs)\n+            while False in yielded:\n+                fs.wait(None if timeout is None else end_time -\ntime.time(), return_when=FIRST_COMPLETED)\n+                for i, future in enumerate(fs):\n+                    future._condition.acquire()\n+                    if future._state == FINISHED and not yielded[i]:\n+                        yielded[i] = True\n+                        print \"yielded #%s (%s total)\" % (i, len(fs))\n+                        yield future.result()\n+                    future._condition.release()\n+\n\nA better method would be to have worker push FINISHED futures onto a\nresult_queue or something.\n\n```\n\nOriginal issue reported on code.google.com by `infinity0x@gmail.com` on 3 Apr 2010 at 8:04\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/2", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/2/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/2/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/2", "id": 61388040, "node_id": "MDU6SXNzdWU2MTM4ODA0MA==", "number": 2, "title": "Implement exception-chaining for future.result()", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-03-14T03:43:26Z", "updated_at": "2015-03-14T03:43:28Z", "closed_at": "2015-03-14T03:43:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nChained exceptions are vital in debugging programs that use this library.\n\nThey are going to be added to py3k with\nhttp://www.python.org/dev/peps/pep-3134/ but for people using python 2,\nI've attached a quick-and-dirty implementation that is specific to\npython-futures.\n\nI've tested it for ThreadPoolExecutor but not ProcessPoolExecutor.\n\nSample output when future.result() is called:\n\n\nTraceback (most recent call last):\n  File \"src/scrape.py\", line 287, in <module>\n    sys.exit(main(*args, **opts.__dict__))\n  File \"src/scrape.py\", line 65, in main\n    ret = f(*args)\n  File \"src/scrape.py\", line 187, in round_photo\n    self.ff.commitUserPhotos(socgr.vs[\"id\"], ppdb)\n  File\n\"/home/infinity0/0/work/compsci/ii-2009-project/tag-routing/src/tags/scrape/flic\nkr.py\",\nline 265, in commitUserPhotos\n    self.execAllUnique(users, ppdb, \"producer db (user)\", run, post, conc_m)\n  File\n\"/home/infinity0/0/work/compsci/ii-2009-project/tag-routing/src/tags/scrape/flic\nkr.py\",\nline 217, in execAllUnique\n    LOG.info, \"%s: %%(i1)s/%s %%(it)s\" % (name, total), expected_length=total):\n  File\n\"/home/infinity0/0/work/compsci/ii-2009-project/tag-routing/src/tags/scrape/util\n.py\",\nline 188, in enumerate_cb\n    for i, item in enumerate(iterable):\n  File\n\"/home/infinity0/0/work/compsci/ii-2009-project/tag-routing/src/futures/_base.py\n\",\nline 602, in run_to_results\n    raise e\nfutures._base.ExecutionException: Caused by:\n  File\n\"/home/infinity0/0/work/compsci/ii-2009-project/tag-routing/src/futures/thread.p\ny\",\nline 87, in run\n    result = self.call()\n  File\n\"/home/infinity0/0/work/compsci/ii-2009-project/tag-routing/src/tags/scrape/flic\nkr.py\",\nline 210, in <lambda>\n    tasks = [partial(lambda it: (it, run(it)), it) for it in items if it\nnot in done]\n  File\n\"/home/infinity0/0/work/compsci/ii-2009-project/tag-routing/src/tags/scrape/flic\nkr.py\",\nline 253, in run\n    print a[3]\nIndexError('list index out of range',)\n\n```\n\nOriginal issue reported on code.google.com by `infinity0x@gmail.com` on 3 Apr 2010 at 6:29\n\nAttachments:\n- [0001-implement-exception-chaining-in-the-form-of-ExecutionException.diff](https://storage.googleapis.com/google-code-attachments/pythonfutures/issue-2/comment-0/0001-implement-exception-chaining-in-the-form-of-ExecutionException.diff)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/agronholm/pythonfutures/issues/1", "repository_url": "https://api.github.com/repos/agronholm/pythonfutures", "labels_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/1/comments", "events_url": "https://api.github.com/repos/agronholm/pythonfutures/issues/1/events", "html_url": "https://github.com/agronholm/pythonfutures/issues/1", "id": 61388033, "node_id": "MDU6SXNzdWU2MTM4ODAzMw==", "number": 1, "title": "API Change", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 186995581, "node_id": "MDU6TGFiZWwxODY5OTU1ODE=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 186995580, "node_id": "MDU6TGFiZWwxODY5OTU1ODA=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 186995582, "node_id": "MDU6TGFiZWwxODY5OTU1ODI=", "url": "https://api.github.com/repos/agronholm/pythonfutures/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-14T03:43:25Z", "updated_at": "2015-03-14T03:43:26Z", "closed_at": "2015-03-14T03:43:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nThis is an API Change that changes the current Executor to ExecutorBase and \nadds a new Executor class that is used like\n\nfutures.Executor() # creates an executor that uses threading and a \nmax_workers = to the number of cpus\n\nfutures.Executor(use='process') # Creates an executor that uses \nmultiprocessing and a max_workers = to the number of cpus\n\nfutures.Executor(max_workers=5) # threading again, just specifying the \nnumber of workers\n\nfutures.Executor(use='process', max_workers=5) # back to multiprocessing, \nbut with the max_workers specified\n\n\n\nThis also includes a patch to fix the examples so they run on windows (it \nrelies on the api_change.diff)\n```\n\nOriginal issue reported on code.google.com by `digitalx...@gmail.com` on 7 Mar 2010 at 3:06\n\nAttachments:\n- [fix_for_windows.diff](https://storage.googleapis.com/google-code-attachments/pythonfutures/issue-1/comment-0/fix_for_windows.diff)\n- [api_change.diff](https://storage.googleapis.com/google-code-attachments/pythonfutures/issue-1/comment-0/api_change.diff)\n", "performed_via_github_app": null, "score": 1.0}]}