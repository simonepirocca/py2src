{"total_count": 3, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/deepmind/tree/issues/10", "repository_url": "https://api.github.com/repos/deepmind/tree", "labels_url": "https://api.github.com/repos/deepmind/tree/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/deepmind/tree/issues/10/comments", "events_url": "https://api.github.com/repos/deepmind/tree/issues/10/events", "html_url": "https://github.com/deepmind/tree/issues/10", "id": 649201971, "node_id": "MDU6SXNzdWU2NDkyMDE5NzE=", "number": 10, "title": "Guarantee that dict keep order ?", "user": {"login": "Conchylicultor", "id": 9047355, "node_id": "MDQ6VXNlcjkwNDczNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9047355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Conchylicultor", "html_url": "https://github.com/Conchylicultor", "followers_url": "https://api.github.com/users/Conchylicultor/followers", "following_url": "https://api.github.com/users/Conchylicultor/following{/other_user}", "gists_url": "https://api.github.com/users/Conchylicultor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Conchylicultor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Conchylicultor/subscriptions", "organizations_url": "https://api.github.com/users/Conchylicultor/orgs", "repos_url": "https://api.github.com/users/Conchylicultor/repos", "events_url": "https://api.github.com/users/Conchylicultor/events{/privacy}", "received_events_url": "https://api.github.com/users/Conchylicultor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-01T18:39:07Z", "updated_at": "2020-08-17T16:21:13Z", "closed_at": "2020-08-15T09:12:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "With Python 3.6+, dict are guarantee to keep insertion order.\r\n\r\nCurrently, `tree` and `tf.nest` both seems to keep dict order, but `jax.tree_util` does not. It's not clear if this is an implementation detail or if this behavior is guaranteed.\r\nI'm worried that the internal discussions from https://github.com/deepmind/tree/pulls#1 may lead to a regression if Jax implementation is reused.\r\n\r\n```py\r\nimport tree\r\nimport tf\r\nimport jax\r\n\r\ndef fn(x):\r\n  return x\r\n\r\ndata = {'z': None, 'a': None}\r\n\r\nprint(tf.nest.map_structure(fn, data))  # {'z': None, 'a': None}\r\nprint(tree.map_structure(fn, data))     # {'z': None, 'a': None}\r\nprint(jax.tree_map(fn, data))           # {'a': None, 'z': None}  << Oups, keys order inverted\r\n```\r\n\r\nIt would be great if this behavior was documented and there was a unittest to avoid regression.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/deepmind/tree/issues/3", "repository_url": "https://api.github.com/repos/deepmind/tree", "labels_url": "https://api.github.com/repos/deepmind/tree/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/deepmind/tree/issues/3/comments", "events_url": "https://api.github.com/repos/deepmind/tree/issues/3/events", "html_url": "https://github.com/deepmind/tree/issues/3", "id": 593951561, "node_id": "MDU6SXNzdWU1OTM5NTE1NjE=", "number": 3, "title": "Build Error", "user": {"login": "acxz", "id": 17132214, "node_id": "MDQ6VXNlcjE3MTMyMjE0", "avatar_url": "https://avatars2.githubusercontent.com/u/17132214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acxz", "html_url": "https://github.com/acxz", "followers_url": "https://api.github.com/users/acxz/followers", "following_url": "https://api.github.com/users/acxz/following{/other_user}", "gists_url": "https://api.github.com/users/acxz/gists{/gist_id}", "starred_url": "https://api.github.com/users/acxz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acxz/subscriptions", "organizations_url": "https://api.github.com/users/acxz/orgs", "repos_url": "https://api.github.com/users/acxz/repos", "events_url": "https://api.github.com/users/acxz/events{/privacy}", "received_events_url": "https://api.github.com/users/acxz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-04T17:05:38Z", "updated_at": "2020-04-07T23:33:07Z", "closed_at": "2020-04-07T23:33:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "OS: ArchLinux\r\nBazel: 2.2.0\r\nGCC: 9.3.0\r\nPython: 3.8.2\r\ndm-tree: latest github release (0.1.1)\r\n\r\n```\r\nrunning build\r\nrunning build_py\r\ncreating build\r\ncreating build/lib.linux-x86_64-3.8\r\ncreating build/lib.linux-x86_64-3.8/tree\r\ncopying tree/__init__.py -> build/lib.linux-x86_64-3.8/tree\r\ncopying tree/tree_benchmark.py -> build/lib.linux-x86_64-3.8/tree\r\ncopying tree/tree_test.py -> build/lib.linux-x86_64-3.8/tree\r\nrunning build_ext\r\nsetup.py:86: DeprecationWarning: SO is deprecated, use EXT_SUFFIX\r\n  shared_lib_suffix = '.' + sysconfig.get_config_var('SO').split('.')[-1]\r\nbazel build //tree:_tree.so --symlink_prefix=build/temp.linux-x86_64-3.8/bazel- --compilation_mode=opt\r\nStarting local Bazel server and connecting to it...\r\nINFO: Analyzed target //tree:_tree.so (21 packages loaded, 294 targets configured).\r\nINFO: Found 1 target...\r\nINFO: Deleting stale sandbox base /home/acxz/.cache/bazel/_bazel_acxz/a5184f2325eb388a98563bdeaae64355/sandbox\r\nERROR: /home/acxz/.cache/yay/python-dm-tree/src/tree-0.1.1/tree/BUILD:28:1: C++ compilation of rule '//tree:_tree.so' failed (Exit 1) gcc failed: error executing command /usr/bin/gcc -U_FORTIFY_SOURCE -fstack-protector -Wall -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 '-D_FORTIFY_SOURCE=1' -DNDEBUG -ffunction-sections ... (remaining 47 argument(s) skipped)\r\n\r\nUse --sandbox_debug to see verbose messages from the sandbox\r\nIn file included from external/python_headers/object.h:4,\r\n                 from external/python_headers/pytime.h:6,\r\n                 from external/python_headers/Python.h:85,\r\n                 from ./tree/tree.h:19,\r\n                 from tree/tree.cc:15:\r\nexternal/python_headers/pymem.h:142:13: fatal error: cpython/pymem.h: No such file or directory\r\n  142 | #  include  \"cpython/pymem.h\"\r\n      |             ^~~~~~~~~~~~~~~~~\r\ncompilation terminated.\r\nTarget //tree:_tree.so failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nINFO: Elapsed time: 5.206s, Critical Path: 1.36s\r\nINFO: 3 processes: 3 linux-sandbox.\r\nFAILED: Build did NOT complete successfully\r\nerror: command 'bazel' failed with exit status 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/deepmind/tree/issues/2", "repository_url": "https://api.github.com/repos/deepmind/tree", "labels_url": "https://api.github.com/repos/deepmind/tree/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/deepmind/tree/issues/2/comments", "events_url": "https://api.github.com/repos/deepmind/tree/issues/2/events", "html_url": "https://github.com/deepmind/tree/issues/2", "id": 593950363, "node_id": "MDU6SXNzdWU1OTM5NTAzNjM=", "number": 2, "title": "New Release?", "user": {"login": "acxz", "id": 17132214, "node_id": "MDQ6VXNlcjE3MTMyMjE0", "avatar_url": "https://avatars2.githubusercontent.com/u/17132214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acxz", "html_url": "https://github.com/acxz", "followers_url": "https://api.github.com/users/acxz/followers", "following_url": "https://api.github.com/users/acxz/following{/other_user}", "gists_url": "https://api.github.com/users/acxz/gists{/gist_id}", "starred_url": "https://api.github.com/users/acxz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acxz/subscriptions", "organizations_url": "https://api.github.com/users/acxz/orgs", "repos_url": "https://api.github.com/users/acxz/repos", "events_url": "https://api.github.com/users/acxz/events{/privacy}", "received_events_url": "https://api.github.com/users/acxz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-04T17:00:57Z", "updated_at": "2020-04-07T23:32:41Z", "closed_at": "2020-04-07T23:32:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "The latest tagged version on github is 0.1.1 while on pypi is 0.1.4. Can you tag the latest version on github release? Thank you!", "performed_via_github_app": null, "score": 1.0}]}