{"total_count": 627, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1412", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1412/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1412/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1412/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1412", "id": 681355516, "node_id": "MDU6SXNzdWU2ODEzNTU1MTY=", "number": 1412, "title": "authextra in cryptosign auth should allow arbitrary values", "user": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-08-18T21:33:06Z", "updated_at": "2020-08-18T21:54:45Z", "closed_at": "2020-08-18T21:49:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently `AuthCryptoSign` class limits what we can put inside `authextra` dictionary. This limits one to \"innovate\" when writing custom authenticators.\r\n\r\nLets say I write a custom authenticator that expects user's email/password in `authextra`, we currently can't do that with autobahn python.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1410", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1410/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1410/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1410/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1410", "id": 679671072, "node_id": "MDU6SXNzdWU2Nzk2NzEwNzI=", "number": 1410, "title": "will not run it exits", "user": {"login": "yui1993", "id": 69644408, "node_id": "MDQ6VXNlcjY5NjQ0NDA4", "avatar_url": "https://avatars2.githubusercontent.com/u/69644408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yui1993", "html_url": "https://github.com/yui1993", "followers_url": "https://api.github.com/users/yui1993/followers", "following_url": "https://api.github.com/users/yui1993/following{/other_user}", "gists_url": "https://api.github.com/users/yui1993/gists{/gist_id}", "starred_url": "https://api.github.com/users/yui1993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yui1993/subscriptions", "organizations_url": "https://api.github.com/users/yui1993/orgs", "repos_url": "https://api.github.com/users/yui1993/repos", "events_url": "https://api.github.com/users/yui1993/events{/privacy}", "received_events_url": "https://api.github.com/users/yui1993/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641228806, "node_id": "MDU6TGFiZWw2NDEyMjg4MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/not-an-issue-but-a-question-use-our-mailing-list", "name": "not-an-issue-but-a-question-use-our-mailing-list", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-16T01:42:13Z", "updated_at": "2020-08-16T09:25:46Z", "closed_at": "2020-08-16T09:25:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "`import json\r\nimport ID\r\nimport user\r\nimport room\r\nimport time\r\nimport database\r\nimport utils\r\nimport sys\r\nfrom twisted.internet import reactor, ssl\r\nfrom twisted.web.server import Site\r\nfrom twisted.web.static import File\r\n\r\nimport txaio\r\n\r\nfrom autobahn.twisted.websocket import WebSocketServerFactory, \\\r\n    WebSocketServerProtocol, \\\r\n    listenWS\r\n\r\nclass Server(WebSocketServerProtocol):\r\n\r\n    db = database.Database()\r\n\r\n    def onConnect(self, request):\r\n        self.id = ID.generate()\r\n        user.User(id = self.id, socket = self, ip=request.peer.split(\":\")[1], uid=self.db.generateId(request.peer.split(\":\")[1])).addUser(self.id)\r\n        print(\"Client connecting: {0}\".format(request.peer.split(\":\")[1]))\r\n\r\n    def onOpen(self):\r\n        print(\"WebSocket connection open.\")\r\n\r\n    def onMessage(self, payload, isBinary):\r\n        global roomobj, userobj\r\n        if isBinary:\r\n            pass\r\n        else:\r\n            try:\r\n                userobj = user.User().get(self.id)\r\n                if user.User().get(self.id):\r\n                    roomobj = room.Room().get(userobj.roomname)\r\n                    if userobj.roomname and self.db.getRoom(userobj.roomname):\r\n                        if not roomobj.get(userobj.roomname):\r\n                            roomobj.addRoom(userobj.roomname)\r\n                            roomobj = room.Room().get(userobj.roomname)\r\n                            roomobj.addUser(userobj)\r\n                        else:\r\n                            roomobj = room.Room().get(userobj.roomname)\r\n                            if userobj not in roomobj.users:\r\n                                roomobj.addUser(userobj)\r\n                    print(payload.decode(\"utf-8\"))\r\n                    js = json.loads(payload.decode(\"utf-8\"))\r\n                    if \"login\" in js:\r\n                        email = js['email']\r\n                        password = js['password']\r\n                        if self.db.loginCheck(email, password):\r\n                            userobj.setLoggedIn(True)\r\n                            userobj.setName(self.db.getUserByEmail(email)['user'])\r\n                            userobj.send(login=1, name=userobj.name)\r\n                        else:\r\n                            userobj.send(login=0, error=\"incorrect login details\")\r\n\r\n                    elif \"join\" in js:\r\n                        if userobj.isLoggedIn:\r\n                            rn = js['room'].lower()\r\n                            if roomobj:\r\n                                if userobj in roomobj.users:\r\n                                    roomobj.removeUser(userobj)\r\n\r\n                                if room.Room().get(rn):\r\n                                    room.Room().get(rn).addUser(userobj)\r\n                                    userobj.send(joined=1)\r\n                                    userobj.setRoomName(rn)\r\n\r\n                                else:\r\n                                    if self.db.getRoom(rn):\r\n                                        room.Room().addRoom(rn)\r\n                                        r = room.Room().get(rn)\r\n                                        r.addUser(userobj)\r\n                                        userobj.send(joined=1)\r\n                                        userobj.setRoomName(rn)\r\n                                    else:\r\n                                        userobj.send(joined=0, error=\"room doesn't exist\")\r\n                            else:\r\n                                if self.db.getRoom(rn):\r\n                                    room.Room().addRoom(rn)\r\n                                    r = room.Room().get(rn)\r\n                                    r.addUser(userobj)\r\n                                    userobj.setRoomName(rn)\r\n                                    userobj.send(joined=1)\r\n                                    print(room.Room().rooms)\r\n                        else:\r\n                            userobj.send(denied=1, error=\"not logged in\")\r\n                    elif \"createroom\" in js:\r\n                        if userobj.isLoggedIn:\r\n                            rn = js['room']\r\n                            if utils.isAble(rn):\r\n\r\n                                if not self.db.getRoom(rn.lower()):\r\n                                    self.db.addRoom(rn, userobj.name)\r\n                                    userobj.send(created=1)\r\n                                else:\r\n                                    userobj.send(created=0, error=\"room already exists\")\r\n                            else:\r\n                                userobj.send(created=0, error=\"8 chars max length and only symbol allowed is \\\"_\\\"\")\r\n                        else:\r\n                            userobj.send(denied=1, error=\"not logged in\")\r\n                    elif \"register\" in js:\r\n                        email = js['email']\r\n                        username = js['username'].lower()\r\n                        password = js['password']\r\n                        if self.db.getUserByEmail(email):\r\n                            userobj.send(register=0, error=\"email taken\")\r\n                        if self.db.getUserByName(username):\r\n                            userobj.send(register=0, error=\"username taken\")\r\n                        if not utils.isAble(username):\r\n                            userobj.send(\r\n                                register=0,\r\n                                error=\"username must be 8 chars max or only contain alpha-numric and _\"\r\n                            )\r\n                        else:\r\n                            self.db.addUser(username, email, password)\r\n                            userobj.send(register=1)\r\n                    elif \"addmod\" in js:\r\n                        if userobj.owner:\r\n                            if not self.db.getMod(roomobj.name, js['name']):\r\n                                self.db.addMod(roomobj.name, js['name'])\r\n                                roomobj.send(modded=1, name=js['name'])\r\n                            else:\r\n                                userobj.send(modded=0, error=\"already modded\")\r\n                        else:\r\n                            userobj.send(modded=0, error=\"not owner\")\r\n                    elif \"removemod\" in js:\r\n                        if userobj.owner:\r\n                            if self.db.getMod(roomobj.name, js['name']):\r\n                                self.db.removeMod(roomobj.name, js['name'])\r\n                                roomobj.send(demodded=1, name=js['name'])\r\n                            else:\r\n                                userobj.send(demodded=0, error=\"not modded\")\r\n                        else:\r\n                            userobj.send(demodded=0, error=\"not owner\")\r\n                    elif \"mods\" in js:\r\n                        r = self.db.getRoom(roomobj.name)\r\n                        m = {\"modname\": r['owner'], \"time\": r['time'], \"owner\": 1}\r\n                        for mod in self.db.getMods(roomobj.name):\r\n                            del mod['_id']\r\n                            mod['owner'] = 0\r\n                            userobj.send(mods=1, **mod)\r\n                        userobj.send(**m)\r\n                    elif \"ban\" in js:\r\n                        if userobj.mod or userobj.owner:\r\n                            target = js['target']\r\n                            id = js['id']\r\n                            ts = time.time()\r\n                            self.db.banUser(roomobj.name, target, userobj.name, id)\r\n                            roomobj.sendMods(ban=1, target=target, id=id, by=userobj.name, time=ts)\r\n                        else:\r\n                            userobj.send(ban=0, error=\"not mod or owner\")\r\n                    elif \"unban\" in js:\r\n                        name = js['target']\r\n                        rn = roomobj.name\r\n                        ban = self.db.getBannedUser(rn, name)\r\n                        id = ban['user_id']\r\n                        if userobj.mod or userobj.owner:\r\n                            self.db.removeBan(rn, id)\r\n                            roomobj.sendMods(unbanned=1, target=name, time=time.time())\r\n                        else:\r\n                            userobj.send(unbanned=0, error=\"not mod or owner\")\r\n                    elif \"banlist\" in js:\r\n                        if userobj.mod or userobj.owner:\r\n                            bans = self.db.bans.find({\"roomname\": roomobj.name})\r\n                            for ban in bans:\r\n                                del ban[\"_id\"]\r\n                                roomobj.sendMods(banlist=1, **ban)\r\n                        else:\r\n                            userobj.send(banlist=0, error=\"not mod or owner\")\r\n                    elif \"userlist\" in js:\r\n                        for u in roomobj.users:\r\n                            userobj.send(ul=1, name=u.name, time=u.time)\r\n                    elif \"logout\" in js:\r\n                        userobj.setLoggedIn(False)\r\n                        roomobj.removeUser(userobj)\r\n                        userobj.send(logout=1)\r\n                        roomobj.send(left=1, name=userobj.name, time=time.time())\r\n                        userobj.setName(None)\r\n                    elif \"message\" in js:\r\n                        if userobj.loggedIn:\r\n                            roomobj = room.Room().get(userobj.roomname)\r\n                            print(room.Room().rooms)\r\n                            if not self.db.getBannedUser(roomobj.name, userobj.name):\r\n                                if not self.db.getBannedUserById(roomobj.name, userobj.uid, check=True):\r\n                                    name = userobj.name\r\n                                    id = userobj.uid\r\n                                    mid = self.db.generateMID()\r\n                                    body = js['body']\r\n                                    ts = time.time()\r\n                                    roomobj.send(message=1, name=name, id=id, mid=mid, body=body, time=ts)\r\n                                    self.db.addMessage(name, roomobj.name, userobj.ip, id, mid, body)\r\n                                else:\r\n                                    userobj.send(banned=1)\r\n                            else:\r\n                                userobj.send(banned=1)\r\n                        else:\r\n                            userobj.send(loggedin=1, error=\"not logged in\")\r\n                    elif \"history\" in js:\r\n                        if userobj.loggedIn:\r\n                            count = 0\r\n                            limit = js['limit']\r\n                            start_at = js['start_at']\r\n                            for message in self.db.getMessagesByRoomName(roomobj.name):\r\n                                count += 1\r\n                                if count >= start_at:\r\n                                    name = message['name']\r\n                                    id = message['user_id']\r\n                                    mid = message['message_id']\r\n                                    body = message['message']\r\n                                    ts = message['time']\r\n                                    userobj.send(history=1, name=name, id=id, mid=mid, time=ts, body=body)\r\n                                    if count >= limit:\r\n                                        break\r\n                        else:\r\n                            userobj.send(history=0, error=\"not logged in\")\r\n                    elif \"deleteuser\" in js:\r\n                        if userobj.mod or userobj.owner:\r\n                            name = js['name']\r\n                            self.db.messages.delete_many({\"roomname\": roomobj.name, \"name\": name.lower()})\r\n                            roomobj.send(delete=1, name=name, time=time.time())\r\n                        else:\r\n                            userobj.send(delete=0, error=\"not mod or owner\")\r\n                    elif \"getcount\" in js:\r\n                        if userobj.loggedIn:\r\n                            userobj.send(uc=1, count=roomobj.count);\r\n                        else:\r\n                            userobj.send(uc=0, error=\"not logged in\")\r\n                    elif \"delete\" in js:\r\n                        if userobj.mod or userobj.owner:\r\n                            id = js['id']\r\n                            self.db.messages.delete_one({\"roomname\": roomobj.name, \"message_id\": id})\r\n                            roomobj.send(deletemessage=1, id=id)\r\n                        else:\r\n                            userobj.send(deletemessage=0, error=\"not mod or owner\")\r\n\r\n            except Exception as e:\r\n                err = sys.exc_info()\r\n                line = err[2].tb_lineno\r\n                print(f\"ERR: {e} at line {line}\")\r\n\r\n    def onClose(self, wasClean, code, reason):\r\n        userobj = user.User().get(self.id)\r\n        if userobj.roomname:\r\n            roomobj = room.Room().get(userobj.roomname)\r\n            roomobj.users.remove(userobj)\r\n            userobj.delUser()\r\n        #print(\"WebSocket connection closed: {0}\".format(reason))\r\n\r\n\r\nif __name__ == '__main__':\r\n    contextFactory = ssl.DefaultOpenSSLContextFactory('certs/privkey.pem', 'certs/cert.pem')\r\n    txaio.start_logging(level='debug')\r\n    factory = WebSocketServerFactory(\"wss://anichat.ga:9000/\")\r\n    # by default, allowedOrigins is \"*\" and will work fine out of the\r\n    # box, but we can do better and be more-explicit about what we\r\n    # allow. We are serving the Web content on 8080, but our WebSocket\r\n    # listener is on 9000 so the Origin sent by the browser will be\r\n    # from port 8080...\r\n    factory.setProtocolOptions(\r\n        allowedOrigins=[\r\n            \"https://127.0.0.1:8080\",\r\n            \"https://localhost:8080\",\r\n        ]\r\n    )\r\n\r\n    factory.protocol = Server\r\n    listenWS(factory, contextFactory)\r\n\r\n    webdir = File(\".\")\r\n    webdir.contentTypes['.crt'] = 'application/x-x509-ca-cert'\r\n    web = Site(webdir)\r\n    #reactor.listenSSL(8080, web, contextFactory)\r\n    #reactor.listenTCP(8080, factory)`\r\n\r\nthis is all that shows in logs\r\n\r\n2020-08-15T20:36:14-0500 WebSocketServerFactory (TLS) starting on 9000\r\n2020-08-15T20:36:14-0500 Starting factory <autobahn.twisted.websocket.WebSocketServerFactory object at 0x7f7aa79aafd0>\r\nthen it exits instead of staying running I don't get why", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1403", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1403/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1403/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1403/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1403", "id": 659282463, "node_id": "MDU6SXNzdWU2NTkyODI0NjM=", "number": 1403, "title": "File \"/root/routersploit/routersploit/core/exploit/utils.py\", line 109, in import_exploit", "user": {"login": "espanista", "id": 51049371, "node_id": "MDQ6VXNlcjUxMDQ5Mzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/51049371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/espanista", "html_url": "https://github.com/espanista", "followers_url": "https://api.github.com/users/espanista/followers", "following_url": "https://api.github.com/users/espanista/following{/other_user}", "gists_url": "https://api.github.com/users/espanista/gists{/gist_id}", "starred_url": "https://api.github.com/users/espanista/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/espanista/subscriptions", "organizations_url": "https://api.github.com/users/espanista/orgs", "repos_url": "https://api.github.com/users/espanista/repos", "events_url": "https://api.github.com/users/espanista/events{/privacy}", "received_events_url": "https://api.github.com/users/espanista/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-17T14:02:43Z", "updated_at": "2020-07-17T14:28:01Z", "closed_at": "2020-07-17T14:28:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ubuntu 20 .\r\n\r\nTraceback (most recent call last):\r\n  File \"/root/routersploit/routersploit/core/exploit/utils.py\", line 109, in import_exploit\r\n    module = importlib.import_module(path)\r\n  File \"/usr/lib/python3.8/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 671, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 783, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/root/routersploit/routersploit/modules/exploits/generic/heartbleed.py\", line 5, in <module>\r\n    from cryptography import x509\r\nModuleNotFoundError: No module named 'cryptography'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/root/routersploit/routersploit/interpreter.py\", line 389, in command_run\r\n    self.current_module.run()\r\n  File \"/root/routersploit/routersploit/modules/scanners/autopwn.py\", line 77, in run\r\n    for module in utils.iter_modules(directory):\r\n  File \"/root/routersploit/routersploit/core/exploit/utils.py\", line 138, in iter_modules\r\n    yield import_exploit(path)\r\n  File \"/root/routersploit/routersploit/core/exploit/utils.py\", line 120, in import_exploit\r\n    raise RoutersploitException(\r\nroutersploit.core.exploit.exceptions.RoutersploitException: Error during loading 'routersploit/modules/exploits/generic/heartbleed'\r\n\r\nError: No module named 'cryptography'\r\n\r\nIt should be valid path to the module. Use <tab> key multiple times for completion.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"rsf.py\", line 29, in <module>\r\n    routersploit(sys.argv)\r\n  File \"rsf.py\", line 25, in routersploit\r\n    rsf.start()\r\n  File \"/root/routersploit/routersploit/interpreter.py\", line 125, in start\r\n    command_handler(args, **kwargs)\r\n  File \"/root/routersploit/routersploit/core/exploit/utils.py\", line 177, in wrapper\r\n    return fn(self, *args, **kwargs)\r\n  File \"/root/routersploit/routersploit/interpreter.py\", line 394, in command_run\r\n    print_error(traceback.format_exc(sys.exc_info()))\r\n  File \"/usr/lib/python3.8/traceback.py\", line 167, in format_exc\r\n    return \"\".join(format_exception(*sys.exc_info(), limit=limit, chain=chain))\r\n  File \"/usr/lib/python3.8/traceback.py\", line 120, in format_exception\r\n    return list(TracebackException(\r\n  File \"/usr/lib/python3.8/traceback.py\", line 493, in __init__\r\n    context = TracebackException(\r\n  File \"/usr/lib/python3.8/traceback.py\", line 509, in __init__\r\n    self.stack = StackSummary.extract(\r\n  File \"/usr/lib/python3.8/traceback.py\", line 340, in extract\r\n    if limit >= 0:\r\nTypeError: '>=' not supported between instances of 'tuple' and 'int'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1399", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1399/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1399/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1399/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1399", "id": 648050122, "node_id": "MDU6SXNzdWU2NDgwNTAxMjI=", "number": 1399, "title": "How to manually manage session lifetime in asyncio?", "user": {"login": "neara", "id": 1453895, "node_id": "MDQ6VXNlcjE0NTM4OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1453895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neara", "html_url": "https://github.com/neara", "followers_url": "https://api.github.com/users/neara/followers", "following_url": "https://api.github.com/users/neara/following{/other_user}", "gists_url": "https://api.github.com/users/neara/gists{/gist_id}", "starred_url": "https://api.github.com/users/neara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neara/subscriptions", "organizations_url": "https://api.github.com/users/neara/orgs", "repos_url": "https://api.github.com/users/neara/repos", "events_url": "https://api.github.com/users/neara/events{/privacy}", "received_events_url": "https://api.github.com/users/neara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-30T10:11:36Z", "updated_at": "2020-07-02T07:59:13Z", "closed_at": "2020-07-02T07:59:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am writing an asyncio application that needs to talk to another component via rpc. I already have crossbar router in place and component exposing methods that can be called.\r\nHowever, I can't seem to figure out or find an example of how can I create a session to crossbar router and at some point call those methods (not as part of a blocking `loop.run_forever` in `component.run`). \r\nHow to manually manage the session? Connect, call, leave, etc.\r\n\r\nThanks \ud83d\ude4f \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1397", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1397/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1397/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1397/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1397", "id": 646065828, "node_id": "MDU6SXNzdWU2NDYwNjU4Mjg=", "number": 1397, "title": "XBR implementation expects to select a txaio framework before import", "user": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-26T07:24:20Z", "updated_at": "2020-06-26T17:44:00Z", "closed_at": "2020-06-26T10:45:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With https://github.com/crossbario/autobahn-python/commit/3d16460ba8074a60ba2b28d05fd9c32c05481cb5, now before importing xbr, one must select a txaio framework.\r\n```\r\n(venv) om26er@X1C6:~/scm/crossbario/autobahn-python$ python3\r\nPython 3.8.2 (default, Apr 27 2020, 15:53:34) \r\n[GCC 9.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from autobahn import xbr\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/om26er/scm/crossbario/autobahn-python/autobahn/xbr/__init__.py\", line 56, in <module>\r\n    from autobahn.xbr._config import load_or_create_profile, UserConfig, Profile  # noqa\r\n  File \"/home/om26er/scm/crossbario/autobahn-python/autobahn/xbr/_config.py\", line 60, in <module>\r\n    class Profile(object):\r\n  File \"/home/om26er/scm/crossbario/autobahn-python/autobahn/xbr/_config.py\", line 62, in Profile\r\n    log = make_logger()\r\n  File \"/home/om26er/scm/crossbario/xbr-www/venv/lib/python3.8/site-packages/txaio/_unframework.py\", line 41, in _throw_usage_error\r\n    raise RuntimeError(\r\nRuntimeError: To use txaio, you must first select a framework with .use_twisted() or .use_asyncio()\r\n```\r\nThat kind of break tests at many places since the imports previously did not select a txaio framework. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1392", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1392/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1392/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1392/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1392", "id": 636961091, "node_id": "MDU6SXNzdWU2MzY5NjEwOTE=", "number": 1392, "title": "Add WAMP message internal-only attributes for publisher/caller disclosure", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-06-11T12:08:18Z", "updated_at": "2020-07-20T16:43:55Z", "closed_at": "2020-07-20T16:43:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "from https://crossbario.slack.com/archives/C0473JCQ6/p1591287619078900\r\n\r\nwould work like this:\r\n\r\n* sessions embedded inside the router worker (such as rlinks) are using https://github.com/crossbario/crossbar/blob/7a24af99fce6d057c63a9c7b144b0418ca627f4e/crossbar/router/session.py#L69\r\n* such session received WAMP messages here https://github.com/crossbario/crossbar/blob/master/crossbar/router/session.py#L273\r\n* so the event handler in rlink gets a native python WAMP msg object (without previous serialization/deserialization)\r\n* so we could just stick the publisher session ID/authid/authrole into a non-serialized attribute here https://github.com/crossbario/autobahn-python/blob/master/autobahn/wamp/message.py#L3141 ..\r\n* .. and omit this internal-use-only attribute in https://github.com/crossbario/autobahn-python/blob/effc130cd14ae16a19521129ba290b07d287f845/autobahn/wamp/message.py#L3742\r\n\r\nIOW, like:\r\n\r\n``` \r\nEvent._internal_only_publisher\r\nEvent._internal_only_publisher_authid\r\nEvent._internal_only_publisher_authrole\r\nCall._internal_only_caller\r\nCall._internal_only_caller_authid\r\nCall._internal_only_caller_authrole\r\n``` \r\n\r\nwe can probably do that generically, for any WAMP message sent/received in Message https://github.com/crossbario/autobahn-python/blob/master/autobahn/wamp/message.py#L362", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1390", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1390/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1390/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1390/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1390", "id": 636205276, "node_id": "MDU6SXNzdWU2MzYyMDUyNzY=", "number": 1390, "title": "Subscribe and exit session, then subscribe to new topic without stopping the reactor ", "user": {"login": "ohank", "id": 44366788, "node_id": "MDQ6VXNlcjQ0MzY2Nzg4", "avatar_url": "https://avatars1.githubusercontent.com/u/44366788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ohank", "html_url": "https://github.com/ohank", "followers_url": "https://api.github.com/users/ohank/followers", "following_url": "https://api.github.com/users/ohank/following{/other_user}", "gists_url": "https://api.github.com/users/ohank/gists{/gist_id}", "starred_url": "https://api.github.com/users/ohank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ohank/subscriptions", "organizations_url": "https://api.github.com/users/ohank/orgs", "repos_url": "https://api.github.com/users/ohank/repos", "events_url": "https://api.github.com/users/ohank/events{/privacy}", "received_events_url": "https://api.github.com/users/ohank/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641228806, "node_id": "MDU6TGFiZWw2NDEyMjg4MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/not-an-issue-but-a-question-use-our-mailing-list", "name": "not-an-issue-but-a-question-use-our-mailing-list", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-10T12:28:30Z", "updated_at": "2020-06-15T06:53:32Z", "closed_at": "2020-06-15T06:27:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Scenario: \r\n\r\nWriting a test program in order to subscribe to different topics one at a time. When calling the Start function in subscribe multiple times from another .py file, see attached code \r\n\r\nWhen running Subscribe.Start it does not get to the return statement without using reactor.stop(). When using reactor.stop() and then subscribe to a new topic an error is thrown i.e. \u201cReactor not restartable\u201d  \r\n\r\n\tfrom autobahn.twisted import sleep\r\n\tfrom autobahn.twisted.component import Component, run\r\n\tfrom autobahn.twisted.wamp import ApplicationRunner, ApplicationSession, Application, Session\r\n\tfrom autobahn.wamp import auth\r\n\tfrom autobahn.wamp.serializer import JsonSerializer\r\n\tfrom pprint import pprint\r\n\t\r\n\tfrom twisted.internet import reactor\r\n\tfrom twisted.internet.defer import inlineCallbacks\r\n\t\r\n\t\r\n\tclass SubscribeComponent(Session):\r\n\t\tdef __init__(self,\r\n\t\t\t\t\ttopic: str,\r\n\t\t\t\t\twait: float):\r\n\t\t\tsuper().__init__()\r\n\t\t\tself._topic = topic\r\n\t\t\tself._wait = wait\r\n\t\t\tself.result = None\r\n\t\r\n\t\t@inlineCallbacks\r\n\t\tdef onJoin(self, details):\r\n\t\t\tdef on_event(*data):\r\n\t\t\t\tprint('Subscription event received(#%d)' % len(data))\r\n\t\t\t\tpprint(data)\r\n\t\t\t\tself.result = data\r\n\t\t\t\t#subscription.unsubscribe()\r\n\t\t\t\t#self.leave()\r\n\t\r\n\t\t\tsubscription = yield self.subscribe(on_event, self._topic)\r\n\t\t\tprint('Subscribe to:%s sub id:%d' % (self._topic, subscription.id))\r\n\t\r\n\t\t\tyield sleep(self._wait)\r\n\t\t\tres = yield subscription.unsubscribe()\r\n\t\r\n\t\t\tself.leave()\r\n\t\r\n\t\tdef onDisconnect(self):\r\n\t\t\tif reactor.running:\r\n\t\t\t\treactor.stop()\r\n\t\r\n\t\r\n\tclass Subscribe:\r\n\t\tdef __init__(self,\r\n\t\t\t\t\turl: str,\r\n\t\t\t\t\trealm: str):\r\n\t\t\tself.url = url\r\n\t\t\tself.realm = realm\r\n\t\t\tself.runner = ApplicationRunner(url=self.url, realm=self.realm)\r\n\t\r\n\t\tdef start(self, topic: str, wait: float):\r\n\t\t\t# Setup Component to use wamp cra authentication.\r\n\t\t\tsession = SubscribeComponent(topic=topic, wait=wait)\r\n\t\t\tsession.add_authenticator(auth.AuthAnonymous())\r\n\t\t\ttry:\r\n\t\t\t\tprint('Starting %s at %s, %s, %s' % (\"Send\", self.url, self.realm, topic))\r\n\t\t\t\t# self.runner.run(make=session, start_reactor=False)\r\n\t\t\t\tself.runner.run(session, start_reactor=False)\r\n\t\t\t\treactor.run()\r\n\t\t\t\treturn session.result\r\n\t\t\texcept Exception as e:\r\n\t\t\t\tpprint('Error, Is the router up?')\r\n\t\t\t\tpprint(e)\r\n\t\t\t\treturn False\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1388", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1388/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1388/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1388/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1388", "id": 625560207, "node_id": "MDU6SXNzdWU2MjU1NjAyMDc=", "number": 1388, "title": "Bytes and string both get encoded as strings", "user": {"login": "Lois31", "id": 59613296, "node_id": "MDQ6VXNlcjU5NjEzMjk2", "avatar_url": "https://avatars3.githubusercontent.com/u/59613296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lois31", "html_url": "https://github.com/Lois31", "followers_url": "https://api.github.com/users/Lois31/followers", "following_url": "https://api.github.com/users/Lois31/following{/other_user}", "gists_url": "https://api.github.com/users/Lois31/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lois31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lois31/subscriptions", "organizations_url": "https://api.github.com/users/Lois31/orgs", "repos_url": "https://api.github.com/users/Lois31/repos", "events_url": "https://api.github.com/users/Lois31/events{/privacy}", "received_events_url": "https://api.github.com/users/Lois31/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-27T10:07:30Z", "updated_at": "2020-05-28T19:58:24Z", "closed_at": "2020-05-28T19:58:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello community,\r\n\r\nI have a problem when sending a byte array with the use of the msgpack serializer.\r\nWhen receiving the data, it is unpack as a string.\r\n\r\nWhen using the json serializer, the data is correctly encoded, as referenced in this [document](https://wamp-proto.org/_static/gen/wamp_latest.html#binary-conversion-of-json-strings), and decoded as bytes.\r\n\r\nI also made Wireshark captures which show that the following byte array `b'\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10'`, is encoded as follows `[\"\\u0000b'AQIDBAUGBwgJEA==' \"]`, when using the json serializer. This encoding corresponds well to that described in the standard cited in the previous document.\r\nWith the msgpack serializer, the byte array is not encoded correctly and send derecly as follow `0a 01 02 03 04 05 06 07 08 09 10`\r\n\r\nhere is my current configuration:\r\n\r\n- Python3.8\r\n- autobahn 20.4.3\r\n- msgpack 1.0.0\r\n\r\nBelow an example allowing to highlight the problem:\r\n\r\n**Backend.py**\r\n```\r\nimport asyncio\r\nfrom autobahn.asyncio.wamp import ApplicationSession\r\nfrom autobahn.asyncio.component import Component, run\r\n\r\nclass Backend(ApplicationSession):\r\n    def __init__(self, config=None):\r\n        config.realm = 'TESTS'\r\n        super().__init__(config)\r\n\r\n\r\n    async def onJoin(self, details):\r\n        print('Register test_echo_payload')\r\n        await self.register(self.test_echo_payload, 'test.echo.payload')\r\n\r\n    async def onDisconnect(self):\r\n        loop  = asyncio.get_event_loop()\r\n        loop.stop()\r\n\r\n\r\n    async def test_echo_payload(self, value: bytes) -> bytes:\r\n        if not isinstance(value, bytes):\r\n            print('Value is not an instance of bytes but is a %s' % (type(value)))\r\n        return value\r\n\r\n\r\nif __name__ == '__main__':\r\n    backend = Component(\r\n            session_factory = Backend,\r\n            transports      = [\r\n                {\r\n                    'type':        'websocket',\r\n                    'serializers': ['msgpack'],\r\n                    'url':         'ws://localhost:8902/ws',\r\n                    'max_retries': 3\r\n                }\r\n            ]\r\n        )\r\n\r\n    run([backend])\r\n```\r\n\r\n**Client.py**\r\n```\r\nimport asyncio\r\nfrom autobahn.asyncio.wamp import ApplicationSession\r\nfrom autobahn.asyncio.component import Component, run\r\n\r\n\r\nclass Client(ApplicationSession):\r\n    def __init__(self, config=None):\r\n        config.realm = 'TESTS'\r\n        super().__init__(config)\r\n\r\n\r\n    async def onJoin(self, details):\r\n        print('Call test_echo_payload')\r\n        loop = asyncio.get_running_loop()\r\n        loop.create_task(self.test_echo_payload())\r\n\r\n    async def onDisconnect(self):\r\n        loop  = asyncio.get_event_loop()\r\n        loop.stop()\r\n\r\n    async def test_echo_payload(self):\r\n        message_bytes = b'\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x10'\r\n        ret = await self.call('test.echo.payload', message_bytes)\r\n\r\n\r\nif __name__ == '__main__':\r\n    client = Component(\r\n            session_factory = Client,\r\n            transports      = [\r\n                {\r\n                    'type':        'websocket',\r\n                    'serializers': ['msgpack'],\r\n                    'url':         'ws://localhost:8902/ws',\r\n                    'max_retries': 3\r\n                }\r\n            ]\r\n        )\r\n\r\n    run([client])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1386", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1386/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1386/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1386/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1386", "id": 620997950, "node_id": "MDU6SXNzdWU2MjA5OTc5NTA=", "number": 1386, "title": "Add support for adding callback to add_event_handler in asyncio", "user": {"login": "uttaravadina", "id": 51327760, "node_id": "MDQ6VXNlcjUxMzI3NzYw", "avatar_url": "https://avatars3.githubusercontent.com/u/51327760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uttaravadina", "html_url": "https://github.com/uttaravadina", "followers_url": "https://api.github.com/users/uttaravadina/followers", "following_url": "https://api.github.com/users/uttaravadina/following{/other_user}", "gists_url": "https://api.github.com/users/uttaravadina/gists{/gist_id}", "starred_url": "https://api.github.com/users/uttaravadina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uttaravadina/subscriptions", "organizations_url": "https://api.github.com/users/uttaravadina/orgs", "repos_url": "https://api.github.com/users/uttaravadina/repos", "events_url": "https://api.github.com/users/uttaravadina/events{/privacy}", "received_events_url": "https://api.github.com/users/uttaravadina/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124416608, "node_id": "MDU6TGFiZWwxMjQ0MTY2MDg=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-discussion", "name": "needs-discussion", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-05-19T13:57:00Z", "updated_at": "2020-05-25T19:19:36Z", "closed_at": "2020-05-25T19:19:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently using asyncio for event loop as it supports *add_event_handler* for handling **UNIX Signals**\r\n\r\nI have a use-case where I want to call 2 or more software and hardware APIs, when the running process receives SIGINT and SIGTERM before the process can finally exit. \r\nI noticed that part is already implemented and that is how the app closes cleanly every time.\r\n[asyncio - add_signal_handler](https://github.com/crossbario/autobahn-python/blob/011453fc7aa7e22f7ed558391ba6a0597b864578/autobahn/asyncio/component.py#L383)\r\n\r\nI think we can provide support to pass extra callbacks via the [run](https://github.com/crossbario/autobahn-python/blob/011453fc7aa7e22f7ed558391ba6a0597b864578/autobahn/asyncio/component.py#L315) and then pass it at [nicely_exit](https://github.com/crossbario/autobahn-python/blob/011453fc7aa7e22f7ed558391ba6a0597b864578/autobahn/asyncio/component.py#L360)\r\n\r\n@meejah @om26er @oberstet If there is feasibility of adding this into the library then is there any other way the process can listen for UNIX Signals and run a callback?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1384", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1384/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1384/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1384/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1384", "id": 617724228, "node_id": "MDU6SXNzdWU2MTc3MjQyMjg=", "number": 1384, "title": "Add deepsource project badge", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 91720867, "node_id": "MDU6TGFiZWw5MTcyMDg2Nw==", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}, {"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-13T20:12:53Z", "updated_at": "2020-05-27T16:42:03Z", "closed_at": "2020-05-27T16:42:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Add a header badge to https://github.com/crossbario/autobahn-python/blob/master/README.rst linking to https://deepsource.io/gh/crossbario/autobahn-python/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1383", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1383/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1383/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1383/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1383", "id": 617723367, "node_id": "MDU6SXNzdWU2MTc3MjMzNjc=", "number": 1383, "title": "Review/fix issues found by deepsource static code analysis", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}, {"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-13T20:11:23Z", "updated_at": "2020-05-27T16:42:16Z", "closed_at": "2020-05-27T16:42:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "go over https://deepsource.io/gh/crossbario/autobahn-python/, in particular:\r\n\r\n* https://deepsource.io/gh/crossbario/autobahn-python/issues/?category=security\r\n* https://deepsource.io/gh/crossbario/autobahn-python/issues/?category=performance\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1361", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1361/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1361/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1361/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1361", "id": 600819737, "node_id": "MDU6SXNzdWU2MDA4MTk3Mzc=", "number": 1361, "title": "WampRawSocketClientProtocol.stringReceived: WAMP Exception - aborting connection", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-16T07:44:46Z", "updated_at": "2020-04-17T14:17:49Z", "closed_at": "2020-04-17T14:17:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have seen this happening (wasn't able to reproduce up till now though):\r\n\r\n```\r\n2020-04-16T06:18:32+0000 [Proxy          23] WampRawSocketClientProtocol.stringReceived: WAMP Exception - aborting connection!\r\n'NoneType' object has no attribute 'send'\r\n2020-04-16T06:18:32+0000 [Proxy          23] Stopping factory <autobahn.twisted.rawsocket.WampRawSocketClientFactory object at 0x00000000061338d8>\r\n2020-04-16T06:18:32+0000 [Router         11] Router.detach(session=2407160216681290)\r\n2020-04-16T06:18:32+0000 [Router         11] Router.detach(session=2407160216681290): detached sessions [2407160216681290] from router realm \"dvl1\"\r\n2020-04-16T06:18:40+0000 [Proxy          35] ProxyFrontendSession.onClose(wasClean=True)\r\n```\r\n\r\n* https://gist.github.com/oberstet/cabbe2533021ba03ddb6cba71c3129b0\r\n\r\nunfortunately, we do not log a complete traceback:\r\n\r\n* https://github.com/crossbario/autobahn-python/blob/9e68328df3c23ca3eee67017404235024f265693/autobahn/twisted/rawsocket.py#L169\r\n\r\nlogging a complete traceback would be good to add in general, and also to track down where this specific issue originates from ..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1360", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1360/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1360/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1360/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1360", "id": 600495984, "node_id": "MDU6SXNzdWU2MDA0OTU5ODQ=", "number": 1360, "title": "Consider enabling strict externalPort optionally", "user": {"login": "HackToHell", "id": 692171, "node_id": "MDQ6VXNlcjY5MjE3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/692171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HackToHell", "html_url": "https://github.com/HackToHell", "followers_url": "https://api.github.com/users/HackToHell/followers", "following_url": "https://api.github.com/users/HackToHell/following{/other_user}", "gists_url": "https://api.github.com/users/HackToHell/gists{/gist_id}", "starred_url": "https://api.github.com/users/HackToHell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HackToHell/subscriptions", "organizations_url": "https://api.github.com/users/HackToHell/orgs", "repos_url": "https://api.github.com/users/HackToHell/repos", "events_url": "https://api.github.com/users/HackToHell/events{/privacy}", "received_events_url": "https://api.github.com/users/HackToHell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-15T18:17:30Z", "updated_at": "2020-05-12T18:33:42Z", "closed_at": "2020-05-12T18:33:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI had noticed that autobahn strictly enforces the RFC https://tools.ietf.org/html/rfc7230#section-5.4. As far as I can tell(I could be wrong) the externalPort isn't used anywhere else apart from the check at https://github.com/crossbario/autobahn-python/blob/master/autobahn/websocket/protocol.py#L2611-L2633. \r\nThe problem arises when this is used inside a system such as Kubernetes, where there's an optional SSL termination at edge, all requests are routed via an Ingress node. This means all users have to set the external port to 80. (Even though outside it's 443). \r\nI found the issue from https://github.com/RobotWebTools/rosbridge_suite/pull/468, by internally switching the library, it broke compatibility with no way to maintain backward compatibility. \r\nWould you consider making the externalPort check non-default and having a strict enforce mode? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1356", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1356/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1356/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1356/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1356", "id": 596955792, "node_id": "MDU6SXNzdWU1OTY5NTU3OTI=", "number": 1356, "title": "\"WebSocket connection closed\" error while using asyncio's new_event_loop function", "user": {"login": "TheBigFish", "id": 10334759, "node_id": "MDQ6VXNlcjEwMzM0NzU5", "avatar_url": "https://avatars3.githubusercontent.com/u/10334759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheBigFish", "html_url": "https://github.com/TheBigFish", "followers_url": "https://api.github.com/users/TheBigFish/followers", "following_url": "https://api.github.com/users/TheBigFish/following{/other_user}", "gists_url": "https://api.github.com/users/TheBigFish/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheBigFish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheBigFish/subscriptions", "organizations_url": "https://api.github.com/users/TheBigFish/orgs", "repos_url": "https://api.github.com/users/TheBigFish/repos", "events_url": "https://api.github.com/users/TheBigFish/events{/privacy}", "received_events_url": "https://api.github.com/users/TheBigFish/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641228806, "node_id": "MDU6TGFiZWw2NDEyMjg4MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/not-an-issue-but-a-question-use-our-mailing-list", "name": "not-an-issue-but-a-question-use-our-mailing-list", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-09T01:17:42Z", "updated_at": "2020-04-09T03:35:28Z", "closed_at": "2020-04-09T03:35:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use `new_event_loop` function in main thread, it works well\r\n\r\n```python\r\nimport asyncio\r\nfrom autobahn.asyncio.websocket import WebSocketClientProtocol, \\\r\n    WebSocketClientFactory\r\n\r\nclass AgentProtocol(WebSocketClientProtocol):\r\n\r\n    def onConnect(self, response):\r\n        print(\"Server connected: {0}\".format(response.peer))\r\n\r\n    def onConnecting(self, transport_details):\r\n        print(\"Connecting; transport details: {}\".format(transport_details))\r\n        return None  # ask for defaults\r\n\r\n    def onOpen(self):\r\n        self.factory.proto = self\r\n        print(\"WebSocket connection open.\")\r\n\r\n    def onMessage(self, payload, isBinary):\r\n        if isBinary:\r\n            print(\"Binary message received: {0} bytes\".format(len(payload)))\r\n        else:\r\n            print(\"Text message received: {0}\".format(payload.decode('utf8')))\r\n\r\n\r\n    def onClose(self, wasClean, code, reason):\r\n        self.factory.proto = None\r\n        print(\"WebSocket connection closed: {0}\".format(reason))\r\n\r\n\r\nclass AgentFactory(WebSocketClientFactory):\r\n    protocol = AgentProtocol\r\n\r\n    def __init__(self, url):\r\n        super().__init__(url)\r\n        self.proto = None\r\n\r\nloop = asyncio.get_event_loop()\r\n#asyncio.set_event_loop(loop)\r\nws_factory = AgentFactory(\"ws://127.0.0.1:9000\")\r\ncoro = loop.create_connection(ws_factory, \"127.0.0.1\", 9000)\r\nloop.call_later(5, loop.stop)\r\nloop.run_until_complete(coro)\r\nloop.run_forever()\r\nprint(\"finish\")\r\n```\r\noutputs:\r\n```\r\nConnecting; transport details: {\"peer\": \"tcp4:127.0.0.1:9000\", \"secure_channel_id\": {}, \"is_secure\": false}\r\nServer connected: tcp4:127.0.0.1:9000\r\nWebSocket connection open.\r\nfinish\r\n```\r\nbut when change \r\n`loop = asyncio.get_event_loop()`\r\nto\r\n```python\r\nloop = asyncio.new_event_loop()\r\nasyncio.set_event_loop(loop)\r\n```\r\nI get some errors:\r\noutput:\r\n```\r\nConnecting; transport details: {\"peer\": \"tcp4:127.0.0.1:9000\", \"is_secure\": false, \"secure_channel_id\": {}}\r\nWebSocket connection closed: connection was closed uncleanly (peer dropped the TCP connection without previous WebSocket closing handshake)\r\nfinish\r\n```\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1355", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1355/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1355/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1355/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1355", "id": 595902578, "node_id": "MDU6SXNzdWU1OTU5MDI1Nzg=", "number": 1355, "title": "missing channel_binding handling in authenticators", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-07T14:16:38Z", "updated_at": "2020-04-23T02:51:09Z", "closed_at": "2020-04-23T02:51:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "channel_binding attribute is indeed missing in https://github.com/crossbario/autobahn-python/blob/master/autobahn/wamp/auth.py#L145 - that's a bug in component API (which is using authenticators) vs ApplicationSession (as it is used in the example ^, and which isn't using authenticators, but onChallenge callback)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1349", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1349/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1349/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1349/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1349", "id": 589666955, "node_id": "MDU6SXNzdWU1ODk2NjY5NTU=", "number": 1349, "title": "Package XBR ABI files from upstream", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413924033, "node_id": "MDU6TGFiZWw0MTM5MjQwMzM=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/CI-CD", "name": "CI-CD", "color": "d297fc", "default": false, "description": ""}, {"id": 1329881886, "node_id": "MDU6TGFiZWwxMzI5ODgxODg2", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/XBR", "name": "XBR", "color": "ff6600", "default": false, "description": ""}, {"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-03-28T21:53:26Z", "updated_at": "2020-03-28T23:40:05Z", "closed_at": "2020-03-28T23:40:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, the XBR contract ABI files are included in this repo directly. This is a maintainence burden to keep in sync, and blows up the repo here with change noise in the ABI JSON files.\r\n\r\nInstead, the ABI files should be downloaded while packaging directly from:\r\n\r\n* https://xbr.network/lib/abi/xbr-protocol-20.4.1-dev.zip\r\n\r\nThis archive contains all ABI files, and the archive is automatically built and published in the XBR protocol CI here\r\n\r\n* https://github.com/crossbario/xbr-protocol/blob/71f1fc36f3158ecd2bb7a4c27b4a34235263fddf/.travis-deploy.sh#L46\r\n* https://travis-ci.org/github/crossbario/xbr-protocol/jobs/668127055#L1334", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1345", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1345/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1345/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1345/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1345", "id": 585394151, "node_id": "MDU6SXNzdWU1ODUzOTQxNTE=", "number": 1345, "title": "CLI tool is broken", "user": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-03-21T00:37:45Z", "updated_at": "2020-03-22T13:36:48Z", "closed_at": "2020-03-22T13:36:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This has been appearing in our CI\r\n```\r\nbuilder.wheel_pushed --keyword name txaio --keyword publish true\r\n\r\nTraceback (most recent call last):\r\n\r\n  File \"/home/travis/virtualenv/python3.7.1/bin/wamp\", line 6, in <module>\r\n\r\n    from autobahn.__main__ import _main\r\n\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/autobahn/__main__.py\", line 37, in <module>\r\n\r\n    from autobahn.twisted.component import Component\r\n\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/autobahn/twisted/__init__.py\", line 36, in <module>\r\n\r\n    from autobahn.twisted.util import sleep\r\n\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/autobahn/twisted/util.py\", line 30, in <module>\r\n\r\n    from twisted.internet.address import IPv4Address, UNIXAddress\r\n\r\n  File \"/home/travis/virtualenv/python3.7.1/lib/python3.7/site-packages/twisted/internet/address.py\", line 101, in <module>\r\n\r\n    @attr.s(hash=False, repr=False, eq=False)\r\n\r\nTypeError: attrs() got an unexpected keyword argument 'eq'\r\n```\r\n\r\nLook here for example https://travis-ci.org/github/crossbario/txaio/jobs/665077629", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1341", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1341/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1341/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1341/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1341", "id": 579319312, "node_id": "MDU6SXNzdWU1NzkzMTkzMTI=", "number": 1341, "title": "Asyncio echo example not working properly", "user": {"login": "jersobh", "id": 4663106, "node_id": "MDQ6VXNlcjQ2NjMxMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4663106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jersobh", "html_url": "https://github.com/jersobh", "followers_url": "https://api.github.com/users/jersobh/followers", "following_url": "https://api.github.com/users/jersobh/following{/other_user}", "gists_url": "https://api.github.com/users/jersobh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jersobh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jersobh/subscriptions", "organizations_url": "https://api.github.com/users/jersobh/orgs", "repos_url": "https://api.github.com/users/jersobh/repos", "events_url": "https://api.github.com/users/jersobh/events{/privacy}", "received_events_url": "https://api.github.com/users/jersobh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-11T14:47:09Z", "updated_at": "2020-03-11T20:01:50Z", "closed_at": "2020-03-11T20:01:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting this error :\r\n```\r\nWebSocket connection closed: connection was closed uncleanly (peer dropped the TCP connection without previous WebSocket closing handshake)\r\n```\r\nwhile running the asyncio example. Twisted example works, tough.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1329", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1329/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1329/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1329/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1329", "id": 571167910, "node_id": "MDU6SXNzdWU1NzExNjc5MTA=", "number": 1329, "title": "Move make_w3 to autobahn", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1329881886, "node_id": "MDU6TGFiZWwxMzI5ODgxODg2", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/XBR", "name": "XBR", "color": "ff6600", "default": false, "description": ""}, {"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-02-26T08:53:55Z", "updated_at": "2020-02-26T10:36:43Z", "closed_at": "2020-02-26T10:36:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "currently, we have a helper `crossbarfx.edge.worker.xbr._util import make_w3` which should be moved to `autobahn.xbr._util` - because we need that on the client and  CI side of things too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1323", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1323/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1323/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1323/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1323", "id": 568864973, "node_id": "MDU6SXNzdWU1Njg4NjQ5NzM=", "number": 1323, "title": "[asyncio] No error raised using a wrong self signed TLS certificate.", "user": {"login": "rdebroiz", "id": 3714876, "node_id": "MDQ6VXNlcjM3MTQ4NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3714876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdebroiz", "html_url": "https://github.com/rdebroiz", "followers_url": "https://api.github.com/users/rdebroiz/followers", "following_url": "https://api.github.com/users/rdebroiz/following{/other_user}", "gists_url": "https://api.github.com/users/rdebroiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdebroiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdebroiz/subscriptions", "organizations_url": "https://api.github.com/users/rdebroiz/orgs", "repos_url": "https://api.github.com/users/rdebroiz/repos", "events_url": "https://api.github.com/users/rdebroiz/events{/privacy}", "received_events_url": "https://api.github.com/users/rdebroiz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-02-21T10:21:24Z", "updated_at": "2020-02-23T07:31:36Z", "closed_at": "2020-02-21T10:59:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "TLS is in place and use a self signed certificate. With a config such has:\r\n```\r\nendpoint:\r\n  type: \"tcp\"\r\n  host: \"host\"\r\n  port: port\r\n  tls:\r\n    hostname: \"CA's CN\"\r\n    trust_root: \"this/is/a/wrong/file\" # does not exists for instance\r\n```\r\n\r\nThe folowing code will run printing `Using default loop`.\r\n\r\n```python\r\ndef on_connection_failed(err: Exception):\r\n    test_conn_comp._err = err\r\n    return True\r\n\r\ntest_conn_comp = Component(\r\n    realm=conf[\"realm\"],\r\n    transports=conf[\"transports\"],\r\n    authentication=conf[\"authentication\"],\r\n    is_fatal=on_connection_failed\r\n)\r\n\r\n@test_conn_comp.on_join\r\ndef on_joined(*args, **kwargs):\r\n    print(\"Connection established.\")\r\n    test_conn_comp.stop()\r\n\r\ntest_conn_comp._err = None\r\ntest_conn_comp.start()\r\nif test_conn_comp._err:\r\n    raise RuntimeError(f\"Connection refused. reason {test_conn_comp._err.error_message()}\")\r\n```\r\n\r\nExpected: An error to be raised such as `FileNotExistsError`, `SSLError`, etc.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1322", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1322/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1322/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1322/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1322", "id": 568573072, "node_id": "MDU6SXNzdWU1Njg1NzMwNzI=", "number": 1322, "title": "Specific type check behavior", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124416608, "node_id": "MDU6TGFiZWwxMjQ0MTY2MDg=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-discussion", "name": "needs-discussion", "color": "ffff00", "default": false, "description": ""}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-20T21:06:47Z", "updated_at": "2020-07-20T06:02:00Z", "closed_at": "2020-07-20T06:02:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "consider this registered procedure:\r\n\r\n```python\r\n    @wamp.register('network.xbr.console.get_member_logins', check_types=True)\r\n    def get_member_logins(self, member_oid: bytes, details: Optional[CallDetails] = None) -> list:\r\n```\r\n\r\nwhen this procedure is called with **2 (!)** arguments, the resulting traceback is:\r\n\r\n```\r\n2020-02-20T21:59:49+0100 [Router      19483] XbrNetworkApi.onUserError(): \"AttributeError: __name__\"\r\nTraceback (most recent call last):\r\n  File \"/home/oberstet/scm/crossbario/autobahn-python/autobahn/wamp/protocol.py\", line 1020, in onMessage\r\n    on_reply = txaio.as_future(endpoint.fn, *invoke_args, **invoke_kwargs)\r\n  File \"/home/oberstet/scm/crossbario/txaio/txaio/tx.py\", line 365, in as_future\r\n    return ensureDeferred(fun(*args, **kwargs))\r\n  File \"/home/oberstet/cpy381_3/lib/python3.8/site-packages/twisted/internet/defer.py\", line 911, in ensureDeferred\r\n    return _cancellableInlineCallbacks(coro)\r\n  File \"/home/oberstet/cpy381_3/lib/python3.8/site-packages/twisted/internet/defer.py\", line 1529, in _cancellableInlineCallbacks\r\n    _inlineCallbacks(None, g, status)\r\n--- <exception caught here> ---\r\n  File \"/home/oberstet/cpy381_3/lib/python3.8/site-packages/twisted/internet/defer.py\", line 1418, in _inlineCallbacks\r\n    result = g.send(result)\r\n  File \"/home/oberstet/scm/crossbario/autobahn-python/autobahn/wamp/protocol.py\", line 508, in _type_check\r\n    \"'{}' required={} got={}\".format(name, kind.__name__, type(arguments[name]).__name__))\r\n  File \"/home/oberstet/cpy381/lib/python3.8/typing.py\", line 757, in __getattr__\r\n    raise AttributeError(attr)\r\nbuiltins.AttributeError: __name__\r\n```\r\n\r\nthis is super-obscure and unexpected ..\r\n\r\nwhen turning off type checks, it will run into the assert within the procedure body:\r\n\r\n```\r\n2020-02-20T22:02:07+0100 Traceback (most recent call last):\r\n  File \"/home/oberstet/cpy381_3/lib/python3.8/site-packages/twisted/internet/defer.py\", line 654, in _runCallbacks\r\n    current.result = callback(current.result, *args, **kw)\r\n  File \"/home/oberstet/cpy381_3/lib/python3.8/site-packages/twisted/internet/defer.py\", line 1475, in gotResult\r\n    _inlineCallbacks(r, g, status)\r\n  File \"/home/oberstet/cpy381_3/lib/python3.8/site-packages/twisted/internet/defer.py\", line 1416, in _inlineCallbacks\r\n    result = result.throwExceptionIntoGenerator(g)\r\n  File \"/home/oberstet/cpy381_3/lib/python3.8/site-packages/twisted/python/failure.py\", line 512, in throwExceptionIntoGenerator\r\n    return g.throw(self.type, self.value, self.tb)\r\n--- <exception caught here> ---\r\n  File \"./backend/test/test_api_login.py\", line 72, in onJoin\r\n    await self._onJoin(details)\r\n  File \"./backend/test/test_api_login.py\", line 149, in _onJoin\r\n    pubkeys = await self.call('network.xbr.console.get_member_logins', member_oid, vaction_code)\r\nautobahn.wamp.exception.ApplicationError: ApplicationError(error=<wamp.error.runtime_error>, args=['details must be `autobahn.wamp.types.CallDetails`, but was `JEJX-5S3F-XWMF`'], kwargs={}, enc_algo=None, callee=None, callee_authid=None, callee_authrole=None, forward_for=None)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1320", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1320/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1320/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1320/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1320", "id": 567129756, "node_id": "MDU6SXNzdWU1NjcxMjk3NTY=", "number": 1320, "title": "Sync methods fail with type check", "user": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-02-18T20:09:57Z", "updated_at": "2020-02-19T07:33:53Z", "closed_at": "2020-02-19T07:33:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If a sync method is registered with type checking enabled, it can fail to invoke because our helper method uses `await` even if the method is sync. Producing the following output\r\n```\r\n2020-02-19T01:04:45+0500 [Router       8656] XbrNetworkApi.onUserError(): \"TypeError: object dict can't be used in 'await' expression\"\r\nTraceback (most recent call last):\r\n  File \"/home/om26er/scm/crossbario/autobahn-python/autobahn/wamp/protocol.py\", line 1024, in onMessage\r\n    on_reply = txaio.as_future(endpoint.fn, *invoke_args, **invoke_kwargs)\r\n  File \"/home/om26er/scm/crossbario/xbr-www/venv/lib/python3.7/site-packages/txaio/tx.py\", line 429, in as_future\r\n    return ensureDeferred(fun(*args, **kwargs))\r\n  File \"/home/om26er/scm/crossbario/xbr-www/venv/lib/python3.7/site-packages/twisted/internet/defer.py\", line 911, in ensureDeferred\r\n    return _cancellableInlineCallbacks(coro)\r\n  File \"/home/om26er/scm/crossbario/xbr-www/venv/lib/python3.7/site-packages/twisted/internet/defer.py\", line 1529, in _cancellableInlineCallbacks\r\n    _inlineCallbacks(None, g, status)\r\n--- <exception caught here> ---\r\n  File \"/home/om26er/scm/crossbario/xbr-www/venv/lib/python3.7/site-packages/twisted/internet/defer.py\", line 1418, in _inlineCallbacks\r\n    result = g.send(result)\r\n  File \"/home/om26er/scm/crossbario/autobahn-python/autobahn/wamp/protocol.py\", line 518, in _type_check\r\n    return await func(*args, **kwargs)\r\nbuiltins.TypeError: object dict can't be used in 'await' expression\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1315", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1315/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1315/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1315/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1315", "id": 566869801, "node_id": "MDU6SXNzdWU1NjY4Njk4MDE=", "number": 1315, "title": "Only enable type check for individual methods", "user": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-02-18T12:47:14Z", "updated_at": "2020-08-07T02:27:22Z", "closed_at": "2020-08-07T02:27:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently while registering a class (one that has @wamp.register and @wamp.subsribe decorators), the `type_check` flag provided with decorators is ignored and a global state is applied to all methods.\r\n\r\nWe should rather owner individual method decorators.\r\n```\r\nclass Sample(ApplicationSession):\r\n    def onJoin(self, details):\r\n        self.register(self, check_types=False)\r\n\r\n    # Currently this is being ignored\r\n    @wamp.register(\"io.crossbar.proc1\", check_types=True)\r\n    def proc1(self):\r\n        print(\"I was called\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1313", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1313/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1313/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1313/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1313", "id": 566765384, "node_id": "MDU6SXNzdWU1NjY3NjUzODQ=", "number": 1313, "title": "type check: support typing.Union parameters", "user": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-02-18T09:41:03Z", "updated_at": "2020-02-18T09:53:21Z", "closed_at": "2020-02-18T09:53:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Our current implementation of type checking fails when a parameter of `Union[str, int]` is used in the signature. We should support that case as well...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1310", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1310/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1310/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1310/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1310", "id": 565298262, "node_id": "MDU6SXNzdWU1NjUyOTgyNjI=", "number": 1310, "title": "Wrongly worded closing handshake timout warning", "user": {"login": "thomgree", "id": 13904022, "node_id": "MDQ6VXNlcjEzOTA0MDIy", "avatar_url": "https://avatars1.githubusercontent.com/u/13904022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomgree", "html_url": "https://github.com/thomgree", "followers_url": "https://api.github.com/users/thomgree/followers", "following_url": "https://api.github.com/users/thomgree/following{/other_user}", "gists_url": "https://api.github.com/users/thomgree/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomgree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomgree/subscriptions", "organizations_url": "https://api.github.com/users/thomgree/orgs", "repos_url": "https://api.github.com/users/thomgree/repos", "events_url": "https://api.github.com/users/thomgree/events{/privacy}", "received_events_url": "https://api.github.com/users/thomgree/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 172662, "node_id": "MDU6TGFiZWwxNzI2NjI=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/websocket", "name": "websocket", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-02-14T12:28:09Z", "updated_at": "2020-02-14T16:38:56Z", "closed_at": "2020-02-14T16:38:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here:\r\nhttps://github.com/crossbario/autobahn-python/blob/0c38a7ea759f353e6d096fa553dab96910cb3d3b/autobahn/websocket/protocol.py#L832\r\nWe have\r\n'WebSocket closing handshake timeout (peer did not finish the opening handshake in time)'\r\n\r\nSurely this should read:\r\n'WebSocket closing handshake timeout (peer did not finish the closing handshake in time)'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1309", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1309/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1309/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1309/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1309", "id": 562276477, "node_id": "MDU6SXNzdWU1NjIyNzY0Nzc=", "number": 1309, "title": "SSL error: sslv3 alert certificate unknown", "user": {"login": "andytriboletti", "id": 78852, "node_id": "MDQ6VXNlcjc4ODUy", "avatar_url": "https://avatars2.githubusercontent.com/u/78852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andytriboletti", "html_url": "https://github.com/andytriboletti", "followers_url": "https://api.github.com/users/andytriboletti/followers", "following_url": "https://api.github.com/users/andytriboletti/following{/other_user}", "gists_url": "https://api.github.com/users/andytriboletti/gists{/gist_id}", "starred_url": "https://api.github.com/users/andytriboletti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andytriboletti/subscriptions", "organizations_url": "https://api.github.com/users/andytriboletti/orgs", "repos_url": "https://api.github.com/users/andytriboletti/repos", "events_url": "https://api.github.com/users/andytriboletti/events{/privacy}", "received_events_url": "https://api.github.com/users/andytriboletti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-10T01:20:23Z", "updated_at": "2020-02-10T17:04:06Z", "closed_at": "2020-02-10T17:04:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was wondering if you could shed any light on this query:\r\n\r\nhttps://community.letsencrypt.org/t/ssl-error-sslv3-alert-certificate-unknown-in-ssl3-read-bytes-with-autobahn-python-twisted-on-ubuntu/112756\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1306", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1306/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1306/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1306/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1306", "id": 559861519, "node_id": "MDU6SXNzdWU1NTk4NjE1MTk=", "number": 1306, "title": "CI: ImportError: cannot import name 'AsyncGeneratorType", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413924033, "node_id": "MDU6TGFiZWw0MTM5MjQwMzM=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/CI-CD", "name": "CI-CD", "color": "d297fc", "default": false, "description": ""}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-02-04T17:14:01Z", "updated_at": "2020-02-04T18:03:18Z", "closed_at": "2020-02-04T18:03:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "see eg https://travis-ci.org/crossbario/autobahn-python/jobs/646036129\r\n\r\n```\r\npython/.tox/coverage/bin/python\r\n\r\ncachedir: .tox/coverage/.pytest_cache\r\n\r\nrootdir: /home/travis/build/crossbario/autobahn-python, inifile: setup.cfg\r\n\r\nplugins: asyncio-0.10.0, twisted-1.12\r\n\r\ncollected 172 items / 7 errors / 165 selected                                  \r\n\r\n==================================== ERRORS ====================================\r\n\r\n_ ERROR collecting .tox/coverage/lib/python3.5/site-packages/autobahn/asyncio/test/test_asyncio_rawsocket.py _\r\n\r\nImportError while importing test module '/home/travis/build/crossbario/autobahn-python/.tox/coverage/lib/python3.5/site-packages/autobahn/asyncio/test/test_asyncio_rawsocket.py'.\r\n\r\nHint: make sure your test modules/packages have valid Python names.\r\n\r\nTraceback:\r\n\r\n.tox/coverage/lib/python3.5/site-packages/autobahn/asyncio/test/test_asyncio_rawsocket.py:6: in <module>\r\n\r\n    from autobahn.asyncio.rawsocket import PrefixProtocol, RawSocketClientProtocol, RawSocketServerProtocol, \\\r\n\r\n.tox/coverage/lib/python3.5/site-packages/autobahn/asyncio/__init__.py:32: in <module>\r\n\r\n    from autobahn.asyncio.websocket import \\\r\n\r\n.tox/coverage/lib/python3.5/site-packages/autobahn/asyncio/websocket.py:33: in <module>\r\n\r\n    txaio.use_asyncio()\r\n\r\n.tox/coverage/lib/python3.5/site-packages/txaio/__init__.py:124: in use_asyncio\r\n\r\n    from txaio import aio\r\n\r\n.tox/coverage/lib/python3.5/site-packages/txaio/aio.py:30: in <module>\r\n\r\n    from types import AsyncGeneratorType\r\n\r\nE   ImportError: cannot import name 'AsyncGeneratorType'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1297", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1297/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1297/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1297/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1297", "id": 551771047, "node_id": "MDU6SXNzdWU1NTE3NzEwNDc=", "number": 1297, "title": "XBR: SimpleSeller lacks default KeySeries class", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 1329881886, "node_id": "MDU6TGFiZWwxMzI5ODgxODg2", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/XBR", "name": "XBR", "color": "ff6600", "default": false, "description": ""}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-18T13:41:55Z", "updated_at": "2020-01-18T14:45:56Z", "closed_at": "2020-01-18T14:45:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "not sure where/when we lost that one .. workaround:\r\n\r\n```\r\nseller = SimpleSeller(self._market_maker_adr, privkey, provider_id=username_sha3)\r\nseller.KeySeries = KeySeries\r\n```\r\n\r\nthe error triggered looks like:\r\n\r\n```\r\nroad_vehicle_1            | 2020-01-18T13:31:00+0000 RoadVehicle.onUserError(): \"While firing onJoin\"\r\nroad_vehicle_1            | Traceback (most recent call last):\r\nroad_vehicle_1            |   File \"/usr/local/lib/python3.8/site-packages/autobahn/wamp/protocol.py\", line 557, in <lambda>\r\nroad_vehicle_1            |     lambda _: txaio.as_future(self.onJoin, details),\r\nroad_vehicle_1            |   File \"/usr/local/lib/python3.8/site-packages/txaio/tx.py\", line 428, in as_future\r\nroad_vehicle_1            |     return ensureDeferred(fun(*args, **kwargs))\r\nroad_vehicle_1            |   File \"/usr/local/lib/python3.8/site-packages/twisted/internet/defer.py\", line 911, in ensureDeferred\r\nroad_vehicle_1            |     return _cancellableInlineCallbacks(coro)\r\nroad_vehicle_1            |   File \"/usr/local/lib/python3.8/site-packages/twisted/internet/defer.py\", line 1529, in _cancellableInlineCallbacks\r\nroad_vehicle_1            |     _inlineCallbacks(None, g, status)\r\nroad_vehicle_1            | --- <exception caught here> ---\r\nroad_vehicle_1            |   File \"/usr/local/lib/python3.8/site-packages/twisted/internet/defer.py\", line 1418, in _inlineCallbacks\r\nroad_vehicle_1            |     result = g.send(result)\r\nroad_vehicle_1            |   File \"/app/client.py\", line 71, in onJoin\r\nroad_vehicle_1            |     await self._initialize(details.authid, userdata, vehicledata, city, run_id)\r\nroad_vehicle_1            |   File \"/app/client.py\", line 131, in _initialize\r\nroad_vehicle_1            |     self._sellers[username] = make_seller(username)\r\nroad_vehicle_1            |   File \"/app/client.py\", line 125, in make_seller\r\nroad_vehicle_1            |     seller.add(api_id.bytes, prefix, price, interval, categories)\r\nroad_vehicle_1            |   File \"/usr/local/lib/python3.8/site-packages/autobahn/xbr/_seller.py\", line 343, in add\r\nroad_vehicle_1            |     key_series = self.KeySeries(api_id, price, interval, on_rotate)\r\nroad_vehicle_1            | builtins.TypeError: 'NoneType' object is not callable\r\nroad_vehicle_1            | \r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1293", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1293/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1293/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1293/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1293", "id": 549576718, "node_id": "MDU6SXNzdWU1NDk1NzY3MTg=", "number": 1293, "title": "Use python_requires to prevent installation on unsupported Python versions", "user": {"login": "ThreePinkApples", "id": 4201981, "node_id": "MDQ6VXNlcjQyMDE5ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4201981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThreePinkApples", "html_url": "https://github.com/ThreePinkApples", "followers_url": "https://api.github.com/users/ThreePinkApples/followers", "following_url": "https://api.github.com/users/ThreePinkApples/following{/other_user}", "gists_url": "https://api.github.com/users/ThreePinkApples/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThreePinkApples/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThreePinkApples/subscriptions", "organizations_url": "https://api.github.com/users/ThreePinkApples/orgs", "repos_url": "https://api.github.com/users/ThreePinkApples/repos", "events_url": "https://api.github.com/users/ThreePinkApples/events{/privacy}", "received_events_url": "https://api.github.com/users/ThreePinkApples/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413924033, "node_id": "MDU6TGFiZWw0MTM5MjQwMzM=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/CI-CD", "name": "CI-CD", "color": "d297fc", "default": false, "description": ""}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-14T13:43:42Z", "updated_at": "2020-01-14T15:34:52Z", "closed_at": "2020-01-14T15:30:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the current newest release, 20.1.1, support for Python 2 broke (as expected). But a Python 2 environment will still install 20.1.1 unless it is prevented through requirements.\r\nA better, and global, solution is to set `python_requires` in setup.py, so that pip and other package managers won't try to install unsupported versions, but will pick the older one (19.11.2) that does support Python 2\r\n\r\nhttps://packaging.python.org/guides/distributing-packages-using-setuptools/#python-requires\r\n\r\nAlthough for this to take proper effect you'd need to republish 20.1.1 (or delete it) with this change", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1288", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1288/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1288/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1288/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1288", "id": 548478979, "node_id": "MDU6SXNzdWU1NDg0Nzg5Nzk=", "number": 1288, "title": "Enable python 3.8 CI", "user": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413924033, "node_id": "MDU6TGFiZWw0MTM5MjQwMzM=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/CI-CD", "name": "CI-CD", "color": "d297fc", "default": false, "description": ""}, {"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}, {"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-01-11T20:53:19Z", "updated_at": "2020-01-14T09:51:22Z", "closed_at": "2020-01-14T09:51:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We need to update `.travis.yaml` to add python 3.8 support", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1282", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1282/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1282/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1282/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1282", "id": 546226401, "node_id": "MDU6SXNzdWU1NDYyMjY0MDE=", "number": 1282, "title": "Code and docs cleanups for dropping python <3.5 support", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 256639374, "node_id": "MDU6TGFiZWwyNTY2MzkzNzQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/Python%202", "name": "Python 2", "color": "bfe5bf", "default": false, "description": null}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/crossbario/autobahn-python/milestones/6", "html_url": "https://github.com/crossbario/autobahn-python/milestone/6", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/milestones/6/labels", "id": 4981703, "node_id": "MDk6TWlsZXN0b25lNDk4MTcwMw==", "number": 6, "title": "v20.2.1", "description": "beginning from this release, we'll only support python 3.5+ any longer. that is, if you are stuck on python 2, the last autobahn version supported on this is v19.11.1\r\n\r\nplease see the discussion also here https://forum.crossbar.io/t/call-for-comments-retire-python-2-support/1660", "creator": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2020-01-07T11:12:08Z", "updated_at": "2020-01-14T07:33:02Z", "due_on": "2020-02-01T08:00:00Z", "closed_at": null}, "comments": 13, "created_at": "2020-01-07T11:15:19Z", "updated_at": "2020-01-14T07:39:36Z", "closed_at": "2020-01-14T07:33:02Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Moving forward, we would like to support python 3.5 as the minimal version and drop python 2. The issue here is for removing CI steps, cleaning up code (remove things that can be systematically cleaned up) and adjust the docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1279", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1279/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1279/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1279/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1279", "id": 544008559, "node_id": "MDU6SXNzdWU1NDQwMDg1NTk=", "number": 1279, "title": "Cannot set authrole for anonymous authentication", "user": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-30T20:54:17Z", "updated_at": "2019-12-31T19:33:09Z", "closed_at": "2019-12-31T19:33:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I need to connect to crossbar from a python based component, I have changed the name of the default role from `anonymous` to `testing` and changed my code accordingly, but it seems I always get `wamp.error.no_such_role:`.\r\n\r\nHere is crossbar config\r\n```yaml\r\nversion: 2\r\ncontroller: {}\r\nworkers:\r\n- type: router\r\n  realms:\r\n  - name: realm1\r\n    roles:\r\n    - name: testing\r\n      permissions:\r\n      - uri: ''\r\n        match: prefix\r\n        allow:\r\n          call: true\r\n          register: true\r\n          publish: true\r\n          subscribe: true\r\n        disclose:\r\n          caller: false\r\n          publisher: false\r\n        cache: true\r\n  transports:\r\n  - type: websocket\r\n    endpoint:\r\n      type: tcp\r\n      port: 8080\r\n```\r\nAnd the following is the client code\r\n```python\r\nfrom autobahn.wamp.auth import AuthAnonymous\r\nfrom autobahn.asyncio.component import Component, run\r\nfrom autobahn.asyncio.wamp import Session\r\n\r\nif __name__ == '__main__':\r\n    comp = Component(transports=\"ws://localhost:8080/ws\",\r\n                     realm=\"realm1\",\r\n                     authentication={\"anonymous\": AuthAnonymous(authrole='testing')})\r\n\r\n    @comp.on_join\r\n    async def joined(session: Session, _details):\r\n        print(\"We are connected...\")\r\n\r\n\r\n    run(comp)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1275", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1275/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1275/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1275/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1275", "id": 541123811, "node_id": "MDU6SXNzdWU1NDExMjM4MTE=", "number": 1275, "title": "Disable tests_rng on KVM", "user": {"login": "bmwiedemann", "id": 637990, "node_id": "MDQ6VXNlcjYzNzk5MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/637990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmwiedemann", "html_url": "https://github.com/bmwiedemann", "followers_url": "https://api.github.com/users/bmwiedemann/followers", "following_url": "https://api.github.com/users/bmwiedemann/following{/other_user}", "gists_url": "https://api.github.com/users/bmwiedemann/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmwiedemann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmwiedemann/subscriptions", "organizations_url": "https://api.github.com/users/bmwiedemann/orgs", "repos_url": "https://api.github.com/users/bmwiedemann/repos", "events_url": "https://api.github.com/users/bmwiedemann/events{/privacy}", "received_events_url": "https://api.github.com/users/bmwiedemann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413924033, "node_id": "MDU6TGFiZWw0MTM5MjQwMzM=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/CI-CD", "name": "CI-CD", "color": "d297fc", "default": false, "description": ""}, {"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}, {"id": 103092456, "node_id": "MDU6TGFiZWwxMDMwOTI0NTY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/test", "name": "test", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-12-20T17:57:07Z", "updated_at": "2020-01-14T10:22:22Z", "closed_at": "2020-01-14T10:22:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "While working on reproducible builds for openSUSE, I found that\r\nbuilding our python-autobahn package in a 1-core VM with\r\n```bash\r\nosc checkout openSUSE:Factory/python-autobahn && cd $_\r\nosc build --noservice -j1 --vm-type=kvm\r\n```\r\n\r\ngets stuck forever in `test_rng.py`\r\n\r\n```\r\n[   73s] autobahn/rawsocket/test/test_rawsocket_url.py::TestParseWsUrl::test_parse_url16 PASSED [  8%]\r\n[   73s] autobahn/rawsocket/test/test_rawsocket_url.py::TestParseWsUrl::test_parse_url17 PASSED [  8%]\r\n[   73s] autobahn/rawsocket/test/test_rawsocket_url.py::TestParseWsUrl::test_parse_url18 PASSED [  8%]\r\n[  238s] autobahn/test/test_rng.py::TestEntropy::test_depleting\r\n[  238s]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1272", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1272/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1272/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1272/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1272", "id": 526480005, "node_id": "MDU6SXNzdWU1MjY0ODAwMDU=", "number": 1272, "title": "Check if packet arrived at subscriber", "user": {"login": "SanjayThomas", "id": 36643314, "node_id": "MDQ6VXNlcjM2NjQzMzE0", "avatar_url": "https://avatars3.githubusercontent.com/u/36643314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SanjayThomas", "html_url": "https://github.com/SanjayThomas", "followers_url": "https://api.github.com/users/SanjayThomas/followers", "following_url": "https://api.github.com/users/SanjayThomas/following{/other_user}", "gists_url": "https://api.github.com/users/SanjayThomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/SanjayThomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SanjayThomas/subscriptions", "organizations_url": "https://api.github.com/users/SanjayThomas/orgs", "repos_url": "https://api.github.com/users/SanjayThomas/repos", "events_url": "https://api.github.com/users/SanjayThomas/events{/privacy}", "received_events_url": "https://api.github.com/users/SanjayThomas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-21T09:49:50Z", "updated_at": "2019-11-21T12:10:24Z", "closed_at": "2019-11-21T12:10:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI seem to have encountered a rare case where a message I sent over a publish subscribe channel was not detected at a subscriber. Is this even possible? If yes, is there any way I can have the publisher detect this so that I can publish the message again?\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1269", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1269/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1269/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1269/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1269", "id": 523561024, "node_id": "MDU6SXNzdWU1MjM1NjEwMjQ=", "number": 1269, "title": "Test failures with pytest 5.2.3", "user": {"login": "yan12125", "id": 1937689, "node_id": "MDQ6VXNlcjE5Mzc2ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1937689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yan12125", "html_url": "https://github.com/yan12125", "followers_url": "https://api.github.com/users/yan12125/followers", "following_url": "https://api.github.com/users/yan12125/following{/other_user}", "gists_url": "https://api.github.com/users/yan12125/gists{/gist_id}", "starred_url": "https://api.github.com/users/yan12125/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yan12125/subscriptions", "organizations_url": "https://api.github.com/users/yan12125/orgs", "repos_url": "https://api.github.com/users/yan12125/repos", "events_url": "https://api.github.com/users/yan12125/events{/privacy}", "received_events_url": "https://api.github.com/users/yan12125/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-15T16:15:46Z", "updated_at": "2019-11-16T02:30:06Z", "closed_at": "2019-11-16T02:30:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm testing compatibility between autobahn and Python 3.8. First I changed `py37` to `py38` in tox.ini, and found that asyncio tests failed:\r\n```\r\n$ tox -e py38-asyncio\r\n(...installing dependencies, omitted...)\r\n====================================================== test session starts ======================================================\r\nplatform linux -- Python 3.8.0, pytest-5.2.3, py-1.8.0, pluggy-0.13.0 -- /home/yen/tmp/autobahn-python/.tox/py38-asyncio/bin/python\r\ncachedir: .tox/py38-asyncio/.pytest_cache\r\nrootdir: /home/yen/tmp/autobahn-python, inifile: setup.cfg\r\nplugins: asyncio-0.10.0\r\ncollected 200 items / 1 errors / 199 selected                                                                                   \r\n\r\n============================================================ ERRORS =============================================================\r\n__________________ ERROR collecting .tox/py38-asyncio/lib/python3.8/site-packages/autobahn/twisted/__init__.py __________________\r\n.tox/py38-asyncio/lib/python3.8/site-packages/autobahn/twisted/__init__.py:41: in <module>\r\n    from autobahn.twisted.choosereactor import install_reactor\r\n.tox/py38-asyncio/lib/python3.8/site-packages/autobahn/twisted/choosereactor.py:33: in <module>\r\n    txaio.use_twisted()\r\n.tox/py38-asyncio/lib/python3.8/site-packages/txaio/__init__.py:109: in use_twisted\r\n    raise RuntimeError(\"Explicitly using '{}' already\".format(_explicit_framework))\r\nE   RuntimeError: Explicitly using 'asyncio' already\r\n======================================================= warnings summary ========================================================\r\n.tox/py38-asyncio/lib/python3.8/site-packages/flatbuffers/compat.py:19\r\n  /home/yen/tmp/autobahn-python/.tox/py38-asyncio/lib/python3.8/site-packages/flatbuffers/compat.py:19: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses\r\n    import imp\r\n\r\n.tox/py38-asyncio/lib/python3.8/site-packages/twisted/internet/address.py:101\r\n  /home/yen/tmp/autobahn-python/.tox/py38-asyncio/lib/python3.8/site-packages/twisted/internet/address.py:101: DeprecationWarning: The usage of `cmp` is deprecated and will be removed on or after 2021-06-01.  Please use `eq` and `order` instead.\r\n    @attr.s(hash=False, repr=False, cmp=False)\r\n\r\n.tox/py38-asyncio/lib/python3.8/site-packages/pytrie.py:48\r\n  /home/yen/tmp/autobahn-python/.tox/py38-asyncio/lib/python3.8/site-packages/pytrie.py:48: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop working\r\n    from collections import MutableMapping\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n================================================= 3 warnings, 1 error in 0.92s ==================================================\r\nERROR: InvocationError for command /home/yen/tmp/autobahn-python/.tox/py38-asyncio/bin/py.test -v .tox/py38-asyncio/lib/python3.8/site-packages/autobahn (exited with code 2)                                                                                     \r\n____________________________________________________________ summary ____________________________________________________________\r\nERROR:   py38-asyncio: commands failed\r\n```\r\nWith some trials I found that pytest 5.2.3 makes things fail. With the following change\r\n```Diff\r\ndiff --git a/tox.ini b/tox.ini\r\nindex 96db4969..deef5ae5 100644\r\n--- a/tox.ini\r\n+++ b/tox.ini\r\n@@ -22,12 +22,12 @@ deps =\r\n     mock\r\n     unittest2\r\n     coverage\r\n-    pytest\r\n+    pytest<5.2.3\r\n     # pytest<3.3.0\r\n \r\n     ; FIXME: we need py-eth-sig-utils>=0.4.0 (which is not yet released - 2019/10/28)\r\n```\r\nTests are fine on Python 3.8.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1268", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1268/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1268/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1268/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1268", "id": 521817374, "node_id": "MDU6SXNzdWU1MjE4MTczNzQ=", "number": 1268, "title": "trying to use msgpack serializer with crossbar server results in This server only speaks WebSocket subprotocols wamp.2.msgpack.batched, wamp.2.msgpack", "user": {"login": "vaibhav-rbs", "id": 2560355, "node_id": "MDQ6VXNlcjI1NjAzNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2560355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaibhav-rbs", "html_url": "https://github.com/vaibhav-rbs", "followers_url": "https://api.github.com/users/vaibhav-rbs/followers", "following_url": "https://api.github.com/users/vaibhav-rbs/following{/other_user}", "gists_url": "https://api.github.com/users/vaibhav-rbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaibhav-rbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaibhav-rbs/subscriptions", "organizations_url": "https://api.github.com/users/vaibhav-rbs/orgs", "repos_url": "https://api.github.com/users/vaibhav-rbs/repos", "events_url": "https://api.github.com/users/vaibhav-rbs/events{/privacy}", "received_events_url": "https://api.github.com/users/vaibhav-rbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-12T21:36:49Z", "updated_at": "2019-11-13T09:30:42Z", "closed_at": "2019-11-13T09:30:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "config file\r\n```\r\nroot@sl2xbar03:/crossbar/.crossbar$ cat /crossbar/.crossbar/config.json\r\n{\r\n  \"version\": 2,\r\n  \"workers\": [\r\n    {\r\n      \"type\": \"router\",\r\n      \"options\": {\r\n        \"pythonpath\": [\"../components\"]\r\n      },\r\n      \"realms\": [\r\n        {\r\n          \"name\": \"realm1\",\r\n          \"roles\": [\r\n            {\r\n              \"name\": \"system\",\r\n              \"authorizer\": \"com.intusurg.auth.authorize\"\r\n            },\r\n            {\r\n              \"name\": \"user\",\r\n              \"authorizer\": \"com.intusurg.auth.authorize\"\r\n            },\r\n            {\r\n              \"name\": \"service\",\r\n              \"authorizer\": \"com.intusurg.auth.authorize\"\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"transports\": [\r\n        {\r\n          \"type\": \"rawsocket\",\r\n          \"endpoint\": {\r\n            \"type\": \"unix\",\r\n            \"path\": \"/tmp/crossbar-socket\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"web\",\r\n          \"endpoint\": {\r\n            \"type\": \"tcp\",\r\n            \"port\": 8080\r\n          },\r\n          \"paths\": {\r\n            \"status\": {\r\n              \"type\": \"resource\",\r\n              \"classname\": \"health_web_indicator.run\",\r\n              \"extra\": {\r\n                \"DVMT_VERSION\": \"2.0.1\",\r\n                \"HEALTHY_INDICATOR\": \":) DVMT UP\",\r\n                \"UNHEALTHY_INDICATOR\": \":( DVMT DOWN\",\r\n                \"MSSQL_DRIVER\": \"FreeTDS\",\r\n                \"MSSQL_SERVER\": \"sw2sql01.dv.local\",\r\n                \"MSSQL_PORT\": \"1515\",\r\n                \"MSSQL_DATABASE\": \"DVMT22\",\r\n                \"MSSQL_USER\": \"appdbowner\",\r\n                \"MSSQL_PASSWORD\": \"appdbowner1\",\r\n                \"SUPERVISOR_PROCESSES\": [\"surgeon_login\", \"system_config\", \"system_monitor\", \"system_registry\", \"realm_monitor\"],\r\n                \"SUPERVISOR_SERVER_SOCKET\": \"/crossbar/supervisord.sock\"\r\n              }\r\n            },\r\n            \"ws\": {\r\n              \"type\": \"websocket\",\r\n\t      \"serializers\": [\"msgpack\"],\r\n              \"auth\": {\r\n                \"anonymous\": {\r\n                  \"type\": \"dynamic\",\r\n                  \"authenticator\": \"com.intusurg.auth.authenticate\"\r\n                },\r\n                \"ticket\": {\r\n                  \"type\": \"dynamic\",\r\n                  \"authenticator\": \"com.intusurg.auth.authenticate\"\r\n                }\r\n              },\r\n              \"debug\": true,\r\n              \"options\": {\r\n                \"auto_ping_interval\": 0,\r\n                \"auto_ping_timeout\": 60000,\r\n                \"auto_ping_size\": 4,\r\n                \"compression\": {\r\n                  \"deflate\": {\r\n                    \"request_no_context_takeover\": false,\r\n                    \"request_max_window_bits\": 11,\r\n                    \"no_context_takeover\": false,\r\n                    \"max_window_bits\": 11,\r\n                    \"memory_level\": 4\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      \"components\": [\r\n        {\r\n          \"id\": \"auth\",\r\n          \"type\": \"class\",\r\n          \"classname\": \"auth.AuthComponent\",\r\n          \"realm\": \"realm1\",\r\n          \"role\": \"trusted\",\r\n          \"extra\": {\r\n            \"prefix\": \"com.intusurg.auth\",\r\n            \"system_role\": \"system\",\r\n            \"anonymous_role\": \"anonymous\",\r\n            \"mssql\": {\r\n              \"driver\": \"FreeTDS\",\r\n              \"server\": \"*******.dv.local\",\r\n              \"port\": \"1515\",\r\n              \"database\": \"*******\",\r\n              \"uid\": \"********\",\r\n              \"pwd\": \"*******\",\r\n              \"autocommit\": true\r\n            },\r\n            \"heartbeat_rate\": 30.0,\r\n            \"ldap_api_url\": \"http://rfeweb02:80/rssapi/dvmsapi/admin/GetUserLdapGroups/{username}\",\r\n            \"enforce_cert_match\": false,\r\n            \"cert_sub_pattern\": \"[\\\\s_-]\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\n\r\n\r\n```\r\n\r\n```\r\ncrossbar version::\r\nroot@sl2xbar03:/usr/bin$ crossbar version\r\n     __  __  __  __  __  __      __     __\r\n    /  `|__)/  \\/__`/__`|__) /\\ |__)  |/  \\\r\n    \\__,|  \\\\__/.__/.__/|__)/~~\\|  \\. |\\__/\r\n\r\n Crossbar.io        : 0.15.0\r\n   Autobahn         : 17.10.1 (with JSON, MessagePack, CBOR, UBJSON)\r\n   Twisted          : 17.9.0-EPollReactor\r\n   LMDB             : 0.93/lmdb-0.9.18\r\n   Python           : 2.7.13/PyPy-5.9.0\r\n OS                 : Linux-3.10.0-957.1.3.el7.x86_64-x86_64-with-redhat-7.6-Maipo\r\n Machine            : x86_64\r\n```\r\n\r\n```\r\nlogfile::\r\n$ tail -f /crossbar/log/crossbar/node.log\r\n\r\n2019-11-12T21:30:50+0000 [Router      73304] Realm 'realm1' started\r\n2019-11-12T21:30:50+0000 [Controller  73298] Router 'worker-001': realm 'realm-001' (named 'realm1') started\r\n2019-11-12T21:30:50+0000 [Controller  73298] Router 'worker-001': role 'role-001' (named 'system') started on realm 'realm-001'\r\n2019-11-12T21:30:50+0000 [Controller  73298] Router 'worker-001': role 'role-002' (named 'user') started on realm 'realm-001'\r\n2019-11-12T21:30:50+0000 [Controller  73298] Router 'worker-001': role 'role-003' (named 'service') started on realm 'realm-001'\r\n2019-11-12T21:30:50+0000 [Router      73304] started component: auth.AuthComponent id=3563208628255453\r\n2019-11-12T21:30:50+0000 [Router      73304] registration, was_already_registered, is_first_callee\r\n2019-11-12T21:30:50+0000 [Router      73304] (ExactUriObservation(id=8219222981949175, uri=com.intusurg.auth.authenticate, match=exact, ordered=True, extra=<crossbar.router.dealer.RegistrationExtra object at 0x00000000042200c8>, created=2019-11-12T21:30:50.726Z, observers=OrderedSet([<auth.AuthComponent object at 0x0000000004209ef8>])), False, True)\r\n2019-11-12T21:30:50+0000 [Router      73304] registration, was_already_registered, is_first_callee\r\n2019-11-12T21:30:50+0000 [Router      73304] (ExactUriObservation(id=4628899596522194, uri=com.intusurg.auth.authorize, match=exact, ordered=True, extra=<crossbar.router.dealer.RegistrationExtra object at 0x0000000004220138>, created=2019-11-12T21:30:50.728Z, observers=OrderedSet([<auth.AuthComponent object at 0x0000000004209ef8>])), False, True)\r\n2019-11-12T21:30:50+0000 [Controller  73298] Router 'worker-001': component 'auth' started\r\n2019-11-12T21:30:50+0000 [Router      73304] WampRawSocketServerFactory starting on '/tmp/crossbar-socket'\r\n2019-11-12T21:30:50+0000 [Controller  73298] Router 'worker-001': transport 'transport-001' started\r\n2019-11-12T21:30:50+0000 [Router      73304] Site starting on 8080\r\n2019-11-12T21:30:50+0000 [Controller  73298] Router 'worker-001': transport 'transport-002' started\r\n2019-11-12T21:30:50+0000 [Router      73304] failing WebSocket opening handshake ('This server only speaks WebSocket subprotocols wamp.2.msgpack.batched, wamp.2.msgpack')\r\n2019-11-12T21:30:50+0000 [Router      73304] Router realm registered\r\n2019-11-12T21:30:51+0000 [Router      73304] failing WebSocket opening handshake ('This server only speaks WebSocket subprotocols wamp.2.msgpack.batched, wamp.2.msgpack')\r\n2019-11-12T21:30:51+0000 [Router      73304] failing WebSocket opening handshake ('This server only speaks WebSocket subprotocols wamp.2.msgpack.batched, wamp.2.msgpack')\r\n2019-11-12T21:30:51+0000 [Router      73304] failing WebSocket opening handshake ('This server only speaks WebSocket subprotocols wamp.2.msgpack.batched, wamp.2.msgpack')\r\n2019-11-12T21:30:52+0000 [Router      73304] failing WebSocket opening handshake ('This server only speaks WebSocket subprotocols wamp.2.msgpack.batched, wamp.2.msgpack')\r\n2019-11-12T21:30:52+0000 [Router      73304] failing WebSocket opening handshake ('This server only speaks WebSocket subprotocols wamp.2.msgpack.batched, wamp.2.msgpack')\r\n2019-11-12T21:30:53+0000 [Router      73304] failing WebSocket opening handshake ('This server only speaks WebSocket subprotocols wamp.2.msgpack.batched, wamp.2.msgpack')\r\n2019-11-12T21:30:53+0000 [Router      73304] failing WebSocket opening handshake ('This server only speaks WebSocket subprotocols wamp.2.msgpack.batched, wamp.2.msgpack')\r\n2019-11-12T21:30:53+0000 [Router      73304] failing WebSocket opening handshake ('This server only speaks WebSocket subprotocols wamp.2.msgpack.batched, wamp.2.msgpack')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1256", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1256/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1256/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1256/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1256", "id": 505610890, "node_id": "MDU6SXNzdWU1MDU2MTA4OTA=", "number": 1256, "title": "Replace pep8 with pycodestyle", "user": {"login": "opoplawski", "id": 814662, "node_id": "MDQ6VXNlcjgxNDY2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/814662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opoplawski", "html_url": "https://github.com/opoplawski", "followers_url": "https://api.github.com/users/opoplawski/followers", "following_url": "https://api.github.com/users/opoplawski/following{/other_user}", "gists_url": "https://api.github.com/users/opoplawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/opoplawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opoplawski/subscriptions", "organizations_url": "https://api.github.com/users/opoplawski/orgs", "repos_url": "https://api.github.com/users/opoplawski/repos", "events_url": "https://api.github.com/users/opoplawski/events{/privacy}", "received_events_url": "https://api.github.com/users/opoplawski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-11T03:05:49Z", "updated_at": "2019-10-11T07:29:42Z", "closed_at": "2019-10-11T07:29:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "pep8 has been deprecated and has been dropped from Fedora.  Please replace with pycodestyle.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1249", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1249/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1249/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1249/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1249", "id": 498786091, "node_id": "MDU6SXNzdWU0OTg3ODYwOTE=", "number": 1249, "title": "python 2.7 issues", "user": {"login": "0-wiz-0", "id": 2221844, "node_id": "MDQ6VXNlcjIyMjE4NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2221844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0-wiz-0", "html_url": "https://github.com/0-wiz-0", "followers_url": "https://api.github.com/users/0-wiz-0/followers", "following_url": "https://api.github.com/users/0-wiz-0/following{/other_user}", "gists_url": "https://api.github.com/users/0-wiz-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/0-wiz-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0-wiz-0/subscriptions", "organizations_url": "https://api.github.com/users/0-wiz-0/orgs", "repos_url": "https://api.github.com/users/0-wiz-0/repos", "events_url": "https://api.github.com/users/0-wiz-0/events{/privacy}", "received_events_url": "https://api.github.com/users/0-wiz-0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-26T10:01:17Z", "updated_at": "2019-09-26T10:25:18Z", "closed_at": "2019-09-26T10:23:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The homepage still has \"compatible with Python 2.7\" but some of the files are not:\r\n\r\n````\r\nbyte-compiling /scratch/www/py-autobahn/work/.destdir/usr/pkg/lib/python2.7/site-packages/autobahn/asyncio/xbr.py to xbr.pyc\r\n  File \"/usr/pkg/lib/python2.7/site-packages/autobahn/asyncio/xbr.py\", line 57\r\n    async def start(self):\r\n            ^\r\nSyntaxError: invalid syntax\r\n\r\nbyte-compiling /scratch/www/py-autobahn/work/.destdir/usr/pkg/lib/python2.7/site-packages/autobahn/twisted/xbr.py to xbr.pyc\r\n  File \"/usr/pkg/lib/python2.7/site-packages/autobahn/twisted/xbr.py\", line 58\r\n    async def start(self):\r\n            ^\r\nSyntaxError: invalid syntax\r\n\r\nbyte-compiling /scratch/www/py-autobahn/work/.destdir/usr/pkg/lib/python2.7/site-packages/autobahn/xbr/_blockchain.py to _blockchain.pyc\r\n  File \"/usr/pkg/lib/python2.7/site-packages/autobahn/xbr/_blockchain.py\", line 97\r\n    async def get_market_status(self, market_id):\r\n            ^\r\nSyntaxError: invalid syntax\r\n\r\nbyte-compiling /scratch/www/py-autobahn/work/.destdir/usr/pkg/lib/python2.7/site-packages/autobahn/xbr/_buyer.py to _buyer.pyc\r\n  File \"/usr/pkg/lib/python2.7/site-packages/autobahn/xbr/_buyer.py\", line 149\r\n    async def start(self, session, consumer_id):\r\n            ^\r\nSyntaxError: invalid syntax\r\n\r\nbyte-compiling /scratch/www/py-autobahn/work/.destdir/usr/pkg/lib/python2.7/site-packages/autobahn/xbr/_interfaces.py to _interfaces.pyc\r\n  File \"/usr/pkg/lib/python2.7/site-packages/autobahn/xbr/_interfaces.py\", line 141\r\n    async def start(self, session):\r\n        ^\r\nSyntaxError: invalid syntax\r\n\r\nbyte-compiling /scratch/www/py-autobahn/work/.destdir/usr/pkg/lib/python2.7/site-packages/autobahn/xbr/_seller.py to _seller.pyc\r\n  File \"/usr/pkg/lib/python2.7/site-packages/autobahn/xbr/_seller.py\", line 144\r\n    async def _rotate(self):\r\n            ^\r\nSyntaxError: invalid syntax\r\n\r\nbyte-compiling /scratch/www/py-autobahn/work/.destdir/usr/pkg/lib/python2.7/site-packages/twisted/plugins/autobahn_twistd.py to autobahn_twistd.pyc\r\nwriting byte-compilation script '/tmp/tmpDNUOdB.py'\r\n/usr/pkg/bin/python2.7 -O /tmp/tmpDNUOdB.py\r\n  File \"/usr/pkg/lib/python2.7/site-packages/autobahn/asyncio/xbr.py\", line 57\r\n    async def start(self):\r\n            ^\r\nSyntaxError: invalid syntax\r\n\r\n  File \"/usr/pkg/lib/python2.7/site-packages/autobahn/twisted/xbr.py\", line 58\r\n    async def start(self):\r\n            ^\r\nSyntaxError: invalid syntax\r\n\r\n  File \"/usr/pkg/lib/python2.7/site-packages/autobahn/xbr/_blockchain.py\", line 97\r\n    async def get_market_status(self, market_id):\r\n            ^\r\nSyntaxError: invalid syntax\r\n\r\n  File \"/usr/pkg/lib/python2.7/site-packages/autobahn/xbr/_buyer.py\", line 149\r\n    async def start(self, session, consumer_id):\r\n            ^\r\nSyntaxError: invalid syntax\r\n\r\n  File \"/usr/pkg/lib/python2.7/site-packages/autobahn/xbr/_interfaces.py\", line 141\r\n    async def start(self, session):\r\n        ^\r\nSyntaxError: invalid syntax\r\n\r\n  File \"/usr/pkg/lib/python2.7/site-packages/autobahn/xbr/_seller.py\", line 144\r\n    async def _rotate(self):\r\n            ^\r\nSyntaxError: invalid syntax\r\n\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1244", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1244/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1244/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1244/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1244", "id": 492712226, "node_id": "MDU6SXNzdWU0OTI3MTIyMjY=", "number": 1244, "title": "Message pack breaks RPC's without return", "user": {"login": "dionytadema", "id": 2854243, "node_id": "MDQ6VXNlcjI4NTQyNDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2854243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dionytadema", "html_url": "https://github.com/dionytadema", "followers_url": "https://api.github.com/users/dionytadema/followers", "following_url": "https://api.github.com/users/dionytadema/following{/other_user}", "gists_url": "https://api.github.com/users/dionytadema/gists{/gist_id}", "starred_url": "https://api.github.com/users/dionytadema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dionytadema/subscriptions", "organizations_url": "https://api.github.com/users/dionytadema/orgs", "repos_url": "https://api.github.com/users/dionytadema/repos", "events_url": "https://api.github.com/users/dionytadema/events{/privacy}", "received_events_url": "https://api.github.com/users/dionytadema/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-12T10:10:54Z", "updated_at": "2019-09-18T17:05:39Z", "closed_at": "2019-09-12T14:20:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "using the messagepack serialization there is no way to have an rpc not return anything, see the example, this will throw an error `Potentially unhandled rejection [1] Error: undefined is not encodable in msgpack!`\r\n\r\nExpected behavior would be to produce a RESULT without args and kwargs\r\n\r\n```\r\nvar connection = new autobahn.Connection({\r\n   url: 'ws://127.0.0.1:8080/ws',\r\n   realm: 'crossbardemo',\r\n   protocols: ['wamp.2.msgpack']\r\n});\r\nconnection.onopen = function (session) {\r\n\r\n   function ping() {}\r\n\r\n   session.register('ping', ping).then(\r\n      function (registration) {\r\n         session.call('ping',[],{})\r\n      }\r\n   );\r\n};\r\nconnection.open();\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1237", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1237/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1237/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1237/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1237", "id": 483266862, "node_id": "MDU6SXNzdWU0ODMyNjY4NjI=", "number": 1237, "title": "XBR: support asyncio", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 1329881886, "node_id": "MDU6TGFiZWwxMzI5ODgxODg2", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/XBR", "name": "XBR", "color": "ff6600", "default": false, "description": ""}, {"id": 256639266, "node_id": "MDU6TGFiZWwyNTY2MzkyNjY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/asyncio", "name": "asyncio", "color": "d4c5f9", "default": false, "description": null}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-08-21T08:14:21Z", "updated_at": "2019-09-15T09:00:12Z", "closed_at": "2019-09-15T09:00:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "currently, the xbr bits of abpy only run on twisted. it's straight forward to support asyncio .. just some small changes needed. eg\r\n\r\n```\r\nraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/lib/python3.7/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/opt/vehicle-simulation/fleet-simulation/__main__.py\", line 21, in <module>\r\n    from autobahn.xbr import SimpleSeller\r\n  File \"/usr/local/lib/python3.7/dist-packages/autobahn/xbr/__init__.py\", line 85, in <module>\r\n    from autobahn.xbr._blockchain import SimpleBlockchain\r\n  File \"/usr/local/lib/python3.7/dist-packages/autobahn/xbr/_blockchain.py\", line 28, in <module>\r\n    txaio.use_twisted()\r\n  File \"/usr/local/lib/python3.7/dist-packages/txaio/__init__.py\", line 109, in use_twisted\r\n    raise RuntimeError(\"Explicitly using '{}' already\".format(_explicit_framework))\r\nRuntimeError: Explicitly using 'asyncio' already\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1235", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1235/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1235/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1235/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1235", "id": 481966482, "node_id": "MDU6SXNzdWU0ODE5NjY0ODI=", "number": 1235, "title": "Test failures", "user": {"login": "FRidh", "id": 2129135, "node_id": "MDQ6VXNlcjIxMjkxMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2129135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FRidh", "html_url": "https://github.com/FRidh", "followers_url": "https://api.github.com/users/FRidh/followers", "following_url": "https://api.github.com/users/FRidh/following{/other_user}", "gists_url": "https://api.github.com/users/FRidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/FRidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FRidh/subscriptions", "organizations_url": "https://api.github.com/users/FRidh/orgs", "repos_url": "https://api.github.com/users/FRidh/repos", "events_url": "https://api.github.com/users/FRidh/events{/privacy}", "received_events_url": "https://api.github.com/users/FRidh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-18T08:07:23Z", "updated_at": "2019-08-19T07:15:05Z", "closed_at": "2019-08-19T06:28:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.7.4, pytest-5.1.0, py-1.8.0, pluggy-0.12.0\r\nrootdir: /nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1\r\ncollected 250 items\r\n\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/nvx/test/test_utf8validator.py s [  0%]\r\nsss                                                                      [  1%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/rawsocket/test/test_rawsocket_url.py . [  2%]\r\n............................                                             [ 13%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/test/test_rng.py . [ 13%]\r\n.                                                                        [ 14%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/test/test_util.py . [ 14%]\r\n.                                                                        [ 14%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_auth.py . [ 15%]\r\n........sssss                                                            [ 20%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_component.py s [ 20%]\r\ns                                                                        [ 21%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_cryptobox.py s [ 21%]\r\n                                                                         [ 21%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_cryptosign.py . [ 22%]\r\n....                                                                     [ 23%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_exception.py . [ 24%]\r\n.                                                                        [ 24%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_message.py . [ 24%]\r\n..............................................................           [ 49%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_protocol.py . [ 50%]\r\n....................................                                     [ 64%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_protocol_peer.py . [ 64%]\r\n.                                                                        [ 65%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_runner.py . [ 65%]\r\n                                                                         [ 65%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_serializer.py F [ 66%]\r\nFFFF                                                                     [ 67%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_uri_pattern.py . [ 68%]\r\n...............                                                          [ 74%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_user_handler_errors.py F [ 74%]\r\nFFFFFFFFFFFFFFFFF                                                        [ 81%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_websocket.py . [ 81%]\r\n                                                                         [ 81%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/websocket/test/test_protocol.py . [ 82%]\r\n.........                                                                [ 85%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/websocket/test/test_websocket.py . [ 86%]\r\n......                                                                   [ 88%]\r\n../../nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/websocket/test/test_websocket_url.py . [ 88%]\r\n............................                                             [100%]\r\n\r\n=================================== FAILURES ===================================\r\n_____________________ TestFlatBuffersSerializer.test_basic _____________________\r\n\r\nself = <autobahn.wamp.test.test_serializer.TestFlatBuffersSerializer testMethod=test_basic>\r\n\r\n    def test_basic(self):\r\n        messages = [\r\n            message.Event(123456,\r\n                          789123,\r\n                          args=[1, 2, 3],\r\n                          kwargs={u'foo': 23, u'bar': u'hello'},\r\n                          publisher=666,\r\n                          retained=True),\r\n            message.Publish(123456,\r\n                            'com.example.topic1',\r\n                            args=[1, 2, 3],\r\n                            kwargs={u'foo': 23, u'bar': u'hello'},\r\n                            retain=True)\r\n        ]\r\n\r\n>       ser = serializer.FlatBuffersSerializer()\r\nE       AttributeError: module 'autobahn.wamp.serializer' has no attribute 'FlatBuffersSerializer'\r\n\r\n/nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_serializer.py:166: AttributeError\r\n________________________ TestSerializer.test_cache_msg _________________________\r\n\r\nself = <autobahn.wamp.test.test_serializer.TestSerializer testMethod=test_cache_msg>\r\n\r\n    def setUp(self):\r\n        self._test_messages = generate_test_messages() + generate_test_messages_binary()\r\n>       self._test_serializers = create_serializers()\r\n\r\n/nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_serializer.py:191:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    def create_serializers():\r\n        _serializers = []\r\n\r\n        _serializers.append(serializer.JsonSerializer())\r\n        _serializers.append(serializer.JsonSerializer(batched=True))\r\n\r\n>       _serializers.append(serializer.MsgPackSerializer())\r\nE       AttributeError: module 'autobahn.wamp.serializer' has no attribute 'MsgPackSerializer'\r\n\r\n/nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_serializer.py:129: AttributeError\r\n______________________ TestSerializer.test_crosstrip_msg _______________________\r\n\r\nself = <autobahn.wamp.test.test_serializer.TestSerializer testMethod=test_crosstrip_msg>\r\n\r\n    def setUp(self):\r\n        self._test_messages = generate_test_messages() + generate_test_messages_binary()\r\n>       self._test_serializers = create_serializers()\r\n\r\n/nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_serializer.py:191:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    def create_serializers():\r\n        _serializers = []\r\n\r\n        _serializers.append(serializer.JsonSerializer())\r\n        _serializers.append(serializer.JsonSerializer(batched=True))\r\n\r\n>       _serializers.append(serializer.MsgPackSerializer())\r\nE       AttributeError: module 'autobahn.wamp.serializer' has no attribute 'MsgPackSerializer'\r\n\r\n/nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_serializer.py:129: AttributeError\r\n______________________ TestSerializer.test_deep_equal_msg ______________________\r\n\r\nself = <autobahn.wamp.test.test_serializer.TestSerializer testMethod=test_deep_equal_msg>\r\n\r\n    def setUp(self):\r\n        self._test_messages = generate_test_messages() + generate_test_messages_binary()\r\n>       self._test_serializers = create_serializers()\r\n\r\n/nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_serializer.py:191:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    def create_serializers():\r\n        _serializers = []\r\n\r\n        _serializers.append(serializer.JsonSerializer())\r\n        _serializers.append(serializer.JsonSerializer(batched=True))\r\n\r\n>       _serializers.append(serializer.MsgPackSerializer())\r\nE       AttributeError: module 'autobahn.wamp.serializer' has no attribute 'MsgPackSerializer'\r\n\r\n/nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_serializer.py:129: AttributeError\r\n______________________ TestSerializer.test_roundtrip_msg _______________________\r\n\r\nself = <autobahn.wamp.test.test_serializer.TestSerializer testMethod=test_roundtrip_msg>\r\n\r\n    def setUp(self):\r\n        self._test_messages = generate_test_messages() + generate_test_messages_binary()\r\n>       self._test_serializers = create_serializers()\r\n\r\n/nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_serializer.py:191:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n    def create_serializers():\r\n        _serializers = []\r\n\r\n        _serializers.append(serializer.JsonSerializer())\r\n        _serializers.append(serializer.JsonSerializer(batched=True))\r\n\r\n>       _serializers.append(serializer.MsgPackSerializer())\r\nE       AttributeError: module 'autobahn.wamp.serializer' has no attribute 'MsgPackSerializer'\r\n\r\n/nix/store/b5cca0clssafdvg4jp5vraffvjcd67i8-python3.7-autobahn-19.8.1/lib/python3.7/site-packages/autobahn/wamp/test/test_serializer.py:129: AttributeError\r\n_____________________ TestSessionCallbacks.test_no_session _____________________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_no_session>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_no_session>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_no_session>\r\nresult = <TestCaseFunction test_no_session>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n____________________ TestSessionCallbacks.test_on_challenge ____________________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_challenge>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_on_challenge>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_challenge>\r\nresult = <TestCaseFunction test_on_challenge>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n_______________ TestSessionCallbacks.test_on_challenge_deferred ________________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_challenge_deferred>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_on_challenge_deferred>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_challenge_deferred>\r\nresult = <TestCaseFunction test_on_challenge_deferred>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n_____________________ TestSessionCallbacks.test_on_connect _____________________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_connect>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_on_connect>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_connect>\r\nresult = <TestCaseFunction test_on_connect>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n________________ TestSessionCallbacks.test_on_connect_deferred _________________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_connect_deferred>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_on_connect_deferred>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_connect_deferred>\r\nresult = <TestCaseFunction test_on_connect_deferred>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n___________________ TestSessionCallbacks.test_on_disconnect ____________________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_disconnect>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_on_disconnect>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_disconnect>\r\nresult = <TestCaseFunction test_on_disconnect>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n_______________ TestSessionCallbacks.test_on_disconnect_deferred _______________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_disconnect_deferred>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_on_disconnect_deferred>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_disconnect_deferred>\r\nresult = <TestCaseFunction test_on_disconnect_deferred>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n______________ TestSessionCallbacks.test_on_disconnect_via_close _______________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_disconnect_via_close>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_on_disconnect_via_close>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_disconnect_via_close>\r\nresult = <TestCaseFunction test_on_disconnect_via_close>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n__________ TestSessionCallbacks.test_on_disconnect_via_close_deferred __________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_disconnect_via_close_deferred>\r\nargs = ()\r\nkwargs = {'result': <TestCaseFunction test_on_disconnect_via_close_deferred>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_disconnect_via_close_deferred>\r\nresult = <TestCaseFunction test_on_disconnect_via_close_deferred>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n_____________ TestSessionCallbacks.test_on_disconnect_with_session _____________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_disconnect_with_session>\r\nargs = ()\r\nkwargs = {'result': <TestCaseFunction test_on_disconnect_with_session>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_disconnect_with_session>\r\nresult = <TestCaseFunction test_on_disconnect_with_session>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n________ TestSessionCallbacks.test_on_disconnect_with_session_deferred _________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_disconnect_with_session_deferred>\r\nargs = ()\r\nkwargs = {'result': <TestCaseFunction test_on_disconnect_with_session_deferred>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_disconnect_with_session_deferred>\r\nresult = <TestCaseFunction test_on_disconnect_with_session_deferred>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n______________________ TestSessionCallbacks.test_on_join _______________________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_join>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_on_join>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_join>\r\nresult = <TestCaseFunction test_on_join>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n__________________ TestSessionCallbacks.test_on_join_deferred __________________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_join_deferred>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_on_join_deferred>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_join_deferred>\r\nresult = <TestCaseFunction test_on_join_deferred>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n______________________ TestSessionCallbacks.test_on_leave ______________________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_leave>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_on_leave>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_leave>\r\nresult = <TestCaseFunction test_on_leave>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n____________ TestSessionCallbacks.test_on_leave_after_bad_challenge ____________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_leave_after_bad_challenge>\r\nargs = ()\r\nkwargs = {'result': <TestCaseFunction test_on_leave_after_bad_challenge>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_leave_after_bad_challenge>\r\nresult = <TestCaseFunction test_on_leave_after_bad_challenge>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n_________________ TestSessionCallbacks.test_on_leave_deferred __________________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_leave_deferred>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_on_leave_deferred>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_leave_deferred>\r\nresult = <TestCaseFunction test_on_leave_deferred>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n_______________ TestSessionCallbacks.test_on_leave_valid_session _______________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_leave_valid_session>\r\nargs = (), kwargs = {'result': <TestCaseFunction test_on_leave_valid_session>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_leave_valid_session>\r\nresult = <TestCaseFunction test_on_leave_valid_session>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n__________ TestSessionCallbacks.test_on_leave_valid_session_deferred ___________\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_leave_valid_session_deferred>\r\nargs = ()\r\nkwargs = {'result': <TestCaseFunction test_on_leave_valid_session_deferred>}\r\n\r\n    def __call__(self, *args, **kwargs):\r\n>       return self.run(*args, **kwargs)\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_asynctest.py:119:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <autobahn.wamp.test.test_user_handler_errors.TestSessionCallbacks testMethod=test_on_leave_valid_session_deferred>\r\nresult = <TestCaseFunction test_on_leave_valid_session_deferred>\r\n\r\n    def run(self, result):\r\n        \"\"\"\r\n        Run the test case, storing the results in C{result}.\r\n\r\n        First runs C{setUp} on self, then runs the test method (defined in the\r\n        constructor), then runs C{tearDown}.  As with the standard library\r\n        L{unittest.TestCase}, the return value of these methods is disregarded.\r\n        In particular, returning a L{Deferred<twisted.internet.defer.Deferred>}\r\n        has no special additional consequences.\r\n\r\n        @param result: A L{TestResult} object.\r\n        \"\"\"\r\n        log.msg(\"--> %s <--\" % (self.id()))\r\n        new_result = itrial.IReporter(result, None)\r\n        if new_result is None:\r\n            result = PyUnitResultAdapter(result)\r\n        else:\r\n            result = new_result\r\n        result.startTest(self)\r\n        if self.getSkip(): # don't run test methods that are marked as .skip\r\n>           result.addSkip(self, self.getSkip())\r\nE           TypeError: Skipped expected string as 'msg' parameter, got 'bool' instead.\r\nE           Perhaps you meant to use a mark?\r\n\r\n/nix/store/q3b1j47azd59jw06xid10znlw8987spn-python3.7-Twisted-18.9.0/lib/python3.7/site-packages/twisted/trial/_synctest.py:1033: TypeError\r\n================= 23 failed, 215 passed, 12 skipped in 14.63s ==================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1230", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1230/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1230/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1230/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1230", "id": 474539949, "node_id": "MDU6SXNzdWU0NzQ1Mzk5NDk=", "number": 1230, "title": "Installing autobahn[xbr] fails", "user": {"login": "rndwb", "id": 38242701, "node_id": "MDQ6VXNlcjM4MjQyNzAx", "avatar_url": "https://avatars3.githubusercontent.com/u/38242701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rndwb", "html_url": "https://github.com/rndwb", "followers_url": "https://api.github.com/users/rndwb/followers", "following_url": "https://api.github.com/users/rndwb/following{/other_user}", "gists_url": "https://api.github.com/users/rndwb/gists{/gist_id}", "starred_url": "https://api.github.com/users/rndwb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rndwb/subscriptions", "organizations_url": "https://api.github.com/users/rndwb/orgs", "repos_url": "https://api.github.com/users/rndwb/repos", "events_url": "https://api.github.com/users/rndwb/events{/privacy}", "received_events_url": "https://api.github.com/users/rndwb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-30T11:53:00Z", "updated_at": "2020-01-19T09:42:07Z", "closed_at": "2020-01-19T09:42:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/crossbario/autobahn-python/blob/d89017e9196a6c7bac8c815d5a6037154bb10deb/setup.py#L159 seems not needed. The web3 requirement already depends on eth-abi \r\nFor me the installation failed with `ERROR: web3 4.9.2 has requirement eth-abi<2.0.0,>=1.2.0, but you'll have eth-abi 2.0.0 which is incompatible.` because autobahn already installs the newer version.\r\nFeels like a bug in pip...\r\n\r\nSteps to reproduce:\r\n```\r\n% cat Dockerfile \r\nFROM python:3.7-stretch\r\nRUN pip install git+https://github.com/crossbario/autobahn-python.git@master#egg=autobahn[xbr]\r\n\r\n% docker build -ttest.\r\nSending build context to Docker daemon  2.048kB\r\nStep 1/2 : FROM python:3.7-stretch\r\n ---> 8a74ebe77b0d\r\nStep 2/2 : RUN pip install git+https://github.com/crossbario/autobahn-python.git@master#egg=autobahn[xbr]\r\n ---> Running in 3a75fd7be04d\r\nCollecting autobahn[xbr] from git+https://github.com/crossbario/autobahn-python.git@master#egg=autobahn[xbr]\r\n  Cloning https://github.com/crossbario/autobahn-python.git (to revision master) to /tmp/pip-install-fbywer73/autobahn\r\n  Running command git clone -q https://github.com/crossbario/autobahn-python.git /tmp/pip-install-fbywer73/autobahn\r\nCollecting six>=1.11.0 (from autobahn[xbr])\r\n  Downloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\r\nCollecting txaio>=18.8.1 (from autobahn[xbr])\r\n  Downloading https://files.pythonhosted.org/packages/e9/6d/e1a6f7835cde86728e5bb1f577be9b2d7d273fdb33c286e70b087d418ded/txaio-18.8.1-py2.py3-none-any.whl\r\nCollecting cryptography>=2.7 (from autobahn[xbr])\r\n  Downloading https://files.pythonhosted.org/packages/97/18/c6557f63a6abde34707196fb2cad1c6dc0dbff25a200d5044922496668a4/cryptography-2.7-cp34-abi3-manylinux1_x86_64.whl (2.3MB)\r\nCollecting cbor2>=4.1.1 (from autobahn[xbr])\r\n  Downloading https://files.pythonhosted.org/packages/21/b4/0d4050c576476bcf3b3e18f9afb2b338325279ce0efc0ddca6557adb0e6a/cbor2-4.1.2-py2.py3-none-any.whl\r\nCollecting zlmdb>=19.7.1 (from autobahn[xbr])\r\n  Downloading https://files.pythonhosted.org/packages/11/6f/ade54e503a34ae4859c9a630094f6f5329cbb65ac418f586b7712e77ea08/zlmdb-19.7.1-py2.py3-none-any.whl (57kB)\r\nCollecting twisted>=18.9.0 (from autobahn[xbr])\r\n  Downloading https://files.pythonhosted.org/packages/79/59/035de19362320e632301ed7bbde23e4c8cd6fc5e2f1cf8d354cdba857854/Twisted-19.2.1.tar.bz2 (3.1MB)\r\nCollecting web3>=4.8.1 (from autobahn[xbr])\r\n  Downloading https://files.pythonhosted.org/packages/24/f5/3d6e3ac1ec98dc736084a8f821b922517d5492714889bf29460d9d97bda0/web3-4.9.2-py3-none-any.whl (124kB)\r\nCollecting py-eth-sig-utils>=0.3.0 (from autobahn[xbr])\r\n  Downloading https://files.pythonhosted.org/packages/46/02/8e1359ba45fb5392220839a979b2c0eaa805923c2b7a4904e74c17440ef4/py_eth_sig_utils-0.3.0-py3-none-any.whl\r\nCollecting ethereum>=2.3.2 (from autobahn[xbr])\r\n  Downloading https://files.pythonhosted.org/packages/ca/48/bd2484ff00fad56bfabad46af8d91f0ab4c6844e389e00b00c7609b405e0/ethereum-2.3.2.tar.gz (155kB)\r\nCollecting eth-abi>=1.3.0 (from autobahn[xbr])\r\n  Downloading https://files.pythonhosted.org/packages/f1/ae/ba7616550d65ef7a54a98d2f34947109740b319f79f8320bed082a985b55/eth_abi-2.0.0-py3-none-any.whl\r\n\r\n.....\r\n\r\nSuccessfully built autobahn twisted ethereum pyyaml lmdb cytoolz lru-dict future pbkdf2 pyethash pysha3 scrypt parsimonious pycparser toolz   \r\nERROR: web3 4.9.2 has requirement eth-abi<2.0.0,>=1.2.0, but you'll have eth-abi 2.0.0 which is incompatible.\r\nInstalling collected packages: six, txaio, asn1crypto, pycparser, cffi, cryptography, cbor2, pyyaml, pynacl, numpy, lmdb, click, zlmdb, zope.interface, constantly, incremental, attrs, Automat, idna, hyperlink, PyHamcrest, twisted, toolz, cytoolz, eth-typing, pycryptodome, eth-hash, eth-utils, rlp, hexbytes, eth-rlp, eth-keys, eth-keyfile, attrdict, eth-account, websockets, certifi, chardet, urllib3, requests, parsimonious, eth-abi, lru-dict, web3, py-eth-sig-utils, coincurve, future, pbkdf2, mypy-extensions, py-ecc, pyethash, pysha3, repoze.lru, scrypt, ethereum, autobahn\r\nSuccessfully installed Automat-0.7.0 PyHamcrest-1.9.0 asn1crypto-0.24.0 attrdict-2.0.1 attrs-19.1.0 autobahn-19.7.2 cbor2-4.1.2 certifi-2019.6.16 cffi-1.12.3 chardet-3.0.4 click-7.0 coincurve-12.0.0 constantly-15.1.0 cryptography-2.7 cytoolz-0.10.0 eth-abi-2.0.0 eth-account-0.3.0 eth-hash-0.2.0 eth-keyfile-0.5.1 eth-keys-0.2.4 eth-rlp-0.1.2 eth-typing-2.1.0 eth-utils-1.6.2 ethereum-2.3.2 future-0.17.1 hexbytes-0.2.0 hyperlink-19.0.0 idna-2.8 incremental-17.5.0 lmdb-0.96 lru-dict-1.1.6 mypy-extensions-0.4.1 numpy-1.15.4 parsimonious-0.8.1 pbkdf2-1.3 py-ecc-1.7.1 py-eth-sig-utils-0.3.0 pycparser-2.19 pycryptodome-3.8.2 pyethash-0.1.27 pynacl-1.3.0 pysha3-1.0.2 pyyaml-5.1.1 repoze.lru-0.7 requests-2.22.0 rlp-1.1.0 scrypt-0.8.13 six-1.12.0 toolz-0.10.0 twisted-19.2.1 txaio-18.8.1 urllib3-1.25.3 web3-4.9.2 websockets-6.0 zlmdb-19.7.1 zope.interface-4.6.0\r\n\r\n% docker run --rm -it test\r\nPython 3.7.4 (default, Jul 12 2019, 01:10:03) \r\n[GCC 6.3.0 20170516] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import web3\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.7/site-packages/web3/__init__.py\", line 8, in <module>\r\n    from web3.main import Web3  # noqa: E402\r\n  File \"/usr/local/lib/python3.7/site-packages/web3/main.py\", line 16, in <module>\r\n    from web3.eth import Eth\r\n  File \"/usr/local/lib/python3.7/site-packages/web3/eth.py\", line 13, in <module>\r\n    from web3.contract import (\r\n  File \"/usr/local/lib/python3.7/site-packages/web3/contract.py\", line 33, in <module>\r\n    from web3.utils.abi import (\r\n  File \"/usr/local/lib/python3.7/site-packages/web3/utils/abi.py\", line 10, in <module>\r\n    from eth_abi.abi import (\r\nImportError: cannot import name 'collapse_type' from 'eth_abi.abi' (/usr/local/lib/python3.7/site-packages/eth_abi/abi.py)\r\n>>>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1222", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1222/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1222/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1222/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1222", "id": 467516407, "node_id": "MDU6SXNzdWU0Njc1MTY0MDc=", "number": 1222, "title": "websocket upgrade failure 403 forbidden", "user": {"login": "T-Woodward", "id": 50867520, "node_id": "MDQ6VXNlcjUwODY3NTIw", "avatar_url": "https://avatars3.githubusercontent.com/u/50867520?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-Woodward", "html_url": "https://github.com/T-Woodward", "followers_url": "https://api.github.com/users/T-Woodward/followers", "following_url": "https://api.github.com/users/T-Woodward/following{/other_user}", "gists_url": "https://api.github.com/users/T-Woodward/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-Woodward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-Woodward/subscriptions", "organizations_url": "https://api.github.com/users/T-Woodward/orgs", "repos_url": "https://api.github.com/users/T-Woodward/repos", "events_url": "https://api.github.com/users/T-Woodward/events{/privacy}", "received_events_url": "https://api.github.com/users/T-Woodward/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641228806, "node_id": "MDU6TGFiZWw2NDEyMjg4MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/not-an-issue-but-a-question-use-our-mailing-list", "name": "not-an-issue-but-a-question-use-our-mailing-list", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-12T17:12:23Z", "updated_at": "2019-07-14T09:20:53Z", "closed_at": "2019-07-14T09:20:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to connect to a websocket using Autobahn/Asyncio. I have connected to several other websockets using the exact same code, but this particular websocket is rejecting my attempts. I'm getting a connection upgrade failure and the server is responding with a 403. I have tried to connect to this websocket with the 'websockets' package and that has been successful, so there must be some default setting in the Autobahn implementation that is causing the problem.\r\n\r\nI have compared the successful handshake request from the websockets implementation with the unsuccessful handshake request from the autobahn implementation:\r\n\r\nwebsockets: request:\r\n\r\nGET /ws/v3 HTTP/1.1\r\nHost: real.okex.com:10442\r\nUpgrade: websocket\r\nConnection: Upgrade\r\nSec-WebSocket-Key: eTj8gJmhJGTj868ObmO2qg==\r\nSec-WebSocket-Version: 13\r\nSec-WebSocket-Extensions: permessage-deflate; client_max_window_bits\r\nUser-Agent: Python/3.6 websockets/8.0\r\nresponse:\r\n\r\nServer: nginx\r\nDate: Tue, 09 Jul 2019 20:49:33 GMT\r\nConnection: upgrade\r\nupgrade: websocket\r\nsec-websocket-accept: NJxn9G+1AJaYlHY1n1/Iy6P+2R8=\r\nautobahn: request:\r\n\r\nGET /ws/v3 HTTP/1.1\r\nUser-Agent: AutobahnPython/18.11.1\r\nHost: real.okex.com:10442\r\nUpgrade: websocket\r\nConnection: Upgrade\r\nSec-WebSocket-Key: QI5/tydGJRB6/LMDXkQ1dg==\r\nSec-WebSocket-Version: 13\r\nresponse:\r\n\r\nWebSocket connection upgrade failed (403 - Forbidden)\r\nI have even hardcoded the autobahn implementation to send the exact same GET request as the 'websockets' implementation but that didn't work.\r\n\r\nAutobahn code:\r\n\r\nasync def connect_to_OKEX():\r\n    while True:\r\n        try:\r\n            global OKEX_transport\r\n            ws_endpoint = 'wss://real.okex.com:10442/ws/v3'\r\n            factory = WebSocketClientFactory(ws_endpoint)\r\n            factory.protocol = OKEX_Protocol\r\n            coro = loop.create_connection(factory, 'www.okex.com', 443, ssl=True)\r\n            print(\"running {}\".format(coro))\r\n            OKEX_transport, proto = await coro\r\n            print(\"proto {}\".format(proto))\r\n            break\r\n        except Exception as e:\r\n            logger.exception('OKEX error connecting')\r\n            await asyncio.sleep(1)\r\nwebsockets code:\r\n\r\nasync def subscribe_without_login('wss://real.okex.com:10442/ws/v3', channels):\r\n    async with websockets.connect(url) as websocket:\r\n.....\r\nThe autobahn code that I am using has worked successfully for several other websockets, so is there perhaps some flag that I need to tick which is particular to this websocket? How could I go about figuring that out?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1218", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1218/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1218/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1218/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1218", "id": 463804338, "node_id": "MDU6SXNzdWU0NjM4MDQzMzg=", "number": 1218, "title": "Traceback on WebSocket resource status page", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 172662, "node_id": "MDU6TGFiZWwxNzI2NjI=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/websocket", "name": "websocket", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-03T15:01:56Z", "updated_at": "2019-08-29T17:20:20Z", "closed_at": "2019-08-29T17:20:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When using a Web transport with a WebSocket resource on a path, and when entering that full WebSocket URL (using scheme http instead of ws) in a browser address bar, Crossbar.io can render a status page - and this is broken currently:\r\n\r\n```\r\nJul 03 14:39:28 <redacted> unbuffer[2114]: Traceback (most recent call last):\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:   File \"/home/ubuntu/cpy373_1/lib/python3.7/site-packages/twisted/web/_http2.py\", line 186, in dataReceived\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:     self._requestEnded(event)\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:   File \"/home/ubuntu/cpy373_1/lib/python3.7/site-packages/twisted/web/_http2.py\", line 495, in _requestEnded\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:     stream.requestComplete()\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:   File \"/home/ubuntu/cpy373_1/lib/python3.7/site-packages/twisted/web/_http2.py\", line 992, in requestComplete\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:     self._request.requestReceived(self.command, self.path, b'HTTP/2')\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:   File \"/home/ubuntu/cpy373_1/lib/python3.7/site-packages/twisted/web/http.py\", line 920, in requestReceived\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:     self.process()\r\nJul 03 14:39:28 <redacted> unbuffer[2114]: --- <exception caught here> ---\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:   File \"/home/ubuntu/cpy373_1/lib/python3.7/site-packages/twisted/web/server.py\", line 199, in process\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:     self.render(resrc)\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:   File \"/home/ubuntu/cpy373_1/lib/python3.7/site-packages/twisted/web/server.py\", line 259, in render\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:     body = resrc.render(self)\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:   File \"/home/ubuntu/scm/crossbario/autobahn-python/autobahn/twisted/resource.py\", line 121, in render\r\nJul 03 14:39:28 <redacted> unbuffer[2114]:     protocol = self._factory.buildProtocol(request.transport.getPeer())\r\nJul 03 14:39:28 <redacted> unbuffer[2114]: builtins.AttributeError: 'NoneType' object has no attribute 'getPeer'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1213", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1213/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1213/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1213/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1213", "id": 456070012, "node_id": "MDU6SXNzdWU0NTYwNzAwMTI=", "number": 1213, "title": "use nginx proxy problem", "user": {"login": "github-yxb", "id": 7059300, "node_id": "MDQ6VXNlcjcwNTkzMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7059300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/github-yxb", "html_url": "https://github.com/github-yxb", "followers_url": "https://api.github.com/users/github-yxb/followers", "following_url": "https://api.github.com/users/github-yxb/following{/other_user}", "gists_url": "https://api.github.com/users/github-yxb/gists{/gist_id}", "starred_url": "https://api.github.com/users/github-yxb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/github-yxb/subscriptions", "organizations_url": "https://api.github.com/users/github-yxb/orgs", "repos_url": "https://api.github.com/users/github-yxb/repos", "events_url": "https://api.github.com/users/github-yxb/events{/privacy}", "received_events_url": "https://api.github.com/users/github-yxb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641228806, "node_id": "MDU6TGFiZWw2NDEyMjg4MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/not-an-issue-but-a-question-use-our-mailing-list", "name": "not-an-issue-but-a-question-use-our-mailing-list", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-14T05:43:14Z", "updated_at": "2019-06-14T05:53:19Z", "closed_at": "2019-06-14T05:53:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use Autobahn websocket in twisted server,the server is right when client direct connect.  \r\nBut when i use nginx Reverse proxy,client connect will fail,tell me handshake error.\r\n`WebSocketBadStatusException: Handshake status 400 missing port in HTTP Host header 'prews.madcrickets.com' and server runs on non-standard port 5000 (wss = False)`  \r\n\r\nnginx:  \r\nnginx/1.15.12\r\n`\r\nproxy_http_version 1.1;  \r\n  proxy_set_header Upgrade $http_upgrade;  \r\n  proxy_set_header Connection \"upgrade\";  \r\n  proxy_set_header X-Real-IP $remote_addr;  \r\n  proxy_set_header X-Scheme $scheme;  \r\n  proxy_set_header Host $host;  \r\n  proxy_pass http://vcricket_websocket;\r\n`  \r\n\r\nHow to resolve?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1212", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1212/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1212/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1212/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1212", "id": 454780447, "node_id": "MDU6SXNzdWU0NTQ3ODA0NDc=", "number": 1212, "title": "RuntimeError: could not create serializer for \"cbor\" (available: ['json'])", "user": {"login": "jcgertig", "id": 455355, "node_id": "MDQ6VXNlcjQ1NTM1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/455355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcgertig", "html_url": "https://github.com/jcgertig", "followers_url": "https://api.github.com/users/jcgertig/followers", "following_url": "https://api.github.com/users/jcgertig/following{/other_user}", "gists_url": "https://api.github.com/users/jcgertig/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcgertig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcgertig/subscriptions", "organizations_url": "https://api.github.com/users/jcgertig/orgs", "repos_url": "https://api.github.com/users/jcgertig/repos", "events_url": "https://api.github.com/users/jcgertig/events{/privacy}", "received_events_url": "https://api.github.com/users/jcgertig/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641228806, "node_id": "MDU6TGFiZWw2NDEyMjg4MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/not-an-issue-but-a-question-use-our-mailing-list", "name": "not-an-issue-but-a-question-use-our-mailing-list", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-06-11T16:10:20Z", "updated_at": "2019-06-11T21:22:40Z", "closed_at": "2019-06-11T16:19:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nself.__wamp = Component(\r\n  transports=u\"ws://router\",\r\n  realm=u\"realm1\"\r\n)\r\nrun(self.__wamp)\r\n```\r\n\r\nWith the above code I get the following error\r\n\r\nconnecting once using transport type \"websocket\" over endpoint \"tcp\"\r\nConnection failed: RuntimeError: could not create serializer for \"cbor\" (available: ['json'])\r\n\r\nWhat can I do to alleviate this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1210", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1210/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1210/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1210/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1210", "id": 454238979, "node_id": "MDU6SXNzdWU0NTQyMzg5Nzk=", "number": 1210, "title": "How to assign subscriber's topics from backend (check subscriber's authorization)", "user": {"login": "dsun-ge", "id": 47542977, "node_id": "MDQ6VXNlcjQ3NTQyOTc3", "avatar_url": "https://avatars2.githubusercontent.com/u/47542977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsun-ge", "html_url": "https://github.com/dsun-ge", "followers_url": "https://api.github.com/users/dsun-ge/followers", "following_url": "https://api.github.com/users/dsun-ge/following{/other_user}", "gists_url": "https://api.github.com/users/dsun-ge/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsun-ge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsun-ge/subscriptions", "organizations_url": "https://api.github.com/users/dsun-ge/orgs", "repos_url": "https://api.github.com/users/dsun-ge/repos", "events_url": "https://api.github.com/users/dsun-ge/events{/privacy}", "received_events_url": "https://api.github.com/users/dsun-ge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-10T15:50:41Z", "updated_at": "2019-06-10T17:52:20Z", "closed_at": "2019-06-10T17:52:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say the front end is a web application that runs in browsers. Front end  (javascript) can send a token to the websocket server (python) so that the server can id the front end. Now from here, how can I make the front end subscribe the topics it is supposed to subscribe but nothing more? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1205", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1205/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1205/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1205/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1205", "id": 452397593, "node_id": "MDU6SXNzdWU0NTIzOTc1OTM=", "number": 1205, "title": " No module named 'cryptography'", "user": {"login": "kaduuuken", "id": 1745264, "node_id": "MDQ6VXNlcjE3NDUyNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1745264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaduuuken", "html_url": "https://github.com/kaduuuken", "followers_url": "https://api.github.com/users/kaduuuken/followers", "following_url": "https://api.github.com/users/kaduuuken/following{/other_user}", "gists_url": "https://api.github.com/users/kaduuuken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaduuuken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaduuuken/subscriptions", "organizations_url": "https://api.github.com/users/kaduuuken/orgs", "repos_url": "https://api.github.com/users/kaduuuken/repos", "events_url": "https://api.github.com/users/kaduuuken/events{/privacy}", "received_events_url": "https://api.github.com/users/kaduuuken/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-06-05T09:20:50Z", "updated_at": "2019-06-30T09:23:45Z", "closed_at": "2019-06-06T07:15:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use autobahn as a requirement from daphne and since it installed the newest autobahn version, I get the following error:\r\n\r\n`ModuleNotFoundError: No module named 'cryptography'`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1202", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1202/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1202/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1202/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1202", "id": 451551368, "node_id": "MDU6SXNzdWU0NTE1NTEzNjg=", "number": 1202, "title": "Implement transaction signing/verification in XBR simple buyer/seller", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 1329881886, "node_id": "MDU6TGFiZWwxMzI5ODgxODg2", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/XBR", "name": "XBR", "color": "ff6600", "default": false, "description": ""}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1296147960, "node_id": "MDU6TGFiZWwxMjk2MTQ3OTYw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-design", "name": "needs-design", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-06-03T15:34:53Z", "updated_at": "2019-08-21T08:12:42Z", "closed_at": "2019-08-21T08:12:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1201", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1201/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1201/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1201/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1201", "id": 451500668, "node_id": "MDU6SXNzdWU0NTE1MDA2Njg=", "number": 1201, "title": "Integrate XBR parts", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 413924033, "node_id": "MDU6TGFiZWw0MTM5MjQwMzM=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/CI-CD", "name": "CI-CD", "color": "d297fc", "default": false, "description": ""}, {"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 1329881886, "node_id": "MDU6TGFiZWwxMzI5ODgxODg2", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/XBR", "name": "XBR", "color": "ff6600", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-03T14:00:15Z", "updated_at": "2019-06-04T12:12:07Z", "closed_at": "2019-06-04T12:12:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "see https://github.com/xbr/xbr-protocol/issues/24", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1196", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1196/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1196/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1196/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1196", "id": 446672800, "node_id": "MDU6SXNzdWU0NDY2NzI4MDA=", "number": 1196, "title": "Consider making WAMP command line tool python 2.7+ compatible", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 256639374, "node_id": "MDU6TGFiZWwyNTY2MzkzNzQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/Python%202", "name": "Python 2", "color": "bfe5bf", "default": false, "description": null}, {"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-05-21T15:04:58Z", "updated_at": "2019-05-22T11:01:18Z", "closed_at": "2019-05-22T11:01:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The WAMP command line tool\r\n\r\nhttps://github.com/crossbario/autobahn-python/blob/c3365f31e5e22aad19b9d054090be93d237a6091/setup.py#L267\r\n\r\nis implemented in\r\n\r\nhttps://github.com/crossbario/autobahn-python/blob/master/autobahn/__main__.py\r\n\r\nand uses python 3.5+ syntax (\"async def\" etc).\r\n\r\nas far as I can see, using txaio instead (and plain deferred approach instead of co-routines) would be possible, and would make the command line tool work on python 2.7+\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1193", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1193/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1193/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1193/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1193", "id": 443825785, "node_id": "MDU6SXNzdWU0NDM4MjU3ODU=", "number": 1193, "title": "time.clock is removed in Python 3.8", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 256639336, "node_id": "MDU6TGFiZWwyNTY2MzkzMzY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/Python%203", "name": "Python 3", "color": "fbca04", "default": false, "description": null}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "om26er", "id": 6350837, "node_id": "MDQ6VXNlcjYzNTA4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6350837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/om26er", "html_url": "https://github.com/om26er", "followers_url": "https://api.github.com/users/om26er/followers", "following_url": "https://api.github.com/users/om26er/following{/other_user}", "gists_url": "https://api.github.com/users/om26er/gists{/gist_id}", "starred_url": "https://api.github.com/users/om26er/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/om26er/subscriptions", "organizations_url": "https://api.github.com/users/om26er/orgs", "repos_url": "https://api.github.com/users/om26er/repos", "events_url": "https://api.github.com/users/om26er/events{/privacy}", "received_events_url": "https://api.github.com/users/om26er/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-05-14T10:06:20Z", "updated_at": "2019-12-22T15:31:10Z", "closed_at": "2019-12-22T15:30:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "`time.clock` was deprecated in 3.3 and was removed in 3.8 with PR https://github.com/python/cpython/pull/13270 . I think below line might cause incompatibility in 3.8 on Windows so I am creating an issue for the same.\r\n\r\nhttps://github.com/crossbario/autobahn-python/blob/87ea1cca817dbc41a783b6b27483197bfa69ac78/autobahn/util.py#L466\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1187", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1187/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1187/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1187/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1187", "id": 439577745, "node_id": "MDU6SXNzdWU0Mzk1Nzc3NDU=", "number": 1187, "title": "remove dead _SessionShim code", "user": {"login": "sgoudelis", "id": 4840328, "node_id": "MDQ6VXNlcjQ4NDAzMjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/4840328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgoudelis", "html_url": "https://github.com/sgoudelis", "followers_url": "https://api.github.com/users/sgoudelis/followers", "following_url": "https://api.github.com/users/sgoudelis/following{/other_user}", "gists_url": "https://api.github.com/users/sgoudelis/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgoudelis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgoudelis/subscriptions", "organizations_url": "https://api.github.com/users/sgoudelis/orgs", "repos_url": "https://api.github.com/users/sgoudelis/repos", "events_url": "https://api.github.com/users/sgoudelis/events{/privacy}", "received_events_url": "https://api.github.com/users/sgoudelis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-02T12:59:17Z", "updated_at": "2019-05-12T08:16:07Z", "closed_at": "2019-05-12T08:16:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello everyone,\r\n\r\nI think there is an issue with the function _merged_authextra() in protocol.py (using autobahn 19.3.3 from pypi). When I want to authenticate against a single authenticator (as a client) and I use the authexra dict to feed in extra information into my dynamic authenticator, something weird happens. Occasionally, not consistently but quite frequently, the dict keys and values are scrambled. \r\n\r\nExample: I construct my Component like so:\r\n\r\n```\r\n    comp = Component(\r\n        transports=[\r\n            {\r\n                'type': 'websocket',\r\n                'url': os.environ.get('MYENTRYPOINT', config['ENTRYPOINTURL'])+'/'+transport,\r\n            }\r\n        ],\r\n        realm=os.environ.get('ROUTERRLM', config['ENTRYPOINTRLM']),\r\n        authentication={\r\n            'wampcra': {\r\n                'secret': password,\r\n                'authid': username,\r\n                'authrole': \"frontend\",\r\n                'authextra': {\r\n                    'pubkey': wamp_static_cryptosign_key.public_key(),\r\n                    'totptoken': totptoken,\r\n                }\r\n            }\r\n        },\r\n        is_fatal=_handle_fatal)\r\n```\r\nIt is CRA but I also provide the system with a public key for later use, not required in the auth process. I also verify a TOTP token given. \r\n\r\nOn the dynamic authenticator side, instead of getting the authextras as:\r\n\r\n```\r\n{'pubkey': \"somepubkey\",'totptoken': \"sometoken\"}\r\n```\r\nI get them as \r\n```\r\n{'pubkey': \"sometoken\",'totptoken': \"somepubkey\"}\r\n```\r\nThey are now scrambled. If there was a third item there, that would be scrambled as well. Very odd behavior. I tracked down the issue to the function _merged_authextra() in protocol.py. I am not fully aware of your requirements and as a result I dont think I can provide a solution to this reliably, however it seems to me using the reduce() does not respect the order of the values given and also using set() has its own issues in case where an identical value exists in the dictionary. It will be overwritten essentially. \r\n\r\nI kind of hacked my way through the issue and it seems to me that this should work:\r\n```\r\n            return {\r\n            k: v\r\n            for k, v in zip(\r\n                reduce(lambda x, y: x or list(y.keys()), authextras, list()),\r\n                reduce(lambda x, y: x or list(y.values()), authextras, list())\r\n            )\r\n        }\r\n```\r\n\r\nAlthough I am highly uncertain if this full complies with the requirements of your method, so take it with great precaution. \r\n\r\nPlease let me know what your thoughts are\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1184", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1184/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1184/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1184/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1184", "id": 435728874, "node_id": "MDU6SXNzdWU0MzU3Mjg4NzQ=", "number": 1184, "title": "Mix AutoBahn with PySide2", "user": {"login": "stereomatchingkiss", "id": 1801914, "node_id": "MDQ6VXNlcjE4MDE5MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1801914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stereomatchingkiss", "html_url": "https://github.com/stereomatchingkiss", "followers_url": "https://api.github.com/users/stereomatchingkiss/followers", "following_url": "https://api.github.com/users/stereomatchingkiss/following{/other_user}", "gists_url": "https://api.github.com/users/stereomatchingkiss/gists{/gist_id}", "starred_url": "https://api.github.com/users/stereomatchingkiss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stereomatchingkiss/subscriptions", "organizations_url": "https://api.github.com/users/stereomatchingkiss/orgs", "repos_url": "https://api.github.com/users/stereomatchingkiss/repos", "events_url": "https://api.github.com/users/stereomatchingkiss/events{/privacy}", "received_events_url": "https://api.github.com/users/stereomatchingkiss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-22T13:34:50Z", "updated_at": "2019-04-22T15:28:29Z", "closed_at": "2019-04-22T15:28:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to create a websocket server(with ssl) by AutoBahn with PySide2, is it possible to mix these two libraries together?Both of them got their own event-loop. Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1182", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1182/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1182/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1182/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1182", "id": 435338489, "node_id": "MDU6SXNzdWU0MzUzMzg0ODk=", "number": 1182, "title": "Connection closed before \"open\" event", "user": {"login": "adrice727", "id": 5115751, "node_id": "MDQ6VXNlcjUxMTU3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5115751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrice727", "html_url": "https://github.com/adrice727", "followers_url": "https://api.github.com/users/adrice727/followers", "following_url": "https://api.github.com/users/adrice727/following{/other_user}", "gists_url": "https://api.github.com/users/adrice727/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrice727/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrice727/subscriptions", "organizations_url": "https://api.github.com/users/adrice727/orgs", "repos_url": "https://api.github.com/users/adrice727/repos", "events_url": "https://api.github.com/users/adrice727/events{/privacy}", "received_events_url": "https://api.github.com/users/adrice727/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-20T00:36:47Z", "updated_at": "2019-04-20T03:00:21Z", "closed_at": "2019-04-20T03:00:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Python 2.7 with `trollius`.  When running the server in a separate thread, the `onOpen` event handler is never called.  Similar to what is described in this [issue](https://github.com/crossbario/autobahn-python/issues/426), I'm seeing:\r\n```\r\nWebSocket connection closed: connection was closed uncleanly (peer dropped the TCP connection without previous WebSocket closing handshake)\r\n```\r\nand in the browser:\r\n```\r\nWebSocket is closed before the connection is established\r\n```\r\n\r\nThis is my code:\r\n```python\r\nimport trollius as asyncio\r\nfrom autobahn.asyncio.websocket import WebSocketServerProtocol, \\\r\n    WebSocketServerFactory\r\nfrom threading import Thread\r\n\r\ndef listen(loop):\r\n    asyncio.set_event_loop(loop)\r\n    factory = WebSocketServerFactory(u\"ws://127.0.0.1:9009\")\r\n    factory.protocol = FeedWsServerProtocol\r\n    coro = loop.create_server(factory, '0.0.0.0', 9009)\r\n    server = loop.run_until_complete(coro)\r\n    try:\r\n        loop.run_forever()\r\n    except KeyboardInterrupt:\r\n        pass\r\n    finally:\r\n        server.close()\r\n        loop.close()\r\n\r\n\r\ndef run():\r\n    loop = asyncio.new_event_loop()     \r\n    t = Thread(target=listen, args=(loop,))\r\n    t.daemon = True\r\n    t.start()\r\n\r\nrun()\r\n```\r\n\r\nWhen running the server on the main thread, everything works fine.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1181", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1181/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1181/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1181/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1181", "id": 435283080, "node_id": "MDU6SXNzdWU0MzUyODMwODA=", "number": 1181, "title": "More onConnecting fallout", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2019-04-19T19:39:09Z", "updated_at": "2019-05-03T17:00:49Z", "closed_at": "2019-05-03T17:00:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "More fallout from `onConnecting` - in `tox -e pytest` of crossbarfx:\r\n\r\n```\r\ntest/functests/cbtests/test_cb_ssl.py::test_verification Generating a 2048 bit RSA private key\r\n..............................................................................................................+++\r\n........+++\r\nwriting new private key to '/tmp/tmpl0msksjk/private.key'\r\n-----\r\n2019-04-19T21:33:44+0200 start_crossbar\r\n2019-04-19T21:33:44+0200 \r\n2019-04-19T21:33:44+0200    running in /tmp/cts_authp6kpmpwk\r\n\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] \r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177]     :::::::::::::::::\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177]           :::::          _____                      __\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177]     :::::   :   :::::   / ___/____ ___   ___  ___  / /  ___ _ ____\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177]     :::::::   :::::::  / /__ / __// _ \\ (_-< (_-< / _ \\/ _ `// __/\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177]     :::::   :   :::::  \\___//_/   \\___//___//___//_.__/\\_,_//_/\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177]           :::::\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177]     :::::::::::::::::   Crossbar v19.4.1\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] \r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177]     Copyright (c) 2013-2019 Crossbar.io Technologies GmbH, licensed under AGPL 3.0.\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] \r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Initializing <crossbar.node.node.Node> as node [realm=crossbar, cbdir=/tmp/cts_authp6kpmpwk]\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] New node key pair generated! Public key is 0xefe33450412be54d21a487a304b55b97671edd2e49ca676ae966470416343611\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] File permissions on node private key fixed\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Node key loaded from /tmp/cts_authp6kpmpwk/key.priv\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Node configuration loaded [config_source=localfile, config_path=/tmp/cts_authp6kpmpwk/config.json]\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Entering event reactor ...\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Starting standalone node <crossbar.node.node.Node.start>\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Node ID intel-nuci7 set from hostname\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] No extra node router roles\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] RouterServiceAgent ready (realm_name=\"crossbar\", on_ready=None)\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Registered 23 procedures\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Signal handler installed on process 5177 thread 140066019184768\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Using default node shutdown triggers ['shutdown_on_worker_exit']\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Booting node <crossbar.node.node.Node.boot>\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Booting node from local configuration [parallel_worker_start=False] .. <crossbar.node.node.Node.boot_from_config>\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Will start 1 worker ..\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Order node to start Router ssl_testee\r\n2019-04-19T21:33:45+0200 2019-04-19T21:33:45+0200 [Controller   5177] Starting router worker ssl_testee <crossbar.node.controller.NodeController.start_worker>\r\n\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Starting worker \"ssl_testee\" for node \"intel-nuci7\" on realm \"crossbar\" with personality \"standalone\" <crossbar.worker.router.RouterController>\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Running as PID 5190 on CPython-EPollReactor\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Entering event reactor ...\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Router worker session for \"ssl_testee\" joined realm \"crossbar\" on node router <crossbar.worker.router.RouterController.onJoin>\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Registered 41 procedures\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Router worker session for \"ssl_testee\" ready\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Ok, node has started Router ssl_testee\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Configuring Router ssl_testee ..\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Order Router ssl_testee to start Realm realm001\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Starting router realm realm001 <crossbar.worker.router.RouterController.start_router_realm>\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] RouterServiceAgent ready (realm_name=\"auth_realm\", on_ready=<Deferred at 0x7f21bb42c4a8>)\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Realm \"realm001\" (name=\"auth_realm\") started\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Ok, Router ssl_testee has started Realm realm001\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Order Realm realm001 to start Role role001\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Starting role \"role001\" on realm \"realm001\" <crossbar.worker.router.RouterController.start_router_realm_role>\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] role role001 on realm realm001 started\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Ok, Realm realm001 has started Role role001\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Order Realm realm001 to start Role role002\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Starting role \"role002\" on realm \"realm001\" <crossbar.worker.router.RouterController.start_router_realm_role>\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] role role002 on realm realm001 started\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Ok, Realm realm001 has started Role role002\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Order Router ssl_testee to start Transport test_ssl_0\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Starting router transport \"test_ssl_0\" <crossbar.worker.router.RouterController.start_router_transport>\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Creating router transport for \"test_ssl_0\" <crossbar.worker.transport.create_router_transport>\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Router transport created for \"test_ssl_0\" <crossbar.worker.transport.RouterWebTransport>\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Created \"static\" Web service on root path \"/\" of Web transport \"test_ssl_0\"\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Loading server TLS key from /tmp/tmpl0msksjk/private.key\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Loading server TLS certificate from /tmp/tmpl0msksjk/server.crt\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Using secure default TLS ciphers\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] No OpenSSL DH parameter file set - DH cipher modes will be deactive!\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Site (TLS) starting on 6464\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Ok, Router ssl_testee has started Transport test_ssl_0\r\n2019-04-19T21:33:46+0200 Detected transport starting up\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Order Transport test_ssl_0 to start Web Service webservice001\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Router       5190] Starting \"websocket\" Web service on path \"tls_ws\" of transport \"test_ssl_0\" <crossbar.worker.router.RouterController.start_web_transport_service>\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Ok, Transport test_ssl_0 has started Web Service webservice001\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Ok, Router ssl_testee configured\r\n2019-04-19T21:33:46+0200 2019-04-19T21:33:46+0200 [Controller   5177] Ok, local node configuration booted successfully!\r\n2019-04-19T21:33:46+0200 Unhandled Error\r\nTraceback (most recent call last):\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/python/log.py\", line 103, in callWithLogger\r\n    return callWithContext({\"system\": lp}, func, *args, **kw)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/python/log.py\", line 86, in callWithContext\r\n    return context.call({ILogContext: newCtx}, func, *args, **kw)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/python/context.py\", line 122, in callWithContext\r\n    return self.currentContext().callWithContext(ctx, func, *args, **kw)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/python/context.py\", line 85, in callWithContext\r\n    return func(*args,**kw)\r\n--- <exception caught here> ---\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/internet/posixbase.py\", line 619, in _doReadOrWrite\r\n    why = selectable.doWrite()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/internet/tcp.py\", line 627, in doConnect\r\n    self._connectDone()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/internet/tcp.py\", line 656, in _connectDone\r\n    self.protocol.makeConnection(self)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/protocols/tls.py\", line 213, in makeConnection\r\n    ProtocolWrapper.makeConnection(self, transport)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/protocols/policies.py\", line 75, in makeConnection\r\n    self.wrappedProtocol.makeConnection(self)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/internet/protocol.py\", line 514, in makeConnection\r\n    self.connectionMade()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/internet/endpoints.py\", line 117, in connectionMade\r\n    self._wrappedProtocol.makeConnection(self.transport)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/internet/protocol.py\", line 514, in makeConnection\r\n    self.connectionMade()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/autobahn/twisted/websocket.py\", line 97, in connectionMade\r\n    self._connectionMade()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/autobahn/websocket/protocol.py\", line 3374, in _connectionMade\r\n    self.startHandshake()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/autobahn/websocket/protocol.py\", line 3492, in startHandshake\r\n    transport_details = self._create_transport_details()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/autobahn/twisted/websocket.py\", line 255, in _create_transport_details\r\n    channel_id_type=u\"tls-unique\",\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/autobahn/twisted/util.py\", line 126, in transport_channel_id\r\n    m.update(tls_finished_msg)\r\nbuiltins.TypeError: object supporting the buffer API required\r\n\r\nFAILED\r\ntest/functests/cbtests/test_cb_ssl.py::test_verification_fails 2019-04-19T21:33:51+0200 connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\n2019-04-19T21:33:51+0200 Starting factory <autobahn.twisted.websocket.WampWebSocketClientFactory object at 0x7f8e9d860fd0>\r\n2019-04-19T21:33:51+0200 Unhandled Error\r\nTraceback (most recent call last):\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/python/log.py\", line 103, in callWithLogger\r\n    return callWithContext({\"system\": lp}, func, *args, **kw)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/python/log.py\", line 86, in callWithContext\r\n    return context.call({ILogContext: newCtx}, func, *args, **kw)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/python/context.py\", line 122, in callWithContext\r\n    return self.currentContext().callWithContext(ctx, func, *args, **kw)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/python/context.py\", line 85, in callWithContext\r\n    return func(*args,**kw)\r\n--- <exception caught here> ---\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/internet/posixbase.py\", line 619, in _doReadOrWrite\r\n    why = selectable.doWrite()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/internet/tcp.py\", line 627, in doConnect\r\n    self._connectDone()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/internet/tcp.py\", line 656, in _connectDone\r\n    self.protocol.makeConnection(self)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/protocols/tls.py\", line 213, in makeConnection\r\n    ProtocolWrapper.makeConnection(self, transport)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/protocols/policies.py\", line 75, in makeConnection\r\n    self.wrappedProtocol.makeConnection(self)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/internet/protocol.py\", line 514, in makeConnection\r\n    self.connectionMade()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/internet/endpoints.py\", line 117, in connectionMade\r\n    self._wrappedProtocol.makeConnection(self.transport)\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/twisted/internet/protocol.py\", line 514, in makeConnection\r\n    self.connectionMade()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/autobahn/twisted/websocket.py\", line 97, in connectionMade\r\n    self._connectionMade()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/autobahn/websocket/protocol.py\", line 3374, in _connectionMade\r\n    self.startHandshake()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/autobahn/websocket/protocol.py\", line 3492, in startHandshake\r\n    transport_details = self._create_transport_details()\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/autobahn/twisted/websocket.py\", line 255, in _create_transport_details\r\n    channel_id_type=u\"tls-unique\",\r\n  File \"/home/oberstet/scm/crossbario/crossbarfx/.tox/functests-cb/lib/python3.7/site-packages/autobahn/twisted/util.py\", line 126, in transport_channel_id\r\n    m.update(tls_finished_msg)\r\nbuiltins.TypeError: object supporting the buffer API required\r\n\r\n2019-04-19T21:33:51+0200 Stopping factory <autobahn.twisted.websocket.WampWebSocketClientFactory object at 0x7f8e9d860fd0>\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1177", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1177/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1177/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1177/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1177", "id": 435104892, "node_id": "MDU6SXNzdWU0MzUxMDQ4OTI=", "number": 1177, "title": "Process object has no attribute getPeer", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-19T08:59:11Z", "updated_at": "2019-04-19T10:15:40Z", "closed_at": "2019-04-19T10:15:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "there is some fallout from (I think) https://github.com/crossbario/autobahn-python/pull/1170\r\n\r\n```\r\n(cpy372_5) oberstet@intel-nuci7:~/scm/crossbario/project-continental-cloud/conti-rws/teststack$ make run_crossbarfx_master\r\ncrossbarfx master start --cbdir=/home/oberstet/scm/crossbario/project-continental-cloud/conti-rws/teststack/cfxmaster/.crossbar --config=config-dev.json --loglevel=info\r\n\r\n2019-04-19T10:56:52+0200 [Controller  14548] \r\n2019-04-19T10:56:52+0200 [Controller  14548]     :::::::::::::::::\r\n2019-04-19T10:56:52+0200 [Controller  14548]           :::::          _____                 __              _____  _______\r\n2019-04-19T10:56:52+0200 [Controller  14548]     :::::   :   :::::   / ___/______  ___ ___ / /  ___ _____  / __/ |/_/ ___/\r\n2019-04-19T10:56:52+0200 [Controller  14548]     :::::::   :::::::  / /__/ __/ _ \\(_-<(_-</ _ \\/ _ `/ __/ / _/_>  </ /__\r\n2019-04-19T10:56:52+0200 [Controller  14548]     :::::   :   :::::  \\___/_/  \\___/___/___/_.__/\\_,_/_/   /_/ /_/|_|\\___/\r\n2019-04-19T10:56:52+0200 [Controller  14548]           :::::\r\n2019-04-19T10:56:52+0200 [Controller  14548]     :::::::::::::::::   Crossbar.io Fabric XBR Center v19.4.1 [00000]\r\n2019-04-19T10:56:52+0200 [Controller  14548] \r\n2019-04-19T10:56:52+0200 [Controller  14548]     Copyright (c) 2013-2019 Crossbar.io Technologies GmbH. All rights reserved.\r\n2019-04-19T10:56:52+0200 [Controller  14548] \r\n2019-04-19T10:56:52+0200 [Controller  14548] Initializing <crossbarfx.master.node.node.FabricCenterNode> as node [realm=crossbar, cbdir=/home/oberstet/scm/crossbario/project-continental-cloud/conti-rws/teststack/cfxmaster/.crossbar]\r\n2019-04-19T10:56:52+0200 [Controller  14548] Node key files exist and are valid. Node public key is 0x7d611ed0dbcd097f51bd75ff2ce89b50a083812a787d010e0abc16dbb71ef647\r\n2019-04-19T10:56:52+0200 [Controller  14548] Node key loaded from /home/oberstet/scm/crossbario/project-continental-cloud/conti-rws/teststack/cfxmaster/.crossbar/key.priv\r\n2019-04-19T10:56:52+0200 [Controller  14548] Expanding built-in node configuration from local file /home/oberstet/scm/crossbario/project-continental-cloud/conti-rws/teststack/cfxmaster/.crossbar/config-dev.json\r\n2019-04-19T10:56:52+0200 [Controller  14548] FIXME: implementation missing crossbarfx.master.personality.check_controller\r\n2019-04-19T10:56:52+0200 [Controller  14548] Node configuration loaded [config_source=localfile, config_path=/home/oberstet/scm/crossbario/project-continental-cloud/conti-rws/teststack/cfxmaster/.crossbar/config-dev.json]\r\n2019-04-19T10:56:52+0200 [Controller  14548] Entering event reactor ...\r\n2019-04-19T10:56:52+0200 [Controller  14548] Starting master-node <crossbarfx.master.node.node.FabricCenterNode.start>\r\n2019-04-19T10:56:52+0200 [Controller  14548] Starting master node <crossbar.node.node.Node.start>\r\n2019-04-19T10:56:52+0200 [Controller  14548] Node ID cfc1 set from explicit configuration\r\n2019-04-19T10:56:52+0200 [Controller  14548] RouterServiceAgent ready (realm_name=\"crossbar\", on_ready=None)\r\n2019-04-19T10:56:52+0200 [Controller  14548] Docker daemon integration disabled\r\n2019-04-19T10:56:52+0200 [Controller  14548] Registered 48 procedures\r\n2019-04-19T10:56:52+0200 [Controller  14548] Signal handler installed on process 14548 thread 139698221564032\r\n2019-04-19T10:56:52+0200 [Controller  14548] Booting node <crossbarfx.master.node.node.FabricCenterNode.boot>\r\n2019-04-19T10:56:52+0200 [Controller  14548] Booting node from local configuration [parallel_worker_start=False] .. <crossbar.node.node.Node.boot_from_config>\r\n2019-04-19T10:56:52+0200 [Controller  14548] Will start 2 workers ..\r\n2019-04-19T10:56:52+0200 [Controller  14548] Order node to start Router cfrouter1\r\n2019-04-19T10:56:52+0200 [Controller  14548] Starting router worker cfrouter1 <crossbar.node.controller.NodeController.start_worker>\r\n2019-04-19T10:56:52+0200 [Controller  14548] Unhandled Error\r\nTraceback (most recent call last):\r\n  File \"/home/oberstet/scm/crossbario/crossbar/crossbar/node/controller.py\", line 356, in start_worker\r\n    return self._start_native_worker(worker_type, worker_id, worker_options, details=details)\r\n  File \"/home/oberstet/scm/crossbario/crossbar/crossbar/node/controller.py\", line 695, in _start_native_worker\r\n    d = ep.connect(transport_factory)\r\n  File \"/home/oberstet/scm/crossbario/crossbar/crossbar/common/twisted/processutil.py\", line 117, in connect\r\n    self._childFDs)\r\n  File \"/home/oberstet/cpy372_5/lib/python3.7/site-packages/twisted/internet/posixbase.py\", line 340, in spawnProcess\r\n    processProtocol, uid, gid, childFDs)\r\n--- <exception caught here> ---\r\n  File \"/home/oberstet/cpy372_5/lib/python3.7/site-packages/twisted/internet/process.py\", line 770, in __init__\r\n    self.proto.makeConnection(self)\r\n  File \"/home/oberstet/cpy372_5/lib/python3.7/site-packages/twisted/internet/endpoints.py\", line 352, in makeConnection\r\n    return self.protocol.makeConnection(self.transport)\r\n  File \"/home/oberstet/cpy372_5/lib/python3.7/site-packages/twisted/internet/protocol.py\", line 514, in makeConnection\r\n    self.connectionMade()\r\n  File \"/home/oberstet/scm/crossbario/crossbar/crossbar/node/native.py\", line 49, in connectionMade\r\n    WampWebSocketClientProtocol.connectionMade(self)\r\n  File \"/home/oberstet/scm/crossbario/autobahn-python/autobahn/twisted/websocket.py\", line 97, in connectionMade\r\n    self._connectionMade()\r\n  File \"/home/oberstet/scm/crossbario/autobahn-python/autobahn/websocket/protocol.py\", line 3374, in _connectionMade\r\n    self.startHandshake()\r\n  File \"/home/oberstet/scm/crossbario/autobahn-python/autobahn/websocket/protocol.py\", line 3492, in startHandshake\r\n    transport_details = self._create_transport_details()\r\n  File \"/home/oberstet/scm/crossbario/autobahn-python/autobahn/twisted/websocket.py\", line 248, in _create_transport_details\r\n    peer=peer2str(self.transport.getPeer()),\r\n  File \"/home/oberstet/cpy372_5/lib/python3.7/site-packages/twisted/python/components.py\", line 407, in __get__\r\n    return getattr(original, self.attributeName)\r\nbuiltins.AttributeError: 'Process' object has no attribute 'getPeer'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1163", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1163/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1163/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1163/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1163", "id": 427628476, "node_id": "MDU6SXNzdWU0Mjc2Mjg0NzY=", "number": 1163, "title": "wamp notification tool is broken", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-04-01T10:29:43Z", "updated_at": "2019-04-02T19:42:31Z", "closed_at": "2019-04-02T19:42:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "apparently, the tool doesn't exit:\r\n\r\n``` \r\nwamp --authid wheel_pusher --url ws://office2dmz.crossbario.com:8008/ --realm webhook call builder.wheel_pushed --keyword name autobahn-python --keyword publish true\r\nNo output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.\r\nCheck the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received\r\nThe build has been terminated\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1162", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1162/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1162/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1162/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1162", "id": 427587987, "node_id": "MDU6SXNzdWU0Mjc1ODc5ODc=", "number": 1162, "title": "self.authid not settable", "user": {"login": "Emantor", "id": 934284, "node_id": "MDQ6VXNlcjkzNDI4NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/934284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Emantor", "html_url": "https://github.com/Emantor", "followers_url": "https://api.github.com/users/Emantor/followers", "following_url": "https://api.github.com/users/Emantor/following{/other_user}", "gists_url": "https://api.github.com/users/Emantor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Emantor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Emantor/subscriptions", "organizations_url": "https://api.github.com/users/Emantor/orgs", "repos_url": "https://api.github.com/users/Emantor/repos", "events_url": "https://api.github.com/users/Emantor/events{/privacy}", "received_events_url": "https://api.github.com/users/Emantor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-01T08:59:29Z", "updated_at": "2019-04-01T09:22:03Z", "closed_at": "2019-04-01T09:03:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ncrossbar URL: ws://127.0.0.1:20408/ws\r\ncrossbar realm: realm1\r\nexporter name: dibooki\r\nexporter hostname: dibooki\r\nresource config file: export.yaml\r\n2019-04-01T10:48:22 Future exception was never retrieved\r\nfuture: <Future finished exception=AttributeError(\"can't set attribute\")>\r\nTraceback (most recent call last):\r\n  File \"/home/phoenix/.virtualenvs/labgrid-crossbar-bump/lib/python3.7/site-packages/txaio/aio.py\", line 426, in as_future\r\n    res = fun(*args, **kwargs)\r\n  File \"/home/phoenix/work/ptx/labgrid/labgrid/remote/exporter.py\", line 321, in onConnect\r\n    self.authid = \"exporter/{}\".format(self.name)\r\nAttributeError: can't set attribute\r\n```\r\nMost likely due to the introduction of setters in #1137. Tested with latest labgrid master and a bump to crossbar and autobahn.\r\n\r\nAm I supposed to set the authid differently? Code is [here](https://github.com/labgrid-project/labgrid/blob/897b3a55d89510602229ce45e0212a75e411e994/labgrid/remote/exporter.py#L321).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1159", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1159/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1159/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1159/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1159", "id": 426161353, "node_id": "MDU6SXNzdWU0MjYxNjEzNTM=", "number": 1159, "title": "introduce and encourage use of an interface that is more easily testable", "user": {"login": "exarkun", "id": 254565, "node_id": "MDQ6VXNlcjI1NDU2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/254565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exarkun", "html_url": "https://github.com/exarkun", "followers_url": "https://api.github.com/users/exarkun/followers", "following_url": "https://api.github.com/users/exarkun/following{/other_user}", "gists_url": "https://api.github.com/users/exarkun/gists{/gist_id}", "starred_url": "https://api.github.com/users/exarkun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exarkun/subscriptions", "organizations_url": "https://api.github.com/users/exarkun/orgs", "repos_url": "https://api.github.com/users/exarkun/repos", "events_url": "https://api.github.com/users/exarkun/events{/privacy}", "received_events_url": "https://api.github.com/users/exarkun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}, {"id": 124416608, "node_id": "MDU6TGFiZWwxMjQ0MTY2MDg=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-discussion", "name": "needs-discussion", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2019-03-27T20:10:14Z", "updated_at": "2020-03-25T02:57:27Z", "closed_at": "2020-03-25T02:57:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've had some difficulty writing good unit tests for WebSocketClientProtocol-based implementations.  The tools available seem to encourage one of two paths:\r\n\r\n* Directly instantiate the relevant objects and then call methods on them _as though_ they were in use by the real Autobahn WebSocket implementation.\r\n* Set up real network servers and clients that interact over real sockets so that the real Autobahn WebSocket implementation is driving them.\r\n\r\nThe first of these options has the drawback that there's no guarantee the tests will actually drive the application code correctly (and even if it is initially correct the chances of it diverging from reality increase as Autobahn is maintained and changed).\r\n\r\nThe second of these options has the drawback that it is prone to many different kinds of spurious failure (most code that takes this approach doesn't even manage to get the part where you start listening on a port correct :cry: ).  It also draws in a lot more code and so failures can become harder to spot.  Failures can also end up being caused by other code that's not the main focus of the test.  It's also a lot slower/more expensive as a result of running so much more code.\r\n\r\nI think it would be very useful if Autobahn itself offered and encouraged the use of a higher-level interface that allows details about connections/sockets/networks to be contained in an object that can easily be substituted for a testing fake.  A model for this which appears to be working well is the regular HTTP client interface in Twisted, `twisted.web.client.IAgent`.  This has one primary network-enabled implementation in Twisted, `twisted.web.client.Agent` and the third-party(-ish) treq library provides a test-focused implementation, `treq.testing.RequestTraversalAgent`.\r\n\r\nApplication code written against `IAgent` can accept an implementation and do what it needs to do.  Real-world use of this application code passes in an `Agent` instance (or possibly a wrapper but that's not directly relevant here).  Test use of this same application code passes in a correctly initialized `RequestTraversalAgent`.  The application code doesn't know or care which implementation it gets.  `Agent` goes off and makes real requests over a real network.  `RequestTraversalAgent` decomposes the request and serves up a response to it using a `twisted.web.resource.IResource` provider - with no network, only Python method calls and correct copying of bytes from one place to another in memory.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1158", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1158/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1158/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1158/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1158", "id": 426128701, "node_id": "MDU6SXNzdWU0MjYxMjg3MDE=", "number": 1158, "title": "Updating WebSocket headers on every connection attempt", "user": {"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}, {"id": 124416608, "node_id": "MDU6TGFiZWwxMjQ0MTY2MDg=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-discussion", "name": "needs-discussion", "color": "ffff00", "default": false, "description": ""}, {"id": 172662, "node_id": "MDU6TGFiZWwxNzI2NjI=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/websocket", "name": "websocket", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2019-03-27T18:49:58Z", "updated_at": "2019-04-22T10:40:46Z", "closed_at": "2019-04-22T10:40:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As brought up in `#autobahn`, currently a WebSocket connection gets its headers from the Factory (via. `self.factory.headers`). However, a Factory may make many connections and it is desirable to have a hook to change the headers for each connection (for example, when doing re-connections).\r\n\r\nOne way would be to mutate the `.headers` attribute in the Factory. This will \"probably\" work as there is likely only one \"active\" protocol instance created per-factory. However, it's not very explicit.\r\n\r\n@exarkun suggested: \"maybe something like having `WebSocketClientProtocol.onConnect` allowed to return a `ConnectionRequest` (or similar) that can specify headers?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1155", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1155/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1155/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1155/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1155", "id": 425625789, "node_id": "MDU6SXNzdWU0MjU2MjU3ODk=", "number": 1155, "title": "setup.py install puts binary module to arch-independent directory", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-26T20:11:22Z", "updated_at": "2019-03-27T12:25:07Z", "closed_at": "2019-03-27T12:25:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "setup.py install installs to sitelib directtories, not sitearch.\r\nSpecifically python* setup.py install installs on Linux everything to /usr/lib not to /usr/lib64. Specifically, _nvx_utf8validator.so should be in arch-dependent directory.\r\n\r\nAlso, see https://src.fedoraproject.org/rpms/python-autobahn/blob/master/f/python-autobahn.spec where files also end in %{python3_sitelib}, so it is not just openSUSE problem, but apparently my colleagues at RedHat missed that. @hroncok, what do you think?\r\n\r\nAh, correction, our colleagues at RedHat don't see it, because they don't set ``AUTOBAHN_USE_NVX``. How much does it speed things up?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1154", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1154/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1154/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1154/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1154", "id": 425597953, "node_id": "MDU6SXNzdWU0MjU1OTc5NTM=", "number": 1154, "title": "Import cbor2 not cbor", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-26T19:03:20Z", "updated_at": "2019-03-26T19:18:22Z", "closed_at": "2019-03-26T19:05:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/crossbario/autobahn-python/blob/e883eee48a5d796e22e86a43b5f4e43e419f6d9c/autobahn/wamp/message.py#L39\r\n\r\nFinish process started in #926 and #722. Probably related to #1125 as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1153", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1153/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1153/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1153/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1153", "id": 425471034, "node_id": "MDU6SXNzdWU0MjU0NzEwMzQ=", "number": 1153, "title": "Auto reconnection stop after \"skipping opening handshake timeout: WebSocket connection is already closed\"", "user": {"login": "npeditto", "id": 5755178, "node_id": "MDQ6VXNlcjU3NTUxNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5755178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npeditto", "html_url": "https://github.com/npeditto", "followers_url": "https://api.github.com/users/npeditto/followers", "following_url": "https://api.github.com/users/npeditto/following{/other_user}", "gists_url": "https://api.github.com/users/npeditto/gists{/gist_id}", "starred_url": "https://api.github.com/users/npeditto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npeditto/subscriptions", "organizations_url": "https://api.github.com/users/npeditto/orgs", "repos_url": "https://api.github.com/users/npeditto/repos", "events_url": "https://api.github.com/users/npeditto/events{/privacy}", "received_events_url": "https://api.github.com/users/npeditto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 256639266, "node_id": "MDU6TGFiZWwyNTY2MzkyNjY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/asyncio", "name": "asyncio", "color": "d4c5f9", "default": false, "description": null}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2019-03-26T14:59:53Z", "updated_at": "2019-07-10T13:13:05Z", "closed_at": "2019-06-21T08:26:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nin my application with (autobahn v19.3.3: but I noticed the same \"issue\" also in v18.10.1 and I don't know in the others) I notice that the auto-reconnection procedures stop working after these events, in particular after\r\n\r\n```\r\n2019-03-25 15:30:08.191 13776 DEBUG autobahn.asyncio.websocket.WebSocketClientProtocol [-] _connectionLost: [Errno 104] Connection reset by peer _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:30:12.311 13776 DEBUG autobahn.asyncio.websocket.WebSocketClientProtocol [-] skipping opening handshake timeout: WebSocket connection is already closed _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n```\r\n\r\nIs it normal? is there a solution to continue/start the reconnection procedures?\r\n\r\nCrossbar v18.9.2\r\n\r\nFull report logs:\r\n```\r\n2019-03-25 15:29:00.597 13776 DEBUG autobahn.asyncio.component.Component [-] component failed: TransportLost: failed to complete connection _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:29:00.609 13776 DEBUG autobahn.asyncio.component.Component [-] Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/txaio/aio.py\", line 514, in done\r\n    res = f.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.5/dist-packages/txaio/aio.py\", line 514, in done\r\n    res = f.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\nautobahn.wamp.exception.TransportLost: failed to complete connection\r\n _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:29:00.615 13776 ERROR autobahn.asyncio.component.Component [-] Connection failed: TransportLost: failed to complete connection: autobahn.wamp.exception.TransportLost: failed to complete connection\r\n2019-03-25 15:29:00.624 13776 DEBUG autobahn.asyncio.component.Component [-] Entering re-connect loop _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:29:00.631 13776 DEBUG autobahn.asyncio.component.Component [-] trying transport 0 using connect delay 25.279705208019543 _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:29:25.946 13776 INFO autobahn.asyncio.component.Component [-] connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\n2019-03-25 15:29:29.403 13776 DEBUG autobahn.asyncio.component.Component [-] component failed: ConnectionResetError: [Errno 104] Connection reset by peer _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:29:29.448 13776 DEBUG autobahn.asyncio.component.Component [-] Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/txaio/aio.py\", line 514, in done\r\n    res = f.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.5/dist-packages/txaio/aio.py\", line 514, in done\r\n    res = f.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.5/dist-packages/txaio/aio.py\", line 514, in done\r\n    res = f.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.5/dist-packages/txaio/aio.py\", line 514, in done\r\n    res = f.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.5/dist-packages/txaio/aio.py\", line 514, in done\r\n    res = f.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 239, in _step\r\n    result = coro.send(None)\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 400, in wait_for\r\n    return fut.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 241, in _step\r\n    result = coro.throw(exc)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 801, in create_connection\r\n    sock, protocol_factory, ssl, server_hostname)\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 827, in _create_connection_transport\r\n    yield from waiter\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 380, in __iter__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 304, in _wakeup\r\n    future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 293, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/selector_events.py\", line 723, in _read_ready\r\n    data = self._sock.recv(self.max_size)\r\nConnectionResetError: [Errno 104] Connection reset by peer\r\n _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:29:29.454 13776 INFO autobahn.asyncio.component.Component [-] Connection failed: ConnectionResetError: [Errno 104] Connection reset by peer\r\n2019-03-25 15:29:29.471 13776 DEBUG autobahn.asyncio.component.Component [-] Entering re-connect loop _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:29:29.480 13776 DEBUG autobahn.asyncio.component.Component [-] trying transport 0 using connect delay 34.52392114857189 _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:30:04.060 13776 INFO autobahn.asyncio.component.Component [-] connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\n2019-03-25 15:30:08.150 13776 DEBUG autobahn.asyncio.websocket.WebSocketClientProtocol [-] \r\n[('logOctets', False, 'WampWebSocketClientFactory'),\r\n ('logFrames', False, 'WampWebSocketClientFactory'),\r\n ('trackTimings', False, 'WampWebSocketClientFactory'),\r\n ('utf8validateIncoming', True, 'WampWebSocketClientFactory'),\r\n ('applyMask', True, 'WampWebSocketClientFactory'),\r\n ('maxFramePayloadSize', 0, 'WampWebSocketClientFactory'),\r\n ('maxMessagePayloadSize', 0, 'WampWebSocketClientFactory'),\r\n ('autoFragmentSize', 0, 'WampWebSocketClientFactory'),\r\n ('failByDrop', True, 'WampWebSocketClientFactory'),\r\n ('echoCloseCodeReason', False, 'WampWebSocketClientFactory'),\r\n ('openHandshakeTimeout', 5, 'WampWebSocketClientFactory'),\r\n ('closeHandshakeTimeout', 1, 'WampWebSocketClientFactory'),\r\n ('tcpNoDelay', True, 'WampWebSocketClientFactory'),\r\n ('autoPingInterval', 0, 'WampWebSocketClientFactory'),\r\n ('autoPingTimeout', 0, 'WampWebSocketClientFactory'),\r\n ('autoPingSize', 4, 'WampWebSocketClientFactory'),\r\n ('version', 18, 'WampWebSocketClientFactory'),\r\n ('acceptMaskedServerFrames', False, 'WampWebSocketClientFactory'),\r\n ('maskClientFrames', True, 'WampWebSocketClientFactory'),\r\n ('serverConnectionDropTimeout', 1, 'WampWebSocketClientFactory'),\r\n ('perMessageCompressionOffers', [], 'WampWebSocketClientFactory'),\r\n ('perMessageCompressionAccept',\r\n  <function WebSocketClientFactory.resetProtocolOptions.<locals>.<lambda> at 0xb3d51300>,\r\n  'WampWebSocketClientFactory')] _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:30:08.163 13776 DEBUG autobahn.asyncio.websocket.WebSocketClientProtocol [-] connection to tcp:51.75.29.206:8181 established _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:30:08.180 13776 DEBUG autobahn.asyncio.websocket.WebSocketClientProtocol [-] GET / HTTP/1.1\r\nUser-Agent: AutobahnPython/19.3.3\r\nHost: <OUR-CROSSBAR-SERVER-IP>:8181\r\nUpgrade: WebSocket\r\nConnection: Upgrade\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nSec-WebSocket-Key: 8eiSBL+/0+X97Hz9R5+JhQ==\r\nSec-WebSocket-Protocol: wamp.2.json\r\nSec-WebSocket-Version: 13\r\n\r\n _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:30:08.191 13776 DEBUG autobahn.asyncio.websocket.WebSocketClientProtocol [-] _connectionLost: [Errno 104] Connection reset by peer _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n2019-03-25 15:30:12.311 13776 DEBUG autobahn.asyncio.websocket.WebSocketClientProtocol [-] skipping opening handshake timeout: WebSocket connection is already closed _log /usr/local/lib/python3.5/dist-packages/txaio/aio.py:201\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1151", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1151/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1151/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1151/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1151", "id": 424979184, "node_id": "MDU6SXNzdWU0MjQ5NzkxODQ=", "number": 1151, "title": "WebSocketProtocol can leak handshake timeout DelayedCalls", "user": {"login": "exarkun", "id": 254565, "node_id": "MDQ6VXNlcjI1NDU2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/254565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exarkun", "html_url": "https://github.com/exarkun", "followers_url": "https://api.github.com/users/exarkun/followers", "following_url": "https://api.github.com/users/exarkun/following{/other_user}", "gists_url": "https://api.github.com/users/exarkun/gists{/gist_id}", "starred_url": "https://api.github.com/users/exarkun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exarkun/subscriptions", "organizations_url": "https://api.github.com/users/exarkun/orgs", "repos_url": "https://api.github.com/users/exarkun/repos", "events_url": "https://api.github.com/users/exarkun/events{/privacy}", "received_events_url": "https://api.github.com/users/exarkun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 256639248, "node_id": "MDU6TGFiZWwyNTY2MzkyNDg=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/Twisted", "name": "Twisted", "color": "009800", "default": false, "description": null}, {"id": 256639266, "node_id": "MDU6TGFiZWwyNTY2MzkyNjY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/asyncio", "name": "asyncio", "color": "d4c5f9", "default": false, "description": null}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 172662, "node_id": "MDU6TGFiZWwxNzI2NjI=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/websocket", "name": "websocket", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-25T15:51:59Z", "updated_at": "2019-03-26T06:39:53Z", "closed_at": "2019-03-26T06:39:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`WebSocketProtocol._connectionMade` can create a delayed call for handshake timeout:\r\n\r\nhttps://github.com/crossbario/autobahn-python/blob/0b0f3262903eb879a9ab6b313ab1a77e4d525726/autobahn/websocket/protocol.py#L1053-L1057\r\n\r\nThis is cleaned up:\r\n* in `succeedHandshake`: https://github.com/crossbario/autobahn-python/blob/0b0f3262903eb879a9ab6b313ab1a77e4d525726/autobahn/websocket/protocol.py#L2984-L2987\r\n* in `processHandshake`: https://github.com/crossbario/autobahn-python/blob/0b0f3262903eb879a9ab6b313ab1a77e4d525726/autobahn/websocket/protocol.py#L3710-L3715\r\n* and on its own if it fires (with some help from `onOpenHandshakeTimeout`: https://github.com/crossbario/autobahn-python/blob/0b0f3262903eb879a9ab6b313ab1a77e4d525726/autobahn/websocket/protocol.py#L794)\r\n\r\nBut if none of these things happen, it is left in the event loop (until it fires).  A notable codepath that avoids all of the cleanups above is simple connection loss.  If a connection is opened to the protocol and then closed, the timeout is left dangling.\r\n\r\nThis is inconvenient for unit tests which then fail (if using Twisted) because of a \"dirty\" reactor error.  It may have other problematic consequences too (perhaps relating to availability of the server).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1145", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1145/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1145/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1145/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1145", "id": 423184636, "node_id": "MDU6SXNzdWU0MjMxODQ2MzY=", "number": 1145, "title": "Easiest way to listen RabbitMQ events, and then publish to subscribers with with autobahn pubsub?", "user": {"login": "dreamjole", "id": 6895636, "node_id": "MDQ6VXNlcjY4OTU2MzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6895636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreamjole", "html_url": "https://github.com/dreamjole", "followers_url": "https://api.github.com/users/dreamjole/followers", "following_url": "https://api.github.com/users/dreamjole/following{/other_user}", "gists_url": "https://api.github.com/users/dreamjole/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreamjole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreamjole/subscriptions", "organizations_url": "https://api.github.com/users/dreamjole/orgs", "repos_url": "https://api.github.com/users/dreamjole/repos", "events_url": "https://api.github.com/users/dreamjole/events{/privacy}", "received_events_url": "https://api.github.com/users/dreamjole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-20T10:49:20Z", "updated_at": "2019-03-24T15:25:44Z", "closed_at": "2019-03-24T15:23:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1143", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1143/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1143/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1143/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1143", "id": 422423525, "node_id": "MDU6SXNzdWU0MjI0MjM1MjU=", "number": 1143, "title": "RegisterOptions should have details|bool parameter", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124416049, "node_id": "MDU6TGFiZWwxMjQ0MTYwNDk=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/enhancement", "name": "enhancement", "color": "33CCFF", "default": true, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-18T20:38:33Z", "updated_at": "2019-03-24T21:58:37Z", "closed_at": "2019-03-24T21:58:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1141", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1141/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1141/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1141/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1141", "id": 422100800, "node_id": "MDU6SXNzdWU0MjIxMDA4MDA=", "number": 1141, "title": "in 19.3.1 flatbuffers is not automatically installed using pip install", "user": {"login": "jberends", "id": 1391724, "node_id": "MDQ6VXNlcjEzOTE3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1391724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jberends", "html_url": "https://github.com/jberends", "followers_url": "https://api.github.com/users/jberends/followers", "following_url": "https://api.github.com/users/jberends/following{/other_user}", "gists_url": "https://api.github.com/users/jberends/gists{/gist_id}", "starred_url": "https://api.github.com/users/jberends/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jberends/subscriptions", "organizations_url": "https://api.github.com/users/jberends/orgs", "repos_url": "https://api.github.com/users/jberends/repos", "events_url": "https://api.github.com/users/jberends/events{/privacy}", "received_events_url": "https://api.github.com/users/jberends/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-18T08:54:59Z", "updated_at": "2019-03-18T15:14:16Z", "closed_at": "2019-03-18T10:26:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I just installed autobahn (yeah I know, released 25 minutes ago) I got the following import error:\r\n\r\n```\r\n[...]\r\n    from autobahn.wamp import protocol, auth\r\n  File \"]...]venv/lib/python3.6/site-packages/autobahn/wamp/protocol.py\", line 37, in <module>\r\n    from autobahn.wamp import message\r\n  File \"[...]/venv/lib/python3.6/site-packages/autobahn/wamp/message.py\", line 37, in <module>\r\n    from autobahn.wamp import message_fbs\r\n  File \"[...]/venv/lib/python3.6/site-packages/autobahn/wamp/message_fbs.py\", line 29, in <module>\r\n    import flatbuffers\r\nModuleNotFoundError: No module named 'flatbuffers'\r\n```\r\nIt seems that pip install autobahn does not install the flatbuffers module. Checked `setup.py` quickly but could not find it there (fast glance)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1133", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1133/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1133/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1133/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1133", "id": 421183020, "node_id": "MDU6SXNzdWU0MjExODMwMjA=", "number": 1133, "title": "PublishOptions / eligible over-reaching ...", "user": {"login": "oddjobz", "id": 7396121, "node_id": "MDQ6VXNlcjczOTYxMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7396121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oddjobz", "html_url": "https://github.com/oddjobz", "followers_url": "https://api.github.com/users/oddjobz/followers", "following_url": "https://api.github.com/users/oddjobz/following{/other_user}", "gists_url": "https://api.github.com/users/oddjobz/gists{/gist_id}", "starred_url": "https://api.github.com/users/oddjobz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oddjobz/subscriptions", "organizations_url": "https://api.github.com/users/oddjobz/orgs", "repos_url": "https://api.github.com/users/oddjobz/repos", "events_url": "https://api.github.com/users/oddjobz/events{/privacy}", "received_events_url": "https://api.github.com/users/oddjobz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-14T18:37:37Z", "updated_at": "2019-04-22T10:24:23Z", "closed_at": "2019-04-22T10:24:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I publish an event with publish options set to (eligible=[array]) where array is an array[n] (n>=1) of session id's, then the event only gets published to those session id's, and then only if those session id's are subscribed to the topic. If however the array is empty, the publish goes to all subscribed session id's, whereas I would expect it to go to none.\r\n\r\nSample code;\r\n```python\r\n    @inlineCallbacks\r\n    def publish_node(self, key, doc, acl=None):\r\n        if acl and not len(acl):\r\n            log.info('|pub| nothing to publish')\r\n            return\r\n        include = [session['oid'] for session in self._model._sessions.values() if key == session['cur_node']]\r\n        print('Include>', include)\r\n        include.append(1)\r\n        doc['oid'] = key\r\n        yield self._gsession.publish('cfc.api.event', {'type': 'NodeStats', 'payload': doc}, options=PublishOptions(eligible=include))\r\n        log.info(f'<stats> key=\"{key}\"')\r\n```\r\nWithout the \"include.append\", I will always see the event .. on adding the \"include.append\" to ensure the array is never zero length, then I will only get the event when my session has \"cur_node\" set to the key I'm interested in. (as intended)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1125", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1125/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1125/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1125/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1125", "id": 413807655, "node_id": "MDU6SXNzdWU0MTM4MDc2NTU=", "number": 1125, "title": "Consider making CBOR default dependency", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 124416608, "node_id": "MDU6TGFiZWwxMjQ0MTY2MDg=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-discussion", "name": "needs-discussion", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-24T10:40:03Z", "updated_at": "2019-03-26T19:13:58Z", "closed_at": "2019-03-26T19:13:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, cbor is an optional dependency that only gets installed when doing eg:\r\n\r\n```\r\npip install autobahn[serialization]\r\n```\r\n\r\nThe performance (when talking to crossbar) when using JSON is however less good than CBOR, and to avoid letting users fall into that trap without knowing, we might consider just making it a requirement in AB.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1122", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1122/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1122/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1122/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1122", "id": 413431119, "node_id": "MDU6SXNzdWU0MTM0MzExMTk=", "number": 1122, "title": "Gracefully handle wrong parameter number to WAMP procedures", "user": {"login": "oberstet", "id": 233340, "node_id": "MDQ6VXNlcjIzMzM0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/233340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oberstet", "html_url": "https://github.com/oberstet", "followers_url": "https://api.github.com/users/oberstet/followers", "following_url": "https://api.github.com/users/oberstet/following{/other_user}", "gists_url": "https://api.github.com/users/oberstet/gists{/gist_id}", "starred_url": "https://api.github.com/users/oberstet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oberstet/subscriptions", "organizations_url": "https://api.github.com/users/oberstet/orgs", "repos_url": "https://api.github.com/users/oberstet/repos", "events_url": "https://api.github.com/users/oberstet/events{/privacy}", "received_events_url": "https://api.github.com/users/oberstet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-02-22T14:36:55Z", "updated_at": "2019-05-06T00:02:03Z", "closed_at": "2019-05-06T00:02:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should gracefully handle (or allow the app to handle) the situation where a WAMP procedure is called with wrong number of positional arguments:\r\n\r\n```\r\n2019-02-22T15:31:39+0100 [XBRMrktMkr  24056] Traceback (most recent call last):\r\n  File \"/home/oberstet/cpy372_7/lib/python3.7/site-packages/autobahn/wamp/websocket.py\", line 95, in onMessage\r\n    self._session.onMessage(msg)\r\n  File \"/home/oberstet/cpy372_7/lib/python3.7/site-packages/autobahn/wamp/protocol.py\", line 939, in onMessage\r\n    on_reply = txaio.as_future(endpoint.fn, *invoke_args, **invoke_kwargs)\r\n  File \"/home/oberstet/cpy372_7/lib/python3.7/site-packages/txaio/tx.py\", line 428, in as_future\r\n    return ensureDeferred(fun(*args, **kwargs))\r\nTypeError: buy_key() missing 1 required positional argument: 'signature'\r\n\r\n2019-02-22T15:31:39+0100 [XBRMrktMkr  24056] dropping connection to peer tcp4:127.0.0.1:8081 with abort=True: I dropped the WebSocket TCP connection: WAMP Internal Error (buy_key() missing 1 required positional argument: 'signature')\r\n2019-02-22T15:31:39+0100 [XBRMrktMkr  24056] session leaving 'wamp.close.transport_lost'\r\n2019-02-22T15:31:39+0100 [XBRMrktMkr  24056] wamp.close.transport_lost: \r\n2019-02-22T15:31:39+0100 [XBRMrktMkr  24056] >>> Maker session DETACHED from data market (details=CloseDetails(reason=<wamp.close.transport_lost>, message='WAMP transport was lost without closing the session before'))\r\n2019-02-22T15:31:39+0100 [XBRMrktMkr  24056] Stopping factory <autobahn.twisted.websocket.WampWebSocketClientFactory object at 0x7f657992bba8>\r\n2019-02-22T15:31:41+0100 [XBRMrktMkr  24056] connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\n2019-02-22T15:31:41+0100 [XBRMrktMkr  24056] Starting factory <autobahn.twisted.websocket.WampWebSocketClientFactory object at 0x7f6575397d68>\r\n2019-02-22T15:31:41+0100 [XBRMrktMkr  24056] >>> Maker session ATTACHED to data market (details=SessionDetails(realm=<realm1>, session=6500367308499916, authid=<HMQY-5EFY-5GEV-LUXM-P3P6-H5VY>, authrole=<xbrmm>, authmethod=anonymous, authprovider=static, authextra={'x_cb_node_id': None, 'x_cb_peer': 'tcp4:127.0.0.1:46350', 'x_cb_pid': 24043}, resumed=None, resumable=None, resume_token=None)) on thread 140074355159168\r\n2019-02-22T15:31:41+0100 [XBRMrktMkr  24056] Registered 8 procedures\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1118", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1118/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1118/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1118/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1118", "id": 413272274, "node_id": "MDU6SXNzdWU0MTMyNzIyNzQ=", "number": 1118, "title": "Two corner cases", "user": {"login": "asodeur", "id": 38456167, "node_id": "MDQ6VXNlcjM4NDU2MTY3", "avatar_url": "https://avatars2.githubusercontent.com/u/38456167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asodeur", "html_url": "https://github.com/asodeur", "followers_url": "https://api.github.com/users/asodeur/followers", "following_url": "https://api.github.com/users/asodeur/following{/other_user}", "gists_url": "https://api.github.com/users/asodeur/gists{/gist_id}", "starred_url": "https://api.github.com/users/asodeur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asodeur/subscriptions", "organizations_url": "https://api.github.com/users/asodeur/orgs", "repos_url": "https://api.github.com/users/asodeur/repos", "events_url": "https://api.github.com/users/asodeur/events{/privacy}", "received_events_url": "https://api.github.com/users/asodeur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}, {"id": 172662, "node_id": "MDU6TGFiZWwxNzI2NjI=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/websocket", "name": "websocket", "color": "0b02e1", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-22T07:11:01Z", "updated_at": "2019-02-22T08:02:22Z", "closed_at": "2019-02-22T08:02:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "During clean-up I found a list of typos I bumped into while digging into `twisted`'s \r\n[IOCP reactor issue](https://github.com/crossbario/crossbar/issues/1347). Never encountered them outside load testing to date and forgot to report.\r\n\r\n1. `wamp.protocol.ApplicationSession` throws exception if caller closes the transport before callee returns.\r\n2. A `range()` argument in `websocket.protocol.WebSocketProtocol` might be a `float` in `py3` due to integer division\r\n\r\nI'll open PRs shortly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1117", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1117/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1117/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1117/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1117", "id": 412087447, "node_id": "MDU6SXNzdWU0MTIwODc0NDc=", "number": 1117, "title": "Tests fail with \"import file mismatch\"", "user": {"login": "lfam", "id": 6568228, "node_id": "MDQ6VXNlcjY1NjgyMjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6568228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfam", "html_url": "https://github.com/lfam", "followers_url": "https://api.github.com/users/lfam/followers", "following_url": "https://api.github.com/users/lfam/following{/other_user}", "gists_url": "https://api.github.com/users/lfam/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfam/subscriptions", "organizations_url": "https://api.github.com/users/lfam/orgs", "repos_url": "https://api.github.com/users/lfam/repos", "events_url": "https://api.github.com/users/lfam/events{/privacy}", "received_events_url": "https://api.github.com/users/lfam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-19T19:30:14Z", "updated_at": "2019-04-22T10:11:26Z", "closed_at": "2019-04-22T10:11:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "While working on a distro package for GNU Guix I found that Autobahn's tests fail to run.\r\n\r\nFor example:\r\n\r\n```\r\n______ ERROR collecting build/lib/autobahn/nvx/test/test_utf8validator.py ______\r\nimport file mismatch:\r\nimported module 'test_utf8validator' has this __file__ attribute:\r\n  /tmp/guix-build-python-autobahn-19.2.1.drv-0/autobahn-19.2.1/autobahn/nvx/test/test_utf8validator.py\r\nwhich is not the same as the test file we want to collect:\r\n  /tmp/guix-build-python-autobahn-19.2.1.drv-0/autobahn-19.2.1/build/lib/autobahn/nvx/test/test_utf8validator.py\r\nHINT: remove __pycache__ / .pyc files and/or use a unique basename for your test file modules\r\n```\r\n\r\nThis is with `Python 3.7.0`, `mock 2.0.0`, and `pytest 3.8.0`.\r\n\r\nAs a reminder, your `setup.py` specifies an older pytest in order to keep support for `Python 3.3`, but I \"relaxed\" that version requirement since we don't aim to support that older Python. \r\n\r\nSo, my apologies if that is the cause of these test failures...\r\n\r\nThe packaging discussion is here: https://debbugs.gnu.org/cgi/bugreport.cgi?bug=34515#95", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1115", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1115/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1115/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1115/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1115", "id": 411906875, "node_id": "MDU6SXNzdWU0MTE5MDY4NzU=", "number": 1115, "title": "Tasks are cancelled but never awaited after a shutdown while runing `autobahn.asyncio.component.run`", "user": {"login": "rdebroiz", "id": 3714876, "node_id": "MDQ6VXNlcjM3MTQ4NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3714876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdebroiz", "html_url": "https://github.com/rdebroiz", "followers_url": "https://api.github.com/users/rdebroiz/followers", "following_url": "https://api.github.com/users/rdebroiz/following{/other_user}", "gists_url": "https://api.github.com/users/rdebroiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdebroiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdebroiz/subscriptions", "organizations_url": "https://api.github.com/users/rdebroiz/orgs", "repos_url": "https://api.github.com/users/rdebroiz/repos", "events_url": "https://api.github.com/users/rdebroiz/events{/privacy}", "received_events_url": "https://api.github.com/users/rdebroiz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 256639266, "node_id": "MDU6TGFiZWwyNTY2MzkyNjY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/asyncio", "name": "asyncio", "color": "d4c5f9", "default": false, "description": null}, {"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-19T12:47:41Z", "updated_at": "2019-02-20T18:58:11Z", "closed_at": "2019-02-20T18:58:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\nWhile runing an asyncio component (using `run`), all tasks are cancelled after the process received a SIGINT or SIGTERM signal, but they are never awaited then the loop is immediately closed\r\n\r\nTo test it, run the following snippet and kill it with `ctrl+c`\r\n\r\n```python\r\nimport asyncio\r\nfrom autobahn.asyncio.component import Component, run\r\n\r\ntransports = []\r\nrealm=\"\"\r\n\r\ncomp = Component(transports=transports, realm=realm)\r\n\r\n@comp.on_ready\r\nasync def sleep_forever(*args, **kwargs):\r\n\r\n    async def sleep():\r\n        while True:\r\n            print(\"sleeping\")\r\n            await asyncio.sleep(1)\r\n\r\n    def wake_up(t):\r\n        try:\r\n            t.result()\r\n        except asyncio.CancelledError:\r\n            print(\"task cancel\")    # never reached\r\n        print(\"waked up!\")         # never reached\r\n\r\n    task = asyncio.ensure_future(sleep())\r\n    task.add_done_callback(wake_up)\r\n    await asyncio.wait_for(task, timeout=None)\r\n\r\nrun(comp)\r\n```\r\nWhat I expect:\r\n```\r\n2019-02-19T13:01:45 connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\nsleeping\r\nsleeping\r\n2019-02-19T13:01:47 Shutting down due to SIGINT\r\ntask cancel\r\nwaked up!\r\n```\r\n\r\nWhat I get: \r\n```\r\n2019-02-19T13:01:45 connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\nsleeping\r\nsleeping\r\n2019-02-19T13:01:47 Shutting down due to SIGINT\r\n2019-02-19T13:01:47 Task was destroyed but it is pending!\r\ntask: <Task pending coro=<sleep_forever() done, defined at /home/rdebroiz/trash.py:22> wait_for=<Task cancelled coro=<sleep_forever.<locals>.sleep() done, defined at /home/rdebroiz/trash.py:25>> cb=[gather.<locals>._done_callback(0)() at /usr/lib/python3.6/asyncio/tasks.py:622]>\r\n```\r\nMy understanding of the problem\r\n\r\n```python\r\n@asyncio.coroutine\r\n    def exit():\r\n        return loop.stop()\r\n\r\n    #  nicely_exit should be a coro\r\n    def nicely_exit(signal): \r\n        log.info(\"Shutting down due to {signal}\", signal=signal)\r\n        for task in asyncio.Task.all_tasks():  # filter the current task to not cancel it as well\r\n            task.cancel()   \r\n\r\n        # here you should await for the previously cancelled task to be done\r\n\r\n        asyncio.ensure_future(exit())  # just close the loop or call exit here no need of a task.\r\n    try:\r\n        # here the partials should return a nicely_exit coro  wrapped in a task\r\n        loop.add_signal_handler(signal.SIGINT, partial(nicely_exit, 'SIGINT'))  \r\n        loop.add_signal_handler(signal.SIGTERM, partial(nicely_exit, 'SIGTERM'))\r\n    except NotImplementedError:\r\n        # signals are not available on Windows\r\n        pass\r\n```\r\n\r\n\r\n\r\nOne last thing, It would be neat  to have a way to inject some codes that should be executed at shutdown via the run method.\r\n\r\nsomething like `run([my_components],  on_shutdown=my_teardown_coro)`\r\n\r\ncredit to https://www.roguelynn.com/words/asyncio-we-did-it-wrong-pt-2/\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1113", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1113/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1113/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1113/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1113", "id": 409613136, "node_id": "MDU6SXNzdWU0MDk2MTMxMzY=", "number": 1113, "title": "Create Server and Client in one code.", "user": {"login": "ccs1910", "id": 24619336, "node_id": "MDQ6VXNlcjI0NjE5MzM2", "avatar_url": "https://avatars1.githubusercontent.com/u/24619336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccs1910", "html_url": "https://github.com/ccs1910", "followers_url": "https://api.github.com/users/ccs1910/followers", "following_url": "https://api.github.com/users/ccs1910/following{/other_user}", "gists_url": "https://api.github.com/users/ccs1910/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccs1910/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccs1910/subscriptions", "organizations_url": "https://api.github.com/users/ccs1910/orgs", "repos_url": "https://api.github.com/users/ccs1910/repos", "events_url": "https://api.github.com/users/ccs1910/events{/privacy}", "received_events_url": "https://api.github.com/users/ccs1910/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641228806, "node_id": "MDU6TGFiZWw2NDEyMjg4MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/not-an-issue-but-a-question-use-our-mailing-list", "name": "not-an-issue-but-a-question-use-our-mailing-list", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-13T03:49:51Z", "updated_at": "2019-02-13T03:56:45Z", "closed_at": "2019-02-13T03:56:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\ni am developing a code that will do the following : \r\nChat UI html & JS <--> Python (Server & Client) <--> Server Chat API\r\n \r\ncould you please give me a clue on how to pass thru the message from Chat UI to Server Chat API\r\nand vice versa.\r\n\r\nhere's the code that we try, i think it migth be wrong.\r\n\r\nimport logging\r\nimport pprint\r\nimport json\r\nimport random\r\nfrom twisted.python import log\r\nfrom twisted.internet import reactor, ssl\r\nfrom stompest.protocol import commands, StompFrame, StompSpec\r\nfrom autobahn.twisted.websocket import WebSocketClientFactory, \\\r\n    WebSocketClientProtocol, \\\r\n    connectWS, WebSocketServerProtocol, WebSocketServerFactory, listenWS\r\n\r\nfrom basicauth import encode\r\n\r\nRECEIVE_CHANNEL = \"/user/chat.receive\"\r\nSEND_CHANNEL    = \"/chat/chat.send\"\r\n\r\nCHAT_API_WS_URL=\"wss://xxxxxxxx/xxxx/websocket\"\r\n\r\nCHAT_API_USERNAME=\"xxxx-test\"\r\nCHAT_API_PASSWORD=\"password\"\r\nencoded_str = encode(CHAT_API_USERNAME, CHAT_API_PASSWORD)\r\nheaders = {\r\n            'Authorization': encoded_str\r\n        }\r\n### Connect Message\r\nconnect_message = {\r\n                    \"type\" : \"CONNECT\",\r\n                    \"from\" : \"csantoso\",\r\n                    \"serviceUuid\": \"6b6e5fda-ed70-44df-baf3-109d3892c20f\",\r\n                    \"commandId\": 1,\r\n                    \"customData\": {\r\n                                \"userDefined12\": \"companyCode\",\r\n                                \"userDefined13\": \"email@example.com\",\r\n                                \"userDefined15\": \"ticketReference\"\r\n                        \r\n                    }\r\n                }\r\n\r\njson_connect_message = json.dumps(connect_message)\r\n\r\nclass MyServerProtocol(WebSocketServerProtocol):\r\n\r\n\r\n\r\n    def onConnect(self, request):\r\n        print(\"=========  MyServerProtocol :: onConnect =========\")\r\n        print(\"MyServerProtocol :: server Client connecting: {0}\".format(request.peer))\r\n        factory = WebSocketClientFactory(CHAT_API_WS_URL, headers = headers)\r\n        factory.protocol = MyClientProtocol\r\n\r\n        if factory.isSecure:\r\n            print(\"setting up SSL\")\r\n            contextFactory = ssl.ClientContextFactory()\r\n        else:\r\n            contextFactory = None\r\n\r\n        connectWS(factory, contextFactory)\r\n\r\n        self.client = MyClientProtocol()\r\n\r\n    def onOpen(self):\r\n        print(\"=========  MyServerProtocol :: onOpen =========\") \r\n        print(\"server WebSocket connection open.\")\r\n\r\n        payload = self.client.onOpen\r\n\r\n    def onMessage(self, payload, isBinary):\r\n        print(\"=========  MyServerProtocol :: onMessage =========\")\r\n        if isBinary:\r\n            print(\"server Binary message received: {0} bytes\".format(len(payload)))\r\n        else:\r\n            print(\"server Text message received: {0}\".format(payload.decode('utf8')))\r\n\r\n        # messageFrame = commands.send(SEND_CHANNEL, body=bytes(json_connect_message, \"utf-8\"))\r\n        # self.client.sendMessage(bytes(messageFrame))\r\n        # self.sendMessage(self.client.onMessage, isBinary)\r\n\r\n    def onClose(self, wasClean, code, reason):\r\n        print(\"=========  MyServerProtocol :: onClose =========\")\r\n        print(\"server WebSocket connection closed: {0}\".format(reason))\r\n\r\n\r\nclass MyClientProtocol(WebSocketClientProtocol):\r\n\r\n    def onConnect(self, response):\r\n        print(\"=========  MyClientProtocol :: onConnect =========\") \r\n        print(\"MyClientProtocol :: Server connected: {0}\".format(response.peer))\r\n        \r\n\r\n    def onOpen(self):\r\n        print(\"=========  MyClientProtocol :: onOpen =========\") \r\n        print(\"MyClientProtocol :: WebSocket connection open.\")\r\n\r\n        # Create a connect frame\r\n        connectStompFrame = commands.connect(login=None, passcode=None, headers=None, versions=None, host=None, heartBeats=None)\r\n        print(\"MyClientProtocol :: connectMsg 1:\\n%s\\n\" % pprint.pformat(connectStompFrame))\r\n        self.sendMessage(bytes(connectStompFrame))\r\n\r\n        # Subscribe\r\n        def subscribe_call():\r\n            print(\"MyClientProtocol :: Subscribing...\")\r\n            v = str(random.randint(0, 1000))\r\n            subscribeStompFrame, token = commands.subscribe(RECEIVE_CHANNEL, { \"id\": v})\r\n            self.sendMessage(bytes(subscribeStompFrame))\r\n        \r\n        # Subscribe\r\n        # def connect_call():\r\n        #     print(\"Sending Connect message...\")\r\n        #     print(\"connectMsg 2:\\n%s\\n\" % str(bytes(json_connect_message, \"utf-8\")))\r\n        #     messageFrame = commands.send(SEND_CHANNEL, body=bytes(json_connect_message, \"utf-8\"))\r\n        #     self.sendMessage(bytes(messageFrame))\r\n\r\n        # def hello():\r\n        #     self.sendMessage(u\"Hello, world!\".encode('utf8'))\r\n        #     self.sendMessage(b\"\\x00\\x01\\x03\\x04\", isBinary=True)\r\n        #     self.factory.reactor.callLater(4, hello)\r\n\r\n        # start sending messages every second ..\r\n        reactor.callLater(1, subscribe_call)\r\n        # reactor.callLater(3, connect_call)\r\n        # hello()\r\n\r\n    def onSend(self, json_connect_message):\r\n        messageFrame = commands.send(SEND_CHANNEL, body=bytes(json_connect_message, \"utf-8\"))\r\n        self.sendMessage(bytes(messageFrame))\r\n\r\n    def onMessage(self, payload, isBinary):\r\n        print(\"=========  MyClientProtocol :: onMessage =========\") \r\n\r\n        print(\"::::: payload :::: \",payload)\r\n\r\n        if isBinary:\r\n            print(\"MyClientProtocol :: Text message received : payload : \",payload)\r\n            print(\"MyClientProtocol :: Binary message received: {0} bytes\".format(len(payload)))\r\n        else:\r\n            print(\"MyClientProtocol :: Text message received :: start process\")\r\n            print(\"MyClientProtocol :: Text message received: {0}\".format(payload.decode('utf8')))\r\n            \r\n\r\n            if payload.decode('utf-8').startswith(\"CONNECTED\"):\r\n                return payload\r\n                # self.sendMessage(payload, isBinary)\r\n                # print(\"MyClientProtocol :: Connected!\")\r\n\r\n            \r\n\r\n    def onClose(self, wasClean, code, reason):\r\n        print(\"=========  MyClientProtocol :: onClose =========\") \r\n        print(\"MyClientProtocol :: WebSocket connection closed: {0}\".format(reason))\r\n\r\n\r\nif __name__ == '__main__':\r\n\r\n    import sys\r\n\r\n    from twisted.python import log\r\n    from twisted.internet import reactor\r\n\r\n    log.startLogging(sys.stdout)\r\n\r\n    serverFactory = WebSocketServerFactory(u\"ws://127.0.0.1:9000\")\r\n    serverFactory.protocol = MyServerProtocol\r\n\r\n    listenWS(serverFactory)\r\n\r\n    reactor.run()", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1108", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1108/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1108/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1108/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1108", "id": 408105795, "node_id": "MDU6SXNzdWU0MDgxMDU3OTU=", "number": 1108, "title": "keyword arguments don't work in python 2.7", "user": {"login": "dionytadema", "id": 2854243, "node_id": "MDQ6VXNlcjI4NTQyNDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2854243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dionytadema", "html_url": "https://github.com/dionytadema", "followers_url": "https://api.github.com/users/dionytadema/followers", "following_url": "https://api.github.com/users/dionytadema/following{/other_user}", "gists_url": "https://api.github.com/users/dionytadema/gists{/gist_id}", "starred_url": "https://api.github.com/users/dionytadema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dionytadema/subscriptions", "organizations_url": "https://api.github.com/users/dionytadema/orgs", "repos_url": "https://api.github.com/users/dionytadema/repos", "events_url": "https://api.github.com/users/dionytadema/events{/privacy}", "received_events_url": "https://api.github.com/users/dionytadema/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-08T11:09:50Z", "updated_at": "2019-03-07T16:38:14Z", "closed_at": "2019-03-07T16:38:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "running the complex rpc example in python 2.7 with autobahn 19.1.1 doesn't work.\r\n\r\nit seems like autobahn fails to convert the keyword arg keys to unicode:\r\n\r\n```\r\n2019-02-08T12:04:29+0100 session attached\r\n2019-02-08T12:04:29+0100 procedures registered\r\n2019-02-08T12:04:33+0100 Unhandled error in Deferred:\r\n2019-02-08T12:04:33+0100 Traceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/autobahn/wamp/websocket.py\", line 95, in onMessage\r\n    self._session.onMessage(msg)\r\n  File \"/usr/local/lib/python2.7/dist-packages/autobahn/wamp/protocol.py\", line 1012, in onMessage\r\n    txaio.add_callbacks(on_reply, success, error)\r\n  File \"/usr/local/lib/python2.7/dist-packages/txaio/tx.py\", line 506, in add_callbacks\r\n    future.addCallbacks(callback, errback)\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/defer.py\", line 310, in addCallbacks\r\n    self._runCallbacks()\r\n--- <exception caught here> ---\r\n  File \"/usr/local/lib/python2.7/dist-packages/twisted/internet/defer.py\", line 653, in _runCallbacks\r\n    current.result = callback(current.result, *args, **kw)\r\n  File \"/usr/local/lib/python2.7/dist-packages/autobahn/wamp/protocol.py\", line 965, in success\r\n    kwargs=res.kwresults)\r\n  File \"/usr/local/lib/python2.7/dist-packages/autobahn/wamp/message.py\", line 4471, in __init__\r\n    self.kwargs = _validate_kwargs(kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/autobahn/wamp/message.py\", line 318, in _validate_kwargs\r\n    raise ProtocolError(u\"{0}: invalid type {1} for key in WAMP kwargs ('{2}')\".format(message, type(k), k))\r\nautobahn.wamp.exception.ProtocolError: WAMP message invalid: invalid type <type 'str'> for key in WAMP kwargs ('ci')\r\n```\r\n\r\nam i doing something wrong or is this actually broken? as i assume that the example should run", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1106", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1106/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1106/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1106/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1106", "id": 406739619, "node_id": "MDU6SXNzdWU0MDY3Mzk2MTk=", "number": 1106, "title": "Auto-retry (regression bug in ApplicationRunner)", "user": {"login": "oddjobz", "id": 7396121, "node_id": "MDQ6VXNlcjczOTYxMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7396121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oddjobz", "html_url": "https://github.com/oddjobz", "followers_url": "https://api.github.com/users/oddjobz/followers", "following_url": "https://api.github.com/users/oddjobz/following{/other_user}", "gists_url": "https://api.github.com/users/oddjobz/gists{/gist_id}", "starred_url": "https://api.github.com/users/oddjobz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oddjobz/subscriptions", "organizations_url": "https://api.github.com/users/oddjobz/orgs", "repos_url": "https://api.github.com/users/oddjobz/repos", "events_url": "https://api.github.com/users/oddjobz/events{/privacy}", "received_events_url": "https://api.github.com/users/oddjobz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-05T11:30:02Z", "updated_at": "2019-05-07T07:05:14Z", "closed_at": "2019-05-07T07:05:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "When connecting with ApplicationRunner, if you just set \"auto_reconnect=True\" in \"run\", then \"max_retries=100\" in __init__, it complains because \"retry_delay_jitter\" is not defined. So;\r\n```\r\nrunner = ApplicationRunner(URL, REALM, max_retries=100)\r\nrunner.run(Test, auto_reconnect=True)\r\n```\r\nGives;\r\n```\r\n  File \"lib/python3.6/site-packages/twisted/application/internet.py\", line 520, in policy\r\n    return min(initialDelay * (factor ** attempt), maxDelay) + jitter()\r\n  File \"autobahn-python/autobahn/twisted/wamp.py\", line 361, in <lambda>\r\n    ('jitter', lambda: random.random() * self.retry_delay_jitter)]:\r\nbuiltins.TypeError: unsupported operand type(s) for *: 'float' and 'NoneType'\r\n```\r\nand;\r\n```\r\nrunner = ApplicationRunner(URL, REALM, max_retries=100, retry_delay_jitter=1)\r\nrunner.run(Test, auto_reconnect=True)\r\n```\r\nWorks Ok. The jitter field should provide a default value, \"random.random()\" according to the docs, but apparently it doesn't .. (?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1097", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1097/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1097/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1097/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1097", "id": 393758492, "node_id": "MDU6SXNzdWUzOTM3NTg0OTI=", "number": 1097, "title": "Segmentation fault using large iteration count in autobahn.wamp.auth.derive_key() ", "user": {"login": "spr0cketeer", "id": 25234883, "node_id": "MDQ6VXNlcjI1MjM0ODgz", "avatar_url": "https://avatars1.githubusercontent.com/u/25234883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spr0cketeer", "html_url": "https://github.com/spr0cketeer", "followers_url": "https://api.github.com/users/spr0cketeer/followers", "following_url": "https://api.github.com/users/spr0cketeer/following{/other_user}", "gists_url": "https://api.github.com/users/spr0cketeer/gists{/gist_id}", "starred_url": "https://api.github.com/users/spr0cketeer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spr0cketeer/subscriptions", "organizations_url": "https://api.github.com/users/spr0cketeer/orgs", "repos_url": "https://api.github.com/users/spr0cketeer/repos", "events_url": "https://api.github.com/users/spr0cketeer/events{/privacy}", "received_events_url": "https://api.github.com/users/spr0cketeer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1329876110, "node_id": "MDU6TGFiZWwxMzI5ODc2MTEw", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/PRIO%20HIGH", "name": "PRIO HIGH", "color": "0055d4", "default": false, "description": ""}, {"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-23T15:25:42Z", "updated_at": "2019-05-23T05:07:05Z", "closed_at": "2019-05-23T05:07:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": ">>> from autobahn.wamp import auth\r\n>>> auth.derive_key('x', 'x', 150000, 32)\r\n[1]    27137 segmentation fault (core dumped)  python\r\n\r\nThis happens on an autobahn client when using dynamic authentication in crossbar with Django as the backend - Django now using 150000 iterations in its pbkdf2 hasher https://github.com/django/django/blob/master/django/contrib/auth/hashers.py#L239\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1096", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1096/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1096/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1096/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1096", "id": 393639828, "node_id": "MDU6SXNzdWUzOTM2Mzk4Mjg=", "number": 1096, "title": "Calling \"wamp.session.get\" cause \"WAMP message serialization error\"", "user": {"login": "goldcode88", "id": 22571339, "node_id": "MDQ6VXNlcjIyNTcxMzM5", "avatar_url": "https://avatars3.githubusercontent.com/u/22571339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goldcode88", "html_url": "https://github.com/goldcode88", "followers_url": "https://api.github.com/users/goldcode88/followers", "following_url": "https://api.github.com/users/goldcode88/following{/other_user}", "gists_url": "https://api.github.com/users/goldcode88/gists{/gist_id}", "starred_url": "https://api.github.com/users/goldcode88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goldcode88/subscriptions", "organizations_url": "https://api.github.com/users/goldcode88/orgs", "repos_url": "https://api.github.com/users/goldcode88/repos", "events_url": "https://api.github.com/users/goldcode88/events{/privacy}", "received_events_url": "https://api.github.com/users/goldcode88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-22T03:46:36Z", "updated_at": "2018-12-23T00:01:54Z", "closed_at": "2018-12-23T00:01:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Crossbar version: v18.11.1\r\nPython version: 3.4\r\nOS version: Centos 7\r\n\r\nautobahn.js code:\r\n```\r\n    session.call(\"wamp.session.get\", [details.caller]).then(\r\n        res =>  {\r\n            console.log(\"res:\", res);\r\n        },\r\n        err => {\r\n            console.log(\"err:\", err);\r\n        });\r\n```\r\n\r\nIt will always cause crossbar error. It's a reproducible error.\r\n```\r\n2018-12-22T03:39:46+0000 [Router       2491] WAMP message serialization error: <autobahn.wamp.types.SessionDetails object at 0x7fcb60217750> is not JSON serializable\r\n2018-12-22T03:39:46+0000 [Router       2491] INTERNAL ERROR in router incoming message processing\r\n2018-12-22T03:39:46+0000 [Router       2491] \r\nTraceback (most recent call last):\r\n  File \"/root/penv/lib/python3.4/site-packages/twisted/internet/defer.py\", line 311, in addCallbacks\r\n    self._runCallbacks()\r\n  File \"/root/penv/lib/python3.4/site-packages/twisted/internet/defer.py\", line 654, in _runCallbacks\r\n    current.result = callback(current.result, *args, **kw)\r\n  File \"/root/penv/lib/python3.4/site-packages/autobahn/wamp/protocol.py\", line 971, in success\r\n    self._transport.send(reply)\r\n  File \"/root/penv/lib/python3.4/site-packages/crossbar/router/session.py\", line 213, in send\r\n    self._router.process(self._session, msg)\r\n--- <exception caught here> ---\r\n  File \"/root/penv/lib/python3.4/site-packages/crossbar/router/router.py\", line 284, in process\r\n    self._dealer.processYield(session, msg)\r\n  File \"/root/penv/lib/python3.4/site-packages/crossbar/router/dealer.py\", line 1133, in processYield\r\n    self._router.send(invocation_request.caller, reply)\r\n  File \"/root/penv/lib/python3.4/site-packages/crossbar/router/router.py\", line 240, in send\r\n    session._transport.send(msg)\r\n  File \"/root/penv/lib/python3.4/site-packages/autobahn/wamp/websocket.py\", line 123, in send\r\n    raise SerializationError(u\"WAMP message serialization error: {0}\".format(e))\r\nautobahn.wamp.exception.SerializationError: WAMP message serialization error: <autobahn.wamp.types.SessionDetails object at 0x7fcb60217750> is not JSON serializable\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1092", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1092/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1092/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1092/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1092", "id": 390762704, "node_id": "MDU6SXNzdWUzOTA3NjI3MDQ=", "number": 1092, "title": "Decorator returning None", "user": {"login": "Paradoxeuh", "id": 7406885, "node_id": "MDQ6VXNlcjc0MDY4ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7406885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Paradoxeuh", "html_url": "https://github.com/Paradoxeuh", "followers_url": "https://api.github.com/users/Paradoxeuh/followers", "following_url": "https://api.github.com/users/Paradoxeuh/following{/other_user}", "gists_url": "https://api.github.com/users/Paradoxeuh/gists{/gist_id}", "starred_url": "https://api.github.com/users/Paradoxeuh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Paradoxeuh/subscriptions", "organizations_url": "https://api.github.com/users/Paradoxeuh/orgs", "repos_url": "https://api.github.com/users/Paradoxeuh/repos", "events_url": "https://api.github.com/users/Paradoxeuh/events{/privacy}", "received_events_url": "https://api.github.com/users/Paradoxeuh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-13T16:39:34Z", "updated_at": "2018-12-17T16:40:33Z", "closed_at": "2018-12-17T16:40:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am not sure it is a bug but I would like to understand why as soon as I register a function, it becomes impossible to access it. Here is a simple example\r\n\r\n```\r\n@comp.register(\"com.toto\")\r\ndef toto():\r\n    print(\"toto\")\r\n\r\nprint(toto) # returns None\r\n```\r\n\r\nWhy does toto disappear to become None? Is it intended and if yes why ? I'm asking that as I write some pytest and I would like to test functions without the crossbar.io stack in a first approach.\r\nHow broken would it be to use wraps from functools to be able to unwrap original functions ?\r\n\r\nThank you for this amazing lib !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1088", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1088/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1088/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1088/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1088", "id": 387266802, "node_id": "MDU6SXNzdWUzODcyNjY4MDI=", "number": 1088, "title": "Pausing after session establishment - Feature request for Component.create_session()", "user": {"login": "haizaar", "id": 58201, "node_id": "MDQ6VXNlcjU4MjAx", "avatar_url": "https://avatars1.githubusercontent.com/u/58201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haizaar", "html_url": "https://github.com/haizaar", "followers_url": "https://api.github.com/users/haizaar/followers", "following_url": "https://api.github.com/users/haizaar/following{/other_user}", "gists_url": "https://api.github.com/users/haizaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/haizaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haizaar/subscriptions", "organizations_url": "https://api.github.com/users/haizaar/orgs", "repos_url": "https://api.github.com/users/haizaar/repos", "events_url": "https://api.github.com/users/haizaar/events{/privacy}", "received_events_url": "https://api.github.com/users/haizaar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641228806, "node_id": "MDU6TGFiZWw2NDEyMjg4MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/not-an-issue-but-a-question-use-our-mailing-list", "name": "not-an-issue-but-a-question-use-our-mailing-list", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-04T12:39:20Z", "updated_at": "2018-12-05T08:26:31Z", "closed_at": "2018-12-04T16:17:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Good day,\r\n\r\nI have a project where I would like to to bridge REST to WAMP. I'm using Python 3.7 with [aiohttp](https://aiohttp.readthedocs.io/en/stable/web.html#aiohttp-web).\r\n\r\nIdeally, I would like to start an authbahn component, wait till the session is established, then stop the loop, pass the session object to aiohttp App, and start the loop again (with HTTP server already hooked in). Something like this:\r\n```python\r\nimport asyncio\r\nfrom autobahn.asyncio.component import Component\r\nfrom aiohttp import web\r\n\r\nasync def main():\r\n    loop = asyncio.get_event_loop()\r\n    app = web.Application(loop=loop)\r\n    \r\n    wamp_session = await Coponent(...).create_session(loop=loop)  # <-- This is the missing method\r\n    app[\"wamp_session\"] = wamp_session\r\n        \r\n    runner = web.AppRunner(app)\r\n    await runner.setup()\r\n    site = web.TCPSite(runner, 'localhost', 8080)\r\n    await site.start()\r\n    loop.run_forever()\r\n\r\nif __name__ == \"__main__\":\r\n    asyncio.run(main())\r\n```\r\n\r\nThen I can use `wamp_session` from my HTTP request handlers, for example, to pass RPC results in web responses.\r\n\r\nI can think of how it can be done with the current autobahn API, but it seems unclean/unnatural.\r\n\r\nFor example I can stop the loop from component's main function:\r\n```python\r\n    loop = asyncio.get_event_loop()\r\n    wamp_session = await Coponent(main=lambda: loop.stop()).start(loop=loop)\r\n    ...\r\n```\r\nOr I can start the HTTP server from the main function.\r\n\r\nAgain, it will work, but I think there should be a cleaner way. What do you think? Am I missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1085", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1085/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1085/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1085/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1085", "id": 383495236, "node_id": "MDU6SXNzdWUzODM0OTUyMzY=", "number": 1085, "title": "How to make a wamp call from another thread", "user": {"login": "dionytadema", "id": 2854243, "node_id": "MDQ6VXNlcjI4NTQyNDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2854243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dionytadema", "html_url": "https://github.com/dionytadema", "followers_url": "https://api.github.com/users/dionytadema/followers", "following_url": "https://api.github.com/users/dionytadema/following{/other_user}", "gists_url": "https://api.github.com/users/dionytadema/gists{/gist_id}", "starred_url": "https://api.github.com/users/dionytadema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dionytadema/subscriptions", "organizations_url": "https://api.github.com/users/dionytadema/orgs", "repos_url": "https://api.github.com/users/dionytadema/repos", "events_url": "https://api.github.com/users/dionytadema/events{/privacy}", "received_events_url": "https://api.github.com/users/dionytadema/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641228806, "node_id": "MDU6TGFiZWw2NDEyMjg4MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/not-an-issue-but-a-question-use-our-mailing-list", "name": "not-an-issue-but-a-question-use-our-mailing-list", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-22T11:31:52Z", "updated_at": "2018-11-22T11:45:53Z", "closed_at": "2018-11-22T11:45:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "i read somewhere that wamp functions are not thread save and should be called with `reactor.callFromThread`\r\nis this the case for all wamp functions? (call register subscribe and publish)\r\nand if so how do i add a callback to a call, as `reactor.callFromThread` nor `blockingCallFromThread` return a deferred, can i somehow use the result from the blocking call or do i need to use a closure around the call and give that to `reactor.callFromThread`\r\n\r\nas in my current implementation i run into issue #555 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1082", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1082/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1082/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1082/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1082", "id": 381328091, "node_id": "MDU6SXNzdWUzODEzMjgwOTE=", "number": 1082, "title": "autobahn 18.11.1 and/or txaio 18.8.1 hangs", "user": {"login": "kneufeld", "id": 786738, "node_id": "MDQ6VXNlcjc4NjczOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/786738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kneufeld", "html_url": "https://github.com/kneufeld", "followers_url": "https://api.github.com/users/kneufeld/followers", "following_url": "https://api.github.com/users/kneufeld/following{/other_user}", "gists_url": "https://api.github.com/users/kneufeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/kneufeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kneufeld/subscriptions", "organizations_url": "https://api.github.com/users/kneufeld/orgs", "repos_url": "https://api.github.com/users/kneufeld/repos", "events_url": "https://api.github.com/users/kneufeld/events{/privacy}", "received_events_url": "https://api.github.com/users/kneufeld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-15T20:33:13Z", "updated_at": "2018-11-21T08:24:41Z", "closed_at": "2018-11-20T22:55:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The exact same code works fine with `autobahn==18.4.1` `txaio==2.10.0`. @meejah helped me write this so you know it's good \ud83d\ude09 \r\n\r\n```python\r\n\r\nasync def main(loop):\r\n    f = asyncio.Future()\r\n\r\n    comp = Component(\r\n        transports=opts.crossbar_url,\r\n        realm=opts.crossbar_realm,\r\n    )\r\n    comp.loop = loop\r\n\r\n    comp.start()\r\n    comp.on('join', lambda s, d: f.set_result(None))\r\n\r\n    do_work(comp)\r\n\r\n    await f # don't exit until we connect to crossbar\r\n\r\n...\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete( main(loop) )\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1079", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1079/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1079/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1079/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1079", "id": 378707036, "node_id": "MDU6SXNzdWUzNzg3MDcwMzY=", "number": 1079, "title": "unregisterProducer raises \"Exception: not implemented\" after update to autobahn==18.11.1", "user": {"login": "mchfrnc", "id": 5204834, "node_id": "MDQ6VXNlcjUyMDQ4MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5204834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mchfrnc", "html_url": "https://github.com/mchfrnc", "followers_url": "https://api.github.com/users/mchfrnc/followers", "following_url": "https://api.github.com/users/mchfrnc/following{/other_user}", "gists_url": "https://api.github.com/users/mchfrnc/gists{/gist_id}", "starred_url": "https://api.github.com/users/mchfrnc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mchfrnc/subscriptions", "organizations_url": "https://api.github.com/users/mchfrnc/orgs", "repos_url": "https://api.github.com/users/mchfrnc/repos", "events_url": "https://api.github.com/users/mchfrnc/events{/privacy}", "received_events_url": "https://api.github.com/users/mchfrnc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-08T12:19:03Z", "updated_at": "2018-11-22T06:19:35Z", "closed_at": "2018-11-22T06:19:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installation of the newest version of autobahn my script started throwing an exception, which was not present when previous version of library was used (autobahn==18.10.1). I don't know if it matters, but I'm running it in a Docker container.\r\n\r\nHere is a simplified version the code:\r\n\r\n**client.py**\r\n```\r\nimport asyncio\r\nimport json\r\n\r\nfrom autobahn.asyncio.websocket import WebSocketClientProtocol, WebSocketClientFactory\r\n\r\n\r\nclass MyServerProtocol(WebSocketClientProtocol):\r\n    async def onConnect(self, request):\r\n        print(f'Server connected: {request.peer}')\r\n\r\n    async def onOpen(self):\r\n        self.sendMessage(\r\n            json.dumps({\"action\": \"getversion\", \"data\": {}}).encode()\r\n        )\r\n\r\n    async def onMessage(self, payload, isBinary):\r\n        res = json.loads(payload.decode())\r\n        print(res['response'])\r\n\r\n    async def onClose(self, wasClean, code, reason):\r\n        loop = asyncio.get_event_loop()\r\n        loop.stop()\r\n\r\n\r\nif __name__ == '__main__':\r\n    factory = WebSocketClientFactory(\"ws://127.0.0.1:9000\")\r\n    factory.protocol = MyServerProtocol\r\n\r\n    loop = asyncio.get_event_loop()\r\n    loop.set_debug(1)\r\n    try:\r\n        coro = loop.create_connection(factory, '127.0.0.1', '9000')\r\n        transport, client_protocol = loop.run_until_complete(coro)\r\n        loop.run_forever()\r\n    finally:\r\n        loop.close()\r\n```\r\n\r\n**server.py**\r\n```\r\nimport asyncio\r\nimport json\r\n\r\nfrom autobahn.asyncio.websocket import WebSocketServerFactory, WebSocketServerProtocol\r\n\r\n\r\nclass MyServerProtocol(WebSocketServerProtocol):\r\n\r\n    async def onConnect(self, request):\r\n        print(f'[{request.peer} -> server] Connecting...')\r\n\r\n    async def onOpen(self):\r\n        print(f'Connection open {self.peer}')\r\n\r\n    async def onClose(self, wasClean, code, reason):\r\n        print(f'Connection {self.peer} closed: {reason} (code: {code})')\r\n\r\n    async def onMessage(self, payload, isBinary):\r\n        self._send_response({'response_for': 'getversion', 'response': '1.0'})\r\n        self.sendClose()\r\n\r\n    def _send_response(self, response):\r\n        encoded_response = json.dumps(response).encode('utf8')\r\n        self.sendMessage(encoded_response, fragmentSize=len(encoded_response))\r\n\r\n\r\ndef main():\r\n    factory = WebSocketServerFactory(u\"ws://127.0.0.1:9000\")\r\n    factory.protocol = MyServerProtocol\r\n\r\n    loop = asyncio.get_event_loop()\r\n    loop.set_debug(1)\r\n    coro = loop.create_server(factory, '0.0.0.0', 9000)\r\n    server = loop.run_until_complete(coro)\r\n\r\n    try:\r\n        loop.run_forever()\r\n    finally:\r\n        server.close()\r\n        loop.close()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\nAnd below you can find a comaprision what happens, when I run it:\r\n\r\n1) with autobahn==18.10.1\r\n\r\n> user@f65a32fad83a:~$ pip freeze\r\n> aioprocessing==1.0.1\r\n> APScheduler==3.5.3\r\n> atomicwrites==1.2.1\r\n> attrs==18.2.0\r\n> autobahn==18.10.1\r\n> certifi==2018.10.15\r\n> chardet==3.0.4\r\n> coverage==4.5.1\r\n> docker==3.5.1\r\n> docker-pycreds==0.3.0\r\n> docopt==0.6.2\r\n> idna==2.7\r\n> more-itertools==4.3.0\r\n> pluggy==0.8.0\r\n> py==1.7.0\r\n> pytest==3.10.0\r\n> pytest-asyncio==0.9.0\r\n> pytest-cov==2.6.0\r\n> pytest-mock==1.10.0\r\n> pytz==2018.7\r\n> PyYAML==3.13\r\n> raven==6.9.0\r\n> requests==2.20.0\r\n> six==1.11.0\r\n> SQLAlchemy==1.2.13\r\n> txaio==18.8.1\r\n> tzlocal==1.5.1\r\n> urllib3==1.24.1\r\n> websocket-client==0.54.0\r\n> \r\n> Client side:\r\n> user@f65a32fad83a:\\~$ python path/to/client.py\r\n> Server connected: tcp:127.0.0.1:9000\r\n> 1.0\r\n> user@f65a32fad83a:~$\r\n> \r\n> Server side:\r\n> user@f65a32fad83a:~$ python path/to/server.py\r\n> [tcp:127.0.0.1:59440 -> server] Connecting...\r\n> Connection open tcp:127.0.0.1:59440\r\n> Connection tcp:127.0.0.1:59440 closed: None (code: 1000)\r\n\r\n2) with autobahn==18.11.1\r\n\r\n> user@761cfe8b6b2e:~$ pip freeze\r\n> aioprocessing==1.0.1\r\n> APScheduler==3.5.3\r\n> atomicwrites==1.2.1\r\n> attrs==18.2.0\r\n> autobahn==18.11.1\r\n> certifi==2018.10.15\r\n> chardet==3.0.4\r\n> coverage==4.5.1\r\n> docker==3.5.1\r\n> docker-pycreds==0.3.0\r\n> docopt==0.6.2\r\n> idna==2.7\r\n> more-itertools==4.3.0\r\n> pluggy==0.8.0\r\n> py==1.7.0\r\n> pytest==3.10.0\r\n> pytest-asyncio==0.9.0\r\n> pytest-cov==2.6.0\r\n> pytest-mock==1.10.0\r\n> pytz==2018.7\r\n> PyYAML==3.13\r\n> raven==6.9.0\r\n> requests==2.20.0\r\n> six==1.11.0\r\n> SQLAlchemy==1.2.13\r\n> txaio==18.8.1\r\n> tzlocal==1.5.1\r\n> urllib3==1.24.1\r\n> websocket-client==0.54.0\r\n> \r\n> Client side:\r\n> user@761cfe8b6b2e:~$ python path/to/client.py\r\n> Server connected: tcp:127.0.0.1:9000\r\n> 1.0\r\n> <Python is not finishing execution until server process is not terminated>\r\n> \r\n> \r\n> Server side:\r\n> user@761cfe8b6b2e:~$ python path/to/server.py\r\n> [tcp:127.0.0.1:59472 -> server] Connecting...\r\n> Connection open tcp:127.0.0.1:59472\r\n> Exception in callback WebSocketAdapterProtocol._consume.<locals>.process(<Future finis...socket.py:108>) at /usr/local/lib/python3.6/site-packages/autobahn/asyncio/websocket.py:110\r\n> handle: <Handle WebSocketAdapterProtocol._consume.<locals>.process(<Future finis...socket.py:108>) at /usr/local/lib/python3.6/site-packages/autobahn/asyncio/websocket.py:110 created at /usr/local/lib/python3.6/site-packages/autobahn/asyncio/websocket.py:122>\r\n> source_traceback: Object created at (most recent call last):\r\n>   File \"path/to/server.py\", line 45, in <module>\r\n>     main()\r\n>   File \"path/to/server.py\", line 38, in main\r\n>     loop.run_forever()\r\n>   File \"/usr/local/lib/python3.6/asyncio/base_events.py\", line 422, in run_forever\r\n>     self._run_once()\r\n>   File \"/usr/local/lib/python3.6/asyncio/base_events.py\", line 1426, in _run_once\r\n>     handle._run()\r\n>   File \"/usr/local/lib/python3.6/asyncio/events.py\", line 145, in _run\r\n>     self._callback(*self._args)\r\n>   File \"/usr/local/lib/python3.6/asyncio/selector_events.py\", line 734, in _read_ready\r\n>     self._protocol.data_received(data)\r\n>   File \"/usr/local/lib/python3.6/site-packages/autobahn/asyncio/websocket.py\", line 122, in data_received\r\n>     self.waiter.set_result(None)\r\n> Traceback (most recent call last):\r\n>   File \"/usr/local/lib/python3.6/asyncio/events.py\", line 145, in _run\r\n>     self._callback(*self._args)\r\n>   File \"/usr/local/lib/python3.6/site-packages/autobahn/asyncio/websocket.py\", line 114, in process\r\n>     self._dataReceived(data)\r\n>   File \"/usr/local/lib/python3.6/site-packages/autobahn/websocket/protocol.py\", line 1182, in _dataReceived\r\n>     self.consumeData()\r\n>   File \"/usr/local/lib/python3.6/site-packages/autobahn/websocket/protocol.py\", line 1194, in consumeData\r\n>     while self.processData() and self.state != WebSocketProtocol.STATE_CLOSED:\r\n>   File \"/usr/local/lib/python3.6/site-packages/autobahn/websocket/protocol.py\", line 1560, in processData\r\n>     fr = self.onFrameEnd()\r\n>   File \"/usr/local/lib/python3.6/site-packages/autobahn/websocket/protocol.py\", line 1656, in onFrameEnd\r\n>     self.processControlFrame()\r\n>   File \"/usr/local/lib/python3.6/site-packages/autobahn/websocket/protocol.py\", line 1706, in processControlFrame\r\n>     if self.onCloseFrame(code, reasonRaw):\r\n>   File \"/usr/local/lib/python3.6/site-packages/autobahn/websocket/protocol.py\", line 730, in onCloseFrame\r\n>     self.dropConnection(abort=True)\r\n>   File \"/usr/local/lib/python3.6/site-packages/autobahn/websocket/protocol.py\", line 841, in dropConnection\r\n>     self.unregisterProducer()\r\n>   File \"/usr/local/lib/python3.6/site-packages/autobahn/asyncio/websocket.py\", line 196, in unregisterProducer\r\n>     raise Exception(\"not implemented\")\r\n> Exception: not implemented\r\n\r\nMy Python version is 3.6.6.\r\n\r\nI've found this issue: https://github.com/crossbario/autobahn-python/issues/875 and I think it might be related to my problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1078", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1078/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1078/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1078/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1078", "id": 378241982, "node_id": "MDU6SXNzdWUzNzgyNDE5ODI=", "number": 1078, "title": "Error handling with multiple concurrent connections", "user": {"login": "oddjobz", "id": 7396121, "node_id": "MDQ6VXNlcjczOTYxMjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7396121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oddjobz", "html_url": "https://github.com/oddjobz", "followers_url": "https://api.github.com/users/oddjobz/followers", "following_url": "https://api.github.com/users/oddjobz/following{/other_user}", "gists_url": "https://api.github.com/users/oddjobz/gists{/gist_id}", "starred_url": "https://api.github.com/users/oddjobz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oddjobz/subscriptions", "organizations_url": "https://api.github.com/users/oddjobz/orgs", "repos_url": "https://api.github.com/users/oddjobz/repos", "events_url": "https://api.github.com/users/oddjobz/events{/privacy}", "received_events_url": "https://api.github.com/users/oddjobz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2018-11-07T11:07:05Z", "updated_at": "2018-11-22T04:13:11Z", "closed_at": "2018-11-10T18:02:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "@meejah as per our discussion on slack; if you have a WAMP client that runs multiple concurrent connections via the Component interface, and one of those connections errors, AND in the event you have retries turned off, an exception makes it's way back up the chain causing 'run' to exit. So if you are for example connecting to three different Crossbar's, and ONE of the connections to one of the Crossbar's fails, the entire app will fail. Sample code;\r\n```python\r\n#!/usr/bin/env python3\r\n\r\nimport sys\r\nfrom autobahn.asyncio.component import Component\r\nfrom autobahn.asyncio.component import run\r\nfrom autobahn.wamp.types import SubscribeOptions\r\nimport txaio\r\ntxaio.use_asyncio()\r\n#\r\nlog = txaio.make_logger()\r\nif sys.argv[-1] == '--debug':\r\n    sys.argv.pop()\r\n    txaio.start_logging(level='debug')\r\nelse:\r\n    txaio.start_logging(level='info')\r\n#\r\n#\r\nrouters = []\r\nrouter_definitions = [\r\n    [\r\n        {'name': 'instance1', 'url': 'ws://localhost:8091/ws', 'realm': 'realm1'},\r\n        {'name': 'instance2', 'url': 'ws://localhost:8092/ws', 'realm': 'realm1'},\r\n        {'name': 'instance3', 'url': 'ws://localhost:8093/ws', 'realm': 'realm1'},\r\n    ]\r\n]\r\n\r\n\r\nclass RouterComponent(Component):\r\n\r\n    def __init__(self, router):\r\n\r\n        self._router = router\r\n        self._session = None\r\n        transports = {\r\n            'url': router['url'],\r\n            'max_retries': 0\r\n        }\r\n        super().__init__(\r\n            transports=[transports],\r\n            realm=router['realm']\r\n        )\r\n\r\n    def startup(self):\r\n        self.on_join(self.on_connection_join)\r\n        self.on_leave(self.on_connection_leave)\r\n        return self\r\n\r\n    @property\r\n    def name(self):\r\n        return self._router['name']\r\n\r\n    async def on_connection_join(self, session, details):\r\n\r\n        self._session = session\r\n        options = SubscribeOptions(match='exact', details=True)\r\n        await session.subscribe(self.subscription_on_create, 'wamp.subscription.on_create', options)\r\n        await session.subscribe(self.subscription_on_subscribe, 'wamp.subscription.on_subscribe', options)\r\n        await session.subscribe(self.subscription_on_unsubscribe, 'wamp.subscription.on_unsubscribe', options)\r\n        await session.subscribe(self.subscription_on_delete, 'wamp.subscription.on_delete', options)\r\n\r\n    async def on_connection_leave(self, session, details):\r\n        log.info(f'on_connection_leave: [{self.name}]: {details}')\r\n\r\n    async def subscription_on_data(self, data, details=None):\r\n        log.info(f'subscription_on_data [{self.name}]: {data} :: {details.topic}')\r\n\r\n    async def subscription_on_create(self, session_id, sub_details, details=None):\r\n        log.debug(f'subscription_on_create [{self.name}]: session_id={session_id} :: id={sub_details[\"id\"]} uri={sub_details[\"uri\"]}')\r\n\r\n    async def subscription_on_subscribe(self, session_id, sub_id, details):\r\n        log.debug(f'subscription_on_subscribe [{self.name}]: session={session_id} :: sub_id={sub_id}')\r\n\r\n    async def subscription_on_unsubscribe(self, session_id, sub_id, details):\r\n        log.debug(f'subscription_on_unsubscribe [{self.name}]: session={session_id} :: sub_id={sub_id}')\r\n\r\n    async def subscription_on_delete(self, session_id, sub_id, details=None):\r\n        log.debug(f'subscription_on_delete: session={session_id} :: sub_id={sub_id}')\r\n\r\n\r\nif __name__ == \"__main__\":\r\n\r\n    for router in router_definitions[0]:\r\n        component = RouterComponent(router).startup()\r\n        routers.append(component)\r\n\r\n    run(routers)\r\n```\r\nSample output, run application, then Ctrl+C in one of the crossbar consoles;\r\n```python\r\n$ ./substest.py\r\n2018-11-07T11:04:15 connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\n2018-11-07T11:04:15 connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\n2018-11-07T11:04:15 connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\n2018-11-07T11:04:18 session leaving 'wamp.close.transport_lost'\r\n2018-11-07T11:04:18 on_connection_leave: [instance2]: CloseDetails(reason=<wamp.close.transport_lost>, message='WAMP transport was lost without closing the session before')\r\n2018-11-07T11:04:18 Connection failed: TransportLost: failed to complete connection\r\n2018-11-07T11:04:18 Component failed: Exhausted all transport connect attempts\r\n2018-11-07T11:04:18 Component '<__main__.RouterComponent object at 0x7f51278eab00>' error: RuntimeError: Component failed: Exhausted all transport connect attempts\r\n```\r\n**Specific use-case**\r\n\r\nI want to be able to connect to a dynamic list of Crossbar servers, in the instance one should fail, I want to remove it from the list and potentially add a new one. Currently I don't get the chance because the entire app exits on an exception.\r\n\r\n... I think the exception stems from wamp/component.py here;\r\n```python\r\n    dl = []\r\n    for comp in components:\r\n        d = component_start(comp)\r\n        dl.append(d)\r\n    done_d = txaio.gather(dl, consume_exceptions=False)\r\n\r\n    def all_done(arg):\r\n        log.debug(\"All components ended; stopping reactor\")\r\n        done_callback(reactor, arg)\r\n```\r\ni.e. the consume_exceptions = False", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1077", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1077/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1077/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1077/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1077", "id": 378037138, "node_id": "MDU6SXNzdWUzNzgwMzcxMzg=", "number": 1077, "title": "After Component.stop() should be able to call .start() again", "user": {"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-06T21:18:21Z", "updated_at": "2018-12-17T16:39:17Z", "closed_at": "2018-12-17T16:39:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://github.com/crossbario/autobahn-python/pull/1075#issuecomment-436391564 for context. The `_done_f` future is never reset to `None` so effectively `start()` can only be called once tit seems. After a `stop()` has completed it should be possible to call `start()` again.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1068", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1068/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1068/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1068/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1068", "id": 373013971, "node_id": "MDU6SXNzdWUzNzMwMTM5NzE=", "number": 1068, "title": "WebSocketServerProtocol instance leak", "user": {"login": "dimitar-kunchev", "id": 21059739, "node_id": "MDQ6VXNlcjIxMDU5NzM5", "avatar_url": "https://avatars2.githubusercontent.com/u/21059739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dimitar-kunchev", "html_url": "https://github.com/dimitar-kunchev", "followers_url": "https://api.github.com/users/dimitar-kunchev/followers", "following_url": "https://api.github.com/users/dimitar-kunchev/following{/other_user}", "gists_url": "https://api.github.com/users/dimitar-kunchev/gists{/gist_id}", "starred_url": "https://api.github.com/users/dimitar-kunchev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dimitar-kunchev/subscriptions", "organizations_url": "https://api.github.com/users/dimitar-kunchev/orgs", "repos_url": "https://api.github.com/users/dimitar-kunchev/repos", "events_url": "https://api.github.com/users/dimitar-kunchev/events{/privacy}", "received_events_url": "https://api.github.com/users/dimitar-kunchev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-23T13:56:33Z", "updated_at": "2018-11-22T06:46:20Z", "closed_at": "2018-11-22T06:46:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I belive there might be a leak in twisted websocket implementation - the instances of WebSocketServerProtocol subclass are never garbage collected. I have reproduced that with the echo example by repeatedly connecting and disconnecting clients and observing the used memory on the server process. Also adding __del__ implementation on the server protocol instance and printing calls indicates it is never called.\r\nSimilar test with twisted Protocol subclass and Factory works fine - the instances are deleted when connection is closed. So I suppose the problem comes with the WebSocket implementation. Unfortunately I have not been able to identify what reference keeps them alive.\r\nTesting with autobahn 18.10.1, python 3.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1065", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1065/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1065/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1065/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1065", "id": 370584543, "node_id": "MDU6SXNzdWUzNzA1ODQ1NDM=", "number": 1065, "title": "Error thrown on connection Lost", "user": {"login": "maheshnayer", "id": 32792212, "node_id": "MDQ6VXNlcjMyNzkyMjEy", "avatar_url": "https://avatars2.githubusercontent.com/u/32792212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maheshnayer", "html_url": "https://github.com/maheshnayer", "followers_url": "https://api.github.com/users/maheshnayer/followers", "following_url": "https://api.github.com/users/maheshnayer/following{/other_user}", "gists_url": "https://api.github.com/users/maheshnayer/gists{/gist_id}", "starred_url": "https://api.github.com/users/maheshnayer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maheshnayer/subscriptions", "organizations_url": "https://api.github.com/users/maheshnayer/orgs", "repos_url": "https://api.github.com/users/maheshnayer/repos", "events_url": "https://api.github.com/users/maheshnayer/events{/privacy}", "received_events_url": "https://api.github.com/users/maheshnayer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-16T12:21:23Z", "updated_at": "2018-10-16T17:33:23Z", "closed_at": "2018-10-16T14:19:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please find below the stack trace. I have a websocket server in asyncio running behind nginx. Any help appreciated. Thank you\r\n\r\n2018-10-16 17:47:56,882 - ERROR - Exception in callback _SelectorTransport._call_connection_lost(None)\r\nhandle: <Handle _SelectorTransport._call_connection_lost(None)>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.5/asyncio/events.py\", line 125, in _run\r\n    self._callback(*self._args)\r\n  File \"/usr/lib/python3.5/asyncio/selector_events.py\", line 606, in _call_connection_lost\r\n    self._protocol.connection_lost(exc)\r\n  File \"/home/ubuntu/streak_streamer/venv/lib/python3.5/site-packages/autobahn/asyncio/websocket.py\", line 100, in connection_lost\r\n    self._connectionLost(exc)\r\n  File \"/home/ubuntu/streak_streamer/venv/lib/python3.5/site-packages/autobahn/websocket/protocol.py\", line 2473, in _connectionLost\r\n    WebSocketProtocol._connectionLost(self, reason)\r\n  File \"/home/ubuntu/streak_streamer/venv/lib/python3.5/site-packages/autobahn/websocket/protocol.py\", line 1096, in _connectionLost\r\n    reason_string = _maybe_tls_reason(reason.value)\r\nAttributeError: 'NoneType' object has no attribute 'value'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1064", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1064/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1064/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1064/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1064", "id": 370458946, "node_id": "MDU6SXNzdWUzNzA0NTg5NDY=", "number": 1064, "title": "dropConnection appears to leave connections around", "user": {"login": "meejah", "id": 145599, "node_id": "MDQ6VXNlcjE0NTU5OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meejah", "html_url": "https://github.com/meejah", "followers_url": "https://api.github.com/users/meejah/followers", "following_url": "https://api.github.com/users/meejah/following{/other_user}", "gists_url": "https://api.github.com/users/meejah/gists{/gist_id}", "starred_url": "https://api.github.com/users/meejah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meejah/subscriptions", "organizations_url": "https://api.github.com/users/meejah/orgs", "repos_url": "https://api.github.com/users/meejah/repos", "events_url": "https://api.github.com/users/meejah/events{/privacy}", "received_events_url": "https://api.github.com/users/meejah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 295360406, "node_id": "MDU6TGFiZWwyOTUzNjA0MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/needs-investigation", "name": "needs-investigation", "color": "ffff00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-16T06:33:35Z", "updated_at": "2018-10-28T12:50:10Z", "closed_at": "2018-10-28T12:50:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Found by ashleyk_ and reported in IRC.\r\n\r\nIn `failHandshake` in `autobahn/websocket/protocol.py` we call `self.dropConnection(abort=False)`. This then ultimately calls `transport.loseConnection()`. If using TLS, these connections don't actually close (in Twisted at least).\r\n\r\nAn easy fix is to pass `abort=True` at `protocol.py:3020`. Could even be a Twisted issue..`ashleyk_` had made an example: https://paste.debian.net/plain/1047301", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1063", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1063/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1063/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1063/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1063", "id": 370147899, "node_id": "MDU6SXNzdWUzNzAxNDc4OTk=", "number": 1063, "title": "Authentication URL always has details passed regardless of RegisterOptions", "user": {"login": "haizaar", "id": 58201, "node_id": "MDQ6VXNlcjU4MjAx", "avatar_url": "https://avatars1.githubusercontent.com/u/58201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haizaar", "html_url": "https://github.com/haizaar", "followers_url": "https://api.github.com/users/haizaar/followers", "following_url": "https://api.github.com/users/haizaar/following{/other_user}", "gists_url": "https://api.github.com/users/haizaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/haizaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haizaar/subscriptions", "organizations_url": "https://api.github.com/users/haizaar/orgs", "repos_url": "https://api.github.com/users/haizaar/repos", "events_url": "https://api.github.com/users/haizaar/events{/privacy}", "received_events_url": "https://api.github.com/users/haizaar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 91720867, "node_id": "MDU6TGFiZWw5MTcyMDg2Nw==", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/docs", "name": "docs", "color": "fbca04", "default": false, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-10-15T12:50:56Z", "updated_at": "2018-11-22T06:47:07Z", "closed_at": "2018-11-22T06:47:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider the following snippet:\r\n```python\r\n@component.register(\r\n    \"com.myapp.authenticate\",\r\n    # FIXME: details are passed by default. Why?\r\n    # options=RegisterOptions(details_arg=\"details\"),\r\n)\r\nasync def authenticate(realm, authid, details):\r\n```\r\n`com.myapp.authenticate` is registered as authenticator in crossbar:\r\n```yaml\r\n  transports:\r\n  # Main transport - requires authentication\r\n  - type: websocket\r\n    endpoint:\r\n      type: tcp\r\n      port: 8080\r\n    auth:\r\n      ticket:\r\n        type: dynamic\r\n        authenticator: com.myapp.authenticate\r\n        authenticator-realm: auth-realm\r\n```\r\n\r\n`com.myapp.authenticate` is just a regular RPC, but for some reason `details` are always passed. For instance removing `details` from function signature results in:\r\n```\r\nTypeError: authenticate() takes 2 positional arguments but 3 were given\r\n```\r\nAnd uncommenting `RegisterOptions` results in:\r\n```\r\nTypeError: authenticate() got multiple values for argument 'details'\r\n```\r\n\r\nHow come is it special?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1062", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1062/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1062/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1062/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1062", "id": 370131830, "node_id": "MDU6SXNzdWUzNzAxMzE4MzA=", "number": 1062, "title": "Unix transport: url parameter required though not used", "user": {"login": "haizaar", "id": 58201, "node_id": "MDQ6VXNlcjU4MjAx", "avatar_url": "https://avatars1.githubusercontent.com/u/58201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haizaar", "html_url": "https://github.com/haizaar", "followers_url": "https://api.github.com/users/haizaar/followers", "following_url": "https://api.github.com/users/haizaar/following{/other_user}", "gists_url": "https://api.github.com/users/haizaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/haizaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haizaar/subscriptions", "organizations_url": "https://api.github.com/users/haizaar/orgs", "repos_url": "https://api.github.com/users/haizaar/repos", "events_url": "https://api.github.com/users/haizaar/events{/privacy}", "received_events_url": "https://api.github.com/users/haizaar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 172665, "node_id": "MDU6TGFiZWwxNzI2NjU=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 172664, "node_id": "MDU6TGFiZWwxNzI2NjQ=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/wamp", "name": "wamp", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-10-15T12:06:53Z", "updated_at": "2018-11-22T06:48:53Z", "closed_at": "2018-11-22T06:48:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying to utilize the following component configuration:\r\n\r\n```python\r\ncomponent = Component(\r\n    transports=[\r\n        {\r\n            \"type\": \"rawsocket\",\r\n            \"endpoint\": {\r\n                \"type\": \"unix\",\r\n                \"path\": \"/tmp/crossbar.sock\",\r\n            }\r\n        }\r\n    ],\r\n    realm=\"mine\",\r\n)\r\n```\r\nFails with:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 16, in <module>\r\n    realm=\"mine\",\r\n  File \".../lib/python3.7/site-packages/autobahn/wamp/component.py\", line 461, in __init__\r\n    _create_transport(idx, transport, self._check_native_endpoint)\r\n  File \".../lib/python3.7/site-packages/autobahn/wamp/component.py\", line 213, in _create_transport\r\n    url=transport['url'],\r\nKeyError: 'url'\r\n```\r\n\r\nLooking at the [code](https://github.com/crossbario/autobahn-python/blob/master/autobahn/wamp/component.py#L223), transport creator indeed requires it, but nothing is actually done with this parameter down the road (in case of unix connection again).\r\n\r\nE.g. the following works just fine:\r\n```python\r\ncomponent = Component(\r\n    transports=[\r\n        {\r\n            \"type\": \"rawsocket\",\r\n            \"url\": \"not-in-use\",\r\n            \"endpoint\": {\r\n                \"type\": \"unix\",\r\n                \"path\": \"/tmp/crossbar.sock\",\r\n            }\r\n        }\r\n    ],\r\n    realm=\"mine\",\r\n)\r\n```\r\n(note the `url`).\r\n\r\nDocumentation does not see to say anything about urls for unix sockets. Bug?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1060", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1060/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1060/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1060/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1060", "id": 368090471, "node_id": "MDU6SXNzdWUzNjgwOTA0NzE=", "number": 1060, "title": "Autobahn from framework to library", "user": {"login": "sevaho", "id": 10941956, "node_id": "MDQ6VXNlcjEwOTQxOTU2", "avatar_url": "https://avatars3.githubusercontent.com/u/10941956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sevaho", "html_url": "https://github.com/sevaho", "followers_url": "https://api.github.com/users/sevaho/followers", "following_url": "https://api.github.com/users/sevaho/following{/other_user}", "gists_url": "https://api.github.com/users/sevaho/gists{/gist_id}", "starred_url": "https://api.github.com/users/sevaho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sevaho/subscriptions", "organizations_url": "https://api.github.com/users/sevaho/orgs", "repos_url": "https://api.github.com/users/sevaho/repos", "events_url": "https://api.github.com/users/sevaho/events{/privacy}", "received_events_url": "https://api.github.com/users/sevaho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-09T08:14:29Z", "updated_at": "2018-10-09T08:50:17Z", "closed_at": "2018-10-09T08:50:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nI want to move from autobahn-js to autobahn-python but I am having troubles with calling the session object.\r\n\r\nIn Node.js I could export the session object (the object where I could do calls and registers on) so I can import it in other modules. Also in Nodejs autobahn is more a library:\r\n\r\n```\r\n'use strict';\r\n\r\nconst autobahn  = require('autobahn');\r\nconst wg  \t\t= require('wg');\r\nconst ip        = require('ip');\r\n\r\n/*\r\n *      load variables from process.env (stored in .env file)\r\n */\r\n\r\nconst realm     = process.env.CROSSBAR_REALM;\r\nconst url       = process.env.CROSSBAR_IP;\r\nconst salt      = process.env.CROSSBAR_SALT;\r\nconst key_len   = process.env.CROSSBAR_PASSWORD_KEY_LENGTH;\r\nconst iter      = process.env.CROSSBAR_PASSWORD_ITERATIONS;\r\n\r\nmodule.exports = {\r\n\r\n    // crossbar.connect(authmethod, \"wg.be.main\", request, username, password).then(function (response) {\r\n    connect: function (authmethod, service, json, user, password) {\r\n\r\n        return new Promise ((resolve,reject) => {\r\n\r\n            try {\r\n            \r\n                if (authmethod == \"anonymous\") {\r\n\r\n                    let connection = new autobahn.Connection({\r\n\r\n                        url: url,\r\n                        realm: realm,\r\n                        authmethods: [authmethod],\r\n                        on_user_error: function (error, customErrorMessage) {\r\n\r\n                            wg.log_error(\"USER ERROR\", error, customErrorMessage);\r\n\r\n                        },\r\n                        on_internal_error: function (error, customErrorMessage) {\r\n\r\n                            wg.log_error(\"INTERNAL ERROR\", error, customErrorMessage);\r\n\r\n                        }\r\n\r\n                    });\r\n\r\n                    connection.onopen = function (session, details) {\r\n\r\n                        wg.log_info(\"authenticated with \", details.authid);\r\n\r\n                        session.call(service, [json], {}, {}).then(\r\n\r\n                            function (result) {\r\n\r\n                                connection.close();\r\n                                resolve(result.response_map);\r\n\r\n                            },\r\n                            function (error) {\r\n\r\n                                connection.close();\r\n                                wg.log_info(error);\r\n                                resolve(error);\r\n                            }\r\n\r\n                        );\r\n\r\n                    }\r\n\r\n                    connection.onclose = function (reason, details) {\r\n\r\n                        wg.log_error(\"connection lost:\", details.message);\r\n                        resolve(details.message);\r\n\r\n                    }\r\n\r\n                    connection.open();\r\n\r\n                },\r\n\r\n                        on_user_error: function (error, customErrorMessage) {\r\n\r\n                            wg.log_error(\"USER ERROR\", error, customErrorMessage);\r\n\r\n                        },\r\n                        on_internal_error: function (error, customErrorMessage) {\r\n\r\n                            wg.log_error(\"INTERNAL ERROR\", error, customErrorMessage);\r\n\r\n                        }\r\n\r\n                    });\r\n\r\n                    connection.onopen = function (session, details) {\r\n\r\n                        wg.log_info(\"authenticated with \", details.authid);\r\n\r\n                        session.call(service, [json], {}, {}).then(\r\n\r\n                            function (result) {\r\n\r\n                                connection.close();\r\n                                resolve(result.response_map);\r\n\r\n                            },\r\n                            function (error) {\r\n\r\n                                connection.close();\r\n                                wg.log_info(error);\r\n                                resolve(error);\r\n                            }\r\n\r\n                        );\r\n\r\n                    }\r\n\r\n                    connection.onclose = function (reason, details) {\r\n\r\n                        wg.log_error(\"connection lost:\", details.message);\r\n                        resolve(details.message);\r\n\r\n                    }\r\n\r\n                    connection.open();\r\n        \r\n                }\r\n\r\n                else {\r\n                \r\n                    wg.log_error(\"ERROR NO PROPER AUTHMETHOD\");\r\n                    reject(\"ERROR NO PROPER AUTHMETHOD\");\r\n\r\n                }\r\n\r\n            } catch (e) {\r\n            \r\n                console.error(e);\r\n                reject(\"SOMETHING WENT WRONG: \", e);\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n}\r\n```\r\nNow I can export this and use it as a module.\r\n\r\nBut In Python I need to do this:\r\n\r\n```\r\nfrom config import CROSSBAR_IP, CROSSBAR_REALM\r\n\r\nfrom autobahn.asyncio.wamp import ApplicationRunner\r\nfrom autobahn.wamp.types import ComponentConfig\r\n\r\nfrom crossbar_connection import Connection\r\n\r\nr = ApplicationRunner(CROSSBAR_IP, CROSSBAR_REALM)\r\nsession = Connection(ComponentConfig(CROSSBAR_REALM, {}))\r\n\r\nif __name__ == '__main__':\r\n\r\n    r.run(session)\r\n```\r\n\r\nWhich means all my logic will be called from the Connection class (which is a application session class), so it acts more like a framework. Is it possible to transform this in to more like a library kinda thing? Where I can import my session object in other modules instead of passing it as a argument?\r\n\r\nGreetings", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1057", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1057/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1057/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1057/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1057", "id": 366702915, "node_id": "MDU6SXNzdWUzNjY3MDI5MTU=", "number": 1057, "title": "AttributeError: 'ConnectionResetError' object has no attribute 'value'", "user": {"login": "npeditto", "id": 5755178, "node_id": "MDQ6VXNlcjU3NTUxNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5755178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/npeditto", "html_url": "https://github.com/npeditto", "followers_url": "https://api.github.com/users/npeditto/followers", "following_url": "https://api.github.com/users/npeditto/following{/other_user}", "gists_url": "https://api.github.com/users/npeditto/gists{/gist_id}", "starred_url": "https://api.github.com/users/npeditto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/npeditto/subscriptions", "organizations_url": "https://api.github.com/users/npeditto/orgs", "repos_url": "https://api.github.com/users/npeditto/repos", "events_url": "https://api.github.com/users/npeditto/events{/privacy}", "received_events_url": "https://api.github.com/users/npeditto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-04T09:36:42Z", "updated_at": "2018-10-08T20:05:00Z", "closed_at": "2018-10-08T20:04:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI noticed this \"bug\" with autobahn (18.9.2) and Python 3.5.2 in Ubuntu 16.04.5 LTS (Xenial Xerus):\r\n\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio [-] Exception in callback WebSocketAdapterProtocol.connection_lost(ConnectionRes...eset by peer'))\r\nhandle: <Handle WebSocketAdapterProtocol.connection_lost(ConnectionRes...eset by peer'))>: AttributeError: 'ConnectionResetError' object has no attribute 'value'\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio Traceback (most recent call last):\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio   File \"/usr/lib/python3.5/asyncio/events.py\", line 125, in _run\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio     self._callback(*self._args)\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio   File \"/usr/local/lib/python3.5/dist-packages/autobahn/asyncio/component.py\", line 308, in lost\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio     rtn = orig(fail)\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio   File \"/usr/local/lib/python3.5/dist-packages/autobahn/asyncio/websocket.py\", line 100, in connection_lost\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio     self._connectionLost(exc)\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio   File \"/usr/local/lib/python3.5/dist-packages/autobahn/websocket/protocol.py\", line 3363, in _connectionLost\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio     WebSocketProtocol._connectionLost(self, reason)\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio   File \"/usr/local/lib/python3.5/dist-packages/autobahn/websocket/protocol.py\", line 1096, in _connectionLost\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio     reason_string = _maybe_tls_reason(reason.value)\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio AttributeError: 'ConnectionResetError' object has no attribute 'value'\r\n2018-10-03 13:06:43.102 29258 ERROR asyncio \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1042", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1042/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1042/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1042/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1042", "id": 353364442, "node_id": "MDU6SXNzdWUzNTMzNjQ0NDI=", "number": 1042, "title": "Batched serializers with WS", "user": {"login": "frepond", "id": 467290, "node_id": "MDQ6VXNlcjQ2NzI5MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/467290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frepond", "html_url": "https://github.com/frepond", "followers_url": "https://api.github.com/users/frepond/followers", "following_url": "https://api.github.com/users/frepond/following{/other_user}", "gists_url": "https://api.github.com/users/frepond/gists{/gist_id}", "starred_url": "https://api.github.com/users/frepond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frepond/subscriptions", "organizations_url": "https://api.github.com/users/frepond/orgs", "repos_url": "https://api.github.com/users/frepond/repos", "events_url": "https://api.github.com/users/frepond/events{/privacy}", "received_events_url": "https://api.github.com/users/frepond/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 641228806, "node_id": "MDU6TGFiZWw2NDEyMjg4MDY=", "url": "https://api.github.com/repos/crossbario/autobahn-python/labels/not-an-issue-but-a-question-use-our-mailing-list", "name": "not-an-issue-but-a-question-use-our-mailing-list", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-23T12:46:34Z", "updated_at": "2018-11-22T06:47:27Z", "closed_at": "2018-11-22T06:47:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, is there any way to configure authoban python not to use batched versions of the serializers?\r\n\r\n```python\r\ncomp = Component(\r\n    transports=[\r\n        {\r\n            \"url\": \"ws://localhost:18080/ws\",\r\n            \"serializers\": ['json']\r\n        },\r\n    ],\r\n    realm=\"com.example.test\"\r\n)\r\n```\r\n\r\nUsing this conf (same with msgpack) It always defaults to the batched serializer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1036", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1036/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1036/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1036/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1036", "id": 349477466, "node_id": "MDU6SXNzdWUzNDk0Nzc0NjY=", "number": 1036, "title": "Remove dependency on unittest2", "user": {"login": "mcepl", "id": 198999, "node_id": "MDQ6VXNlcjE5ODk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/198999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcepl", "html_url": "https://github.com/mcepl", "followers_url": "https://api.github.com/users/mcepl/followers", "following_url": "https://api.github.com/users/mcepl/following{/other_user}", "gists_url": "https://api.github.com/users/mcepl/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcepl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcepl/subscriptions", "organizations_url": "https://api.github.com/users/mcepl/orgs", "repos_url": "https://api.github.com/users/mcepl/repos", "events_url": "https://api.github.com/users/mcepl/events{/privacy}", "received_events_url": "https://api.github.com/users/mcepl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-10T11:18:17Z", "updated_at": "2018-08-13T19:21:22Z", "closed_at": "2018-08-13T19:21:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Package unittest2 is necessary for compatibility of Python 2.6 with unittest as found in Python 2.7 and higher. Given that autobahn doesn't seem to support 2.6 anymore, there is no need to use ``unittest2``.\r\n\r\nThis [patch](https://github.com/crossbario/autobahn-python/files/2277708/remove-unittest2.patch.txt) removes the dependency.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1035", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1035/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1035/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1035/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1035", "id": 348816699, "node_id": "MDU6SXNzdWUzNDg4MTY2OTk=", "number": 1035, "title": "autobahn asyncio not compatible with Python 3.7", "user": {"login": "aberres", "id": 20811121, "node_id": "MDQ6VXNlcjIwODExMTIx", "avatar_url": "https://avatars1.githubusercontent.com/u/20811121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aberres", "html_url": "https://github.com/aberres", "followers_url": "https://api.github.com/users/aberres/followers", "following_url": "https://api.github.com/users/aberres/following{/other_user}", "gists_url": "https://api.github.com/users/aberres/gists{/gist_id}", "starred_url": "https://api.github.com/users/aberres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aberres/subscriptions", "organizations_url": "https://api.github.com/users/aberres/orgs", "repos_url": "https://api.github.com/users/aberres/repos", "events_url": "https://api.github.com/users/aberres/events{/privacy}", "received_events_url": "https://api.github.com/users/aberres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-08T17:15:35Z", "updated_at": "2018-08-08T17:19:10Z", "closed_at": "2018-08-08T17:19:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Async became a keyword in 3.7, hence the following code is now failing:\r\n```\r\nif hasattr(asyncio, 'ensure_future'):\r\n    ensure_future = asyncio.ensure_future\r\nelse:  # Deprecated since Python 3.4.4\r\n    ensure_future = asyncio.async\r\n```\r\nWith the following error:\r\n```\r\n>>> import autobahn.asyncio.websocket\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/venv/lib/python3.7/site-packages/autobahn/asyncio/__init__.py\", line 36, in <module>\r\n    from autobahn.asyncio.websocket import \\\r\n  File \"/venv/lib/python3.7/site-packages/autobahn/asyncio/websocket.py\", line 52\r\n    ensure_future = asyncio.async\r\n                                ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\nPossible workaround could be to to replace `asyncio.async` with `getattr(asyncio, 'async')` I think.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1033", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1033/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1033/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1033/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1033", "id": 348236085, "node_id": "MDU6SXNzdWUzNDgyMzYwODU=", "number": 1033, "title": "Protocol Error: PUBLISHED received for non-pending request ID", "user": {"login": "Mdrbhatti", "id": 6940905, "node_id": "MDQ6VXNlcjY5NDA5MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6940905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mdrbhatti", "html_url": "https://github.com/Mdrbhatti", "followers_url": "https://api.github.com/users/Mdrbhatti/followers", "following_url": "https://api.github.com/users/Mdrbhatti/following{/other_user}", "gists_url": "https://api.github.com/users/Mdrbhatti/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mdrbhatti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mdrbhatti/subscriptions", "organizations_url": "https://api.github.com/users/Mdrbhatti/orgs", "repos_url": "https://api.github.com/users/Mdrbhatti/repos", "events_url": "https://api.github.com/users/Mdrbhatti/events{/privacy}", "received_events_url": "https://api.github.com/users/Mdrbhatti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-07T09:17:44Z", "updated_at": "2018-08-07T15:29:52Z", "closed_at": "2018-08-07T15:29:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using a [wampcc router](https://github.com/darrenjs/wampcc), with Autobahn|Python clients. They work completely fine, until I try to publish a message from one of the Python clients.\r\n\r\nI have the following setup:\r\n1 WAMPCC router\r\n1 Autobahn|Python publish client\r\n1 Autobahn|Python subscribe client\r\n\r\nYou can also find the code of my minimal setup here: https://gist.github.com/Mdrbhatti/6926a1c9bfba780573c92bea1982ddec\r\n\r\nThis is the error I get when I try to run publish.py\r\n\r\n```sh\r\npublish: com.myapp.topic1 0\r\n2018-08-07T10:54:26 Traceback (most recent call last):\r\n  File \"C:\\Python37\\lib\\site-packages\\autobahn\\wamp\\websocket.py\", line 95, in onMessage\r\n    self._session.onMessage(msg)\r\n  File \"C:\\Python37\\lib\\site-packages\\autobahn\\wamp\\protocol.py\", line 701, in onMessage\r\n    raise ProtocolError(\"PUBLISHED received for non-pending request ID {0}\".format(msg.request))\r\nautobahn.wamp.exception.ProtocolError: PUBLISHED received for non-pending request ID 1\r\n\r\n2018-08-07T10:54:26 session closed with reason wamp.close.transport_lost [WAMP transport was lost without closing the session before]\r\npublish: com.myapp.topic1 1\r\n2018-08-07T10:54:27 Task exception was never retrieved\r\nfuture: <Task finished coro=<Component.onJoin() done, defined at publish.py:38> exception=TransportLost()>\r\nTraceback (most recent call last):\r\n  File \"publish.py\", line 42, in onJoin\r\n    self.publish(u'com.myapp.topic1', counter)\r\n  File \"C:\\Python37\\lib\\site-packages\\autobahn\\wamp\\protocol.py\", line 1289, in publish\r\n    raise exception.TransportLost()\r\nautobahn.wamp.exception.TransportLost\r\n```\r\n\r\nCurrently. the wampcc router is sending a PUBLISHED ack message for every PUBLISH it receives. I cannot find anything in the [wamp-proto RFC](https://wamp-proto.org/static/rfc/draft-oberstet-hybi-crossbar-wamp.html#rfc.section.9.2.2) that requires the session to be closed on receiving an unwanted PUBLISHED message. For more context: darrenjs/wampcc#40\r\n\r\nI have also tried AutobahnC++ with a wampcc router, and I had no errors or issues with publishing/subscribing to it. I was able to fix this error by passing the options parameter in the publish method:\r\n\r\n```python\r\nself.publish(u'com.myapp.topic1', counter, options=PublishOptions(acknowledge=True))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1031", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1031/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1031/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1031/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1031", "id": 347427039, "node_id": "MDU6SXNzdWUzNDc0MjcwMzk=", "number": 1031, "title": "Asyncio component cannot split URL for rawsocket ", "user": {"login": "aberres", "id": 20811121, "node_id": "MDQ6VXNlcjIwODExMTIx", "avatar_url": "https://avatars1.githubusercontent.com/u/20811121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aberres", "html_url": "https://github.com/aberres", "followers_url": "https://api.github.com/users/aberres/followers", "following_url": "https://api.github.com/users/aberres/following{/other_user}", "gists_url": "https://api.github.com/users/aberres/gists{/gist_id}", "starred_url": "https://api.github.com/users/aberres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aberres/subscriptions", "organizations_url": "https://api.github.com/users/aberres/orgs", "repos_url": "https://api.github.com/users/aberres/repos", "events_url": "https://api.github.com/users/aberres/events{/privacy}", "received_events_url": "https://api.github.com/users/aberres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-03T14:51:01Z", "updated_at": "2018-09-21T18:24:19Z", "closed_at": "2018-09-21T18:24:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Scenario**\r\nAn asyncio component is started with just an URL for a raw socket as transport.\r\nNo endpoint details are specified.\r\n\r\n**Expected behavior**\r\nThe url is split to extract the details of the endpoint.\r\n\r\n**Observed behavior**\r\nNo splitting happens, an exception is thrown.\r\nWith a websocket instead of a rawsocket there are no problems.\r\n\r\n```\r\n  File \"connect_rs.py\", line 16, in create_component\r\n    transports=[fails], authentication=authentication, realm=\"realm1\"\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/autobahn/wamp/component.py\", line 481, in __init__\r\n    _create_transport(idx, transport, self._check_native_endpoint)\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/autobahn/wamp/component.py\", line 188, in _create_transport\r\n    raise ValueError(\"Missing 'endpoint' in transport\")\r\nValueError: Missing 'endpoint' in transport\r\n```\r\n\r\n```python\r\nfrom autobahn.asyncio.component import Component, run\r\n\r\n\r\ndef create_component():\r\n    authentication = None\r\n\r\n    fails = {\"type\": \"rawsocket\", \"url\": \"rs://0.0.0.0:8081\"}\r\n\r\n    works = {\r\n        \"type\": \"rawsocket\",\r\n        \"url\": \"rs://0.0.0.0:8081\",\r\n        \"endpoint\": {\"type\": \"tcp\", \"host\": \"0.0.0.0\", \"port\": 8081},\r\n    }\r\n\r\n    component = Component(\r\n        transports=[fails], authentication=authentication, realm=\"realm1\"\r\n    )\r\n\r\n    return component\r\n\r\n\r\ndef main():\r\n    component = create_component()\r\n\r\n    run([component], log_level=\"debug\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1030", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1030/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1030/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1030/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1030", "id": 347422369, "node_id": "MDU6SXNzdWUzNDc0MjIzNjk=", "number": 1030, "title": "Connecting to crossbar router started after component regularly fails", "user": {"login": "aberres", "id": 20811121, "node_id": "MDQ6VXNlcjIwODExMTIx", "avatar_url": "https://avatars1.githubusercontent.com/u/20811121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aberres", "html_url": "https://github.com/aberres", "followers_url": "https://api.github.com/users/aberres/followers", "following_url": "https://api.github.com/users/aberres/following{/other_user}", "gists_url": "https://api.github.com/users/aberres/gists{/gist_id}", "starred_url": "https://api.github.com/users/aberres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aberres/subscriptions", "organizations_url": "https://api.github.com/users/aberres/orgs", "repos_url": "https://api.github.com/users/aberres/repos", "events_url": "https://api.github.com/users/aberres/events{/privacy}", "received_events_url": "https://api.github.com/users/aberres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-03T14:38:36Z", "updated_at": "2018-08-22T22:45:18Z", "closed_at": "2018-08-22T22:45:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Scenario**\r\nA running application with pretty minimal code to just have a `Component` instance connecting the router.\r\n\r\nThe router is not running. It is started some seconds after the appliction.\r\n\r\n**Expected behavior**\r\nInitially the app obviously fails to connect to the router, when retrying it can eventually connect once the router is up.\r\n\r\n**Observed behavior**\r\nIn a lot of cases no `join` event is fired at all. the component just stops to reconnect.\r\n\r\nFind below the code and the log output.\r\n\r\n```python\r\nimport os\r\n\r\nfrom autobahn.asyncio.component import Component, run\r\n\r\n\r\ndef create_component():\r\n    authentication = None\r\n\r\n    component = Component(\r\n        transports=[\r\n            {\r\n                \"type\": \"websocket\",\r\n                \"url\": os.environ.get(\"AUTOBAHN_ROUTER\", \"ws://localhost:8080/ws\"),\r\n            }\r\n        ],\r\n        authentication=authentication,\r\n        realm=\"realm1\",\r\n    )\r\n\r\n    return component\r\n\r\n\r\nclass Application:\r\n    def __init__(self, component):\r\n        self.component = component\r\n\r\n        component.on(\"join\", self.on_join)\r\n        component.on(\"leave\", self.on_leave)\r\n\r\n    async def on_join(self, session, details):\r\n        print(\"JUST JOINED\")\r\n\r\n    async def on_leave(self, session, reason):\r\n        print(\"JUST LEFT\")\r\n\r\n\r\ndef main():\r\n    component = create_component()\r\n\r\n    app = Application(component)\r\n\r\n    run([component], log_level=\"debug\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\nLog output:\r\n```\r\n2018-08-03T16:35:22 Entering re-connect loop\r\n2018-08-03T16:35:22 trying transport 0 using connect delay 0\r\n2018-08-03T16:35:22 connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\n2018-08-03T16:35:22 component failed: ConnectionRefusedError: [Errno 61] Connect call failed ('127.0.0.1', 8081)\r\n2018-08-03T16:35:22 Traceback (most recent call last):\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/txaio/aio.py\", line 498, in done\r\n    res = f.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/txaio/aio.py\", line 498, in done\r\n    res = f.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/txaio/aio.py\", line 498, in done\r\n    res = f.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/txaio/aio.py\", line 498, in done\r\n    res = f.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 240, in _step\r\n    result = coro.send(None)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 406, in wait_for\r\n    return fut.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 242, in _step\r\n    result = coro.throw(exc)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py\", line 776, in create_connection\r\n    raise exceptions[0]\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py\", line 763, in create_connection\r\n    yield from self.sock_connect(sock, address)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/selector_events.py\", line 451, in sock_connect\r\n    return (yield from fut)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 381, in __iter__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 310, in _wakeup\r\n    future.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/selector_events.py\", line 481, in _sock_connect_cb\r\n    raise OSError(err, 'Connect call failed %s' % (address,))\r\nConnectionRefusedError: [Errno 61] Connect call failed ('127.0.0.1', 8081)\r\n\r\n2018-08-03T16:35:22 Connection failed: ConnectionRefusedError: [Errno 61] Connect call failed ('127.0.0.1', 8081)\r\n2018-08-03T16:35:22 Entering re-connect loop\r\n2018-08-03T16:35:22 trying transport 0 using connect delay 2.196339784522646\r\n2018-08-03T16:35:24 connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\n2018-08-03T16:35:24 component failed: ConnectionRefusedError: [Errno 61] Connect call failed ('127.0.0.1', 8081)\r\n2018-08-03T16:35:24 Traceback (most recent call last):\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/txaio/aio.py\", line 498, in done\r\n    res = f.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/txaio/aio.py\", line 498, in done\r\n    res = f.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/txaio/aio.py\", line 498, in done\r\n    res = f.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/txaio/aio.py\", line 498, in done\r\n    res = f.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 240, in _step\r\n    result = coro.send(None)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 406, in wait_for\r\n    return fut.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 242, in _step\r\n    result = coro.throw(exc)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py\", line 776, in create_connection\r\n    raise exceptions[0]\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py\", line 763, in create_connection\r\n    yield from self.sock_connect(sock, address)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/selector_events.py\", line 451, in sock_connect\r\n    return (yield from fut)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 381, in __iter__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 310, in _wakeup\r\n    future.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/selector_events.py\", line 481, in _sock_connect_cb\r\n    raise OSError(err, 'Connect call failed %s' % (address,))\r\nConnectionRefusedError: [Errno 61] Connect call failed ('127.0.0.1', 8081)\r\n\r\n2018-08-03T16:35:24 Connection failed: ConnectionRefusedError: [Errno 61] Connect call failed ('127.0.0.1', 8081)\r\n2018-08-03T16:35:24 Entering re-connect loop\r\n2018-08-03T16:35:24 trying transport 0 using connect delay 3.6012217300050597\r\n2018-08-03T16:35:28 connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\n2018-08-03T16:35:28\r\n[('logOctets', False, 'WampWebSocketClientFactory'),\r\n ('logFrames', False, 'WampWebSocketClientFactory'),\r\n ('trackTimings', False, 'WampWebSocketClientFactory'),\r\n ('utf8validateIncoming', True, 'WampWebSocketClientFactory'),\r\n ('applyMask', True, 'WampWebSocketClientFactory'),\r\n ('maxFramePayloadSize', 0, 'WampWebSocketClientFactory'),\r\n ('maxMessagePayloadSize', 0, 'WampWebSocketClientFactory'),\r\n ('autoFragmentSize', 0, 'WampWebSocketClientFactory'),\r\n ('failByDrop', True, 'WampWebSocketClientFactory'),\r\n ('echoCloseCodeReason', False, 'WampWebSocketClientFactory'),\r\n ('openHandshakeTimeout', 5, 'WampWebSocketClientFactory'),\r\n ('closeHandshakeTimeout', 1, 'WampWebSocketClientFactory'),\r\n ('tcpNoDelay', True, 'WampWebSocketClientFactory'),\r\n ('autoPingInterval', 0, 'WampWebSocketClientFactory'),\r\n ('autoPingTimeout', 0, 'WampWebSocketClientFactory'),\r\n ('autoPingSize', 4, 'WampWebSocketClientFactory'),\r\n ('version', 18, 'WampWebSocketClientFactory'),\r\n ('acceptMaskedServerFrames', False, 'WampWebSocketClientFactory'),\r\n ('maskClientFrames', True, 'WampWebSocketClientFactory'),\r\n ('serverConnectionDropTimeout', 1, 'WampWebSocketClientFactory'),\r\n ('perMessageCompressionOffers', [], 'WampWebSocketClientFactory'),\r\n ('perMessageCompressionAccept',\r\n  <function WebSocketClientFactory.resetProtocolOptions.<locals>.<lambda> at 0x105042730>,\r\n  'WampWebSocketClientFactory')]\r\n2018-08-03T16:35:28 connection to tcp:127.0.0.1:8081 established\r\n2018-08-03T16:35:28 GET /ws HTTP/1.1\r\nUser-Agent: AutobahnPython/18.7.1\r\nHost: 127.0.0.1:8081\r\nUpgrade: WebSocket\r\nConnection: Upgrade\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nSec-WebSocket-Key: dUkqaBfl5digQ2CxS+I9Sg==\r\nSec-WebSocket-Protocol: wamp.2.msgpack.batched,wamp.2.msgpack,wamp.2.json.batched,wamp.2.json\r\nSec-WebSocket-Version: 13\r\n\r\n\r\n2018-08-03T16:35:28 received HTTP response:\r\n\r\nb'HTTP/1.1 101 Switching Protocols\\r\\nServer: Crossbar\\r\\nUpgrade: WebSocket\\r\\nConnection: Upgrade\\r\\nSec-WebSocket-Protocol: wamp.2.msgpack.batched\\r\\nSec-WebSocket-Accept: KVd2/IiZeOlNJzhHpgkCDXdi698=\\r\\n\\r\\n'\r\n\r\n\r\n2018-08-03T16:35:28 received HTTP status line in opening handshake : HTTP/1.1 101 Switching Protocols\r\n2018-08-03T16:35:28 received HTTP headers in opening handshake : {'upgrade': 'WebSocket', 'sec-websocket-accept': 'KVd2/IiZeOlNJzhHpgkCDXdi698=', 'connection': 'Upgrade', 'server': 'Crossbar', 'sec-websocket-protocol': 'wamp.2.msgpack.batched'}\r\n2018-08-03T16:35:28 openHandshakeTimeoutCall.cancel\r\nJUST JOINED\r\n^C2018-08-03T16:35:34 Shutting down due to SIGINT\r\n(mpptool)  ~/Devel/mpptool/backend/mppbackend/mppbackend \ue0b0 \ue0a0 armin-pure-robot \u25cf\u271a \ue0b0 python just_connect.py\r\n2018-08-03T16:35:40 Entering re-connect loop\r\n2018-08-03T16:35:40 trying transport 0 using connect delay 0\r\n2018-08-03T16:35:40 connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\n2018-08-03T16:35:40 component failed: ConnectionRefusedError: [Errno 61] Connect call failed ('127.0.0.1', 8081)\r\n2018-08-03T16:35:40 Traceback (most recent call last):\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/txaio/aio.py\", line 498, in done\r\n    res = f.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/txaio/aio.py\", line 498, in done\r\n    res = f.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/txaio/aio.py\", line 498, in done\r\n    res = f.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/txaio/aio.py\", line 498, in done\r\n    res = f.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 240, in _step\r\n    result = coro.send(None)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 406, in wait_for\r\n    return fut.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 242, in _step\r\n    result = coro.throw(exc)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py\", line 776, in create_connection\r\n    raise exceptions[0]\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/base_events.py\", line 763, in create_connection\r\n    yield from self.sock_connect(sock, address)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/selector_events.py\", line 451, in sock_connect\r\n    return (yield from fut)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 381, in __iter__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 310, in _wakeup\r\n    future.result()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/futures.py\", line 294, in result\r\n    raise self._exception\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/selector_events.py\", line 481, in _sock_connect_cb\r\n    raise OSError(err, 'Connect call failed %s' % (address,))\r\nConnectionRefusedError: [Errno 61] Connect call failed ('127.0.0.1', 8081)\r\n\r\n2018-08-03T16:35:40 Connection failed: ConnectionRefusedError: [Errno 61] Connect call failed ('127.0.0.1', 8081)\r\n2018-08-03T16:35:40 Entering re-connect loop\r\n2018-08-03T16:35:40 trying transport 0 using connect delay 2.3854484902708974\r\n2018-08-03T16:35:42 connecting once using transport type \"websocket\" over endpoint \"tcp\"\r\n2018-08-03T16:35:42\r\n[('logOctets', False, 'WampWebSocketClientFactory'),\r\n ('logFrames', False, 'WampWebSocketClientFactory'),\r\n ('trackTimings', False, 'WampWebSocketClientFactory'),\r\n ('utf8validateIncoming', True, 'WampWebSocketClientFactory'),\r\n ('applyMask', True, 'WampWebSocketClientFactory'),\r\n ('maxFramePayloadSize', 0, 'WampWebSocketClientFactory'),\r\n ('maxMessagePayloadSize', 0, 'WampWebSocketClientFactory'),\r\n ('autoFragmentSize', 0, 'WampWebSocketClientFactory'),\r\n ('failByDrop', True, 'WampWebSocketClientFactory'),\r\n ('echoCloseCodeReason', False, 'WampWebSocketClientFactory'),\r\n ('openHandshakeTimeout', 5, 'WampWebSocketClientFactory'),\r\n ('closeHandshakeTimeout', 1, 'WampWebSocketClientFactory'),\r\n ('tcpNoDelay', True, 'WampWebSocketClientFactory'),\r\n ('autoPingInterval', 0, 'WampWebSocketClientFactory'),\r\n ('autoPingTimeout', 0, 'WampWebSocketClientFactory'),\r\n ('autoPingSize', 4, 'WampWebSocketClientFactory'),\r\n ('version', 18, 'WampWebSocketClientFactory'),\r\n ('acceptMaskedServerFrames', False, 'WampWebSocketClientFactory'),\r\n ('maskClientFrames', True, 'WampWebSocketClientFactory'),\r\n ('serverConnectionDropTimeout', 1, 'WampWebSocketClientFactory'),\r\n ('perMessageCompressionOffers', [], 'WampWebSocketClientFactory'),\r\n ('perMessageCompressionAccept',\r\n  <function WebSocketClientFactory.resetProtocolOptions.<locals>.<lambda> at 0x10502c268>,\r\n  'WampWebSocketClientFactory')]\r\n2018-08-03T16:35:42 connection to tcp:127.0.0.1:8081 established\r\n2018-08-03T16:35:42 GET /ws HTTP/1.1\r\nUser-Agent: AutobahnPython/18.7.1\r\nHost: 127.0.0.1:8081\r\nUpgrade: WebSocket\r\nConnection: Upgrade\r\nPragma: no-cache\r\nCache-Control: no-cache\r\nSec-WebSocket-Key: vxm5IfTTjbBjPV0oSXditg==\r\nSec-WebSocket-Protocol: wamp.2.msgpack.batched,wamp.2.msgpack,wamp.2.json.batched,wamp.2.json\r\nSec-WebSocket-Version: 13\r\n\r\n\r\n2018-08-03T16:35:43 _connectionLost: None\r\n2018-08-03T16:35:46 skipping opening handshake timeout: WebSocket connection is already closed\r\n```\r\n\r\nConfig of the transport:\r\n```\r\n{\r\n          \"type\": \"universal\",\r\n          \"endpoint\": {\r\n            \"type\": \"tcp\",\r\n            \"port\": 8081\r\n          },\r\n          \"rawsocket\": {\r\n            \"serializers\": [\r\n              \"cbor\",\r\n              \"msgpack\",\r\n              \"ubjson\",\r\n              \"json\"\r\n            ],\r\n            \"auth\": {\r\n              \"anonymous\": {\r\n                \"type\": \"static\",\r\n                \"role\": \"backend\"\r\n              }\r\n            }\r\n          },\r\n          \"websocket\": {\r\n            \"ws\": {\r\n              \"debug\": true,\r\n              \"type\": \"websocket\",\r\n              \"serializers\": [\r\n                \"cbor\",\r\n                \"msgpack\",\r\n                \"ubjson\",\r\n                \"json\"\r\n              ],\r\n              \"auth\": {\r\n                \"anonymous\": {\r\n                  \"type\": \"static\",\r\n                  \"role\": \"backend\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1029", "repository_url": "https://api.github.com/repos/crossbario/autobahn-python", "labels_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1029/labels{/name}", "comments_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1029/comments", "events_url": "https://api.github.com/repos/crossbario/autobahn-python/issues/1029/events", "html_url": "https://github.com/crossbario/autobahn-python/issues/1029", "id": 345749044, "node_id": "MDU6SXNzdWUzNDU3NDkwNDQ=", "number": 1029, "title": "Asyncio component fails to initialize serializers when using raw sockets", "user": {"login": "aberres", "id": 20811121, "node_id": "MDQ6VXNlcjIwODExMTIx", "avatar_url": "https://avatars1.githubusercontent.com/u/20811121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aberres", "html_url": "https://github.com/aberres", "followers_url": "https://api.github.com/users/aberres/followers", "following_url": "https://api.github.com/users/aberres/following{/other_user}", "gists_url": "https://api.github.com/users/aberres/gists{/gist_id}", "starred_url": "https://api.github.com/users/aberres/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aberres/subscriptions", "organizations_url": "https://api.github.com/users/aberres/orgs", "repos_url": "https://api.github.com/users/aberres/repos", "events_url": "https://api.github.com/users/aberres/events{/privacy}", "received_events_url": "https://api.github.com/users/aberres/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-30T13:05:02Z", "updated_at": "2018-08-03T14:53:20Z", "closed_at": "2018-07-30T13:17:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given a router awaiting raw socket connections on port 8081 the following fails\r\n```\r\nautobahn.asyncio.component.Component(transports=[{\"type\": \"rawsocket\", \"url\": \"rs://127.0.0.1:8081\",  \"endpoint\": {\"type\": \"tcp\", \"host\": \"127.0.0.1\", \"port\": 8081}]}\r\n```\r\n\r\nwith this backtrace\r\n\r\n```\r\n2018-07-30T14:59:14 Exception in callback RawSocketClientProtocol.connection_made(<_SelectorSoc...e, bufsize=0>>)\r\nhandle: <Handle RawSocketClientProtocol.connection_made(<_SelectorSoc...e, bufsize=0>>)>\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/events.py\", line 127, in _run\r\n    self._callback(*self._args)\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/autobahn/asyncio/rawsocket.py\", line 248, in connection_made\r\n    self._length_exp << 4 | self.serializer_id,\r\n  File \"/Users/berres/venv/mpptool/lib/python3.5/site-packages/autobahn/asyncio/rawsocket.py\", line 411, in serializer_id\r\n    self._serializer = self.factory._serializer()\r\nTypeError: 'MsgPackSerializer' object is not callable\r\n```\r\n\r\nWhen looking at the code it seems as if `_create_transport_serializer()` in `asyncio/component.py` is instantiating the serializer while the rawsocket is expecting a class object it can initialize.\r\nRemoving the initialization in either place allows a successful connection.\r\n\r\nI am also wondering why I need to set `endpoint` and `url` when specifying the transport. One of the should be enough I guess.", "performed_via_github_app": null, "score": 1.0}]}