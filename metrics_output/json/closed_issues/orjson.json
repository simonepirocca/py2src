{"total_count": 95, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ijl/orjson/issues/121", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/121/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/121/events", "html_url": "https://github.com/ijl/orjson/issues/121", "id": 678983803, "node_id": "MDU6SXNzdWU2Nzg5ODM4MDM=", "number": 121, "title": "incorrect checksum for freed object", "user": {"login": "rushter", "id": 3187951, "node_id": "MDQ6VXNlcjMxODc5NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3187951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rushter", "html_url": "https://github.com/rushter", "followers_url": "https://api.github.com/users/rushter/followers", "following_url": "https://api.github.com/users/rushter/following{/other_user}", "gists_url": "https://api.github.com/users/rushter/gists{/gist_id}", "starred_url": "https://api.github.com/users/rushter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rushter/subscriptions", "organizations_url": "https://api.github.com/users/rushter/orgs", "repos_url": "https://api.github.com/users/rushter/repos", "events_url": "https://api.github.com/users/rushter/events{/privacy}", "received_events_url": "https://api.github.com/users/rushter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-14T08:10:33Z", "updated_at": "2020-08-17T21:46:28Z", "closed_at": "2020-08-16T22:26:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a big HTML dataset (from Common Crawl) and `orjson` consistently crashes on like 1 out of 1000-5000 websites.\r\n\r\nI tried to locate the problem, but I can't find that causes this. \r\nRemoving a single character sometimes resolves the problem. Most likely, the string length of a single field plays a role here.\r\n\r\nHow to reproduce:\r\n```\r\nimport orjson\r\norjson.loads(\"\"\"{ \"html\": \"<!DOCTYPE html PUBLIC \\\\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\\\" \\\\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1\\\\\" target=\\\\\"_blank\\\\\"></a></li>\\\\n\\\\t\\\\t</ul>\\\\n\\\\t\\\\t</div>\\\\n\\\\t</div>\\\\n</div>\\\\n\\\\n</body></html>\"}\"\"\")\r\n```\r\n\r\nMacOS (Python 3.8.5, orjson 3.3.0):\r\n```\r\n\r\nPython(57705,0x7fffa5b92380) malloc: *** error for object 0x7fae2c16be00: incorrect checksum for freed object - object was probably modified after being freed.\r\n*** set a breakpoint in malloc_error_break to debug\r\n[1]    57705 abort      ipython\r\n```\r\nCentOS 7 (Python 3.7.0, orjson 3.3.0):\r\n```\r\n*** Error in `/path/to/python': free(): corrupted unsorted chunks: 0x00005573033fc560 ***\r\n======= Backtrace: =========\r\n/lib64/libc.so.6(+0x81299)[0x7f317b895299]\r\n/path/to/python/lib/python3.7/site-packages/orjson.cpython-37m-x86_64-linux-gnu.so(loads+0x36d)[0x7f3170ff7a4d]\r\n/path/to/python(_PyMethodDef_RawFastCallKeywords+0x8c)[0x5573015d6dec]\r\n/path/to/python(_PyCFunction_FastCallKeywords+0x21)[0x5573015d70e1]\r\n/path/to/python(_PyEval_EvalFrameDefault+0x4e3c)[0x5573016331cc]\r\n/path/to/python(_PyEval_EvalCodeWithName+0x2f9)[0x557301574059]\r\n/path/to/python(PyEval_EvalCodeEx+0x44)[0x557301574f24]\r\n/path/to/python(PyEval_EvalCode+0x1c)[0x557301574f4c]\r\n/path/to/python(+0x1def7d)[0x55730163df7d]\r\n/path/to/python(_PyMethodDef_RawFastCallKeywords+0xe9)[0x5573015d6e49]\r\n/path/to/python(_PyCFunction_FastCallKeywords+0x21)[0x5573015d70e1]\r\n/path/to/python(_PyEval_EvalFrameDefault+0x4784)[0x557301632b14]\r\n/path/to/python(_PyGen_Send+0x2a2)[0x5573015d0092]\r\n/path/to/python(_PyEval_EvalFrameDefault+0x1a4a)[0x55730162fdda]\r\n/path/to/python(_PyGen_Send+0x2a2)[0x5573015d0092]\r\n/path/to/python(_PyEval_EvalFrameDefault+0x1a4a)[0x55730162fdda]\r\n/path/to/python(_PyGen_Send+0x2a2)[0x5573015d0092]\r\n/path/to/python(_PyMethodDef_RawFastCallKeywords+0x8c)[0x5573015d6dec]\r\n/path/to/python(_PyMethodDescr_FastCallKeywords+0x4f)[0x5573015d714f]\r\n/path/to/python(_PyEval_EvalFrameDefault+0x4c19)[0x557301632fa9]\r\n/path/to/python(_PyFunction_FastCallKeywords+0xfb)[0x5573015d607b]                                                                                                                 /path/to/python(_PyEval_EvalFrameDefault+0x6d6)[0x55730162ea66]\r\n/path/to/python(_PyFunction_FastCallKeywords+0xfb)[0x5573015d607b]\r\n/path/to/python(_PyEval_EvalFrameDefault+0x520)[0x55730162e8b0]\r\n/path/to/python(_PyEval_EvalCodeWithName+0x2f9)[0x557301574059]\r\n/path/to/python(_PyFunction_FastCallKeywords+0x387)[0x5573015d6307]\r\n/path/to/python(_PyEval_EvalFrameDefault+0x14b1)[0x55730162f841]\r\n/path/to/python(_PyEval_EvalCodeWithName+0x2f9)[0x557301574059]\r\n/path/to/python(_PyFunction_FastCallKeywords+0x325)[0x5573015d62a5]\r\n/path/to/python(_PyEval_EvalFrameDefault+0x520)[0x55730162e8b0]\r\n/path/to/python(_PyEval_EvalCodeWithName+0x2f9)[0x557301574059]\r\n/path/to/python(_PyFunction_FastCallKeywords+0x325)[0x5573015d62a5]\r\n/path/to/python(_PyEval_EvalFrameDefault+0x520)[0x55730162e8b0]\r\n/path/to/python(_PyFunction_FastCallKeywords+0xfb)[0x5573015d607b]\r\n/path/to/python(_PyEval_EvalFrameDefault+0x520)[0x55730162e8b0]\r\n/path/to/python(_PyEval_EvalCodeWithName+0x2f9)[0x557301574059]\r\n/path/to/python(_PyFunction_FastCallDict+0x3dc)[0x55730157533c]\r\n/path/to/python(_PyObject_Call_Prepend+0x63)[0x55730158ba03]\r\n/path/to/python(PyObject_Call+0x62)[0x5573015808d2]\r\n/path/to/python(_PyEval_EvalFrameDefault+0x1e1b)[0x5573016301ab]\r\n/path/to/python(_PyEval_EvalCodeWithName+0x2f9)[0x557301574059]\r\n/path/to/python(_PyFunction_FastCallKeywords+0x387)[0x5573015d6307]\r\n/path/to/python(_PyEval_EvalFrameDefault+0x6d6)[0x55730162ea66]\r\n/path/to/python(_PyEval_EvalCodeWithName+0x2f9)[0x557301574059]\r\n/path/to/python(PyEval_EvalCodeEx+0x44)[0x557301574f24]\r\n/path/to/python(PyEval_EvalCode+0x1c)[0x557301574f4c]\r\n/path/to/python(+0x22ea14)[0x55730168da14]\r\n/path/to/python(PyRun_FileExFlags+0xa1)[0x557301696f11]\r\n/path/to/python(PyRun_SimpleFileExFlags+0x1c4)[0x557301697104]\r\n/path/to/python(+0x239bbd)[0x557301698bbd]\r\n/path/to/python(_Py_UnixMain+0x80)[0x557301698e30]\r\n/lib64/libc.so.6(__libc_start_main+0xf5)[0x7f317b836555]\r\n/path/to/python(+0x1df052)[0x55730163e052]\r\n```\r\n\r\n\r\nMy example works fine on Ubuntu 16.04 (Python 3.7.5, orjson 3.3.0).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/118", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/118/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/118/events", "html_url": "https://github.com/ijl/orjson/issues/118", "id": 663697247, "node_id": "MDU6SXNzdWU2NjM2OTcyNDc=", "number": 118, "title": "Number out of range parsing a very large integer", "user": {"login": "akx", "id": 58669, "node_id": "MDQ6VXNlcjU4NjY5", "avatar_url": "https://avatars2.githubusercontent.com/u/58669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akx", "html_url": "https://github.com/akx", "followers_url": "https://api.github.com/users/akx/followers", "following_url": "https://api.github.com/users/akx/following{/other_user}", "gists_url": "https://api.github.com/users/akx/gists{/gist_id}", "starred_url": "https://api.github.com/users/akx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akx/subscriptions", "organizations_url": "https://api.github.com/users/akx/orgs", "repos_url": "https://api.github.com/users/akx/repos", "events_url": "https://api.github.com/users/akx/events{/privacy}", "received_events_url": "https://api.github.com/users/akx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-22T11:42:35Z", "updated_at": "2020-07-22T16:49:01Z", "closed_at": "2020-07-22T14:00:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\norjson.loads('300000000000000000000000000000000000000000000000000000000000000000' * 5)\r\n```\r\nfails with\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\norjson.JSONDecodeError: number out of range at line 1 column 330: line 1 column 1 (char 0)\r\n```\r\nthough that integer is easily representable by Python:\r\n```\r\n>>> int('300000000000000000000000000000000000000000000000000000000000000000' * 5)\r\n300000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000\r\n```\r\nI think this has to do with #116.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/117", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/117/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/117/events", "html_url": "https://github.com/ijl/orjson/issues/117", "id": 663040119, "node_id": "MDU6SXNzdWU2NjMwNDAxMTk=", "number": 117, "title": "TypeError: dumps() got an unexpected keyword argument", "user": {"login": "adrianohrl", "id": 5761590, "node_id": "MDQ6VXNlcjU3NjE1OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5761590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianohrl", "html_url": "https://github.com/adrianohrl", "followers_url": "https://api.github.com/users/adrianohrl/followers", "following_url": "https://api.github.com/users/adrianohrl/following{/other_user}", "gists_url": "https://api.github.com/users/adrianohrl/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianohrl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianohrl/subscriptions", "organizations_url": "https://api.github.com/users/adrianohrl/orgs", "repos_url": "https://api.github.com/users/adrianohrl/repos", "events_url": "https://api.github.com/users/adrianohrl/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianohrl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-21T14:02:29Z", "updated_at": "2020-07-21T14:21:43Z", "closed_at": "2020-07-21T14:14:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI'm having trouble when sending empty keyword arguments to the `orjson.dumps` function. Whenever it happens, the following exception is raised: `TypeError: dumps() got an unexpected keyword argument`.\r\n\r\nSee below an example of this issue.\r\n\r\n```python\r\nimport orjson\r\nimport numpy as np\r\n\r\nprint(f'orjson version: {orjson.__version__}')\r\n\r\ndef default(s):\r\n    if isinstance(s, np.int8):\r\n        return int(s)\r\n    raise TypeError\r\n\r\ndef dumps(d, *args, **kwargs):\r\n    return orjson.dumps(d, *args, **kwargs)\r\n\r\nprint('\\nTest #1: ' + dumps({'test': True}, option=orjson.OPT_INDENT_2).decode())\r\nprint('\\nTest #2: ' + dumps({'test': np.int8(32)}, default=default).decode())\r\nkwargs = {\r\n    'option': orjson.OPT_INDENT_2,\r\n    'default': default,\r\n}\r\nprint('\\nTest #3: ' + dumps({'test': np.int8(32)}, **kwargs).decode())\r\nprint('\\nTest #4: ' + dumps({'test': True}).decode())\r\nprint('\\nTest #5: ' + dumps({'test': True}).decode())\r\n```\r\n\r\nThe output bellow is prompted:\r\n\r\n```\r\norjson version: 3.0.1\r\n\r\nTest #1: {\r\n  \"test\": true\r\n}\r\n\r\nTest #2: {\"test\":32}\r\n\r\nTest #3: {\r\n  \"test\": 32\r\n}\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-25-d8e8d39b3c9f> in <module>\r\n     19 }\r\n     20 print('\\nTest #3: ' + dumps({'test': np.int8(32)}, **kwargs).decode())\r\n---> 21 print('\\nTest #4: ' + dumps({'test': True}).decode())\r\n     22 print('\\nTest #5: ' + dumps({'test': True}).decode())\r\n\r\n<ipython-input-25-d8e8d39b3c9f> in dumps(d, *args, **kwargs)\r\n     10 \r\n     11 def dumps(d, *args, **kwargs):\r\n---> 12     return orjson.dumps(d, *args, **kwargs)\r\n     13 \r\n     14 print('\\nTest #1: ' + dumps({'test': True}, option=orjson.OPT_INDENT_2).decode())\r\n\r\nTypeError: dumps() got an unexpected keyword argument\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/115", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/115/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/115/events", "html_url": "https://github.com/ijl/orjson/issues/115", "id": 655796033, "node_id": "MDU6SXNzdWU2NTU3OTYwMzM=", "number": 115, "title": "Segmentation fault on serializing empty dataclass", "user": {"login": "barsi", "id": 2647889, "node_id": "MDQ6VXNlcjI2NDc4ODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2647889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barsi", "html_url": "https://github.com/barsi", "followers_url": "https://api.github.com/users/barsi/followers", "following_url": "https://api.github.com/users/barsi/following{/other_user}", "gists_url": "https://api.github.com/users/barsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/barsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barsi/subscriptions", "organizations_url": "https://api.github.com/users/barsi/orgs", "repos_url": "https://api.github.com/users/barsi/repos", "events_url": "https://api.github.com/users/barsi/events{/privacy}", "received_events_url": "https://api.github.com/users/barsi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-13T12:03:35Z", "updated_at": "2020-07-13T22:18:11Z", "closed_at": "2020-07-13T22:18:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "**OS** Ubuntu 20.04\r\n\r\n**Python** 3.8.2\r\n\r\n**orjson** 3.2.1\r\n\r\n**Example:**\r\n\r\n```python\r\nfrom dataclasses import dataclass, asdict\r\nimport orjson\r\n\r\n@dataclass\r\nclass A:\r\n  pass\r\n\r\nprint(asdict(A())) # -> {}\r\nprint(orjson.dumps(A())) # -> segmentation fault\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/114", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/114/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/114/events", "html_url": "https://github.com/ijl/orjson/issues/114", "id": 654906112, "node_id": "MDU6SXNzdWU2NTQ5MDYxMTI=", "number": 114, "title": "float and UUID subclasses are not serialised", "user": {"login": "pxeger", "id": 67427173, "node_id": "MDQ6VXNlcjY3NDI3MTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/67427173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pxeger", "html_url": "https://github.com/pxeger", "followers_url": "https://api.github.com/users/pxeger/followers", "following_url": "https://api.github.com/users/pxeger/following{/other_user}", "gists_url": "https://api.github.com/users/pxeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/pxeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pxeger/subscriptions", "organizations_url": "https://api.github.com/users/pxeger/orgs", "repos_url": "https://api.github.com/users/pxeger/repos", "events_url": "https://api.github.com/users/pxeger/events{/privacy}", "received_events_url": "https://api.github.com/users/pxeger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-10T16:46:31Z", "updated_at": "2020-07-20T23:10:01Z", "closed_at": "2020-07-20T23:10:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Subclasses of the built-in `float` and standard library `uuid.UUID` are rejected as unserialisable.\r\n\r\n```pycon\r\n>>> from uuid import UUID, uuid4\r\n>>> import orjson\r\n>>> class FooUUID(UUID): pass\r\n>>> class FooFloat(float): pass\r\n>>> orjson.dumps(FooFloat(24))\r\nTraceback (most reecent call last):\r\n  File <stdin>, line 1, in <module>\r\nTypeError: Type is not JSON serializable: FooFloat\r\n>>> orjson.dumps(FooUUID(bytes=uuid4().bytes))\r\nTraceback (most reecent call last):\r\n  File <stdin>, line 1, in <module>\r\nTypeError: Type is not JSON serializable: FooUUID\r\n```\r\n\r\nThis might be intentional, but the wording in the README is not entirely clear:\r\n\r\n> serializes subclasses of `str`, `int`, `list`, and `dict` natively, requiring `default` to specify how to serialize others\r\n\r\nIt doesn't mention subclasses of any of the other types that `orjson` can serialise. I can't really think of any use cases of a subclass of `float` but it's something I noticed while testing my original issue which was about UUID subclasses, and it seems a little random to support `int`, `list`, etc. but not `float`. Is there a reason for this?\r\n\r\nThe main reason I'm using `orjson` is for its great ability to serialise common \"special\" objects like UUIDs, and having to switch to the slower intermediate standard-library UUID object isn't great. See https://github.com/MagicStack/asyncpg/issues/512 for a real-world problem caused by this behaviour.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/111", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/111/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/111/events", "html_url": "https://github.com/ijl/orjson/issues/111", "id": 650541233, "node_id": "MDU6SXNzdWU2NTA1NDEyMzM=", "number": 111, "title": "TypeError: dumps() got an unexpected keyword argument", "user": {"login": "marc1n", "id": 1001991, "node_id": "MDQ6VXNlcjEwMDE5OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1001991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marc1n", "html_url": "https://github.com/marc1n", "followers_url": "https://api.github.com/users/marc1n/followers", "following_url": "https://api.github.com/users/marc1n/following{/other_user}", "gists_url": "https://api.github.com/users/marc1n/gists{/gist_id}", "starred_url": "https://api.github.com/users/marc1n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marc1n/subscriptions", "organizations_url": "https://api.github.com/users/marc1n/orgs", "repos_url": "https://api.github.com/users/marc1n/repos", "events_url": "https://api.github.com/users/marc1n/events{/privacy}", "received_events_url": "https://api.github.com/users/marc1n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-03T11:38:09Z", "updated_at": "2020-07-03T15:15:25Z", "closed_at": "2020-07-03T15:15:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since version 3.1.0 empty kwargs dict cause an exception in `dumps`:\r\n\r\n```python\r\n>>> import orjson\r\n>>> orjson.dumps(None)\r\nb'null'\r\n>>> orjson.dumps(None, **{})\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: dumps() got an unexpected keyword argument\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/110", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/110/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/110/events", "html_url": "https://github.com/ijl/orjson/issues/110", "id": 650319916, "node_id": "MDU6SXNzdWU2NTAzMTk5MTY=", "number": 110, "title": "Is there a way to install this without installing Rust?", "user": {"login": "nilslindemann", "id": 6892179, "node_id": "MDQ6VXNlcjY4OTIxNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/6892179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nilslindemann", "html_url": "https://github.com/nilslindemann", "followers_url": "https://api.github.com/users/nilslindemann/followers", "following_url": "https://api.github.com/users/nilslindemann/following{/other_user}", "gists_url": "https://api.github.com/users/nilslindemann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nilslindemann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nilslindemann/subscriptions", "organizations_url": "https://api.github.com/users/nilslindemann/orgs", "repos_url": "https://api.github.com/users/nilslindemann/repos", "events_url": "https://api.github.com/users/nilslindemann/events{/privacy}", "received_events_url": "https://api.github.com/users/nilslindemann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-03T03:36:37Z", "updated_at": "2020-07-03T11:21:00Z", "closed_at": "2020-07-03T11:21:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has anyone some precompiled binaries for god\u2019s sake? I don't want to install a 5 GB sized closed source compiler on my system.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/109", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/109/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/109/events", "html_url": "https://github.com/ijl/orjson/issues/109", "id": 650139614, "node_id": "MDU6SXNzdWU2NTAxMzk2MTQ=", "number": 109, "title": "Support numpy objects", "user": {"login": "aviramha", "id": 41201924, "node_id": "MDQ6VXNlcjQxMjAxOTI0", "avatar_url": "https://avatars0.githubusercontent.com/u/41201924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aviramha", "html_url": "https://github.com/aviramha", "followers_url": "https://api.github.com/users/aviramha/followers", "following_url": "https://api.github.com/users/aviramha/following{/other_user}", "gists_url": "https://api.github.com/users/aviramha/gists{/gist_id}", "starred_url": "https://api.github.com/users/aviramha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aviramha/subscriptions", "organizations_url": "https://api.github.com/users/aviramha/orgs", "repos_url": "https://api.github.com/users/aviramha/repos", "events_url": "https://api.github.com/users/aviramha/events{/privacy}", "received_events_url": "https://api.github.com/users/aviramha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-02T18:53:02Z", "updated_at": "2020-07-24T17:12:08Z", "closed_at": "2020-07-24T17:11:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now orjson supports numpy arrays, but not plain numpy objects, which is weird.\r\nI suggest adding that the numpy serialize option will support plain numpy objects (numpy.int, etc).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/107", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/107/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/107/events", "html_url": "https://github.com/ijl/orjson/issues/107", "id": 644059081, "node_id": "MDU6SXNzdWU2NDQwNTkwODE=", "number": 107, "title": "Single object numpy arrays cause crash", "user": {"login": "takhs91", "id": 6640901, "node_id": "MDQ6VXNlcjY2NDA5MDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6640901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takhs91", "html_url": "https://github.com/takhs91", "followers_url": "https://api.github.com/users/takhs91/followers", "following_url": "https://api.github.com/users/takhs91/following{/other_user}", "gists_url": "https://api.github.com/users/takhs91/gists{/gist_id}", "starred_url": "https://api.github.com/users/takhs91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takhs91/subscriptions", "organizations_url": "https://api.github.com/users/takhs91/orgs", "repos_url": "https://api.github.com/users/takhs91/repos", "events_url": "https://api.github.com/users/takhs91/events{/privacy}", "received_events_url": "https://api.github.com/users/takhs91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T18:36:35Z", "updated_at": "2020-06-23T21:16:45Z", "closed_at": "2020-06-23T21:16:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\ncongratulations on making the fastest python json lib.\r\n\r\nThere seem to be an issue with those edge case numpy arrays\r\n```\r\n>>> orjson.dumps({'a' : np.array(0)}, option=orjson.OPT_SERIALIZE_NUMPY)                                                                                                                                                                 \r\nthread '<unnamed>' panicked at 'index out of bounds: the len is 0 but the index is 18446744073709551615', src/array.rs:155:9\r\nstack backtrace:\r\n   0: <unknown>\r\n   1: <unknown>\r\n   2: <unknown>\r\n   3: <unknown>\r\n   4: <unknown>\r\n   5: <unknown>\r\n   6: <unknown>\r\n   7: <unknown>\r\n   8: <unknown>\r\n   9: <unknown>\r\n  10: <unknown>\r\n  11: dumps\r\n  12: _PyMethodDef_RawFastCallKeywords\r\n             at Objects/call.c:690\r\n  13: _PyCFunction_FastCallKeywords\r\n             at Objects/call.c:730\r\n  14: call_function\r\n             at Python/ceval.c:4568\r\n  15: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:3139\r\n  16: PyEval_EvalFrameEx\r\n             at Python/ceval.c:547\r\n  17: _PyEval_EvalCodeWithName\r\n             at Python/ceval.c:3930\r\n  18: PyEval_EvalCodeEx\r\n             at Python/ceval.c:3959\r\n  19: PyEval_EvalCode\r\n             at Python/ceval.c:524\r\n  20: builtin_exec_impl\r\n             at Python/bltinmodule.c:1079\r\n  21: builtin_exec\r\n             at Python/clinic/bltinmodule.c.h:283\r\n  22: _PyMethodDef_RawFastCallKeywords\r\n             at Objects/call.c:651\r\n  23: _PyCFunction_FastCallKeywords\r\n             at Objects/call.c:730\r\n  24: call_function\r\n             at Python/ceval.c:4568\r\n  25: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:3124\r\n  26: gen_send_ex\r\n             at Objects/genobject.c:221\r\n  27: _PyGen_Send\r\n             at Objects/genobject.c:291\r\n  28: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:1787\r\n  29: gen_send_ex\r\n             at Objects/genobject.c:221\r\n  30: _PyGen_Send\r\n             at Objects/genobject.c:291\r\n  31: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:1787\r\n  32: gen_send_ex\r\n             at Objects/genobject.c:221\r\n  33: _PyGen_Send\r\n             at Objects/genobject.c:291\r\n  34: _PyMethodDef_RawFastCallKeywords\r\n             at Objects/call.c:644\r\n  35: _PyMethodDescr_FastCallKeywords\r\n             at Objects/descrobject.c:288\r\n  36: call_function\r\n             at Python/ceval.c:4593\r\n  37: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:3110\r\n  38: function_code_fastcall\r\n             at Objects/call.c:283\r\n  39: _PyFunction_FastCallKeywords\r\n             at Objects/call.c:408\r\n  40: call_function\r\n             at Python/ceval.c:4616\r\n  41: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:3124\r\n  42: function_code_fastcall\r\n             at Objects/call.c:283\r\n  43: _PyFunction_FastCallKeywords\r\n             at Objects/call.c:408\r\n  44: call_function\r\n             at Python/ceval.c:4616\r\n  45: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:3110\r\n  46: PyEval_EvalFrameEx\r\n             at Python/ceval.c:547\r\n  47: _PyEval_EvalCodeWithName\r\n             at Python/ceval.c:3930\r\n  48: _PyFunction_FastCallKeywords\r\n             at Objects/call.c:433\r\n  49: call_function\r\n             at Python/ceval.c:4616\r\n  50: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:3139\r\n  51: PyEval_EvalFrameEx\r\n             at Python/ceval.c:547\r\n  52: _PyEval_EvalCodeWithName\r\n             at Python/ceval.c:3930\r\n  53: _PyFunction_FastCallKeywords\r\n             at Objects/call.c:433\r\n  54: call_function\r\n             at Python/ceval.c:4616\r\n  55: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:3110\r\n  56: PyEval_EvalFrameEx\r\n             at Python/ceval.c:547\r\n  57: _PyEval_EvalCodeWithName\r\n             at Python/ceval.c:3930\r\n  58: _PyFunction_FastCallKeywords\r\n             at Objects/call.c:433\r\n  59: call_function\r\n             at Python/ceval.c:4616\r\n  60: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:3110\r\n  61: function_code_fastcall\r\n             at Objects/call.c:283\r\n  62: _PyFunction_FastCallKeywords\r\n             at Objects/call.c:408\r\n  63: call_function\r\n             at Python/ceval.c:4616\r\n  64: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:3110\r\n  65: PyEval_EvalFrameEx\r\n             at Python/ceval.c:547\r\n  66: _PyEval_EvalCodeWithName\r\n             at Python/ceval.c:3930\r\n  67: _PyFunction_FastCallDict\r\n             at Objects/call.c:376\r\n  68: _PyObject_FastCallDict\r\n             at Objects/call.c:98\r\n  69: _PyObject_Call_Prepend\r\n             at Objects/call.c:904\r\n  70: PyObject_Call\r\n             at Objects/call.c:245\r\n  71: do_call_core\r\n             at Python/ceval.c:4645\r\n  72: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:3191\r\n  73: PyEval_EvalFrameEx\r\n             at Python/ceval.c:547\r\n  74: _PyEval_EvalCodeWithName\r\n             at Python/ceval.c:3930\r\n  75: _PyFunction_FastCallKeywords\r\n             at Objects/call.c:433\r\n  76: call_function\r\n             at Python/ceval.c:4616\r\n  77: _PyEval_EvalFrameDefault\r\n             at Python/ceval.c:3124\r\n  78: PyEval_EvalFrameEx\r\n             at Python/ceval.c:547\r\n  79: _PyEval_EvalCodeWithName\r\n             at Python/ceval.c:3930\r\n  80: PyEval_EvalCodeEx\r\n             at Python/ceval.c:3959\r\n  81: PyEval_EvalCode\r\n             at Python/ceval.c:524\r\n  82: run_mod\r\n             at Python/pythonrun.c:1035\r\n  83: PyRun_FileExFlags\r\n             at Python/pythonrun.c:988\r\n  84: PyRun_SimpleFileExFlags\r\n             at Python/pythonrun.c:429\r\n  85: pymain_run_file\r\n             at Modules/main.c:427\r\n  86: pymain_run_filename\r\n             at Modules/main.c:1627\r\n  87: pymain_run_python\r\n             at Modules/main.c:2877\r\n  88: pymain_main\r\n             at Modules/main.c:3038\r\n  89: _Py_UnixMain\r\n             at Modules/main.c:3073\r\n  90: __libc_start_main\r\n  91: _start\r\nnote: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.\r\nAborted\r\n```\r\nThey seem to be of size 1 and empty shape, I guess they need special handling\r\nhttps://stackoverflow.com/questions/54496921/why-is-shape-empty/54497476", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/106", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/106/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/106/events", "html_url": "https://github.com/ijl/orjson/issues/106", "id": 640069274, "node_id": "MDU6SXNzdWU2NDAwNjkyNzQ=", "number": 106, "title": "python json encoder logger", "user": {"login": "rspadim", "id": 2468782, "node_id": "MDQ6VXNlcjI0Njg3ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2468782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rspadim", "html_url": "https://github.com/rspadim", "followers_url": "https://api.github.com/users/rspadim/followers", "following_url": "https://api.github.com/users/rspadim/following{/other_user}", "gists_url": "https://api.github.com/users/rspadim/gists{/gist_id}", "starred_url": "https://api.github.com/users/rspadim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rspadim/subscriptions", "organizations_url": "https://api.github.com/users/rspadim/orgs", "repos_url": "https://api.github.com/users/rspadim/repos", "events_url": "https://api.github.com/users/rspadim/events{/privacy}", "received_events_url": "https://api.github.com/users/rspadim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-17T01:16:40Z", "updated_at": "2020-06-17T12:55:00Z", "closed_at": "2020-06-17T12:55:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks!\r\n\r\ncould be possible integrate orjson into  https://github.com/madzak/python-json-logger?\r\n\r\nI think it only need a json.JsonEncoder interface (https://docs.python.org/3/library/json.html#json.JSONEncoder)\r\n\r\nhttps://github.com/madzak/python-json-logger/blob/master/src/pythonjsonlogger/jsonlogger.py\r\n\r\n\r\nsame issue of: https://github.com/madzak/python-json-logger/issues/93", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/105", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/105/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/105/events", "html_url": "https://github.com/ijl/orjson/issues/105", "id": 638241303, "node_id": "MDU6SXNzdWU2MzgyNDEzMDM=", "number": 105, "title": "orjson uses 1.46 instead of 1.45", "user": {"login": "Gelbpunkt", "id": 38864617, "node_id": "MDQ6VXNlcjM4ODY0NjE3", "avatar_url": "https://avatars2.githubusercontent.com/u/38864617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gelbpunkt", "html_url": "https://github.com/Gelbpunkt", "followers_url": "https://api.github.com/users/Gelbpunkt/followers", "following_url": "https://api.github.com/users/Gelbpunkt/following{/other_user}", "gists_url": "https://api.github.com/users/Gelbpunkt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gelbpunkt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gelbpunkt/subscriptions", "organizations_url": "https://api.github.com/users/Gelbpunkt/orgs", "repos_url": "https://api.github.com/users/Gelbpunkt/repos", "events_url": "https://api.github.com/users/Gelbpunkt/events{/privacy}", "received_events_url": "https://api.github.com/users/Gelbpunkt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-13T22:07:50Z", "updated_at": "2020-06-13T22:53:25Z", "closed_at": "2020-06-13T22:53:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm compiling orjson against Rust 1.45, because as your earlier branch shows, Rust 1.46 Nightly breaks a dependency.\r\n\r\nMy steps are: \r\n```sh\r\ncurl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain none -y\r\nrustup toolchain install nightly-2020-06-01 --allow-downgrade --profile minimal\r\nrustc --version # 1.45\r\nmaturin build --no-sdist --release --strip --interpreter python3 --manylinux off\r\n```\r\n\r\nThe error message from maturin suggests that it's somehow using Rust 1.46 which I never installed.\r\n```rs\r\nthread 'rustc' panicked at 'Box<Any>', src/librustc_errors/lib.rs:912:9\r\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\r\nnote: the compiler unexpectedly panicked. this is a bug.\r\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\r\nnote: rustc 1.46.0-nightly (f4fbb9311 2020-06-12) running on x86_64-unknown-linux-musl\r\nnote: compiler flags: -Z mutable-noalias -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 -C target-feature=+sse2 -C\r\ntarget-feature=-crt-static --crate-type lib\r\n```\r\nWhen 1.46 wasn't available yet it compiled fine. How can I make it not \"update\" my rust and use 1.45 instead?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/104", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/104/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/104/events", "html_url": "https://github.com/ijl/orjson/issues/104", "id": 638188400, "node_id": "MDU6SXNzdWU2MzgxODg0MDA=", "number": 104, "title": "Fail to install on alpine based docker image", "user": {"login": "jonathan-s", "id": 2124818, "node_id": "MDQ6VXNlcjIxMjQ4MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2124818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathan-s", "html_url": "https://github.com/jonathan-s", "followers_url": "https://api.github.com/users/jonathan-s/followers", "following_url": "https://api.github.com/users/jonathan-s/following{/other_user}", "gists_url": "https://api.github.com/users/jonathan-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathan-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathan-s/subscriptions", "organizations_url": "https://api.github.com/users/jonathan-s/orgs", "repos_url": "https://api.github.com/users/jonathan-s/repos", "events_url": "https://api.github.com/users/jonathan-s/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathan-s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-13T16:14:10Z", "updated_at": "2020-06-16T13:55:08Z", "closed_at": "2020-06-16T13:55:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error. It's installed with poetry. I tried a regular pip install, which seemed to work. \r\n```\r\nCommand ['/root/.cache/pypoetry/virtualenvs/foxflash-9TtSrW0h-py3.6/bin/pip', 'install', '--no-deps', 'orjson==3.1.0'] errored with the following return code 1, and output:\r\nCollecting orjson==3.1.0\r\n  Using cached https://files.pythonhosted.org/packages/fb/09/b96e12259bfdc9fb70e9dcf8e05fd6297a6a539582c0c835f41c3c3c3a7f/orjson-3.1.0.tar.gz\r\n  Installing build dependencies: started\r\n  Installing build dependencies: still running...\r\n  Installing build dependencies: still running...\r\n  Installing build dependencies: still running...\r\n  Installing build dependencies: finished with status 'done'\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/usr/local/lib/python3.6/tokenize.py\", line 452, in open\r\n        buffer = _builtin_open(filename, 'rb')\r\n    FileNotFoundError: [Errno 2] No such file or directory: '/tmp/pip-install-5m15uc_e/orjson/setup.py'\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-5m15uc_e/orjson/\r\nYou are using pip version 18.1, however version 20.2b1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/102", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/102/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/102/events", "html_url": "https://github.com/ijl/orjson/issues/102", "id": 637278283, "node_id": "MDU6SXNzdWU2MzcyNzgyODM=", "number": 102, "title": "Runtime.ImportModuleError: Unable to import module 'sample': No module named 'orjson'", "user": {"login": "bill2hu", "id": 15702642, "node_id": "MDQ6VXNlcjE1NzAyNjQy", "avatar_url": "https://avatars1.githubusercontent.com/u/15702642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bill2hu", "html_url": "https://github.com/bill2hu", "followers_url": "https://api.github.com/users/bill2hu/followers", "following_url": "https://api.github.com/users/bill2hu/following{/other_user}", "gists_url": "https://api.github.com/users/bill2hu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bill2hu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bill2hu/subscriptions", "organizations_url": "https://api.github.com/users/bill2hu/orgs", "repos_url": "https://api.github.com/users/bill2hu/repos", "events_url": "https://api.github.com/users/bill2hu/events{/privacy}", "received_events_url": "https://api.github.com/users/bill2hu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-11T19:49:33Z", "updated_at": "2020-06-13T12:23:54Z", "closed_at": "2020-06-13T12:23:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "### What did you do?\r\n\r\npip install orjson -t .\r\n\r\n### What did you expect to happen?\r\nI am trying to create an AWS lambda function package with python source code, some third party libraries. Along with this library packaged with python source code. Something like this\r\nll  requests\r\ntotal 856\r\n-rw-r--r--  1 user1  ANT\\Domain Users   3927 Jun  5 20:33 __init__.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users   4167 Jun  5 20:33 __init__.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users    441 Jun  5 20:33 __version__.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users    632 Jun  5 20:33 __version__.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users   1096 Jun  5 20:33 _internal_utils.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users   1655 Jun  5 20:33 _internal_utils.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users  21344 Jun  5 20:33 adapters.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users  20180 Jun  5 20:33 adapters.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users   6496 Jun  5 20:33 api.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users   7679 Jun  5 20:33 api.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users  10207 Jun  5 20:33 auth.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users  11539 Jun  5 20:33 auth.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users    453 Jun  5 20:33 certs.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users    646 Jun  5 20:33 certs.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users   1782 Jun  5 20:33 compat.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users   2039 Jun  5 20:33 compat.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users  18430 Jun  5 20:33 cookies.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users  24857 Jun  5 20:33 cookies.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users   3185 Jun  5 20:33 exceptions.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users   8158 Jun  5 20:33 exceptions.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users   3515 Jun  5 20:33 help.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users   3474 Jun  5 20:33 help.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users    757 Jun  5 20:33 hooks.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users   1370 Jun  5 20:33 hooks.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users  34213 Jun  5 20:33 models.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users  31426 Jun  5 20:33 models.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users    542 Jun  5 20:33 packages.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users    511 Jun  5 20:33 packages.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users  29265 Jun  5 20:33 sessions.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users  24142 Jun  5 20:33 sessions.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users   4188 Jun  5 20:33 status_codes.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users   6301 Jun  5 20:33 status_codes.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users   3005 Jun  5 20:33 structures.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users   6186 Jun  5 20:33 structures.pyc\r\n-rw-r--r--  1 user1  ANT\\Domain Users  30176 Jun  5 20:33 utils.py\r\n-rw-r--r--  1 user1  ANT\\Domain Users  29195 Jun  5 20:33 utils.pyc\r\n\r\n### What actually happened?\r\nFrom the download, I only got a orjson.cpython-37m-darwin.so file and orjson-3.1.0.dist-info folder. This shared library can not be used on AWS lambda service. \r\n\r\n```python\r\nRuntime.ImportModuleError: Unable to import module 'sample': No module named 'orjson' \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/101", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/101/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/101/events", "html_url": "https://github.com/ijl/orjson/issues/101", "id": 636838932, "node_id": "MDU6SXNzdWU2MzY4Mzg5MzI=", "number": 101, "title": "dumps twice will cause an error", "user": {"login": "Yvictor", "id": 8242025, "node_id": "MDQ6VXNlcjgyNDIwMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8242025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yvictor", "html_url": "https://github.com/Yvictor", "followers_url": "https://api.github.com/users/Yvictor/followers", "following_url": "https://api.github.com/users/Yvictor/following{/other_user}", "gists_url": "https://api.github.com/users/Yvictor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yvictor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yvictor/subscriptions", "organizations_url": "https://api.github.com/users/Yvictor/orgs", "repos_url": "https://api.github.com/users/Yvictor/repos", "events_url": "https://api.github.com/users/Yvictor/events{/privacy}", "received_events_url": "https://api.github.com/users/Yvictor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-11T08:48:25Z", "updated_at": "2020-06-18T12:49:57Z", "closed_at": "2020-06-18T12:49:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use xxhash will and dumps it twice will let value from `b30d56b4` become `'\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00'`.\r\nerror sample code below\r\n\r\n``` python\r\nimport pytest\r\nimport orjson\r\nimport xxhash\r\n\r\ndef test_will_failed():\r\n    content = dict(a=xxhash.xxh32_hexdigest(\"12345\"))\r\n    orjson.dumps(content)\r\n    res = orjson.loads(orjson.dumps(content))\r\n    assert content == res\r\n\r\n\r\ndef test_can_pass():\r\n    content = dict(a=xxhash.xxh32_hexdigest(\"12345\"))\r\n    res = orjson.loads(orjson.dumps((content)))\r\n    assert res == content\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/98", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/98/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/98/events", "html_url": "https://github.com/ijl/orjson/issues/98", "id": 631030274, "node_id": "MDU6SXNzdWU2MzEwMzAyNzQ=", "number": 98, "title": "cannot `pip3 install orjson` in Docker currently (alpine linux)", "user": {"login": "systemcrash", "id": 647633, "node_id": "MDQ6VXNlcjY0NzYzMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/647633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/systemcrash", "html_url": "https://github.com/systemcrash", "followers_url": "https://api.github.com/users/systemcrash/followers", "following_url": "https://api.github.com/users/systemcrash/following{/other_user}", "gists_url": "https://api.github.com/users/systemcrash/gists{/gist_id}", "starred_url": "https://api.github.com/users/systemcrash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/systemcrash/subscriptions", "organizations_url": "https://api.github.com/users/systemcrash/orgs", "repos_url": "https://api.github.com/users/systemcrash/repos", "events_url": "https://api.github.com/users/systemcrash/events{/privacy}", "received_events_url": "https://api.github.com/users/systemcrash/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-04T17:49:52Z", "updated_at": "2020-06-16T14:01:04Z", "closed_at": "2020-06-16T14:01:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this:\r\n```\r\nCollecting orjson\r\n  Downloading https://files.pythonhosted.org/packages/9c/6e/14a622d6b2615573bbd1c404dc16f60a153474d20e91ab13ab49dde0867c/orjson-3.0.2.tar.gz (649kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'error'\r\n  Complete output from command /usr/bin/python3.6 -m pip install --ignore-installed --no-user --prefix /tmp/pip-build-env-vugd6617 --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- maturin>=0.8.1,<0.9:\r\n  Collecting maturin<0.9,>=0.8.1\r\n    Downloading https://files.pythonhosted.org/packages/a7/df/a9060d8e4639feec0e8ab98081e5b9e7bd302db29b666cc79c2c6baf4397/maturin-0.8.1.tar.gz (78kB)\r\n    Installing build dependencies: started\r\n    Installing build dependencies: finished with status 'done'\r\n  Collecting toml~=0.10.0 (from maturin<0.9,>=0.8.1)\r\n    Using cached https://files.pythonhosted.org/packages/9f/e1/1b40b80f2e1663a6b9f497123c11d7d988c0919abbf3c3f2688e448c5363/toml-0.10.1-py2.py3-none-any.whl\r\n  Installing collected packages: toml, maturin\r\n    Running setup.py install for maturin: started\r\n      Running setup.py install for maturin: finished with status 'error'\r\n      Complete output from command /usr/bin/python3.6 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-install-pyhjev5y/maturin/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-record-89n4jgda/install-record.txt --single-version-externally-managed --prefix /tmp/pip-build-env-vugd6617 --compile:\r\n      running install\r\n      warning: unused manifest key: package.edition\r\n      error: failed to parse lock file at: /tmp/pip-install-pyhjev5y/maturin/Cargo.lock\r\n\r\n      Caused by:\r\n        invalid serialized PackageId for key `package.dependencies`\r\n      Traceback (most recent call last):\r\n        File \"<string>\", line 1, in <module>\r\n        File \"/tmp/pip-install-pyhjev5y/maturin/setup.py\", line 101, in <module>\r\n          zip_safe=False,\r\n        File \"/tmp/pip-build-env-5zcgcduk/lib/python3.6/site-packages/setuptools/__init__.py\", line 145, in setup\r\n          return distutils.core.setup(**attrs)\r\n        File \"/usr/lib/python3.6/distutils/core.py\", line 148, in setup\r\n          dist.run_commands()\r\n        File \"/usr/lib/python3.6/distutils/dist.py\", line 955, in run_commands\r\n          self.run_command(cmd)\r\n        File \"/usr/lib/python3.6/distutils/dist.py\", line 974, in run_command\r\n          cmd_obj.run()\r\n        File \"/tmp/pip-install-pyhjev5y/maturin/setup.py\", line 59, in run\r\n          [\"cargo\", \"rustc\", \"--bin\", \"maturin\", \"--\", \"-C\", \"link-arg=-s\"]\r\n        File \"/usr/lib/python3.6/subprocess.py\", line 311, in check_call\r\n          raise CalledProcessError(retcode, cmd)\r\n      subprocess.CalledProcessError: Command '['cargo', 'rustc', '--bin', 'maturin', '--', '-C', 'link-arg=-s']' returned non-zero exit status 101.\r\n```\r\n\r\nWhen called from `docker-compose build` with alpine linux 3.7\r\n\r\nNot possible to distribute orjson without the need to compile?\r\n\r\n\r\nIf I try on latest alpine linux:\r\n\r\n```\r\n...\r\nCollecting orjson\r\n  Downloading orjson-3.0.2.tar.gz (649 kB)\r\n  Installing build dependencies: started\r\n  Installing build dependencies: still running...\r\n  Installing build dependencies: still running...\r\n  Installing build dependencies: still running...\r\n  Installing build dependencies: still running...\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'error'\r\n    ERROR: Command errored out with exit status 1:\r\n     command: /usr/bin/python3 /usr/lib/python3.8/site-packages/pep517/_in_process.py prepare_metadata_for_build_wheel /tmp/tmpv96ooomy\r\n         cwd: /tmp/pip-install-se40dy4c/orjson\r\n    Complete output (14 lines):\r\n    \ud83d\udca5 maturin failed\r\n      Caused by: Cargo metadata failed. Do you have cargo in your PATH?\r\n      Caused by: Error during execution of `cargo metadata`: error: failed to run `rustc` to learn about target-specific information\r\n\r\n    Caused by:\r\n      process didn't exit successfully: `rustc - --crate-name ___ --print=file-names -Z mutable-noalias --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=cfg` (exit code: 1)\r\n    --- stderr\r\n    error: the option `Z` is only accepted on the nightly compiler\r\n\r\n\r\n\r\n    Checking for Rust toolchain....\r\n    Running `maturin pep517 write-dist-info --metadata-directory /tmp/pip-modern-metadata-lpe0im7j --manylinux=off --strip=on`\r\n    Error: Command '['maturin', 'pep517', 'write-dist-info', '--metadata-directory', '/tmp/pip-modern-metadata-lpe0im7j', '--manylinux=off', '--strip=on']' returned non-zero exit status 1.\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: /usr/bin/python3 /usr/lib/python3.8/site-packages/pep517/_in_process.py prepare_metadata_for_build_wheel /tmp/tmpv96ooomy Check the logs for full command output.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/97", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/97/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/97/events", "html_url": "https://github.com/ijl/orjson/issues/97", "id": 630133453, "node_id": "MDU6SXNzdWU2MzAxMzM0NTM=", "number": 97, "title": "FEATURE: None/Null serialization option", "user": {"login": "Tetradeus", "id": 1665874, "node_id": "MDQ6VXNlcjE2NjU4NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1665874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tetradeus", "html_url": "https://github.com/Tetradeus", "followers_url": "https://api.github.com/users/Tetradeus/followers", "following_url": "https://api.github.com/users/Tetradeus/following{/other_user}", "gists_url": "https://api.github.com/users/Tetradeus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tetradeus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tetradeus/subscriptions", "organizations_url": "https://api.github.com/users/Tetradeus/orgs", "repos_url": "https://api.github.com/users/Tetradeus/repos", "events_url": "https://api.github.com/users/Tetradeus/events{/privacy}", "received_events_url": "https://api.github.com/users/Tetradeus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T16:13:15Z", "updated_at": "2020-06-13T12:24:12Z", "closed_at": "2020-06-13T12:24:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nIt would be nice to have an option to not serialize fields which have null value.\r\nWhat is your opinion ?\r\n\r\nThanks,\r\n\r\nTetra", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/96", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/96/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/96/events", "html_url": "https://github.com/ijl/orjson/issues/96", "id": 629897047, "node_id": "MDU6SXNzdWU2Mjk4OTcwNDc=", "number": 96, "title": "Disable/override default datetime serialization", "user": {"login": "lbenc135", "id": 20871882, "node_id": "MDQ6VXNlcjIwODcxODgy", "avatar_url": "https://avatars2.githubusercontent.com/u/20871882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbenc135", "html_url": "https://github.com/lbenc135", "followers_url": "https://api.github.com/users/lbenc135/followers", "following_url": "https://api.github.com/users/lbenc135/following{/other_user}", "gists_url": "https://api.github.com/users/lbenc135/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbenc135/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbenc135/subscriptions", "organizations_url": "https://api.github.com/users/lbenc135/orgs", "repos_url": "https://api.github.com/users/lbenc135/repos", "events_url": "https://api.github.com/users/lbenc135/events{/privacy}", "received_events_url": "https://api.github.com/users/lbenc135/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T10:54:39Z", "updated_at": "2020-06-08T13:36:06Z", "closed_at": "2020-06-08T13:36:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, love your library. My colleagues and I would like to use it in our platform to speed up our serialization.\r\n\r\nHowever, we have a strict date/datetime format we need to use, and I can't find a way to either override/disable your default datetime serialization, or alternatively specify a format.\r\n\r\nAny help would be appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/94", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/94/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/94/events", "html_url": "https://github.com/ijl/orjson/issues/94", "id": 628885337, "node_id": "MDU6SXNzdWU2Mjg4ODUzMzc=", "number": 94, "title": "Support custom bidirectional de(serialization) with currently supported types", "user": {"login": "rwarren", "id": 2751728, "node_id": "MDQ6VXNlcjI3NTE3Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2751728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rwarren", "html_url": "https://github.com/rwarren", "followers_url": "https://api.github.com/users/rwarren/followers", "following_url": "https://api.github.com/users/rwarren/following{/other_user}", "gists_url": "https://api.github.com/users/rwarren/gists{/gist_id}", "starred_url": "https://api.github.com/users/rwarren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rwarren/subscriptions", "organizations_url": "https://api.github.com/users/rwarren/orgs", "repos_url": "https://api.github.com/users/rwarren/repos", "events_url": "https://api.github.com/users/rwarren/events{/privacy}", "received_events_url": "https://api.github.com/users/rwarren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-02T04:10:50Z", "updated_at": "2020-06-16T14:06:34Z", "closed_at": "2020-06-16T14:06:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now `orjson` serializes `datetime` to `str`, but cannot be configured to go in the reverse direction since the end result is just a `str`.\r\n\r\nI would like to be able to configure `orjson` to work bidirectionally for numerous data types (including `datetime`), but A) don't have the appropriate hooks available, and B) can't override the way that `orjson` deals with types it supports automatically (like `datetime`).\r\n\r\nFor comparison, I can set up bidrectional (de)serialization of python `datetime` through `json` with the standard `json` module something like this:\r\n\r\n```python\r\nimport datetime\r\nimport json\r\nfrom typing import *\r\n\r\nDT_KEY = \":__json__dt__:\"\r\n\r\nclass MyEncoder(json.JSONEncoder):\r\n    def default(self, o: Any) -> Any:\r\n        if isinstance(o, datetime.datetime):\r\n            return {DT_KEY: o.isoformat()}\r\n        #return json.JSONEncoder.default(self, o)\r\n        return super().default(o)\r\n\r\ndef object_hook(obj: Dict[str, Any]) -> Any:\r\n    try:\r\n        iso_date = obj[DT_KEY]\r\n        return datetime.datetime.fromisoformat(iso_date)\r\n    except:\r\n        return obj\r\n\r\nnow = datetime.datetime.now()\r\ndumped = json.dumps(now, cls = MyEncoder)\r\nloaded = json.loads(dumped, object_hook = object_hook)\r\nassert loaded == now\r\n```\r\n\r\nThis is possible because of a few things:\r\n\r\n1. `datetime.datetime` is obviously not supported by `json`, so a serialization hook is easy\r\n2. The `object_hook` feature on `loads` allows for deserialization tricks like this for objects/dicts\r\n\r\nUnless I'm missing something, the only option for partial satisfaction of what I want is to compose a wrapper class around my `datetime` objects and implement a default serializer for the wrapper class to get my custom \"_datetime-in-a-dict_\" storage encoding.  However, I see no possible way to get `orjson` to deserialize this directly to `datetime`, since there is no deserialization hook comparable to the `json` `object_hook` interception.\r\n\r\nRegarding tricking `orjson` to encode `datetime` instances in other ways by wrapping it, this is ok for single instances, but much trickier for instances nested inside containers since they would all need to be found and wrapped in advance (vs being able to catch them directly at all levels via the default hook). Having to dive through containers to wrap all desired `datetime` (or whatever) objects in advance of serialization is obviously not ideal.\r\n\r\nThere are multiple ways `orjson` could hopefully deal with this, but here are a few suggestions that would be awesome if `orjson` could implement:\r\n\r\n1. Add options to disable native `orjson` serialization for currently handled types\r\n    * e.g. `OPT_DISABLE_DATETIME` to cause `datetime` objects to get routed through the default/custom serializer code (enabling custom serialization like my core `json` module code above)\r\n    * Options for disabling/reimplementing each native type (like `OPT_DISABLE_NDARRAY`) would be excellent for similar reasons\r\n2. Add an `object_hook` option for object/dict decoding, similar to what the `json` module has\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/93", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/93/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/93/events", "html_url": "https://github.com/ijl/orjson/issues/93", "id": 625097260, "node_id": "MDU6SXNzdWU2MjUwOTcyNjA=", "number": 93, "title": "Support overriding non default classes", "user": {"login": "saulshanabrook", "id": 1186124, "node_id": "MDQ6VXNlcjExODYxMjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1186124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saulshanabrook", "html_url": "https://github.com/saulshanabrook", "followers_url": "https://api.github.com/users/saulshanabrook/followers", "following_url": "https://api.github.com/users/saulshanabrook/following{/other_user}", "gists_url": "https://api.github.com/users/saulshanabrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/saulshanabrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saulshanabrook/subscriptions", "organizations_url": "https://api.github.com/users/saulshanabrook/orgs", "repos_url": "https://api.github.com/users/saulshanabrook/repos", "events_url": "https://api.github.com/users/saulshanabrook/events{/privacy}", "received_events_url": "https://api.github.com/users/saulshanabrook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-26T18:32:37Z", "updated_at": "2020-06-08T14:34:58Z", "closed_at": "2020-06-08T13:35:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to serialize some arbitrary Python objects and I want to preserve some differences that are currently elided. Currently, if an object subclasses from a supported type you cannot override it. \r\n\r\nFor example, there would be no way to have a custom serialization for `Hi` below:\r\n\r\n```python\r\nclass Hi(int):\r\n    pass\r\n```\r\n\r\nAlso, I would like to differentiate between serializing tuples and lists, but this is currently impossible as well. \r\n\r\nMaybe it would be possible to also add the ability to define a `preprocess` function that you would pass in? It would be called on each value before trying to serialize. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/91", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/91/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/91/events", "html_url": "https://github.com/ijl/orjson/issues/91", "id": 620205582, "node_id": "MDU6SXNzdWU2MjAyMDU1ODI=", "number": 91, "title": "Fallback to default function with option NON_STR_KEYS", "user": {"login": "ozankabak", "id": 2006258, "node_id": "MDQ6VXNlcjIwMDYyNTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2006258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozankabak", "html_url": "https://github.com/ozankabak", "followers_url": "https://api.github.com/users/ozankabak/followers", "following_url": "https://api.github.com/users/ozankabak/following{/other_user}", "gists_url": "https://api.github.com/users/ozankabak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozankabak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozankabak/subscriptions", "organizations_url": "https://api.github.com/users/ozankabak/orgs", "repos_url": "https://api.github.com/users/ozankabak/repos", "events_url": "https://api.github.com/users/ozankabak/events{/privacy}", "received_events_url": "https://api.github.com/users/ozankabak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T13:22:24Z", "updated_at": "2020-06-16T13:57:08Z", "closed_at": "2020-06-16T13:57:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When serializing dictionaries with non-string keys, the library throws an error if a key's type is not one of the supported types -- it does not try to serialize it via a call to `default`. This makes serializing dictionaries with key types such as `Decimal` (or other custom types) impossible. Is there a particular reason why the library does not attempt to call `default` before giving up in these cases? Note that the library does not behave like this uniformly; it does call `default` when a similar thing happens when dealing with `enum`s.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/90", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/90/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/90/events", "html_url": "https://github.com/ijl/orjson/issues/90", "id": 619674085, "node_id": "MDU6SXNzdWU2MTk2NzQwODU=", "number": 90, "title": "Pypy support", "user": {"login": "lewoudar", "id": 10879977, "node_id": "MDQ6VXNlcjEwODc5OTc3", "avatar_url": "https://avatars2.githubusercontent.com/u/10879977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lewoudar", "html_url": "https://github.com/lewoudar", "followers_url": "https://api.github.com/users/lewoudar/followers", "following_url": "https://api.github.com/users/lewoudar/following{/other_user}", "gists_url": "https://api.github.com/users/lewoudar/gists{/gist_id}", "starred_url": "https://api.github.com/users/lewoudar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lewoudar/subscriptions", "organizations_url": "https://api.github.com/users/lewoudar/orgs", "repos_url": "https://api.github.com/users/lewoudar/repos", "events_url": "https://api.github.com/users/lewoudar/events{/privacy}", "received_events_url": "https://api.github.com/users/lewoudar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-17T11:09:53Z", "updated_at": "2020-05-19T13:58:16Z", "closed_at": "2020-05-19T13:58:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi ijl,\r\nthank you for this amazing piece of software.\r\nI have just one question (and I think you guessed it by the title) , is pypy support planned or not?\r\n\r\nBest regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/89", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/89/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/89/events", "html_url": "https://github.com/ijl/orjson/issues/89", "id": 619602602, "node_id": "MDU6SXNzdWU2MTk2MDI2MDI=", "number": 89, "title": "Memory leak during deserialization fiasco", "user": {"login": "Gricha", "id": 875316, "node_id": "MDQ6VXNlcjg3NTMxNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/875316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gricha", "html_url": "https://github.com/Gricha", "followers_url": "https://api.github.com/users/Gricha/followers", "following_url": "https://api.github.com/users/Gricha/following{/other_user}", "gists_url": "https://api.github.com/users/Gricha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gricha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gricha/subscriptions", "organizations_url": "https://api.github.com/users/Gricha/orgs", "repos_url": "https://api.github.com/users/Gricha/repos", "events_url": "https://api.github.com/users/Gricha/events{/privacy}", "received_events_url": "https://api.github.com/users/Gricha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-17T03:50:19Z", "updated_at": "2020-05-19T19:12:05Z", "closed_at": "2020-05-19T13:58:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey all! Here is a minimal snippet I captured that will unboundedly leak memory:\r\n\r\n```\r\nimport orjson\r\n\r\nwhile 1:\r\n    try:\r\n        orjson.loads(\"Whatever\")\r\n    except orjson.JSONDecodeError:\r\n        pass\r\n```\r\n\r\nI'm running that on Python 3.8.2 and with orjson 2.6.5. We've repro'd it both on Macs and Linux boxes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/87", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/87/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/87/events", "html_url": "https://github.com/ijl/orjson/issues/87", "id": 616755863, "node_id": "MDU6SXNzdWU2MTY3NTU4NjM=", "number": 87, "title": "[Feature Request] Add option to exclude None values from dictionaries and lists", "user": {"login": "Soberia", "id": 30440494, "node_id": "MDQ6VXNlcjMwNDQwNDk0", "avatar_url": "https://avatars1.githubusercontent.com/u/30440494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Soberia", "html_url": "https://github.com/Soberia", "followers_url": "https://api.github.com/users/Soberia/followers", "following_url": "https://api.github.com/users/Soberia/following{/other_user}", "gists_url": "https://api.github.com/users/Soberia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Soberia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Soberia/subscriptions", "organizations_url": "https://api.github.com/users/Soberia/orgs", "repos_url": "https://api.github.com/users/Soberia/repos", "events_url": "https://api.github.com/users/Soberia/events{/privacy}", "received_events_url": "https://api.github.com/users/Soberia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T15:36:18Z", "updated_at": "2020-05-12T16:12:12Z", "closed_at": "2020-05-12T16:12:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add option to exclude `None` values from dictionaries and lists in serialization and `null` values in deserialization", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/86", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/86/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/86/events", "html_url": "https://github.com/ijl/orjson/issues/86", "id": 613304738, "node_id": "MDU6SXNzdWU2MTMzMDQ3Mzg=", "number": 86, "title": "RawJSON (like rapidjson) suport ? ", "user": {"login": "guilbut", "id": 31963936, "node_id": "MDQ6VXNlcjMxOTYzOTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/31963936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guilbut", "html_url": "https://github.com/guilbut", "followers_url": "https://api.github.com/users/guilbut/followers", "following_url": "https://api.github.com/users/guilbut/following{/other_user}", "gists_url": "https://api.github.com/users/guilbut/gists{/gist_id}", "starred_url": "https://api.github.com/users/guilbut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guilbut/subscriptions", "organizations_url": "https://api.github.com/users/guilbut/orgs", "repos_url": "https://api.github.com/users/guilbut/repos", "events_url": "https://api.github.com/users/guilbut/events{/privacy}", "received_events_url": "https://api.github.com/users/guilbut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T13:06:03Z", "updated_at": "2020-05-11T20:33:30Z", "closed_at": "2020-05-11T20:33:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello ! \r\nIn order to be able to dumps with pretty indents and keep numpy.array in one line , I use rapidjson with RawJSON . Do you plan to suport something like that ? (but with bytes input)  \r\nThank  you very much for your amazing work  ! \r\n------------------------------------------------\r\nimport rapidjson\r\nimport numpy \r\n\r\ndef default (obj):\r\n    if isinstance (obj, numpy.ndarray):\r\n        return rapidjson.RawJSON (rapidjson.dumps (obj.tolist ()))\r\n    raise Exception(TypeError)\r\n\r\nmy_object = {\"array1\":numpy.array([1,2,3]),\"array3\": numpy.array([5,6,7])}\r\ndumped = rapidjson.dumps(my_object,indent = 2,default = default )\r\nprint(dumped)\r\n\r\n>>>\r\n{\r\n  \"array1\": [1,2,3],\r\n  \"array3\": [5,6,7]\r\n}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/85", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/85/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/85/events", "html_url": "https://github.com/ijl/orjson/issues/85", "id": 613286763, "node_id": "MDU6SXNzdWU2MTMyODY3NjM=", "number": 85, "title": "loads  with object_hook support ? ", "user": {"login": "guilbut", "id": 31963936, "node_id": "MDQ6VXNlcjMxOTYzOTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/31963936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guilbut", "html_url": "https://github.com/guilbut", "followers_url": "https://api.github.com/users/guilbut/followers", "following_url": "https://api.github.com/users/guilbut/following{/other_user}", "gists_url": "https://api.github.com/users/guilbut/gists{/gist_id}", "starred_url": "https://api.github.com/users/guilbut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guilbut/subscriptions", "organizations_url": "https://api.github.com/users/guilbut/orgs", "repos_url": "https://api.github.com/users/guilbut/repos", "events_url": "https://api.github.com/users/guilbut/events{/privacy}", "received_events_url": "https://api.github.com/users/guilbut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T12:37:31Z", "updated_at": "2020-05-11T20:34:26Z", "closed_at": "2020-05-11T20:34:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello !\r\nI'm looking to switch from simplejson to orjson.\r\nthe orjson.dumps support \"default\" callback parameter,like the python standard json lib . But des orjson.loads does'nt support the \"object_hook\"callback parameter, making the use of \"default\" in order recreate the original object useless. Do you plan to support it ? \r\nthank you very much ! \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/84", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/84/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/84/events", "html_url": "https://github.com/ijl/orjson/issues/84", "id": 613246897, "node_id": "MDU6SXNzdWU2MTMyNDY4OTc=", "number": 84, "title": "option for tabulation (\\n) indent ? ", "user": {"login": "guilbut", "id": 31963936, "node_id": "MDQ6VXNlcjMxOTYzOTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/31963936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guilbut", "html_url": "https://github.com/guilbut", "followers_url": "https://api.github.com/users/guilbut/followers", "following_url": "https://api.github.com/users/guilbut/following{/other_user}", "gists_url": "https://api.github.com/users/guilbut/gists{/gist_id}", "starred_url": "https://api.github.com/users/guilbut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guilbut/subscriptions", "organizations_url": "https://api.github.com/users/guilbut/orgs", "repos_url": "https://api.github.com/users/guilbut/repos", "events_url": "https://api.github.com/users/guilbut/events{/privacy}", "received_events_url": "https://api.github.com/users/guilbut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-06T11:27:02Z", "updated_at": "2020-05-11T20:35:34Z", "closed_at": "2020-05-11T20:35:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello !\r\n\r\nI'm looking to switch from simplejson to orjson. The problem is that I need to be able to have an option to have something readable with tabulation (\\n) indent without increasing the size too much compared to a flat json. OPT_INDENT_2 is not a solution for me, because with deep nested objects, the double_space*indentation_level , increases too much the size of the json. Do you think you are going to add it ?\r\n\r\nThank you very much! |  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/82", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/82/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/82/events", "html_url": "https://github.com/ijl/orjson/issues/82", "id": 609532099, "node_id": "MDU6SXNzdWU2MDk1MzIwOTk=", "number": 82, "title": "Integer overflows", "user": {"login": "opsengine", "id": 1335127, "node_id": "MDQ6VXNlcjEzMzUxMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1335127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opsengine", "html_url": "https://github.com/opsengine", "followers_url": "https://api.github.com/users/opsengine/followers", "following_url": "https://api.github.com/users/opsengine/following{/other_user}", "gists_url": "https://api.github.com/users/opsengine/gists{/gist_id}", "starred_url": "https://api.github.com/users/opsengine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opsengine/subscriptions", "organizations_url": "https://api.github.com/users/opsengine/orgs", "repos_url": "https://api.github.com/users/opsengine/repos", "events_url": "https://api.github.com/users/opsengine/events{/privacy}", "received_events_url": "https://api.github.com/users/opsengine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T03:08:30Z", "updated_at": "2020-04-30T12:27:20Z", "closed_at": "2020-04-30T12:27:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are two unchecked integer operation that can lead to an overflow. For one of them there is an input that triggers the overflow.\r\n\r\nOverflow 1\r\n```\r\nthread '<unnamed>' panicked at 'attempt to add with overflow', serde_orjson-1.0.51/src/de.rs:787:38\r\n```\r\nThis can be triggered with the code:\r\n`orjson.loads(\"[65.356933999999967]\")`\r\n\r\nIn `f64_from_parts()`:\r\n`product_middle1=17707409016718886656`\r\n`product_middle2=1020491046953003386`\r\nand their sum exceeds 2^64.\r\n\r\nOverflow 2\r\n```\r\nthread '<unnamed>' panicked at 'attempt to subtract with overflow', serde_orjson-1.0.51/src/de.rs:815:33\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/79", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/79/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/79/events", "html_url": "https://github.com/ijl/orjson/issues/79", "id": 607086474, "node_id": "MDU6SXNzdWU2MDcwODY0NzQ=", "number": 79, "title": "separators argument support", "user": {"login": "simingy", "id": 19955318, "node_id": "MDQ6VXNlcjE5OTU1MzE4", "avatar_url": "https://avatars2.githubusercontent.com/u/19955318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simingy", "html_url": "https://github.com/simingy", "followers_url": "https://api.github.com/users/simingy/followers", "following_url": "https://api.github.com/users/simingy/following{/other_user}", "gists_url": "https://api.github.com/users/simingy/gists{/gist_id}", "starred_url": "https://api.github.com/users/simingy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simingy/subscriptions", "organizations_url": "https://api.github.com/users/simingy/orgs", "repos_url": "https://api.github.com/users/simingy/repos", "events_url": "https://api.github.com/users/simingy/events{/privacy}", "received_events_url": "https://api.github.com/users/simingy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-26T18:56:10Z", "updated_at": "2020-04-27T13:59:58Z", "closed_at": "2020-04-27T13:59:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTypeError: dumps() got an unexpected keyword argument: separators\r\n```\r\n\r\ntried to use `orjson` with `python-socketio` and it fails due to the above error.\r\nis it possible to have 1-1 argument mapping support (such as `separators` argument) \r\nso we can reap the performance benefits without dealing with arg. translation?\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/78", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/78/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/78/events", "html_url": "https://github.com/ijl/orjson/issues/78", "id": 605649399, "node_id": "MDU6SXNzdWU2MDU2NDkzOTk=", "number": 78, "title": "orjson imports numpy at import time", "user": {"login": "wavenator", "id": 11490531, "node_id": "MDQ6VXNlcjExNDkwNTMx", "avatar_url": "https://avatars3.githubusercontent.com/u/11490531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wavenator", "html_url": "https://github.com/wavenator", "followers_url": "https://api.github.com/users/wavenator/followers", "following_url": "https://api.github.com/users/wavenator/following{/other_user}", "gists_url": "https://api.github.com/users/wavenator/gists{/gist_id}", "starred_url": "https://api.github.com/users/wavenator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wavenator/subscriptions", "organizations_url": "https://api.github.com/users/wavenator/orgs", "repos_url": "https://api.github.com/users/wavenator/repos", "events_url": "https://api.github.com/users/wavenator/events{/privacy}", "received_events_url": "https://api.github.com/users/wavenator/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-23T15:50:48Z", "updated_at": "2020-04-24T01:06:40Z", "closed_at": "2020-04-24T01:06:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason, importing `orjson` takes:\r\n`CPU times: user 242 ms, sys: 441 ms, total: 682 ms\r\nWall time: 96.9 ms`\r\n\r\nNow, after investigation with gdb, it looks like it importing `orjson` imports for some reason `numpy` as well. The issue is that importing numpy, not only takes a lot of time, but also opens multiple threads by using `openblas` for concurrency. I honestly don't know why orjson needs to import numpy during loading.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/77", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/77/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/77/events", "html_url": "https://github.com/ijl/orjson/issues/77", "id": 604892494, "node_id": "MDU6SXNzdWU2MDQ4OTI0OTQ=", "number": 77, "title": "Does this project follow semantic versioning?", "user": {"login": "alvassin", "id": 1497444, "node_id": "MDQ6VXNlcjE0OTc0NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1497444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvassin", "html_url": "https://github.com/alvassin", "followers_url": "https://api.github.com/users/alvassin/followers", "following_url": "https://api.github.com/users/alvassin/following{/other_user}", "gists_url": "https://api.github.com/users/alvassin/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvassin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvassin/subscriptions", "organizations_url": "https://api.github.com/users/alvassin/orgs", "repos_url": "https://api.github.com/users/alvassin/repos", "events_url": "https://api.github.com/users/alvassin/events{/privacy}", "received_events_url": "https://api.github.com/users/alvassin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-22T16:27:16Z", "updated_at": "2020-04-24T01:06:37Z", "closed_at": "2020-04-24T01:06:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can i use this project with `~=` operator?\r\n \r\n```\r\norjson~=2.6.5\r\n```\r\n\r\nDoes it follow [Semantic versioning](https://semver.org)?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/76", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/76/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/76/events", "html_url": "https://github.com/ijl/orjson/issues/76", "id": 603614165, "node_id": "MDU6SXNzdWU2MDM2MTQxNjU=", "number": 76, "title": "Publish crate for serde_json fork", "user": {"login": "opsengine", "id": 1335127, "node_id": "MDQ6VXNlcjEzMzUxMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1335127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/opsengine", "html_url": "https://github.com/opsengine", "followers_url": "https://api.github.com/users/opsengine/followers", "following_url": "https://api.github.com/users/opsengine/following{/other_user}", "gists_url": "https://api.github.com/users/opsengine/gists{/gist_id}", "starred_url": "https://api.github.com/users/opsengine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/opsengine/subscriptions", "organizations_url": "https://api.github.com/users/opsengine/orgs", "repos_url": "https://api.github.com/users/opsengine/repos", "events_url": "https://api.github.com/users/opsengine/events{/privacy}", "received_events_url": "https://api.github.com/users/opsengine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-21T00:12:18Z", "updated_at": "2020-04-30T13:47:02Z", "closed_at": "2020-04-30T13:47:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code depends on a fork of serde_json. There is only one commit (9e9a959fce6075e90526bc3af4bde509a9af17dd) but it seems pretty important.\r\nWould it be possible to publish the fork on crates.io under a new name i.e. serde_orjson or something? It would make it much easier to work with cargo vendor.\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/75", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/75/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/75/events", "html_url": "https://github.com/ijl/orjson/issues/75", "id": 601767358, "node_id": "MDU6SXNzdWU2MDE3NjczNTg=", "number": 75, "title": "Publish arm7l build", "user": {"login": "bloodbare", "id": 486913, "node_id": "MDQ6VXNlcjQ4NjkxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/486913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bloodbare", "html_url": "https://github.com/bloodbare", "followers_url": "https://api.github.com/users/bloodbare/followers", "following_url": "https://api.github.com/users/bloodbare/following{/other_user}", "gists_url": "https://api.github.com/users/bloodbare/gists{/gist_id}", "starred_url": "https://api.github.com/users/bloodbare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bloodbare/subscriptions", "organizations_url": "https://api.github.com/users/bloodbare/orgs", "repos_url": "https://api.github.com/users/bloodbare/repos", "events_url": "https://api.github.com/users/bloodbare/events{/privacy}", "received_events_url": "https://api.github.com/users/bloodbare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-17T07:35:43Z", "updated_at": "2020-05-01T14:40:42Z", "closed_at": "2020-05-01T14:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to publish also an ARM wheel package (arm32v7) so builds does not need to compile all rust architecture on arm dockerfiles ?\r\n\r\nI've build one from master (https://storage.googleapis.com/stashify-static/orjson-0.0.0-py3-none-any.whl) but would be great to have it on pypi.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/74", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/74/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/74/events", "html_url": "https://github.com/ijl/orjson/issues/74", "id": 596699119, "node_id": "MDU6SXNzdWU1OTY2OTkxMTk=", "number": 74, "title": "Bug with float in .loads on 2.6.4", "user": {"login": "astoliarov", "id": 10893844, "node_id": "MDQ6VXNlcjEwODkzODQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/10893844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astoliarov", "html_url": "https://github.com/astoliarov", "followers_url": "https://api.github.com/users/astoliarov/followers", "following_url": "https://api.github.com/users/astoliarov/following{/other_user}", "gists_url": "https://api.github.com/users/astoliarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/astoliarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astoliarov/subscriptions", "organizations_url": "https://api.github.com/users/astoliarov/orgs", "repos_url": "https://api.github.com/users/astoliarov/repos", "events_url": "https://api.github.com/users/astoliarov/events{/privacy}", "received_events_url": "https://api.github.com/users/astoliarov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-08T16:17:28Z", "updated_at": "2020-04-08T17:05:51Z", "closed_at": "2020-04-08T17:05:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like there is a problem with parsing floats with long tail in 2.6.4\r\n\r\n```\r\nIn [1]: import orjson as json                                                                                                                                                                                   \r\n\r\nIn [2]: json.loads('{\"lon\":-100.78399658203125}')                                                                                                                                                               \r\n---------------------------------------------------------------------------\r\nJSONDecodeError                           Traceback (most recent call last)\r\n<ipython-input-2-ffd01b2436cd> in <module>\r\n----> 1 json.loads('{\"lon\":-100.78399658203125}')\r\n\r\nJSONDecodeError: invalid number at line 1 column 26: line 1 column 1 (char 0)\r\n\r\nIn [3]: import json                                                                                                                                                                                             \r\n\r\nIn [4]: json.loads('{\"lon\":-100.78399658203125}')                                                                                                                                                               \r\nOut[4]: {'lon': -100.78399658203125}\r\n```\r\n\r\nIn 2.6.3 all works just fine", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/72", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/72/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/72/events", "html_url": "https://github.com/ijl/orjson/issues/72", "id": 596446347, "node_id": "MDU6SXNzdWU1OTY0NDYzNDc=", "number": 72, "title": "install on pypy3", "user": {"login": "includeamin", "id": 11836741, "node_id": "MDQ6VXNlcjExODM2NzQx", "avatar_url": "https://avatars1.githubusercontent.com/u/11836741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/includeamin", "html_url": "https://github.com/includeamin", "followers_url": "https://api.github.com/users/includeamin/followers", "following_url": "https://api.github.com/users/includeamin/following{/other_user}", "gists_url": "https://api.github.com/users/includeamin/gists{/gist_id}", "starred_url": "https://api.github.com/users/includeamin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/includeamin/subscriptions", "organizations_url": "https://api.github.com/users/includeamin/orgs", "repos_url": "https://api.github.com/users/includeamin/repos", "events_url": "https://api.github.com/users/includeamin/events{/privacy}", "received_events_url": "https://api.github.com/users/includeamin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-08T09:41:51Z", "updated_at": "2020-04-08T14:18:45Z", "closed_at": "2020-04-08T14:18:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\ni have problem with installing orjson on pypy3\r\n\r\n``` sh\r\npypy3 -m pip install orjson\r\n```\r\n## output\r\n```\r\nCollecting orjson\r\n  Using cached https://files.pythonhosted.org/packages/8e/7c/e9a6f52e344c480be42fddeb1a0593283ecc1c06293ef210af4521a5b6f5/orjson-2.6.3.tar.gz\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... done\r\n    Preparing wheel metadata ... error\r\n    ERROR: Command errored out with exit status 1:\r\n     command: /usr/local/bin/pypy3 /usr/local/Cellar/pypy3/7.3.0/libexec/site-packages/pip-19.3.1-py3.6.egg/pip/_vendor/pep517/_in_process.py prepare_metadata_for_build_wheel /var/folders/f2/55729nz54_n67nbl49d2dq8w0000gn/T/tmpw2i829mz\r\n         cwd: /private/var/folders/f2/55729nz54_n67nbl49d2dq8w0000gn/T/pip-install-zed0ae6r/orjson\r\n    Complete output (20 lines):\r\n    Checking for Rust toolchain....\r\n    Running `maturin pep517 write-dist-info --metadata-directory /private/var/folders/f2/55729nz54_n67nbl49d2dq8w0000gn/T/pip-modern-metadata-lzf3wd4s --manylinux=off --rustc-extra-args=-Zmutable-noalias -C target-feature=+sse2 --strip=on`\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/Cellar/pypy3/7.3.0/libexec/site-packages/pip-19.3.1-py3.6.egg/pip/_vendor/pep517/_in_process.py\", line 257, in <module>\r\n        main()\r\n      File \"/usr/local/Cellar/pypy3/7.3.0/libexec/site-packages/pip-19.3.1-py3.6.egg/pip/_vendor/pep517/_in_process.py\", line 240, in main\r\n        json_out['return_val'] = hook(**hook_input['kwargs'])\r\n      File \"/usr/local/Cellar/pypy3/7.3.0/libexec/site-packages/pip-19.3.1-py3.6.egg/pip/_vendor/pep517/_in_process.py\", line 110, in prepare_metadata_for_build_wheel\r\n        return hook(metadata_directory, config_settings)\r\n      File \"/private/var/folders/f2/55729nz54_n67nbl49d2dq8w0000gn/T/pip-build-env-wk0qwdr9/overlay/site-packages/maturin/__init__.py\", line 133, in prepare_metadata_for_build_wheel\r\n        output = subprocess.check_output(command)\r\n      File \"/usr/local/Cellar/pypy3/7.3.0/libexec/lib-python/3/subprocess.py\", line 356, in check_output\r\n        **kwargs).stdout\r\n      File \"/usr/local/Cellar/pypy3/7.3.0/libexec/lib-python/3/subprocess.py\", line 423, in run\r\n        with Popen(*popenargs, **kwargs) as process:\r\n      File \"/usr/local/Cellar/pypy3/7.3.0/libexec/lib-python/3/subprocess.py\", line 744, in __init__\r\n        restore_signals, start_new_session)\r\n      File \"/usr/local/Cellar/pypy3/7.3.0/libexec/lib-python/3/subprocess.py\", line 1392, in _execute_child\r\n        raise child_exception_type(errno_num, err_msg, err_filename)\r\n    FileNotFoundError: [Errno 2] No such file or directory: 'maturin': 'maturin'\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: /usr/local/bin/pypy3 /usr/local/Cellar/pypy3/7.3.0/libexec/site-packages/pip-19.3.1-py3.6.egg/pip/_vendor/pep517/_in_process.py prepare_metadata_for_build_wheel /var/folders/f2/55729nz54_n67nbl49d2dq8w0000gn/T/tmpw2i829mz Check the logs for full command output.\r\n\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/71", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/71/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/71/events", "html_url": "https://github.com/ijl/orjson/issues/71", "id": 596227096, "node_id": "MDU6SXNzdWU1OTYyMjcwOTY=", "number": 71, "title": "[feature request] Add json-tricks serialization option", "user": {"login": "kivo360", "id": 2403240, "node_id": "MDQ6VXNlcjI0MDMyNDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2403240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kivo360", "html_url": "https://github.com/kivo360", "followers_url": "https://api.github.com/users/kivo360/followers", "following_url": "https://api.github.com/users/kivo360/following{/other_user}", "gists_url": "https://api.github.com/users/kivo360/gists{/gist_id}", "starred_url": "https://api.github.com/users/kivo360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kivo360/subscriptions", "organizations_url": "https://api.github.com/users/kivo360/orgs", "repos_url": "https://api.github.com/users/kivo360/repos", "events_url": "https://api.github.com/users/kivo360/events{/privacy}", "received_events_url": "https://api.github.com/users/kivo360/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-08T00:20:12Z", "updated_at": "2020-04-17T21:02:49Z", "closed_at": "2020-04-17T21:02:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was looking at the `json-tricks` library and loved the complex serialization that they have. I love the speed of orjson just as much. I was wondering. How do I add custom serialization to orjson?\n\nI'd like to add their declared datetime and numpy serialization to the library with orjson's speed. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/70", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/70/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/70/events", "html_url": "https://github.com/ijl/orjson/issues/70", "id": 593755226, "node_id": "MDU6SXNzdWU1OTM3NTUyMjY=", "number": 70, "title": "Make orjson work with bson types", "user": {"login": "brmmm3", "id": 21258241, "node_id": "MDQ6VXNlcjIxMjU4MjQx", "avatar_url": "https://avatars3.githubusercontent.com/u/21258241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brmmm3", "html_url": "https://github.com/brmmm3", "followers_url": "https://api.github.com/users/brmmm3/followers", "following_url": "https://api.github.com/users/brmmm3/following{/other_user}", "gists_url": "https://api.github.com/users/brmmm3/gists{/gist_id}", "starred_url": "https://api.github.com/users/brmmm3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brmmm3/subscriptions", "organizations_url": "https://api.github.com/users/brmmm3/orgs", "repos_url": "https://api.github.com/users/brmmm3/repos", "events_url": "https://api.github.com/users/brmmm3/events{/privacy}", "received_events_url": "https://api.github.com/users/brmmm3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-04T06:15:39Z", "updated_at": "2020-04-04T15:31:49Z", "closed_at": "2020-04-04T15:31:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recently I've tried to use pymongo with orjson, but it fails to serialize types like ObjectId or Int64.\r\nWould it be possible to implement support for such types?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/69", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/69/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/69/events", "html_url": "https://github.com/ijl/orjson/issues/69", "id": 591708212, "node_id": "MDU6SXNzdWU1OTE3MDgyMTI=", "number": 69, "title": "Ignore null serialize", "user": {"login": "ihatiko", "id": 16540702, "node_id": "MDQ6VXNlcjE2NTQwNzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/16540702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ihatiko", "html_url": "https://github.com/ihatiko", "followers_url": "https://api.github.com/users/ihatiko/followers", "following_url": "https://api.github.com/users/ihatiko/following{/other_user}", "gists_url": "https://api.github.com/users/ihatiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/ihatiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ihatiko/subscriptions", "organizations_url": "https://api.github.com/users/ihatiko/orgs", "repos_url": "https://api.github.com/users/ihatiko/repos", "events_url": "https://api.github.com/users/ihatiko/events{/privacy}", "received_events_url": "https://api.github.com/users/ihatiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-01T08:01:56Z", "updated_at": "2020-04-01T17:31:55Z", "closed_at": "2020-04-01T17:31:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, i tried serialize dataclass, how to ignore null ?\r\n\r\n`@dataclass\r\nclass CDCObject:\r\n    schema_ver: str\r\n\r\n\r\ndef default(obj):\r\n    print(type(obj))\r\n    if isinstance(obj, int):\r\n        print(123)\r\n        return str(obj)\r\n    raise TypeError\r\n\r\n\r\nobj = CDCObject(None)\r\nresult = orjson.dumps(obj, default=default, option=orjson.OPT_SERIALIZE_DATACLASS)\r\n\r\nprint(result)`\r\n\r\nand my default function does not invoked (", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/68", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/68/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/68/events", "html_url": "https://github.com/ijl/orjson/issues/68", "id": 589045756, "node_id": "MDU6SXNzdWU1ODkwNDU3NTY=", "number": 68, "title": "Get a error when I build the project on macos", "user": {"login": "yufeiok1983", "id": 26196308, "node_id": "MDQ6VXNlcjI2MTk2MzA4", "avatar_url": "https://avatars2.githubusercontent.com/u/26196308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yufeiok1983", "html_url": "https://github.com/yufeiok1983", "followers_url": "https://api.github.com/users/yufeiok1983/followers", "following_url": "https://api.github.com/users/yufeiok1983/following{/other_user}", "gists_url": "https://api.github.com/users/yufeiok1983/gists{/gist_id}", "starred_url": "https://api.github.com/users/yufeiok1983/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yufeiok1983/subscriptions", "organizations_url": "https://api.github.com/users/yufeiok1983/orgs", "repos_url": "https://api.github.com/users/yufeiok1983/repos", "events_url": "https://api.github.com/users/yufeiok1983/events{/privacy}", "received_events_url": "https://api.github.com/users/yufeiok1983/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-27T10:48:06Z", "updated_at": "2020-03-27T13:48:11Z", "closed_at": "2020-03-27T13:48:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "\u279c  orjson git:(master) \u2717 maturin build --no-sdist --release --strip --manylinux off\r\n\ud83d\udd17 Found pyo3 bindings\r\n\ud83d\udc0d Found CPython 3.7m at python3.7\r\n   Compiling proc-macro2 v1.0.9\r\n   Compiling unicode-xid v0.2.0\r\n   Compiling syn v1.0.17\r\n   Compiling cfg-if v0.1.10\r\n   Compiling libc v0.2.68\r\n   Compiling ryu v1.0.3\r\n   Compiling serde v1.0.105\r\n   Compiling memchr v2.3.3\r\n   Compiling typenum v1.11.2\r\n   Compiling proc-macro-hack v0.5.14\r\n   Compiling getrandom v0.1.14\r\n   Compiling lazy_static v1.4.0\r\n   Compiling regex-syntax v0.6.17\r\n   Compiling bitflags v1.2.1\r\n   Compiling byteorder v1.3.4\r\n   Compiling itoa v0.4.5\r\n   Compiling autocfg v1.0.0\r\n   Compiling version_check v0.9.1\r\n   Compiling unindent v0.1.5\r\n   Compiling lexical-core v0.7.4\r\n   Compiling scopeguard v1.1.0\r\n   Compiling smallvec v1.2.0\r\nerror[E0554]: `#![feature]` may not be used on the stable release channel8/100: smallvec, scopeguard, regex-syntax, version_check\r\n  --> /Users/yufei/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.2.0/lib.rs:29:32\r\n   |\r\n29 | #![cfg_attr(feature = \"union\", feature(untagged_unions))]\r\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n\r\nerror[E0554]: `#![feature]` may not be used on the stable release channel\r\n  --> /Users/yufei/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.2.0/lib.rs:30:41\r\n   |\r\n30 | #![cfg_attr(feature = \"specialization\", feature(specialization))]\r\n   |                                         ^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\n\r\n   Compiling packed_simd v0.3.3\r\nerror: aborting due to 2 previous errors                              ] 19/100: smallvec, regex-syntax, packed_simd(build.rs), version_check\r\n\r\n\r\nFor more information about this error, try `rustc --explain E0554`.   ] 19/100: smallvec, regex-syntax, packed_simd(build.rs), version_check\r\n\r\nerror: could not compile `smallvec`.\r\nwarning: build failed, waiting for other jobs to finish...\r\nerror: build failed\r\n\ud83d\udca5 maturin failed\r\n  Caused by: Failed to build a native library through cargo\r\n  Caused by: Cargo build finished with \"exit code: 101\": `cargo rustc --message-format json --manifest-path Cargo.toml --lib --release -- -C link-arg=-undefined -C link-arg=dynamic_lookup -C link-arg=-s`\r\n\u279c  orjson git:(master) \u2717", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/67", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/67/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/67/events", "html_url": "https://github.com/ijl/orjson/issues/67", "id": 588871414, "node_id": "MDU6SXNzdWU1ODg4NzE0MTQ=", "number": 67, "title": "datetime format support \"%Y-%m-%d %H:%M:%S\"", "user": {"login": "yufeiok1983", "id": 26196308, "node_id": "MDQ6VXNlcjI2MTk2MzA4", "avatar_url": "https://avatars2.githubusercontent.com/u/26196308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yufeiok1983", "html_url": "https://github.com/yufeiok1983", "followers_url": "https://api.github.com/users/yufeiok1983/followers", "following_url": "https://api.github.com/users/yufeiok1983/following{/other_user}", "gists_url": "https://api.github.com/users/yufeiok1983/gists{/gist_id}", "starred_url": "https://api.github.com/users/yufeiok1983/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yufeiok1983/subscriptions", "organizations_url": "https://api.github.com/users/yufeiok1983/orgs", "repos_url": "https://api.github.com/users/yufeiok1983/repos", "events_url": "https://api.github.com/users/yufeiok1983/events{/privacy}", "received_events_url": "https://api.github.com/users/yufeiok1983/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-27T04:03:53Z", "updated_at": "2020-03-27T13:48:07Z", "closed_at": "2020-03-27T13:48:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you support the datetime output like \"2020-03-27 11:23:22\"? replace the 'T' to a space? thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/66", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/66/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/66/events", "html_url": "https://github.com/ijl/orjson/issues/66", "id": 588051024, "node_id": "MDU6SXNzdWU1ODgwNTEwMjQ=", "number": 66, "title": "Serialize to str", "user": {"login": "3ddi", "id": 6659785, "node_id": "MDQ6VXNlcjY2NTk3ODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6659785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3ddi", "html_url": "https://github.com/3ddi", "followers_url": "https://api.github.com/users/3ddi/followers", "following_url": "https://api.github.com/users/3ddi/following{/other_user}", "gists_url": "https://api.github.com/users/3ddi/gists{/gist_id}", "starred_url": "https://api.github.com/users/3ddi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3ddi/subscriptions", "organizations_url": "https://api.github.com/users/3ddi/orgs", "repos_url": "https://api.github.com/users/3ddi/repos", "events_url": "https://api.github.com/users/3ddi/events{/privacy}", "received_events_url": "https://api.github.com/users/3ddi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-25T23:23:41Z", "updated_at": "2020-03-26T13:55:20Z", "closed_at": "2020-03-26T13:55:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Assuming many would want to replace current json libraries with this one, str will be the expected output. You can always use a wrapper with decode, but then there is a performance impact.\r\n\r\nI was mainly wondering why this feature isn't part of the library as I'm willing to help add it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/65", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/65/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/65/events", "html_url": "https://github.com/ijl/orjson/issues/65", "id": 587863955, "node_id": "MDU6SXNzdWU1ODc4NjM5NTU=", "number": 65, "title": "Version 3", "user": {"login": "ijl", "id": 1977222, "node_id": "MDQ6VXNlcjE5NzcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1977222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijl", "html_url": "https://github.com/ijl", "followers_url": "https://api.github.com/users/ijl/followers", "following_url": "https://api.github.com/users/ijl/following{/other_user}", "gists_url": "https://api.github.com/users/ijl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijl/subscriptions", "organizations_url": "https://api.github.com/users/ijl/orgs", "repos_url": "https://api.github.com/users/ijl/repos", "events_url": "https://api.github.com/users/ijl/events{/privacy}", "received_events_url": "https://api.github.com/users/ijl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-03-25T17:26:22Z", "updated_at": "2020-05-01T14:40:31Z", "closed_at": "2020-05-01T14:39:02Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Version 3 will serialize dataclass, UUID, numpy, and probably enum objects by default. The options for these will remain but be 0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/64", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/64/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/64/events", "html_url": "https://github.com/ijl/orjson/issues/64", "id": 583235906, "node_id": "MDU6SXNzdWU1ODMyMzU5MDY=", "number": 64, "title": "[Question] - How to properly include this locally for a project?", "user": {"login": "TheSecEng", "id": 32599364, "node_id": "MDQ6VXNlcjMyNTk5MzY0", "avatar_url": "https://avatars1.githubusercontent.com/u/32599364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheSecEng", "html_url": "https://github.com/TheSecEng", "followers_url": "https://api.github.com/users/TheSecEng/followers", "following_url": "https://api.github.com/users/TheSecEng/following{/other_user}", "gists_url": "https://api.github.com/users/TheSecEng/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheSecEng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheSecEng/subscriptions", "organizations_url": "https://api.github.com/users/TheSecEng/orgs", "repos_url": "https://api.github.com/users/TheSecEng/repos", "events_url": "https://api.github.com/users/TheSecEng/events{/privacy}", "received_events_url": "https://api.github.com/users/TheSecEng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-17T19:08:29Z", "updated_at": "2020-03-17T20:34:38Z", "closed_at": "2020-03-17T20:34:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to include this in a project locally, so that users don't need to install the package themselves?\r\n\r\nHaving it in a local folder like this doesn't seem to work.\r\n\r\n```\r\nProject\r\n    - lib\r\n        - orjson\r\n            - orjson.so\r\n```\r\n\r\n\r\n```python\r\nfrom ./lib import orjson\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/63", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/63/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/63/events", "html_url": "https://github.com/ijl/orjson/issues/63", "id": 579068128, "node_id": "MDU6SXNzdWU1NzkwNjgxMjg=", "number": 63, "title": "Add support for `collections.OrderedDict`", "user": {"login": "LegNeato", "id": 368904, "node_id": "MDQ6VXNlcjM2ODkwNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/368904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LegNeato", "html_url": "https://github.com/LegNeato", "followers_url": "https://api.github.com/users/LegNeato/followers", "following_url": "https://api.github.com/users/LegNeato/following{/other_user}", "gists_url": "https://api.github.com/users/LegNeato/gists{/gist_id}", "starred_url": "https://api.github.com/users/LegNeato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LegNeato/subscriptions", "organizations_url": "https://api.github.com/users/LegNeato/orgs", "repos_url": "https://api.github.com/users/LegNeato/repos", "events_url": "https://api.github.com/users/LegNeato/events{/privacy}", "received_events_url": "https://api.github.com/users/LegNeato/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-11T07:44:21Z", "updated_at": "2020-03-12T00:51:49Z", "closed_at": "2020-03-11T21:06:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "`collections.OrderedDict` does not seem to work with `orjson`. Is there any way I can tell `orjson` to  treat it like a dict?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/62", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/62/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/62/events", "html_url": "https://github.com/ijl/orjson/issues/62", "id": 579042962, "node_id": "MDU6SXNzdWU1NzkwNDI5NjI=", "number": 62, "title": "json.dumps(float('inf')) should throw a ValueError", "user": {"login": "LegNeato", "id": 368904, "node_id": "MDQ6VXNlcjM2ODkwNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/368904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LegNeato", "html_url": "https://github.com/LegNeato", "followers_url": "https://api.github.com/users/LegNeato/followers", "following_url": "https://api.github.com/users/LegNeato/following{/other_user}", "gists_url": "https://api.github.com/users/LegNeato/gists{/gist_id}", "starred_url": "https://api.github.com/users/LegNeato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LegNeato/subscriptions", "organizations_url": "https://api.github.com/users/LegNeato/orgs", "repos_url": "https://api.github.com/users/LegNeato/repos", "events_url": "https://api.github.com/users/LegNeato/events{/privacy}", "received_events_url": "https://api.github.com/users/LegNeato/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-11T06:41:47Z", "updated_at": "2020-03-11T21:06:28Z", "closed_at": "2020-03-11T21:06:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "The default `json`throws a `ValueError` here when `orjson` does not:\r\n\r\n``` python\r\n       with self.assertRaises(ValueError):\r\n            json.dumps(float('inf'))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/61", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/61/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/61/events", "html_url": "https://github.com/ijl/orjson/issues/61", "id": 578709205, "node_id": "MDU6SXNzdWU1Nzg3MDkyMDU=", "number": 61, "title": "Support for Subclasses of builtins, Enums", "user": {"login": "seandstewart", "id": 19578366, "node_id": "MDQ6VXNlcjE5NTc4MzY2", "avatar_url": "https://avatars2.githubusercontent.com/u/19578366?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seandstewart", "html_url": "https://github.com/seandstewart", "followers_url": "https://api.github.com/users/seandstewart/followers", "following_url": "https://api.github.com/users/seandstewart/following{/other_user}", "gists_url": "https://api.github.com/users/seandstewart/gists{/gist_id}", "starred_url": "https://api.github.com/users/seandstewart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seandstewart/subscriptions", "organizations_url": "https://api.github.com/users/seandstewart/orgs", "repos_url": "https://api.github.com/users/seandstewart/repos", "events_url": "https://api.github.com/users/seandstewart/events{/privacy}", "received_events_url": "https://api.github.com/users/seandstewart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-03-10T16:31:02Z", "updated_at": "2020-05-06T08:17:30Z", "closed_at": "2020-04-01T22:41:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello - \r\n\r\nI'm very interested in making use of this library for its native support of dataclasses, however I have a few minor blockers:\r\n\r\n1. I make use of `enum.Enum` subclasses quite extensively,\r\n2. I also make use of subclasses of builtins for data-validation.\r\n\r\nBoth of these cases are natively handled by the builtin json library and other third-party software (rapidjson, ujson, etc). I think perhaps supporting subclasses of builtins would solve both of my two blockers.\r\n\r\nI also understand that I could implement a `default` callable for these cases. However, in a code-base using almost-exclusively subtypes in this manner, the potential performance gains are lost by constantly bailing out to the default. \r\n\r\nUnfortunately, I'm not familiar enough with Rust or its Python interface to suggest an implementation, but I can provide a test case:\r\n\r\n```python\r\nimport enum\r\nimport dataclasses\r\n\r\nimport orjson\r\n\r\nclass ShortStr(str):\r\n \r\n    def __new__(cls, *args, **kwargs):\r\n         v = str.__new__(cls, *args, **kwargs)\r\n         assert len(v) < 10, \"Values must be less than 10 chars!\"\r\n         return v\r\n\r\n\r\nclass Choice(int, enum.Enum):\r\n    YES = 1\r\n    NO = 0\r\n    MAYBE = -1\r\n\r\n\r\n@dataclasses.dataclass\r\nclass UncertaintyPrinciple:\r\n    subject: ShortStr\r\n    decision: Choice\r\n\r\n    def json(self) -> str:\r\n        return orjson.dumps(self, option=orjson.OPT_SERIALIZE_DATACLASS)\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/60", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/60/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/60/events", "html_url": "https://github.com/ijl/orjson/issues/60", "id": 573002503, "node_id": "MDU6SXNzdWU1NzMwMDI1MDM=", "number": 60, "title": "Support ARM", "user": {"login": "ijl", "id": 1977222, "node_id": "MDQ6VXNlcjE5NzcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1977222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijl", "html_url": "https://github.com/ijl", "followers_url": "https://api.github.com/users/ijl/followers", "following_url": "https://api.github.com/users/ijl/following{/other_user}", "gists_url": "https://api.github.com/users/ijl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijl/subscriptions", "organizations_url": "https://api.github.com/users/ijl/orgs", "repos_url": "https://api.github.com/users/ijl/repos", "events_url": "https://api.github.com/users/ijl/events{/privacy}", "received_events_url": "https://api.github.com/users/ijl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1136023254, "node_id": "MDU6TGFiZWwxMTM2MDIzMjU0", "url": "https://api.github.com/repos/ijl/orjson/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-28T21:01:53Z", "updated_at": "2020-03-07T22:39:43Z", "closed_at": "2020-03-07T22:39:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This depends on https://github.com/PyO3/maturin/issues/237.\r\n\r\nCI can use drone.io and ship manylinux2014 wheels for the aarch64 and armv7l architectures.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/59", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/59/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/59/events", "html_url": "https://github.com/ijl/orjson/issues/59", "id": 569865097, "node_id": "MDU6SXNzdWU1Njk4NjUwOTc=", "number": 59, "title": "Pretty output", "user": {"login": "ijl", "id": 1977222, "node_id": "MDQ6VXNlcjE5NzcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1977222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijl", "html_url": "https://github.com/ijl", "followers_url": "https://api.github.com/users/ijl/followers", "following_url": "https://api.github.com/users/ijl/following{/other_user}", "gists_url": "https://api.github.com/users/ijl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijl/subscriptions", "organizations_url": "https://api.github.com/users/ijl/orgs", "repos_url": "https://api.github.com/users/ijl/repos", "events_url": "https://api.github.com/users/ijl/events{/privacy}", "received_events_url": "https://api.github.com/users/ijl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1136023254, "node_id": "MDU6TGFiZWwxMTM2MDIzMjU0", "url": "https://api.github.com/repos/ijl/orjson/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-24T13:42:50Z", "updated_at": "2020-03-10T00:48:06Z", "closed_at": "2020-03-10T00:18:36Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This has been requested but needs research. What are the use cases? Is `bytes` output ok? Should it support configurable indent or choose either 2 or 4? What is the API if it is configurable? (Can't specify two conflicting OPT_*.) What settings do major projects like Django, DRF, Flask, etc. use for pretty-printed output? It looks like the formatting around arrays etc. is the same as standard library for a given indentation. What is the performance impact on compact output? What is the performance of orjson and other libraries with pretty output? Needs tests that fixtures print correctly and that any assertions, e.g., it's the same as the standard library's output (nevermind exponents etc), are true.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/57", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/57/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/57/events", "html_url": "https://github.com/ijl/orjson/issues/57", "id": 568576643, "node_id": "MDU6SXNzdWU1Njg1NzY2NDM=", "number": 57, "title": "rust ICE on nightly-2020-02-19", "user": {"login": "autumnjolitz", "id": 270476, "node_id": "MDQ6VXNlcjI3MDQ3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/270476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/autumnjolitz", "html_url": "https://github.com/autumnjolitz", "followers_url": "https://api.github.com/users/autumnjolitz/followers", "following_url": "https://api.github.com/users/autumnjolitz/following{/other_user}", "gists_url": "https://api.github.com/users/autumnjolitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/autumnjolitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/autumnjolitz/subscriptions", "organizations_url": "https://api.github.com/users/autumnjolitz/orgs", "repos_url": "https://api.github.com/users/autumnjolitz/repos", "events_url": "https://api.github.com/users/autumnjolitz/events{/privacy}", "received_events_url": "https://api.github.com/users/autumnjolitz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-20T21:14:03Z", "updated_at": "2020-02-24T12:48:34Z", "closed_at": "2020-02-24T12:48:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've posted the compiler bug at https://github.com/rust-lang/rust/issues/69327 but one of the changes in orjson or a dependency provokes a bug in the rustc compiler. idk what's really changed - I'm just fixing my builds to use an older precompiled orjson wheel from my private pypis \ud83d\ude43", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/55", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/55/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/55/events", "html_url": "https://github.com/ijl/orjson/issues/55", "id": 565120527, "node_id": "MDU6SXNzdWU1NjUxMjA1Mjc=", "number": 55, "title": "can I get indent option?", "user": {"login": "darjeeling", "id": 52967, "node_id": "MDQ6VXNlcjUyOTY3", "avatar_url": "https://avatars2.githubusercontent.com/u/52967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darjeeling", "html_url": "https://github.com/darjeeling", "followers_url": "https://api.github.com/users/darjeeling/followers", "following_url": "https://api.github.com/users/darjeeling/following{/other_user}", "gists_url": "https://api.github.com/users/darjeeling/gists{/gist_id}", "starred_url": "https://api.github.com/users/darjeeling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darjeeling/subscriptions", "organizations_url": "https://api.github.com/users/darjeeling/orgs", "repos_url": "https://api.github.com/users/darjeeling/repos", "events_url": "https://api.github.com/users/darjeeling/events{/privacy}", "received_events_url": "https://api.github.com/users/darjeeling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-14T05:50:35Z", "updated_at": "2020-02-17T22:39:09Z", "closed_at": "2020-02-17T22:39:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "can I get option like `OPT_INDENT_4`, `OPT_INDENT_4`\r\nto make human readable json to replace other json libraries\r\n\r\norjson is awesome!! thanks.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/53", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/53/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/53/events", "html_url": "https://github.com/ijl/orjson/issues/53", "id": 561941990, "node_id": "MDU6SXNzdWU1NjE5NDE5OTA=", "number": 53, "title": "Support 65+ bit integers", "user": {"login": "autumnjolitz", "id": 270476, "node_id": "MDQ6VXNlcjI3MDQ3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/270476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/autumnjolitz", "html_url": "https://github.com/autumnjolitz", "followers_url": "https://api.github.com/users/autumnjolitz/followers", "following_url": "https://api.github.com/users/autumnjolitz/following{/other_user}", "gists_url": "https://api.github.com/users/autumnjolitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/autumnjolitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/autumnjolitz/subscriptions", "organizations_url": "https://api.github.com/users/autumnjolitz/orgs", "repos_url": "https://api.github.com/users/autumnjolitz/repos", "events_url": "https://api.github.com/users/autumnjolitz/events{/privacy}", "received_events_url": "https://api.github.com/users/autumnjolitz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-08T00:47:50Z", "updated_at": "2020-02-22T21:06:20Z", "closed_at": "2020-02-17T22:59:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nWe have some ML projects that have been known to generate 67 bit integers. `orjson` can't deserialize them (thankfully, unlike `ujson` it actually throws an exception, so I can failsafe to `json`)\r\n\r\n```\r\n>>> import orjson\r\n>>> orjson.dumps({'key': int('1'*67, 2)})\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\norjson.JSONEncodeError: Integer exceeds 64-bit range\r\n>>> value = horcrux._json.dumps({'key': int('1'*67, 2)})\r\nUnable to fastdump JSON, failsafe to stdlib json! [Slow!!]\r\nTraceback (most recent call last):\r\n  File \"/Users/autumn/software/horcrux/horcrux/__init__.py\", line 36, in fast_dumps\r\n    value: bytes = self.fastjson.dumps(item)\r\norjson.JSONEncodeError: Integer exceeds 64-bit range\r\n>>> value\r\n'{\"key\": 147573952589676412927}'\r\n>>> orjson.loads('{\"key\": 147573952589676412927}')\r\n{'key': 1.4757395258967641e+20}\r\n>>> orjson.dumps(_)\r\nb'{\"key\":1.4757395258967641e20}'\r\n>>> 147573952589676412927 - 1.4757395258967641e20\r\n0.0\r\n```\r\n\r\nOne quick fix suggestion would be to simply cast items larger than int64 to floats as the following works just fine:\r\n\r\n```\r\n>>> orjson.loads('{\"key\": 1.4757395258967641e20}')\r\n{'key': 1.4757395258967641e+20}\r\n```\r\n\r\nA better one would be to return `int` for `int`. Thankfully, I can failsafe to stdlib json to handle the bignums when they come in. \ud83d\ude03 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/52", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/52/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/52/events", "html_url": "https://github.com/ijl/orjson/issues/52", "id": 560356018, "node_id": "MDU6SXNzdWU1NjAzNTYwMTg=", "number": 52, "title": "Document default examples and edge cases", "user": {"login": "aovasylenko", "id": 52672246, "node_id": "MDQ6VXNlcjUyNjcyMjQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/52672246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aovasylenko", "html_url": "https://github.com/aovasylenko", "followers_url": "https://api.github.com/users/aovasylenko/followers", "following_url": "https://api.github.com/users/aovasylenko/following{/other_user}", "gists_url": "https://api.github.com/users/aovasylenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/aovasylenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aovasylenko/subscriptions", "organizations_url": "https://api.github.com/users/aovasylenko/orgs", "repos_url": "https://api.github.com/users/aovasylenko/repos", "events_url": "https://api.github.com/users/aovasylenko/events{/privacy}", "received_events_url": "https://api.github.com/users/aovasylenko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1136023254, "node_id": "MDU6TGFiZWwxMTM2MDIzMjU0", "url": "https://api.github.com/repos/ijl/orjson/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-02-05T12:59:05Z", "updated_at": "2020-02-12T13:57:44Z", "closed_at": "2020-02-12T13:53:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys, there is an issue:\r\n\r\nDocumentation says:\r\n_\"If no object is returned by the default callable but also no exception was raised, it falls through to raising JSONEncodeError on an unsupported type.\"_\r\n\r\nSo I expect to see JSONEncodeError in this case\r\n`orjson.dumps(Decimal(1), default=lambda *a, **kwargs: None)`\r\nbut I'm getting b'null'\r\n\r\nVersion: 2.2.0\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/51", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/51/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/51/events", "html_url": "https://github.com/ijl/orjson/issues/51", "id": 558284261, "node_id": "MDU6SXNzdWU1NTgyODQyNjE=", "number": 51, "title": "Deserialize into a dataclass", "user": {"login": "mag-", "id": 329721, "node_id": "MDQ6VXNlcjMyOTcyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/329721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mag-", "html_url": "https://github.com/mag-", "followers_url": "https://api.github.com/users/mag-/followers", "following_url": "https://api.github.com/users/mag-/following{/other_user}", "gists_url": "https://api.github.com/users/mag-/gists{/gist_id}", "starred_url": "https://api.github.com/users/mag-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mag-/subscriptions", "organizations_url": "https://api.github.com/users/mag-/orgs", "repos_url": "https://api.github.com/users/mag-/repos", "events_url": "https://api.github.com/users/mag-/events{/privacy}", "received_events_url": "https://api.github.com/users/mag-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-31T18:07:53Z", "updated_at": "2020-02-03T18:46:21Z", "closed_at": "2020-02-03T18:46:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just wondering, is adding deserialization into dataclasses in scope for the project?\r\n\r\nJust so one can do:\r\n```\r\nout = orjson.dumps(object)\r\nobject = orjson.loads(out, Object)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/50", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/50/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/50/events", "html_url": "https://github.com/ijl/orjson/issues/50", "id": 556921631, "node_id": "MDU6SXNzdWU1NTY5MjE2MzE=", "number": 50, "title": "Can't serialise nested object if that unsupported.", "user": {"login": "TihonV", "id": 5057658, "node_id": "MDQ6VXNlcjUwNTc2NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5057658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TihonV", "html_url": "https://github.com/TihonV", "followers_url": "https://api.github.com/users/TihonV/followers", "following_url": "https://api.github.com/users/TihonV/following{/other_user}", "gists_url": "https://api.github.com/users/TihonV/gists{/gist_id}", "starred_url": "https://api.github.com/users/TihonV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TihonV/subscriptions", "organizations_url": "https://api.github.com/users/TihonV/orgs", "repos_url": "https://api.github.com/users/TihonV/repos", "events_url": "https://api.github.com/users/TihonV/events{/privacy}", "received_events_url": "https://api.github.com/users/TihonV/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-29T15:04:37Z", "updated_at": "2020-01-29T15:39:10Z", "closed_at": "2020-01-29T15:39:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to force type casting nothing happened with nested objects. How to use orjson with nested objects?\r\n\r\nSteps to reproduce:\r\n\r\n```python3\r\nimport collections\r\nimport orjson\r\n\r\ndef default(obj):\r\n    if isinstance(obj, dict) and type(obj) != dict:\r\n        return dict(obj)\r\n    return obj\r\n\r\norjson.dumps(\r\n    {\r\n        'key': collections.OrderedDict({}), \r\n    },\r\n    default=default,\r\n)\r\n```\r\n\r\nPython 3.7.5 (v3.7.5:5c02a39a0b, Oct 14 2019, 18:49:57) \r\n[Clang 6.0 (clang-600.0.57)] on darwin\r\n\r\norjson 2.2.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/49", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/49/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/49/events", "html_url": "https://github.com/ijl/orjson/issues/49", "id": 552945078, "node_id": "MDU6SXNzdWU1NTI5NDUwNzg=", "number": 49, "title": "deserializing list fails", "user": {"login": "pjz", "id": 11100, "node_id": "MDQ6VXNlcjExMTAw", "avatar_url": "https://avatars3.githubusercontent.com/u/11100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjz", "html_url": "https://github.com/pjz", "followers_url": "https://api.github.com/users/pjz/followers", "following_url": "https://api.github.com/users/pjz/following{/other_user}", "gists_url": "https://api.github.com/users/pjz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjz/subscriptions", "organizations_url": "https://api.github.com/users/pjz/orgs", "repos_url": "https://api.github.com/users/pjz/repos", "events_url": "https://api.github.com/users/pjz/events{/privacy}", "received_events_url": "https://api.github.com/users/pjz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-21T15:21:04Z", "updated_at": "2020-01-21T15:34:42Z", "closed_at": "2020-01-21T15:34:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nPython 3.7.5 (default, Nov  7 2019, 10:50:52) \r\n[GCC 8.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import orjson\r\n>>> orjson.loads(b\"['foo']\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\njson.decoder.JSONDecodeError: expected value at line 1 column 2: line 1 column 1 (char 0)\r\n>>> orjson.__version__\r\n'2.1.4'\r\n```\r\nAm I doing something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/47", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/47/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/47/events", "html_url": "https://github.com/ijl/orjson/issues/47", "id": 548638432, "node_id": "MDU6SXNzdWU1NDg2Mzg0MzI=", "number": 47, "title": "Has it been tested with JSONTestSuit?", "user": {"login": "Paebbels", "id": 956109, "node_id": "MDQ6VXNlcjk1NjEwOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/956109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Paebbels", "html_url": "https://github.com/Paebbels", "followers_url": "https://api.github.com/users/Paebbels/followers", "following_url": "https://api.github.com/users/Paebbels/following{/other_user}", "gists_url": "https://api.github.com/users/Paebbels/gists{/gist_id}", "starred_url": "https://api.github.com/users/Paebbels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Paebbels/subscriptions", "organizations_url": "https://api.github.com/users/Paebbels/orgs", "repos_url": "https://api.github.com/users/Paebbels/repos", "events_url": "https://api.github.com/users/Paebbels/events{/privacy}", "received_events_url": "https://api.github.com/users/Paebbels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-12T22:38:09Z", "updated_at": "2020-02-25T19:33:22Z", "closed_at": "2020-01-13T03:50:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "The library claims to be correct.\r\n\r\nHas it been tested with e.g. [JSONTestSuit](https://github.com/nst/JSONTestSuite)?\r\n\r\norjson is not listed in the test matrix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/46", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/46/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/46/events", "html_url": "https://github.com/ijl/orjson/issues/46", "id": 546500120, "node_id": "MDU6SXNzdWU1NDY1MDAxMjA=", "number": 46, "title": "Could not install on Alpine Linux 3.11 and Rust 1.39.0", "user": {"login": "analytically", "id": 254434, "node_id": "MDQ6VXNlcjI1NDQzNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/254434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/analytically", "html_url": "https://github.com/analytically", "followers_url": "https://api.github.com/users/analytically/followers", "following_url": "https://api.github.com/users/analytically/following{/other_user}", "gists_url": "https://api.github.com/users/analytically/gists{/gist_id}", "starred_url": "https://api.github.com/users/analytically/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/analytically/subscriptions", "organizations_url": "https://api.github.com/users/analytically/orgs", "repos_url": "https://api.github.com/users/analytically/repos", "events_url": "https://api.github.com/users/analytically/events{/privacy}", "received_events_url": "https://api.github.com/users/analytically/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-07T20:50:01Z", "updated_at": "2020-02-25T22:15:54Z", "closed_at": "2020-01-13T14:07:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n  error: could not compile `smallvec`.\r\n  warning: build failed, waiting for other jobs to finish...\r\n  error: build failed\r\n  \ud83d\udca5 maturin failed\r\n    Caused by: Failed to build a native library through cargo\r\n    Caused by: Cargo build finished with \"exit code: 101\": `cargo rustc --message-format json --manifest-path Cargo.toml --lib --release -- -C target-feature=+sse2 -C link-arg=-s`\r\n  Running `maturin pep517 build-wheel -i python --manylinux=off --rustc-extra-args=-C target-feature=+sse2 --strip=on`\r\n  Error: Command '['maturin', 'pep517', 'build-wheel', '-i', 'python', '--manylinux=off', '--rustc-extra-args=-C target-feature=+sse2', '--strip=on']' returned non-zero exit status 1.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/44", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/44/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/44/events", "html_url": "https://github.com/ijl/orjson/issues/44", "id": 544784726, "node_id": "MDU6SXNzdWU1NDQ3ODQ3MjY=", "number": 44, "title": "add default hook to loads()", "user": {"login": "LBdN", "id": 138711, "node_id": "MDQ6VXNlcjEzODcxMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/138711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LBdN", "html_url": "https://github.com/LBdN", "followers_url": "https://api.github.com/users/LBdN/followers", "following_url": "https://api.github.com/users/LBdN/following{/other_user}", "gists_url": "https://api.github.com/users/LBdN/gists{/gist_id}", "starred_url": "https://api.github.com/users/LBdN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LBdN/subscriptions", "organizations_url": "https://api.github.com/users/LBdN/orgs", "repos_url": "https://api.github.com/users/LBdN/repos", "events_url": "https://api.github.com/users/LBdN/events{/privacy}", "received_events_url": "https://api.github.com/users/LBdN/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-02T23:04:53Z", "updated_at": "2020-01-04T00:49:57Z", "closed_at": "2020-01-04T00:49:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nWithout a default hook in loads, the value of the default hook on dumps is small. \r\n\r\nThe pattern of having classes with method from_json() and to_json() is really useful when combined with a default hook. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/43", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/43/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/43/events", "html_url": "https://github.com/ijl/orjson/issues/43", "id": 544784555, "node_id": "MDU6SXNzdWU1NDQ3ODQ1NTU=", "number": 43, "title": "Support Default callable + native implementation", "user": {"login": "ZacharyThomas", "id": 8812685, "node_id": "MDQ6VXNlcjg4MTI2ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8812685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ZacharyThomas", "html_url": "https://github.com/ZacharyThomas", "followers_url": "https://api.github.com/users/ZacharyThomas/followers", "following_url": "https://api.github.com/users/ZacharyThomas/following{/other_user}", "gists_url": "https://api.github.com/users/ZacharyThomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/ZacharyThomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ZacharyThomas/subscriptions", "organizations_url": "https://api.github.com/users/ZacharyThomas/orgs", "repos_url": "https://api.github.com/users/ZacharyThomas/repos", "events_url": "https://api.github.com/users/ZacharyThomas/events{/privacy}", "received_events_url": "https://api.github.com/users/ZacharyThomas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-02T23:04:18Z", "updated_at": "2020-01-03T18:16:14Z", "closed_at": "2020-01-03T18:16:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI've been trying to figure out how to serialize an Enum in a data class. Currently I implemented a default which looks like:\r\n\r\n```\r\ndef serialize_default(obj):\r\n    if dataclasses.is_dataclass(obj):\r\n        return dataclasses.asdict(obj)\r\n    if isinstance(obj, Enum):\r\n        return obj.value\r\n\r\nresult = orjson.dumps(response, default=serialize_default)\r\n```\r\n\r\nIf possible, it'd be nice to be able to either have a native enum implementation, or be able to combine the native-options with my non-native default, for example:\r\n\r\n```\r\ndef serialize_default(obj):\r\n    if isinstance(obj, Enum):\r\n        return obj.value\r\n\r\n# I wish something like this worked\r\nresult = orjson.dumps(response, default=orjson.OPT_SERIALIZE_DATACLASS | serialize_default)  \r\n```\r\n\r\nWould this be do-able? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/42", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/42/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/42/events", "html_url": "https://github.com/ijl/orjson/issues/42", "id": 532923368, "node_id": "MDU6SXNzdWU1MzI5MjMzNjg=", "number": 42, "title": "mypy can't find OPT_SERIALIZE_DATACLASS", "user": {"login": "dbanty", "id": 43723790, "node_id": "MDQ6VXNlcjQzNzIzNzkw", "avatar_url": "https://avatars0.githubusercontent.com/u/43723790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbanty", "html_url": "https://github.com/dbanty", "followers_url": "https://api.github.com/users/dbanty/followers", "following_url": "https://api.github.com/users/dbanty/following{/other_user}", "gists_url": "https://api.github.com/users/dbanty/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbanty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbanty/subscriptions", "organizations_url": "https://api.github.com/users/dbanty/orgs", "repos_url": "https://api.github.com/users/dbanty/repos", "events_url": "https://api.github.com/users/dbanty/events{/privacy}", "received_events_url": "https://api.github.com/users/dbanty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-04T20:42:14Z", "updated_at": "2019-12-06T21:21:23Z", "closed_at": "2019-12-06T19:22:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason mypy doesn't think that OPT_SERIALIZE_DATACLASS exists in the orjson module.  I really don't know why this is, it's clearly defined and in the .pyi file, so maybe it's an issue with mypy?  Figured I would post it here in case you know why.\r\n\r\nMy code:\r\n```python\r\nfrom dataclasses import dataclass\r\nimport orjson\r\n\r\n@dataclass\r\nclass Test:\r\n    value: str\r\n\r\ntest = Test(\"hi\")\r\nprint(orjson.dumps(test, option=orjson.OPT_SERIALIZE_DATACLASS))\r\n```\r\n\r\nmypy's output is \" error: Module has no attribute \"OPT_SERIALIZE_DATACLASS\"\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/41", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/41/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/41/events", "html_url": "https://github.com/ijl/orjson/issues/41", "id": 531687133, "node_id": "MDU6SXNzdWU1MzE2ODcxMzM=", "number": 41, "title": "Serialize UUID natively", "user": {"login": "Sytten", "id": 2366731, "node_id": "MDQ6VXNlcjIzNjY3MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2366731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sytten", "html_url": "https://github.com/Sytten", "followers_url": "https://api.github.com/users/Sytten/followers", "following_url": "https://api.github.com/users/Sytten/following{/other_user}", "gists_url": "https://api.github.com/users/Sytten/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sytten/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sytten/subscriptions", "organizations_url": "https://api.github.com/users/Sytten/orgs", "repos_url": "https://api.github.com/users/Sytten/repos", "events_url": "https://api.github.com/users/Sytten/events{/privacy}", "received_events_url": "https://api.github.com/users/Sytten/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1136023254, "node_id": "MDU6TGFiZWwxMTM2MDIzMjU0", "url": "https://api.github.com/repos/ijl/orjson/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-12-03T03:20:19Z", "updated_at": "2020-07-03T17:30:02Z", "closed_at": "2020-01-22T14:08:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "UUID are used a lot in APIs, it would be super great if they were supported natively. I know we can use the default, but it seems a bit slower (total time of the query) than if I already provide it a previously converted UUID to string.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/40", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/40/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/40/events", "html_url": "https://github.com/ijl/orjson/issues/40", "id": 530743849, "node_id": "MDU6SXNzdWU1MzA3NDM4NDk=", "number": 40, "title": "Relax strict enforcing of keys type to string", "user": {"login": "diefans", "id": 513316, "node_id": "MDQ6VXNlcjUxMzMxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/513316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diefans", "html_url": "https://github.com/diefans", "followers_url": "https://api.github.com/users/diefans/followers", "following_url": "https://api.github.com/users/diefans/following{/other_user}", "gists_url": "https://api.github.com/users/diefans/gists{/gist_id}", "starred_url": "https://api.github.com/users/diefans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diefans/subscriptions", "organizations_url": "https://api.github.com/users/diefans/orgs", "repos_url": "https://api.github.com/users/diefans/repos", "events_url": "https://api.github.com/users/diefans/events{/privacy}", "received_events_url": "https://api.github.com/users/diefans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2019-12-01T14:53:11Z", "updated_at": "2020-02-19T12:58:22Z", "closed_at": "2020-02-19T12:58:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to use orjson for structlog, but as it turns out, people are dumping arbitrary data for debugging purposes, where you cannot ensure dict key types are always strings.\r\n\r\nSo I ask, if there is even a technical reason to enforce string keys and if not, if it is possible to optionally relax this constraint...?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/39", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/39/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/39/events", "html_url": "https://github.com/ijl/orjson/issues/39", "id": 529444330, "node_id": "MDU6SXNzdWU1Mjk0NDQzMzA=", "number": 39, "title": "Serialize numpy, pandas natively", "user": {"login": "ijl", "id": 1977222, "node_id": "MDQ6VXNlcjE5NzcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1977222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijl", "html_url": "https://github.com/ijl", "followers_url": "https://api.github.com/users/ijl/followers", "following_url": "https://api.github.com/users/ijl/following{/other_user}", "gists_url": "https://api.github.com/users/ijl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijl/subscriptions", "organizations_url": "https://api.github.com/users/ijl/orgs", "repos_url": "https://api.github.com/users/ijl/repos", "events_url": "https://api.github.com/users/ijl/events{/privacy}", "received_events_url": "https://api.github.com/users/ijl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1136023254, "node_id": "MDU6TGFiZWwxMTM2MDIzMjU0", "url": "https://api.github.com/repos/ijl/orjson/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-11-27T16:12:04Z", "updated_at": "2020-02-13T04:22:14Z", "closed_at": "2020-02-12T15:41:06Z", "author_association": "OWNER", "active_lock_reason": null, "body": "numpy and pandas objects could be serialized natively for better performance and convenience. You would currently use `default` to convert such objects to an intermediate representation, e.g., `nparray.tolist()`, which is unnecessarily slow.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/38", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/38/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/38/events", "html_url": "https://github.com/ijl/orjson/issues/38", "id": 520575766, "node_id": "MDU6SXNzdWU1MjA1NzU3NjY=", "number": 38, "title": "Cannot build cp37 linux armv7l (Raspberry Pi)", "user": {"login": "tcirstea", "id": 7523484, "node_id": "MDQ6VXNlcjc1MjM0ODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7523484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tcirstea", "html_url": "https://github.com/tcirstea", "followers_url": "https://api.github.com/users/tcirstea/followers", "following_url": "https://api.github.com/users/tcirstea/following{/other_user}", "gists_url": "https://api.github.com/users/tcirstea/gists{/gist_id}", "starred_url": "https://api.github.com/users/tcirstea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tcirstea/subscriptions", "organizations_url": "https://api.github.com/users/tcirstea/orgs", "repos_url": "https://api.github.com/users/tcirstea/repos", "events_url": "https://api.github.com/users/tcirstea/events{/privacy}", "received_events_url": "https://api.github.com/users/tcirstea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-10T09:25:02Z", "updated_at": "2019-11-12T14:19:34Z", "closed_at": "2019-11-12T14:19:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "There's no wheel for the raspberry pi, and I cannot seem to build it.\r\nThe dependencies (maturin mainly) have been built and installed.\r\nI have rust beta (since there doesn't seem to be a nightly published for this platform).\r\n\r\nOutput from pip3 wheel:\r\n```\r\n  Successfully installed maturin-0.7.6 toml-0.10.0\r\n  Cleaning up...\r\n  Cleaned build tracker '/tmp/pip-req-tracker-wbgzc9qi'\r\ndone\r\n  Running setup.py (path:/tmp/pip-wheel-a9ak7sy7/orjson/setup.py) egg_info for package orjson\r\n    Running command python setup.py egg_info\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/usr/lib/python3.7/tokenize.py\", line 447, in open\r\n        buffer = _builtin_open(filename, 'rb')\r\n    FileNotFoundError: [Errno 2] No such file or directory: '/tmp/pip-wheel-a9ak7sy7/orjson/setup.py'\r\nCleaning up...\r\n  Removing source in /tmp/pip-wheel-a9ak7sy7/orjson\r\nRemoved orjson from https://files.pythonhosted.org/packages/d0/e2/5042aa4907face747f7d68fa694a5781c07f9263bbaebfeba42a542f1ec3/orjson-2.1.2.tar.gz#sha256=40a6b0c17d94907d5c26ed2225fc465e48aa0eac8fd5d46d01beb105e4db06c1 from build tracker '/tmp/pip-req-tracker-wbgzc9qi'\r\nRemoved build tracker '/tmp/pip-req-tracker-wbgzc9qi'\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-wheel-a9ak7sy7/orjson/\r\nException information:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/cli/base_command.py\", line 143, in main\r\n    status = self.run(options, args)\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/commands/wheel.py\", line 161, in run\r\n    resolver.resolve(requirement_set)\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/resolve.py\", line 102, in resolve\r\n    self._resolve_one(requirement_set, req)\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/resolve.py\", line 256, in _resolve_one\r\n    abstract_dist = self._get_abstract_dist_for(req_to_install)\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/resolve.py\", line 209, in _get_abstract_dist_for\r\n    self.require_hashes\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/operations/prepare.py\", line 298, in prepare_linked_requirement\r\n    abstract_dist.prep_for_dist(finder, self.build_isolation)\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/operations/prepare.py\", line 126, in prep_for_dist\r\n    self.req.run_egg_info()\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/req/req_install.py\", line 473, in run_egg_info\r\n    command_desc='python setup.py egg_info')\r\n  File \"/usr/lib/python3/dist-packages/pip/_internal/utils/misc.py\", line 723, in call_subprocess\r\n    % (command_desc, proc.returncode, cwd))\r\npip._internal.exceptions.InstallationError: Command \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-wheel-a9ak7sy7/orjson/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/37", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/37/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/37/events", "html_url": "https://github.com/ijl/orjson/issues/37", "id": 517439979, "node_id": "MDU6SXNzdWU1MTc0Mzk5Nzk=", "number": 37, "title": "Wrong JSONEncodeError Raised with Default Function", "user": {"login": "brianjbuck", "id": 7584896, "node_id": "MDQ6VXNlcjc1ODQ4OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7584896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianjbuck", "html_url": "https://github.com/brianjbuck", "followers_url": "https://api.github.com/users/brianjbuck/followers", "following_url": "https://api.github.com/users/brianjbuck/following{/other_user}", "gists_url": "https://api.github.com/users/brianjbuck/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianjbuck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianjbuck/subscriptions", "organizations_url": "https://api.github.com/users/brianjbuck/orgs", "repos_url": "https://api.github.com/users/brianjbuck/repos", "events_url": "https://api.github.com/users/brianjbuck/events{/privacy}", "received_events_url": "https://api.github.com/users/brianjbuck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-04T22:26:21Z", "updated_at": "2019-11-04T22:27:09Z", "closed_at": "2019-11-04T22:27:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using a `default` function is masking true error. Consider the following code:\r\n\r\n```Python\r\nfrom collections import OrderedDict\r\n\r\nimport numpy\r\nimport orjson\r\n\r\n\r\ndef default(data):\r\n    if isinstance(data, OrderedDict):\r\n        return dict(data)\r\n    else:\r\n        return data\r\n\r\ntest_data = OrderedDict({\"value\": numpy.int32(10)})\r\n\r\norjson.dumps(test_data, default=default)\r\n---------------------------------------------------------------------------\r\nJSONEncodeError                           Traceback (most recent call last)\r\n<ipython-input-8-213d4ac9b625> in <module>\r\n----> 1 orjson.dumps(test_data, default=default)\r\n\r\nJSONEncodeError: default serializer exceeds recursion limit\r\n```\r\nWhat is actually happening here though is the type `numpy.int32` can't be serialized which is fine if the error wasn't a recursion error. What I would expect to see instead is this error:\r\n\r\n```Python\r\norjson.dumps(numpy.int32(10))\r\n---------------------------------------------------------------------------\r\nJSONEncodeError                           Traceback (most recent call last)\r\n<ipython-input-3-80a725b81985> in <module>\r\n----> 1 orjson.dumps(numpy.int32(9))\r\n\r\nJSONEncodeError: Type is not JSON serializable: numpy.int32\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/36", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/36/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/36/events", "html_url": "https://github.com/ijl/orjson/issues/36", "id": 516377583, "node_id": "MDU6SXNzdWU1MTYzNzc1ODM=", "number": 36, "title": "Hard Limit Recursion Limit on `default_calls`", "user": {"login": "brianjbuck", "id": 7584896, "node_id": "MDQ6VXNlcjc1ODQ4OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7584896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brianjbuck", "html_url": "https://github.com/brianjbuck", "followers_url": "https://api.github.com/users/brianjbuck/followers", "following_url": "https://api.github.com/users/brianjbuck/following{/other_user}", "gists_url": "https://api.github.com/users/brianjbuck/gists{/gist_id}", "starred_url": "https://api.github.com/users/brianjbuck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brianjbuck/subscriptions", "organizations_url": "https://api.github.com/users/brianjbuck/orgs", "repos_url": "https://api.github.com/users/brianjbuck/repos", "events_url": "https://api.github.com/users/brianjbuck/events{/privacy}", "received_events_url": "https://api.github.com/users/brianjbuck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-01T22:25:49Z", "updated_at": "2019-11-05T13:30:12Z", "closed_at": "2019-11-05T13:30:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a specific reason the value `5` was chosen here?\r\n\r\n`if self.default_calls > 5` https://github.com/ijl/orjson/blob/master/src/encode.rs#L227\r\n\r\nIf it's not a hard limit would it be possible to add it as an optional param to `dumps()` to enable the developer to choose what that limit would be?\r\n\r\nI am not a Rust developer but I was able to put together a working proof of concept here:\r\nhttps://github.com/brianjbuck/orjson/commit/eb9cfb8c7d84c6afd41693e1e310b64b5ea7c0a2\r\n\r\nIf you wanted to give feedback I can make edits and possibly a PR if you like.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/35", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/35/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/35/events", "html_url": "https://github.com/ijl/orjson/issues/35", "id": 510966637, "node_id": "MDU6SXNzdWU1MTA5NjY2Mzc=", "number": 35, "title": "pip install not working ", "user": {"login": "XHIIHIIHX", "id": 6243984, "node_id": "MDQ6VXNlcjYyNDM5ODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6243984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XHIIHIIHX", "html_url": "https://github.com/XHIIHIIHX", "followers_url": "https://api.github.com/users/XHIIHIIHX/followers", "following_url": "https://api.github.com/users/XHIIHIIHX/following{/other_user}", "gists_url": "https://api.github.com/users/XHIIHIIHX/gists{/gist_id}", "starred_url": "https://api.github.com/users/XHIIHIIHX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XHIIHIIHX/subscriptions", "organizations_url": "https://api.github.com/users/XHIIHIIHX/orgs", "repos_url": "https://api.github.com/users/XHIIHIIHX/repos", "events_url": "https://api.github.com/users/XHIIHIIHX/events{/privacy}", "received_events_url": "https://api.github.com/users/XHIIHIIHX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-22T22:36:27Z", "updated_at": "2019-10-23T18:33:54Z", "closed_at": "2019-10-23T18:33:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "my pip isn't completely borked afaik. I install ujson as example below. \r\n\r\n uname -a\r\nLinux daserver5 4.4.0-166-generic #195-Ubuntu SMP Tue Oct 1 09:35:25 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n\r\n\r\n\r\nsudo -H pip --no-cache install orjson\r\nCollecting orjson\r\n  Downloading https://files.pythonhosted.org/packages/6c/d1/6357446e83e4774efcf9798ee17ec40ba573033f8b2f956bcadc2007a737/orjson-2.0.11.tar.gz (502kB)\r\n     |################################| 512kB 2.8MB/s\r\n  Installing build dependencies ... done\r\n  Getting requirements to build wheel ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /usr/bin/python /usr/local/lib/python2.7/dist-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /tmp/tmpnlz0SE\r\n       cwd: /tmp/pip-install-5kd1BM/orjson\r\n  Complete output (15 lines):\r\n  Traceback (most recent call last):\r\n    File \"/usr/local/lib/python2.7/dist-packages/pip/_vendor/pep517/_in_process.py\", line 257, in <module>\r\n      main()\r\n    File \"/usr/local/lib/python2.7/dist-packages/pip/_vendor/pep517/_in_process.py\", line 240, in main\r\n      json_out['return_val'] = hook(**hook_input['kwargs'])\r\n    File \"/usr/local/lib/python2.7/dist-packages/pip/_vendor/pep517/_in_process.py\", line 85, in get_requires_for_build_wheel\r\n      backend = _build_backend()\r\n    File \"/usr/local/lib/python2.7/dist-packages/pip/_vendor/pep517/_in_process.py\", line 63, in _build_backend\r\n      obj = import_module(mod_path)\r\n    File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n      __import__(name)\r\n    File \"/tmp/pip-build-env-zMe1jh/overlay/lib/python2.7/site-packages/maturin/__init__.py\", line 31\r\n      def get_config() -> Dict[str, str]:\r\n                       ^\r\n  SyntaxError: invalid syntax\r\n  ----------------------------------------\r\nERROR: Command errored out with exit status 1: /usr/bin/python /usr/local/lib/python2.7/dist-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /tmp/tmpnlz0SE Check the logs for full command output.\r\n\r\n\r\n..................................\r\n\r\n\r\nsudo -H pip --no-cache install ujson\r\nCollecting ujson\r\n  Downloading https://files.pythonhosted.org/packages/16/c4/79f3409bc710559015464e5f49b9879430d8f87498ecdc335899732e5377/ujson-1.35.tar.gz (192kB)\r\n     |################################| 194kB 2.6MB/s\r\nBuilding wheels for collected packages: ujson\r\n  Building wheel for ujson (setup.py) ... done\r\n  Created wheel for ujson: filename=ujson-1.35-cp27-cp27mu-linux_x86_64.whl size=62574 sha256=df2b96489b43e481e81fb576c162d1513d4648e20e402cc122783a1fea12efa9\r\n  Stored in directory: /tmp/pip-ephem-wheel-cache-kCTAly/wheels/28/77/e4/0311145b9c2e2f01470e744855131f9e34d6919687550f87d1\r\nSuccessfully built ujson\r\nInstalling collected packages: ujson\r\nSuccessfully installed ujson-1.35\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/34", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/34/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/34/events", "html_url": "https://github.com/ijl/orjson/issues/34", "id": 509620885, "node_id": "MDU6SXNzdWU1MDk2MjA4ODU=", "number": 34, "title": "Cannot build orjson for raspberry pi 4", "user": {"login": "chulucninh09", "id": 43906170, "node_id": "MDQ6VXNlcjQzOTA2MTcw", "avatar_url": "https://avatars3.githubusercontent.com/u/43906170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chulucninh09", "html_url": "https://github.com/chulucninh09", "followers_url": "https://api.github.com/users/chulucninh09/followers", "following_url": "https://api.github.com/users/chulucninh09/following{/other_user}", "gists_url": "https://api.github.com/users/chulucninh09/gists{/gist_id}", "starred_url": "https://api.github.com/users/chulucninh09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chulucninh09/subscriptions", "organizations_url": "https://api.github.com/users/chulucninh09/orgs", "repos_url": "https://api.github.com/users/chulucninh09/repos", "events_url": "https://api.github.com/users/chulucninh09/events{/privacy}", "received_events_url": "https://api.github.com/users/chulucninh09/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-20T16:54:36Z", "updated_at": "2019-10-21T13:14:59Z", "closed_at": "2019-10-21T13:14:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I tried to run `pip install orjson` in Ubuntu Server 18.04 for Raspberry Pi4, the following error occur:\r\n```\r\nCollecting orjson\r\n  Using cached https://files.pythonhosted.org/packages/6c/d1/6357446e83e4774efcf9798ee17ec40ba573033f8b2f956bcadc2007a737/orjson-2.0.11.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/usr/lib/python3.6/tokenize.py\", line 452, in open\r\n        buffer = _builtin_open(filename, 'rb')\r\n    FileNotFoundError: [Errno 2] No such file or directory: '/tmp/pip-build-u6uu263e/orjson/setup.py'\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-u6uu263e/orjson/\r\n```\r\n\r\nThere should be a wheel for manylinux stated in pypi, but instead I downloaded tar file and kinda install from source. What happened?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/33", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/33/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/33/events", "html_url": "https://github.com/ijl/orjson/issues/33", "id": 505195553, "node_id": "MDU6SXNzdWU1MDUxOTU1NTM=", "number": 33, "title": "Installation fails in PyCharm 2019.2.1", "user": {"login": "scy245", "id": 26439659, "node_id": "MDQ6VXNlcjI2NDM5NjU5", "avatar_url": "https://avatars0.githubusercontent.com/u/26439659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scy245", "html_url": "https://github.com/scy245", "followers_url": "https://api.github.com/users/scy245/followers", "following_url": "https://api.github.com/users/scy245/following{/other_user}", "gists_url": "https://api.github.com/users/scy245/gists{/gist_id}", "starred_url": "https://api.github.com/users/scy245/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scy245/subscriptions", "organizations_url": "https://api.github.com/users/scy245/orgs", "repos_url": "https://api.github.com/users/scy245/repos", "events_url": "https://api.github.com/users/scy245/events{/privacy}", "received_events_url": "https://api.github.com/users/scy245/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-10T11:01:22Z", "updated_at": "2019-10-10T14:27:29Z", "closed_at": "2019-10-10T14:27:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to install orjson in a virtual environment of a project in PyCharm. \r\nI use Python 3.7.4. And the packages installed are:\r\n```\r\npip list\r\nPackage      Version\r\n------------ -------\r\naiokafka     0.5.2\r\nkafka-python 1.4.6\r\npip          19.0.3\r\nsetuptools   41.4.0\r\n```\r\nTrying to install orjson, the following error occurs:\r\n```\r\nCollecting orjson\r\n  Using cached https://files.pythonhosted.org/packages/6c/d1/6357446e83e4774efcf9798ee17ec40ba573033f8b2f956bcadc2007a737/orjson-2.0.11.tar.gz\r\n  Installing build dependencies: started\r\n  Installing build dependencies: finished with status 'done'\r\n  Getting requirements to build wheel: started\r\n  Getting requirements to build wheel: finished with status 'done'\r\n    Preparing wheel metadata: started\r\n    Preparing wheel metadata: finished with status 'done'\r\nBuilding wheels for collected packages: orjson\r\n  Building wheel for orjson (PEP 517): started\r\n  Building wheel for orjson (PEP 517): finished with status 'error'\r\n  Complete output from command E:\\TELEFONICA\\venv37\\Scripts\\python.exe E:\\TELEFONICA\\venv37\\lib\\site-packages\\pip-19.0.3-py3.7.egg\\pip\\_vendor\\pep517\\_in_process.py build_wheel C:\\Users\\Alten\\AppData\\Local\\Temp\\tmp0u5e1tm7:\r\n  Running `maturin pep517 build-wheel -i python --manylinux=off --rustc-extra-args=-C target-feature=+sse2 --strip=on`\r\n     Compiling proc-macro2 v1.0.5\r\n     Compiling unicode-xid v0.2.0\r\n     Compiling syn v1.0.5\r\n     Compiling semver-parser v0.7.0\r\n     Compiling cfg-if v0.1.10\r\n     Compiling ryu v1.0.0\r\n     Compiling serde v1.0.101\r\n     Compiling memchr v2.2.1\r\n     Compiling getrandom v0.1.12\r\n     Compiling lazy_static v1.4.0\r\n     Compiling winapi v0.3.8\r\n  error: could not compile `getrandom`.\r\n  warning: build failed, waiting for other jobs to finish...\r\n  error: could not compile `ryu`.\r\n  warning: build failed, waiting for other jobs to finish...\r\n  error: could not compile `serde`.\r\n  warning: build failed, waiting for other jobs to finish...\r\n  error: could not compile `syn`.\r\n  warning: build failed, waiting for other jobs to finish...\r\n  error: could not compile `proc-macro2`.\r\n  warning: build failed, waiting for other jobs to finish...\r\n  error: could not compile `memchr`.\r\n  warning: build failed, waiting for other jobs to finish...\r\n  error: could not compile `winapi`.\r\n  \r\n  To learn more, run the command again with --verbose.\r\n  \u00f0\u0178\u2019\u00a5 maturin failed\r\n    Caused by: Failed to build a native library through cargo\r\n    Caused by: Cargo build finished with \"exit code: 101\": `cargo rustc --message-format json --manifest-path Cargo.toml --lib --release -- -C target-feature=+sse2 -C link-arg=-s`\r\n  Error: Command '['maturin', 'pep517', 'build-wheel', '-i', 'python', '--manylinux=off', '--rustc-extra-args=-C target-feature=+sse2', '--strip=on']' returned non-zero exit status 1.\r\n  \r\n  ----------------------------------------\r\n  Running setup.py clean for orjson\r\n  Complete output from command E:\\TELEFONICA\\venv37\\Scripts\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\Alten\\\\AppData\\\\Local\\\\Temp\\\\pycharm-packaging\\\\orjson\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" clean --all:\r\n  Traceback (most recent call last):\r\n    File \"<string>\", line 1, in <module>\r\n  ModuleNotFoundError: No module named 'setuptools'\r\n  \r\n  ----------------------------------------\r\nFailed to build orjson\r\n\r\n    Subprocess output does not appear to be encoded as cp1252\r\n  Failed building wheel for orjson\r\n  Failed cleaning build dir for orjson\r\nCould not build wheels for orjson which use PEP 517 and cannot be installed directly\r\n```\r\n\r\nRunning the command from the system terminal, the same error occurs.\r\n\r\nIs there any version of the orjson library already compiled?\r\n\r\nThanks in advance for the help.\r\n\r\n_Details of PyCharm_:\r\nPyCharm 2019.2.1 (Professional Edition)\r\nBuild #PY-192.6262.63, built on August 22, 2019\r\nRuntime version: 11.0.3+12-b304.39 amd64\r\nVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o\r\nWindows 10 10.0\r\nGC: ParNew, ConcurrentMarkSweep\r\nMemory: 1981M\r\nCores: 8\r\nRegistry: debugger.watches.in.variables=false\r\nNon-Bundled Plugins: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/32", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/32/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/32/events", "html_url": "https://github.com/ijl/orjson/issues/32", "id": 496057533, "node_id": "MDU6SXNzdWU0OTYwNTc1MzM=", "number": 32, "title": "dataclass support", "user": {"login": "ijl", "id": 1977222, "node_id": "MDQ6VXNlcjE5NzcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1977222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijl", "html_url": "https://github.com/ijl", "followers_url": "https://api.github.com/users/ijl/followers", "following_url": "https://api.github.com/users/ijl/following{/other_user}", "gists_url": "https://api.github.com/users/ijl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijl/subscriptions", "organizations_url": "https://api.github.com/users/ijl/orgs", "repos_url": "https://api.github.com/users/ijl/repos", "events_url": "https://api.github.com/users/ijl/events{/privacy}", "received_events_url": "https://api.github.com/users/ijl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1136023254, "node_id": "MDU6TGFiZWwxMTM2MDIzMjU0", "url": "https://api.github.com/repos/ijl/orjson/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-19T22:35:48Z", "updated_at": "2019-10-24T15:38:45Z", "closed_at": "2019-10-16T00:27:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I'd like to add support for `orjson.dumps()` to serialize dataclass instances.\r\n\r\nThis is a breaking change: users may rely on instances falling through to `default` and controlling how an instance is serialized. This would be version 3.\r\n\r\nThe [dataclasses documentation](https://docs.python.org/3/library/dataclasses.html) provides `field(metadata={...})` for third parties to customize. I'm not aware of standardized usage around this.\r\n\r\nThe use case I'm aware of right now is a user wanting to not serialize a value.\r\n\r\nFor that I think something like `attr: str = field(metadata={\"serialize\": False})`, and `orjson.dumps()`  requiring an `option=OPT_CUSTOM_DATACLASS` or such to have that take effect.\r\n\r\nWithout the need to inspect metadata, serializing a dataclass looks much like serializing a `dict`. The option is to avoid two additional method calls for metadata if customization isn't needed.\r\n\r\nFeedback and use cases are welcome.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/31", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/31/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/31/events", "html_url": "https://github.com/ijl/orjson/issues/31", "id": 495300436, "node_id": "MDU6SXNzdWU0OTUzMDA0MzY=", "number": 31, "title": "Datetime serialization wrong for datetimes with microseconds smaller than 100000", "user": {"login": "Lukas0907", "id": 591792, "node_id": "MDQ6VXNlcjU5MTc5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/591792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukas0907", "html_url": "https://github.com/Lukas0907", "followers_url": "https://api.github.com/users/Lukas0907/followers", "following_url": "https://api.github.com/users/Lukas0907/following{/other_user}", "gists_url": "https://api.github.com/users/Lukas0907/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukas0907/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukas0907/subscriptions", "organizations_url": "https://api.github.com/users/Lukas0907/orgs", "repos_url": "https://api.github.com/users/Lukas0907/repos", "events_url": "https://api.github.com/users/Lukas0907/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukas0907/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-18T15:29:23Z", "updated_at": "2019-09-19T07:42:02Z", "closed_at": "2019-09-18T16:56:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI think there is an error in the way microseconds are serialized:\r\n\r\n```\r\n>>> orjson.dumps(datetime.datetime.now().replace(microsecond=10))\r\nb'\"2019-09-18T15:26:25.10\"'\r\n>>> datetime.datetime.now().replace(microsecond=10).isoformat()\r\n'2019-09-18T15:28:28.000010'\r\n```\r\n\r\nMicroseconds are usually given as fractional seconds. Therefore \".10\" has a different meaning than \".000010\".\r\n\r\nLukas.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/30", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/30/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/30/events", "html_url": "https://github.com/ijl/orjson/issues/30", "id": 494259363, "node_id": "MDU6SXNzdWU0OTQyNTkzNjM=", "number": 30, "title": "black settings not in pyproject.toml", "user": {"login": "skewty", "id": 9087223, "node_id": "MDQ6VXNlcjkwODcyMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/9087223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skewty", "html_url": "https://github.com/skewty", "followers_url": "https://api.github.com/users/skewty/followers", "following_url": "https://api.github.com/users/skewty/following{/other_user}", "gists_url": "https://api.github.com/users/skewty/gists{/gist_id}", "starred_url": "https://api.github.com/users/skewty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skewty/subscriptions", "organizations_url": "https://api.github.com/users/skewty/orgs", "repos_url": "https://api.github.com/users/skewty/repos", "events_url": "https://api.github.com/users/skewty/events{/privacy}", "received_events_url": "https://api.github.com/users/skewty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-16T20:26:18Z", "updated_at": "2019-09-23T13:52:37Z", "closed_at": "2019-09-23T13:52:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you are using **black** perhaps you should include the settings you use in `pyproject.toml` so other contributors also have them and they get applied automatically.\r\n\r\nSomething like:\r\n\r\n```toml\r\n[tool.black]\r\nline-length = 120\r\ntarget-version = ['py36', 'py37']\r\nskip-string-normalization = \"true\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/28", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/28/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/28/events", "html_url": "https://github.com/ijl/orjson/issues/28", "id": 489257587, "node_id": "MDU6SXNzdWU0ODkyNTc1ODc=", "number": 28, "title": "dumps support sort_keys", "user": {"login": "pjz", "id": 11100, "node_id": "MDQ6VXNlcjExMTAw", "avatar_url": "https://avatars3.githubusercontent.com/u/11100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjz", "html_url": "https://github.com/pjz", "followers_url": "https://api.github.com/users/pjz/followers", "following_url": "https://api.github.com/users/pjz/following{/other_user}", "gists_url": "https://api.github.com/users/pjz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjz/subscriptions", "organizations_url": "https://api.github.com/users/pjz/orgs", "repos_url": "https://api.github.com/users/pjz/repos", "events_url": "https://api.github.com/users/pjz/events{/privacy}", "received_events_url": "https://api.github.com/users/pjz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1136023254, "node_id": "MDU6TGFiZWwxMTM2MDIzMjU0", "url": "https://api.github.com/repos/ijl/orjson/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-09-04T16:09:15Z", "updated_at": "2020-02-11T16:02:32Z", "closed_at": "2020-02-11T16:02:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to have dumps support a 'sort_keys' option that would sort the keys in output dictionaries.  This allows me to verify that `dumps({\"a\":\"b\", \"c\":\"d\"}) == dumps({\"a\":\"b\", \"c\":\"d\"})`.  Otherwise I have to deserialize them both and do individual key/value compares.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/27", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/27/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/27/events", "html_url": "https://github.com/ijl/orjson/issues/27", "id": 485703728, "node_id": "MDU6SXNzdWU0ODU3MDM3Mjg=", "number": 27, "title": "load(stream)", "user": {"login": "sbrandtb", "id": 1580789, "node_id": "MDQ6VXNlcjE1ODA3ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1580789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrandtb", "html_url": "https://github.com/sbrandtb", "followers_url": "https://api.github.com/users/sbrandtb/followers", "following_url": "https://api.github.com/users/sbrandtb/following{/other_user}", "gists_url": "https://api.github.com/users/sbrandtb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrandtb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrandtb/subscriptions", "organizations_url": "https://api.github.com/users/sbrandtb/orgs", "repos_url": "https://api.github.com/users/sbrandtb/repos", "events_url": "https://api.github.com/users/sbrandtb/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrandtb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-27T09:45:53Z", "updated_at": "2020-01-15T12:46:39Z", "closed_at": "2020-01-13T14:07:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a reason orjson does not, should not or cannot support loading from streams (\u2192 `load()` instead of `loads()`)\r\n\r\nIn my use case (big JSON rendered in Django Rest Framework), memory usage goes up by 60% when using orjson compared to the stdtlib and I suspect part of it being the cast to a bytestring:\r\n\r\n```python\r\n# this\r\norjson.loads(decoded_stream.read())\r\n# instead of\r\norjson.load(decoded_stream)\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/26", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/26/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/26/events", "html_url": "https://github.com/ijl/orjson/issues/26", "id": 483548944, "node_id": "MDU6SXNzdWU0ODM1NDg5NDQ=", "number": 26, "title": "Document that 'bool' is a natively supported type", "user": {"login": "2-5", "id": 3753822, "node_id": "MDQ6VXNlcjM3NTM4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3753822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/2-5", "html_url": "https://github.com/2-5", "followers_url": "https://api.github.com/users/2-5/followers", "following_url": "https://api.github.com/users/2-5/following{/other_user}", "gists_url": "https://api.github.com/users/2-5/gists{/gist_id}", "starred_url": "https://api.github.com/users/2-5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/2-5/subscriptions", "organizations_url": "https://api.github.com/users/2-5/orgs", "repos_url": "https://api.github.com/users/2-5/repos", "events_url": "https://api.github.com/users/2-5/events{/privacy}", "received_events_url": "https://api.github.com/users/2-5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-21T17:21:50Z", "updated_at": "2019-08-21T18:56:18Z", "closed_at": "2019-08-21T18:53:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "The readme says: \r\n\r\n> It natively serializes `str`, `dict`, `list`, `tuple`, `int`, `float`, `datetime.datetime`, `datetime.date`, `datetime.time`, and `None` instances.\r\n\r\nNotice that `bool` is missing from it. Because the list is so precise, I had to go look through the test suite to confirm that `bool` is indeed supported.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/24", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/24/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/24/events", "html_url": "https://github.com/ijl/orjson/issues/24", "id": 475804079, "node_id": "MDU6SXNzdWU0NzU4MDQwNzk=", "number": 24, "title": "Can not load exception class: {}.{}json.JSONDecodeError", "user": {"login": "leobuskin", "id": 18386691, "node_id": "MDQ6VXNlcjE4Mzg2Njkx", "avatar_url": "https://avatars0.githubusercontent.com/u/18386691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leobuskin", "html_url": "https://github.com/leobuskin", "followers_url": "https://api.github.com/users/leobuskin/followers", "following_url": "https://api.github.com/users/leobuskin/following{/other_user}", "gists_url": "https://api.github.com/users/leobuskin/gists{/gist_id}", "starred_url": "https://api.github.com/users/leobuskin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leobuskin/subscriptions", "organizations_url": "https://api.github.com/users/leobuskin/orgs", "repos_url": "https://api.github.com/users/leobuskin/repos", "events_url": "https://api.github.com/users/leobuskin/events{/privacy}", "received_events_url": "https://api.github.com/users/leobuskin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-01T17:32:38Z", "updated_at": "2019-08-01T19:31:49Z", "closed_at": "2019-08-01T19:31:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some interesting situation with `orjson==2.0.6` in my project. I wasn't able to reproduce this issue outside of the project, it means there's probably some strange conflict with existing dependencies or environment. Clean module outside of the project but in the same venv and same imports works absolutely fine.\r\n\r\nAny idea what it can be?\r\n\r\n*Python*: 3.6.3\r\n\r\nPyCharm output:\r\n```\r\nthread '<unnamed>' panicked at 'Can not load exception class: {}.{}json.JSONDecodeError: PyErr { type: Py(0x9d0c40, PhantomData) }', src/libcore/result.rs:999:5\r\nstack backtrace:\r\n   0: <unknown>\r\n   1: <unknown>\r\n   2: <unknown>\r\n   3: <unknown>\r\n   4: <unknown>\r\n   5: <unknown>\r\n   6: <unknown>\r\n   7: <unknown>\r\n   8: <unknown>\r\n   9: PyInit_orjson\r\n  10: _PyImport_LoadDynamicModuleWithSpec\r\n  11: <unknown>\r\n  12: PyCFunction_Call\r\n  13: _PyEval_EvalFrameDefault\r\n  14: <unknown>\r\n  15: <unknown>\r\n  16: _PyEval_EvalFrameDefault\r\n  17: <unknown>\r\n  18: <unknown>\r\n  19: _PyEval_EvalFrameDefault\r\n  20: <unknown>\r\n  21: <unknown>\r\n  22: _PyEval_EvalFrameDefault\r\n  23: <unknown>\r\n  24: <unknown>\r\n  25: _PyEval_EvalFrameDefault\r\n  26: <unknown>\r\n  27: <unknown>\r\n  28: _PyEval_EvalFrameDefault\r\n  29: <unknown>\r\n  30: _PyFunction_FastCallDict\r\n  31: _PyObject_FastCallDict\r\n  32: _PyObject_CallMethodIdObjArgs\r\n  33: PyImport_ImportModuleLevelObject\r\n  34: _PyEval_EvalFrameDefault\r\n  35: <unknown>\r\n  36: PyEval_EvalCode\r\n  37: <unknown>\r\n  38: PyCFunction_Call\r\n  39: _PyEval_EvalFrameDefault\r\n  40: <unknown>\r\n  41: <unknown>\r\n  42: _PyEval_EvalFrameDefault\r\n  43: <unknown>\r\n  44: <unknown>\r\n  45: _PyEval_EvalFrameDefault\r\n  46: <unknown>\r\n  47: <unknown>\r\n  48: _PyEval_EvalFrameDefault\r\n  49: <unknown>\r\n  50: <unknown>\r\n  51: _PyEval_EvalFrameDefault\r\n  52: <unknown>\r\n  53: _PyFunction_FastCallDict\r\n  54: _PyObject_FastCallDict\r\n  55: _PyObject_CallMethodIdObjArgs\r\n  56: PyImport_ImportModuleLevelObject\r\n  57: _PyEval_EvalFrameDefault\r\n  58: <unknown>\r\n  59: PyEval_EvalCode\r\n  60: <unknown>\r\n  61: PyCFunction_Call\r\n  62: _PyEval_EvalFrameDefault\r\n  63: <unknown>\r\n  64: <unknown>\r\n  65: _PyEval_EvalFrameDefault\r\n  66: <unknown>\r\n  67: <unknown>\r\n  68: _PyEval_EvalFrameDefault\r\n  69: <unknown>\r\n  70: <unknown>\r\n  71: _PyEval_EvalFrameDefault\r\n  72: <unknown>\r\n  73: <unknown>\r\n  74: _PyEval_EvalFrameDefault\r\n  75: <unknown>\r\n  76: _PyFunction_FastCallDict\r\n  77: _PyObject_FastCallDict\r\n  78: _PyObject_CallMethodIdObjArgs\r\n  79: PyImport_ImportModuleLevelObject\r\n  80: _PyEval_EvalFrameDefault\r\n  81: <unknown>\r\n  82: PyEval_EvalCode\r\n  83: <unknown>\r\n  84: PyCFunction_Call\r\n  85: _PyEval_EvalFrameDefault\r\n  86: <unknown>\r\n  87: <unknown>\r\n  88: _PyEval_EvalFrameDefault\r\n  89: <unknown>\r\n  90: <unknown>\r\n  91: _PyEval_EvalFrameDefault\r\n  92: <unknown>\r\n  93: <unknown>\r\n  94: _PyEval_EvalFrameDefault\r\n  95: <unknown>\r\n  96: <unknown>\r\n  97: _PyEval_EvalFrameDefault\r\n  98: <unknown>\r\n  99: _PyFunction_FastCallDict\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/23", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/23/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/23/events", "html_url": "https://github.com/ijl/orjson/issues/23", "id": 468921831, "node_id": "MDU6SXNzdWU0Njg5MjE4MzE=", "number": 23, "title": "Is Rust nightly still necessary, or can you use some released version of Rust?", "user": {"login": "itamarst", "id": 3266662, "node_id": "MDQ6VXNlcjMyNjY2NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3266662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itamarst", "html_url": "https://github.com/itamarst", "followers_url": "https://api.github.com/users/itamarst/followers", "following_url": "https://api.github.com/users/itamarst/following{/other_user}", "gists_url": "https://api.github.com/users/itamarst/gists{/gist_id}", "starred_url": "https://api.github.com/users/itamarst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itamarst/subscriptions", "organizations_url": "https://api.github.com/users/itamarst/orgs", "repos_url": "https://api.github.com/users/itamarst/repos", "events_url": "https://api.github.com/users/itamarst/events{/privacy}", "received_events_url": "https://api.github.com/users/itamarst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-16T23:53:40Z", "updated_at": "2020-05-01T17:14:27Z", "closed_at": "2019-09-26T14:58:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I will need to package `orjson` for Conda-Forge if I decide to use it, and I'm not sure if random versions of rust will be available.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/22", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/22/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/22/events", "html_url": "https://github.com/ijl/orjson/issues/22", "id": 466651622, "node_id": "MDU6SXNzdWU0NjY2NTE2MjI=", "number": 22, "title": "order of dataframe columns", "user": {"login": "mdashkezari", "id": 14186343, "node_id": "MDQ6VXNlcjE0MTg2MzQz", "avatar_url": "https://avatars3.githubusercontent.com/u/14186343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdashkezari", "html_url": "https://github.com/mdashkezari", "followers_url": "https://api.github.com/users/mdashkezari/followers", "following_url": "https://api.github.com/users/mdashkezari/following{/other_user}", "gists_url": "https://api.github.com/users/mdashkezari/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdashkezari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdashkezari/subscriptions", "organizations_url": "https://api.github.com/users/mdashkezari/orgs", "repos_url": "https://api.github.com/users/mdashkezari/repos", "events_url": "https://api.github.com/users/mdashkezari/events{/privacy}", "received_events_url": "https://api.github.com/users/mdashkezari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-11T04:08:08Z", "updated_at": "2019-07-12T09:47:29Z", "closed_at": "2019-07-12T09:47:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "trying to convert json to pandas dataframe. what does set the order of columns? \r\n\r\njson_list = [orjson.loads(line) for line in resp.text.splitlines()]\r\ndf = pd.DataFrame(json_list)\r\n\r\nwhere resp is a generic response from an API call. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/21", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/21/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/21/events", "html_url": "https://github.com/ijl/orjson/issues/21", "id": 466116530, "node_id": "MDU6SXNzdWU0NjYxMTY1MzA=", "number": 21, "title": "Would you support parse float into Decimal?", "user": {"login": "yihuang", "id": 236070, "node_id": "MDQ6VXNlcjIzNjA3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/236070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yihuang", "html_url": "https://github.com/yihuang", "followers_url": "https://api.github.com/users/yihuang/followers", "following_url": "https://api.github.com/users/yihuang/following{/other_user}", "gists_url": "https://api.github.com/users/yihuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yihuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yihuang/subscriptions", "organizations_url": "https://api.github.com/users/yihuang/orgs", "repos_url": "https://api.github.com/users/yihuang/repos", "events_url": "https://api.github.com/users/yihuang/events{/privacy}", "received_events_url": "https://api.github.com/users/yihuang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-10T06:02:57Z", "updated_at": "2019-07-13T15:30:40Z", "closed_at": "2019-07-12T09:47:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Really need a json library support Decimal and faster than the one in standard library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/20", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/20/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/20/events", "html_url": "https://github.com/ijl/orjson/issues/20", "id": 465778610, "node_id": "MDU6SXNzdWU0NjU3Nzg2MTA=", "number": 20, "title": "Unable to serialize OrderedDict", "user": {"login": "wzhliang", "id": 1044827, "node_id": "MDQ6VXNlcjEwNDQ4Mjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1044827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wzhliang", "html_url": "https://github.com/wzhliang", "followers_url": "https://api.github.com/users/wzhliang/followers", "following_url": "https://api.github.com/users/wzhliang/following{/other_user}", "gists_url": "https://api.github.com/users/wzhliang/gists{/gist_id}", "starred_url": "https://api.github.com/users/wzhliang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wzhliang/subscriptions", "organizations_url": "https://api.github.com/users/wzhliang/orgs", "repos_url": "https://api.github.com/users/wzhliang/repos", "events_url": "https://api.github.com/users/wzhliang/events{/privacy}", "received_events_url": "https://api.github.com/users/wzhliang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-09T13:23:25Z", "updated_at": "2019-07-09T14:04:49Z", "closed_at": "2019-07-09T14:04:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When encoding object that contains an OrderedDict, orison complains about `orjson.JSONEncodeError: Type is not JSON serializable: collections.OrderedDict`. json from standard library works fine.\r\n\r\n Python 3.7.3 on MacOS", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/19", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/19/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/19/events", "html_url": "https://github.com/ijl/orjson/issues/19", "id": 458389761, "node_id": "MDU6SXNzdWU0NTgzODk3NjE=", "number": 19, "title": "Package installation fails on Windows 10 with Python 3.7.1", "user": {"login": "LaundroMat", "id": 42320, "node_id": "MDQ6VXNlcjQyMzIw", "avatar_url": "https://avatars1.githubusercontent.com/u/42320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaundroMat", "html_url": "https://github.com/LaundroMat", "followers_url": "https://api.github.com/users/LaundroMat/followers", "following_url": "https://api.github.com/users/LaundroMat/following{/other_user}", "gists_url": "https://api.github.com/users/LaundroMat/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaundroMat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaundroMat/subscriptions", "organizations_url": "https://api.github.com/users/LaundroMat/orgs", "repos_url": "https://api.github.com/users/LaundroMat/repos", "events_url": "https://api.github.com/users/LaundroMat/events{/privacy}", "received_events_url": "https://api.github.com/users/LaundroMat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-06-20T07:11:37Z", "updated_at": "2019-06-24T07:15:26Z", "closed_at": "2019-06-24T07:15:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to install orjson in a test virtualenv directory, but it seems PyPi does not contain any compatible versions. Here's the verbose log of my attempt to `pip install`. Is there a way I can solve this? \r\n\r\n```\r\nConfig variable 'Py_DEBUG' is unset, Python ABI tag may be incorrect\r\nConfig variable 'WITH_PYMALLOC' is unset, Python ABI tag may be incorrect\r\nCreated temporary directory: C:\\Users\\Mathieu\\AppData\\Local\\Temp\\pip-ephem-wheel-cache-3jw2g0g3\r\nCreated temporary directory: C:\\Users\\Mathieu\\AppData\\Local\\Temp\\pip-req-tracker-j6p_5dxe\r\nCreated requirements tracker 'C:\\\\Users\\\\Mathieu\\\\AppData\\\\Local\\\\Temp\\\\pip-req-tracker-j6p_5dxe'\r\nCreated temporary directory: C:\\Users\\Mathieu\\AppData\\Local\\Temp\\pip-install-4zgwnghy\r\nCollecting orjson\r\n  1 location(s) to search for versions of orjson:\r\n  * https://pypi.org/simple/orjson/\r\n  Getting page https://pypi.org/simple/orjson/\r\n  Looking up \"https://pypi.org/simple/orjson/\" in the cache\r\n  Request header has \"max_age\" as 0, cache bypassed\r\n  Starting new HTTPS connection (1): pypi.org:443\r\n  https://pypi.org:443 \"GET /simple/orjson/ HTTP/1.1\" 304 0\r\n  Analyzing links from page https://pypi.org/simple/orjson/\r\n    Skipping link https://files.pythonhosted.org/packages/cb/5d/084b8b7423302a0190cb56b7cab0ab733911087ef89a53673c3fa210c14b/orjson-1.0.0-cp37-cp37m-manylinux1_x86_64.whl#sha256=c5e7648c80cb8c506512bef80c346be62d8b96ae1094ac46591b151d95968201 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/2d/bb/3cd4bcdddd3b7bde2cd470fee2e63be905a7ddb6fd8184dbb6e3f269ae6f/orjson-1.0.1-cp37-cp37m-manylinux1_x86_64.whl#sha256=e53b120072abe2123dbf7f0d362ffb62ef649085a94f1c3d9f2ba066b47c566f (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/34/a6/5d5d50049d0da044175a0c62ecb9fa2dd21067ff2ca1132c77b483bb5ef2/orjson-1.1.0-cp35-cp35m-manylinux1_x86_64.whl#sha256=39e8e3849c547f5a5fe7f3ff07b037db1d5a8e6d565bd75c71d1221333755736 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/31/b9/21779d8b57e2cf4f7ec2402a0b22b77387eaad5dd0283323111f5c6e153e/orjson-1.1.0-cp36-cp36m-manylinux1_x86_64.whl#sha256=71fdf59963978472cce22a7aa9b793b1cc1f4844119ba67dfdbc159b8ded180d (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/2e/9e/fd9ed15a3d63fbd35eb4dc243227998fbe00dc0a3c87167b9265bf4a8e45/orjson-1.1.0-cp37-cp37m-manylinux1_x86_64.whl#sha256=32830217b74420dde167e200f5a8c5a3009358d8093b2f754a8b8d3a13cff6bd (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/71/6e/bd3164908d0386de17b2c3561b66ccd1d62905e913cd589a60236a6cc342/orjson-1.2.0-cp35-cp35m-manylinux1_x86_64.whl#sha256=fde03b16491f2aaa5af2c986a2daa320ec7635799bef5eea391ac9429938cf8a (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/83/81/ee02adc272facb3723d00343388ce62e2c9d9eefd0f0bc03d02941d44814/orjson-1.2.0-cp36-cp36m-manylinux1_x86_64.whl#sha256=e6e34b0938f53e4c49d3c4f5d2969e03ef046e80ad17d5b287b3cec13494e3be (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/bd/6f/c19c00d27f82a9037490bcb84442a7335763d3e0d9db15085173f963dbd5/orjson-1.2.0-cp37-cp37m-manylinux1_x86_64.whl#sha256=954861a4258c8334f3b960b2c7c74a3967eabe083cd54e9eb9c8b8cde6b7631f (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/08/b3/da3bc86be20efebdc63964da12f5fcaee1d387ace48f83b36e1666ff3892/orjson-1.2.1-cp35-cp35m-manylinux1_x86_64.whl#sha256=125a3d396cfe071c246ba3f71a19a50729a9945a2cbfccda7db507b58fba9f82 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/87/b9/c48e9da0067dd50dcfe1819d816d75529aac69d91d501d8edd77fc502303/orjson-1.2.1-cp36-cp36m-manylinux1_x86_64.whl#sha256=1498a05f6edb0f6512783510eb2f7f731f8d2524b2b6b2c17ebc24fbd4237788 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/c8/b8/0c02cd769d35921bec1588e6b7a3c030dc86effc4b54e141a3b96667cb17/orjson-1.2.1-cp37-cp37m-manylinux1_x86_64.whl#sha256=7a7dc4ae1e2c285c758f40f662f7a9bc6e4e04cd09665e94cdfd6a1f966be25c (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/93/f1/cb6e35c8c9398b10e3030e05d1af60cb95dd8daa7e497042e0a4a437f14c/orjson-1.3.0-cp35-cp35m-manylinux1_x86_64.whl#sha256=fb9ab85eb71d0ce846e9d90b48ffd1c55c114f555c6397b2f67939888f96675d (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/29/bd/e51fe8b3b595609d0b2bbb4f6df6fc741a5420045c147308c8c38f76a1dd/orjson-1.3.0-cp36-cp36m-manylinux1_x86_64.whl#sha256=2729ee9bc83caef19012c5c7fe79edba472a2e0671ada6b02f58da34e09f2f68 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/cb/bf/6b7af8a3df27a042aa98e7c81c98a2446c421f3a749747176eb787d5c68e/orjson-1.3.0-cp37-cp37m-manylinux1_x86_64.whl#sha256=f6316d8486b337e91350bb01d445ca31ce097ace71e4ba2b017d049e933d1c8e (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/ce/fd/f44e7dcd23f134db245ac261b112831670ceda7371658e41a3c76eb8bd3c/orjson-1.3.1-cp35-cp35m-manylinux1_x86_64.whl#sha256=0f1afc60c3e9d5aacc887481879d5f33660386e8a942fde810b7aa92bddd5a56 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/49/72/d9de4ec1af4c763f9270711b14bae7e68c7048f7210018eaeafd0b5d1c1e/orjson-1.3.1-cp36-cp36m-manylinux1_x86_64.whl#sha256=c881bed74b3d2b67d869b701535524caf08c19af63a5fe4c5e178713d33bcd8e (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/6d/a1/be070a0e0ef747503620f289109288a2d4b25a30fe98d0d213051106d53f/orjson-1.3.1-cp37-cp37m-manylinux1_x86_64.whl#sha256=32d7cf5e74ea847fb7002e4f8096f5e905d637ec1482778fe49e12b1955f3862 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/58/55/bb975fd7e607acab1c4c18d98a3c490b2ccd29c37ae5c7c8df71f2e7a43b/orjson-2.0.0-cp36-cp36m-macosx_10_7_x86_64.whl#sha256=0c2be5767221746a82d252c2d551a885799d84edc8248682202c130b80baac40 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/7e/fe/2b29c25c5ba0f3be1e457d1177fdd01d8ba24ebbe54af7daaf909414f848/orjson-2.0.0-cp36-cp36m-manylinux1_x86_64.whl#sha256=96e510843f95577a34cff420869c13a6164a34a9d55fc4841063a684f46cd742 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/91/3a/372555959fe583dce932881b9c69ca5332817cbf8ba54e227fb63586b497/orjson-2.0.0-cp37-cp37m-macosx_10_7_x86_64.whl#sha256=c1a326bedf8e296e31c820a0220c5f63f9b85d5c36871c79ba7b34ec4b5d00b0 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/21/50/9c1fc3cf407a6feb21c8d049012a03098ef6c7ee8d274b16a7c8e9f1ba68/orjson-2.0.0-cp37-cp37m-manylinux1_x86_64.whl#sha256=80623ec2edd1fd6184daff9d8d99aeb0787a203a25419875ac6f6b56950cf477 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/d7/42/6ecfec9c48584905e213147ab876b5918e46d892c6e639e2baf617e07b44/orjson-2.0.1-cp35-cp35m-macosx_10_7_x86_64.whl#sha256=4152a6ea29a8900c7feb94e18bffac764ff21b7b06a45c2699d9b5ac4cfb9781 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/f8/e6/030a0cf973691e3225dddbe536522e718999111c553c9e6b2b48fc968bde/orjson-2.0.1-cp35-cp35m-manylinux1_x86_64.whl#sha256=c813c65be50d5732d3562a698aa44edf577ee7b2352a6e61ab990a5a31adb23d (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/85/cd/4ffc3b23a2741b00af013db2bf9ea5a786934718bfcdcb165337f73237a3/orjson-2.0.1-cp35-none-win_amd64.whl#sha256=979eafe91aaaa016c482473f0922794d4d1daee8035a056b0fd939cf945e2c5a (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/c3/0f/3705d47bccefc6c28323e1f14f799657c7e9311a5d951f591ff17e0c26fe/orjson-2.0.1-cp36-cp36m-macosx_10_7_x86_64.whl#sha256=3795f59b5cc861de5c8031a8d13e2cd0dd940984f16b4f9a5128fb25b0947a57 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/85/3f/2193c4b1808bb56377f6c1226bbdd4c140442beffe7bec3806c27acfb9ff/orjson-2.0.1-cp36-cp36m-manylinux1_x86_64.whl#sha256=efd5db16b2425c1f95898d0218a37d598392361b4cff08529ba98bb426fef36f (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/68/d4/233a9d0def0e9e21dde7c1fa3320a69d353334e3f446de427e56ad11c305/orjson-2.0.1-cp36-none-win_amd64.whl#sha256=eeba26ff75fedb0ba2b5bc3f6ab6e3f5cb162e62fdcf47b2f3a37b4d0a29b3ad (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/24/a4/c438197128c38f8175752d5b391049241241909310a99094c2e0a4775242/orjson-2.0.1-cp37-cp37m-macosx_10_7_x86_64.whl#sha256=549ea724e664d7d9a901f6b2991db4126879ab97b6a01010ba6e1cc607ea59b0 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/e1/a6/65acf160d3d4ee4631f0e88aca36e44ec2e54fd07ee6f2f0fb09f2fcc92c/orjson-2.0.1-cp37-cp37m-manylinux1_x86_64.whl#sha256=13bcf0431e170766e7e5746738cf4d15cbe3429a6f23fc42a2178730c228222f (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/d8/6c/39099a92a85be70be60393b6771c4111f91ac0ec448b49b673368b61c338/orjson-2.0.1-cp37-none-win_amd64.whl#sha256=58ff040fe8cb1c491c95908bc7157c48d523e601a60b51d52ddf8dce1c3a9028 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/29/54/31a889a4f9b12abe2fb0c5ffb24704d4de30c3b460c578422a35ceebcf5a/orjson-2.0.2-cp35-cp35m-macosx_10_7_x86_64.whl#sha256=7daa7b02f6070ae1ad70e4e07feb5f8b7b9b1542c14e8452039aec47b091a618 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/33/ff/49fb257999a294f07deb95b8b0bf57113b17e1e80629053dcb02d44b4fa0/orjson-2.0.2-cp35-cp35m-manylinux1_x86_64.whl#sha256=40a8812fe3a70e1ff4cd8c8db355bee3c30bfc19df94400de113b31995ddcd74 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/ce/9b/f1df3d3ed1ea96a52348b4e62c342a66a416da801dd36f39962900710b9a/orjson-2.0.2-cp35-none-win_amd64.whl#sha256=ee8face7746d5f02af8680e380e8caeb8dd29a97406ff20c9add3e89f3a7bc0c (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/d7/7a/d39cfe2bc45d1ef82d4d7ef889b26b74c259b9d37aaa3fb94b506ce1adba/orjson-2.0.2-cp36-cp36m-macosx_10_7_x86_64.whl#sha256=61b4290e308a74036cd96ebb2acdc47c1387c423e82779ba8561af8aa2c445df (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/58/96/3c6691aea37c3843598a45a0eb2624f7cfd69466e58b6338e0ecaa7e1c72/orjson-2.0.2-cp36-cp36m-manylinux1_x86_64.whl#sha256=2bc06e0223567933eac8029bd1a8b3f0aebb1ae5ba29ddb5b77845fb8205ea35 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/54/24/c2b7ac8e244d74a7e05393618547ba10686b7cd422e0070c2ee50cc13363/orjson-2.0.2-cp36-none-win_amd64.whl#sha256=545c7288e625f407776cf1baa31c8ae9695d26ebb929ea36b52a8343712bbff2 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/4f/e7/84cfe2836fb647dcf4fc0e4a8349a28659a6551deb860c33ccd73adb0702/orjson-2.0.2-cp37-cp37m-macosx_10_7_x86_64.whl#sha256=6bf70eefb60dba803dbd9e0c86f7bba7bed02ef9aba70268ef2ff6122f2fd85d (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/2a/04/4acb84ab59329ce5eb476bf926a775c7e457919372418a1f6168a0e866f4/orjson-2.0.2-cp37-cp37m-manylinux1_x86_64.whl#sha256=803424f141238917fea15cb7556670941c998f0da0204d8753100f4962241d2c (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/f8/4d/1a2f390cae6b46cbe5b6367ed006a6aae4ca97fbfb1633a3775ce864c8fb/orjson-2.0.2-cp37-none-win_amd64.whl#sha256=7cdbe0abe073a3513671283cbf69b8bb6c45b3c069941a53d5667f950501ece2 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/0c/88/dea475d5dfcf30dbb5441cc71eb5d1bb23e85fa38f1dc4c61c0b52b13434/orjson-2.0.3-cp35-cp35m-macosx_10_7_x86_64.whl#sha256=bac3ee4ab2f46e41aa2db9143af4af5c1da3488fe3fcec851c2e95c9f7dfe32f (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/ce/38/fa6616a6a9835ab68de91cca5d0d4e8d94e7c5049582c9689dfcf1ef92d3/orjson-2.0.3-cp35-cp35m-manylinux1_x86_64.whl#sha256=d58b76e6fdb2a10a48de6a3ee6eea45978d2341986eb61c253a11c78bddbc7d2 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/1b/60/5c5db9f3bd39e5b6abc3639846965c8811dbe3683f97ce60b6814ba1c983/orjson-2.0.3-cp35-none-win_amd64.whl#sha256=16eda038ce45740983310e58376b2a2f38e3d9c8ece43237147dcd57c0ec8005 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/0d/ae/01189e8b41127250796f340a2401a87765aa484a517a8f98e05ba20c5ed6/orjson-2.0.3-cp36-cp36m-macosx_10_7_x86_64.whl#sha256=9883bb9bfca626939c26a962a23048d9689f495c604ffad5a4ad432e7f8c9203 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/8d/79/e35c910d8a2f829febeeeac13f130de97c05c66025022fcb47a208375524/orjson-2.0.3-cp36-cp36m-manylinux1_x86_64.whl#sha256=af0c35ad9e5459d06477e03361105876c993354dbd2a8079faeb814937a22be2 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/06/cc/b8a68e5ae5a9d9bb583fc9496eda1bf210715c3d73cde05501240be41033/orjson-2.0.3-cp36-none-win_amd64.whl#sha256=9a01e7d492b49d4f7a5c4706de525900ac0040540e4720d8ec1c7ecb05dc1490 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/e0/ef/7cee0078e049d66de34b1189212df2efb95f9810627cb2f30ac377ce386c/orjson-2.0.3-cp37-cp37m-macosx_10_7_x86_64.whl#sha256=48a3ef37b2f414ab730f7b398337933a32e6898844c77a3c5cf7877fbf300e71 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/a7/2f/96d598ae1af2fa9fa0bb8d96ce55e5b4439f191f0eb6ac629d572dc04d09/orjson-2.0.3-cp37-cp37m-manylinux1_x86_64.whl#sha256=16a0921832af3d12e7783aeae89d160e4dd96c5cbc6261c5352ac8c480eac389 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/58/dd/00fbc1cf79c1f44b692eca1a9a71ad8b76e6dd4ae7a6e96b036a62c84dc5/orjson-2.0.3-cp37-none-win_amd64.whl#sha256=fbaaf58cff14ea9c7e477970e26a73133e8ccba0fdb4fbe1bf0f422623e06d6c (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/a9/f7/904fd5063e809c3ce4099222ef3381eaa1b198465e88cdd81cd7b858a01a/orjson-2.0.4-cp35-cp35m-macosx_10_7_x86_64.whl#sha256=52377c5f9004ec4c4f2281b0a01aad9c9e93b27c12030212cfc7c0fcd4412e99 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/cd/f6/db508dc51b01a8f522fae737de394678350c843e70601f6ed889128ff3df/orjson-2.0.4-cp35-cp35m-manylinux1_x86_64.whl#sha256=e867f3e2561e51369f4e712d4737512386d2b1e2cab371e44cc4b0106cb2aa8e (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/ae/36/d409138ca560a5115741f5741f4b0e02108204f2390780b754d4848d3b03/orjson-2.0.4-cp35-none-win_amd64.whl#sha256=a26b72eb7b3708685ad30d3826782c2230363e8e1e93c84a9ad3b6f91b0add1d (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/4a/46/80ac6142532b6a52aeb9ef8b551b85e6f599d815c8a3cd380a0b4d3ad544/orjson-2.0.4-cp36-cp36m-macosx_10_7_x86_64.whl#sha256=9a8153e8517079baf454e0700d6a21f062eb6d926a72b9d466bf9b8e1e624e7b (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/c6/a2/eded31dddbbc246fb0b62a2fa9d2bf463edcf39add8eeae8647995ba611e/orjson-2.0.4-cp36-cp36m-manylinux1_x86_64.whl#sha256=550589b9adbbb9f245b73ea710e2644ccbc7f62093b9b3d34359690f63ed2bf3 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/73/69/09b78359afc1b9e2a6fa8181f636ce30356f5c550610694d5f4f61f7fa6f/orjson-2.0.4-cp36-none-win_amd64.whl#sha256=e5bbeb2e7f02eabc01e5eefd6ccef1aabb3d126ac583d226a6797251c56b5732 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/e1/16/97fee5c2ec3548f9f690c9888e6102b00440b28980eddf2da82ced16fb76/orjson-2.0.4-cp37-cp37m-macosx_10_7_x86_64.whl#sha256=8e6018dfdddde520cf3cc67aa40b7157254c76be165fc96ce75dc20e0a4f1e56 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/a5/07/40cc05d69ce3b32473c27829bd8f263522ba16d4aaaf565deb8805983721/orjson-2.0.4-cp37-cp37m-manylinux1_x86_64.whl#sha256=a69f45887cef5e07d8797d6797501b573e6558f1322b0edae638006f2d32fad3 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/de/6c/5a7543e641a00c9d81778f8eb7e4b9c3746cc9147ccddb843e4a94bad6f0/orjson-2.0.4-cp37-none-win_amd64.whl#sha256=1a58ebada3eefdf58cfc6d37732a9cf579a7033e8708131ba73fed7c08e9f804 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/2d/e3/256afcbe776e796249559de102357cfde2c336313b9c3c8cba5b300a7718/orjson-2.0.5-cp35-cp35m-macosx_10_7_x86_64.whl#sha256=bf7312b5ff68463fb1bc98ba5e046e4e39e864bfa177333d30c7f477b04aa355 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/69/89/dc453b41af1d8b4eb8de97db7a6ce032cbf0728ba9083420a3692fafedb3/orjson-2.0.5-cp35-cp35m-manylinux1_x86_64.whl#sha256=4b7f0c61063e1ff4b1048a5b7017762884a14fa1ba4ae3e763b3ddc5d8f1b783 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/72/72/e082c64509f4162f7be340a364b21bd4876355c2a12b95040de2d84eca6c/orjson-2.0.5-cp35-none-win_amd64.whl#sha256=94e55814252d20e274d6498d82bfa4886258425320ca65a105898c34bd372b87 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/1d/27/0ec151b2bc3a7874ea7ad4d1c3f40c17917544390334948dcd8b015c4d7a/orjson-2.0.5-cp36-cp36m-macosx_10_7_x86_64.whl#sha256=82b77b5167e03e8e35acb10b04bfa46d20ac312ae79418f79c032a4c0d3a92bf (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/f7/a2/155ac36e773da9cda3b11712367248fd7db463dfa6e78a42bfb4a49a089d/orjson-2.0.5-cp36-cp36m-manylinux1_x86_64.whl#sha256=12105e34cf7937d4dd3d2334854c3b208755922c692b7cbf527aeb4f66e0617d (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/7b/19/65d1ebd511d35e634c16baec8573ccfe3335a7ca7cb73160dba0d9c096a4/orjson-2.0.5-cp36-none-win_amd64.whl#sha256=2fde9d6bdcaac47e9b03562a056a93ee2b7a39f1942beee8d275db4f629c8a4d (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/b8/a4/f5d1bc99c3247420247ec1fd1451051991507f8adc62acab47c691dc1f0a/orjson-2.0.5-cp37-cp37m-macosx_10_7_x86_64.whl#sha256=44600616801d14a5b538116a7a6b011e7046e0f800d2558f662436e8cae2b59f (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/48/36/a0bc5b1435eaa746a3ec871e31c0da5ec007bda3b30f3f4b6a9cf013bb4f/orjson-2.0.5-cp37-cp37m-manylinux1_x86_64.whl#sha256=b5ba0cb77dcdc0f13a25064d6ad8770cfb649a170aa52aac5ec65a49e8507a51 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/b9/a0/4a6051f2d2140797b9c2b2161dbb6b53fbb73c6b8c2d5675a57c1426020b/orjson-2.0.5-cp37-none-win_amd64.whl#sha256=6b2ebfb670c6fb9a32d54444cf104e92f95a4e0d8b42e4774bd391b0f790af2c (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/5b/c7/5434139a1c5ccd07d30383e99ced31eedd7a128f3401ccbcdd98d8551a86/orjson-2.0.6-cp35-cp35m-macosx_10_7_x86_64.whl#sha256=ca28f614f28a4a975caee3423596ff55945beb195768d0a67d45197c13117a58 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/73/9d/b8034b77a2e03c41cd64558ec0fe3c13b382291f548d14298c3a291cd2a0/orjson-2.0.6-cp35-cp35m-manylinux1_x86_64.whl#sha256=0a0a67ac3654739e3bc43911af6c80a6277545dba553909ad5f91311ed06616a (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/d6/06/a0e65cca59ec896ac247670820e7231a27121c86d4b903b5956d49a54115/orjson-2.0.6-cp35-none-win_amd64.whl#sha256=ebdc9200ed50b9d6461a9ac3bfeebd15f1ae54b933edaaa052eaccebdec0808b (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/57/86/b00f2bb821485504531cc1d690dc243db6a16eb764f91dbfc9984cf7684a/orjson-2.0.6-cp36-cp36m-macosx_10_7_x86_64.whl#sha256=487cf61b73195b0021aba09f4417cf8a6bcf0a4e42d2add26b75fe2773865bdd (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/3c/eb/e3b9817d2d7b789c4a50cec0976d3c808b7ad317cd575f63d813a0956cae/orjson-2.0.6-cp36-cp36m-manylinux1_x86_64.whl#sha256=3cc1e45fbd0394344e03a6e89f7194f56a57ff168a785efc55e56c3dca925e2c (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/01/ab/ae0bc69ddccbe266ee43a217e19d223706aeb32373b02f1b69f05e022dc1/orjson-2.0.6-cp36-none-win_amd64.whl#sha256=c99daef8b120777ea41d214ef039dcfa08883b31da3d5d74f31371db180efe02 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/e6/27/b66d7af716295cee42cf7f7291795fc3356eb600ef158ebed8e7cda3cbb7/orjson-2.0.6-cp37-cp37m-macosx_10_7_x86_64.whl#sha256=33c89b3884b57b3942eacca801e029dbf4086a9ebde55627abf9831bed73d58c (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/f5/ce/3fd8eb14f939a3f6f41b4b39906e0bcd3dcb1d964d561426e182350bc5d2/orjson-2.0.6-cp37-cp37m-manylinux1_x86_64.whl#sha256=2dc0c8f5946e9a278b1cbb62404ee9a0167afd51e46566694070188485375823 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\n    Skipping link https://files.pythonhosted.org/packages/19/b2/07a3ce482e38b9a050c76a6b4ebe3600d806eb1e6173c949ef6f6d97e52c/orjson-2.0.6-cp37-none-win_amd64.whl#sha256=b7def20627d33aafaa54588d54d3bf58d4c5a91c4e935e3bc7c2128a22bfd2d8 (from https://pypi.org/simple/orjson/); it is not compatible with this Python\r\nCleaning up...\r\nRemoved build tracker 'C:\\\\Users\\\\Mathieu\\\\AppData\\\\Local\\\\Temp\\\\pip-req-tracker-j6p_5dxe'\r\nException information:\r\nTraceback (most recent call last):\r\n  File \"e:\\development\\flask_projects\\test\\lib\\site-packages\\pip\\_internal\\cli\\base_command.py\", line 178, in main\r\n    status = self.run(options, args)\r\n  File \"e:\\development\\flask_projects\\test\\lib\\site-packages\\pip\\_internal\\commands\\install.py\", line 352, in run\r\n    resolver.resolve(requirement_set)\r\n  File \"e:\\development\\flask_projects\\test\\lib\\site-packages\\pip\\_internal\\resolve.py\", line 131, in resolve\r\n    self._resolve_one(requirement_set, req)\r\n  File \"e:\\development\\flask_projects\\test\\lib\\site-packages\\pip\\_internal\\resolve.py\", line 294, in _resolve_one\r\n    abstract_dist = self._get_abstract_dist_for(req_to_install)\r\n  File \"e:\\development\\flask_projects\\test\\lib\\site-packages\\pip\\_internal\\resolve.py\", line 242, in _get_abstract_dist_for\r\n    self.require_hashes\r\n  File \"e:\\development\\flask_projects\\test\\lib\\site-packages\\pip\\_internal\\operations\\prepare.py\", line 282, in prepare_linked_requirement\r\n    req.populate_link(finder, upgrade_allowed, require_hashes)\r\n  File \"e:\\development\\flask_projects\\test\\lib\\site-packages\\pip\\_internal\\req\\req_install.py\", line 198, in populate_link\r\n    self.link = finder.find_requirement(self, upgrade)\r\n  File \"e:\\development\\flask_projects\\test\\lib\\site-packages\\pip\\_internal\\index.py\", line 792, in find_requirement\r\n    'No matching distribution found for %s' % req\r\npip._internal.exceptions.DistributionNotFound: No matching distribution found for orjson\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/18", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/18/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/18/events", "html_url": "https://github.com/ijl/orjson/issues/18", "id": 457515068, "node_id": "MDU6SXNzdWU0NTc1MTUwNjg=", "number": 18, "title": "Publish python3.8 wheels", "user": {"login": "ijl", "id": 1977222, "node_id": "MDQ6VXNlcjE5NzcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1977222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijl", "html_url": "https://github.com/ijl", "followers_url": "https://api.github.com/users/ijl/followers", "following_url": "https://api.github.com/users/ijl/following{/other_user}", "gists_url": "https://api.github.com/users/ijl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijl/subscriptions", "organizations_url": "https://api.github.com/users/ijl/orgs", "repos_url": "https://api.github.com/users/ijl/repos", "events_url": "https://api.github.com/users/ijl/events{/privacy}", "received_events_url": "https://api.github.com/users/ijl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-18T14:26:31Z", "updated_at": "2019-11-12T16:54:02Z", "closed_at": "2019-11-12T14:43:45Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Depends on https://github.com/microsoft/azure-pipelines-image-generation/issues/905.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/17", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/17/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/17/events", "html_url": "https://github.com/ijl/orjson/issues/17", "id": 439820254, "node_id": "MDU6SXNzdWU0Mzk4MjAyNTQ=", "number": 17, "title": "Support python enum in dumps", "user": {"login": "renanvieira", "id": 2496686, "node_id": "MDQ6VXNlcjI0OTY2ODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2496686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renanvieira", "html_url": "https://github.com/renanvieira", "followers_url": "https://api.github.com/users/renanvieira/followers", "following_url": "https://api.github.com/users/renanvieira/following{/other_user}", "gists_url": "https://api.github.com/users/renanvieira/gists{/gist_id}", "starred_url": "https://api.github.com/users/renanvieira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renanvieira/subscriptions", "organizations_url": "https://api.github.com/users/renanvieira/orgs", "repos_url": "https://api.github.com/users/renanvieira/repos", "events_url": "https://api.github.com/users/renanvieira/events{/privacy}", "received_events_url": "https://api.github.com/users/renanvieira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-02T22:46:22Z", "updated_at": "2019-05-03T19:52:12Z", "closed_at": "2019-05-03T19:52:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following dict to serialize: \r\n```python\r\n{ 'localDate': '02/02/2002', 'merchant': '1234', 'id': '54243', 'status': <StatusEnum.ok: 'OK'>, 'trace': 243242}\r\n```\r\nStatusEnum: \r\n```python\r\nclass StatusEnum(str, Enum):\r\n     ok = \"OK\"\r\n     canceled = \"C\"\r\n     deleted = \"DEL\"\r\n```\r\n\r\nThis `dict` works with both `json` and `ujson`, serializing to the string value, but with `orjson` I get the following error:\r\n```\r\norjson.JSONEncodeError: Type is not JSON serializable: StatusEnum\r\n```\r\n\r\nI wish to know enough Rust to contribute with this, but it's possible to ujson receive the enum and get the value to the output json string? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/15", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/15/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/15/events", "html_url": "https://github.com/ijl/orjson/issues/15", "id": 429259234, "node_id": "MDU6SXNzdWU0MjkyNTkyMzQ=", "number": 15, "title": "Support serialization of NamedTuples by default", "user": {"login": "avanov", "id": 601955, "node_id": "MDQ6VXNlcjYwMTk1NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/601955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avanov", "html_url": "https://github.com/avanov", "followers_url": "https://api.github.com/users/avanov/followers", "following_url": "https://api.github.com/users/avanov/following{/other_user}", "gists_url": "https://api.github.com/users/avanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/avanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avanov/subscriptions", "organizations_url": "https://api.github.com/users/avanov/orgs", "repos_url": "https://api.github.com/users/avanov/repos", "events_url": "https://api.github.com/users/avanov/events{/privacy}", "received_events_url": "https://api.github.com/users/avanov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-04T12:47:21Z", "updated_at": "2019-09-26T14:57:16Z", "closed_at": "2019-09-26T14:57:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! It would be cool to have it implemented. So far` simplejson` seems to be the only one that does it right (stdlib's `json` serializes named tuples as list values, which is hardly a desired default behaviour):\r\n\r\n```python\r\n>>> from simplejson import dumps\r\n>>> from typing import NamedTuple\r\n>>> class X(NamedTuple):\r\n...     x: int\r\n... \r\n>>> dumps(X(1))\r\n'{\"x\": 1}'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/14", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/14/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/14/events", "html_url": "https://github.com/ijl/orjson/issues/14", "id": 425210451, "node_id": "MDU6SXNzdWU0MjUyMTA0NTE=", "number": 14, "title": "datetime support break default function", "user": {"login": "phyng", "id": 5717770, "node_id": "MDQ6VXNlcjU3MTc3NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5717770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phyng", "html_url": "https://github.com/phyng", "followers_url": "https://api.github.com/users/phyng/followers", "following_url": "https://api.github.com/users/phyng/following{/other_user}", "gists_url": "https://api.github.com/users/phyng/gists{/gist_id}", "starred_url": "https://api.github.com/users/phyng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phyng/subscriptions", "organizations_url": "https://api.github.com/users/phyng/orgs", "repos_url": "https://api.github.com/users/phyng/repos", "events_url": "https://api.github.com/users/phyng/events{/privacy}", "received_events_url": "https://api.github.com/users/phyng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-26T03:32:34Z", "updated_at": "2019-04-03T11:53:46Z", "closed_at": "2019-04-03T11:53:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before version 2.0.2 we use `DjangoJSONEncoder.default` to handle datatime, but it doesn't works now, and  the orjson datetime is not compatible with the logic below:\r\n\r\nhttps://github.com/django/django/blob/master/django/core/serializers/json.py#L81\r\n\r\n```python\r\ndef default(self, o):\r\n    # See \"Date Time String Format\" in the ECMA-262 specification.\r\n    if isinstance(o, datetime.datetime):\r\n        r = o.isoformat()\r\n        if o.microsecond:\r\n            r = r[:23] + r[26:]\r\n        if r.endswith('+00:00'):\r\n            r = r[:-6] + 'Z'\r\n        return r\r\n    elif isinstance(o, datetime.date):\r\n        return o.isoformat()\r\n    elif isinstance(o, datetime.time):\r\n        if is_aware(o):\r\n            raise ValueError(\"JSON can't represent timezone-aware times.\")\r\n        r = o.isoformat()\r\n        if o.microsecond:\r\n            r = r[:12]\r\n        return r\r\n    elif isinstance(o, datetime.timedelta):\r\n        return duration_iso_string(o)\r\n    elif isinstance(o, (decimal.Decimal, uuid.UUID, Promise)):\r\n        return str(o)\r\n    else:\r\n        return super().default(o)\r\n```\r\n\r\nIs there a way to make default works with datetime object?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/13", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/13/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/13/events", "html_url": "https://github.com/ijl/orjson/issues/13", "id": 416264990, "node_id": "MDU6SXNzdWU0MTYyNjQ5OTA=", "number": 13, "title": "Deserialization Performance", "user": {"login": "frnkvieira", "id": 6970476, "node_id": "MDQ6VXNlcjY5NzA0NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6970476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frnkvieira", "html_url": "https://github.com/frnkvieira", "followers_url": "https://api.github.com/users/frnkvieira/followers", "following_url": "https://api.github.com/users/frnkvieira/following{/other_user}", "gists_url": "https://api.github.com/users/frnkvieira/gists{/gist_id}", "starred_url": "https://api.github.com/users/frnkvieira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frnkvieira/subscriptions", "organizations_url": "https://api.github.com/users/frnkvieira/orgs", "repos_url": "https://api.github.com/users/frnkvieira/repos", "events_url": "https://api.github.com/users/frnkvieira/events{/privacy}", "received_events_url": "https://api.github.com/users/frnkvieira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-01T20:22:35Z", "updated_at": "2019-03-05T08:03:23Z", "closed_at": "2019-03-05T08:03:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any chance to improve deserialization performance and beat **ujson** on cases like bellow ?\r\n\r\n```py\r\nimport ujson\r\nimport orjson\r\nimport time\r\n\r\n# A naive benchmark but it shows what I mean :P\r\ndata = '{\"a\": 1, \"b\": 2, \"c\": 3, \"d\": 4, \"e\": 5, \"f\": \"useless-bench\"}'\r\nu = ujson.loads\r\no = orjson.loads\r\n\r\nt2 = time.time()\r\nfor _ in range(0, 1_000_000):\r\n    o(data)\r\nprint(time.time() - t2)\r\n# 0.634258508682251\r\n\r\nt1 = time.time()\r\nfor _ in range(0, 1_000_000):\r\n    u(data)\r\nprint(time.time() - t1)\r\n# 0.5261068344116211\r\n```\r\nI mean, this library is slightly slower in deserialization thanks to a \"correct\" approach or it's just not optimized enough for this use case ?\r\n\r\nPersonal Note: thanks for the published wheels :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/12", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/12/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/12/events", "html_url": "https://github.com/ijl/orjson/issues/12", "id": 411752857, "node_id": "MDU6SXNzdWU0MTE3NTI4NTc=", "number": 12, "title": "Floating point number precision problem", "user": {"login": "phyng", "id": 5717770, "node_id": "MDQ6VXNlcjU3MTc3NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5717770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phyng", "html_url": "https://github.com/phyng", "followers_url": "https://api.github.com/users/phyng/followers", "following_url": "https://api.github.com/users/phyng/following{/other_user}", "gists_url": "https://api.github.com/users/phyng/gists{/gist_id}", "starred_url": "https://api.github.com/users/phyng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phyng/subscriptions", "organizations_url": "https://api.github.com/users/phyng/orgs", "repos_url": "https://api.github.com/users/phyng/repos", "events_url": "https://api.github.com/users/phyng/events{/privacy}", "received_events_url": "https://api.github.com/users/phyng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-19T05:33:29Z", "updated_at": "2019-04-19T13:49:26Z", "closed_at": "2019-04-19T13:49:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "OS: Ubuntu 16.04\r\norjson Version: 2.0.1\r\n\r\n```python\r\nIn [8]: data = {'lat': 31.245270191439438, 'lng': 121.48791951161945}\r\n\r\nIn [9]: orjson.loads(orjson.dumps(data))\r\nOut[9]: {'lat': 31.24527019143944, 'lng': 121.48791951161944}\r\n\r\nIn [10]: json.loads(orjson.dumps(data))\r\nOut[10]: {'lat': 31.245270191439438, 'lng': 121.48791951161945}\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/11", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/11/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/11/events", "html_url": "https://github.com/ijl/orjson/issues/11", "id": 406039502, "node_id": "MDU6SXNzdWU0MDYwMzk1MDI=", "number": 11, "title": "Deserialize UUID from str", "user": {"login": "thinkwelltwd", "id": 7585413, "node_id": "MDQ6VXNlcjc1ODU0MTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7585413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thinkwelltwd", "html_url": "https://github.com/thinkwelltwd", "followers_url": "https://api.github.com/users/thinkwelltwd/followers", "following_url": "https://api.github.com/users/thinkwelltwd/following{/other_user}", "gists_url": "https://api.github.com/users/thinkwelltwd/gists{/gist_id}", "starred_url": "https://api.github.com/users/thinkwelltwd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thinkwelltwd/subscriptions", "organizations_url": "https://api.github.com/users/thinkwelltwd/orgs", "repos_url": "https://api.github.com/users/thinkwelltwd/repos", "events_url": "https://api.github.com/users/thinkwelltwd/events{/privacy}", "received_events_url": "https://api.github.com/users/thinkwelltwd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-03T00:53:16Z", "updated_at": "2019-03-05T08:24:40Z", "closed_at": "2019-03-05T08:24:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! orjson is an interesting library! Congratulations on the speed. I would switch to it, but for UUID support. Is there any plan for supporting UUIDs like rapidjson, etc?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/9", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/9/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/9/events", "html_url": "https://github.com/ijl/orjson/issues/9", "id": 402717586, "node_id": "MDU6SXNzdWU0MDI3MTc1ODY=", "number": 9, "title": "Publish Windows bdist", "user": {"login": "frnkvieira", "id": 6970476, "node_id": "MDQ6VXNlcjY5NzA0NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6970476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frnkvieira", "html_url": "https://github.com/frnkvieira", "followers_url": "https://api.github.com/users/frnkvieira/followers", "following_url": "https://api.github.com/users/frnkvieira/following{/other_user}", "gists_url": "https://api.github.com/users/frnkvieira/gists{/gist_id}", "starred_url": "https://api.github.com/users/frnkvieira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frnkvieira/subscriptions", "organizations_url": "https://api.github.com/users/frnkvieira/orgs", "repos_url": "https://api.github.com/users/frnkvieira/repos", "events_url": "https://api.github.com/users/frnkvieira/events{/privacy}", "received_events_url": "https://api.github.com/users/frnkvieira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-24T13:54:12Z", "updated_at": "2019-02-05T15:22:41Z", "closed_at": "2019-02-05T15:22:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello :)\r\nI'm quite interested to use this project on Vibora (https://github.com/vibora-io/vibora).\r\nDo you have any plans to publish wheels to MacOS/Windows ? Maybe I can help with something ?\r\nThanks for the great work!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/8", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/8/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/8/events", "html_url": "https://github.com/ijl/orjson/issues/8", "id": 402689260, "node_id": "MDU6SXNzdWU0MDI2ODkyNjA=", "number": 8, "title": "Publish PEP 517 sdist", "user": {"login": "ijl", "id": 1977222, "node_id": "MDQ6VXNlcjE5NzcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1977222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijl", "html_url": "https://github.com/ijl", "followers_url": "https://api.github.com/users/ijl/followers", "following_url": "https://api.github.com/users/ijl/following{/other_user}", "gists_url": "https://api.github.com/users/ijl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijl/subscriptions", "organizations_url": "https://api.github.com/users/ijl/orgs", "repos_url": "https://api.github.com/users/ijl/repos", "events_url": "https://api.github.com/users/ijl/events{/privacy}", "received_events_url": "https://api.github.com/users/ijl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2019-01-24T12:41:23Z", "updated_at": "2020-06-10T10:42:45Z", "closed_at": "2019-08-29T15:19:05Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Needs https://github.com/PyO3/pyo3-pack/issues/2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/7", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/7/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/7/events", "html_url": "https://github.com/ijl/orjson/issues/7", "id": 402570955, "node_id": "MDU6SXNzdWU0MDI1NzA5NTU=", "number": 7, "title": "Publish wheel bdist for MacOS", "user": {"login": "yunstanford", "id": 13110231, "node_id": "MDQ6VXNlcjEzMTEwMjMx", "avatar_url": "https://avatars0.githubusercontent.com/u/13110231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yunstanford", "html_url": "https://github.com/yunstanford", "followers_url": "https://api.github.com/users/yunstanford/followers", "following_url": "https://api.github.com/users/yunstanford/following{/other_user}", "gists_url": "https://api.github.com/users/yunstanford/gists{/gist_id}", "starred_url": "https://api.github.com/users/yunstanford/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yunstanford/subscriptions", "organizations_url": "https://api.github.com/users/yunstanford/orgs", "repos_url": "https://api.github.com/users/yunstanford/repos", "events_url": "https://api.github.com/users/yunstanford/events{/privacy}", "received_events_url": "https://api.github.com/users/yunstanford/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-24T07:10:02Z", "updated_at": "2019-01-28T14:51:06Z", "closed_at": "2019-01-28T14:51:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/5", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/5/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/5/events", "html_url": "https://github.com/ijl/orjson/issues/5", "id": 398792869, "node_id": "MDU6SXNzdWUzOTg3OTI4Njk=", "number": 5, "title": "Publish a new version with `default` support?", "user": {"login": "phyng", "id": 5717770, "node_id": "MDQ6VXNlcjU3MTc3NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5717770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phyng", "html_url": "https://github.com/phyng", "followers_url": "https://api.github.com/users/phyng/followers", "following_url": "https://api.github.com/users/phyng/following{/other_user}", "gists_url": "https://api.github.com/users/phyng/gists{/gist_id}", "starred_url": "https://api.github.com/users/phyng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phyng/subscriptions", "organizations_url": "https://api.github.com/users/phyng/orgs", "repos_url": "https://api.github.com/users/phyng/repos", "events_url": "https://api.github.com/users/phyng/events{/privacy}", "received_events_url": "https://api.github.com/users/phyng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-14T08:47:39Z", "updated_at": "2019-01-28T14:51:03Z", "closed_at": "2019-01-14T15:35:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I build and test the code from master(https://github.com/ijl/orjson/commit/15757e064586d5c6cf60528cea6ada13bf302b15) on macOS, It works fine, but I want to deploy it to Ubuntu server.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/4", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/4/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/4/events", "html_url": "https://github.com/ijl/orjson/issues/4", "id": 394593367, "node_id": "MDU6SXNzdWUzOTQ1OTMzNjc=", "number": 4, "title": "Memory leak ?", "user": {"login": "NotSqrt", "id": 1997005, "node_id": "MDQ6VXNlcjE5OTcwMDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1997005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NotSqrt", "html_url": "https://github.com/NotSqrt", "followers_url": "https://api.github.com/users/NotSqrt/followers", "following_url": "https://api.github.com/users/NotSqrt/following{/other_user}", "gists_url": "https://api.github.com/users/NotSqrt/gists{/gist_id}", "starred_url": "https://api.github.com/users/NotSqrt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NotSqrt/subscriptions", "organizations_url": "https://api.github.com/users/NotSqrt/orgs", "repos_url": "https://api.github.com/users/NotSqrt/repos", "events_url": "https://api.github.com/users/NotSqrt/events{/privacy}", "received_events_url": "https://api.github.com/users/NotSqrt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-28T09:38:32Z", "updated_at": "2018-12-31T17:38:51Z", "closed_at": "2018-12-31T17:38:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello !\r\n\r\nI've just tested on data that look like this :\r\n\r\n```python\r\ndumped = '{\"12999\":-634,\"13000\":-84,\"13001\":-789,\"13002\":164,\"13003\":671,\"13004\":4262,\"13005\":4376,\"13006\":481,\"13007\":5469,\"13008\":613,\"13009\":4736,\"13010\":4218,\"13011\":517,\"13012\":5473,\"13013\":5404,\"13014\":4157,\"13015\":3919,\"13016\":-497,\"13017\":580,\"13018\":3298,\"13019\":-1018,\"13020\":-838,\"13021\":2900,\"13022\":2862,\"13023\":828,\"13024\":3526,\"13025\":3349,\"13026\":1051,\"13027\":1463,\"13028\":1978,\"13029\":1316,\"13030\":4445,\"13031\":4316,\"13032\":34,\"13033\":1861,\"13034\":5046,\"13035\":1370,\"13036\":798,\"13037\":-679,\"13038\":3700,\"13039\":1878,\"13040\":5263,\"13041\":5396,\"13042\":4714,\"13043\":2642,\"13044\":5224,\"13045\":416,\"13046\":4643,\"13047\":4461,\"13048\":5611,\"13049\":2421,\"13050\":-68,\"13051\":2717,\"13052\":2826,\"13053\":3578,\"13054\":-707,\"13055\":4012,\"13056\":319,\"13057\":703,\"13058\":-1691,\"13059\":-927,\"13060\":5496,\"13061\":4991,\"13062\":-1246,\"13063\":320,\"13064\":2282,\"13065\":5002,\"13066\":1944,\"13067\":3033,\"13068\":-284,\"13069\":217,\"13070\":2993,\"13071\":2696,\"13072\":401,\"13073\":2467,\"13074\":2410,\"13075\":-679,\"13076\":210,\"13077\":3479,\"13078\":-1001,\"13079\":-745,\"13080\":90,\"13081\":-1087,\"13082\":2623,\"13083\":5934,\"13084\":-1202,\"13085\":4531,\"13086\":3787,\"13087\":-361,\"13088\":1814,\"13089\":584,\"13090\":-443,\"13091\":4458,\"13092\":3784,\"13093\":-380,\"13094\":2258,\"13095\":1905,\"13096\":1605,\"13097\":41,\"13098\":5859}'\r\n%timeit orjson.loads(dumped)\r\n```\r\n\r\nBut I see that memory usage increases a lot for the python process, and does not go down.\r\n\r\nThanks !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/3", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/3/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/3/events", "html_url": "https://github.com/ijl/orjson/issues/3", "id": 393241788, "node_id": "MDU6SXNzdWUzOTMyNDE3ODg=", "number": 3, "title": "Join forces with hyperjson?", "user": {"login": "mre", "id": 175809, "node_id": "MDQ6VXNlcjE3NTgwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/175809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mre", "html_url": "https://github.com/mre", "followers_url": "https://api.github.com/users/mre/followers", "following_url": "https://api.github.com/users/mre/following{/other_user}", "gists_url": "https://api.github.com/users/mre/gists{/gist_id}", "starred_url": "https://api.github.com/users/mre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mre/subscriptions", "organizations_url": "https://api.github.com/users/mre/orgs", "repos_url": "https://api.github.com/users/mre/repos", "events_url": "https://api.github.com/users/mre/events{/privacy}", "received_events_url": "https://api.github.com/users/mre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-20T22:56:33Z", "updated_at": "2018-12-21T01:42:39Z", "closed_at": "2018-12-21T01:42:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\njust found your repo. I'm the author of hyperjson, the other pyo3-based Python module for JSON. I was wondering whether we could join forces and merge both project. From my perspective, this would be beneficial for improving the compatibility with Python's JSON module. Also, we wouldn't have to do the performance work in two places.\nWe could merge both codebases in one central place.\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/2", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/2/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/2/events", "html_url": "https://github.com/ijl/orjson/issues/2", "id": 392981965, "node_id": "MDU6SXNzdWUzOTI5ODE5NjU=", "number": 2, "title": "ImportError on CentOS 7", "user": {"login": "davidgaleano", "id": 46936, "node_id": "MDQ6VXNlcjQ2OTM2", "avatar_url": "https://avatars0.githubusercontent.com/u/46936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidgaleano", "html_url": "https://github.com/davidgaleano", "followers_url": "https://api.github.com/users/davidgaleano/followers", "following_url": "https://api.github.com/users/davidgaleano/following{/other_user}", "gists_url": "https://api.github.com/users/davidgaleano/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidgaleano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidgaleano/subscriptions", "organizations_url": "https://api.github.com/users/davidgaleano/orgs", "repos_url": "https://api.github.com/users/davidgaleano/repos", "events_url": "https://api.github.com/users/davidgaleano/events{/privacy}", "received_events_url": "https://api.github.com/users/davidgaleano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-12-20T10:29:16Z", "updated_at": "2020-02-20T15:54:55Z", "closed_at": "2019-05-02T14:07:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installed with:\r\n\r\n    pip3 install --user --upgrade orjson\r\n\r\nFails on import:\r\n\r\n    import orjson\r\n    ImportError: /lib64/libc.so.6: version `GLIBC_2.18' not found (required by /home/davidgaleano/.local/lib/python3.6/site-packages/orjson.cpython-36m-x86_64-linux-gnu.so)\r\n\r\nThe python version is 3.6.3, and the CentOS version is 7.4.1708.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ijl/orjson/issues/1", "repository_url": "https://api.github.com/repos/ijl/orjson", "labels_url": "https://api.github.com/repos/ijl/orjson/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/ijl/orjson/issues/1/comments", "events_url": "https://api.github.com/repos/ijl/orjson/issues/1/events", "html_url": "https://github.com/ijl/orjson/issues/1", "id": 384112822, "node_id": "MDU6SXNzdWUzODQxMTI4MjI=", "number": 1, "title": "Subtypes of serializable types are not serializable", "user": {"login": "konstin", "id": 6826232, "node_id": "MDQ6VXNlcjY4MjYyMzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6826232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konstin", "html_url": "https://github.com/konstin", "followers_url": "https://api.github.com/users/konstin/followers", "following_url": "https://api.github.com/users/konstin/following{/other_user}", "gists_url": "https://api.github.com/users/konstin/gists{/gist_id}", "starred_url": "https://api.github.com/users/konstin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konstin/subscriptions", "organizations_url": "https://api.github.com/users/konstin/orgs", "repos_url": "https://api.github.com/users/konstin/repos", "events_url": "https://api.github.com/users/konstin/events{/privacy}", "received_events_url": "https://api.github.com/users/konstin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-25T20:01:02Z", "updated_at": "2018-11-26T18:36:38Z", "closed_at": "2018-11-26T18:36:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\nimport json\r\nimport orjson\r\n\r\nclass MyDict(dict):\r\n    pass\r\n\r\nmy_dict = MyDict({\"id\": 1})\r\njson.dumps(my_dict) # works\r\norjson.dumps(my_dict) # fails\r\n```\r\n\r\nError:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: Type is not JSON serializable: MyDict\r\n```", "performed_via_github_app": null, "score": 1.0}]}