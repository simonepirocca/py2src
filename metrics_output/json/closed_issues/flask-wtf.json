{"total_count": 242, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/lepture/flask-wtf/issues/417", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/417/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/417/events", "html_url": "https://github.com/lepture/flask-wtf/issues/417", "id": 667859006, "node_id": "MDU6SXNzdWU2Njc4NTkwMDY=", "number": 417, "title": "validate_on_submit() expects a tuple list for SelectField even though a normal list is a valid argument", "user": {"login": "hakanohi", "id": 51394064, "node_id": "MDQ6VXNlcjUxMzk0MDY0", "avatar_url": "https://avatars3.githubusercontent.com/u/51394064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hakanohi", "html_url": "https://github.com/hakanohi", "followers_url": "https://api.github.com/users/hakanohi/followers", "following_url": "https://api.github.com/users/hakanohi/following{/other_user}", "gists_url": "https://api.github.com/users/hakanohi/gists{/gist_id}", "starred_url": "https://api.github.com/users/hakanohi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hakanohi/subscriptions", "organizations_url": "https://api.github.com/users/hakanohi/orgs", "repos_url": "https://api.github.com/users/hakanohi/repos", "events_url": "https://api.github.com/users/hakanohi/events{/privacy}", "received_events_url": "https://api.github.com/users/hakanohi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T13:46:52Z", "updated_at": "2020-07-29T14:04:18Z", "closed_at": "2020-07-29T14:03:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Actual Behavior\r\n`form.validate on submit()` evaluates to `False` when `choices` in `SelectField` is a list of values only. The same form validation evaluates to  `True` when using `(value, label)` tuples as used with version 2.2.1\r\n```python\r\n\r\nclass RegistrationForm(FlaskForm):\r\n\r\n    language = SelectField('Language', choices=['python', 'ruby', 'rust'], validators=[DataRequired()])\r\n    submit = SubmitField('Submit')\r\n\r\n\r\n@app.route('/', methods=['GET', 'POST'])\r\ndef index():\r\n    form = RegistrationForm()\r\n    if form.validate_on_submit():\r\n        return redirect(url_for('test'))\r\n    return render_template('index.html', form=form)\r\n```\r\nThe `SelectField()` is rendered properly in the HTML form and its value can be accessed with `form.language.data` but `form.validate_on_submit()` still evaluates to `False`.\r\n### Expected Behavior\r\n`form.validate on submit()` to evaluate to `True` when `choices` in `SelectField` is a list of values only as well.\r\n\r\n### Environment\r\n\r\n* Python version: 3.8.2\r\n* Flask-wtf version: 0.14.3\r\n* wtforms version: 2.3.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/414", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/414/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/414/events", "html_url": "https://github.com/lepture/flask-wtf/issues/414", "id": 646829704, "node_id": "MDU6SXNzdWU2NDY4Mjk3MDQ=", "number": 414, "title": "url_encode fails with werkzeug 1.0.1", "user": {"login": "joequant", "id": 2908185, "node_id": "MDQ6VXNlcjI5MDgxODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2908185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joequant", "html_url": "https://github.com/joequant", "followers_url": "https://api.github.com/users/joequant/followers", "following_url": "https://api.github.com/users/joequant/following{/other_user}", "gists_url": "https://api.github.com/users/joequant/gists{/gist_id}", "starred_url": "https://api.github.com/users/joequant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joequant/subscriptions", "organizations_url": "https://api.github.com/users/joequant/orgs", "repos_url": "https://api.github.com/users/joequant/repos", "events_url": "https://api.github.com/users/joequant/events{/privacy}", "received_events_url": "https://api.github.com/users/joequant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-28T03:36:39Z", "updated_at": "2020-06-28T03:39:35Z", "closed_at": "2020-06-28T03:39:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Should import from werkzeug.url \r\n\r\n  File \"/usr/lib/python3.8/site-packages/flask_wtf/recaptcha/fields.py\", line 3, in <module>\r\n    from . import widgets\r\n  File \"/usr/lib/python3.8/site-packages/flask_wtf/recaptcha/widgets.py\", line 5, in <module>\r\n    from werkzeug import url_encode\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/413", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/413/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/413/events", "html_url": "https://github.com/lepture/flask-wtf/issues/413", "id": 641968784, "node_id": "MDU6SXNzdWU2NDE5Njg3ODQ=", "number": 413, "title": "FieldList fails validation because raw_data was not set", "user": {"login": "PDiracDelta", "id": 11943051, "node_id": "MDQ6VXNlcjExOTQzMDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/11943051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PDiracDelta", "html_url": "https://github.com/PDiracDelta", "followers_url": "https://api.github.com/users/PDiracDelta/followers", "following_url": "https://api.github.com/users/PDiracDelta/following{/other_user}", "gists_url": "https://api.github.com/users/PDiracDelta/gists{/gist_id}", "starred_url": "https://api.github.com/users/PDiracDelta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PDiracDelta/subscriptions", "organizations_url": "https://api.github.com/users/PDiracDelta/orgs", "repos_url": "https://api.github.com/users/PDiracDelta/repos", "events_url": "https://api.github.com/users/PDiracDelta/events{/privacy}", "received_events_url": "https://api.github.com/users/PDiracDelta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-19T13:27:19Z", "updated_at": "2020-06-19T13:38:24Z", "closed_at": "2020-06-19T13:38:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "My full form structure is:\r\n`myForm: FieldList: FormField: mySubForm: FieldList: BooleanField`\r\nThe first FieldList fails validation (`InputRequired`, which checks `.raw_data`) because its `.raw_data` attribute was not set, even though its `.data` was set!\r\n\r\nI don't fiddle with the form data after submission, so I suppose this is a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/412", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/412/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/412/events", "html_url": "https://github.com/lepture/flask-wtf/issues/412", "id": 622714097, "node_id": "MDU6SXNzdWU2MjI3MTQwOTc=", "number": 412, "title": "Add CSRF token details to documentation", "user": {"login": "gsidhu", "id": 5348728, "node_id": "MDQ6VXNlcjUzNDg3Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5348728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsidhu", "html_url": "https://github.com/gsidhu", "followers_url": "https://api.github.com/users/gsidhu/followers", "following_url": "https://api.github.com/users/gsidhu/following{/other_user}", "gists_url": "https://api.github.com/users/gsidhu/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsidhu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsidhu/subscriptions", "organizations_url": "https://api.github.com/users/gsidhu/orgs", "repos_url": "https://api.github.com/users/gsidhu/repos", "events_url": "https://api.github.com/users/gsidhu/events{/privacy}", "received_events_url": "https://api.github.com/users/gsidhu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-21T19:04:34Z", "updated_at": "2020-05-21T20:24:10Z", "closed_at": "2020-05-21T19:53:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I just ran into this problem in my Flask app and found the solution on an obscure Stack Overflow question. \r\n\r\nI kept getting a 'Bad request. The CSRF token is invalid.' error. Turns out the CSRF token I set in my config file contained special characters (I used the `os.urandom` function) which does not work.\r\n\r\nPerhaps a tiny note somewhere in the documentation could make the users aware of this? \r\n\r\nI couldn't find it in the documentation but please forgive me in case I overlooked!\r\n\r\nCheers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/410", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/410/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/410/events", "html_url": "https://github.com/lepture/flask-wtf/issues/410", "id": 611380489, "node_id": "MDU6SXNzdWU2MTEzODA0ODk=", "number": 410, "title": "HiddenField No Data", "user": {"login": "FatehDzIt", "id": 42697678, "node_id": "MDQ6VXNlcjQyNjk3Njc4", "avatar_url": "https://avatars0.githubusercontent.com/u/42697678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FatehDzIt", "html_url": "https://github.com/FatehDzIt", "followers_url": "https://api.github.com/users/FatehDzIt/followers", "following_url": "https://api.github.com/users/FatehDzIt/following{/other_user}", "gists_url": "https://api.github.com/users/FatehDzIt/gists{/gist_id}", "starred_url": "https://api.github.com/users/FatehDzIt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FatehDzIt/subscriptions", "organizations_url": "https://api.github.com/users/FatehDzIt/orgs", "repos_url": "https://api.github.com/users/FatehDzIt/repos", "events_url": "https://api.github.com/users/FatehDzIt/events{/privacy}", "received_events_url": "https://api.github.com/users/FatehDzIt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-03T10:31:28Z", "updated_at": "2020-05-03T13:26:43Z", "closed_at": "2020-05-03T13:26:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got an issue when using HiddenField, i cant'get the data from it\r\nthe form is rendred properly  \r\nwhen i user StringField and set the type to hidden in the template it works \r\n{{ form.user_id(value=user.id, type=\"hidden\") }} \r\n\r\n\r\n\r\n```\r\n    username = StringField(\"Username\", validators=[\r\n                        DataRequired(), Length(min=5, max=20)])\r\n    email = StringField(\"Email\", validators=[Email()])\r\n    password = PasswordField(\"Password\", validators=[DataRequired()])\r\n    password_confirmation = PasswordField(\"Confirm Password\", validators=[EqualTo('password')])\r\n    role = SelectField('Role',\r\n                                choices=[(Role.name, Role.value)\r\n                                        for Role in Roles],\r\n                                default=Roles.admin.value)\r\n    user_id = HiddenField(\"user.id\")\r\n        \r\n    submit = SubmitField(\"Save\")\r\n```\r\n\r\n\r\n`\r\n{{ form.user_id(value=user.id) }} \r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/408", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/408/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/408/events", "html_url": "https://github.com/lepture/flask-wtf/issues/408", "id": 604431026, "node_id": "MDU6SXNzdWU2MDQ0MzEwMjY=", "number": 408, "title": "ImportError: cannot import name 'HTMLString' from 'wtforms.widgets'", "user": {"login": "Mukvin", "id": 34978943, "node_id": "MDQ6VXNlcjM0OTc4OTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/34978943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mukvin", "html_url": "https://github.com/Mukvin", "followers_url": "https://api.github.com/users/Mukvin/followers", "following_url": "https://api.github.com/users/Mukvin/following{/other_user}", "gists_url": "https://api.github.com/users/Mukvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mukvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mukvin/subscriptions", "organizations_url": "https://api.github.com/users/Mukvin/orgs", "repos_url": "https://api.github.com/users/Mukvin/repos", "events_url": "https://api.github.com/users/Mukvin/events{/privacy}", "received_events_url": "https://api.github.com/users/Mukvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-22T03:45:11Z", "updated_at": "2020-07-29T07:33:48Z", "closed_at": "2020-07-29T07:33:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "WTFS was upgraded in today, 2020/04/22,zh.\r\n![image](https://user-images.githubusercontent.com/34978943/79938098-39e8c500-848e-11ea-9364-cb5e0e4a9ca6.png)\r\nWhen I init env, then the importError was happended.\r\nSo If you wanted to workround, just set the version of WTForms to be lower 2.3.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/406", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/406/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/406/events", "html_url": "https://github.com/lepture/flask-wtf/issues/406", "id": 603219230, "node_id": "MDU6SXNzdWU2MDMyMTkyMzA=", "number": 406, "title": "Activate weekly builds for Travis", "user": {"login": "jugmac00", "id": 9895620, "node_id": "MDQ6VXNlcjk4OTU2MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9895620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jugmac00", "html_url": "https://github.com/jugmac00", "followers_url": "https://api.github.com/users/jugmac00/followers", "following_url": "https://api.github.com/users/jugmac00/following{/other_user}", "gists_url": "https://api.github.com/users/jugmac00/gists{/gist_id}", "starred_url": "https://api.github.com/users/jugmac00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jugmac00/subscriptions", "organizations_url": "https://api.github.com/users/jugmac00/orgs", "repos_url": "https://api.github.com/users/jugmac00/repos", "events_url": "https://api.github.com/users/jugmac00/events{/privacy}", "received_events_url": "https://api.github.com/users/jugmac00/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-20T12:59:31Z", "updated_at": "2020-04-20T13:23:40Z", "closed_at": "2020-04-20T13:23:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, it seems that builds are only triggered on a push - but not regularly. This means that e.g. Python updates or updates of direct or transitive dependencies could cause problems and get unnoticed for a longer time than necessary.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/402", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/402/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/402/events", "html_url": "https://github.com/lepture/flask-wtf/issues/402", "id": 577796427, "node_id": "MDU6SXNzdWU1Nzc3OTY0Mjc=", "number": 402, "title": "Error due to werkzeug version 1.0.0", "user": {"login": "fpichon", "id": 11756028, "node_id": "MDQ6VXNlcjExNzU2MDI4", "avatar_url": "https://avatars0.githubusercontent.com/u/11756028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fpichon", "html_url": "https://github.com/fpichon", "followers_url": "https://api.github.com/users/fpichon/followers", "following_url": "https://api.github.com/users/fpichon/following{/other_user}", "gists_url": "https://api.github.com/users/fpichon/gists{/gist_id}", "starred_url": "https://api.github.com/users/fpichon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fpichon/subscriptions", "organizations_url": "https://api.github.com/users/fpichon/orgs", "repos_url": "https://api.github.com/users/fpichon/repos", "events_url": "https://api.github.com/users/fpichon/events{/privacy}", "received_events_url": "https://api.github.com/users/fpichon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-09T10:17:17Z", "updated_at": "2020-03-09T10:24:10Z", "closed_at": "2020-03-09T10:22:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `flask db init`, an error appears: \"ImportError: cannot import name 'url_encode' from 'werkzeug'\" due to new version of werkzeug (version 1.0.0).\r\n\r\nTo fix just it, replace `from werkzeug import url_encode` by `from werkzeug.urls import url_encode` in widgets.py and validators.py.\r\n\r\nEdit: just saw that it has already been fixed in new version. Sorry.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/397", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/397/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/397/events", "html_url": "https://github.com/lepture/flask-wtf/issues/397", "id": 563477303, "node_id": "MDU6SXNzdWU1NjM0NzczMDM=", "number": 397, "title": "Issue to werkzeug-1.0.0 release", "user": {"login": "glemaitre", "id": 7454015, "node_id": "MDQ6VXNlcjc0NTQwMTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7454015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glemaitre", "html_url": "https://github.com/glemaitre", "followers_url": "https://api.github.com/users/glemaitre/followers", "following_url": "https://api.github.com/users/glemaitre/following{/other_user}", "gists_url": "https://api.github.com/users/glemaitre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glemaitre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glemaitre/subscriptions", "organizations_url": "https://api.github.com/users/glemaitre/orgs", "repos_url": "https://api.github.com/users/glemaitre/repos", "events_url": "https://api.github.com/users/glemaitre/events{/privacy}", "received_events_url": "https://api.github.com/users/glemaitre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-11T21:07:07Z", "updated_at": "2020-02-11T22:30:46Z", "closed_at": "2020-02-11T22:16:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that there is some issue due to new release of `werkzeug`:\r\n\r\n```pytb\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nramp-frontend/ramp_frontend/__init__.py:71: in create_app\r\n    from .views import admin\r\nramp-frontend/ramp_frontend/views/admin.py:36: in <module>\r\n    from ..forms import EventUpdateProfileForm\r\nramp-frontend/ramp_frontend/forms.py:6: in <module>\r\n    from flask_wtf import FlaskForm\r\n../../../miniconda/envs/testenv/lib/python3.6/site-packages/flask_wtf/__init__.py:17: in <module>\r\n    from .recaptcha import *\r\n../../../miniconda/envs/testenv/lib/python3.6/site-packages/flask_wtf/recaptcha/__init__.py:2: in <module>\r\n    from .fields import *\r\n../../../miniconda/envs/testenv/lib/python3.6/site-packages/flask_wtf/recaptcha/fields.py:3: in <module>\r\n    from . import widgets\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n    from flask import current_app, Markup\r\n    from flask import json\r\n>   from werkzeug import url_encode\r\nE   ImportError: cannot import name 'url_encode'\r\n../../../miniconda/envs/testenv/lib/python3.6/site-packages/flask_wtf/recaptcha/widgets.py:5: ImportError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/396", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/396/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/396/events", "html_url": "https://github.com/lepture/flask-wtf/issues/396", "id": 563108102, "node_id": "MDU6SXNzdWU1NjMxMDgxMDI=", "number": 396, "title": "new werkzeug lib break import typo", "user": {"login": "jerome-diver", "id": 11176132, "node_id": "MDQ6VXNlcjExMTc2MTMy", "avatar_url": "https://avatars1.githubusercontent.com/u/11176132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerome-diver", "html_url": "https://github.com/jerome-diver", "followers_url": "https://api.github.com/users/jerome-diver/followers", "following_url": "https://api.github.com/users/jerome-diver/following{/other_user}", "gists_url": "https://api.github.com/users/jerome-diver/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerome-diver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerome-diver/subscriptions", "organizations_url": "https://api.github.com/users/jerome-diver/orgs", "repos_url": "https://api.github.com/users/jerome-diver/repos", "events_url": "https://api.github.com/users/jerome-diver/events{/privacy}", "received_events_url": "https://api.github.com/users/jerome-diver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-11T10:28:51Z", "updated_at": "2020-02-11T15:18:40Z", "closed_at": "2020-02-11T14:23:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "new version of werkeug python library (from 1.0.0) need to import own libs differently:\r\n```\r\nfrom werkzeug.datastructures import ImmutableDict\r\nfrom werkzeug.urls import ulr_open\r\n```\r\nthis does impact almost two of your files:\r\n\r\n- recaptcha/validators.py\r\n- recaptcha/widgets.py\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/395", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/395/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/395/events", "html_url": "https://github.com/lepture/flask-wtf/issues/395", "id": 561593092, "node_id": "MDU6SXNzdWU1NjE1OTMwOTI=", "number": 395, "title": "Not compatible with Werkzeug 1.0.0", "user": {"login": "andresionek91", "id": 5912422, "node_id": "MDQ6VXNlcjU5MTI0MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5912422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andresionek91", "html_url": "https://github.com/andresionek91", "followers_url": "https://api.github.com/users/andresionek91/followers", "following_url": "https://api.github.com/users/andresionek91/following{/other_user}", "gists_url": "https://api.github.com/users/andresionek91/gists{/gist_id}", "starred_url": "https://api.github.com/users/andresionek91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andresionek91/subscriptions", "organizations_url": "https://api.github.com/users/andresionek91/orgs", "repos_url": "https://api.github.com/users/andresionek91/repos", "events_url": "https://api.github.com/users/andresionek91/events{/privacy}", "received_events_url": "https://api.github.com/users/andresionek91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-07T11:53:16Z", "updated_at": "2020-02-07T11:54:55Z", "closed_at": "2020-02-07T11:54:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "A new major release of Werkzeug is available as of yesterday. https://pypi.org/project/Werkzeug/1.0.0/\r\n\r\nThis is not compatible with flask_wtf\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/394", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/394/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/394/events", "html_url": "https://github.com/lepture/flask-wtf/issues/394", "id": 561272371, "node_id": "MDU6SXNzdWU1NjEyNzIzNzE=", "number": 394, "title": "Import Error with new Werkzeug update", "user": {"login": "RafaelCenzano", "id": 32753063, "node_id": "MDQ6VXNlcjMyNzUzMDYz", "avatar_url": "https://avatars1.githubusercontent.com/u/32753063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RafaelCenzano", "html_url": "https://github.com/RafaelCenzano", "followers_url": "https://api.github.com/users/RafaelCenzano/followers", "following_url": "https://api.github.com/users/RafaelCenzano/following{/other_user}", "gists_url": "https://api.github.com/users/RafaelCenzano/gists{/gist_id}", "starred_url": "https://api.github.com/users/RafaelCenzano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RafaelCenzano/subscriptions", "organizations_url": "https://api.github.com/users/RafaelCenzano/orgs", "repos_url": "https://api.github.com/users/RafaelCenzano/repos", "events_url": "https://api.github.com/users/RafaelCenzano/events{/privacy}", "received_events_url": "https://api.github.com/users/RafaelCenzano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-02-06T21:12:21Z", "updated_at": "2020-02-06T23:18:36Z", "closed_at": "2020-02-06T23:18:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "ImportError: cannot import name 'url_encode' from 'werkzeug'\r\n\r\nImports listed while trying to import my form.py\r\n\r\n`    from flask_wtf import FlaskForm\r\nvenv/lib/python3.8/site-packages/flask_wtf/__init__.py:17: in <module>\r\n    from .recaptcha import *\r\nvenv/lib/python3.8/site-packages/flask_wtf/recaptcha/__init__.py:2: in <module>\r\n    from .fields import *\r\nvenv/lib/python3.8/site-packages/flask_wtf/recaptcha/fields.py:3: in <module>\r\n    from . import widgets\r\nvenv/lib/python3.8/site-packages/flask_wtf/recaptcha/widgets.py:5: in <module>\r\n    from werkzeug import url_encode`\r\n\r\nThis only occurs using werkzeug's new version 1.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/391", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/391/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/391/events", "html_url": "https://github.com/lepture/flask-wtf/issues/391", "id": 550766139, "node_id": "MDU6SXNzdWU1NTA3NjYxMzk=", "number": 391, "title": "CSRF rendering inputs with the same ID field", "user": {"login": "NomeChomsky", "id": 46587871, "node_id": "MDQ6VXNlcjQ2NTg3ODcx", "avatar_url": "https://avatars2.githubusercontent.com/u/46587871?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NomeChomsky", "html_url": "https://github.com/NomeChomsky", "followers_url": "https://api.github.com/users/NomeChomsky/followers", "following_url": "https://api.github.com/users/NomeChomsky/following{/other_user}", "gists_url": "https://api.github.com/users/NomeChomsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/NomeChomsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NomeChomsky/subscriptions", "organizations_url": "https://api.github.com/users/NomeChomsky/orgs", "repos_url": "https://api.github.com/users/NomeChomsky/repos", "events_url": "https://api.github.com/users/NomeChomsky/events{/privacy}", "received_events_url": "https://api.github.com/users/NomeChomsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-16T12:06:47Z", "updated_at": "2020-01-16T16:03:03Z", "closed_at": "2020-01-16T16:01:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got a view processing Flask-WTF forms - there are two forms sent to the same page. Upon processing the form, the CSRF verification is failing, saying its not there.\r\n\r\n`validate_csrf_token() ] The CSRF token is missing.`\r\n\r\nHowever, in the front end I can see the CSRF tokens are in fact there, but each input has the same ID:\r\n\r\n```\r\n<form method=\"post\" class=\"mt-4\" id=\"form_1\">\r\n<input id=\"csrf_token\" name=\"csrf_token\" type=\"hidden\" value=\"ImM5OWI2NTJiY2RhOGJkNjlkYjFkYzliM2JkMDM4N2JmODQwMDU1YWQi.XiAz0A.7r1lBMq-tO0wrukerCfIFgXwK9M\">\r\n\r\n <form class=\"mt-3\" method=\"post\" id=\"form_2\">\r\n <div class=\"form-group input-group\">\r\n <input id=\"csrf_token\" name=\"csrf_token\" type=\"hidden\" value=\"ImM5OWI2NTJiY2RhOGJkNjlkYjFkYzliM2JkMDM4N2JmODQwMDU1YWQi.XiAz0A.7r1lBMq-tO0wrukerCfIFgXwK9M\">\r\n```\r\n\r\nTo setup CSRF I've got an app factory in __init__.py which pulls in an instance of csrf from app.extensions.py.\r\n\r\nextensions.py\r\n\r\n```\r\nfrom flask_wtf.csrf import CSRFProtect\r\nCSRF protect\r\ncsrf = CSRFProtect()`\r\n\r\n__init__.py\r\n`def create_app(config=BaseConfig):\r\n    # Initialise the Flask app\r\n    app = Flask(__name__)\r\n    initialise_extensions(app)\r\n    app.config.from_object(config)\r\n    register_template_filters(app)\r\n    app.register_blueprint(core)\r\n    register_shell_context(app)\r\n\r\n    return app\r\n\r\ndef initialise_extensions(app):\r\n    # Since the application instance is now created, pass it to each Flask\r\n    # extension instance to bind it to the Flask application instance (app)\r\n    csrf.init_app(app)\r\n    db.init_app(app)\r\n    migrate.init_app(app, db)\r\n    # Login\r\n    login.init_app(app)\r\n    login.login_view = 'core.login'\r\n```\r\n\r\nI don't think I have any issues with config:\r\n\r\n```class BaseConfig(object):\r\n    SECRET_KEY = os.environ.get('SECRET_KEY')\r\n    FLASK_DEBUG = os.environ.get('FLASK_DEBUG')\r\n    DB_NAME = os.environ.get('DB_NAME')\r\n    DB_USER = os.environ.get('DB_USER')\r\n    DB_PASS = os.environ.get('DB_PASS')\r\n    DB_SERVICE = os.environ.get('DB_SERVICE')\r\n    DB_PORT = os.environ.get('DB_PORT')\r\n    SQLALCHEMY_DATABASE_URI = 'postgresql://{0}:{1}@{2}:{3}/{4}'.format(\r\n        DB_USER, DB_PASS, DB_SERVICE, DB_PORT, DB_NAME\r\n    )\r\n    SQLALCHEMY_TRACK_MODIFICATIONS = True\r\n    BOT_TOKEN = ''\r\n    WTF_CSRF_ENABLED = True\r\n    # SESSION_COOKIE_SECURE = True\r\n    # WTF_CSRF_SECRET_KEY = 'secret'\r\n```\r\n\r\nThe problem emerged when I changed the 'core' part of my application to become a blueprint which you can see I register at the _init_.py stage. An example of the actual view is as such:\r\n\r\n```\r\n@core.route('/settings', methods=['GET', 'POST'])\r\n@login_required\r\ndef settings():\r\n\r\n    form2.validate()\r\n    form1.validate()\r\n\r\n    if form2.validate_on_submit():\r\n        do_something()\r\n        return redirect(request.url)\r\n\r\n    if form1.validate_on_submit():\r\n        debug.debug('HELLO THIS WORKED')\r\n            do_stuff()\r\n        return redirect(request.url)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/390", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/390/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/390/events", "html_url": "https://github.com/lepture/flask-wtf/issues/390", "id": 549485232, "node_id": "MDU6SXNzdWU1NDk0ODUyMzI=", "number": 390, "title": "Build is failing due to error in csrf.rst", "user": {"login": "jugmac00", "id": 9895620, "node_id": "MDQ6VXNlcjk4OTU2MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9895620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jugmac00", "html_url": "https://github.com/jugmac00", "followers_url": "https://api.github.com/users/jugmac00/followers", "following_url": "https://api.github.com/users/jugmac00/following{/other_user}", "gists_url": "https://api.github.com/users/jugmac00/gists{/gist_id}", "starred_url": "https://api.github.com/users/jugmac00/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jugmac00/subscriptions", "organizations_url": "https://api.github.com/users/jugmac00/orgs", "repos_url": "https://api.github.com/users/jugmac00/repos", "events_url": "https://api.github.com/users/jugmac00/events{/privacy}", "received_events_url": "https://api.github.com/users/jugmac00/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-14T10:50:25Z", "updated_at": "2020-02-13T08:58:31Z", "closed_at": "2020-02-13T08:58:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://travis-ci.org/lepture/flask-wtf/jobs/587646146\r\n\r\n```\r\nWarning, treated as error:\r\n/home/travis/build/lepture/flask-wtf/docs/csrf.rst:1:duplicate object description of flask_wtf.csrf, other instance in api, use :noindex: for one of them\r\nERROR: InvocationError for command /home/travis/build/lepture/flask-wtf/.tox/docs-html/bin/sphinx-build -W -b html -d docs/_build/doctrees docs docs/_build/html (exited with code 2)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/385", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/385/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/385/events", "html_url": "https://github.com/lepture/flask-wtf/issues/385", "id": 528779555, "node_id": "MDU6SXNzdWU1Mjg3Nzk1NTU=", "number": 385, "title": "CSRF security improvements", "user": {"login": "Dreamsorcerer", "id": 2203121, "node_id": "MDQ6VXNlcjIyMDMxMjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2203121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dreamsorcerer", "html_url": "https://github.com/Dreamsorcerer", "followers_url": "https://api.github.com/users/Dreamsorcerer/followers", "following_url": "https://api.github.com/users/Dreamsorcerer/following{/other_user}", "gists_url": "https://api.github.com/users/Dreamsorcerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dreamsorcerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dreamsorcerer/subscriptions", "organizations_url": "https://api.github.com/users/Dreamsorcerer/orgs", "repos_url": "https://api.github.com/users/Dreamsorcerer/repos", "events_url": "https://api.github.com/users/Dreamsorcerer/events{/privacy}", "received_events_url": "https://api.github.com/users/Dreamsorcerer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-26T14:57:33Z", "updated_at": "2019-11-26T16:23:40Z", "closed_at": "2019-11-26T15:04:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "It doesn't look like the CSRF token is using best practices for security, which may be important for a high-security website. Suggestions for improvement:\r\n\r\n1. Replace `hashlib.sha1(os.urandom(64)).hexdigest()` with `secrets.token_hex()`. This provides a more secure token (and defaults to a secure number of bytes, so no need to maintain it). Perhaps use the old code as a fallback mechanism for Python <3.6.\r\n\r\n2. The salt is set to the hard-coded value: 'wtf-csrf-token'. A publically known value used across hundreds of websites rather defeats the point of a salt. There should really be a setting to define the salt for each application (and the documentation should recommend setting it to a random value).\r\n\r\n3. For a defense-in-depth approach, it might be nice to have an option to disable verification of the token in field/POST data, and instead require verification to be done via the HTTP header in JS requests. Reasoning is that the browser will block requests that set custom headers from another site (2nd paragraph after bullet points):\r\nhttps://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#synchronizer-token-pattern", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/383", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/383/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/383/events", "html_url": "https://github.com/lepture/flask-wtf/issues/383", "id": 520238730, "node_id": "MDU6SXNzdWU1MjAyMzg3MzA=", "number": 383, "title": "IntegerField inpt cannot used with pigpio PWM control", "user": {"login": "zolag63", "id": 55257658, "node_id": "MDQ6VXNlcjU1MjU3NjU4", "avatar_url": "https://avatars1.githubusercontent.com/u/55257658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zolag63", "html_url": "https://github.com/zolag63", "followers_url": "https://api.github.com/users/zolag63/followers", "following_url": "https://api.github.com/users/zolag63/following{/other_user}", "gists_url": "https://api.github.com/users/zolag63/gists{/gist_id}", "starred_url": "https://api.github.com/users/zolag63/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zolag63/subscriptions", "organizations_url": "https://api.github.com/users/zolag63/orgs", "repos_url": "https://api.github.com/users/zolag63/repos", "events_url": "https://api.github.com/users/zolag63/events{/privacy}", "received_events_url": "https://api.github.com/users/zolag63/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-08T21:19:17Z", "updated_at": "2019-11-08T22:56:56Z", "closed_at": "2019-11-08T22:56:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI would like to use flask-wtf to create empty fields where use can give a number what controls the raspi PWM pin I use pigpio as it creates really nice squarewave,\r\n\r\nthe command is \r\npi.hardware_PWM(12, 200, variable)\r\n\r\ni have this error message:\r\n\"error: cannot convert argument to integer\"\r\n\"extents = [struct.pack(\"I\", PWMduty)]\"\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/382", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/382/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/382/events", "html_url": "https://github.com/lepture/flask-wtf/issues/382", "id": 517290296, "node_id": "MDU6SXNzdWU1MTcyOTAyOTY=", "number": 382, "title": "Store both value and label in two columns", "user": {"login": "Monduiz", "id": 8759714, "node_id": "MDQ6VXNlcjg3NTk3MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8759714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Monduiz", "html_url": "https://github.com/Monduiz", "followers_url": "https://api.github.com/users/Monduiz/followers", "following_url": "https://api.github.com/users/Monduiz/following{/other_user}", "gists_url": "https://api.github.com/users/Monduiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Monduiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Monduiz/subscriptions", "organizations_url": "https://api.github.com/users/Monduiz/orgs", "repos_url": "https://api.github.com/users/Monduiz/repos", "events_url": "https://api.github.com/users/Monduiz/events{/privacy}", "received_events_url": "https://api.github.com/users/Monduiz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-04T17:15:16Z", "updated_at": "2019-11-04T19:49:02Z", "closed_at": "2019-11-04T19:49:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am wondering if this can be done.\r\n\r\nLet's say I have a selectField and the user select an option in label form: \"ladder\" then the value attached it to it normally is saved: \"3\". What if I the integer value acts as a score and we would want to store both the score and the chosen label.\r\n\r\nIs there a way to do this?\r\n\r\n```\r\nclass Trip(db.Model):\r\n  risk_loc_name = db.Column(db.String(50), nullable=False)\r\n  risk_loc_val = db.Column(db.Integer)\r\n```\r\n\r\n```\r\n@app.route(\"/form\", methods=['GET', 'POST'])\r\n@login_required\r\ndef trip_form():\r\n    form = TripForm()\r\n    if form.validate_on_submit():\r\n        trip = Trip(risk_loc_name=form.risk_loc_name.data,\r\n        risk_loc_val=form.risk_loc_val.data)\r\n        db.session.add(trip)\r\n        db.session.commit()\r\n        flash('Saved.', 'success')\r\n        return redirect(url_for('home'))\r\n    return render_template('form.html', title='form', form=form, legend='New form')\r\n```\r\n\r\n```\r\n <div class=\"form-group\">\r\n              {{ form.risk_loc.label(class=\"form-control-label\") }}\r\n              {{ form.risk_loc(class=\"mdb-select md-form\") }}\r\n </div>\r\n```\r\n\r\nHere, basically, with one select, we would store both the option name and its data into two columns as per the data model. Anyone has done that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/380", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/380/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/380/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/380/events", "html_url": "https://github.com/lepture/flask-wtf/issues/380", "id": 506517480, "node_id": "MDU6SXNzdWU1MDY1MTc0ODA=", "number": 380, "title": "CSRF session token is missing issue", "user": {"login": "rbcabreraUPM", "id": 25873303, "node_id": "MDQ6VXNlcjI1ODczMzAz", "avatar_url": "https://avatars2.githubusercontent.com/u/25873303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbcabreraUPM", "html_url": "https://github.com/rbcabreraUPM", "followers_url": "https://api.github.com/users/rbcabreraUPM/followers", "following_url": "https://api.github.com/users/rbcabreraUPM/following{/other_user}", "gists_url": "https://api.github.com/users/rbcabreraUPM/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbcabreraUPM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbcabreraUPM/subscriptions", "organizations_url": "https://api.github.com/users/rbcabreraUPM/orgs", "repos_url": "https://api.github.com/users/rbcabreraUPM/repos", "events_url": "https://api.github.com/users/rbcabreraUPM/events{/privacy}", "received_events_url": "https://api.github.com/users/rbcabreraUPM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-14T08:41:44Z", "updated_at": "2020-03-09T07:04:46Z", "closed_at": "2020-03-09T07:04:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I keep encountering this error per request after following the document about using Javascript to set the csrf token in the header\r\n\r\n\r\nPlease provide how to fix this issue when using Fetch API", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/379", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/379/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/379/events", "html_url": "https://github.com/lepture/flask-wtf/issues/379", "id": 498901227, "node_id": "MDU6SXNzdWU0OTg5MDEyMjc=", "number": 379, "title": "Date field not working in Safari", "user": {"login": "rickwierenga", "id": 36956818, "node_id": "MDQ6VXNlcjM2OTU2ODE4", "avatar_url": "https://avatars2.githubusercontent.com/u/36956818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rickwierenga", "html_url": "https://github.com/rickwierenga", "followers_url": "https://api.github.com/users/rickwierenga/followers", "following_url": "https://api.github.com/users/rickwierenga/following{/other_user}", "gists_url": "https://api.github.com/users/rickwierenga/gists{/gist_id}", "starred_url": "https://api.github.com/users/rickwierenga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rickwierenga/subscriptions", "organizations_url": "https://api.github.com/users/rickwierenga/orgs", "repos_url": "https://api.github.com/users/rickwierenga/repos", "events_url": "https://api.github.com/users/rickwierenga/events{/privacy}", "received_events_url": "https://api.github.com/users/rickwierenga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-26T13:55:11Z", "updated_at": "2019-09-26T18:48:40Z", "closed_at": "2019-09-26T14:05:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Form:\r\n\r\n```python\r\nfrom wtforms.validators import DataRequired\r\nfrom flask_wtf import FlaskForm\r\nfrom wtforms.fields.html5 import DateField\r\n\r\nclass BookingForm(FlaskForm):\r\n    date = DateField('Date', format='%Y-%m-%d', validators=[DataRequired()], render_kw={\"placeholder\": \"yyyy/mm/dd\"})\r\n```\r\n\r\nHTML:\r\n```html\r\n{{ form.date(class=\"form-control form-control-lg\") }}\r\n```\r\n\r\nThis works fine in Chrome but it doesn't even validate in Safari: https://imgur.com/a/hX0t25A.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/377", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/377/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/377/events", "html_url": "https://github.com/lepture/flask-wtf/issues/377", "id": 496181126, "node_id": "MDU6SXNzdWU0OTYxODExMjY=", "number": 377, "title": "DeprecationWarning: The import 'werkzeug.url_encode' is deprecated ", "user": {"login": "nblock", "id": 131119, "node_id": "MDQ6VXNlcjEzMTExOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/131119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nblock", "html_url": "https://github.com/nblock", "followers_url": "https://api.github.com/users/nblock/followers", "following_url": "https://api.github.com/users/nblock/following{/other_user}", "gists_url": "https://api.github.com/users/nblock/gists{/gist_id}", "starred_url": "https://api.github.com/users/nblock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nblock/subscriptions", "organizations_url": "https://api.github.com/users/nblock/orgs", "repos_url": "https://api.github.com/users/nblock/repos", "events_url": "https://api.github.com/users/nblock/events{/privacy}", "received_events_url": "https://api.github.com/users/nblock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-20T06:55:39Z", "updated_at": "2019-11-19T10:02:52Z", "closed_at": "2019-09-21T14:32:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pytest displays the following deprecation warning:\r\n```\r\n.tox/py37/lib/python3.7/site-packages/flask_wtf/recaptcha/widgets.py:5: DeprecationWarning: The import 'werkzeug.url_encode' is deprecated and will be removed in Werkzeug 1.0. Use 'from werkzeug.urls import url_encode' instead.\r\n    from werkzeug import url_encode\r\n```\r\n\r\nVersions:\r\n* Python: 3.7.4\r\n* pytest: 5.1.2\r\n* Flask-WTF: 0.14.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/376", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/376/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/376/events", "html_url": "https://github.com/lepture/flask-wtf/issues/376", "id": 495538037, "node_id": "MDU6SXNzdWU0OTU1MzgwMzc=", "number": 376, "title": "Can the expiration time of csrf_token be extended", "user": {"login": "LIMr1209", "id": 37957822, "node_id": "MDQ6VXNlcjM3OTU3ODIy", "avatar_url": "https://avatars3.githubusercontent.com/u/37957822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LIMr1209", "html_url": "https://github.com/LIMr1209", "followers_url": "https://api.github.com/users/LIMr1209/followers", "following_url": "https://api.github.com/users/LIMr1209/following{/other_user}", "gists_url": "https://api.github.com/users/LIMr1209/gists{/gist_id}", "starred_url": "https://api.github.com/users/LIMr1209/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LIMr1209/subscriptions", "organizations_url": "https://api.github.com/users/LIMr1209/orgs", "repos_url": "https://api.github.com/users/LIMr1209/repos", "events_url": "https://api.github.com/users/LIMr1209/events{/privacy}", "received_events_url": "https://api.github.com/users/LIMr1209/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-19T02:22:30Z", "updated_at": "2019-09-19T05:50:01Z", "closed_at": "2019-09-19T04:52:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/375", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/375/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/375/events", "html_url": "https://github.com/lepture/flask-wtf/issues/375", "id": 473391517, "node_id": "MDU6SXNzdWU0NzMzOTE1MTc=", "number": 375, "title": "Is it possible to add a category to the flash message sent by the @login_required decorator?", "user": {"login": "aglamadrid19", "id": 11781094, "node_id": "MDQ6VXNlcjExNzgxMDk0", "avatar_url": "https://avatars0.githubusercontent.com/u/11781094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aglamadrid19", "html_url": "https://github.com/aglamadrid19", "followers_url": "https://api.github.com/users/aglamadrid19/followers", "following_url": "https://api.github.com/users/aglamadrid19/following{/other_user}", "gists_url": "https://api.github.com/users/aglamadrid19/gists{/gist_id}", "starred_url": "https://api.github.com/users/aglamadrid19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aglamadrid19/subscriptions", "organizations_url": "https://api.github.com/users/aglamadrid19/orgs", "repos_url": "https://api.github.com/users/aglamadrid19/repos", "events_url": "https://api.github.com/users/aglamadrid19/events{/privacy}", "received_events_url": "https://api.github.com/users/aglamadrid19/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-26T14:37:48Z", "updated_at": "2019-07-26T14:38:39Z", "closed_at": "2019-07-26T14:38:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im protecting a view the `@login_required` decorator.\r\n\r\nAfter an anonymous user tries to access this protected view, he gets redirected to my `login` view, the @login_required decorator seems to also pass a flash message to my `login` view. How can I add a category to this flash message getting passed to my `login` view?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/374", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/374/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/374/events", "html_url": "https://github.com/lepture/flask-wtf/issues/374", "id": 471502525, "node_id": "MDU6SXNzdWU0NzE1MDI1MjU=", "number": 374, "title": "0.15 release ?", "user": {"login": "tomotaka", "id": 287538, "node_id": "MDQ6VXNlcjI4NzUzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/287538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomotaka", "html_url": "https://github.com/tomotaka", "followers_url": "https://api.github.com/users/tomotaka/followers", "following_url": "https://api.github.com/users/tomotaka/following{/other_user}", "gists_url": "https://api.github.com/users/tomotaka/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomotaka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomotaka/subscriptions", "organizations_url": "https://api.github.com/users/tomotaka/orgs", "repos_url": "https://api.github.com/users/tomotaka/repos", "events_url": "https://api.github.com/users/tomotaka/events{/privacy}", "received_events_url": "https://api.github.com/users/tomotaka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-23T06:07:14Z", "updated_at": "2019-11-19T11:30:15Z", "closed_at": "2019-07-23T12:13:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want 0.15 release to solve this issue:\r\nhttps://stackoverflow.com/questions/44605393/object-of-type-bytes-is-not-json-serializable-when-upgrading-my-python-environ\r\n\r\nThis problem seems to be solved by this commit:\r\nhttps://github.com/lepture/flask-wtf/commit/eff54eca0d0c070a32da8815f9efd5189add3f1e\r\n\r\nCould you please just release v0.15 to PyPI ?\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/373", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/373/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/373/events", "html_url": "https://github.com/lepture/flask-wtf/issues/373", "id": 467878629, "node_id": "MDU6SXNzdWU0Njc4Nzg2Mjk=", "number": 373, "title": "Set selected option of a SelectField after form initialization", "user": {"login": "esid", "id": 1401130, "node_id": "MDQ6VXNlcjE0MDExMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1401130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esid", "html_url": "https://github.com/esid", "followers_url": "https://api.github.com/users/esid/followers", "following_url": "https://api.github.com/users/esid/following{/other_user}", "gists_url": "https://api.github.com/users/esid/gists{/gist_id}", "starred_url": "https://api.github.com/users/esid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esid/subscriptions", "organizations_url": "https://api.github.com/users/esid/orgs", "repos_url": "https://api.github.com/users/esid/repos", "events_url": "https://api.github.com/users/esid/events{/privacy}", "received_events_url": "https://api.github.com/users/esid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-14T20:02:02Z", "updated_at": "2019-07-14T21:17:51Z", "closed_at": "2019-07-14T21:17:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, there's no way to specify which option should be selected in a SelectField\r\nTrying to set form.select.default has no effect after form is rendered\r\nThere is also NO documentation for this. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/372", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/372/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/372/events", "html_url": "https://github.com/lepture/flask-wtf/issues/372", "id": 465331408, "node_id": "MDU6SXNzdWU0NjUzMzE0MDg=", "number": 372, "title": "Fails on label attribute", "user": {"login": "kontur", "id": 1893577, "node_id": "MDQ6VXNlcjE4OTM1Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1893577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kontur", "html_url": "https://github.com/kontur", "followers_url": "https://api.github.com/users/kontur/followers", "following_url": "https://api.github.com/users/kontur/following{/other_user}", "gists_url": "https://api.github.com/users/kontur/gists{/gist_id}", "starred_url": "https://api.github.com/users/kontur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kontur/subscriptions", "organizations_url": "https://api.github.com/users/kontur/orgs", "repos_url": "https://api.github.com/users/kontur/repos", "events_url": "https://api.github.com/users/kontur/events{/privacy}", "received_events_url": "https://api.github.com/users/kontur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-08T15:45:08Z", "updated_at": "2019-08-17T13:41:50Z", "closed_at": "2019-08-17T13:41:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nI'm pretty certain I am overseeing something totally basic, but when I expand the basic quickstart example simply by adding a `label=\"\u2026\"` definition I get this error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/flask/app.py\", line 2463, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/flask/app.py\", line 2449, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/flask/app.py\", line 1866, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/flask/app.py\", line 2446, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/flask/app.py\", line 1951, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/flask/app.py\", line 1820, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/flask/app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/flask/app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"\u2026app/app.py\", line 87, in cart\r\n    form = CartForm()\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/wtforms/form.py\", line 212, in __call__\r\n    return type.__call__(cls, *args, **kwargs)\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/flask_wtf/form.py\", line 88, in __init__\r\n    super(FlaskForm, self).__init__(formdata=formdata, **kwargs)\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/wtforms/form.py\", line 272, in __init__\r\n    super(Form, self).__init__(self._unbound_fields, meta=meta_obj, prefix=prefix)\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/wtforms/form.py\", line 52, in __init__\r\n    field = meta.bind_field(self, unbound_field, options)\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/wtforms/meta.py\", line 27, in bind_field\r\n    return unbound_field.bind(form=form, **options)\r\n  File \"\u2026app/venv/lib/python3.7/site-packages/wtforms/fields/core.py\", line 353, in bind\r\n    return self.field_class(*self.args, **kw)\r\nTypeError: __init__() got multiple values for argument 'label'\r\n```\r\n\r\nSo this works:\r\n```\r\nfrom flask_wtf import FlaskForm\r\nfrom wtforms import StringField\r\nfrom wtforms.validators import DataRequired\r\n\r\nclass CartForm(FlaskForm):\r\n    name = StringField('name', validators=[DataRequired()])\r\n```\r\n\r\nBut this fails, with the error triggered on the line where I instantiate my form:\r\n```\r\nfrom flask_wtf import FlaskForm\r\nfrom wtforms import StringField\r\nfrom wtforms.validators import DataRequired\r\n\r\nclass CartForm(FlaskForm):\r\n    name = StringField('name', label=\"Your name\", validators=[DataRequired()])\r\n```\r\n\r\nI'm using Python 3.7.3 and:\r\nFlask                  1.1.0\r\nFlask-WTF         0.14.2\r\nWTForms           2.2.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/371", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/371/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/371/events", "html_url": "https://github.com/lepture/flask-wtf/issues/371", "id": 459486234, "node_id": "MDU6SXNzdWU0NTk0ODYyMzQ=", "number": 371, "title": "[SSL: CERTIFICATE_VERIFY_FAILED]  certificate verify failed: unable to get local issuer certificate", "user": {"login": "johnclaro", "id": 5637283, "node_id": "MDQ6VXNlcjU2MzcyODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5637283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnclaro", "html_url": "https://github.com/johnclaro", "followers_url": "https://api.github.com/users/johnclaro/followers", "following_url": "https://api.github.com/users/johnclaro/following{/other_user}", "gists_url": "https://api.github.com/users/johnclaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnclaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnclaro/subscriptions", "organizations_url": "https://api.github.com/users/johnclaro/orgs", "repos_url": "https://api.github.com/users/johnclaro/repos", "events_url": "https://api.github.com/users/johnclaro/events{/privacy}", "received_events_url": "https://api.github.com/users/johnclaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-22T15:48:25Z", "updated_at": "2019-10-22T17:42:53Z", "closed_at": "2019-10-22T17:42:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting an error during **form.validate_on_submit()** when recaptcha is enabled:\r\n```\r\nurllib.error.URLError: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] \r\ncertificate verify failed: unable to get local issuer certificate (_ssl.c:1056)>\r\n```\r\n\r\nThe problem seems to come from [_validate_recaptcha method](https://github.com/lepture/flask-wtf/blob/master/flask_wtf/recaptcha/validators.py) when it sends the request to **RECAPTCHA_VERIFY_SERVER** via **urllib**.\r\n\r\nI was able to solve it by replacing this snippet:\r\n```\r\n        data = url_encode({\r\n            'secret':     private_key,\r\n            'remoteip':   remote_addr,\r\n            'response':   response\r\n        })\r\n\r\n        http_response = http.urlopen(RECAPTCHA_VERIFY_SERVER, to_bytes(data))\r\n```\r\n\r\nto this\r\n```\r\n        http_response = requests.post(\r\n            RECAPTCHA_VERIFY_SERVER,\r\n            data={\r\n                'secret': private_key,\r\n                'response': response,\r\n                'remoteip': remote_addr\r\n            },\r\n            verify=True\r\n        ).json().get('success', False)\r\n```\r\n\r\nWould be happy to get any feedback on this or if its just due to a misconfiguration on my side.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/369", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/369/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/369/events", "html_url": "https://github.com/lepture/flask-wtf/issues/369", "id": 454094270, "node_id": "MDU6SXNzdWU0NTQwOTQyNzA=", "number": 369, "title": "reCaptcha not working under Safari 12.1.1 when widget is loaded in iframe", "user": {"login": "Reve", "id": 735340, "node_id": "MDQ6VXNlcjczNTM0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/735340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Reve", "html_url": "https://github.com/Reve", "followers_url": "https://api.github.com/users/Reve/followers", "following_url": "https://api.github.com/users/Reve/following{/other_user}", "gists_url": "https://api.github.com/users/Reve/gists{/gist_id}", "starred_url": "https://api.github.com/users/Reve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Reve/subscriptions", "organizations_url": "https://api.github.com/users/Reve/orgs", "repos_url": "https://api.github.com/users/Reve/repos", "events_url": "https://api.github.com/users/Reve/events{/privacy}", "received_events_url": "https://api.github.com/users/Reve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-10T10:06:23Z", "updated_at": "2019-06-10T13:44:27Z", "closed_at": "2019-06-10T13:44:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "reCaptcha not working under Safari 12.1.1 when widget is loaded in iframe. When you select an image, the whole reCaptcha window turns white (see picture).\r\n\r\nSteps to reproduce:\r\n- insert reCaptcha field inside iframe\r\n- try to solve captcha\r\n\r\n<img width=\"912\" alt=\"Screenshot 2019-06-10 at 13 02 58\" src=\"https://user-images.githubusercontent.com/735340/59188528-84b46380-8b80-11e9-83f9-7d71a330b78f.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/368", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/368/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/368/events", "html_url": "https://github.com/lepture/flask-wtf/issues/368", "id": 450207480, "node_id": "MDU6SXNzdWU0NTAyMDc0ODA=", "number": 368, "title": "Implicit formdata processing might not be a good idea", "user": {"login": "torotil", "id": 182122, "node_id": "MDQ6VXNlcjE4MjEyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/182122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/torotil", "html_url": "https://github.com/torotil", "followers_url": "https://api.github.com/users/torotil/followers", "following_url": "https://api.github.com/users/torotil/following{/other_user}", "gists_url": "https://api.github.com/users/torotil/gists{/gist_id}", "starred_url": "https://api.github.com/users/torotil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/torotil/subscriptions", "organizations_url": "https://api.github.com/users/torotil/orgs", "repos_url": "https://api.github.com/users/torotil/repos", "events_url": "https://api.github.com/users/torotil/events{/privacy}", "received_events_url": "https://api.github.com/users/torotil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-30T09:11:08Z", "updated_at": "2019-05-30T11:07:16Z", "closed_at": "2019-05-30T10:17:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Problem\r\n\r\nIn some circumstances you might want to change a form\u2019s configuration after the form object was instantiated. Consider the following example:\r\n\r\n```python\r\n\r\nclass MyForm(FlaskForm):\r\n    choose = SelectField()\r\n\r\ndef my_view():\r\n    form = MyForm()\r\n    form.choose.choices = generate_choices_at_runtime()\r\n    if form.validate_on_submit():\r\n         # do something\r\n```\r\n\r\nThis will work fine during the GET request to `my_view` but it will fail in the POST request as `choose.choices` is not populated at the time the form input is handled.\r\n\r\nThe problem is that [`FlaskForm.__init__()`](https://github.com/lepture/flask-wtf/blob/9b029c379cfda2a7463cf771f933a1c425b4ce16/flask_wtf/form.py#L76) implicitly triggers input processing.\r\n\r\n### Proposed solution\r\n\r\nWhile I think it is a good idea to have some way to automatically process form input from `flask.request` it might be better to trigger this not before `validate_on_submit()`. I\u2019d suggest the following changes:\r\n\r\n1. Introduce a new method (ie. `FlaskForm.process_request_data()`) that reads the form data from the `request` and runs `process()` if appropriate. Make it so that the method is only executed once even if it is called multiple times.\r\n2. Call this new method at the beginning of `validate_on_submit()`.\r\n\r\nThis way pure declarative forms continue to work without changes, while a non-obvious pitfall for advanced use-cases is avoided.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/366", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/366/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/366/events", "html_url": "https://github.com/lepture/flask-wtf/issues/366", "id": 433171397, "node_id": "MDU6SXNzdWU0MzMxNzEzOTc=", "number": 366, "title": "csrf_token is always valid unless it its expiry\uff1f", "user": {"login": "f1ashine", "id": 26664765, "node_id": "MDQ6VXNlcjI2NjY0NzY1", "avatar_url": "https://avatars0.githubusercontent.com/u/26664765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/f1ashine", "html_url": "https://github.com/f1ashine", "followers_url": "https://api.github.com/users/f1ashine/followers", "following_url": "https://api.github.com/users/f1ashine/following{/other_user}", "gists_url": "https://api.github.com/users/f1ashine/gists{/gist_id}", "starred_url": "https://api.github.com/users/f1ashine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/f1ashine/subscriptions", "organizations_url": "https://api.github.com/users/f1ashine/orgs", "repos_url": "https://api.github.com/users/f1ashine/repos", "events_url": "https://api.github.com/users/f1ashine/events{/privacy}", "received_events_url": "https://api.github.com/users/f1ashine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-15T09:04:00Z", "updated_at": "2019-04-15T12:56:00Z", "closed_at": "2019-04-15T12:56:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use `form.validate_on_submit()` to verify the csrf_token and successfully return the result. When I repeat send the request packet with the same csrf_token, server return the same result. It means the csrf_token is not disposable.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/363", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/363/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/363/events", "html_url": "https://github.com/lepture/flask-wtf/issues/363", "id": 421796694, "node_id": "MDU6SXNzdWU0MjE3OTY2OTQ=", "number": 363, "title": "Any plan to support reCAPTCHA v3? ", "user": {"login": "junwei-wang", "id": 866329, "node_id": "MDQ6VXNlcjg2NjMyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/866329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junwei-wang", "html_url": "https://github.com/junwei-wang", "followers_url": "https://api.github.com/users/junwei-wang/followers", "following_url": "https://api.github.com/users/junwei-wang/following{/other_user}", "gists_url": "https://api.github.com/users/junwei-wang/gists{/gist_id}", "starred_url": "https://api.github.com/users/junwei-wang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junwei-wang/subscriptions", "organizations_url": "https://api.github.com/users/junwei-wang/orgs", "repos_url": "https://api.github.com/users/junwei-wang/repos", "events_url": "https://api.github.com/users/junwei-wang/events{/privacy}", "received_events_url": "https://api.github.com/users/junwei-wang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-16T11:18:08Z", "updated_at": "2020-06-15T12:57:55Z", "closed_at": "2019-10-28T15:51:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/362", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/362/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/362/events", "html_url": "https://github.com/lepture/flask-wtf/issues/362", "id": 420370828, "node_id": "MDU6SXNzdWU0MjAzNzA4Mjg=", "number": 362, "title": "BooleanField does not honor default value", "user": {"login": "ilons", "id": 6905634, "node_id": "MDQ6VXNlcjY5MDU2MzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6905634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilons", "html_url": "https://github.com/ilons", "followers_url": "https://api.github.com/users/ilons/followers", "following_url": "https://api.github.com/users/ilons/following{/other_user}", "gists_url": "https://api.github.com/users/ilons/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilons/subscriptions", "organizations_url": "https://api.github.com/users/ilons/orgs", "repos_url": "https://api.github.com/users/ilons/repos", "events_url": "https://api.github.com/users/ilons/events{/privacy}", "received_events_url": "https://api.github.com/users/ilons/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-13T08:23:36Z", "updated_at": "2020-01-22T11:01:05Z", "closed_at": "2019-03-18T07:40:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\n\r\nI'm having issues with rendering a BooleanField correctly using flask-wtf 0.14.2 with wtforms 2.2.1.\r\n\r\nIn my form, I define the field as:\r\n```\r\nfrom flask_wtf import FlaskForm\r\nfrom wtforms import BooleanField\r\n\r\nclass MyForm(FlaskForm):\r\n    bool_field = BooleanField(label='My boolean', description='Should be cheked', default='checked')\r\n```\r\nBut it renders unchecked like as `<input id=\"bool_field\" name=\"bool_field\" type=\"checkbox\" value=\"y\">`\r\n\r\nHowever, if I instead use the render_kw it works:\r\n```\r\nclass MyForm(FlaskForm):\r\n    bool_field = BooleanField(label='My boolean', description='Should be cheked', render_kw={'checked': True})\r\n```\r\nGives me: `<input checked=\"checked\" id=\"bool_field\" name=\"bool_field\" type=\"checkbox\" value=\"y\">`\r\n\r\nFrom reading the documentation on BooleanField for wtforms: https://wtforms.readthedocs.io/en/stable/fields.html#wtforms.fields.BooleanField it seems like the first approach (passing `default='checked'`) is indeed the proper way of doing it.\r\n\r\nWhen I check the values directly from the form object using pure wtforms, it seems to work as expected:\r\n```\r\nimport wtforms\r\n\r\nclass BooleanTest(wtforms.Form):\r\n    field = wtforms.BooleanField(u'Boolean', default='checked')\r\nform = BooleanTest()\r\n```\r\nThen form.field.data returns `True`, and it changes to `False` if I remove the `Default='checked'`.\r\n\r\n\r\nWhat I expect is the first use case to return a checked checkbox, while id does not.\r\nAm I doing something wrong, or do I miss something here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/360", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/360/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/360/events", "html_url": "https://github.com/lepture/flask-wtf/issues/360", "id": 414712007, "node_id": "MDU6SXNzdWU0MTQ3MTIwMDc=", "number": 360, "title": "Broken link in documentation for warning against easy_install", "user": {"login": "McEileen", "id": 5529982, "node_id": "MDQ6VXNlcjU1Mjk5ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5529982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/McEileen", "html_url": "https://github.com/McEileen", "followers_url": "https://api.github.com/users/McEileen/followers", "following_url": "https://api.github.com/users/McEileen/following{/other_user}", "gists_url": "https://api.github.com/users/McEileen/gists{/gist_id}", "starred_url": "https://api.github.com/users/McEileen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/McEileen/subscriptions", "organizations_url": "https://api.github.com/users/McEileen/orgs", "repos_url": "https://api.github.com/users/McEileen/repos", "events_url": "https://api.github.com/users/McEileen/events{/privacy}", "received_events_url": "https://api.github.com/users/McEileen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-26T16:49:28Z", "updated_at": "2019-02-26T19:21:21Z", "closed_at": "2019-02-26T19:20:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was reading through the [documentation's instructions about installation this morning](https://flask-wtf.readthedocs.io/en/stable/install.html) and the link about easy_install, [shouldn't do that,](https://python-packaging-user-guide.readthedocs.io/en/latest/pip_easy_install/) is broken.\r\n\r\nI can see that the broken link has already been addressed in a past [PR](https://github.com/lepture/flask-wtf/pull/122) and [issue](https://github.com/lepture/flask-wtf/issues/350) however, it remains up on the documentation.  Is there an estimate of when the link will be fixed in the documentation?  Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/359", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/359/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/359/events", "html_url": "https://github.com/lepture/flask-wtf/issues/359", "id": 414667917, "node_id": "MDU6SXNzdWU0MTQ2Njc5MTc=", "number": 359, "title": "Bugfix update", "user": {"login": "jnnkB", "id": 29376715, "node_id": "MDQ6VXNlcjI5Mzc2NzE1", "avatar_url": "https://avatars0.githubusercontent.com/u/29376715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnnkB", "html_url": "https://github.com/jnnkB", "followers_url": "https://api.github.com/users/jnnkB/followers", "following_url": "https://api.github.com/users/jnnkB/following{/other_user}", "gists_url": "https://api.github.com/users/jnnkB/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnnkB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnnkB/subscriptions", "organizations_url": "https://api.github.com/users/jnnkB/orgs", "repos_url": "https://api.github.com/users/jnnkB/repos", "events_url": "https://api.github.com/users/jnnkB/events{/privacy}", "received_events_url": "https://api.github.com/users/jnnkB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-26T15:23:54Z", "updated_at": "2019-02-26T15:28:57Z", "closed_at": "2019-02-26T15:28:40Z", "author_association": "NONE", "active_lock_reason": "off-topic", "body": "When are we going to see an bugfix update?\r\nI would love to have the bug concerning I18N and the default translations fixed.\r\n\r\nJnnk", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/357", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/357/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/357/events", "html_url": "https://github.com/lepture/flask-wtf/issues/357", "id": 406915193, "node_id": "MDU6SXNzdWU0MDY5MTUxOTM=", "number": 357, "title": "CSRF token in session", "user": {"login": "ozychhi", "id": 12700059, "node_id": "MDQ6VXNlcjEyNzAwMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/12700059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozychhi", "html_url": "https://github.com/ozychhi", "followers_url": "https://api.github.com/users/ozychhi/followers", "following_url": "https://api.github.com/users/ozychhi/following{/other_user}", "gists_url": "https://api.github.com/users/ozychhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozychhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozychhi/subscriptions", "organizations_url": "https://api.github.com/users/ozychhi/orgs", "repos_url": "https://api.github.com/users/ozychhi/repos", "events_url": "https://api.github.com/users/ozychhi/events{/privacy}", "received_events_url": "https://api.github.com/users/ozychhi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-05T18:26:46Z", "updated_at": "2019-06-25T06:46:37Z", "closed_at": "2019-02-05T18:33:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a good reason why https://github.com/lepture/flask-wtf/blob/9b029c379cfda2a7463cf771f933a1c425b4ce16/flask_wtf/csrf.py#L93 this check is being done? We are running multiple instances of flask behind alb and this is causing issues, we get occasional 400 `The CSRF session token is missing`. As far as I could understand we only set csrf_token for convenience.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/356", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/356/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/356/events", "html_url": "https://github.com/lepture/flask-wtf/issues/356", "id": 401058720, "node_id": "MDU6SXNzdWU0MDEwNTg3MjA=", "number": 356, "title": "The flask_wtf default upload button is ugly", "user": {"login": "Boulder67", "id": 8166894, "node_id": "MDQ6VXNlcjgxNjY4OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8166894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Boulder67", "html_url": "https://github.com/Boulder67", "followers_url": "https://api.github.com/users/Boulder67/followers", "following_url": "https://api.github.com/users/Boulder67/following{/other_user}", "gists_url": "https://api.github.com/users/Boulder67/gists{/gist_id}", "starred_url": "https://api.github.com/users/Boulder67/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Boulder67/subscriptions", "organizations_url": "https://api.github.com/users/Boulder67/orgs", "repos_url": "https://api.github.com/users/Boulder67/repos", "events_url": "https://api.github.com/users/Boulder67/events{/privacy}", "received_events_url": "https://api.github.com/users/Boulder67/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-20T03:29:24Z", "updated_at": "2019-01-20T04:00:21Z", "closed_at": "2019-01-20T04:00:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "The flask_wtf default upload button is ugly. Do you a flexible way to modify the style and color using using CSS OR Bootstrap?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/355", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/355/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/355/events", "html_url": "https://github.com/lepture/flask-wtf/issues/355", "id": 400485543, "node_id": "MDU6SXNzdWU0MDA0ODU1NDM=", "number": 355, "title": "Pinning down wtfforms ", "user": {"login": "szb0", "id": 12994143, "node_id": "MDQ6VXNlcjEyOTk0MTQz", "avatar_url": "https://avatars3.githubusercontent.com/u/12994143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szb0", "html_url": "https://github.com/szb0", "followers_url": "https://api.github.com/users/szb0/followers", "following_url": "https://api.github.com/users/szb0/following{/other_user}", "gists_url": "https://api.github.com/users/szb0/gists{/gist_id}", "starred_url": "https://api.github.com/users/szb0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szb0/subscriptions", "organizations_url": "https://api.github.com/users/szb0/orgs", "repos_url": "https://api.github.com/users/szb0/repos", "events_url": "https://api.github.com/users/szb0/events{/privacy}", "received_events_url": "https://api.github.com/users/szb0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-17T22:12:22Z", "updated_at": "2019-01-17T22:33:37Z", "closed_at": "2019-01-17T22:33:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you consider pinning down versions of your dependencies?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/352", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/352/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/352/events", "html_url": "https://github.com/lepture/flask-wtf/issues/352", "id": 386563959, "node_id": "MDU6SXNzdWUzODY1NjM5NTk=", "number": 352, "title": "file validate not working", "user": {"login": "W2AlharbiMe", "id": 43024659, "node_id": "MDQ6VXNlcjQzMDI0NjU5", "avatar_url": "https://avatars2.githubusercontent.com/u/43024659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/W2AlharbiMe", "html_url": "https://github.com/W2AlharbiMe", "followers_url": "https://api.github.com/users/W2AlharbiMe/followers", "following_url": "https://api.github.com/users/W2AlharbiMe/following{/other_user}", "gists_url": "https://api.github.com/users/W2AlharbiMe/gists{/gist_id}", "starred_url": "https://api.github.com/users/W2AlharbiMe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/W2AlharbiMe/subscriptions", "organizations_url": "https://api.github.com/users/W2AlharbiMe/orgs", "repos_url": "https://api.github.com/users/W2AlharbiMe/repos", "events_url": "https://api.github.com/users/W2AlharbiMe/events{/privacy}", "received_events_url": "https://api.github.com/users/W2AlharbiMe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-02T14:19:35Z", "updated_at": "2018-12-02T14:47:02Z", "closed_at": "2018-12-02T14:45:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, i've a weird problem in the file field the validators doesn't work \r\nmy code:\r\n\r\nprofile.html\r\n```\r\n<form action=\"\" method=\"POST\" enctype=\"multipart/form-data\">\r\n              {{ form.hidden_tag() }}\r\n              <div class=\"form-group\">\r\n                        {{ form.avatar.label() }}\r\n                        {{ form.avatar(class=\"form-control-file\") }}\r\n                        {% if form.avatar.errors %}\r\n                            {% for error in form.email.errors %}\r\n                                <span>{{ error }}</span><br>\r\n                            {% endfor %}\r\n                        {% endif %}\r\n                    </div>\r\n</form>\r\n```\r\n\r\n\r\nforms.py\r\n```\r\nfrom flask_wtf import FlaskForm\r\nfrom flask_wtf.file import FileField, FileAllowed, FileRequired, file_required\r\nfrom wtforms.validators import DataRequired, Length\r\nfrom wtforms.validators import Email, EqualTo, ValidationError\r\nfrom wtforms import StringField, PasswordField, SubmitField, BooleanField\r\nfrom sqlalchemy.orm import sessionmaker\r\nfrom project import engine\r\nfrom project.models import User\r\nfrom flask_login import current_user\r\n\r\nclass UpdateProfileForm(FlaskForm):\r\n    username = StringField(\"Username\", validators=[DataRequired(),\r\n                                                   Length(min=2, max=30)])\r\n    email = StringField(\"Email\",\r\n                        validators=[DataRequired(), Email()])\r\n    avatar = FileField('image', validators=[FileRequired(), FileAllowed(['jpg', 'png'], 'Images only!')])\r\n    submit = SubmitField(\"Save\")\r\n\r\n    def validate_username(self, username):\r\n        if username.data != current_user.username:\r\n            user = session.query(User).filter_by(\r\n                username=username.data).first()\r\n            if user:\r\n                raise ValidationError(\r\n                  'The username is taken! Please choose a different username')\r\n\r\n    def validate_email(self, email):\r\n        if email.data != current_user.email:\r\n            user = session.query(User).filter_by(\r\n                email=email.data.lower()).first()\r\n            if user:\r\n                raise ValidationError('The email is already exists !')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/351", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/351/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/351/events", "html_url": "https://github.com/lepture/flask-wtf/issues/351", "id": 379509957, "node_id": "MDU6SXNzdWUzNzk1MDk5NTc=", "number": 351, "title": "no module named 'wtforms.csrf' after pip install flask-wtf", "user": {"login": "my-name-is-njuno", "id": 43205594, "node_id": "MDQ6VXNlcjQzMjA1NTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/43205594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/my-name-is-njuno", "html_url": "https://github.com/my-name-is-njuno", "followers_url": "https://api.github.com/users/my-name-is-njuno/followers", "following_url": "https://api.github.com/users/my-name-is-njuno/following{/other_user}", "gists_url": "https://api.github.com/users/my-name-is-njuno/gists{/gist_id}", "starred_url": "https://api.github.com/users/my-name-is-njuno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/my-name-is-njuno/subscriptions", "organizations_url": "https://api.github.com/users/my-name-is-njuno/orgs", "repos_url": "https://api.github.com/users/my-name-is-njuno/repos", "events_url": "https://api.github.com/users/my-name-is-njuno/events{/privacy}", "received_events_url": "https://api.github.com/users/my-name-is-njuno/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-11T10:35:04Z", "updated_at": "2018-11-11T14:49:23Z", "closed_at": "2018-11-11T14:49:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installing flask-wtf with pip and running app.py , below is the error\r\n\r\nPS D:\\python\\sublime\\flaskdbapp> python app.py\r\nTraceback (most recent call last):\r\n  File \"app.py\", line 5, in <module>\r\n    from forms import Registration, Login\r\n  File \"D:\\python\\sublime\\flaskdbapp\\forms.py\", line 1, in <module>\r\n    from flask_wtf import FlaskForm\r\n  File \"C:\\Users\\laravel\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask_wtf-0.14.2-py3.7.egg\\flask_wtf\\__init__.py\", line 15, in <module>\r\n    from .csrf import CSRFProtect, CsrfProtect\r\n  File \"C:\\Users\\laravel\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\flask_wtf-0.14.2-py3.7.egg\\flask_wtf\\csrf.py\", line 12, in <module>\r\n    from wtforms.csrf.core import CSRF\r\nModuleNotFoundError: No module named 'wtforms.csrf'\r\n\r\nHave installed and tried with easy install and same error, have searched everywhere no clue what wrong, kindly assist", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/350", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/350/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/350/events", "html_url": "https://github.com/lepture/flask-wtf/issues/350", "id": 372494792, "node_id": "MDU6SXNzdWUzNzI0OTQ3OTI=", "number": 350, "title": "[Docs] Dead link for essay against easy-install", "user": {"login": "Tadaboody", "id": 6463334, "node_id": "MDQ6VXNlcjY0NjMzMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6463334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tadaboody", "html_url": "https://github.com/Tadaboody", "followers_url": "https://api.github.com/users/Tadaboody/followers", "following_url": "https://api.github.com/users/Tadaboody/following{/other_user}", "gists_url": "https://api.github.com/users/Tadaboody/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tadaboody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tadaboody/subscriptions", "organizations_url": "https://api.github.com/users/Tadaboody/orgs", "repos_url": "https://api.github.com/users/Tadaboody/repos", "events_url": "https://api.github.com/users/Tadaboody/events{/privacy}", "received_events_url": "https://api.github.com/users/Tadaboody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-22T12:12:53Z", "updated_at": "2018-10-23T02:19:55Z", "closed_at": "2018-10-23T02:19:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the [installation page](https://flask-wtf.readthedocs.io/en/stable/install.html#distribute-pip) the link detailing why you shouldn't use easy-install [is broken](https://python-packaging-user-guide.readthedocs.io/en/latest/pip_easy_install/)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/349", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/349/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/349/events", "html_url": "https://github.com/lepture/flask-wtf/issues/349", "id": 370240822, "node_id": "MDU6SXNzdWUzNzAyNDA4MjI=", "number": 349, "title": "New release", "user": {"login": "Forever-Young", "id": 783188, "node_id": "MDQ6VXNlcjc4MzE4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/783188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Forever-Young", "html_url": "https://github.com/Forever-Young", "followers_url": "https://api.github.com/users/Forever-Young/followers", "following_url": "https://api.github.com/users/Forever-Young/following{/other_user}", "gists_url": "https://api.github.com/users/Forever-Young/gists{/gist_id}", "starred_url": "https://api.github.com/users/Forever-Young/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Forever-Young/subscriptions", "organizations_url": "https://api.github.com/users/Forever-Young/orgs", "repos_url": "https://api.github.com/users/Forever-Young/repos", "events_url": "https://api.github.com/users/Forever-Young/events{/privacy}", "received_events_url": "https://api.github.com/users/Forever-Young/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-15T16:21:14Z", "updated_at": "2019-02-12T16:44:09Z", "closed_at": "2018-10-15T16:34:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to https://stackoverflow.com/questions/44605393/object-of-type-bytes-is-not-json-serializable-when-upgrading-my-python-environ#comment81856742_44605645 that bug is fixed in master (and it is). Do you have plans to do a release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/347", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/347/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/347/events", "html_url": "https://github.com/lepture/flask-wtf/issues/347", "id": 365882684, "node_id": "MDU6SXNzdWUzNjU4ODI2ODQ=", "number": 347, "title": "CSRF token reuse", "user": {"login": "dmitrybelyakov", "id": 178866, "node_id": "MDQ6VXNlcjE3ODg2Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/178866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmitrybelyakov", "html_url": "https://github.com/dmitrybelyakov", "followers_url": "https://api.github.com/users/dmitrybelyakov/followers", "following_url": "https://api.github.com/users/dmitrybelyakov/following{/other_user}", "gists_url": "https://api.github.com/users/dmitrybelyakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmitrybelyakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmitrybelyakov/subscriptions", "organizations_url": "https://api.github.com/users/dmitrybelyakov/orgs", "repos_url": "https://api.github.com/users/dmitrybelyakov/repos", "events_url": "https://api.github.com/users/dmitrybelyakov/events{/privacy}", "received_events_url": "https://api.github.com/users/dmitrybelyakov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-02T12:51:59Z", "updated_at": "2018-10-05T09:28:57Z", "closed_at": "2018-10-02T14:02:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nWas wondering why are CSRF tokens reused? We are using them in a single page app setup and a new token is generated on every request. However all of the previously generated tokens still work. It would be nice to drop the token from the session when a new one is being regenerated, or maybe have an option to `generate_csrf(force=True)`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/345", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/345/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/345/events", "html_url": "https://github.com/lepture/flask-wtf/issues/345", "id": 345548899, "node_id": "MDU6SXNzdWUzNDU1NDg4OTk=", "number": 345, "title": "cannot import name 'FlaskForm'", "user": {"login": "Toxenum", "id": 17962447, "node_id": "MDQ6VXNlcjE3OTYyNDQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/17962447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Toxenum", "html_url": "https://github.com/Toxenum", "followers_url": "https://api.github.com/users/Toxenum/followers", "following_url": "https://api.github.com/users/Toxenum/following{/other_user}", "gists_url": "https://api.github.com/users/Toxenum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Toxenum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Toxenum/subscriptions", "organizations_url": "https://api.github.com/users/Toxenum/orgs", "repos_url": "https://api.github.com/users/Toxenum/repos", "events_url": "https://api.github.com/users/Toxenum/events{/privacy}", "received_events_url": "https://api.github.com/users/Toxenum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-29T17:44:17Z", "updated_at": "2020-04-21T06:24:40Z", "closed_at": "2018-07-29T17:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run\r\n`from flask_wtf import FlaskForm`\r\n\r\nI get:\r\n\r\n```pytb\r\nTraceback (most recent call last):\r\n  File \"F:/Dokumente/Programmierung/Python/wtforms/wtforms.py\", line 5, in <module>\r\n    from flask_wtf import FlaskForm\r\n  File \"C:\\Users\\Niklas\\Documents\\venvs\\testenv\\lib\\site-packages\\flask_wtf\\__init__.py\", line 15, in <module>\r\n    from .csrf import CSRFProtect, CsrfProtect\r\n  File \"C:\\Users\\Niklas\\Documents\\venvs\\testenv\\lib\\site-packages\\flask_wtf\\csrf.py\", line 11, in <module>\r\n    from wtforms import ValidationError\r\n  File \"F:\\Dokumente\\Programmierung\\Python\\wtforms\\wtforms.py\", line 5, in <module>\r\n    from flask_wtf import FlaskForm\r\nImportError: cannot import name 'FlaskForm'`\r\n```\r\n\r\nThe versions I use are:\r\nFlask-WTF 2.2.1\r\nFlask 1.0.2\r\nPython 3.6.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/339", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/339/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/339/events", "html_url": "https://github.com/lepture/flask-wtf/issues/339", "id": 332226323, "node_id": "MDU6SXNzdWUzMzIyMjYzMjM=", "number": 339, "title": "Question: How does wtform or flask_wtf run the validate_<name> functions ", "user": {"login": "leon-nunes", "id": 8469842, "node_id": "MDQ6VXNlcjg0Njk4NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8469842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leon-nunes", "html_url": "https://github.com/leon-nunes", "followers_url": "https://api.github.com/users/leon-nunes/followers", "following_url": "https://api.github.com/users/leon-nunes/following{/other_user}", "gists_url": "https://api.github.com/users/leon-nunes/gists{/gist_id}", "starred_url": "https://api.github.com/users/leon-nunes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leon-nunes/subscriptions", "organizations_url": "https://api.github.com/users/leon-nunes/orgs", "repos_url": "https://api.github.com/users/leon-nunes/repos", "events_url": "https://api.github.com/users/leon-nunes/events{/privacy}", "received_events_url": "https://api.github.com/users/leon-nunes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-14T02:11:02Z", "updated_at": "2018-06-14T02:17:30Z", "closed_at": "2018-06-14T02:17:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm fairly new to python and flask and I was wondering how does my validate_email function in the forms.py get run when I check for form.validate_on_submit().\r\n\r\ncode:\r\n```\r\nclass RegForm(FlaskForm):\r\n   \r\n    email=StringField('email',validators=[InputRequired(),Length(1,64),Email(message=\"invalid email\")])\r\n\r\n    submit_reg=SubmitField('submit')\r\n\r\n    def validate_email(self, field):\r\n        if User.query.filter_by(email=field.data).first():\r\n            raise ValidationError('Email already registered.')\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/336", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/336/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/336/events", "html_url": "https://github.com/lepture/flask-wtf/issues/336", "id": 327552624, "node_id": "MDU6SXNzdWUzMjc1NTI2MjQ=", "number": 336, "title": "Disabling CSRF check by default doesn't work for forms", "user": {"login": "james9909", "id": 9091144, "node_id": "MDQ6VXNlcjkwOTExNDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/9091144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/james9909", "html_url": "https://github.com/james9909", "followers_url": "https://api.github.com/users/james9909/followers", "following_url": "https://api.github.com/users/james9909/following{/other_user}", "gists_url": "https://api.github.com/users/james9909/gists{/gist_id}", "starred_url": "https://api.github.com/users/james9909/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/james9909/subscriptions", "organizations_url": "https://api.github.com/users/james9909/orgs", "repos_url": "https://api.github.com/users/james9909/repos", "events_url": "https://api.github.com/users/james9909/events{/privacy}", "received_events_url": "https://api.github.com/users/james9909/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-30T02:37:22Z", "updated_at": "2018-06-17T03:00:08Z", "closed_at": "2018-06-17T03:00:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that setting `WTF_CSRF_CHECK_DEFAULT` doesn't won't work if the endpoint validates any `FlaskForm`. The CSRF token doesn't seem to be checked, but when I check the my logs, they say that `The CSRF token is missing`. Would it be possible to completely disable the CSRF check for forms if `WTF_CSRF_CHECK_DEFAULT` is set to false?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/334", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/334/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/334/events", "html_url": "https://github.com/lepture/flask-wtf/issues/334", "id": 325309390, "node_id": "MDU6SXNzdWUzMjUzMDkzOTA=", "number": 334, "title": "Form validate_on_submit() bug", "user": {"login": "linuxson27", "id": 14901736, "node_id": "MDQ6VXNlcjE0OTAxNzM2", "avatar_url": "https://avatars1.githubusercontent.com/u/14901736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linuxson27", "html_url": "https://github.com/linuxson27", "followers_url": "https://api.github.com/users/linuxson27/followers", "following_url": "https://api.github.com/users/linuxson27/following{/other_user}", "gists_url": "https://api.github.com/users/linuxson27/gists{/gist_id}", "starred_url": "https://api.github.com/users/linuxson27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linuxson27/subscriptions", "organizations_url": "https://api.github.com/users/linuxson27/orgs", "repos_url": "https://api.github.com/users/linuxson27/repos", "events_url": "https://api.github.com/users/linuxson27/events{/privacy}", "received_events_url": "https://api.github.com/users/linuxson27/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-22T14:04:21Z", "updated_at": "2018-05-22T16:53:57Z", "closed_at": "2018-05-22T15:10:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure if this is indeed a bug, just something weird I noticed today. I am using multiple forms in one of my routes, and so have multiple *.validate_on_submit() calls in succession. What I noticed was that if you don't implicitly include input validation (or perhaps any other kind would also work) per form, the first *.validate_on_submit() method gets called, whether intended or not. It does not 'select' the correct method when firing a form submit call. So are these calls blind? Or am I just not clued up enough on this topic...lol", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/333", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/333/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/333/events", "html_url": "https://github.com/lepture/flask-wtf/issues/333", "id": 323334450, "node_id": "MDU6SXNzdWUzMjMzMzQ0NTA=", "number": 333, "title": "breaks WTForms built-in I18N", "user": {"login": "slavkoja", "id": 5506544, "node_id": "MDQ6VXNlcjU1MDY1NDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5506544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slavkoja", "html_url": "https://github.com/slavkoja", "followers_url": "https://api.github.com/users/slavkoja/followers", "following_url": "https://api.github.com/users/slavkoja/following{/other_user}", "gists_url": "https://api.github.com/users/slavkoja/gists{/gist_id}", "starred_url": "https://api.github.com/users/slavkoja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slavkoja/subscriptions", "organizations_url": "https://api.github.com/users/slavkoja/orgs", "repos_url": "https://api.github.com/users/slavkoja/repos", "events_url": "https://api.github.com/users/slavkoja/events{/privacy}", "received_events_url": "https://api.github.com/users/slavkoja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-15T18:34:56Z", "updated_at": "2018-11-14T17:59:09Z", "closed_at": "2018-05-27T19:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "flask-wtf breaks WTForm's built-in localization. When i use WTForm's form, the translation works as expected, but the same form in ``flask-wtf`` is not translated (i omit all flask's stuff):\r\n```python\r\nfrom wtforms import Form\r\nfrom flask_wtf import FlaskForm\r\n\r\nclass WForm(Form):\r\n    class Meta:\r\n        locales = ['sk', 'en']\r\n\r\nclass FForm(FlaskForm):\r\n    class Meta:\r\n        locales = ['sk', 'en']\r\n\r\nwform = WForm()\r\nfform = FForm()\r\n\r\nprint(\"wWTF:\", wform.meta.get_translations(wform))\r\nprint(\"fWTF:\", fform.meta.get_translations(fform))\r\n```\r\nthe output is:\r\n```\r\nwWTF: <gettext.GNUTranslations object at 0x7f2b5ae5ba58>\r\nfWTF: None\r\n```\r\nI was able to fix it by overriding the ``get_translations()`` method of ``Meta`` class:\r\n```python\r\nclass FForm(FlaskForm):\r\n    class Meta:\r\n        locales = ['sk', 'en']\r\n        \r\n        def get_translations(self, form):\r\n            return super(FlaskForm.Meta, self).get_translations(form)\r\n```\r\nNow i got:\r\n```\r\nwWTF: <gettext.GNUTranslations object at 0x7fe93ee88860>\r\nfWTF: <gettext.GNUTranslations object at 0x7fe93ee88860>\r\n```\r\nBut i am not sure, if it is proper solution.\r\n\r\nregards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/332", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/332/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/332/events", "html_url": "https://github.com/lepture/flask-wtf/issues/332", "id": 318729470, "node_id": "MDU6SXNzdWUzMTg3Mjk0NzA=", "number": 332, "title": "tablefield query?", "user": {"login": "faststare08", "id": 20119233, "node_id": "MDQ6VXNlcjIwMTE5MjMz", "avatar_url": "https://avatars2.githubusercontent.com/u/20119233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faststare08", "html_url": "https://github.com/faststare08", "followers_url": "https://api.github.com/users/faststare08/followers", "following_url": "https://api.github.com/users/faststare08/following{/other_user}", "gists_url": "https://api.github.com/users/faststare08/gists{/gist_id}", "starred_url": "https://api.github.com/users/faststare08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faststare08/subscriptions", "organizations_url": "https://api.github.com/users/faststare08/orgs", "repos_url": "https://api.github.com/users/faststare08/repos", "events_url": "https://api.github.com/users/faststare08/events{/privacy}", "received_events_url": "https://api.github.com/users/faststare08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-29T16:18:32Z", "updated_at": "2018-04-29T18:34:27Z", "closed_at": "2018-04-29T18:34:09Z", "author_association": "NONE", "active_lock_reason": "off-topic", "body": "how I create tablefield?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/331", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/331/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/331/events", "html_url": "https://github.com/lepture/flask-wtf/issues/331", "id": 315342877, "node_id": "MDU6SXNzdWUzMTUzNDI4Nzc=", "number": 331, "title": "WTForm's built-in error message for zh_TW", "user": {"login": "newnewcoder", "id": 16394467, "node_id": "MDQ6VXNlcjE2Mzk0NDY3", "avatar_url": "https://avatars0.githubusercontent.com/u/16394467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newnewcoder", "html_url": "https://github.com/newnewcoder", "followers_url": "https://api.github.com/users/newnewcoder/followers", "following_url": "https://api.github.com/users/newnewcoder/following{/other_user}", "gists_url": "https://api.github.com/users/newnewcoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/newnewcoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newnewcoder/subscriptions", "organizations_url": "https://api.github.com/users/newnewcoder/orgs", "repos_url": "https://api.github.com/users/newnewcoder/repos", "events_url": "https://api.github.com/users/newnewcoder/events{/privacy}", "received_events_url": "https://api.github.com/users/newnewcoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-18T06:08:04Z", "updated_at": "2018-06-02T16:00:04Z", "closed_at": "2018-06-02T16:00:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use WTForm's built-in error message for [zh_TW](https://github.com/wtforms/wtforms/tree/master/wtforms/locale/zh_TW/LC_MESSAGES) with flask-Babel. However, flask-Babel always parse `zh_TW` to `zh_Hant_TW`, causing flask-wtf's i18n can't get the correct locale.\r\n\r\nIs there any solution? or I made some mistake? thx!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/330", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/330/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/330/events", "html_url": "https://github.com/lepture/flask-wtf/issues/330", "id": 314890051, "node_id": "MDU6SXNzdWUzMTQ4OTAwNTE=", "number": 330, "title": "Maybe warn when `FlaskForm` is initialized with `request.form`?", "user": {"login": "qria", "id": 4233072, "node_id": "MDQ6VXNlcjQyMzMwNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4233072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qria", "html_url": "https://github.com/qria", "followers_url": "https://api.github.com/users/qria/followers", "following_url": "https://api.github.com/users/qria/following{/other_user}", "gists_url": "https://api.github.com/users/qria/gists{/gist_id}", "starred_url": "https://api.github.com/users/qria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qria/subscriptions", "organizations_url": "https://api.github.com/users/qria/orgs", "repos_url": "https://api.github.com/users/qria/repos", "events_url": "https://api.github.com/users/qria/events{/privacy}", "received_events_url": "https://api.github.com/users/qria/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-17T03:15:33Z", "updated_at": "2018-04-17T08:35:03Z", "closed_at": "2018-04-17T08:35:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was going to file a bug report for a different issue until I realized this is a design decision issue so I'll just outline what led up to this suggestion.\r\n\r\nIt is a common and recommended pattern to initialize wtforms object with POSTed form data.\r\n```py\r\n# http://wtforms.readthedocs.io/en/latest/crash_course.html#using-forms\r\ndef register(request):\r\n    form = RegistrationForm(request.POST)\r\n    ...\r\n```\r\n\r\nWith flask (and just wtforms), equivalent would be:\r\n\r\n```py\r\ndef register():\r\n    form = RegistrationForm(request.form)\r\n    ...\r\n```\r\n\r\nHere flask-wtf offers a convenient shorthand:\r\n\r\n```py\r\ndef register():\r\n    form = RegistrationForm()\r\n    ...\r\n```\r\n\r\nI say \"offers\" because currently flask-wtf does not enforce nor actively discourage the use of `request.form` in the initialization. ([It only mentions that \"you don't have to\"](http://flask-wtf.readthedocs.io/en/stable/quickstart.html#validating-forms))\r\n\r\nAnd both works equivalent on most part, leading many to leave `request.form` as is. (e.g. [cookiecutter-flask project](https://github.com/sloria/cookiecutter-flask/blob/master/%7B%7Bcookiecutter.app_name%7D%7D/%7B%7Bcookiecutter.app_name%7D%7D/public/views.py#L24))\r\n\r\nHowever, the problem arises when the behavior of these two are different, namely when `request.files` is not `None`.\r\n\r\nExample modified from [this stackoverflow question](https://stackoverflow.com/questions/19203343/flask-wtf-filefield-does-not-set-data-attribute-to-an-instance-of-werkzeug-files):\r\n\r\n```py\r\nclass SettingsForm(FlaskForm):\r\n    photo = FileField('Photo')\r\n\r\n@app.route('/', methods=['GET', 'POST'])\r\ndef login():\r\n    form = SettingsForm(request.form)\r\n    if form.validate_on_submit():\r\n        # `form.photo.data` is `None` here!\r\n```\r\n\r\nSo, this is why I believe `FlaskForm` should warn when `request.form` is supplied. I am curious about what you think about this suggestion.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/329", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/329/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/329/events", "html_url": "https://github.com/lepture/flask-wtf/issues/329", "id": 312284274, "node_id": "MDU6SXNzdWUzMTIyODQyNzQ=", "number": 329, "title": "\u4e0d\u652f\u6301\u591a\u6587\u4ef6\u4e0a\u4f20\u5417 ", "user": {"login": "xujiang1", "id": 10194979, "node_id": "MDQ6VXNlcjEwMTk0OTc5", "avatar_url": "https://avatars2.githubusercontent.com/u/10194979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xujiang1", "html_url": "https://github.com/xujiang1", "followers_url": "https://api.github.com/users/xujiang1/followers", "following_url": "https://api.github.com/users/xujiang1/following{/other_user}", "gists_url": "https://api.github.com/users/xujiang1/gists{/gist_id}", "starred_url": "https://api.github.com/users/xujiang1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xujiang1/subscriptions", "organizations_url": "https://api.github.com/users/xujiang1/orgs", "repos_url": "https://api.github.com/users/xujiang1/repos", "events_url": "https://api.github.com/users/xujiang1/events{/privacy}", "received_events_url": "https://api.github.com/users/xujiang1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-08T08:18:50Z", "updated_at": "2018-04-08T14:30:13Z", "closed_at": "2018-04-08T12:52:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "\u6211\u770b\u4e86\u91cc\u9762\u7684\u6587\u4ef6\u5b9e\u73b0\u673a\u5236\uff0c\u5168\u90e8\u53d6\u4e86\u5217\u8868\u7b2c\u4e00\u4e2a\uff0c\u5728\u5e95\u5c42\u6ca1\u6709\u652f\u6301\u591a\u6587\u4ef6\u540c\u65f6\u4e0a\u4f20\u5417\uff0c\u5e0c\u671b\u6709\u4eba\u89e3\u7b54", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/328", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/328/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/328/events", "html_url": "https://github.com/lepture/flask-wtf/issues/328", "id": 307899205, "node_id": "MDU6SXNzdWUzMDc4OTkyMDU=", "number": 328, "title": "CSRF token mismatch in Chrome only", "user": {"login": "jrestifo", "id": 4042679, "node_id": "MDQ6VXNlcjQwNDI2Nzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4042679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrestifo", "html_url": "https://github.com/jrestifo", "followers_url": "https://api.github.com/users/jrestifo/followers", "following_url": "https://api.github.com/users/jrestifo/following{/other_user}", "gists_url": "https://api.github.com/users/jrestifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrestifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrestifo/subscriptions", "organizations_url": "https://api.github.com/users/jrestifo/orgs", "repos_url": "https://api.github.com/users/jrestifo/repos", "events_url": "https://api.github.com/users/jrestifo/events{/privacy}", "received_events_url": "https://api.github.com/users/jrestifo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-23T04:29:47Z", "updated_at": "2018-03-23T13:31:52Z", "closed_at": "2018-03-23T13:31:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Flask application using Flask-WTF 0.14.2 with WTForms 2.1, itsdangerous 0.24 and having quite a strange behavior.\r\n\r\nI am hosting the Flask app with uWSGI on a regular http socket for the moment, no nginx yet during this test. I have the site on port 5000, which is firewalled for all but my own IP. I have the DigitalOcean droplet's IP added to my /etc/hosts file as site-test. SERVER_NAME is set to site-test:5000 . If I go to site-test:5000 in Firefox, all works perfectly, login is fine, all forms good. In Chrome, the site loads, but I cannot submit any forms. They all have a CSRF token mismatch error.\r\n\r\nI tried clearing my cache in Chrome, and even deleted ~/.cache/google-chrome but still the same issue. Any thoughts on what can be causing this bizarre behavior? The paranoid in me is wondering if because its http somehow my requests are being modified in transit, but then why does Firefox work fine?\r\n\r\n I used the Chrome dev tools and checked that the token in the form data in the POST is the same as what was received in the GET, and it does match...\r\n\r\nCompared the request headers in Firefox vs Chrome and the content-length is identical, Chrome has an Origin header which Firefox does not, and Chrome also has cache-control set to no-cache. But nothing is standing out to me as a red flag :( Still stumped...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/327", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/327/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/327/events", "html_url": "https://github.com/lepture/flask-wtf/issues/327", "id": 303806354, "node_id": "MDU6SXNzdWUzMDM4MDYzNTQ=", "number": 327, "title": "CSRF session token missing(400 bad request)", "user": {"login": "guruganesh26", "id": 1488269, "node_id": "MDQ6VXNlcjE0ODgyNjk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1488269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guruganesh26", "html_url": "https://github.com/guruganesh26", "followers_url": "https://api.github.com/users/guruganesh26/followers", "following_url": "https://api.github.com/users/guruganesh26/following{/other_user}", "gists_url": "https://api.github.com/users/guruganesh26/gists{/gist_id}", "starred_url": "https://api.github.com/users/guruganesh26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guruganesh26/subscriptions", "organizations_url": "https://api.github.com/users/guruganesh26/orgs", "repos_url": "https://api.github.com/users/guruganesh26/repos", "events_url": "https://api.github.com/users/guruganesh26/events{/privacy}", "received_events_url": "https://api.github.com/users/guruganesh26/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-09T11:11:43Z", "updated_at": "2018-03-09T13:03:32Z", "closed_at": "2018-03-09T13:02:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nIn our Flask web application we are facing 'CSRF Session Token is missing' only when morning first request. we have used the default session, csrf configuration not changed anything. cookie secret key only given.\r\n\r\nWe are using Nginx as our load balancer. We debugged the problem, For our HTML page Rquest cookies don't send 'session cookie', So we are Receiving session cookie in 'Response Cookies'.\r\n\r\nThe logic here used is if we not send session cookie, server returns session cookie in response as per our understanding.\r\n\r\nSo can anyone help why there is session cookie not received in response for first time of a day in a HTML page or is that cookie expired and due to that we are facing this problem?(Note: we give wtf_csrf_time_limit=100000 only remaining default valu)\r\n\r\nEnvironment\r\nPython version: 2.7.3\r\nFlask version:0.12\r\nWerkzeug version:0.11.15\r\n--\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/324", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/324/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/324/events", "html_url": "https://github.com/lepture/flask-wtf/issues/324", "id": 293635516, "node_id": "MDU6SXNzdWUyOTM2MzU1MTY=", "number": 324, "title": "\"ValueError: too many values to unpack\" with SQLAlchemy 1.2.2", "user": {"login": "command-tab", "id": 3069, "node_id": "MDQ6VXNlcjMwNjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/command-tab", "html_url": "https://github.com/command-tab", "followers_url": "https://api.github.com/users/command-tab/followers", "following_url": "https://api.github.com/users/command-tab/following{/other_user}", "gists_url": "https://api.github.com/users/command-tab/gists{/gist_id}", "starred_url": "https://api.github.com/users/command-tab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/command-tab/subscriptions", "organizations_url": "https://api.github.com/users/command-tab/orgs", "repos_url": "https://api.github.com/users/command-tab/repos", "events_url": "https://api.github.com/users/command-tab/events{/privacy}", "received_events_url": "https://api.github.com/users/command-tab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-02-01T18:25:48Z", "updated_at": "2018-02-01T21:29:27Z", "closed_at": "2018-02-01T19:47:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using SQLAlchemy 1.2.2 with Flask-WTF 0.14.2, using a QuerySelectField, Flask-WTF raises \"ValueError: too many values to unpack\" in `wtforms/ext/sqlalchemy/fields.py` line 189, in `get_pk_from_identity`. It appears that SQLAlchemy 1.2 and later returns a third member from that call, and the library only expects two. Here's separate project's PR about the issue, and whose fix may be worth considering:\r\nhttps://github.com/wtforms/wtforms-sqlalchemy/pull/10\r\n\r\nI've put together a small Flask app demonstrating the bug here:\r\nhttps://github.com/commandtab/flask-wtf-example", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/322", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/322/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/322/events", "html_url": "https://github.com/lepture/flask-wtf/issues/322", "id": 287843825, "node_id": "MDU6SXNzdWUyODc4NDM4MjU=", "number": 322, "title": "Form.wrap_formdata does not work correctly with BooleanField", "user": {"login": "nfvs", "id": 163961, "node_id": "MDQ6VXNlcjE2Mzk2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/163961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nfvs", "html_url": "https://github.com/nfvs", "followers_url": "https://api.github.com/users/nfvs/followers", "following_url": "https://api.github.com/users/nfvs/following{/other_user}", "gists_url": "https://api.github.com/users/nfvs/gists{/gist_id}", "starred_url": "https://api.github.com/users/nfvs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nfvs/subscriptions", "organizations_url": "https://api.github.com/users/nfvs/orgs", "repos_url": "https://api.github.com/users/nfvs/repos", "events_url": "https://api.github.com/users/nfvs/events{/privacy}", "received_events_url": "https://api.github.com/users/nfvs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-11T16:32:15Z", "updated_at": "2018-01-11T17:05:07Z", "closed_at": "2018-01-11T16:50:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/lepture/flask-wtf/blob/master/flask_wtf/form.py#L64\r\n\r\n`Form.wrap_formdata()`, which gets called from wtforms, will return a wrapper with json values; however, BooleanField only gets set to False with strings, not with booleans:\r\n\r\nhttps://github.com/wtforms/wtforms/blob/master/wtforms/fields/core.py#L699\r\n\r\nIdeally wtforms would also support `False` values in form values.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/320", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/320/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/320/events", "html_url": "https://github.com/lepture/flask-wtf/issues/320", "id": 286695853, "node_id": "MDU6SXNzdWUyODY2OTU4NTM=", "number": 320, "title": "`form.hidden_tag()` is broken when multiple forms are on a single page", "user": {"login": "heartsucker", "id": 3998464, "node_id": "MDQ6VXNlcjM5OTg0NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3998464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heartsucker", "html_url": "https://github.com/heartsucker", "followers_url": "https://api.github.com/users/heartsucker/followers", "following_url": "https://api.github.com/users/heartsucker/following{/other_user}", "gists_url": "https://api.github.com/users/heartsucker/gists{/gist_id}", "starred_url": "https://api.github.com/users/heartsucker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heartsucker/subscriptions", "organizations_url": "https://api.github.com/users/heartsucker/orgs", "repos_url": "https://api.github.com/users/heartsucker/repos", "events_url": "https://api.github.com/users/heartsucker/events{/privacy}", "received_events_url": "https://api.github.com/users/heartsucker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-08T10:02:20Z", "updated_at": "2018-02-22T17:28:15Z", "closed_at": "2018-02-22T17:03:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I came across this in a large webapp, and this is roughly a minimal example that reproduces the error.\r\n\r\nBug is reproducible with Python 3.5.3 on Debian 9.3 and Python 3.6 on Alpine 3.6.\r\n\r\n`requirements.txt`\r\n\r\n```\r\nclick==6.7\r\nflask-wtf==0.14.2\r\nflask==0.12.2\r\nitsdangerous==0.24\r\njinja2==2.10\r\nmarkupsafe==1.0\r\nwerkzeug==0.14.1\r\nwtforms==2.1\r\n```\r\n\r\n`app.py`\r\n\r\n```python\r\n#!/usr/bin/env python3\r\nfrom flask import Flask, request, render_template, flash\r\nfrom flask_wtf import FlaskForm\r\nfrom wtforms import ValidationError, HiddenField, SubmitField, StringField\r\nfrom wtforms.validators import InputRequired\r\n\r\napp = Flask(__name__)\r\napp.secret_key = 'foobarbaz'\r\napp.jinja_env.trim_blocks = True\r\napp.jinja_env.lstrip_blocks = True\r\n\r\n\r\nclass Equality:\r\n\r\n    def __init__(self, value):\r\n        self.__value = value\r\n\r\n    def __call__(self, form, field):\r\n        if field.data != self.__value:\r\n            raise ValidationError('Expected value: {}'.format(self.__value))\r\n\r\n\r\nclass FormTypeField(HiddenField):\r\n\r\n    def __init__(self, form_name, *nargs, **kwargs):\r\n        super().__init__(\r\n            *nargs,\r\n            **kwargs,\r\n            default=form_name,\r\n            validators=[\r\n                InputRequired(),\r\n                Equality(form_name),\r\n            ]\r\n        )\r\n\r\n\r\nclass MyForm(FlaskForm):\r\n\r\n    def is_submitted_form(self):\r\n        return request.method == 'POST' and \\\r\n               request.form.get('form', None) == self.__class__.__name__\r\n\r\n\r\nclass FormA(MyForm):\r\n\r\n    form = FormTypeField('FormA')\r\n    foo = StringField(label='Foo')\r\n    submit = SubmitField(label='Submit')\r\n\r\n\r\nclass FormB(MyForm):\r\n\r\n    form = FormTypeField('FormB')\r\n    bar = StringField(label='Bar')\r\n    submit = SubmitField(label='Submit')\r\n\r\n\r\n@app.route('/', methods=['GET', 'POST'])\r\ndef index():\r\n    form_a = FormA()\r\n    form_b = FormB()\r\n    if request.method == 'POST':\r\n        if form_a.is_submitted_form():\r\n            if form_a.validate():\r\n                flash('FormA: {}'.format(form_a.foo.data))\r\n            else:\r\n                flash('Bad FormA')\r\n        elif form_b.is_submitted_form():\r\n            if form_b.validate():\r\n                flash('FormB: {}'.format(form_b.bar.data))\r\n            else:\r\n                flash('BadFormB')\r\n        else:\r\n            flash('No form')\r\n    return render_template('index.html', form_a=form_a, form_b=form_b)\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run('127.0.0.1', port=8080, debug=True)\r\n```\r\n\r\n`index.html`\r\n\r\n```html\r\n{% from \"_forms.html\" import render_field %}\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <title>Form Test</title>\r\n  </head>\r\n  <body>\r\n    {% for message in get_flashed_messages() %}\r\n      <p>Flash: {{ message }}</p>\r\n    {% endfor %}\r\n    <form method=\"POST\">\r\n      {{ form_a.hidden_tag() }}\r\n      {{ render_field(form_a.foo) }}\r\n      {{ render_field(form_a.submit) }}\r\n    </form>\r\n    <form method=\"POST\">\r\n      {{ form_b.hidden_tag() }}\r\n      {{ render_field(form_b.bar) }}\r\n      {{ render_field(form_b.submit) }}\r\n    </form>\r\n  </body>\r\n</html>\r\n```\r\n\r\n`_forms.html`\r\n\r\n```html\r\n{% macro render_field(field) %}\r\n  {{ field.label }}\r\n  {{ field(**kwargs)|safe }}\r\n  {% if field.errors %}\r\n    <ul>\r\n    {% for error in field.errors %}\r\n      <li>{{ error }}</li>\r\n    {% endfor %}\r\n    </ul>\r\n  {% endif %}\r\n{% endmacro %}\r\n```\r\n\r\nWhen the page is rendered this is the output:\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <title>Form Test</title>\r\n  </head>\r\n  <body>\r\n    <form method=\"POST\">\r\n      <input id=\"form\" name=\"form\" type=\"hidden\" value=\"FormA\">\r\n      <input id=\"csrf_token\" name=\"csrf_token\" type=\"hidden\" value=\"IjkxM2VmYmFiYzE1YzFjM2IzNDlmMTEwOTViZTI0ZWMwNWIzNzMyMDMi.DTP7lg.Ayilt42JPHYGGcyw2I1sJ57tT_Y\">\r\n      <label for=\"foo\">Foo</label>\r\n      <input autocomplete=\"off\" id=\"foo\" name=\"foo\" type=\"text\" value=\"\">\r\n      <input id=\"submit\" name=\"submit\" type=\"submit\" value=\"Submit\">\r\n    </form>\r\n    <form method=\"POST\">\r\n      <input id=\"form\" name=\"form\" type=\"hidden\" value=\"FormA\">\r\n      <input id=\"csrf_token\" name=\"csrf_token\" type=\"hidden\" value=\"IjkxM2VmYmFiYzE1YzFjM2IzNDlmMTEwOTViZTI0ZWMwNWIzNzMyMDMi.DTP7lg.Ayilt42JPHYGGcyw2I1sJ57tT_Y\">\r\n      <label for=\"bar\">Bar</label>\r\n      <input autocomplete=\"off\" id=\"bar\" name=\"bar\" type=\"text\" value=\"wagrarg\">\r\n      <input id=\"submit\" name=\"submit\" type=\"submit\" value=\"Submit\">\r\n    </form>\r\n  </body>\r\n</html>\r\n```\r\n\r\nWhat should be noted here is that `<input id=\"form\" name=\"form\" type=\"hidden\" value=\"FormA\">` appears in both forms, but the other field (`foo` vs. `bar`) are correct. This seems like a bug, and it is annoyingly transient and does not occur on every render.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/319", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/319/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/319/events", "html_url": "https://github.com/lepture/flask-wtf/issues/319", "id": 285466730, "node_id": "MDU6SXNzdWUyODU0NjY3MzA=", "number": 319, "title": "Recaptcha validator passes Google the wrong IP", "user": {"login": "Avamander", "id": 5392141, "node_id": "MDQ6VXNlcjUzOTIxNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5392141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avamander", "html_url": "https://github.com/Avamander", "followers_url": "https://api.github.com/users/Avamander/followers", "following_url": "https://api.github.com/users/Avamander/following{/other_user}", "gists_url": "https://api.github.com/users/Avamander/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avamander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avamander/subscriptions", "organizations_url": "https://api.github.com/users/Avamander/orgs", "repos_url": "https://api.github.com/users/Avamander/repos", "events_url": "https://api.github.com/users/Avamander/events{/privacy}", "received_events_url": "https://api.github.com/users/Avamander/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-01-02T16:01:39Z", "updated_at": "2018-01-03T17:07:37Z", "closed_at": "2018-01-02T21:04:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "This part of the validation code https://github.com/lepture/flask-wtf/blob/0598f96f70a695d5f84c05a9f4e11feff1d64caa/flask_wtf/recaptcha/validators.py#L43\r\n\r\nIt's sending Google servers the wrong IP when the application is being proxied by something like nginx. Replacing `request.remote_addr` with `request.access_route[-1]` should fix the issue when being proxied.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/317", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/317/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/317/events", "html_url": "https://github.com/lepture/flask-wtf/issues/317", "id": 284463965, "node_id": "MDU6SXNzdWUyODQ0NjM5NjU=", "number": 317, "title": "Drop 2.6 and 3.3 support", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-25T18:36:46Z", "updated_at": "2018-02-02T15:16:39Z", "closed_at": "2018-02-02T15:16:17Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Build and test tools have dropped support, so Travis tests fail now.\r\n\r\npallets/meta#24", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/314", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/314/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/314/events", "html_url": "https://github.com/lepture/flask-wtf/issues/314", "id": 281587618, "node_id": "MDU6SXNzdWUyODE1ODc2MTg=", "number": 314, "title": "Documentation error", "user": {"login": "hiphamster", "id": 1666965, "node_id": "MDQ6VXNlcjE2NjY5NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1666965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hiphamster", "html_url": "https://github.com/hiphamster", "followers_url": "https://api.github.com/users/hiphamster/followers", "following_url": "https://api.github.com/users/hiphamster/following{/other_user}", "gists_url": "https://api.github.com/users/hiphamster/gists{/gist_id}", "starred_url": "https://api.github.com/users/hiphamster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hiphamster/subscriptions", "organizations_url": "https://api.github.com/users/hiphamster/orgs", "repos_url": "https://api.github.com/users/hiphamster/repos", "events_url": "https://api.github.com/users/hiphamster/events{/privacy}", "received_events_url": "https://api.github.com/users/hiphamster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-13T00:46:29Z", "updated_at": "2017-12-14T15:12:56Z", "closed_at": "2017-12-14T15:12:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://flask-wtf.readthedocs.io/en/stable/form.html\r\n\r\nIn the file upload code snippet in upload() method, a form object is not being initialized. \r\n\r\ncurrently:\r\n~~~\r\n@app.route('/upload', methods=['GET', 'POST'])\r\ndef upload():\r\n    if form.validate_on_submit():\r\n        f = form.photo.data\r\n        filename = secure_filename(f.filename)\r\n        f.save(os.path.join(\r\n            app.instance_path, 'photos', filename\r\n        ))\r\n        return redirect(url_for('index'))\r\n\r\n    return render_template('upload.html', form=form)\r\n~~~\r\nshould be:\r\n~~~\r\n@app.route('/upload', methods=['GET', 'POST'])\r\ndef upload():\r\n    form = PhotoForm()\r\n    if form.validate_on_submit():\r\n        f = form.photo.data\r\n        filename = secure_filename(f.filename)\r\n        f.save(os.path.join(\r\n            app.instance_path, 'photos', filename\r\n        ))\r\n        return redirect(url_for('index'))\r\n\r\n    return render_template('upload.html', form=form)\r\n~~~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/313", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/313/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/313/events", "html_url": "https://github.com/lepture/flask-wtf/issues/313", "id": 276151021, "node_id": "MDU6SXNzdWUyNzYxNTEwMjE=", "number": 313, "title": "readthedocs is out of date regarding csrf_enabled", "user": {"login": "jeffcjohnson", "id": 585519, "node_id": "MDQ6VXNlcjU4NTUxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/585519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffcjohnson", "html_url": "https://github.com/jeffcjohnson", "followers_url": "https://api.github.com/users/jeffcjohnson/followers", "following_url": "https://api.github.com/users/jeffcjohnson/following{/other_user}", "gists_url": "https://api.github.com/users/jeffcjohnson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffcjohnson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffcjohnson/subscriptions", "organizations_url": "https://api.github.com/users/jeffcjohnson/orgs", "repos_url": "https://api.github.com/users/jeffcjohnson/repos", "events_url": "https://api.github.com/users/jeffcjohnson/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffcjohnson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-22T17:31:43Z", "updated_at": "2017-11-22T18:41:01Z", "closed_at": "2017-11-22T18:41:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [rst](https://github.com/lepture/flask-wtf/blob/master/docs/form.rst) file has been updated:\r\n\r\n```\r\nform = FlaskForm(meta={'csrf': False})\r\n```\r\n\r\nbut [readthedocs](https://flask-wtf.readthedocs.io/en/stable/form.html#module-flask_wtf) still has the deprecated form:\r\n\r\n```\r\nform = FlaskForm(csrf_enabled=False)\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/310", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/310/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/310/events", "html_url": "https://github.com/lepture/flask-wtf/issues/310", "id": 267674667, "node_id": "MDU6SXNzdWUyNjc2NzQ2Njc=", "number": 310, "title": "problem with 0.14.2 on python-2.7.13", "user": {"login": "buzzdeee", "id": 8383396, "node_id": "MDQ6VXNlcjgzODMzOTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8383396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/buzzdeee", "html_url": "https://github.com/buzzdeee", "followers_url": "https://api.github.com/users/buzzdeee/followers", "following_url": "https://api.github.com/users/buzzdeee/following{/other_user}", "gists_url": "https://api.github.com/users/buzzdeee/gists{/gist_id}", "starred_url": "https://api.github.com/users/buzzdeee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/buzzdeee/subscriptions", "organizations_url": "https://api.github.com/users/buzzdeee/orgs", "repos_url": "https://api.github.com/users/buzzdeee/repos", "events_url": "https://api.github.com/users/buzzdeee/events{/privacy}", "received_events_url": "https://api.github.com/users/buzzdeee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-23T13:47:27Z", "updated_at": "2017-11-13T00:08:40Z", "closed_at": "2017-11-13T00:08:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "while looking at updating the OpenBSD package from 0.9.4 to 0.14.2, I run into trouble building the package for python 2.7:\r\n\r\nIn the ports Makefile there is a post-build step:\r\n```\r\npost-build:\r\n        @cd ${WRKSRC}/docs && \\\r\n                ${SETENV} ${MAKE_ENV} ${MAKE_PROGRAM} SPHINXBUILD=sphinx-build${MODPY_BIN_SUFFIX} html\r\n```\r\nwhich basically resembles to cd docs && sphinx-build html\r\n\r\nusing sphinx-build-3 (based on python3) it all just works, but using the sphinx-build based on python 2.7 sphinx-build fails with:\r\n\r\nraise DistributionNotFound(req, requirers)\r\nDistributionNotFound: The 'Flask-WTF' distribution was not found and is\r\nrequired by the application\r\n\r\nSphinx is version: py-sphinx-1.4.8\r\n\r\ncomparing the conf.py from 0.9.4 and the 0.14.2 it seems the newer version has:\r\ndist = get_distribution('Flask-WTF')\r\n\r\nwhereas the older version had version and revision hardcoded.\r\n\r\nThis get_distribution() call works with python3, but not python2, my current workaround is to hardcode the version and revision as done in 0.9.4\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/305", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/305/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/305/events", "html_url": "https://github.com/lepture/flask-wtf/issues/305", "id": 260640242, "node_id": "MDU6SXNzdWUyNjA2NDAyNDI=", "number": 305, "title": "How to modify a FileField by using javascript?", "user": {"login": "selobu", "id": 11469144, "node_id": "MDQ6VXNlcjExNDY5MTQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/11469144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selobu", "html_url": "https://github.com/selobu", "followers_url": "https://api.github.com/users/selobu/followers", "following_url": "https://api.github.com/users/selobu/following{/other_user}", "gists_url": "https://api.github.com/users/selobu/gists{/gist_id}", "starred_url": "https://api.github.com/users/selobu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selobu/subscriptions", "organizations_url": "https://api.github.com/users/selobu/orgs", "repos_url": "https://api.github.com/users/selobu/repos", "events_url": "https://api.github.com/users/selobu/events{/privacy}", "received_events_url": "https://api.github.com/users/selobu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-26T14:16:01Z", "updated_at": "2017-09-26T14:21:56Z", "closed_at": "2017-09-26T14:21:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm attempting to client side image compression before uploading, But how to update the FileField data?\r\n\r\nI like to upload original 5MP images after client side compression but the code it's not modifing the FileField data. The compress image size is less than 1M in the most of cases. \r\n\r\nHere is a minimum example \r\n[imageupload.zip](https://github.com/lepture/flask-wtf/files/1333483/imageupload.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/304", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/304/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/304/events", "html_url": "https://github.com/lepture/flask-wtf/issues/304", "id": 253219779, "node_id": "MDU6SXNzdWUyNTMyMTk3Nzk=", "number": 304, "title": "Depreciation warning is less helpful then it could be", "user": {"login": "fake-name", "id": 1401239, "node_id": "MDQ6VXNlcjE0MDEyMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1401239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fake-name", "html_url": "https://github.com/fake-name", "followers_url": "https://api.github.com/users/fake-name/followers", "following_url": "https://api.github.com/users/fake-name/following{/other_user}", "gists_url": "https://api.github.com/users/fake-name/gists{/gist_id}", "starred_url": "https://api.github.com/users/fake-name/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fake-name/subscriptions", "organizations_url": "https://api.github.com/users/fake-name/orgs", "repos_url": "https://api.github.com/users/fake-name/repos", "events_url": "https://api.github.com/users/fake-name/events{/privacy}", "received_events_url": "https://api.github.com/users/fake-name/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-28T03:48:18Z", "updated_at": "2018-05-02T04:47:00Z", "closed_at": "2018-02-02T15:17:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a kinda dumb issue, but I'm going through a bunch of depreciation warnings, and it's bothering me.\r\n\r\nBasically, If I have out-of-date dependencies, I get error messages from flask like:\r\n\r\n`FlaskWTFDeprecationWarning: \"flask_wtf.Form\" has been renamed to \"FlaskForm\" and will be removed in 1.0.` or `\"flask_wtf.CsrfProtect\" has been renamed to \"CSRFProtect\" and will be removed in 1.0.`\r\n\r\nThe problem here is that *sometimes*, the first aspect of the import is the part that's out of date, sometimes it's the second part of the import, and sometimes it's the entire thing (across multiple flask ext libraries):\r\n\r\n - `from FlaskForm import Form`  (This is common for lots of stuff that was in the `flask.ext.***` namespace\r\n - `from flask_wtf import FlaskForm`  (Correct option, in this case)\r\n - `import FlaskForm`     \r\n\r\nIs there any reason the error message can't be: `FlaskWTFDeprecationWarning: \"flask_wtf.Form\" has been renamed to \"flask_wtf.FlaskForm\" and will be removed in 1.0.`\r\n\r\nI'm not sure how the depreciation warning is getting thrown, but it takes what would normally be a simple replacement and turns it into a \"dig through the docs to figure out what part actually changed\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/303", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/303/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/303/events", "html_url": "https://github.com/lepture/flask-wtf/issues/303", "id": 249879637, "node_id": "MDU6SXNzdWUyNDk4Nzk2Mzc=", "number": 303, "title": "How to use the built-in translations provided by WTForms", "user": {"login": "greyli", "id": 12967000, "node_id": "MDQ6VXNlcjEyOTY3MDAw", "avatar_url": "https://avatars3.githubusercontent.com/u/12967000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greyli", "html_url": "https://github.com/greyli", "followers_url": "https://api.github.com/users/greyli/followers", "following_url": "https://api.github.com/users/greyli/following{/other_user}", "gists_url": "https://api.github.com/users/greyli/gists{/gist_id}", "starred_url": "https://api.github.com/users/greyli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greyli/subscriptions", "organizations_url": "https://api.github.com/users/greyli/orgs", "repos_url": "https://api.github.com/users/greyli/repos", "events_url": "https://api.github.com/users/greyli/events{/privacy}", "received_events_url": "https://api.github.com/users/greyli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-08-13T15:13:42Z", "updated_at": "2018-01-14T01:33:15Z", "closed_at": "2018-01-14T01:33:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As describe in WTForms's documentation [here](http://wtforms.readthedocs.io/en/latest/i18n.html#using-the-built-in-translations-provider), we can define a base class to set the default locale app-widely:\r\n```python\r\nfrom wtforms import Form\r\n\r\nclass MyBaseForm(Form):\r\n    class Meta:\r\n        locales = ['es_ES', 'es']\r\n```\r\nHow to achieve this with Flask-WTF?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/301", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/301/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/301/events", "html_url": "https://github.com/lepture/flask-wtf/issues/301", "id": 249792149, "node_id": "MDU6SXNzdWUyNDk3OTIxNDk=", "number": 301, "title": "Caching per-request token on flask.g is problematic", "user": {"login": "rsyring", "id": 109467, "node_id": "MDQ6VXNlcjEwOTQ2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/109467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsyring", "html_url": "https://github.com/rsyring", "followers_url": "https://api.github.com/users/rsyring/followers", "following_url": "https://api.github.com/users/rsyring/following{/other_user}", "gists_url": "https://api.github.com/users/rsyring/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsyring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsyring/subscriptions", "organizations_url": "https://api.github.com/users/rsyring/orgs", "repos_url": "https://api.github.com/users/rsyring/repos", "events_url": "https://api.github.com/users/rsyring/events{/privacy}", "received_events_url": "https://api.github.com/users/rsyring/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-12T06:17:21Z", "updated_at": "2017-10-22T21:54:34Z", "closed_at": "2017-10-22T21:54:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "In https://github.com/lepture/flask-wtf/commit/653f662306b65b81e301cae45e42474cd1652609 a change was made to start caching the csrf_token on `flask.g` instead of `flask.request`.  However, `flask.g` is application level in scope since v0.10:\r\n\r\n> Starting with Flask 0.10 this is stored on the application context and no longer on the request context \r\n\r\nhttp://flask.pocoo.org/docs/0.12/api/#flask.g\r\n\r\nThis makes it impossible for subsequent requests to work with the CSRF token because once the token has been generated for an application instance, and saved in that request's session, no other subsequent requests will cause a session to be generated, thereby preventing CSRF from working for things like form fields.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/299", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/299/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/299/events", "html_url": "https://github.com/lepture/flask-wtf/issues/299", "id": 245971497, "node_id": "MDU6SXNzdWUyNDU5NzE0OTc=", "number": 299, "title": "To use the form binding the request.form and models, request and the model must be an iterator object in 0.14?", "user": {"login": "blacklin", "id": 3355876, "node_id": "MDQ6VXNlcjMzNTU4NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3355876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blacklin", "html_url": "https://github.com/blacklin", "followers_url": "https://api.github.com/users/blacklin/followers", "following_url": "https://api.github.com/users/blacklin/following{/other_user}", "gists_url": "https://api.github.com/users/blacklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/blacklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blacklin/subscriptions", "organizations_url": "https://api.github.com/users/blacklin/orgs", "repos_url": "https://api.github.com/users/blacklin/repos", "events_url": "https://api.github.com/users/blacklin/events{/privacy}", "received_events_url": "https://api.github.com/users/blacklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-27T08:59:10Z", "updated_at": "2017-07-27T13:15:42Z", "closed_at": "2017-07-27T13:15:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/296", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/296/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/296/events", "html_url": "https://github.com/lepture/flask-wtf/issues/296", "id": 234241423, "node_id": "MDU6SXNzdWUyMzQyNDE0MjM=", "number": 296, "title": "How to validate a FileField data is not None?", "user": {"login": "ecod", "id": 6555266, "node_id": "MDQ6VXNlcjY1NTUyNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6555266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecod", "html_url": "https://github.com/ecod", "followers_url": "https://api.github.com/users/ecod/followers", "following_url": "https://api.github.com/users/ecod/following{/other_user}", "gists_url": "https://api.github.com/users/ecod/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecod/subscriptions", "organizations_url": "https://api.github.com/users/ecod/orgs", "repos_url": "https://api.github.com/users/ecod/repos", "events_url": "https://api.github.com/users/ecod/events{/privacy}", "received_events_url": "https://api.github.com/users/ecod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-07T15:03:55Z", "updated_at": "2017-06-08T01:30:13Z", "closed_at": "2017-06-07T15:28:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have searched the question, but I haven't yet found the answer.\r\n\r\nFor example,\r\n```\r\ndef edit():\r\n    form = EditForm()\r\n    f = form.file.data\r\n```\r\n\r\nHow do I check if the f exists?\r\n\r\nI tried\r\n\r\n`if f is not None`\r\n\r\nunfortunelly, it doesn't work.\r\n\r\nNow I used \r\n`len(f.filename) > 0`\r\n, it works.\r\n\r\nIs there another solution?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/295", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/295/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/295/events", "html_url": "https://github.com/lepture/flask-wtf/issues/295", "id": 233762606, "node_id": "MDU6SXNzdWUyMzM3NjI2MDY=", "number": 295, "title": "Length validator crash when post wrong data type.", "user": {"login": "nnnewb", "id": 16402753, "node_id": "MDQ6VXNlcjE2NDAyNzUz", "avatar_url": "https://avatars2.githubusercontent.com/u/16402753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnnewb", "html_url": "https://github.com/nnnewb", "followers_url": "https://api.github.com/users/nnnewb/followers", "following_url": "https://api.github.com/users/nnnewb/following{/other_user}", "gists_url": "https://api.github.com/users/nnnewb/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnnewb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnnewb/subscriptions", "organizations_url": "https://api.github.com/users/nnnewb/orgs", "repos_url": "https://api.github.com/users/nnnewb/repos", "events_url": "https://api.github.com/users/nnnewb/events{/privacy}", "received_events_url": "https://api.github.com/users/nnnewb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-06T02:31:37Z", "updated_at": "2017-06-06T02:42:19Z", "closed_at": "2017-06-06T02:42:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n#!/usr/bin/env python3\r\n# -*- coding: utf-8 -*-\r\n\"\"\" test given invalid data type\r\n\"\"\"\r\n\r\nfrom flask import Flask\r\nfrom flask_wtf import FlaskForm\r\nfrom wtforms.validators import Length\r\nfrom wtforms import StringField\r\n\r\n\r\nclass TestForm(FlaskForm):\r\n    \"\"\" try this form\r\n    \"\"\"\r\n    test = StringField(\r\n        'test',\r\n        validators=[\r\n            Length(2, 32, 'this message never show')\r\n        ]\r\n    )\r\n\r\napp = Flask('app')\r\n\r\n\r\n@app.route('/test', methods=['POST'])\r\ndef test_view():\r\n    form = TestForm()\r\n    if form.validate_on_submit():\r\n        return 'good'\r\n    return 'opps'\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.config['SECRET_KEY'] = 'secret'\r\n    app.run(port=4321)\r\n```\r\n\r\ntest code\r\n```bash\r\ncurl -l -H 'Content-Type: application/json' -X POST -d '{\"test\": 0.1}' 'http://localhost:4321/\r\n```\r\nand crash log here\r\n```\r\n[2017-06-06 10:28:26,335] ERROR in app: Exception on /test [POST]\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1612, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1598, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/home/______/github/test/server.py\", line 28, in test_view\r\n    if form.validate_on_submit():\r\n  File \"/usr/local/lib/python2.7/dist-packages/flask_wtf/form.py\", line 101, in validate_on_submit\r\n    return self.is_submitted() and self.validate()\r\n  File \"/usr/local/lib/python2.7/dist-packages/wtforms/form.py\", line 310, in validate\r\n    return super(Form, self).validate(extra)\r\n  File \"/usr/local/lib/python2.7/dist-packages/wtforms/form.py\", line 152, in validate\r\n    if not field.validate(self, extra):\r\n  File \"/usr/local/lib/python2.7/dist-packages/wtforms/fields/core.py\", line 204, in validate\r\n    stop_validation = self._run_validation_chain(form, chain)\r\n  File \"/usr/local/lib/python2.7/dist-packages/wtforms/fields/core.py\", line 224, in _run_validation_chain\r\n    validator(form, self)\r\n  File \"/usr/local/lib/python2.7/dist-packages/wtforms/validators.py\", line 92, in __call__\r\n    l = field.data and len(field.data) or 0\r\nTypeError: object of type 'float' has no len()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/294", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/294/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/294/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/294/events", "html_url": "https://github.com/lepture/flask-wtf/issues/294", "id": 233526438, "node_id": "MDU6SXNzdWUyMzM1MjY0Mzg=", "number": 294, "title": "csrf.exempt Inoperation", "user": {"login": "huanglong123", "id": 9289974, "node_id": "MDQ6VXNlcjkyODk5NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9289974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huanglong123", "html_url": "https://github.com/huanglong123", "followers_url": "https://api.github.com/users/huanglong123/followers", "following_url": "https://api.github.com/users/huanglong123/following{/other_user}", "gists_url": "https://api.github.com/users/huanglong123/gists{/gist_id}", "starred_url": "https://api.github.com/users/huanglong123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huanglong123/subscriptions", "organizations_url": "https://api.github.com/users/huanglong123/orgs", "repos_url": "https://api.github.com/users/huanglong123/repos", "events_url": "https://api.github.com/users/huanglong123/events{/privacy}", "received_events_url": "https://api.github.com/users/huanglong123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-05T08:35:26Z", "updated_at": "2017-06-05T12:05:23Z", "closed_at": "2017-06-05T12:05:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use csrf.exempt in my view,but not take effect\r\n\r\n@frontend.route('/admin/')\r\n@login_required\r\n@csrf.exempt\r\ndef admin():\r\n    return render_template('frontend/admin.html')\r\n\r\n\r\n<form method=\"post\" action=\"{{ url_for('frontend.admin') }}\">\r\n       <input type=\"text\" name=\"test\">\r\n       <input type=\"submit\" value=\"\u63d0\u4ea4\">\r\n</form>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/293", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/293/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/293/events", "html_url": "https://github.com/lepture/flask-wtf/issues/293", "id": 230735819, "node_id": "MDU6SXNzdWUyMzA3MzU4MTk=", "number": 293, "title": "Is it OK to serve CSRF token from JSON REST endpoint?", "user": {"login": "davidthornton", "id": 3423168, "node_id": "MDQ6VXNlcjM0MjMxNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3423168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidthornton", "html_url": "https://github.com/davidthornton", "followers_url": "https://api.github.com/users/davidthornton/followers", "following_url": "https://api.github.com/users/davidthornton/following{/other_user}", "gists_url": "https://api.github.com/users/davidthornton/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidthornton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidthornton/subscriptions", "organizations_url": "https://api.github.com/users/davidthornton/orgs", "repos_url": "https://api.github.com/users/davidthornton/repos", "events_url": "https://api.github.com/users/davidthornton/events{/privacy}", "received_events_url": "https://api.github.com/users/davidthornton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-23T14:50:21Z", "updated_at": "2017-05-23T15:24:33Z", "closed_at": "2017-05-23T15:24:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I understand this page to mean that http://flask-wtf.readthedocs.io/en/stable/csrf.html the app server which serves the HTML must be the same app server against which the \"AJAX\" calls are being made.\r\n\r\nHowever, I'm serving my pages from S3 to make them load a bit faster than if they were served from the app server. In that case, I can't include a CSRF token on those static assets! What I've done is \"mocked out\" essentially the GET call to the form by exposing a JSON REST endpoint like so:\r\n\r\n```\r\nfrom flask import Blueprint, jsonify\r\nfrom flask_wtf.csrf import generate_csrf\r\n\r\ncsrf = Blueprint('csrf', __name__)\r\n\r\n\r\n@csrf.route('/csrf', methods=['GET'])\r\ndef get_csrf_token():\r\n    return jsonify({\r\n        'csrf_token': generate_csrf(),\r\n    })\r\n```\r\n\r\nMy question is, does this endpoint work exactly as though the form were requested with an `Accept: text/html` header?\r\n\r\nDoes it expose my app to any vulnerabilities I am not aware of? If not, would this package benefit from a pull request that implements this functionality in a reusable way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/292", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/292/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/292/events", "html_url": "https://github.com/lepture/flask-wtf/issues/292", "id": 228487237, "node_id": "MDU6SXNzdWUyMjg0ODcyMzc=", "number": 292, "title": "Boolean Field not rendered with quick_form", "user": {"login": "lormayna", "id": 5850251, "node_id": "MDQ6VXNlcjU4NTAyNTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5850251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lormayna", "html_url": "https://github.com/lormayna", "followers_url": "https://api.github.com/users/lormayna/followers", "following_url": "https://api.github.com/users/lormayna/following{/other_user}", "gists_url": "https://api.github.com/users/lormayna/gists{/gist_id}", "starred_url": "https://api.github.com/users/lormayna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lormayna/subscriptions", "organizations_url": "https://api.github.com/users/lormayna/orgs", "repos_url": "https://api.github.com/users/lormayna/repos", "events_url": "https://api.github.com/users/lormayna/events{/privacy}", "received_events_url": "https://api.github.com/users/lormayna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-13T17:24:38Z", "updated_at": "2017-05-13T18:24:42Z", "closed_at": "2017-05-13T18:24:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm try to render a simple form with flask-wtf and quick_forms.\r\nThis is my  form:\r\n`class SignupForm(FlaskForm):\r\n\r\n    username = StringField('Username', [validators.Length(min=4, max=25)])\r\n\r\n    accept_tos = BooleanField('I accept the TOS', [validators.DataRequired()])\r\n\r\n    prefs = BooleanField()`\r\n\r\nThis is the template:\r\n{{ wtf.quick_form(form, action=\"/signup\") }}\r\n\r\n\r\nUnfortunately the BooleanFields are not rendered. All the other fields look correct.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/291", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/291/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/291/events", "html_url": "https://github.com/lepture/flask-wtf/issues/291", "id": 227103050, "node_id": "MDU6SXNzdWUyMjcxMDMwNTA=", "number": 291, "title": "How would I validate GET form?", "user": {"login": "minimedj", "id": 3855032, "node_id": "MDQ6VXNlcjM4NTUwMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3855032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minimedj", "html_url": "https://github.com/minimedj", "followers_url": "https://api.github.com/users/minimedj/followers", "following_url": "https://api.github.com/users/minimedj/following{/other_user}", "gists_url": "https://api.github.com/users/minimedj/gists{/gist_id}", "starred_url": "https://api.github.com/users/minimedj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minimedj/subscriptions", "organizations_url": "https://api.github.com/users/minimedj/orgs", "repos_url": "https://api.github.com/users/minimedj/repos", "events_url": "https://api.github.com/users/minimedj/events{/privacy}", "received_events_url": "https://api.github.com/users/minimedj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-08T16:34:39Z", "updated_at": "2017-05-10T08:59:26Z", "closed_at": "2017-05-08T16:50:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason I need to send my form with GET method.\r\n\r\nAny idea of how I can validate it with WTForms?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/290", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/290/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/290/events", "html_url": "https://github.com/lepture/flask-wtf/issues/290", "id": 223682154, "node_id": "MDU6SXNzdWUyMjM2ODIxNTQ=", "number": 290, "title": "Google Place Autocomplete API", "user": {"login": "v-ken", "id": 5682879, "node_id": "MDQ6VXNlcjU2ODI4Nzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5682879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/v-ken", "html_url": "https://github.com/v-ken", "followers_url": "https://api.github.com/users/v-ken/followers", "following_url": "https://api.github.com/users/v-ken/following{/other_user}", "gists_url": "https://api.github.com/users/v-ken/gists{/gist_id}", "starred_url": "https://api.github.com/users/v-ken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/v-ken/subscriptions", "organizations_url": "https://api.github.com/users/v-ken/orgs", "repos_url": "https://api.github.com/users/v-ken/repos", "events_url": "https://api.github.com/users/v-ken/events{/privacy}", "received_events_url": "https://api.github.com/users/v-ken/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-24T01:09:30Z", "updated_at": "2017-04-24T04:18:56Z", "closed_at": "2017-04-24T03:25:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, just wondering if anyone can point me in the right direction on implementing a Google Place Autocomplete search field using WTForms?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/289", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/289/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/289/events", "html_url": "https://github.com/lepture/flask-wtf/issues/289", "id": 221522538, "node_id": "MDU6SXNzdWUyMjE1MjI1Mzg=", "number": 289, "title": "no reset form button", "user": {"login": "irfan-zoefit", "id": 26932490, "node_id": "MDQ6VXNlcjI2OTMyNDkw", "avatar_url": "https://avatars1.githubusercontent.com/u/26932490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irfan-zoefit", "html_url": "https://github.com/irfan-zoefit", "followers_url": "https://api.github.com/users/irfan-zoefit/followers", "following_url": "https://api.github.com/users/irfan-zoefit/following{/other_user}", "gists_url": "https://api.github.com/users/irfan-zoefit/gists{/gist_id}", "starred_url": "https://api.github.com/users/irfan-zoefit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irfan-zoefit/subscriptions", "organizations_url": "https://api.github.com/users/irfan-zoefit/orgs", "repos_url": "https://api.github.com/users/irfan-zoefit/repos", "events_url": "https://api.github.com/users/irfan-zoefit/events{/privacy}", "received_events_url": "https://api.github.com/users/irfan-zoefit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-13T10:30:23Z", "updated_at": "2017-04-13T10:50:35Z", "closed_at": "2017-04-13T10:50:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "there should be a reset form button to refresh the form or clear the form.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/288", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/288/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/288/events", "html_url": "https://github.com/lepture/flask-wtf/issues/288", "id": 218510692, "node_id": "MDU6SXNzdWUyMTg1MTA2OTI=", "number": 288, "title": "ERROR in views: The referrer header is missing.", "user": {"login": "rlam3", "id": 1154044, "node_id": "MDQ6VXNlcjExNTQwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1154044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlam3", "html_url": "https://github.com/rlam3", "followers_url": "https://api.github.com/users/rlam3/followers", "following_url": "https://api.github.com/users/rlam3/following{/other_user}", "gists_url": "https://api.github.com/users/rlam3/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlam3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlam3/subscriptions", "organizations_url": "https://api.github.com/users/rlam3/orgs", "repos_url": "https://api.github.com/users/rlam3/repos", "events_url": "https://api.github.com/users/rlam3/events{/privacy}", "received_events_url": "https://api.github.com/users/rlam3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-31T13:59:17Z", "updated_at": "2017-12-21T16:09:05Z", "closed_at": "2017-12-21T16:09:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use CSRFToken with SSL. I'm getting the following error\r\n\r\n```python\r\nERROR in views: The referrer header is missing.\r\n```\r\n\r\nThe following is my nginx config file \r\n\r\n```nginx\r\n# Http will always redirect me back to https\r\nserver {\r\n    listen 80 default_server;\r\n    listen [::]:80 default_server;\r\n\r\n    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.\r\n    rewrite ^(.*) https://$host$request_uri;\r\n}\r\n\r\n# HTTPS server\r\nserver {\r\n\r\n  listen 443 ssl;\r\n  listen [::]:443;\r\n  server_name alpha.example.com example.com;\r\n\r\n  root /home/XXX/www/example_app/example_app;\r\n\r\n  access_log /var/log/nginx/exampele.com.access.log combined;\r\n  error_log /var/log/nginx/exampele.com.error.log error;\r\n\r\n  ssl on;\r\n  ssl_certificate /etc/nginx/ssl/example.com/cert.pem;\r\n  ssl_certificate_key /etc/nginx/ssl/example.com/key.pem;\r\n\r\n  ssl_session_timeout 1d;\r\n  ssl_session_cache shared:SSL:50m;\r\n\r\n  ssl_protocols TLSv1.2;\r\n  ssl_ciphers EECDH+AESGCM:EECDH+AES;\r\n  ssl_ecdh_curve secp384r1;\r\n  ssl_prefer_server_ciphers on;\r\n\r\n  ssl_stapling on;\r\n  ssl_stapling_verify on;\r\n\r\n  add_header Strict-Transport-Security \"max-age=15768000; includeSubdomains; preload\";\r\n  add_header X-Frame-Options DENY;\r\n  add_header X-Content-Type-Options nosniff;\r\n\r\n\r\n  location /robots.txt {\r\n    alias /home/XXX/www/example_app/example_app/static/build/robots.txt;\r\n    expires 30d;\r\n    add_header Cache-Control \"public\";\r\n  }\r\n\r\n  proxy_buffer_size 128k;\r\n  proxy_buffers 4 256k;\r\n  proxy_busy_buffers_size 256k;\r\n\r\n  charset utf-8;\r\n  client_max_body_size 75M;\r\n\r\n  location / {\r\n\r\n      proxy_pass_header X-CSRFToken;\r\n\r\n      include uwsgi_params;\r\n      uwsgi_pass unix:///tmp/example_app.sock;\r\n\r\n  }\r\n\r\n  # serve static files - each entry is a separate folder\r\n  location ~ ^/(img|js|css)/  {\r\n    # Directly assigning to built assets instead of alias\r\n    root /home/XXX/www/example_app/example_app/static/build;\r\n    autoindex on;\r\n    add_header Cache-Control \"public\";\r\n    expires 30d;\r\n  }\r\n\r\n}\r\n```\r\n\r\nThe traceback:\r\n\r\n```\r\n[2017-03-31 13:53:06,205] ERROR in views: The referrer header is missing.\r\nTraceback (most recent call last):\r\n  File \"/home/XXX/www/env/local/lib/python2.7/site-packages/flask/app.py\", line 1610, in full_dispatch_request\r\n    rv = self.preprocess_request()\r\n  File \"/home/XXX/www/env/local/lib/python2.7/site-packages/flask/app.py\", line 1831, in preprocess_request\r\n    rv = func()\r\n  File \"/home/XXX/www/env/local/lib/python2.7/site-packages/flask_wtf/csrf.py\", line 221, in csrf_protect\r\n    self.protect()\r\n  File \"/home/XXX/www/env/local/lib/python2.7/site-packages/flask_wtf/csrf.py\", line 256, in protect\r\n    self._error_response('The referrer header is missing.')\r\n  File \"/home/XXX/www/env/local/lib/python2.7/site-packages/flask_wtf/csrf.py\", line 324, in handler\r\n    response = current_app.make_response(view(reason))\r\n  File \"./example/error_handler/views.py\", line 126, in csrf_error\r\n    raise InvalidAPIUsage(message=error, status_code=400)\r\nInvalidAPIUsage\r\n\r\n```\r\n\r\nWhen I am not using https/ssl this error does not occur. I'm assuming there is some sort of proxy that I have to enable for my other headers such as Authorization, etc. my API to work? Would love to hear what feedback there is to this strange issue with SSL.\r\n\r\nThanks! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/286", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/286/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/286/events", "html_url": "https://github.com/lepture/flask-wtf/issues/286", "id": 215620722, "node_id": "MDU6SXNzdWUyMTU2MjA3MjI=", "number": 286, "title": "import RecaptchaField", "user": {"login": "slippers", "id": 1882613, "node_id": "MDQ6VXNlcjE4ODI2MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1882613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slippers", "html_url": "https://github.com/slippers", "followers_url": "https://api.github.com/users/slippers/followers", "following_url": "https://api.github.com/users/slippers/following{/other_user}", "gists_url": "https://api.github.com/users/slippers/gists{/gist_id}", "starred_url": "https://api.github.com/users/slippers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slippers/subscriptions", "organizations_url": "https://api.github.com/users/slippers/orgs", "repos_url": "https://api.github.com/users/slippers/repos", "events_url": "https://api.github.com/users/slippers/events{/privacy}", "received_events_url": "https://api.github.com/users/slippers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-21T03:41:14Z", "updated_at": "2017-04-28T22:17:55Z", "closed_at": "2017-04-28T22:17:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "the help for RecaptchaField is importing from the wrong place:)  moved to flask_wtf.recaptcha.  \r\n\r\ni can't seem to find where to change this in the docs.\r\n\r\n[Recaptcha](https://flask-wtf.readthedocs.io/en/stable/form.html#)\r\n\r\n```\r\nfrom flask_wtf import FlaskForm, RecaptchaField\r\n```\r\nshould be\r\n```\r\nfrom flask_wtf.recaptcha import RecaptchaField\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/285", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/285/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/285/events", "html_url": "https://github.com/lepture/flask-wtf/issues/285", "id": 215359684, "node_id": "MDU6SXNzdWUyMTUzNTk2ODQ=", "number": 285, "title": "WTF_CSRF_SSL_STRICT with subdomains", "user": {"login": "roganov", "id": 1858503, "node_id": "MDQ6VXNlcjE4NTg1MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1858503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roganov", "html_url": "https://github.com/roganov", "followers_url": "https://api.github.com/users/roganov/followers", "following_url": "https://api.github.com/users/roganov/following{/other_user}", "gists_url": "https://api.github.com/users/roganov/gists{/gist_id}", "starred_url": "https://api.github.com/users/roganov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roganov/subscriptions", "organizations_url": "https://api.github.com/users/roganov/orgs", "repos_url": "https://api.github.com/users/roganov/repos", "events_url": "https://api.github.com/users/roganov/events{/privacy}", "received_events_url": "https://api.github.com/users/roganov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-20T09:00:30Z", "updated_at": "2018-01-01T07:45:16Z", "closed_at": "2018-01-01T07:45:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently referrer checking fails if hosts don't match exactly, which is not desirable for applications that use subdomains.\r\nTo address this, we can either introduce a new configuration option that specifically allows subdomains, or alternatively referrers can be \"normalized\" to `flask.SERVER_NAME` and then checked, though I'm not sure if this is secure.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/284", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/284/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/284/events", "html_url": "https://github.com/lepture/flask-wtf/issues/284", "id": 213156123, "node_id": "MDU6SXNzdWUyMTMxNTYxMjM=", "number": 284, "title": "X-CSRFToken checking is case sensitive", "user": {"login": "veggiedefender", "id": 8890878, "node_id": "MDQ6VXNlcjg4OTA4Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/8890878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/veggiedefender", "html_url": "https://github.com/veggiedefender", "followers_url": "https://api.github.com/users/veggiedefender/followers", "following_url": "https://api.github.com/users/veggiedefender/following{/other_user}", "gists_url": "https://api.github.com/users/veggiedefender/gists{/gist_id}", "starred_url": "https://api.github.com/users/veggiedefender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/veggiedefender/subscriptions", "organizations_url": "https://api.github.com/users/veggiedefender/orgs", "repos_url": "https://api.github.com/users/veggiedefender/repos", "events_url": "https://api.github.com/users/veggiedefender/events{/privacy}", "received_events_url": "https://api.github.com/users/veggiedefender/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-09T20:30:26Z", "updated_at": "2018-04-11T19:39:34Z", "closed_at": "2017-03-10T01:07:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [HTTP spec](https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html) (section 4.2) states that header field names are case insensitive. But since flask-wtf gets the header from a [dictionary](https://github.com/lepture/flask-wtf/blob/master/flask_wtf/csrf.py#L185-L187), it only accepts csrf tokens with the correct capitalization.\r\n\r\nThis looks like a really minor detail but [fetch](https://fetch.spec.whatwg.org/#terminology-headers) which appears to be the successor of xmlhttprequests automatically lowercases headers without an option to preserve case, making fetch pretty much incompatible with flask-wtf in terms of sending over csrf tokens.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/282", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/282/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/282/events", "html_url": "https://github.com/lepture/flask-wtf/issues/282", "id": 208291482, "node_id": "MDU6SXNzdWUyMDgyOTE0ODI=", "number": 282, "title": "Use Case: flask-wtf csrf protection in Angular 2 Application", "user": {"login": "TheJimFactor", "id": 5199164, "node_id": "MDQ6VXNlcjUxOTkxNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5199164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheJimFactor", "html_url": "https://github.com/TheJimFactor", "followers_url": "https://api.github.com/users/TheJimFactor/followers", "following_url": "https://api.github.com/users/TheJimFactor/following{/other_user}", "gists_url": "https://api.github.com/users/TheJimFactor/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheJimFactor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheJimFactor/subscriptions", "organizations_url": "https://api.github.com/users/TheJimFactor/orgs", "repos_url": "https://api.github.com/users/TheJimFactor/repos", "events_url": "https://api.github.com/users/TheJimFactor/events{/privacy}", "received_events_url": "https://api.github.com/users/TheJimFactor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-17T00:15:16Z", "updated_at": "2017-02-17T01:53:53Z", "closed_at": "2017-02-17T00:38:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to enable csrf protection in an angular 2 application? I don't use flask to render any templates, so I can't get the csrf token via  `{{ csrf_token() }}` or `{{ form.csrf_token }}`.\r\n\r\nThe stack is: nginx to serve up the Angular 2 application, then a reverse proxy for the flask application, that is validating form data being sent to it. The flask application only sends/receives form data/json and never renders a template.\r\n\r\nIt was recommended to simply expose the CSRF via a get method - http://flask.pocoo.org/snippets/3/ \r\n\r\n> Just define a GET method which returns the CSRF token.\r\n\r\nIs there a way to grab a csrf token from flask-wtf's csrf extension??", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/280", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/280/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/280/events", "html_url": "https://github.com/lepture/flask-wtf/issues/280", "id": 204098664, "node_id": "MDU6SXNzdWUyMDQwOTg2NjQ=", "number": 280, "title": "Handling CSRF with SPA", "user": {"login": "imaia", "id": 14771411, "node_id": "MDQ6VXNlcjE0NzcxNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/14771411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imaia", "html_url": "https://github.com/imaia", "followers_url": "https://api.github.com/users/imaia/followers", "following_url": "https://api.github.com/users/imaia/following{/other_user}", "gists_url": "https://api.github.com/users/imaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/imaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imaia/subscriptions", "organizations_url": "https://api.github.com/users/imaia/orgs", "repos_url": "https://api.github.com/users/imaia/repos", "events_url": "https://api.github.com/users/imaia/events{/privacy}", "received_events_url": "https://api.github.com/users/imaia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-30T18:59:30Z", "updated_at": "2017-02-01T14:10:32Z", "closed_at": "2017-01-30T19:51:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a suggested approach to handle CSRF with SPA? Imagine that your website is made of static files + a flask api. As the pages are served by the http server directly, there is no way for flask to setup the csrf tag. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/279", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/279/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/279/events", "html_url": "https://github.com/lepture/flask-wtf/issues/279", "id": 203035865, "node_id": "MDU6SXNzdWUyMDMwMzU4NjU=", "number": 279, "title": "TypeError: b'' is not JSON serializable", "user": {"login": "yerassyl", "id": 6124550, "node_id": "MDQ6VXNlcjYxMjQ1NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6124550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yerassyl", "html_url": "https://github.com/yerassyl", "followers_url": "https://api.github.com/users/yerassyl/followers", "following_url": "https://api.github.com/users/yerassyl/following{/other_user}", "gists_url": "https://api.github.com/users/yerassyl/gists{/gist_id}", "starred_url": "https://api.github.com/users/yerassyl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yerassyl/subscriptions", "organizations_url": "https://api.github.com/users/yerassyl/orgs", "repos_url": "https://api.github.com/users/yerassyl/repos", "events_url": "https://api.github.com/users/yerassyl/events{/privacy}", "received_events_url": "https://api.github.com/users/yerassyl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-01-25T08:01:39Z", "updated_at": "2018-08-20T06:09:51Z", "closed_at": "2017-01-25T14:56:08Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "While using python 3.5.2 I got this error: TypeError: b'' is not JSON serializable\r\nSo there is a problem with serializing a byte string\r\nFor me I solved it this way editing csrf.py generate_csrf method:\r\n        setattr(g, field_name, s.dumps(session[field_name].decode('utf-8')))\r\nI added .decode('utf-8') to session[field_name] to make it work on python 3.\r\n\r\nI am not sure if this is an issue, but may be I helped somehow :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/278", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/278/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/278/events", "html_url": "https://github.com/lepture/flask-wtf/issues/278", "id": 199767542, "node_id": "MDU6SXNzdWUxOTk3Njc1NDI=", "number": 278, "title": "Meta passed to FlaskForm init may be None", "user": {"login": "virlos", "id": 14909622, "node_id": "MDQ6VXNlcjE0OTA5NjIy", "avatar_url": "https://avatars1.githubusercontent.com/u/14909622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/virlos", "html_url": "https://github.com/virlos", "followers_url": "https://api.github.com/users/virlos/followers", "following_url": "https://api.github.com/users/virlos/following{/other_user}", "gists_url": "https://api.github.com/users/virlos/gists{/gist_id}", "starred_url": "https://api.github.com/users/virlos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/virlos/subscriptions", "organizations_url": "https://api.github.com/users/virlos/orgs", "repos_url": "https://api.github.com/users/virlos/repos", "events_url": "https://api.github.com/users/virlos/events{/privacy}", "received_events_url": "https://api.github.com/users/virlos/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 513012, "node_id": "MDU6TGFiZWw1MTMwMTI=", "url": "https://api.github.com/repos/lepture/flask-wtf/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/lepture/flask-wtf/milestones/4", "html_url": "https://github.com/lepture/flask-wtf/milestone/4", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/milestones/4/labels", "id": 2240283, "node_id": "MDk6TWlsZXN0b25lMjI0MDI4Mw==", "number": 4, "title": "v0.14.2", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "closed", "created_at": "2017-01-10T10:08:55Z", "updated_at": "2017-01-10T10:09:16Z", "due_on": null, "closed_at": "2017-01-10T10:09:16Z"}, "comments": 3, "created_at": "2017-01-10T09:11:37Z", "updated_at": "2017-01-10T10:09:46Z", "closed_at": "2017-01-10T10:07:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "The definition of Form at http://wtforms.readthedocs.io/en/latest/forms.html#wtforms.form.Form.__init__ has meta=None, which should be preserved by subclasses.\r\n\r\nSince 0.14, Flask-WTF assumes that meta is a dict if present in kwargs. This breaks wtforms-json, which preserve the WTForms default.\r\n\r\nSee also https://github.com/kvesteri/wtforms-json/issues/47.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/276", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/276/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/276/events", "html_url": "https://github.com/lepture/flask-wtf/issues/276", "id": 199634248, "node_id": "MDU6SXNzdWUxOTk2MzQyNDg=", "number": 276, "title": "Validation (FileAllowed) issue upgrading 0.13.1 -> 0.14", "user": {"login": "docapotamus", "id": 1929544, "node_id": "MDQ6VXNlcjE5Mjk1NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1929544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/docapotamus", "html_url": "https://github.com/docapotamus", "followers_url": "https://api.github.com/users/docapotamus/followers", "following_url": "https://api.github.com/users/docapotamus/following{/other_user}", "gists_url": "https://api.github.com/users/docapotamus/gists{/gist_id}", "starred_url": "https://api.github.com/users/docapotamus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/docapotamus/subscriptions", "organizations_url": "https://api.github.com/users/docapotamus/orgs", "repos_url": "https://api.github.com/users/docapotamus/repos", "events_url": "https://api.github.com/users/docapotamus/events{/privacy}", "received_events_url": "https://api.github.com/users/docapotamus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 513012, "node_id": "MDU6TGFiZWw1MTMwMTI=", "url": "https://api.github.com/repos/lepture/flask-wtf/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/lepture/flask-wtf/milestones/3", "html_url": "https://github.com/lepture/flask-wtf/milestone/3", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/milestones/3/labels", "id": 2238417, "node_id": "MDk6TWlsZXN0b25lMjIzODQxNw==", "number": 3, "title": "v0.14.1", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "closed", "created_at": "2017-01-09T19:28:38Z", "updated_at": "2017-01-10T10:08:44Z", "due_on": null, "closed_at": "2017-01-10T10:08:44Z"}, "comments": 13, "created_at": "2017-01-09T19:01:28Z", "updated_at": "2017-09-11T20:10:02Z", "closed_at": "2017-01-10T07:02:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I upgraded Flask-WTF last night from 0.13.1 -> 0.14\r\n\r\nThe issue I have is that when the FileField is blank (if the user chooses not to upload an image) then the validation fails. I do not require the field.\r\n\r\n```python\r\nclass PostForm(FlaskForm):\r\n    \"\"\"Handle the input from the web for posts and replies.\"\"\"\r\n    body = TextAreaField('Post')\r\n\r\n    upload = FileField('Upload', [\r\n        FileAllowed(['gif', 'jpg', 'jpeg', 'png'],\r\n                    'Only \"gif\", \"jpg\", \"jpeg\" and \"png\" files are supported')\r\n    ])\r\n\r\n    permission = RadioField('Permission', choices=[\r\n        ('0', 'Public'),\r\n        ('1', 'Pjuu'),\r\n        ('2', 'Approved')\r\n    ], default=0)\r\n\r\n    def validate_body(self, field):\r\n        if len(field.data.strip()) == 0 and not self.upload.data:\r\n            raise ValidationError('Sorry. A message or an image is required.')\r\n\r\n        if len(field.data.replace('\\r\\n', '\\n')) > MAX_POST_LENGTH:\r\n            raise ValidationError('Oh no! Posts can not be larger than '\r\n                                  '{} characters'.format(MAX_POST_LENGTH))\r\n```\r\n\r\nIf I do this through my test suite all is okay using the following code:\r\n\r\n```python\r\nresp = self.client.post(\r\n    url_for('posts.post'),\r\n    data={\r\n        'body': 'Test',\r\n        'upload': '',\r\n    },\r\n    follow_redirects=True\r\n)\r\n```\r\n\r\nThe the post is successful. However if I make the request through Firefox (or Chrome) the validation is triggered saying I have an invalid format.\r\n\r\nRequest body:\r\n\r\n```\r\nContent-Type: multipart/form-data; boundary=---------------------------138689464934064453715802001\r\nContent-Length: 651\r\n\r\n-----------------------------138689464934064453715802001\r\nContent-Disposition: form-data; name=\"body\"\r\n\r\nTest\r\n-----------------------------138689464934064453715802001\r\nContent-Disposition: form-data; name=\"csrf_token\"\r\n\r\nIjY4YTZmYjNmNWM4MWJlNmVjMjc3Y2Y4YjBiMTM1Nzk3YTdhMGZkNjci.C1Vusg.RCp4SBZKai60nRqMGYP63i8JfXM\r\n-----------------------------138689464934064453715802001\r\nContent-Disposition: form-data; name=\"permission\"\r\n\r\n0\r\n-----------------------------138689464934064453715802001\r\nContent-Disposition: form-data; name=\"upload\"; filename=\"\"\r\nContent-Type: application/octet-stream\r\n\r\n\r\n-----------------------------138689464934064453715802001--\r\n```\r\n\r\nThis was happening before I fixed the deprecation warnings that `FileField` is getting removed and to use the built-in WTForms `FileField` and after I changed the code to use this.\r\n\r\nI believe it's something to do with this change but can't find any documentation.\r\n\r\nI have had to revert the change as it stopped my site being usable.\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/275", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/275/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/275/events", "html_url": "https://github.com/lepture/flask-wtf/issues/275", "id": 199533681, "node_id": "MDU6SXNzdWUxOTk1MzM2ODE=", "number": 275, "title": "error when changing from version0.13.1 to 0.14", "user": {"login": "abc19899", "id": 2647998, "node_id": "MDQ6VXNlcjI2NDc5OTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2647998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abc19899", "html_url": "https://github.com/abc19899", "followers_url": "https://api.github.com/users/abc19899/followers", "following_url": "https://api.github.com/users/abc19899/following{/other_user}", "gists_url": "https://api.github.com/users/abc19899/gists{/gist_id}", "starred_url": "https://api.github.com/users/abc19899/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abc19899/subscriptions", "organizations_url": "https://api.github.com/users/abc19899/orgs", "repos_url": "https://api.github.com/users/abc19899/repos", "events_url": "https://api.github.com/users/abc19899/events{/privacy}", "received_events_url": "https://api.github.com/users/abc19899/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-01-09T11:47:41Z", "updated_at": "2019-07-18T09:58:20Z", "closed_at": "2017-01-11T15:37:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "~~~python-traceback\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/_compat.py\", line 33, in reraise\r\n    raise value\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1612, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/usr/local/lib/python3.6/site-packages/flask/app.py\", line 1598, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"./tencent_web_charge/single_server_query/views.py\", line 69, in choose_platform\r\n    form = ChoosePlatformForm()\r\n  File \"/usr/local/lib/python3.6/site-packages/wtforms/form.py\", line 212, in __call__\r\n    return type.__call__(cls, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/flask_wtf/form.py\", line 87, in __init__\r\n    super(FlaskForm, self).__init__(formdata=formdata, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/wtforms/form.py\", line 278, in __init__\r\n    self.process(formdata, obj, data=data, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/wtforms/form.py\", line 132, in process\r\n    field.process(formdata)\r\n  File \"/usr/local/lib/python3.6/site-packages/wtforms/csrf/core.py\", line 43, in process\r\n    self.current_token = self.csrf_impl.generate_csrf_token(self)\r\n  File \"/usr/local/lib/python3.6/site-packages/flask_wtf/csrf.py\", line 134, in generate_csrf_token\r\n    token_key=self.meta.csrf_field_name\r\n  File \"/usr/local/lib/python3.6/site-packages/flask_wtf/csrf.py\", line 47, in generate_csrf\r\n    setattr(g, field_name, s.dumps(session[field_name]))\r\n  File \"/usr/local/lib/python3.6/site-packages/itsdangerous.py\", line 565, in dumps\r\n    payload = want_bytes(self.dump_payload(obj))\r\n  File \"/usr/local/lib/python3.6/site-packages/itsdangerous.py\", line 847, in dump_payload\r\n    json = super(URLSafeSerializerMixin, self).dump_payload(obj)\r\n  File \"/usr/local/lib/python3.6/site-packages/itsdangerous.py\", line 550, in dump_payload\r\n    return want_bytes(self.serializer.dumps(obj))\r\n  File \"/usr/local/lib/python3.6/site-packages/itsdangerous.py\", line 51, in dumps\r\n    return json.dumps(obj, separators=(',', ':'))\r\n  File \"/usr/local/lib/python3.6/json/__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\n  File \"/usr/local/lib/python3.6/json/encoder.py\", line 199, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"/usr/local/lib/python3.6/json/encoder.py\", line 257, in iterencode\r\n    return _iterencode(o, 0)\r\n  File \"/usr/local/lib/python3.6/json/encoder.py\", line 180, in default\r\n    o.__class__.__name__)\r\nTypeError: Object of type 'bytes' is not JSON serializable\r\n~~~\r\n\r\n~~~python\r\nclass ChoosePlatformForm(flask_wtf.FlaskForm):\r\n    platform = wtforms.SelectField(\r\n        '\u5e73\u53f0', validators=[wtforms.validators.DataRequired()],\r\n        choices=[\r\n            ('android', '\u5b89\u5353\u6df7\u670d'),\r\n            ('tencent', '\u817e\u8baf\u5e94\u7528\u5b9d'),\r\n            ('app', '\u82f9\u679c\u5b98\u65b9'),\r\n            ('xingyun', '\u72ec\u670d'),\r\n            ('test', '\u6d4b\u8bd5')\r\n        ]\r\n    )\r\n    submit = wtforms.SubmitField(\r\n        '\u786e\u5b9a',\r\n    )\r\n\r\n@delayed_route('/choose_platform', methods=['GET', 'POST'])\r\ndef choose_platform():\r\n    form = ChoosePlatformForm()\r\n    if form.validate_on_submit():\r\n        response = make_response(redirect(url_for('.choose_server', next=request.args.get('next', None))))\r\n        response.set_cookie('platform', form.platform.data)\r\n        return response\r\n\r\n    return render_template('simple_form.html', form=form)\r\n~~~\r\n\r\nI am using Python 3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/270", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/270/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/270/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/270/events", "html_url": "https://github.com/lepture/flask-wtf/issues/270", "id": 194615787, "node_id": "MDU6SXNzdWUxOTQ2MTU3ODc=", "number": 270, "title": "subclass FlaskForm validate always return False", "user": {"login": "NunchakusHuang", "id": 6011313, "node_id": "MDQ6VXNlcjYwMTEzMTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6011313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NunchakusHuang", "html_url": "https://github.com/NunchakusHuang", "followers_url": "https://api.github.com/users/NunchakusHuang/followers", "following_url": "https://api.github.com/users/NunchakusHuang/following{/other_user}", "gists_url": "https://api.github.com/users/NunchakusHuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/NunchakusHuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NunchakusHuang/subscriptions", "organizations_url": "https://api.github.com/users/NunchakusHuang/orgs", "repos_url": "https://api.github.com/users/NunchakusHuang/repos", "events_url": "https://api.github.com/users/NunchakusHuang/events{/privacy}", "received_events_url": "https://api.github.com/users/NunchakusHuang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-09T14:56:51Z", "updated_at": "2016-12-10T06:39:08Z", "closed_at": "2016-12-09T18:55:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "my `registform` is:\r\n```python\r\nclass RegistForm(FlaskForm):\r\n    name = StringField('name')\r\n    email = StringField('email')\r\n    password = StringField('password')\r\n    confirm = StringField('confirm')\r\n```\r\nwhen call RegistForm.validate(), it always return False\r\n\r\nbut if the base class be changed `Form`, it works well:\r\n```python\r\nclass RegistForm(Form):\r\n    name = StringField('name')\r\n    email = StringField('email')\r\n    password = StringField('password')\r\n    confirm = StringField('confirm')\r\n```\r\n\r\nand the validate code is:\r\n```python\r\n@app.route('/regist/',methods=['POST','GET'])\r\ndef regist():\r\n    form = RegistForm()\r\n    if request.method == 'POST' and form.validate():\r\n        user = User(name=form.name.data,email=form.email.data,password=form.password.data)\r\n        db.session.add(user)\r\n        db.session.commit()\r\n        return 'regist success'\r\n    return render_template('regist.html',form=form)\r\n```\r\n\r\nand my flask-wtf version is **0.13.1**, it is a bug or my code error?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/268", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/268/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/268/events", "html_url": "https://github.com/lepture/flask-wtf/issues/268", "id": 191278391, "node_id": "MDU6SXNzdWUxOTEyNzgzOTE=", "number": 268, "title": "Values not being set on sequential POSTs - 2 separate form instances", "user": {"login": "herman5", "id": 1221401, "node_id": "MDQ6VXNlcjEyMjE0MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1221401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/herman5", "html_url": "https://github.com/herman5", "followers_url": "https://api.github.com/users/herman5/followers", "following_url": "https://api.github.com/users/herman5/following{/other_user}", "gists_url": "https://api.github.com/users/herman5/gists{/gist_id}", "starred_url": "https://api.github.com/users/herman5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/herman5/subscriptions", "organizations_url": "https://api.github.com/users/herman5/orgs", "repos_url": "https://api.github.com/users/herman5/repos", "events_url": "https://api.github.com/users/herman5/events{/privacy}", "received_events_url": "https://api.github.com/users/herman5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-23T14:03:19Z", "updated_at": "2016-11-23T21:09:25Z", "closed_at": "2016-11-23T21:06:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to make 2 sequential POST requests using. The first POST is working as expected:\r\n\r\n```\r\n@mod_packages.route('/<package_id>', methods=['GET'])\r\ndef show(package_id):\r\n    package = Package.query.get_or_404(package_id)\r\n    units = Unit.query.filter_by(package_id=package.id, reserved=False).all()\r\n    form = PackageCheckoutForm(request.form, package_id=package.id)\r\n    form.unit.choices = [(unit.id, unit.start_time)\r\n                         for unit in units]\r\n    return render_template('package/show.html', form=form, package=package)\r\n```\r\n\r\nHowever, when I POST that form to the second route and create the second form, PackageCheckoutForm, I can no longer set the value of any of the PackageCheckoutForm fields - unit_id and first_name are always empty values on the form.  Because this is 2 separate form instances, this behavior is unexpected.\r\n\r\n```\r\n@mod_users.route('/<user_id>/checkout', methods=['GET', 'POST'])\r\ndef checkout(user_id):\r\n    if request.method == 'POST':\r\n        form = PackageCheckoutForm(request.form)\r\n        package = Package.query.get(form.package_id.data)\r\n        unit_id = request.form.get('unit')\r\n        if unit_id:\r\n            unit = Unit.query.get(unit_id)\r\n            form.unit.choices = [(unit.id, unit.start_time)]\r\n            if form.validate_on_submit():\r\n                print \"UNIT ID %s\" % unit.id\r\n                card_form = TransactionForm(unit_id=unit.id, first_name=\"TEST\")\r\n                print \"FORM UNIT ID %s\" % card_form.unit_id\r\n                print \"CARD name %s\" % card_form.first_name\r\n                return render_template('user/checkout.html', package=package, unit=unit, form=card_form)\r\n    return redirect(url_for('home.index'))\r\n```\r\n\r\nForm class:\r\n\r\n```\r\nclass TransactionForm(Form):\r\n    first_name = TextField('First name as shown on credit card')\r\n    last_name = TextField('Last name as shown on credit card')\r\n    unit_id = HiddenField()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/267", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/267/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/267/events", "html_url": "https://github.com/lepture/flask-wtf/issues/267", "id": 189922547, "node_id": "MDU6SXNzdWUxODk5MjI1NDc=", "number": 267, "title": "CSRF session expire ", "user": {"login": "erwinyusrizal", "id": 3752374, "node_id": "MDQ6VXNlcjM3NTIzNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3752374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erwinyusrizal", "html_url": "https://github.com/erwinyusrizal", "followers_url": "https://api.github.com/users/erwinyusrizal/followers", "following_url": "https://api.github.com/users/erwinyusrizal/following{/other_user}", "gists_url": "https://api.github.com/users/erwinyusrizal/gists{/gist_id}", "starred_url": "https://api.github.com/users/erwinyusrizal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erwinyusrizal/subscriptions", "organizations_url": "https://api.github.com/users/erwinyusrizal/orgs", "repos_url": "https://api.github.com/users/erwinyusrizal/repos", "events_url": "https://api.github.com/users/erwinyusrizal/events{/privacy}", "received_events_url": "https://api.github.com/users/erwinyusrizal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-17T03:04:50Z", "updated_at": "2016-11-17T03:23:22Z", "closed_at": "2016-11-17T03:15:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have an issue when CSRF session expired, and I do submit form, it returns\r\n\r\n`TypeError: csrf_error() takes no arguments (1 given)`\r\n\r\nany idea?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/266", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/266/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/266/events", "html_url": "https://github.com/lepture/flask-wtf/issues/266", "id": 187664338, "node_id": "MDU6SXNzdWUxODc2NjQzMzg=", "number": 266, "title": "CsrfError not importable", "user": {"login": "shipperizer", "id": 3263345, "node_id": "MDQ6VXNlcjMyNjMzNDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3263345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shipperizer", "html_url": "https://github.com/shipperizer", "followers_url": "https://api.github.com/users/shipperizer/followers", "following_url": "https://api.github.com/users/shipperizer/following{/other_user}", "gists_url": "https://api.github.com/users/shipperizer/gists{/gist_id}", "starred_url": "https://api.github.com/users/shipperizer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shipperizer/subscriptions", "organizations_url": "https://api.github.com/users/shipperizer/orgs", "repos_url": "https://api.github.com/users/shipperizer/repos", "events_url": "https://api.github.com/users/shipperizer/events{/privacy}", "received_events_url": "https://api.github.com/users/shipperizer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-07T09:39:13Z", "updated_at": "2016-11-07T14:06:17Z", "closed_at": "2016-11-07T14:06:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to use the ```app.errorhandler(CsrfError)``` I'm not able to import CsrfError class \r\n\r\nLikely due to this https://github.com/lepture/flask-wtf/blob/33b5de6719362fa258b82976e20625cf00d94194/flask_wtf/csrf.py#L23\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/265", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/265/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/265/events", "html_url": "https://github.com/lepture/flask-wtf/issues/265", "id": 184152421, "node_id": "MDU6SXNzdWUxODQxNTI0MjE=", "number": 265, "title": "Question. Using of `FlaskForm`, Is there no need to make any *single* configuration?", "user": {"login": "DanielTimLee", "id": 16421480, "node_id": "MDQ6VXNlcjE2NDIxNDgw", "avatar_url": "https://avatars0.githubusercontent.com/u/16421480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielTimLee", "html_url": "https://github.com/DanielTimLee", "followers_url": "https://api.github.com/users/DanielTimLee/followers", "following_url": "https://api.github.com/users/DanielTimLee/following{/other_user}", "gists_url": "https://api.github.com/users/DanielTimLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielTimLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielTimLee/subscriptions", "organizations_url": "https://api.github.com/users/DanielTimLee/orgs", "repos_url": "https://api.github.com/users/DanielTimLee/repos", "events_url": "https://api.github.com/users/DanielTimLee/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielTimLee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-20T07:17:24Z", "updated_at": "2016-10-20T07:25:41Z", "closed_at": "2016-10-20T07:24:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the documents below, \n`https://flask-wtf.readthedocs.io/en/stable/form.html`\n\n> Without any configuration, the FlaskForm will be a session secure form with csrf protection. We encourage you do nothing.\n\nIt says, there is no need have any configuration, \ndoes it means, If we use only `FlaskForm`, \nthan we don't have to pass `{{ form.csrf_token }}` to Jinja Filter?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/263", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/263/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/263/events", "html_url": "https://github.com/lepture/flask-wtf/issues/263", "id": 180727190, "node_id": "MDU6SXNzdWUxODA3MjcxOTA=", "number": 263, "title": "hidden_tag changes in v0.13 are not backward-compatible.", "user": {"login": "jcass77", "id": 10268911, "node_id": "MDQ6VXNlcjEwMjY4OTEx", "avatar_url": "https://avatars3.githubusercontent.com/u/10268911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcass77", "html_url": "https://github.com/jcass77", "followers_url": "https://api.github.com/users/jcass77/followers", "following_url": "https://api.github.com/users/jcass77/following{/other_user}", "gists_url": "https://api.github.com/users/jcass77/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcass77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcass77/subscriptions", "organizations_url": "https://api.github.com/users/jcass77/orgs", "repos_url": "https://api.github.com/users/jcass77/repos", "events_url": "https://api.github.com/users/jcass77/events{/privacy}", "received_events_url": "https://api.github.com/users/jcass77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-03T19:37:15Z", "updated_at": "2016-10-04T02:44:42Z", "closed_at": "2016-10-04T02:44:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Upgrading from release 0.12 to 0.13 breaks a specific test case that I have in one of my applications.\n\nThe exception raised is `AttributeError: 'UnboundField' object has no attribute 'data'`.\n\nI've defined a hidden field in my form:\n\n``` python\nclass ChangePasswordFormHref(ChangePasswordForm):\n    href = HiddenField('Href')\n```\n\nFor some reason the `href` field is not populated when simulating a post with:\n\n``` python\nresp = self.client.post('/forgot/change', data={'password': 'P@55word_mock1234', 'password_again': 'P@55word_mock1234', 'href': account.href, }, follow_redirects=True)\n```\n\nWhat makes this even more perplexing is that the test case only breaks if it is run as part of a batch of similar tests. Running it in isolation works fine.\n\nThe `hidden_tag` field is included in my the html template:\n\n``` html\n{% from '_formhelpers.html' import render_field %}\n<form id=\"forgot_change_form\" method=\"post\">\n  {{ form.hidden_tag() }}\n  {{ render_field(form.password, placeholder='Password', type='password') }}\n  {{ render_field(form.password_again, class='form-control', placeholder='Password (again)', type='password') }}\n  <fieldset class=\"ui-grid-solo\">\n    <div class=\"ui-block align-right\">\n      <a href=\"#\" onclick=\"$('#forgot_change_form').submit()\" data-role=\"button\" data-mini=\"true\" data-inline=\"true\">Submit</a>\n    </div>\n  </fieldset>\n</form>\n```\n\nThe exception occurs when I try to access the hidden `href` field in the view:\n\n``` python\ndef forgot_change():\n    form = ChangePasswordFormHref()\n\n    if request.method == 'GET':\n        try:\n            account = current_app.stormpath_manager.application.verify_password_reset_token(request.args.get('sptoken'))\n            form.href.data = account.href\n        except StormpathError:\n            abort(400)\n\n    if form.validate_on_submit():\n        try:\n            account = current_app.stormpath_manager.client.accounts.get(form.href.data) # <-- Exception\n            account.password = form.password.data\n            account.save()\n```\n\nI've tried to pinpoint the issue without any luck - it might be that I am using Flask-WTF in a non-standard way?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/262", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/262/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/262/events", "html_url": "https://github.com/lepture/flask-wtf/issues/262", "id": 180584021, "node_id": "MDU6SXNzdWUxODA1ODQwMjE=", "number": 262, "title": "Form -> FlaskForm rename breaks custom metaclasses", "user": {"login": "ThiefMaster", "id": 179599, "node_id": "MDQ6VXNlcjE3OTU5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/179599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThiefMaster", "html_url": "https://github.com/ThiefMaster", "followers_url": "https://api.github.com/users/ThiefMaster/followers", "following_url": "https://api.github.com/users/ThiefMaster/following{/other_user}", "gists_url": "https://api.github.com/users/ThiefMaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThiefMaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThiefMaster/subscriptions", "organizations_url": "https://api.github.com/users/ThiefMaster/orgs", "repos_url": "https://api.github.com/users/ThiefMaster/repos", "events_url": "https://api.github.com/users/ThiefMaster/events{/privacy}", "received_events_url": "https://api.github.com/users/ThiefMaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-03T08:12:40Z", "updated_at": "2016-10-06T04:42:02Z", "closed_at": "2016-10-06T04:42:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a custom metaclass you usually subclass `FormMeta`. This fails thanks to the different metaclass used to show the deprecation warning (#249):\n\n> TypeError: Error when calling the metaclass bases\n>     metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases\n\nIt's an easy fix (not using the deprecated `Form` class) but still, I think this should at least e mentioned in the docs.\n\ncc @davidism \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/261", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/261/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/261/events", "html_url": "https://github.com/lepture/flask-wtf/issues/261", "id": 180173865, "node_id": "MDU6SXNzdWUxODAxNzM4NjU=", "number": 261, "title": "pkg_resources.get_distribution won't work on App Engine", "user": {"login": "lipis", "id": 125676, "node_id": "MDQ6VXNlcjEyNTY3Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/125676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lipis", "html_url": "https://github.com/lipis", "followers_url": "https://api.github.com/users/lipis/followers", "following_url": "https://api.github.com/users/lipis/following{/other_user}", "gists_url": "https://api.github.com/users/lipis/gists{/gist_id}", "starred_url": "https://api.github.com/users/lipis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lipis/subscriptions", "organizations_url": "https://api.github.com/users/lipis/orgs", "repos_url": "https://api.github.com/users/lipis/repos", "events_url": "https://api.github.com/users/lipis/events{/privacy}", "received_events_url": "https://api.github.com/users/lipis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-29T21:59:05Z", "updated_at": "2016-10-06T07:26:26Z", "closed_at": "2016-10-06T04:42:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This [particular line](https://github.com/lepture/flask-wtf/blob/master/flask_wtf/__init__.py#L21) won't work on App Engine and I'm sure that there are quite a lot of people using Flask-WTF on App Engine..\n\nOne work around that can be done just to avoid this is demonstrated in this [pull request](https://github.com/gae-init/gae-init/pull/572) which is quite ugly and not really necessary I would say.\n\nCan we just change it to simply writing the version in the file?\n\n``` python\n__version__ = '0.13'\n```\n\nIn understand that is quite cool to get the version number from the distribution, but is also not that hard to maintain it to avoid all this monkey patches on Google App Engine..\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/260", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/260/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/260/events", "html_url": "https://github.com/lepture/flask-wtf/issues/260", "id": 179020141, "node_id": "MDU6SXNzdWUxNzkwMjAxNDE=", "number": 260, "title": "How to load Province, city?", "user": {"login": "allran", "id": 1505892, "node_id": "MDQ6VXNlcjE1MDU4OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1505892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/allran", "html_url": "https://github.com/allran", "followers_url": "https://api.github.com/users/allran/followers", "following_url": "https://api.github.com/users/allran/following{/other_user}", "gists_url": "https://api.github.com/users/allran/gists{/gist_id}", "starred_url": "https://api.github.com/users/allran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/allran/subscriptions", "organizations_url": "https://api.github.com/users/allran/orgs", "repos_url": "https://api.github.com/users/allran/repos", "events_url": "https://api.github.com/users/allran/events{/privacy}", "received_events_url": "https://api.github.com/users/allran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-24T09:00:59Z", "updated_at": "2016-09-24T12:33:33Z", "closed_at": "2016-09-24T12:33:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to use SelectField to choose  Province, city? \nI search on google, stackoverflow, and i don't find the answer.  Please help me, thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/259", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/259/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/259/events", "html_url": "https://github.com/lepture/flask-wtf/issues/259", "id": 176183580, "node_id": "MDU6SXNzdWUxNzYxODM1ODA=", "number": 259, "title": "deprecated Documentation ", "user": {"login": "MertcanGokgoz", "id": 8042604, "node_id": "MDQ6VXNlcjgwNDI2MDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8042604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MertcanGokgoz", "html_url": "https://github.com/MertcanGokgoz", "followers_url": "https://api.github.com/users/MertcanGokgoz/followers", "following_url": "https://api.github.com/users/MertcanGokgoz/following{/other_user}", "gists_url": "https://api.github.com/users/MertcanGokgoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/MertcanGokgoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MertcanGokgoz/subscriptions", "organizations_url": "https://api.github.com/users/MertcanGokgoz/orgs", "repos_url": "https://api.github.com/users/MertcanGokgoz/repos", "events_url": "https://api.github.com/users/MertcanGokgoz/events{/privacy}", "received_events_url": "https://api.github.com/users/MertcanGokgoz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-10T14:54:24Z", "updated_at": "2016-09-10T15:11:46Z", "closed_at": "2016-09-10T15:03:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recaptcha and CSRF section deprecated\n\nhttps://flask-wtf.readthedocs.io/en/latest/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/257", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/257/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/257/events", "html_url": "https://github.com/lepture/flask-wtf/issues/257", "id": 172193272, "node_id": "MDU6SXNzdWUxNzIxOTMyNzI=", "number": 257, "title": "Why is this necessary?", "user": {"login": "rlam3", "id": 1154044, "node_id": "MDQ6VXNlcjExNTQwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1154044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlam3", "html_url": "https://github.com/rlam3", "followers_url": "https://api.github.com/users/rlam3/followers", "following_url": "https://api.github.com/users/rlam3/following{/other_user}", "gists_url": "https://api.github.com/users/rlam3/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlam3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlam3/subscriptions", "organizations_url": "https://api.github.com/users/rlam3/orgs", "repos_url": "https://api.github.com/users/rlam3/repos", "events_url": "https://api.github.com/users/rlam3/events{/privacy}", "received_events_url": "https://api.github.com/users/rlam3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-19T18:35:54Z", "updated_at": "2016-09-10T20:44:51Z", "closed_at": "2016-09-10T20:44:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why is this check necessary during validation when we are passing back X-CSRFToken during a POST?\n\n``` csrf.py\n    if token_key not in session:\n        return False\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/256", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/256/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/256/events", "html_url": "https://github.com/lepture/flask-wtf/issues/256", "id": 171845118, "node_id": "MDU6SXNzdWUxNzE4NDUxMTg=", "number": 256, "title": "@csrf.exempt on a view in a Blueprint imported by app.py", "user": {"login": "papkos", "id": 4502263, "node_id": "MDQ6VXNlcjQ1MDIyNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4502263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papkos", "html_url": "https://github.com/papkos", "followers_url": "https://api.github.com/users/papkos/followers", "following_url": "https://api.github.com/users/papkos/following{/other_user}", "gists_url": "https://api.github.com/users/papkos/gists{/gist_id}", "starred_url": "https://api.github.com/users/papkos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papkos/subscriptions", "organizations_url": "https://api.github.com/users/papkos/orgs", "repos_url": "https://api.github.com/users/papkos/repos", "events_url": "https://api.github.com/users/papkos/events{/privacy}", "received_events_url": "https://api.github.com/users/papkos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-18T08:28:01Z", "updated_at": "2020-07-26T09:06:07Z", "closed_at": "2016-09-29T03:55:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "_I have the same issue as #119, but I feel that the the solution proposed there is not the correct one (though it works for me too)._\n### Summary:\n\nIf you have a view in a Blueprint, you cannot csrf-exempt it, because of circular imports OR `RuntimeError: Working outside of application context.`\n### How to reproduce:\n\n**`app.py`**:\n\n``` python\nfrom flask import Flask\nfrom flask.ext.wtf.csrf import CsrfProtect\n\napp = Flask(__name__)\ncsrf = CsrfProtect(app)\n\nfrom somepackage.other_blueprint import other_blueprint\napp.register_blueprint(other_blueprint, url_prefix='/other')\n```\n\n**`somepackage/other_blueprint.py`** (causes circular import):\n\n``` python\nfrom flask.blueprints import Blueprint\nfrom app import csrf\n\nother_blueprint = Blueprint('other', __name__)\n\n@csrf.exempt\n@other_blueprint.route('/thing', methods=['GET', 'POST'])\ndef no_csrf_here():\n    pass\n```\n\n**`somepackage/other_blueprint.py`** (causes out of context error):\n\n``` python\nfrom flask.blueprints import Blueprint\nfrom flask.globals import current_app\n\nother_blueprint = Blueprint('other', __name__)\ncsrf = LocalProxy(lambda: current_app.csrf)\n\n@csrf.exempt\n@other_blueprint.route('/thing', methods=['GET', 'POST'])\ndef no_csrf_here():\n    pass\n```\n\nI'm not sure what the solution should look like though...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/255", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/255/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/255/events", "html_url": "https://github.com/lepture/flask-wtf/issues/255", "id": 167584119, "node_id": "MDU6SXNzdWUxNjc1ODQxMTk=", "number": 255, "title": "FileField seems to break if request.form is passed to form constructor", "user": {"login": "Cheaterman", "id": 54710, "node_id": "MDQ6VXNlcjU0NzEw", "avatar_url": "https://avatars0.githubusercontent.com/u/54710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cheaterman", "html_url": "https://github.com/Cheaterman", "followers_url": "https://api.github.com/users/Cheaterman/followers", "following_url": "https://api.github.com/users/Cheaterman/following{/other_user}", "gists_url": "https://api.github.com/users/Cheaterman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cheaterman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cheaterman/subscriptions", "organizations_url": "https://api.github.com/users/Cheaterman/orgs", "repos_url": "https://api.github.com/users/Cheaterman/repos", "events_url": "https://api.github.com/users/Cheaterman/events{/privacy}", "received_events_url": "https://api.github.com/users/Cheaterman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-26T11:24:43Z", "updated_at": "2016-07-26T15:18:55Z", "closed_at": "2016-07-26T12:40:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello buddies, I hope you're doing good!\n\nToday I was testing FileField and trying to make a cool file upload form, when I stumbled upon an issue which is described more in-depth here:\n\nhttps://github.com/pallets/flask/issues/460\n\nI think we should find a solution to this somehow, because it's not very cool or consistent to have all forms use request.form as argument except the ones with files?\n\nThanks in advance buddies ^__^\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/254", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/254/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/254/events", "html_url": "https://github.com/lepture/flask-wtf/issues/254", "id": 166454277, "node_id": "MDU6SXNzdWUxNjY0NTQyNzc=", "number": 254, "title": "Naming a field validate breaks validation", "user": {"login": "RyanEager", "id": 869056, "node_id": "MDQ6VXNlcjg2OTA1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/869056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RyanEager", "html_url": "https://github.com/RyanEager", "followers_url": "https://api.github.com/users/RyanEager/followers", "following_url": "https://api.github.com/users/RyanEager/following{/other_user}", "gists_url": "https://api.github.com/users/RyanEager/gists{/gist_id}", "starred_url": "https://api.github.com/users/RyanEager/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RyanEager/subscriptions", "organizations_url": "https://api.github.com/users/RyanEager/orgs", "repos_url": "https://api.github.com/users/RyanEager/repos", "events_url": "https://api.github.com/users/RyanEager/events{/privacy}", "received_events_url": "https://api.github.com/users/RyanEager/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-19T22:40:13Z", "updated_at": "2016-07-19T23:24:15Z", "closed_at": "2016-07-19T23:24:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you created a simple form:\n\n```\nclass MyForm(Form):\n    name = StringField('Name', validators=[ DataRequired() ])\n    validate = SubmitField('Validatel)\n    submit - SubmitField('Submit')\n```\n\n`form.validate_on_submit()` always passes even if there is no data, all validators are ignored. If you change the name to `validateForm` the issue is gone.\n\nTested on:\n\n```\nFlask-WTF==0.12\nWTForms==2.1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/249", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/249/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/249/events", "html_url": "https://github.com/lepture/flask-wtf/issues/249", "id": 163029244, "node_id": "MDU6SXNzdWUxNjMwMjkyNDQ=", "number": 249, "title": "Rename Form to FlaskForm", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-06-29T21:19:52Z", "updated_at": "2016-09-29T17:40:26Z", "closed_at": "2016-06-30T15:52:59Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "A common issue users have is that they imported `wtforms.Form` when they meant `flask_wtf.Form`, or vice versa, or they imported both and one is masking the other.  We should rename `flask_wtf.Form` to `flask_wtf.FlaskForm`, and treat `Form` as a deprecated alias that raises a warning when it is used.\n\nThis also makes it easier to subclass both types of form in one file.  For example when you want to create forms for `FormField` and only have CSRF handling in the main form.  Right now you need to import one of the forms with an alias.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/245", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/245/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/245/events", "html_url": "https://github.com/lepture/flask-wtf/issues/245", "id": 158154927, "node_id": "MDU6SXNzdWUxNTgxNTQ5Mjc=", "number": 245, "title": "request.json vs request.get_json() and request.is_json", "user": {"login": "asplake", "id": 67989, "node_id": "MDQ6VXNlcjY3OTg5", "avatar_url": "https://avatars2.githubusercontent.com/u/67989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asplake", "html_url": "https://github.com/asplake", "followers_url": "https://api.github.com/users/asplake/followers", "following_url": "https://api.github.com/users/asplake/following{/other_user}", "gists_url": "https://api.github.com/users/asplake/gists{/gist_id}", "starred_url": "https://api.github.com/users/asplake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asplake/subscriptions", "organizations_url": "https://api.github.com/users/asplake/orgs", "repos_url": "https://api.github.com/users/asplake/repos", "events_url": "https://api.github.com/users/asplake/events{/privacy}", "received_events_url": "https://api.github.com/users/asplake/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-02T14:28:13Z", "updated_at": "2016-06-03T23:58:17Z", "closed_at": "2016-06-03T23:58:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since upgrading to Flask 0.11 and moving from flask.ext.wtf to flash_wtf I'm getting lib/python3.4/site-packages/werkzeug/local.py:343: DeprecationWarning: json is deprecated.  Use get_json() instead.\n\nGuessing that occurrences of request.json now be replaced with request.get_json() or perhaps request.is_json when used in a conditional.\n\nIt looks to be a small change and I'd be prepared to prepare a pull request if you wish but I'm unsure of what other impact it might have.\n\nCheers,\nMike\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/lepture/flask-wtf/issues/239", "repository_url": "https://api.github.com/repos/lepture/flask-wtf", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/lepture/flask-wtf/issues/239/comments", "events_url": "https://api.github.com/repos/lepture/flask-wtf/issues/239/events", "html_url": "https://github.com/lepture/flask-wtf/issues/239", "id": 152737356, "node_id": "MDU6SXNzdWUxNTI3MzczNTY=", "number": 239, "title": "Logging of errors, CSRF token missing or incorrect", "user": {"login": "mgraupner", "id": 586644, "node_id": "MDQ6VXNlcjU4NjY0NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/586644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgraupner", "html_url": "https://github.com/mgraupner", "followers_url": "https://api.github.com/users/mgraupner/followers", "following_url": "https://api.github.com/users/mgraupner/following{/other_user}", "gists_url": "https://api.github.com/users/mgraupner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgraupner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgraupner/subscriptions", "organizations_url": "https://api.github.com/users/mgraupner/orgs", "repos_url": "https://api.github.com/users/mgraupner/repos", "events_url": "https://api.github.com/users/mgraupner/events{/privacy}", "received_events_url": "https://api.github.com/users/mgraupner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 402240944, "node_id": "MDU6TGFiZWw0MDIyNDA5NDQ=", "url": "https://api.github.com/repos/lepture/flask-wtf/labels/csrf", "name": "csrf", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/lepture/flask-wtf/milestones/1", "html_url": "https://github.com/lepture/flask-wtf/milestone/1", "labels_url": "https://api.github.com/repos/lepture/flask-wtf/milestones/1/labels", "id": 2036665, "node_id": "MDk6TWlsZXN0b25lMjAzNjY2NQ==", "number": 1, "title": "v0.14", "description": "", "creator": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 13, "state": "closed", "created_at": "2016-09-29T05:06:14Z", "updated_at": "2017-01-06T01:02:30Z", "due_on": null, "closed_at": "2017-01-06T01:02:30Z"}, "comments": 0, "created_at": "2016-05-03T09:51:49Z", "updated_at": "2017-01-04T16:44:15Z", "closed_at": "2017-01-04T16:44:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Recently I was hunting a bug in a Flask application which turned out to be a CSRF token timeout. Unfortunately there was no way to catch that error message till a user sent me a screenshot, uWSGI and Flask logs did not contain any hint that this would be the error and it only happened so rarely that I never had a real chance to reproduce it without knowing what kind of error it was.\n\nWhat is the suggested way for knowing that this error occurred? Shouldn't there be proper logging of the error? Now I know but perhaps for future developers who encounter a mysterious 400 BAD REQUEST in their logs would be happy that this came from CSRF token timeouts.\n", "performed_via_github_app": null, "score": 1.0}]}