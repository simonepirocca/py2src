{"total_count": 105, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/wbond/asn1crypto/issues/187", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/187/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/187/events", "html_url": "https://github.com/wbond/asn1crypto/issues/187", "id": 638769478, "node_id": "MDU6SXNzdWU2Mzg3Njk0Nzg=", "number": 187, "title": "Generic User-Defined Key", "user": {"login": "LucySweetWork", "id": 54753372, "node_id": "MDQ6VXNlcjU0NzUzMzcy", "avatar_url": "https://avatars2.githubusercontent.com/u/54753372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucySweetWork", "html_url": "https://github.com/LucySweetWork", "followers_url": "https://api.github.com/users/LucySweetWork/followers", "following_url": "https://api.github.com/users/LucySweetWork/following{/other_user}", "gists_url": "https://api.github.com/users/LucySweetWork/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucySweetWork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucySweetWork/subscriptions", "organizations_url": "https://api.github.com/users/LucySweetWork/orgs", "repos_url": "https://api.github.com/users/LucySweetWork/repos", "events_url": "https://api.github.com/users/LucySweetWork/events{/privacy}", "received_events_url": "https://api.github.com/users/LucySweetWork/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-15T11:18:58Z", "updated_at": "2020-07-27T23:17:53Z", "closed_at": "2020-07-27T23:17:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes, we want to interact with private keys which are stored on Hardware Security Modules with defined channels for interaction, or any other type of private key where we can't interact with the key content directly.\r\n\r\nIt would be nice if asn1crypto supported some generic key where the user can pass arguments that define what algorithm it is, and what code to run in order to handle different types of operations, such as signing content or decrypting content.\r\nThis user-supplied code can then talk to the HSM or other service that holds the real key.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/186", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/186/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/186/events", "html_url": "https://github.com/wbond/asn1crypto/issues/186", "id": 631108924, "node_id": "MDU6SXNzdWU2MzExMDg5MjQ=", "number": 186, "title": "I can't figure how to set an implicit element", "user": {"login": "pcece", "id": 35300429, "node_id": "MDQ6VXNlcjM1MzAwNDI5", "avatar_url": "https://avatars0.githubusercontent.com/u/35300429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcece", "html_url": "https://github.com/pcece", "followers_url": "https://api.github.com/users/pcece/followers", "following_url": "https://api.github.com/users/pcece/following{/other_user}", "gists_url": "https://api.github.com/users/pcece/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcece/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcece/subscriptions", "organizations_url": "https://api.github.com/users/pcece/orgs", "repos_url": "https://api.github.com/users/pcece/repos", "events_url": "https://api.github.com/users/pcece/events{/privacy}", "received_events_url": "https://api.github.com/users/pcece/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-04T20:01:46Z", "updated_at": "2020-06-08T09:18:37Z", "closed_at": "2020-06-08T09:18:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear all,\r\n\r\nMany thanks for your valuable module.\r\n\r\nI want to create a CMS envelopedData with a KeyAgreeRecipientInfo.\r\n\r\nI don't understand how I should populate the cms.RecipientInfos()\r\n\r\nI have this code : \r\n\r\n```\r\nkeyAgreed = cms.KeyAgreeRecipientInfo()\r\nkeyAgreed['version'] = 3\r\nkeyAgreed['originator'] = ecdhKey\r\nkeyAgreed['key_encryption_algorithm'] = ecdhSha512Id\r\nkeyAgreed['recipient_encrypted_keys'] = {recipientEncryptedKey}\r\n```\r\n\r\n```\r\nrecipientInfos = cms.RecipientInfos()\r\nrecipientInfos.append(keyAgreed)\r\n```\r\n\r\nBut since I don't state that recipientInfos must use the implicit 1, the encoding is wrong.\r\n\r\nI'm sorry to disturb you since it's not really a bug, but I don't understand how to manage it.\r\n\r\nMany thanks in advance for your help.\r\n\r\nBest regards.\r\n\r\nPhilippe.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/183", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/183/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/183/events", "html_url": "https://github.com/wbond/asn1crypto/issues/183", "id": 622206280, "node_id": "MDU6SXNzdWU2MjIyMDYyODA=", "number": 183, "title": "Missing files in sdist", "user": {"login": "thatch", "id": 49834, "node_id": "MDQ6VXNlcjQ5ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/49834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thatch", "html_url": "https://github.com/thatch", "followers_url": "https://api.github.com/users/thatch/followers", "following_url": "https://api.github.com/users/thatch/following{/other_user}", "gists_url": "https://api.github.com/users/thatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/thatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thatch/subscriptions", "organizations_url": "https://api.github.com/users/thatch/orgs", "repos_url": "https://api.github.com/users/thatch/repos", "events_url": "https://api.github.com/users/thatch/events{/privacy}", "received_events_url": "https://api.github.com/users/thatch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-21T02:43:45Z", "updated_at": "2020-07-28T14:18:50Z", "closed_at": "2020-07-28T14:18:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that the manifest is missing at least one file necessary to build\nfrom the sdist for version 1.3.0. You're in good company, about 5% of other\nprojects updated in the last year are also missing files.\n\n```\n+ /tmp/venv/bin/pip3 wheel --no-binary asn1crypto-tests -w /tmp/ext asn1crypto-tests==1.3.0\nLooking in indexes: http://10.10.0.139:9191/root/pypi/+simple/\nCollecting asn1crypto-tests==1.3.0\n  Downloading http://10.10.0.139:9191/root/pypi/%2Bf/a3d/10b50ea171f37/asn1crypto_tests-1.3.0.tar.gz (547 kB)\n    ERROR: Command errored out with exit status 1:\n     command: /tmp/venv/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-wheel-64_gpyyj/asn1crypto-tests/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-wheel-64_gpyyj/asn1crypto-tests/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' egg_info --egg-base /tmp/pip-wheel-64_gpyyj/asn1crypto-tests/pip-egg-info\n         cwd: /tmp/pip-wheel-64_gpyyj/asn1crypto-tests/\n    Complete output (2 lines):\n    running egg_info\n    error: [Errno 2] No such file or directory: '/tmp/pip-wheel-64_gpyyj/LICENSE'\n    ----------------------------------------\nERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\n```\n    ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/180", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/180/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/180/events", "html_url": "https://github.com/wbond/asn1crypto/issues/180", "id": 593274414, "node_id": "MDU6SXNzdWU1OTMyNzQ0MTQ=", "number": 180, "title": "Error parsing asn1crypto.x509.TbsCertificate", "user": {"login": "zepengchen", "id": 28770047, "node_id": "MDQ6VXNlcjI4NzcwMDQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/28770047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zepengchen", "html_url": "https://github.com/zepengchen", "followers_url": "https://api.github.com/users/zepengchen/followers", "following_url": "https://api.github.com/users/zepengchen/following{/other_user}", "gists_url": "https://api.github.com/users/zepengchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/zepengchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zepengchen/subscriptions", "organizations_url": "https://api.github.com/users/zepengchen/orgs", "repos_url": "https://api.github.com/users/zepengchen/repos", "events_url": "https://api.github.com/users/zepengchen/events{/privacy}", "received_events_url": "https://api.github.com/users/zepengchen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-03T10:15:57Z", "updated_at": "2020-04-03T13:28:22Z", "closed_at": "2020-04-03T13:28:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Test code:\r\n\r\n```python\r\np = pathlib.Path('/xxxxx/6BC3C33F4D6EA0D626E1881ACC7F70AC.apk_FILES/META-INF/SUPERWAL.RSA')\r\ndata = p.read_bytes()\r\n\r\ninfo = cms.ContentInfo.load(data)\r\nsigned_data = info['content']\r\nfor certificate in signed_data['certificates']:\r\n    item = {}\r\n    cert = x509.Certificate.load(certificate.contents)\r\n    print(cert)\r\n    tbs_certificate = cert['tbs_certificate']\r\n```\r\n\r\nError Information\r\n```\r\n<asn1crypto.x509.Certificate 139859613693600 b'0\\x82\\x01\\xad\\xa0\\x03\\x02\\x01\\x02\\x02\\x04=\\xd1\\x97\\x0c0\\r\\x06\\t*\\x86H\\x86\\xf7\\r\\x01\\x01\\x0b\\x05\\x000\\x131\\x110\\x0f\\x06\\x03U\\x04\\x03\\x13\\x08superwal0\\x1e\\x17\\r191213102929Z\\x17\\r441206102929Z0\\x131\\x110\\x0f\\x06\\x03U\\x04\\x03\\x13\\x08superwal0\\x82\\x01\"0\\r\\x06\\t*\\x86H\\x86\\xf7\\r\\x01\\x01\\x01\\x05\\x00\\x03\\x82\\x01\\x0f\\x000\\x82\\x01\\n\\x02\\x82\\x01\\x01\\x00\\x82@\\x86(\"\\x1b\\x01\\x98\\x0f\\xc2.hC\\xe3(6\\x9e\\xb4\\x14v\\xc4v\\xae\\x93\\xfa\\x96\\x88\\x01\\x9dK<\\xe5}\\xb8,\\xc8c\\x1cU\\xdbd\\xa40L%O\\x94P\\x0e_\\xfd\\x8c,\\x89\\xb8\\x99\\xb4\\xc7h\\x94\\xe1D\\x17B\\xc5\\x18/0j_\\x82\\xbc\\x912\\x8d\\xdc\\xe6\\xf3v\\xc5he\\xa5\\xd4\\x94\\xac\\x90Y\\xb5#\\xd9\"h\\xd1\\x8d\\xa8\\x9a\\x96\\x18(*l2D\\x98\\x08_\\xc2J1m\\xf8h)N&\\xfb&\\xe8\\xe3\\x8aHa\\xa1 \\x06\\xfek\\xb6\\xcb\\xb3a8\\xbd\\x10\\xd1s\\x80\\x87[\\xe5&>\\x9bx\\x9f\\xccB:\\xba`>C\\x90Z\\xado\\xfa\\xf5Y\\x87\\x9e\\x9aa\\x96\\x96\\x88\\xc4\\xe7\\'\\xe1A\\xe9yc\\xdaR\\xb8\\xf6\\x03K\\xa1\\xc9\\x04\\xcd:\\xb23=e\\xbb\\x13\\xf2F\\xdag\\x0f\\x05o\\xcc\\xc6\\x93M$NQn\\x9aV0d\\xfdqAy\\x11\"\\xe8\\xceb\\xc9qC\\xc6*\\xa4\"\\x99w)\\x96\\xce\\x857\\xd6\\xf7\\xc8%\\xee\\x12\\xc1q\\xd3\\x9f-s\\xad\\x8eNs&G\\x03rZ\\x15\\x02\\x03\\x01\\x00\\x01\\xa3!0\\x1f0\\x1d\\x06\\x03U\\x1d\\x0e\\x04\\x16\\x04\\x14H?\\xc2\\x87\\xd3,\\x03#X$\\xdf\\x04\\xee\\xe5\\xcf\\xe4\\x13\\xee\\xa9{'>\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/xxxxx/git/mr-dirty-backend/test1.py\", line 13, in <module>\r\n    tbs_certificate = cert['tbs_certificate']\r\n  File \"/home/xxxxx/.virtualenvs/p38/lib/python3.8/site-packages/asn1crypto/core.py\", line 3514, in __getitem__\r\n    raise e\r\n  File \"/home/xxxxx/.virtualenvs/p38/lib/python3.8/site-packages/asn1crypto/core.py\", line 3509, in __getitem__\r\n    return self._lazy_child(key)\r\n  File \"/home/xxxxx/.virtualenvs/p38/lib/python3.8/site-packages/asn1crypto/core.py\", line 3456, in _lazy_child\r\n    child = self.children[index] = _build(*child)\r\n  File \"/home/xxxxx/.virtualenvs/p38/lib/python3.8/site-packages/asn1crypto/core.py\", line 5515, in _build\r\n    raise ValueError(unwrap(\r\nValueError: Error parsing asn1crypto.x509.TbsCertificate - class should have been universal, but context was found\r\n    while parsing asn1crypto.x509.Certificate`\r\n```\r\n\r\nasn1crypto Version: 1.3.0\r\n\r\nAbove code is success in asn1crypto-0.24.0, but throws exception at asn1crypto-1.0.0, asn1crypto-1.2.0 and asn1crypto-1.3.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/179", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/179/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/179/events", "html_url": "https://github.com/wbond/asn1crypto/issues/179", "id": 593082574, "node_id": "MDU6SXNzdWU1OTMwODI1NzQ=", "number": 179, "title": "Failing to load timestamp from globalsign", "user": {"login": "hejsan", "id": 133708, "node_id": "MDQ6VXNlcjEzMzcwOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/133708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hejsan", "html_url": "https://github.com/hejsan", "followers_url": "https://api.github.com/users/hejsan/followers", "following_url": "https://api.github.com/users/hejsan/following{/other_user}", "gists_url": "https://api.github.com/users/hejsan/gists{/gist_id}", "starred_url": "https://api.github.com/users/hejsan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hejsan/subscriptions", "organizations_url": "https://api.github.com/users/hejsan/orgs", "repos_url": "https://api.github.com/users/hejsan/repos", "events_url": "https://api.github.com/users/hejsan/events{/privacy}", "received_events_url": "https://api.github.com/users/hejsan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2020-04-03T05:14:57Z", "updated_at": "2020-04-10T10:11:18Z", "closed_at": "2020-04-10T01:24:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for a great library.\r\nI am writing a small library intended to be a high level (as in simple to use) library for digitally signing pdf's generated with the WeasyPrint library (https://github.com/Kozea/WeasyPrint).\r\n\r\n\r\nI have already got it working for self-signed certificates and now I'm working on an adapter for digital signatures from the Globalsign DSS API (https://www.globalsign.com/en/resources/apis/api-documentation/digital-signing-service-api-documentation.html)\r\n\r\n\r\nThis is a direct link to the API Doc for the API call for a timestamp: https://www.globalsign.com/en/resources/apis/api-documentation/digital-signing-service-api-documentation.html#timestamp__digest__get\r\n\r\n\r\nI get an error when I try to load the timestamp token:\r\n```python\r\nresp = requests.get(self._url + '/timestamp/{digest}'.format(digest=signed_value.hex().upper()))\r\ntimestamp_token = resp.json()['token']\r\ntimestamp_token = base64.b64decode(timestamp_token)\r\ntsp_resp = tsp.TimeStampResp.load(timestamp_token)\r\n\r\n# When I try to access properties I get exceptions\r\nprint(tsp_resp['status'])\r\n\r\n  File \"/usr/local/src/python/WeasySign/weasysign/globalsign.py\", line 335, in _sign\r\n    print(tsp_resp['status'])\r\n  File \"/usr/local/lib/python3.6/site-packages/asn1crypto/core.py\", line 3514, in __getitem__\r\n    raise e\r\n  File \"/usr/local/lib/python3.6/site-packages/asn1crypto/core.py\", line 3509, in __getitem__\r\n    return self._lazy_child(key)\r\n  File \"/usr/local/lib/python3.6/site-packages/asn1crypto/core.py\", line 3456, in _lazy_child\r\n    child = self.children[index] = _build(*child)\r\n  File \"/usr/local/lib/python3.6/site-packages/asn1crypto/core.py\", line 5535, in _build\r\n    METHOD_NUM_TO_NAME_MAP.get(method, method)\r\nValueError: Error parsing asn1crypto.tsp.PKIStatusInfo - method should have been constructed, but primitive was found\r\n    while parsing asn1crypto.tsp.TimeStampResp\r\n\r\n# And when I try to access the 'time_stamp_token' property:\r\nprint(tsp_resp['time_stamp_token'])\r\n\r\n File \"/usr/local/src/python/WeasySign/weasysign/globalsign.py\", line 336, in _sign\r\n    print(tsp_resp['time_stamp_token'])\r\n  File \"/usr/local/lib/python3.6/site-packages/asn1crypto/core.py\", line 3514, in __getitem__\r\n    raise e\r\n  File \"/usr/local/lib/python3.6/site-packages/asn1crypto/core.py\", line 3509, in __getitem__\r\n    return self._lazy_child(key)\r\n  File \"/usr/local/lib/python3.6/site-packages/asn1crypto/core.py\", line 3456, in _lazy_child\r\n    child = self.children[index] = _build(*child)\r\n  File \"/usr/local/lib/python3.6/site-packages/asn1crypto/core.py\", line 5522, in _build\r\n    CLASS_NUM_TO_NAME_MAP.get(class_, class_)\r\nValueError: Error parsing asn1crypto.cms.ContentInfo - class should have been universal, but context was found\r\n    while parsing asn1crypto.tsp.TimeStampResp\r\n```\r\n\r\nDo you have an idea of what is wrong?\r\nIs globalsign using it a different format for the timestamp token?\r\nThanks\r\nBjarni", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/178", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/178/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/178/events", "html_url": "https://github.com/wbond/asn1crypto/issues/178", "id": 592799489, "node_id": "MDU6SXNzdWU1OTI3OTk0ODk=", "number": 178, "title": "ASN.1 syntax highlighting", "user": {"login": "pcece", "id": 35300429, "node_id": "MDQ6VXNlcjM1MzAwNDI5", "avatar_url": "https://avatars0.githubusercontent.com/u/35300429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcece", "html_url": "https://github.com/pcece", "followers_url": "https://api.github.com/users/pcece/followers", "following_url": "https://api.github.com/users/pcece/following{/other_user}", "gists_url": "https://api.github.com/users/pcece/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcece/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcece/subscriptions", "organizations_url": "https://api.github.com/users/pcece/orgs", "repos_url": "https://api.github.com/users/pcece/repos", "events_url": "https://api.github.com/users/pcece/events{/privacy}", "received_events_url": "https://api.github.com/users/pcece/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-02T17:22:29Z", "updated_at": "2020-06-08T09:21:02Z", "closed_at": "2020-06-08T09:21:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear all,\r\n\r\nThanks to your previous highlight, I was able to dive deeper in ASN.1 syntax and CMS structure.\r\nPlease forgive me in advance if I haven't read the Manual, but I was not able to find a method which could provide the structure of the element.\r\n\r\nFor instance, I was looking for something like \r\n\r\n`myElement = cms.ContentInfo() .......\r\n\r\nmyElement.decode()\r\n`\r\n\r\nThen this method may provide something like \r\n\r\n`\r\n SEQUENCE\r\n content_type : \r\n\t OBJECT IDENTIFIER\r\n\t signed_data\r\n content : \r\n\t SEQUENCE\r\n\t version : \r\n\t\t INTEGER\r\n\t\t v1\r\n\t digest_algorithms : \r\n\t\t SET\r\n\t\t [ 0 ]\r\n\t\t \t algorithm\r\n\t\t\t\t sha256\r\n\t\t \t parameters\r\n\t encap_content_info : \r\n\t\t SEQUENCE\r\n\t\t content_type : \r\n\t\t\t OBJECT IDENTIFIER\r\n\t\t\t enveloped_data\r\n\t\t content : \r\n\t\t\t SEQUENCE\r\n\t\t\t version : \r\n\t\t\t\t INTEGER\r\n\t\t\t\t v0\r\n\t\t\t originator_info : \r\n\t\t\t recipient_infos : \r\n\t\t\t\t SET\r\n\t\t\t\t [ 0 ]\r\n\t\t\t\t \t version\r\n\t\t\t\t\t\t v0\r\n\t\t\t\t \t rid\r\n\t\t\t\t\t\t issuer\r\n\t\t\t\t\t\t\t country_name\r\n\t\t\t\t\t\t\t\t BE\r\n\t\t\t\t\t\t\t organization_name\r\n\t\t\t\t\t\t\t\t nexo\r\n\t\t\t\t\t\t\t common_name\r\n\t\t\t\t\t\t\t\t Nimbus2001-SN00000851\r\n\t\t\t\t\t\t serial_number\r\n\t\t\t\t\t\t\t 60544976534679537650102612762681661070401724434\r\n\t\t\t\t \t key_encryption_algorithm\r\n\t\t\t\t\t\t algorithm\r\n\t\t\t\t\t\t\t rsaes_oaep\r\n\t\t\t\t\t\t parameters\r\n\t\t\t\t\t\t\t hash_algorithm\r\n\t\t\t\t\t\t\t\t algorithm\r\n\t\t\t\t\t\t\t\t\t sha256\r\n\t\t\t\t\t\t\t\t parameters\r\n\t\t\t\t\t\t\t mask_gen_algorithm\r\n\t\t\t\t\t\t\t\t algorithm\r\n\t\t\t\t\t\t\t\t\t mgf1\r\n\t\t\t\t\t\t\t\t parameters\r\n\t\t\t\t\t\t\t\t\t algorithm\r\n\t\t\t\t\t\t\t\t\t\t sha256\r\n\t\t\t\t\t\t\t\t\t parameters\r\n\t\t\t\t\t\t\t p_source_algorithm\r\n\t\t\t\t\t\t\t\t algorithm\r\n\t\t\t\t\t\t\t\t\t p_specified\r\n\t\t\t\t\t\t\t\t parameters\r\n\t\t\t\t\t\t\t\t\t b''\r\n\t\t\t\t \t encrypted_key\r\n\t\t\t\t\t\t b'20139F59CC2A3400CA21287C1F63D3FE7CD8AAAF7EE17BEAE82560CABAF3E54C036513B4D1F2E9A0ADC756C52F6C8C52843F9BD67B0879C02B598A0F7EDEE8FB68C33146432946333AE843509E6FA33BA3C82A5D9F5FDB23E6182D0E5FD7ADAAD2C15F6510F7C48D498329C762C0000D906C1AF0D81715C4777C0C4C037424A2549E2A2F028BA40CAEBDECD388821EFC04C52D7EFCC71AFDBDBCFC438AD6CB4AA3FE73E420CF5FA3A290749D55F0EB851EB1AE060F3548D9DBD7EDDDCCCB63952E9D94DA7424C340ECAE78DF27AD4BDC4978A56766D0F5A59E63BDD7148ACB08E3694AC1D0A0E0FF0F87FE35578329A0BAB7AD470A0C056FCBFC1D40F3E3D2C3'\r\n\t\t\t encrypted_content_info : \r\n\t\t\t\t SEQUENCE\r\n\t\t\t\t content_type : \r\n\t\t\t\t\t OBJECT IDENTIFIER\r\n\t\t\t\t\t data\r\n\t\t\t\t content_encryption_algorithm : \r\n\t\t\t\t\t SEQUENCE\r\n\t\t\t\t\t algorithm : \r\n\t\t\t\t\t\t OBJECT IDENTIFIER\r\n\t\t\t\t\t\t tripledes_3key\r\n\t\t\t\t\t parameters : \r\n\t\t\t\t\t\t\t b'A27BB46D1C306E09'\r\n\t\t\t\t encrypted_content : \r\n\t\t\t\t\t\t b'FFD04017E9B208D56929877F531F702DEAF7402916217196F35B895C767F36F4486501625DF2518696B976695E28F0C9062F48E24C5394020E667990F390FBF93BAAA45A0521D7A9CA4C48A686CB5C8E94347D9D95A6FD1EBF0AA26B7F6115022BE2241CF135849A573CF08E19EA10AFEBAD6DB3B47F0CF32D5FEC1EB7285A0B8747C346A059638CB39E52EC5746BCBEC408842551D80F81'\r\n\t\t\t unprotected_attrs : \r\n\t certificates : \r\n\t crls : \r\n\t signer_infos : \r\n\t\t SET\r\n\t\t [ 0 ]\r\n\t\t \t version\r\n\t\t\t\t v1\r\n\t\t \t sid\r\n\t\t\t\t issuer\r\n\t\t\t\t\t country_name\r\n\t\t\t\t\t\t BE\r\n\t\t\t\t\t organization_name\r\n\t\t\t\t\t\t nexo\r\n\t\t\t\t\t common_name\r\n\t\t\t\t\t\t nexo-KeyInjectionServer-TM1\r\n\t\t\t\t serial_number\r\n\t\t\t\t\t 53456422700275957421126573432849728692699229865\r\n\t\t \t digest_algorithm\r\n\t\t\t\t algorithm\r\n\t\t\t\t\t sha256\r\n\t\t\t\t parameters\r\n\t\t \t signed_attrs\r\n\t\t\t\t [ 0 ]\r\n\t\t\t\t\t type\r\n\t\t\t\t\t\t content_type\r\n\t\t\t\t\t values\r\n\t\t\t\t\t\t [ 0 ]\r\n\t\t\t\t\t\t\t enveloped_data\r\n\t\t\t\t [ 1 ]\r\n\t\t\t\t\t type\r\n\t\t\t\t\t\t 1.2.840.113549.1.7.1\r\n\t\t\t\t\t values\r\n\t\t\t\t\t\t [ 0 ]\r\n\t\t\t\t\t\t\t b'B0016K1TD00N0000'\r\n\t\t\t\t [ 2 ]\r\n\t\t\t\t\t type\r\n\t\t\t\t\t\t 1.2.840.113549.1.9.25.3\r\n\t\t\t\t\t values\r\n\t\t\t\t\t\t [ 0 ]\r\n\t\t\t\t\t\t\t b'53675620D312085067D69431FAD6AC21'\r\n\t\t\t\t [ 3 ]\r\n\t\t\t\t\t type\r\n\t\t\t\t\t\t message_digest\r\n\t\t\t\t\t values\r\n\t\t\t\t\t\t [ 0 ]\r\n\t\t\t\t\t\t\t b'A48148D309E24D9E94E5E52045E18428B55BADBE200250467A49729C397A36D1'\r\n\t\t \t signature_algorithm\r\n\t\t\t\t algorithm\r\n\t\t\t\t\t sha256_rsa\r\n\t\t\t\t parameters\r\n\t\t \t signature\r\n\t\t\t\t b'64D0404B08A33B2E50A4088721D43349853B3B7FC951635E080B3F8D82E0E032A8D3AF5E65D5DD826F64E119EB43DB620867725AC9AC2AFED47BD7EEA52D24E990309CD3578DCEA40D1744B1B24B6C8D1CE252DAAD4BD72E1C1B66EDF5DA95501822B684D563F63CC020F6E39D1559337B7CACA157886933F75EB468A81C12A7BB7E2101781238A4E9124C3E80130D6C7BD7A61A289948A0356EE123E78F2BD94050B4D9DE5790CBBB37DDB7CB359F4693E1EA497E04613C5D16D1AFDE74E0E7F1259FFC0C2690D326F34B92BD3388D989A19531EC5D0302820FA74EEDA7CD7137ED8F2327D0279DA662ACAB82E6833F0C6A3AAE19782C9F996368E09B3AAA68'\r\n\t\t \t unsigned_attrs\r\n`\r\n\r\nThis method might help to find any misunderstanding or encoding error.\r\n\r\nMany thanks in advance for your answer.\r\n\r\nBest regards.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/177", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/177/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/177/events", "html_url": "https://github.com/wbond/asn1crypto/issues/177", "id": 591280296, "node_id": "MDU6SXNzdWU1OTEyODAyOTY=", "number": 177, "title": "cms.Name encoding error ?", "user": {"login": "pcece", "id": 35300429, "node_id": "MDQ6VXNlcjM1MzAwNDI5", "avatar_url": "https://avatars0.githubusercontent.com/u/35300429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcece", "html_url": "https://github.com/pcece", "followers_url": "https://api.github.com/users/pcece/followers", "following_url": "https://api.github.com/users/pcece/following{/other_user}", "gists_url": "https://api.github.com/users/pcece/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcece/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcece/subscriptions", "organizations_url": "https://api.github.com/users/pcece/orgs", "repos_url": "https://api.github.com/users/pcece/repos", "events_url": "https://api.github.com/users/pcece/events{/privacy}", "received_events_url": "https://api.github.com/users/pcece/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-31T17:18:55Z", "updated_at": "2020-04-01T07:48:47Z", "closed_at": "2020-04-01T07:48:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear all,\r\n\r\nMany thanks for your valuable code.\r\n\r\nI was doing some test to check if I've correctly understood CMS asn.1 syntax and X9.TR34 examples.\r\n\r\nSo I created the following examples :\r\n\r\n```python\r\npoiSignKeyInfo = cms.IssuerAndSerialNumber()\r\n\r\npoiName = cms.Name().build(\r\n    {\r\n        \"country_name\": \"BE\",\r\n        \"organization_name\": \"nexo\",\r\n        \"common_name\": \"Nimbus2001-SN00000851\",\r\n    }\r\n)\r\n\r\npoiSignKeyInfo[\"issuer\"] = poiName\r\npoiSignKeyInfo[\"serial_number\"] = cms.Integer(\r\n    60544976534679537650102612762681661070401724434\r\n)\r\n```\r\n\r\nAnd tried to verify my encoding by parsing the result\r\n\r\n```python\r\nbyteToVerify = hexlify(poiName.dump())\r\ndecodedByte = cms.Name()\r\ndecodedByte.load(byteToVerify)\r\nprint(\"Verification with ans1crypto : \", decodeByte)\r\n```\r\n\r\nwhich yields to the following error \r\n```\r\nValueError: Value [UNIVERSAL 19] did not match the class and tag of any of the a\r\nlternatives in asn1crypto.x509.Name: [UNIVERSAL 16]\r\n```\r\n\r\nSo I tried to check with pyasn1 in order to verify the encoding, and the result i what i expect :\r\nContent of poiSignKeyInfo\r\n\r\n```\r\nIssuerAndSerialNumber:\r\n issuer=Name:\r\n  rdnSequence=RDNSequence:\r\n   RelativeDistinguishedName:\r\n    AttributeTypeAndValue:\r\n     type=2.5.4.6\r\n     value=0x13024245\r\n   RelativeDistinguishedName:\r\n    AttributeTypeAndValue:\r\n     type=2.5.4.10\r\n     value=0x13046e65786f\r\n   RelativeDistinguishedName:\r\n    AttributeTypeAndValue:\r\n     type=2.5.4.3\r\n     value=0x13154e696d627573323030312d534e3030303030383531\r\n\r\n\r\n serialNumber=60544976534679537650102612762681661070401724434\r\n```\r\n\r\nSo I'm wondering if there is an error in the encoding of cms.Name.\r\n\r\nShould you need further details, please feel to ask.\r\n\r\nBest regards.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/175", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/175/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/175/events", "html_url": "https://github.com/wbond/asn1crypto/issues/175", "id": 556081630, "node_id": "MDU6SXNzdWU1NTYwODE2MzA=", "number": 175, "title": "PrivateKeyInfo.bit_size and PublicKeyInfo.bit_size returns non-integer", "user": {"login": "thka2315", "id": 8670629, "node_id": "MDQ6VXNlcjg2NzA2Mjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8670629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thka2315", "html_url": "https://github.com/thka2315", "followers_url": "https://api.github.com/users/thka2315/followers", "following_url": "https://api.github.com/users/thka2315/following{/other_user}", "gists_url": "https://api.github.com/users/thka2315/gists{/gist_id}", "starred_url": "https://api.github.com/users/thka2315/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thka2315/subscriptions", "organizations_url": "https://api.github.com/users/thka2315/orgs", "repos_url": "https://api.github.com/users/thka2315/repos", "events_url": "https://api.github.com/users/thka2315/events{/privacy}", "received_events_url": "https://api.github.com/users/thka2315/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-28T09:26:26Z", "updated_at": "2020-07-28T14:19:18Z", "closed_at": "2020-07-27T11:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use Ubuntu Eoan with python3-asn1crypto 0.24.0-1.\r\nIt looks like PrivateKeyInfo.bit_size and PublicKeyInfo.bit_size returns non-integer.\r\nI can see that *.byte_size returns a value with int() but the *.bit_size functions does not. The documentation in the function says it should return an integer.\r\n\r\nprint(certificate.public_key.bit_size) returns in my case \"256.0\"\r\n\r\nShouldn't it return only \"256\"?\r\n\r\nThanks for a great library!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/172", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/172/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/172/events", "html_url": "https://github.com/wbond/asn1crypto/issues/172", "id": 528206574, "node_id": "MDU6SXNzdWU1MjgyMDY1NzQ=", "number": 172, "title": "Sequences problem. One sequence aggregates all the others.", "user": {"login": "ftbarata", "id": 20630844, "node_id": "MDQ6VXNlcjIwNjMwODQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/20630844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftbarata", "html_url": "https://github.com/ftbarata", "followers_url": "https://api.github.com/users/ftbarata/followers", "following_url": "https://api.github.com/users/ftbarata/following{/other_user}", "gists_url": "https://api.github.com/users/ftbarata/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftbarata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftbarata/subscriptions", "organizations_url": "https://api.github.com/users/ftbarata/orgs", "repos_url": "https://api.github.com/users/ftbarata/repos", "events_url": "https://api.github.com/users/ftbarata/events{/privacy}", "received_events_url": "https://api.github.com/users/ftbarata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-25T16:44:07Z", "updated_at": "2019-11-27T16:49:54Z", "closed_at": "2019-11-25T19:44:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone, I've built a project using AttributeCertificateInfoV2. The certificates I issue are parsed by a software of a company. They say that \"my certificates\" have just one sequence that aggregates all the other \"internal\" sequences, so the software is unable to parse my certs. I've attached two images. The first one is the \"correct\" expected structure by the parsing software and the second one is the structure of a cert issued by me using asn1crypto.\r\nHow can I change this behaviour to fit the correct/expected form?\r\n\r\n![correct](https://user-images.githubusercontent.com/20630844/69559870-82f12780-0f89-11ea-9e11-13f94849c005.jpeg)\r\n![wrong](https://user-images.githubusercontent.com/20630844/69559871-82f12780-0f89-11ea-942b-fd9254951b46.jpeg)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/167", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/167/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/167/events", "html_url": "https://github.com/wbond/asn1crypto/issues/167", "id": 520446777, "node_id": "MDU6SXNzdWU1MjA0NDY3Nzc=", "number": 167, "title": "util.timezone init error when copy() (python2 only)", "user": {"login": "luckylud", "id": 10115202, "node_id": "MDQ6VXNlcjEwMTE1MjAy", "avatar_url": "https://avatars3.githubusercontent.com/u/10115202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luckylud", "html_url": "https://github.com/luckylud", "followers_url": "https://api.github.com/users/luckylud/followers", "following_url": "https://api.github.com/users/luckylud/following{/other_user}", "gists_url": "https://api.github.com/users/luckylud/gists{/gist_id}", "starred_url": "https://api.github.com/users/luckylud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luckylud/subscriptions", "organizations_url": "https://api.github.com/users/luckylud/orgs", "repos_url": "https://api.github.com/users/luckylud/repos", "events_url": "https://api.github.com/users/luckylud/events{/privacy}", "received_events_url": "https://api.github.com/users/luckylud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-09T14:46:09Z", "updated_at": "2020-01-04T14:23:12Z", "closed_at": "2019-12-25T11:28:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With python 2 when calling core.Asn1Value.untag()\r\n\r\n> .../asn1crypto/core.py\", line 568, in untag\r\n>     new_obj._copy(self, copy.deepcopy)\r\n>   File \".../asn1crypto/core.py\", line 4524, in _copy\r\n>     super(SequenceOf, self)._copy(other, copy_func)\r\n>   File \".../asn1crypto/core.py\", line 593, in _copy\r\n>     self._native = copy_func(other._native)\r\n> .....\r\n>   File \"/usr/lib/python2.7/copy.py\", line 329, in _reconstruct\r\n>     y = callable(*args)\r\n> TypeError: __init__() takes at least 2 arguments (1 given)\r\n> \r\n\r\nIn asn1crypto.util\r\nSet default timezone offset with timedelta(0) fix it:\r\n`def __init__(self, offset=timedelta(0), name=None):`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/163", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/163/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/163/events", "html_url": "https://github.com/wbond/asn1crypto/issues/163", "id": 516662804, "node_id": "MDU6SXNzdWU1MTY2NjI4MDQ=", "number": 163, "title": "Support for brainpool ECC algorithms", "user": {"login": "johughes99", "id": 37559949, "node_id": "MDQ6VXNlcjM3NTU5OTQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/37559949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johughes99", "html_url": "https://github.com/johughes99", "followers_url": "https://api.github.com/users/johughes99/followers", "following_url": "https://api.github.com/users/johughes99/following{/other_user}", "gists_url": "https://api.github.com/users/johughes99/gists{/gist_id}", "starred_url": "https://api.github.com/users/johughes99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johughes99/subscriptions", "organizations_url": "https://api.github.com/users/johughes99/orgs", "repos_url": "https://api.github.com/users/johughes99/repos", "events_url": "https://api.github.com/users/johughes99/events{/privacy}", "received_events_url": "https://api.github.com/users/johughes99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-11-02T17:20:30Z", "updated_at": "2020-01-04T14:24:19Z", "closed_at": "2019-11-05T10:44:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can support for brainpool ECC algorithms be added please.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/162", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/162/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/162/events", "html_url": "https://github.com/wbond/asn1crypto/issues/162", "id": 515824514, "node_id": "MDU6SXNzdWU1MTU4MjQ1MTQ=", "number": 162, "title": "Bug in signed_digest_algo", "user": {"login": "ftbarata", "id": 20630844, "node_id": "MDQ6VXNlcjIwNjMwODQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/20630844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftbarata", "html_url": "https://github.com/ftbarata", "followers_url": "https://api.github.com/users/ftbarata/followers", "following_url": "https://api.github.com/users/ftbarata/following{/other_user}", "gists_url": "https://api.github.com/users/ftbarata/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftbarata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftbarata/subscriptions", "organizations_url": "https://api.github.com/users/ftbarata/orgs", "repos_url": "https://api.github.com/users/ftbarata/repos", "events_url": "https://api.github.com/users/ftbarata/events{/privacy}", "received_events_url": "https://api.github.com/users/ftbarata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-31T23:52:54Z", "updated_at": "2019-11-01T00:09:39Z", "closed_at": "2019-11-01T00:09:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nsigned_digest_algo = algos.SignedDigestAlgorithm({'algorithm': algos.SignedDigestAlgorithmId('sha1_rsa')})\r\nOR\r\nsigned_digest_algo = algos.SignedDigestAlgorithm({'algorithm': algos.SignedDigestAlgorithmId('1.2.840.113549.1.1.5')})\r\n\r\nsignature = OctetBitString(priv.sign(attribute_certificate_infov2.dump(), mechanism=Mechanism.SHA1_RSA_PKCS))\r\n\r\nattribute_certificate = cms.AttributeCertificateV2({\r\n          'ac_info': attribute_certificate_infov2,\r\n          'signature_algorithm':  signed_digest_algo,\r\n          'signature': signature\r\n  })\r\n```\r\nWhen the generated certificate is submited to https://lapo.it/asn1js, it's possible to see:\r\n```\r\nOBJECT IDENTIFIER 1.2.840.113549.1.1.11 sha256WithRSAEncryption (PKCS #1)\r\n```\r\n\r\n```\r\n\r\n-----BEGIN CERTIFICATE-----\r\nMIIEJTCCAw8CAQEwgZqhgZekKzApMScwJQYDVQQDDB5hbmRyZXNzYSB0ZW9kb3Jv\r\nIHNpbHZhIHBlcmVpcmGkDzANMQswCQYDVQQGEwJCUqQXMBUxEzARBgNVBAoMCklD\r\nUC1CcmFzaWykPjA8MTowOAYDVQQLDDFGRURFUkFDQU8gTkFDSU9OQUwgREUgQVBP\r\nSU8gQU9TIEVTVFVEQU5URVMgQlJBU0lMMIIBFqRNMEsxSTBHBgNVBAMMQEZFREVS\r\nQUNBTyBOQUNJT05BTCBERSBBUE9JTyBBT1MgRVNUVURBTlRFUyBCUkFTSUw6MTI2\r\nNDExNjgwMDAxNjWkDzANMQswCQYDVQQGEwJCUqQXMBUxEzARBgNVBAoMCklDUC1C\r\ncmFzaWykGzAZMRcwFQYDVQQHDA5SSU8gREUgSkFORUlST6QPMA0xCzAJBgNVBAgM\r\nAlJKpDQwMjEwMC4GA1UECwwnU2VjcmV0YXJpYSBkYSBSZWNlaXRhIEZlZGVyYWwg\r\nZG8gQnJhc2lspBowGDEWMBQGA1UECwwNUkZCIGUtQ05QSiBBM6QbMBkxFzAVBgNV\r\nBAsMDjAwNjc5MTYzMDAwMTQyMA0GCSqGSIb3DQEBCwUAAgQCzCdMMCIYDzIwMTkw\r\nMTAxMDAwMDAxWhgPMjAyMDAzMzEyMzU5NTlaMIIBGDBABgVgTAEKAQQ3MjEwMTE5\r\nOTUxNDgzMjQ2OTczODAwMDAwMDAwMDBmNzYzNzAwMDAwMDI1ODE0MTI3NERldHJh\r\nbjA6BgVgTAEKAgQxYy4gcHJhIHBhc3NhckN1cnNvIGxpdnJlcG9ydHVndWVzcmlv\r\nIGRhcyBvc3RyYXNSSjBABggrBgEFBQcBAQQ0MDIwMAYIKwYBBQUHMAGGJGh0dHA6\r\nLy9jZXJ0LnNvdWZlbmViLm9yZy5ici9haWEvNDY5MzA1BgNVHR8ELjAsMCqgKKAm\r\nhiRodHRwOi8vY2VydC5zb3VmZW5lYi5vcmcuYnIvY3JsLzQ2OTMwHwYDVR0jBBgw\r\nFoAUvNRGlZIxhAj0KP6ijFIHR2hfea4wCwYJKoZIhvcNAQEFA4IBAQBGCSx31oZL\r\nsNtLlEbOxjkZXE3cIqGqcPCIMkSCnetxfXUmFTyVeFmCWtiW7+NeSCioMYLi60jz\r\nrM/TrbVQHa+L3smDFo2sfthmgtg++QbHl9FfTEW1grv5sjgMzZeosze36xNvvorE\r\nZjJA04c5jpm3GS/9t66tDeRaemq3crD0yxC2A5tt0ifjDl0+MN7zSqN2idK7V2Uw\r\nyCZZar7b3jxpGZL0xOUgmnrP7UaZiJcKz0BQGUS7AOy4kdQKDq7DQtP6GF7s6mrY\r\n28IAfl+cdEk7nCOeu8KrOtAMcT7B7VS8za6Z06GVi1sjtdHGcPRmYnWiQLK7UQA3\r\nxwdrsq5D7eav\r\n-----END CERTIFICATE-----\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/159", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/159/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/159/events", "html_url": "https://github.com/wbond/asn1crypto/issues/159", "id": 509826899, "node_id": "MDU6SXNzdWU1MDk4MjY4OTk=", "number": 159, "title": "x509.Certificate: Missing '_value' on '_subject_directory_attributes' field name", "user": {"login": "calillo", "id": 28446685, "node_id": "MDQ6VXNlcjI4NDQ2Njg1", "avatar_url": "https://avatars0.githubusercontent.com/u/28446685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calillo", "html_url": "https://github.com/calillo", "followers_url": "https://api.github.com/users/calillo/followers", "following_url": "https://api.github.com/users/calillo/following{/other_user}", "gists_url": "https://api.github.com/users/calillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/calillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calillo/subscriptions", "organizations_url": "https://api.github.com/users/calillo/orgs", "repos_url": "https://api.github.com/users/calillo/repos", "events_url": "https://api.github.com/users/calillo/events{/privacy}", "received_events_url": "https://api.github.com/users/calillo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-21T08:59:45Z", "updated_at": "2020-01-04T14:23:28Z", "closed_at": "2019-11-05T10:43:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nfunction 'def subject_directory_attributes_value(self)' of Certificate class return always 'None' value because _subject_directory_attributes never valued on 'def _set_extensions(self):'\r\nI think '_subject_directory_attributes' have to be rename in '_subject_directory_attributes_value'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/158", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/158/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/158/events", "html_url": "https://github.com/wbond/asn1crypto/issues/158", "id": 509309071, "node_id": "MDU6SXNzdWU1MDkzMDkwNzE=", "number": 158, "title": "asn1crypto fails on macOS Catalina, due to loading unversioned /usr/lib/libcrypto.dylib", "user": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-18T21:02:26Z", "updated_at": "2020-04-13T10:39:27Z", "closed_at": "2019-10-19T03:56:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know this sounds weird, but I'm filing an issue to document a problem in past versions of asn1crypto, even though it is now fixed in version 1.0.0 and later. Please feel free to close :)\r\n\r\nOn macOS 10.15 \u201cCatalina\u201d, we were seeing as part of Homebrew builds several python-related formulas fail to build, due to an abort in `pip`. The issue is the following:\r\n\r\n- `pip` aborts, and the crash log contains this:\r\n```\r\n/usr/lib/libcrypto.dylib  \r\nabort() called  \r\nInvalid dylib load. Clients should not load the unversioned libcrypto dylib as it does not have a stable ABI.  \r\n```\r\n\r\n- That's because `/usr/lib/libcrypto.dylib` on Catalina is booby-trapped, and should not be used.\r\n- It turns out is gets loaded from `asn1crypto/_perf/_big_num_ctypes.py`\r\n- Because as part of `asn1crypto` there is no way to specific a specific library name or location for libcrypto.\r\n\r\nOf course, when I finally managed to get the backtrace and find out the issue was located here, I then quickly discovered that this code was removed in https://github.com/wbond/asn1crypto/commit/564e744e9b3ec01b542efcac57949a704e3de8a4 and should no longer be a problem with asn1crypto 1.0.0 or asn1crypto 1.2.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/157", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/157/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/157/events", "html_url": "https://github.com/wbond/asn1crypto/issues/157", "id": 505267626, "node_id": "MDU6SXNzdWU1MDUyNjc2MjY=", "number": 157, "title": "Issue with asn1crypto==1.0.1 while connecting to Snowflake", "user": {"login": "AzisK", "id": 18266480, "node_id": "MDQ6VXNlcjE4MjY2NDgw", "avatar_url": "https://avatars0.githubusercontent.com/u/18266480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AzisK", "html_url": "https://github.com/AzisK", "followers_url": "https://api.github.com/users/AzisK/followers", "following_url": "https://api.github.com/users/AzisK/following{/other_user}", "gists_url": "https://api.github.com/users/AzisK/gists{/gist_id}", "starred_url": "https://api.github.com/users/AzisK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AzisK/subscriptions", "organizations_url": "https://api.github.com/users/AzisK/orgs", "repos_url": "https://api.github.com/users/AzisK/repos", "events_url": "https://api.github.com/users/AzisK/events{/privacy}", "received_events_url": "https://api.github.com/users/AzisK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-10T13:21:16Z", "updated_at": "2019-10-16T02:09:29Z", "closed_at": "2019-10-16T02:09:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get an error with asn1crypto==1.0.1 while connecting to Snowflake. The error stacktrace is huge and I may not share everything due to confidentiality but I am sharing its first / last and most important parts. I am getting this.\r\n```\r\nERROR:snowflake.connector.network: 'APIException' object has no attribute 'message'\r\nINFO - Traceback (most recent call last):\r\nINFO -   File \"/disk2/seo/seo-etls/.venv/lib/python3.6/site-packages/snowflake/connector/ocsp_snowflake.py\", line 1065, in validate_by_direct_connection\r\nINFO -     self.process_ocsp_response(issuer, cert_id, ocsp_response)\r\nINFO -   File \"/disk2/seo/seo-etls/.venv/lib/python3.6/site-packages/snowflake/connector/ocsp_asn1crypto.py\", line 276, in process_ocsp_response\r\nINFO -     tbs_response_data)\r\nINFO -   File \"/disk2/seo/seo-etls/.venv/lib/python3.6/site-packages/snowflake/connector/ocsp_asn1crypto.py\", line 303, in verify_signature\r\nINFO -     pubkey = cert.public_key.unwrap().dump()\r\nINFO -   File \"/disk2/seo/seo-etls/.venv/lib/python3.6/site-packages/asn1crypto/keys.py\", line 1064, in unwrap\r\nINFO -     'asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, '\r\nINFO - asn1crypto._errors.APIException: asn1crypto.keys.PublicKeyInfo().unwrap() has been removed, please use oscrypto.asymmetric.PublicKey().unwrap() instead\r\n```\r\n```\r\nsnowflake.connector.errors.OperationalError: 250003: Failed to execute request: 'APIException' object has no attribute 'message'\r\n```\r\nHowever, asn1crypto==0.24.0 works well!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/155", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/155/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/155/events", "html_url": "https://github.com/wbond/asn1crypto/issues/155", "id": 502840757, "node_id": "MDU6SXNzdWU1MDI4NDA3NTc=", "number": 155, "title": "Is there a way to change the decoder used for x509.DirectoryString?", "user": {"login": "xulfir", "id": 1665519, "node_id": "MDQ6VXNlcjE2NjU1MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1665519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xulfir", "html_url": "https://github.com/xulfir", "followers_url": "https://api.github.com/users/xulfir/followers", "following_url": "https://api.github.com/users/xulfir/following{/other_user}", "gists_url": "https://api.github.com/users/xulfir/gists{/gist_id}", "starred_url": "https://api.github.com/users/xulfir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xulfir/subscriptions", "organizations_url": "https://api.github.com/users/xulfir/orgs", "repos_url": "https://api.github.com/users/xulfir/repos", "events_url": "https://api.github.com/users/xulfir/events{/privacy}", "received_events_url": "https://api.github.com/users/xulfir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-04T20:56:13Z", "updated_at": "2019-10-04T21:33:06Z", "closed_at": "2019-10-04T21:33:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've seen some x509 certs that seem to have UTF-8 data in a TeletexString x509.DirectoryString. e.g.\r\n```python\r\noriginal_data = b'\\x14\"ABCDEF pretend software co.\\xef\\xbc\\x8cltd.'\r\nds = x509.DirectoryString.load(original_data)\r\nds.native\r\n# Gives: 'ABCDEF pretend software co.\u00ef\u00bc\u0152ltd.'\r\n```\r\nWhen they were probably expecting `\\xef\\xbc\\x8c` to resolve to `\uff0c`, the UTF-8 fullwidth comma, e.g. `'ABCDEF pretend software co.\uff0cltd.'`\r\n\r\nIs there a way I can force the DirectoryString to use UTF8String to handle the data? I don't quite understand how/if I could alter the Choice without touching private data, so for now, my hacky attempt just replaces a byte in the header:\r\n```python\r\nx509.DirectoryString.load(b'\\x0c' + original_data[1:]).native\r\n# Gives: 'ABCDEF pretend software co.\uff0cltd.'\r\n```\r\n\r\nIs there a better way? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/154", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/154/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/154/events", "html_url": "https://github.com/wbond/asn1crypto/issues/154", "id": 502180440, "node_id": "MDU6SXNzdWU1MDIxODA0NDA=", "number": 154, "title": "Rewriting PublicKeyInfo.unwrap().dump() with PublicKeyInfo['public_key'].parsed.dump()", "user": {"login": "smtakeda", "id": 169573, "node_id": "MDQ6VXNlcjE2OTU3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/169573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smtakeda", "html_url": "https://github.com/smtakeda", "followers_url": "https://api.github.com/users/smtakeda/followers", "following_url": "https://api.github.com/users/smtakeda/following{/other_user}", "gists_url": "https://api.github.com/users/smtakeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/smtakeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smtakeda/subscriptions", "organizations_url": "https://api.github.com/users/smtakeda/orgs", "repos_url": "https://api.github.com/users/smtakeda/repos", "events_url": "https://api.github.com/users/smtakeda/events{/privacy}", "received_events_url": "https://api.github.com/users/smtakeda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-03T16:51:36Z", "updated_at": "2019-10-08T23:39:15Z", "closed_at": "2019-10-08T23:39:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Due to the change in 1.0.0, I'm rewriting `PublicKeyInfo.unwrap().dump()` with `PublicKeyInfo['public_key'].parsed.dump()`. Is this right approach or any other better way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/153", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/153/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/153/events", "html_url": "https://github.com/wbond/asn1crypto/issues/153", "id": 499107364, "node_id": "MDU6SXNzdWU0OTkxMDczNjQ=", "number": 153, "title": "UnboundLocalError: local variable 'value' referenced before assignment", "user": {"login": "steven2308", "id": 2533142, "node_id": "MDQ6VXNlcjI1MzMxNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2533142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steven2308", "html_url": "https://github.com/steven2308", "followers_url": "https://api.github.com/users/steven2308/followers", "following_url": "https://api.github.com/users/steven2308/following{/other_user}", "gists_url": "https://api.github.com/users/steven2308/gists{/gist_id}", "starred_url": "https://api.github.com/users/steven2308/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steven2308/subscriptions", "organizations_url": "https://api.github.com/users/steven2308/orgs", "repos_url": "https://api.github.com/users/steven2308/repos", "events_url": "https://api.github.com/users/steven2308/events{/privacy}", "received_events_url": "https://api.github.com/users/steven2308/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-26T20:45:29Z", "updated_at": "2019-10-01T04:37:02Z", "closed_at": "2019-10-01T04:37:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nFor some certificates which I assume are wrongly built, the code reaches a path were it tries to use a a variable which has not been defined, especifcally when accessing IPAddress.native\r\n\r\n**To Reproduce**\r\n```\r\nimport asn1crypto.x509\r\nx509 = b'0\\x82\\x04\\xf00\\x82\\x02\\xd8\\xa0\\x03\\x02\\x01\\x02\\x02\\x10\\x1b6\\n-\\x13\\xc5>]I\\xed\\xb3\\xce\\xd1\\xcb\\x12~0\\r\\x06\\t*\\x86H\\x86\\xf7\\r\\x01\\x01\\x0b\\x05\\x000\\x121\\x100\\x0e\\x06\\x03U\\x04\\n\\x13\\x07Acme Co0\\x1e\\x17\\r190820155018Z\\x17\\r200819155018Z0\\x121\\x100\\x0e\\x06\\x03U\\x04\\n\\x13\\x07Acme Co0\\x82\\x02\"0\\r\\x06\\t*\\x86H\\x86\\xf7\\r\\x01\\x01\\x01\\x05\\x00\\x03\\x82\\x02\\x0f\\x000\\x82\\x02\\n\\x02\\x82\\x02\\x01\\x00\\x9c\\x1b\\xe2\\xe5\\xe8\\x9f\\x18\\xe2\\xf7\\x13!\\xaa\\xa8\\teS\\xbb\\xbb\\x0bo\\xab\\x8a\\xc2\\xf5\\xe9\\xcd\\x83NW&\\x93\\xe3\\xc1\\xe6\\xa9 oP\\x1b\\xf9%&\\xf1\\x92Z\\x93\\xd03\\x93\\xbe\\x0em\\x04\\xda\\xb7\\xea\\xfa\\xd1\\'7\\x01\\xc8<*\\xfe\\xec}J\\x93\\xa0|sS~\\x8e\\xce88\\xd4\\xf8\\x9dHt\\x9a\\xc7rF\\xaf\"\\xf1\\x08\\x9e\\x11\\xa0\\x9f\\xbco\\x16M\\xc9\\x9c\\xfd\\xafh\".\\xe3l0\\xf4\\xecC\\x8e0&>\\xc1\\xde\\t\\x85\\x0c\\x85\\xd7\\x19\\x02\\x17\\xb4\\xdd\\x95>\\x94P\\x81\\x10\\xda\\x0cLk9\\x93\\xc7u\\x03\\x1a\\xb9\\x08D\\xa3\\xe7\\x85\\xd8\\xa2hS\\xf9\\xaeCm\\x07\\xadIG\\xffS\\x05+M|>\\xa8(T\\xc6\\xb9\\xad\\xeb\\x17\\xfc\\n\\x18\\x1d\\x90~\\x84\\xf8a\\x8f\\xcbJ\\xe4\\xbb\\xd94I\\xa7h\\x06\\x165\\xdbF \\x8a+\\x9eFEm\\x06\\xcaJ\\xe7\\xd1\\x0b\\x8f\\xcaY\\x0e\\xb5#\\xbc\\x08w@\\xb2\\xbe-O\\xd1\\r\\xc4\\x9a\\x96\\x1f|\\xcdaO\\xe4\\x8e\\xcd\\x8d\\xcalA\\xf6\\xad\\xe8\\xb1k\\xb7\\x80\\xdd\\x9d\\xc2]\\xa2\\xda\\xdf\\\\7ep\\xb0\\x7f2\\xc6\\x8f\\x10K\\x06[\\x10\\xb9c\\x83\\xc7\\xfft$\\x8e\\xc16\\xd8\\x820d\\x8f\\xca\\x18!\\xd4N\\x1bY}\\x1fIi\\xf8f-\\r\\xfc\\xb6\\xcb\\xec\\x95\\xae\\xc0\\x17\\x80\\xe6\\xcc\\xe0\\xab\\x1fvB,g\\xb9\\x10\\xf9\"q\\xcam\\xb6\\xde3^\\xbe\\xc8o?~\\xd1\\x8a\\x82bZ\\xe8R\\xb7\\x0c\\x00\\xfa\\x1d#9a\\xac\\xde-\\xb9\\xb9\\xaf\\xa7\\xf8U-d?V\\xb2\\xa5\\x87\\xd2\\xec-\\x80\\xb9&\\xf7\\x9a\\xf8J\\x87\\xa0Szs\\x16\\xa582\\x10?\\xa7\\x97\\xc5C\\x85\\x91\\x17K\\xea\\xde%}r\\x8a\\x19\\xed\\xaf\\x87}M\\xe2\\xa8t\\xbe\\'\\xf5\\xa5&\\xa8\\x8b\\xd7\\x85\\xe5\\xa5\\xa8\\xde\"\\x8f\\xa5\\xc5\\x96\\x1c\\x0b[_\\xbcq\\x11\\xd7q3\\xa4\\xb4\\xef\\x0c\\xa9G\\xebEw\\xecXt\\xd7)\\xf8\\x01\\xa2e\\x07\\xc8\\xe9\\x88\\x1a\\x14_dv\\xf1]~\\xdd-\\xa6\\x14\\x19\\x8a]:D\\xf0\\xa9\\xffE2\\xde/\\x15\\x05!L\\xed\\xf6\\xa4\\xfb*\\x8d\\x1a{p\\x83Y\\xe7K\\x8e\\xed%\\xf5\\xf3C\\x88\\xa8\\xe3\\x02\\x03\\x01\\x00\\x01\\xa3B0@0\\x0e\\x06\\x03U\\x1d\\x0f\\x01\\x01\\xff\\x04\\x04\\x03\\x02\\x05\\xa00\\x13\\x06\\x03U\\x1d%\\x04\\x0c0\\n\\x06\\x08+\\x06\\x01\\x05\\x05\\x07\\x03\\x010\\x0c\\x06\\x03U\\x1d\\x13\\x01\\x01\\xff\\x04\\x020\\x000\\x0b\\x06\\x03U\\x1d\\x11\\x04\\x040\\x02\\x87\\x000\\r\\x06\\t*\\x86H\\x86\\xf7\\r\\x01\\x01\\x0b\\x05\\x00\\x03\\x82\\x02\\x01\\x00\\x13 \\xe0D\\xa9\\x86\\x84qO\\xd4o\\n\\x07I3\\xdd\\xc8\\xd3?\\xc8&\\x01\\xb7\\x98\\x90\\xdf\\xfce\\x9dm\\xcbo\\xad8\\xd9\\x80\\xf1\\x15\\xb4\\xb28G\\xac%\\x81\\xdb\\xf9\\xfe2\\t+\\xd2\\xeb\\xbf\\xe6M\\xcb\\'\\xc8$\\x92\\xf1\\xe48{\\xf1\\xad\\xee\\xf60n\\xd5\\xa1\\x904\\x98\\x84t\\xa5}n4\\xfd\\xefz\\x88`\\x9a/\\xa2\\xa9\\x9c\\xdb1\\xf9\\x1aX\\x13\\x01T@\"\\xdc\\x7f\\x93J\\xcb\\x8b6\\x9d\\x85y ?n\\',\\xfd\\xd7d\\x86%\\xcd\\xe0\\xbdu\\x1b\\r\\xf6u\\xfc)\\xd5\\xaf1S\\x12\\x11\\r\\x98\\xd3\\xb97\\x92\\x19 \\x06PM\\xb5\\xdeK\\x04\\x9a\\xafx\\xf6\\\\\\x12\\xdbK\\xd9\\xdf\\x19vc\\xcf\\x9cI9\\x91\\xba\\xa6\\xa2\\x1c`z@\\xc6\\xbcQ\\xd3\\xc6z\\xa0\\xf2O\\xfe\\xa8\\x9f\\xa2\\x1a\\xe03\\xb3\\x1f&+S\\x8a\\xb3\\x98=\\x8e;\\xeaq\\xf8ozU:\\x90\\x9b\\x9c\\x8b\\'B\\xe4]9\\xf2\\xd3\\x05x\\xcbQ\\x15>\\x0f\\x05<\\x03_\\xb6+D\\xc1\\xa9\\x86\\xa0\\xc5\\x05\\xa4\\xadJ\\x02\\xe2\\x951\\x0c\\xb5D\\x15RQ\\xb2\\xd9\\x9b0@\\xd0b\\x08\\xf7\\n\\xefH\\t\\xb5}E\\x8d\\x91\\x1b\\xf3\\xb7\\xcaB\\xa1\\xcd\\'\\xedE\\x10\\xa7\\xfaf\\x1b\\xaa\\xe0\\xeehy\\xda+q\\xaf\\xa7\\xbc\\xc9\\xb8\\x8eTA\\xe7]\\x0fo\\xbfG\\xb8\\th`\\xc6rx|{<\\x0b\\xb3\\r,\\x83\\xf3\\xe0\\xcbz\\x14\\xef\\xea\\xfd\\x95N\\\\\\xde\\x8f\\x83Y\\x8aVr=\\xed\\x1b\\x92j6\\xcd\\x85\\xe7\\xa7\\xd1L{Dv\\xfe*\\xa9\\x9c\\x84\\x8d)\\xd8\\xae%\\xbdx\\xa5\\xe1}\\xbe\\xc8\\xc6p<E\\xc9y\\xdb\\x17\\xa0v\\xfe\\xf6vih\\xf5\\x95\\xe8\\x1c\\x95g\\x8e\\xcf\\xcd\\x9e\\xb6\\xed\\xa5O\\xfca\\x94{\\x08\\x1aV\\xd0\\x84\\x8b\\x87\\x98[\\xb2j\\x0f\\xd5\\x15\\x8b\\xa1\\x08\\r\\xb5\\xb5\\xee\\x175\\xd1k\\xefro\\x16\\xd7\\x0b\\x00\\xfaS)\\x03\\n\\x8b\\xc6^9\\x03\\xc8_\\x0b\\x86\\xef\\x0c\\xd9\\x07\\xb6\\x86\\xfe8\\\\i\\x08e\\xf3\\xa6\\xa9\\xc4\\x05\\xf4\\x81\\x9a\\xd1\\x96\\xfe\\xd7\\xd3Ko\\xc5G\\xc7T\\x94\\x12\\xc7G\\xce\\x1e\\x03\\xa2F:dZsDW\\xdcP\\x89v\\x8f\\xca\\xe9\\x15\\x8ac\\xd6'\r\n\r\nasn1 = asn1crypto.x509.Certificate.load(x509)\r\nasn1.native\r\n```\r\n\r\n**Expected behavior**\r\nRaise ValueError.\r\n\r\n\r\n**Version:**\r\n - OS: Ubuntu 19.04\r\n - Python: 3.6.8\r\n - asn1crypto==0.24.0\r\n\r\n\r\n**Additional context**\r\nThis was the original PEM and how I got it to x509:\r\n```\r\nimport OpenSSL.crypto\r\n\r\nPEM = '-----BEGIN CERTIFICATE-----\\nMIIE8DCCAtigAwIBAgIQGzYKLRPFPl1J7bPO0csSfjANBgkqhkiG9w0BAQsFADAS\\nMRAwDgYDVQQKEwdBY21lIENvMB4XDTE5MDgyMDE1NTAxOFoXDTIwMDgxOTE1NTAx\\nOFowEjEQMA4GA1UEChMHQWNtZSBDbzCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCC\\nAgoCggIBAJwb4uXonxji9xMhqqgJZVO7uwtvq4rC9enNg05XJpPjweapIG9QG/kl\\nJvGSWpPQM5O+Dm0E2rfq+tEnNwHIPCr+7H1Kk6B8c1N+js44ONT4nUh0msdyRq8i\\n8QieEaCfvG8WTcmc/a9oIi7jbDD07EOOMCY+wd4JhQyF1xkCF7TdlT6UUIEQ2gxM\\nazmTx3UDGrkIRKPnhdiiaFP5rkNtB61JR/9TBStNfD6oKFTGua3rF/wKGB2QfoT4\\nYY/LSuS72TRJp2gGFjXbRiCKK55GRW0Gykrn0QuPylkOtSO8CHdAsr4tT9ENxJqW\\nH3zNYU/kjs2NymxB9q3osWu3gN2dwl2i2t9cN2VwsH8yxo8QSwZbELljg8f/dCSO\\nwTbYgjBkj8oYIdROG1l9H0lp+GYtDfy2y+yVrsAXgObM4KsfdkIsZ7kQ+SJxym22\\n3jNevshvP37RioJiWuhStwwA+h0jOWGs3i25ua+n+FUtZD9WsqWH0uwtgLkm95r4\\nSoegU3pzFqU4MhA/p5fFQ4WRF0vq3iV9cooZ7a+HfU3iqHS+J/WlJqiL14Xlpaje\\nIo+lxZYcC1tfvHER13EzpLTvDKlH60V37Fh01yn4AaJlB8jpiBoUX2R28V1+3S2m\\nFBmKXTpE8Kn/RTLeLxUFIUzt9qT7Ko0ae3CDWedLju0l9fNDiKjjAgMBAAGjQjBA\\nMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8E\\nAjAAMAsGA1UdEQQEMAKHADANBgkqhkiG9w0BAQsFAAOCAgEAEyDgRKmGhHFP1G8K\\nB0kz3cjTP8gmAbeYkN/8ZZ1ty2+tONmA8RW0sjhHrCWB2/n+Mgkr0uu/5k3LJ8gk\\nkvHkOHvxre72MG7VoZA0mIR0pX1uNP3veohgmi+iqZzbMfkaWBMBVEAi3H+TSsuL\\nNp2FeSA/bics/ddkhiXN4L11Gw32dfwp1a8xUxIRDZjTuTeSGSAGUE213ksEmq94\\n9lwS20vZ3xl2Y8+cSTmRuqaiHGB6QMa8UdPGeqDyT/6on6Ia4DOzHyYrU4qzmD2O\\nO+px+G96VTqQm5yLJ0LkXTny0wV4y1EVPg8FPANftitEwamGoMUFpK1KAuKVMQy1\\nRBVSUbLZmzBA0GII9wrvSAm1fUWNkRvzt8pCoc0n7UUQp/pmG6rg7mh52itxr6e8\\nybiOVEHnXQ9vv0e4CWhgxnJ4fHs8C7MNLIPz4Mt6FO/q/ZVOXN6Pg1mKVnI97RuS\\najbNheen0Ux7RHb+KqmchI0p2K4lvXil4X2+yMZwPEXJedsXoHb+9nZpaPWV6ByV\\nZ47PzZ627aVP/GGUewgaVtCEi4eYW7JqD9UVi6EIDbW17hc10Wvvcm8W1wsA+lMp\\nAwqLxl45A8hfC4bvDNkHtob+OFxpCGXzpqnEBfSBmtGW/tfTS2/FR8dUlBLHR84e\\nA6JGOmRac0RX3FCJdo/K6RWKY9Y=\\n-----END CERTIFICATE-----\\n'\r\n\r\nx509 = OpenSSL.crypto.load_certificate(OpenSSL.crypto.FILETYPE_PEM, PEM)```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/151", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/151/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/151/events", "html_url": "https://github.com/wbond/asn1crypto/issues/151", "id": 496822558, "node_id": "MDU6SXNzdWU0OTY4MjI1NTg=", "number": 151, "title": "IntegerBitString encodes signed but decodes unsigned", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-22T19:35:01Z", "updated_at": "2019-09-28T00:05:14Z", "closed_at": "2019-09-28T00:05:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```python\r\nfrom asn1crypto.core import IntegerBitString\r\ndata = IntegerBitString(-1234).dump()\r\nprint(data.hex(), hex(IntegerBitString.load(data).native))\r\n```\r\nActual output: `030300fb2e 0xfb2e`\r\nExpected: `-1234` or some Exception.\r\nIf the current behaviour is by intention, it should be documented.\r\n\r\nNot sure if anyone uses this class.\r\n\r\n`IntegerOctetString`, which sounds similar in purpose, cannot encode signed values.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/150", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/150/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/150/events", "html_url": "https://github.com/wbond/asn1crypto/issues/150", "id": 496821607, "node_id": "MDU6SXNzdWU0OTY4MjE2MDc=", "number": 150, "title": "copy() not working with indefinite encodings", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-22T19:26:02Z", "updated_at": "2019-09-28T11:10:04Z", "closed_at": "2019-09-28T11:10:04Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```python\r\nfrom asn1crypto.core import OctetString\r\nios = OctetString.load(b'\\x24\\x80\\x04\\x03foo\\x00\\x00')\r\ncpy = ios.copy()\r\nprint(cpy.dump())\r\n```\r\n\r\nOutput: `b'\\x04\\x05\\x04\\x03foo'`\r\nExpected: `b'\\x24\\x80\\x04\\x03foo\\x00\\x00'` or `b'\\x04\\x03foo'`\r\n\r\nFor the missing `\\x00\\x00` see #136.\r\nThe result is quite broken.\r\nI tried adding `self._header = other._header` to `Asn1Value._copy`, but then `Certificate.authority_issuer_serial` will return a different values causing a test case to fail. I have no idea what `authority_issuer_serial` is for, so I cannot check if perhaps the test case is wrong.\r\n\r\nPerhaps `dump` and `_dump_header` should be changed to output indefinite encodings if so desired? But I guess this violates one basic principle of the library: to generate only DER.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/147", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/147/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/147/events", "html_url": "https://github.com/wbond/asn1crypto/issues/147", "id": 481046535, "node_id": "MDU6SXNzdWU0ODEwNDY1MzU=", "number": 147, "title": "Add support for BER encoded BitString", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-15T08:22:59Z", "updated_at": "2019-09-27T23:49:08Z", "closed_at": "2019-09-27T23:49:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "X.690 has an example for a BER encoded BitString with a nested structure (\u00a78.6.4.2).\r\nIt looks like asn1crypto cannot parse this.\r\n\r\n```python3\r\n#!/usr/bin/env python\r\n\r\nfrom asn1crypto.core import BitString\r\nimport re\r\n\r\nder = bytes.fromhex(re.sub(r'\\s+', '', '''\r\n    23 80\r\n        03 03 00 0a 3b\r\n        03 05 04 5f 29 1c d0\r\n    00 00\r\n'''))\r\n\r\nbstr = BitString.load(der)\r\nprint(bstr.native)\r\n```\r\n\r\ndumpasn1 shows as output:\r\n```\r\n   0 NDEF: BIT STRING {\r\n   2    3:   BIT STRING\r\n         :     '1101110001010000'B\r\n   7    5:   BIT STRING 4 unused bits\r\n         :     '1011001110001001010011111010'B\r\n         :   }\r\n```\r\n\r\nPython program shows:\r\n```\r\nTraceback (most recent call last):\r\n  File \"./bitstr\", line 13, in <module>\r\n    bstr = BitString.load(der)\r\n  File \"/home/user/.venv/asn1crypto/lib/python3.8/site-packages/asn1crypto/core.py\", line 230, in load\r\n    value, _ = _parse_build(encoded_data, spec=spec, spec_params=kwargs, strict=strict)\r\n  File \"/home/user/.venv/asn1crypto/lib/python3.8/site-packages/asn1crypto/core.py\", line 5393, in _parse_build\r\n    info, new_pointer = _parse(encoded_data, encoded_len, pointer)\r\n  File \"/home/user/.venv/asn1crypto/lib/python3.8/site-packages/asn1crypto/parser.py\", line 231, in _parse\r\n    raise ValueError(_INSUFFICIENT_DATA_MESSAGE % (contents_end, data_len))\r\nValueError: Insufficient data - 66 bytes requested but only 16 available\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/144", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/144/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/144/events", "html_url": "https://github.com/wbond/asn1crypto/issues/144", "id": 461058165, "node_id": "MDU6SXNzdWU0NjEwNTgxNjU=", "number": 144, "title": "Error parsing asn1crypto.x509.EmailAddress - tag should have been 22, but 12 was found", "user": {"login": "RomaLash", "id": 10937060, "node_id": "MDQ6VXNlcjEwOTM3MDYw", "avatar_url": "https://avatars0.githubusercontent.com/u/10937060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RomaLash", "html_url": "https://github.com/RomaLash", "followers_url": "https://api.github.com/users/RomaLash/followers", "following_url": "https://api.github.com/users/RomaLash/following{/other_user}", "gists_url": "https://api.github.com/users/RomaLash/gists{/gist_id}", "starred_url": "https://api.github.com/users/RomaLash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RomaLash/subscriptions", "organizations_url": "https://api.github.com/users/RomaLash/orgs", "repos_url": "https://api.github.com/users/RomaLash/repos", "events_url": "https://api.github.com/users/RomaLash/events{/privacy}", "received_events_url": "https://api.github.com/users/RomaLash/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220107142, "node_id": "MDU6TGFiZWwyMjAxMDcxNDI=", "url": "https://api.github.com/repos/wbond/asn1crypto/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-26T16:03:19Z", "updated_at": "2019-10-01T04:54:27Z", "closed_at": "2019-10-01T04:54:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. \r\n\r\nMy code:\r\n`       raw_subject = raw_subject.native\r\n`\r\n\r\nWhen I tried to parse this cert \r\n`MIIDvjCCAqigAwIBAgIEVXFPzTALBgkqhkiG9w0BAQUwgaExCzAJBgNVBAYMAkRFMRMwEQYDVQQIDApUaHVlcmluZ2VuMQ8wDQYDVQQHDAZFcmZ1cnQxEjAQBgNVBAoMCUtleXdlYiBBRzEWMBQGA1UECwwNS2V5SGVscCBQYW5lbDEhMB8GA1UEAwwYa20zNDkyNy0wMS5rZXltYWNoaW5lLmRlMR0wGwYJKoZIhvcNAQkBDA5pbmZvQGtleXdlYi5kZTAiGA8yMDE1MDYwNTA3MjkxN1oYDzIwMjUwNjA1MDcyOTE3WjCBoTELMAkGA1UEBgwCREUxEzARBgNVBAgMClRodWVyaW5nZW4xDzANBgNVBAcMBkVyZnVydDESMBAGA1UECgwJS2V5d2ViIEFHMRYwFAYDVQQLDA1LZXlIZWxwIFBhbmVsMSEwHwYDVQQDDBhrbTM0OTI3LTAxLmtleW1hY2hpbmUuZGUxHTAbBgkqhkiG9w0BCQEMDmluZm9Aa2V5d2ViLmRlMIIBIDALBgkqhkiG9w0BAQEDggEPADCCAQoCggEBAK4HS2XPemRfn+wARSP885DfHn05+JDQe6KChNwMlKWwGMnwIwJh1ysyvgcNAYyB1uAB3DbAS0qkeVCGr7spQApD8DIk5GpuNmsrWm7s4/auwDiaUxxpj2tDGBGSNeaN36c+f1vKpED3SQdvTPLeKX0X3mx/yQbylQsfKrydgUr4nlfXa+QZHLHS+FvCDV+h1FzDb5Wdu4lLF0mdudo7rOBQsTVaccEfvCT79r1NocWL0/J6wpa4/Qs0cbxkTHCwgr9X7YpMBWtTmQl1wr/eN+yf9bx6xzCmRGJMD9Sjp2MUUTEfrQcLkB6aGWGgFYzHqUggX3kJPMHxw9pQq6Nz7ecCAwEAATALBgkqhkiG9w0BAQUDggEBAGE05k2ej7uKWTfkc6I0snDD/nqYlECCpkgAtZO0HKasihrICHewlyZt7hTMQVo77gZ3oeH5X1uJGGV5ITrrWDVHciYDGAeYSKWjYnZ2KtaC4UQN5+UBUkd59YDF+SYN34pqE+5N+UmfQDPOJX7C9v+sWiK9HouVKjNRNHAt0Ncz/Huwh5GOxMJfPaMFD5yJC4HYtj0uh5nTMppm+N/EKU3hXGtERXcRbRep8ovcwz1PpOkp+pnW9FJFjFfKRYdctzZ57g+GpQef2REUjasYJDXXObu9GDeanluZqINhd/7Qsoeygk5bcbsjOdpNJE/+aGCltJBWsWFfkSV1KM4Rg1E=`\r\n\r\nI get that error: \r\n\r\nError parsing asn1crypto.x509.EmailAddress - tag should have been 22, but 12 was found\r\n    while parsing asn1crypto.x509.NameTypeAndValue\r\n    while parsing asn1crypto.x509.RelativeDistinguishedName\r\n    while parsing asn1crypto.x509.RDNSequence\r\n\r\nThen I tried to parse this one at https://certlogik.com/decoder/\r\nAnd all worked fine, unfortunately.\r\n\r\n What could it be?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/143", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/143/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/143/events", "html_url": "https://github.com/wbond/asn1crypto/issues/143", "id": 450865707, "node_id": "MDU6SXNzdWU0NTA4NjU3MDc=", "number": 143, "title": "ModuleNotFoundError using `pyenv` on MacOS (Mojave/10.14.5)", "user": {"login": "kwatsen", "id": 2255354, "node_id": "MDQ6VXNlcjIyNTUzNTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2255354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kwatsen", "html_url": "https://github.com/kwatsen", "followers_url": "https://api.github.com/users/kwatsen/followers", "following_url": "https://api.github.com/users/kwatsen/following{/other_user}", "gists_url": "https://api.github.com/users/kwatsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/kwatsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kwatsen/subscriptions", "organizations_url": "https://api.github.com/users/kwatsen/orgs", "repos_url": "https://api.github.com/users/kwatsen/repos", "events_url": "https://api.github.com/users/kwatsen/events{/privacy}", "received_events_url": "https://api.github.com/users/kwatsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-31T15:50:58Z", "updated_at": "2019-06-02T20:54:44Z", "closed_at": "2019-06-02T20:54:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `pyenv`:\r\n\r\n```\r\n$ brew info pyenv\r\npyenv: stable 1.2.11 (bottled), HEAD\r\nPython version management\r\nhttps://github.com/pyenv/pyenv\r\n/usr/local/Cellar/pyenv/1.2.11 (643 files, 2.4MB) *\r\n  Poured from bottle on 2019-05-21 at 14:26:25\r\nFrom: https://github.com/Homebrew/homebrew-core/blob/master/Formula/pyenv.rb\r\n==> Dependencies\r\nRequired: autoconf \u2714, openssl \u2714, pkg-config \u2714, readline \u2714\r\n==> Options\r\n--HEAD\r\n\tInstall HEAD version\r\n==> Analytics\r\ninstall: 34,282 (30 days), 118,180 (90 days), 447,720 (365 days)\r\ninstall_on_request: 31,278 (30 days), 105,982 (90 days), 388,679 (365 days)\r\nbuild_error: 0 (30 days)\r\n```\r\n\r\nMy current environment is 3.7.2:\r\n\r\n```\r\n$ pyenv version\r\n3.7.2\r\n```\r\n\r\n```\r\n$ which python\r\n/Users/kent/.pyenv/shims/python\r\n\r\n$ which pip\r\n/Users/kent/.pyenv/shims/pip\r\n```\r\n\r\nInstallation works, but import fails (note: these are back-to-back commands):\r\n\r\n```\r\n$ pip install asn1crypto\r\nCollecting asn1crypto\r\n  Using cached https://files.pythonhosted.org/packages/ea/cd/35485615f45f30a510576f1a56d1e0a7ad7bd8ab5ed7cdc600ef7cd06222/asn1crypto-0.24.0-py2.py3-none-any.whl\r\nInstalling collected packages: asn1crypto\r\nSuccessfully installed asn1crypto-0.24.0\r\n\r\n$ python\r\nPython 3.7.2 (default, May 23 2019, 14:15:40) \r\n[Clang 10.0.1 (clang-1001.0.46.4)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import asn1crypto\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'asn1crypto'\r\n```\r\n\r\nFWIW, uninstalling works but (more important) shows that `asn1crypto` was installed in the correct virtual environment:\r\n\r\n```\r\n$ pip uninstall asn1crypto\r\nUninstalling asn1crypto-0.24.0:\r\n  Would remove:\r\n    /Users/kent/.pyenv/versions/3.7.2/Python.framework/Versions/3.7/lib/python3.7/site-packages/asn1crypto-0.24.0.dist-info/*\r\n    /Users/kent/.pyenv/versions/3.7.2/Python.framework/Versions/3.7/lib/python3.7/site-packages/asn1crypto/*\r\nProceed (y/n)? y\r\n  Successfully uninstalled asn1crypto-0.24.0\r\n```\r\n\r\nAny idea how to fix?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/142", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/142/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/142/events", "html_url": "https://github.com/wbond/asn1crypto/issues/142", "id": 447972570, "node_id": "MDU6SXNzdWU0NDc5NzI1NzA=", "number": 142, "title": "country_name spec should be PrintableString", "user": {"login": "space88man", "id": 29966967, "node_id": "MDQ6VXNlcjI5OTY2OTY3", "avatar_url": "https://avatars3.githubusercontent.com/u/29966967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/space88man", "html_url": "https://github.com/space88man", "followers_url": "https://api.github.com/users/space88man/followers", "following_url": "https://api.github.com/users/space88man/following{/other_user}", "gists_url": "https://api.github.com/users/space88man/gists{/gist_id}", "starred_url": "https://api.github.com/users/space88man/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/space88man/subscriptions", "organizations_url": "https://api.github.com/users/space88man/orgs", "repos_url": "https://api.github.com/users/space88man/repos", "events_url": "https://api.github.com/users/space88man/events{/privacy}", "received_events_url": "https://api.github.com/users/space88man/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-24T04:20:31Z", "updated_at": "2019-07-22T10:49:32Z", "closed_at": "2019-07-22T10:49:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In x509.py the _oid_spec for country_name is DirectoryString;\r\nit seems it should be PrintableString. I verified that this is what\r\nOpenSSL uses.\r\n\r\nhttps://www.alvestrand.no/objectid/2.5.4.6.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/141", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/141/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/141/events", "html_url": "https://github.com/wbond/asn1crypto/issues/141", "id": 445792615, "node_id": "MDU6SXNzdWU0NDU3OTI2MTU=", "number": 141, "title": "how i can make PKCS#7 detached signature?", "user": {"login": "best-tech", "id": 12911926, "node_id": "MDQ6VXNlcjEyOTExOTI2", "avatar_url": "https://avatars1.githubusercontent.com/u/12911926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/best-tech", "html_url": "https://github.com/best-tech", "followers_url": "https://api.github.com/users/best-tech/followers", "following_url": "https://api.github.com/users/best-tech/following{/other_user}", "gists_url": "https://api.github.com/users/best-tech/gists{/gist_id}", "starred_url": "https://api.github.com/users/best-tech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/best-tech/subscriptions", "organizations_url": "https://api.github.com/users/best-tech/orgs", "repos_url": "https://api.github.com/users/best-tech/repos", "events_url": "https://api.github.com/users/best-tech/events{/privacy}", "received_events_url": "https://api.github.com/users/best-tech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-19T08:13:16Z", "updated_at": "2019-07-25T14:44:22Z", "closed_at": "2019-07-25T14:44:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/140", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/140/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/140/events", "html_url": "https://github.com/wbond/asn1crypto/issues/140", "id": 436502418, "node_id": "MDU6SXNzdWU0MzY1MDI0MTg=", "number": 140, "title": "RFE: Add RSASSA_PSS OIDs from RFC4055", "user": {"login": "space88man", "id": 29966967, "node_id": "MDQ6VXNlcjI5OTY2OTY3", "avatar_url": "https://avatars3.githubusercontent.com/u/29966967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/space88man", "html_url": "https://github.com/space88man", "followers_url": "https://api.github.com/users/space88man/followers", "following_url": "https://api.github.com/users/space88man/following{/other_user}", "gists_url": "https://api.github.com/users/space88man/gists{/gist_id}", "starred_url": "https://api.github.com/users/space88man/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/space88man/subscriptions", "organizations_url": "https://api.github.com/users/space88man/orgs", "repos_url": "https://api.github.com/users/space88man/repos", "events_url": "https://api.github.com/users/space88man/events{/privacy}", "received_events_url": "https://api.github.com/users/space88man/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-24T05:24:33Z", "updated_at": "2019-07-04T14:31:31Z", "closed_at": "2019-07-04T14:31:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "See: https://github.com/wbond/asn1crypto/pull/138", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/139", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/139/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/139/events", "html_url": "https://github.com/wbond/asn1crypto/issues/139", "id": 436502213, "node_id": "MDU6SXNzdWU0MzY1MDIyMTM=", "number": 139, "title": "Travis CI is failing for PRs due to expired certs", "user": {"login": "space88man", "id": 29966967, "node_id": "MDQ6VXNlcjI5OTY2OTY3", "avatar_url": "https://avatars3.githubusercontent.com/u/29966967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/space88man", "html_url": "https://github.com/space88man", "followers_url": "https://api.github.com/users/space88man/followers", "following_url": "https://api.github.com/users/space88man/following{/other_user}", "gists_url": "https://api.github.com/users/space88man/gists{/gist_id}", "starred_url": "https://api.github.com/users/space88man/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/space88man/subscriptions", "organizations_url": "https://api.github.com/users/space88man/orgs", "repos_url": "https://api.github.com/users/space88man/repos", "events_url": "https://api.github.com/users/space88man/events{/privacy}", "received_events_url": "https://api.github.com/users/space88man/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-24T05:23:37Z", "updated_at": "2019-07-02T12:42:48Z", "closed_at": "2019-07-02T12:42:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "FYI", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/136", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/136/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/136/events", "html_url": "https://github.com/wbond/asn1crypto/issues/136", "id": 431275491, "node_id": "MDU6SXNzdWU0MzEyNzU0OTE=", "number": 136, "title": "bug on dump MacOS machO signature", "user": {"login": "shuxin", "id": 734629, "node_id": "MDQ6VXNlcjczNDYyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/734629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shuxin", "html_url": "https://github.com/shuxin", "followers_url": "https://api.github.com/users/shuxin/followers", "following_url": "https://api.github.com/users/shuxin/following{/other_user}", "gists_url": "https://api.github.com/users/shuxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/shuxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shuxin/subscriptions", "organizations_url": "https://api.github.com/users/shuxin/orgs", "repos_url": "https://api.github.com/users/shuxin/repos", "events_url": "https://api.github.com/users/shuxin/events{/privacy}", "received_events_url": "https://api.github.com/users/shuxin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220107140, "node_id": "MDU6TGFiZWwyMjAxMDcxNDA=", "url": "https://api.github.com/repos/wbond/asn1crypto/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-04-10T02:30:55Z", "updated_at": "2019-10-01T04:29:30Z", "closed_at": "2019-10-01T04:29:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Chrome.zip](https://github.com/wbond/asn1crypto/files/3061729/Chrome.zip)\r\nwhen ```cms.ContentInfo.load(\"chrome.rsa buff\").dump()```, It lost two bytes for \"EOC\"\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/132", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/132/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/132/events", "html_url": "https://github.com/wbond/asn1crypto/issues/132", "id": 411117337, "node_id": "MDU6SXNzdWU0MTExMTczMzc=", "number": 132, "title": "cms.AttributeCertificateInfoV2  KeyError: None", "user": {"login": "ftbarata", "id": 20630844, "node_id": "MDQ6VXNlcjIwNjMwODQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/20630844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftbarata", "html_url": "https://github.com/ftbarata", "followers_url": "https://api.github.com/users/ftbarata/followers", "following_url": "https://api.github.com/users/ftbarata/following{/other_user}", "gists_url": "https://api.github.com/users/ftbarata/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftbarata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftbarata/subscriptions", "organizations_url": "https://api.github.com/users/ftbarata/orgs", "repos_url": "https://api.github.com/users/ftbarata/repos", "events_url": "https://api.github.com/users/ftbarata/events{/privacy}", "received_events_url": "https://api.github.com/users/ftbarata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-02-16T21:45:33Z", "updated_at": "2019-02-19T18:58:26Z", "closed_at": "2019-02-18T19:46:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @joernheissler and everyone,\r\nI'm stuck on the 'attributes' key of AttributeCertificateInfoV2. I tried many ways, no success:\r\n\r\n```\r\nattribute_certificate_infov2 = cms.AttributeCertificateInfoV2({\r\n                                'version': 1,\r\n                                'serial_number': int(SERIAL),\r\n                                'issuer': cms.AttCertIssuer({\r\n                                    'v1_form':  [GeneralName('directory_name', Name.build({'common_name': EEA_COMMON_NAME})),\r\n                                                 GeneralName('directory_name', Name.build({'organization_name':'Some organization name'})),\r\n                                                 GeneralName('directory_name', Name.build({'organizational_unit_name':'Some CA Name'}))\r\n                                     ]})\r\n                                ,\r\n                                'holder': {\r\n                                        'entity_name': [GeneralName('directory_name',Name.build({'common_name': COMMON_NAME})),\r\n                                                        GeneralName('directory_name',Name.build({'country_name':'BR'})),\r\n                                                        GeneralName('directory_name',Name.build({'organization_name': 'Some organization name'})),\r\n                                                        GeneralName('directory_name',Name.build({'organizational_unit_name':'Some Name'}))\r\n                                                        ]\r\n                                    },\r\n                                'attributes': [cms.AttCertAttribute(cms.AttCertAttributeType('authentication_info'), cms.SvceAuthInfo({'service':Name.build({'common_name':'Test'}), 'ident':Name.build({'common_name':'Test2'})}))],\r\n\r\n                                'signature': {\r\n                                    'algorithm': signed_digest_algo,\r\n                                    'parameters': None,\r\n                                },\r\n                                'extensions': (extensions_tuple),\r\n\r\n                                'att_cert_validity_period': cms.AttCertValidityPeriod({\r\n                                    'not_before_time': GeneralizedTime(parser.parse(NOT_VALID_BEFORE)),\r\n                                    'not_after_time': GeneralizedTime(parser.parse(NOT_VALID_AFTER))\r\n                                })\r\n                            })\r\n\r\n```\r\n```\r\nFile \"agent.py\", line 149, in createCertificateOsCrypto\r\n    'attributes': [cms.AttCertAttribute(cms.AttCertAttributeType('authentication_info'), cms.SvceAuthInfo({'service':Name.build({'common_name':'Teste'}), 'ident':Name.build({'common_name':'Test2'})}))],\r\n  File \"/root/sigcerta/.virtualenv/lib/python3.5/site-packages/asn1crypto/core.py\", line 3154, in __init__\r\n    self.__setitem__(key, value[key])\r\n  File \"/root/sigcerta/.virtualenv/lib/python3.5/site-packages/asn1crypto/core.py\", line 3310, in __setitem__\r\n    new_value = self._make_value(field_name, field_spec, value_spec, field_params, value)\r\n  File \"/root/sigcerta/.virtualenv/lib/python3.5/site-packages/asn1crypto/core.py\", line 3541, in _make_value\r\n    wrapper.validate(value.class_, value.tag, value.contents)\r\n  File \"/root/sigcerta/.virtualenv/lib/python3.5/site-packages/asn1crypto/core.py\", line 1224, in validate\r\n    asn1 = self._format_class_tag(class_, tag)\r\n  File \"/root/sigcerta/.virtualenv/lib/python3.5/site-packages/asn1crypto/core.py\", line 1243, in _format_class_tag\r\n    return '[%s %s]' % (CLASS_NUM_TO_NAME_MAP[class_].upper(), tag)\r\nKeyError: None\r\n```\r\nWhat's wrong? This error is not so helpfull\r\n\r\nIf  I try to use AttributeCertificateInfoV1:\r\n```\r\nattribute_certificate_infov1 = cms.AttributeCertificateInfoV1({\r\n                            'subject': cms.AttCertSubject('subject_name', [GeneralName('directory_name', Name.build({'common_name': COMMON_NAME}))]),\r\n                            'issuer': [GeneralName('directory_name', Name.build({'common_name': EEA_COMMON_NAME}))],\r\n                            'signature': {\r\n                                'algorithm': signed_digest_algo,\r\n                                'parameters': None,\r\n                            },\r\n                            'serial_number': int(SERIAL),\r\n                            'att_cert_validity_period': cms.AttCertValidityPeriod({\r\n                                'not_before_time': GeneralizedTime(parser.parse(NOT_VALID_BEFORE)),\r\n                                'not_after_time': GeneralizedTime(parser.parse(NOT_VALID_AFTER))\r\n                            }),\r\n                            'extensions': (extensions_tuple),\r\n                            'attributes': [Attribute(ObjectIdentifier('2.5.4.3'), {'common_name': 'test'})]\r\n\r\n                            })\r\n```\r\nI get:\r\n\r\n```\r\nFile \"agent.py\", line 177, in createCertificateOsCrypto\r\n    'attributes': [Attribute( ObjectIdentifier('2.5.4.3'), {'common_name': 'test'})]\r\n  File \"/root/sigcerta/.virtualenv/lib/python3.5/site-packages/aenum/__init__.py\", line 1961, in __call__\r\n    return cls._create_(value, names, module=module, type=type, start=start)\r\n  File \"/root/sigcerta/.virtualenv/lib/python3.5/site-packages/aenum/__init__.py\", line 2087, in _create_\r\n    _, first_enum = cls._get_mixins_(bases)\r\n  File \"/root/sigcerta/.virtualenv/lib/python3.5/site-packages/aenum/__init__.py\", line 2152, in _get_mixins_\r\n    raise TypeError(\"cannot extend enumerations via subclassing.\")\r\nTypeError: cannot extend enumerations via subclassing.\r\n```\r\nI don't really know how to set the sequence of Attribute object, I tried some ways, no success too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/131", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/131/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/131/events", "html_url": "https://github.com/wbond/asn1crypto/issues/131", "id": 410828054, "node_id": "MDU6SXNzdWU0MTA4MjgwNTQ=", "number": 131, "title": "RFC 5755 Internet Attribute Certificate Profile for Authorization", "user": {"login": "ftbarata", "id": 20630844, "node_id": "MDQ6VXNlcjIwNjMwODQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/20630844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftbarata", "html_url": "https://github.com/ftbarata", "followers_url": "https://api.github.com/users/ftbarata/followers", "following_url": "https://api.github.com/users/ftbarata/following{/other_user}", "gists_url": "https://api.github.com/users/ftbarata/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftbarata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftbarata/subscriptions", "organizations_url": "https://api.github.com/users/ftbarata/orgs", "repos_url": "https://api.github.com/users/ftbarata/repos", "events_url": "https://api.github.com/users/ftbarata/events{/privacy}", "received_events_url": "https://api.github.com/users/ftbarata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-15T15:47:03Z", "updated_at": "2019-02-15T21:37:08Z", "closed_at": "2019-02-15T21:37:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, is it possible, using asn1crypto , to create an Internet Attribute Certificate Profile for Authorization?\r\nAccording to RFC 5755, this kind of certificate don't carry public key.\r\n\r\nI tried to use the TbsCertificate without subject_public_key_info, but I get:\r\n```\r\n \"ValueError: Field \"subject_public_key_info\" is missing from structure\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/129", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/129/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/129/events", "html_url": "https://github.com/wbond/asn1crypto/issues/129", "id": 409228546, "node_id": "MDU6SXNzdWU0MDkyMjg1NDY=", "number": 129, "title": "missing secp256k1", "user": {"login": "nkostoulas", "id": 14759579, "node_id": "MDQ6VXNlcjE0NzU5NTc5", "avatar_url": "https://avatars2.githubusercontent.com/u/14759579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkostoulas", "html_url": "https://github.com/nkostoulas", "followers_url": "https://api.github.com/users/nkostoulas/followers", "following_url": "https://api.github.com/users/nkostoulas/following{/other_user}", "gists_url": "https://api.github.com/users/nkostoulas/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkostoulas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkostoulas/subscriptions", "organizations_url": "https://api.github.com/users/nkostoulas/orgs", "repos_url": "https://api.github.com/users/nkostoulas/repos", "events_url": "https://api.github.com/users/nkostoulas/events{/privacy}", "received_events_url": "https://api.github.com/users/nkostoulas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-12T10:33:53Z", "updated_at": "2019-02-18T19:47:13Z", "closed_at": "2019-02-18T19:47:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello! I've noticed secp256k1 is not in the EC named curves. Would you be open to adding this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/128", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/128/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/128/events", "html_url": "https://github.com/wbond/asn1crypto/issues/128", "id": 405206556, "node_id": "MDU6SXNzdWU0MDUyMDY1NTY=", "number": 128, "title": "40164712199936:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1197", "user": {"login": "ftbarata", "id": 20630844, "node_id": "MDQ6VXNlcjIwNjMwODQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/20630844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftbarata", "html_url": "https://github.com/ftbarata", "followers_url": "https://api.github.com/users/ftbarata/followers", "following_url": "https://api.github.com/users/ftbarata/following{/other_user}", "gists_url": "https://api.github.com/users/ftbarata/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftbarata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftbarata/subscriptions", "organizations_url": "https://api.github.com/users/ftbarata/orgs", "repos_url": "https://api.github.com/users/ftbarata/repos", "events_url": "https://api.github.com/users/ftbarata/events{/privacy}", "received_events_url": "https://api.github.com/users/ftbarata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-31T11:42:29Z", "updated_at": "2019-01-31T11:51:07Z", "closed_at": "2019-01-31T11:51:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone, I have this working code:\r\n\r\n```\r\n        def createCertificateOsCrypto(CODIGO_EEA, SERIAL, COMMON_NAME, NOME_SOCIAL, NASCIMENTO, CPF, MATRICULA, RG,\r\n                                    SIGLAEXPEDIDOR_E_UF, INSTENSINO,\r\n                                    ESCOLARIDADE, NOME_CURSO, MUNICIPIO_INSTENSINO, UF_INSTENSINO, NOT_VALID_BEFORE,\r\n                                    NOT_VALID_AFTER,TOKEN_SERIAL, PIN, TOKEN_LABEL, EEA_COMMON_NAME, AUTHORITY_KEY_IDENTIFIER, AUTHORITY_INFORMATION_ACCESS, CRL_DISTRIBUTION_POINT):\r\n            try:\r\n                for token in lib.get_tokens():\r\n                    if token.serial.decode() == TOKEN_SERIAL:\r\n                        with token.open(user_pin=PIN) as session:\r\n                            priv = ''\r\n                            pub = ''\r\n                            try:\r\n                                # priv = session.get_key(object_class=pkcs11.constants.ObjectClass.PRIVATE_KEY, label=TOKEN_LABEL)\r\n                                priv = session.get_key(object_class=pkcs11.constants.ObjectClass.PRIVATE_KEY)\r\n                            except pkcs11.exceptions.NoSuchKey:\r\n                                for j in session.get_objects({Attribute.CLASS: ObjectClass.PRIVATE_KEY}):\r\n                                    priv = j\r\n                                    break\r\n                            except pkcs11.exceptions.MultipleObjectsReturned:\r\n                                for j in session.get_objects({Attribute.CLASS: ObjectClass.PRIVATE_KEY}):\r\n                                    priv = j\r\n                                    break\r\n\r\n                            certificate = next(session.get_objects({Attribute.CLASS: pkcs11.constants.ObjectClass.CERTIFICATE}))\r\n                            der_bytes = certificate[Attribute.VALUE]\r\n                            pem_bytes = pem.armor('CERTIFICATE', der_bytes)\r\n                            token_certificate = pem_bytes.decode()\r\n\r\n                            cert2 = x509.load_pem_x509_certificate(pem.armor('CERTIFICATE', der_bytes),default_backend())\r\n                            pub = \r\n[cert.zip](https://github.com/wbond/asn1crypto/files/2816981/cert.zip)\r\ncert2.public_key().public_bytes(cryptography.hazmat.primitives.serialization.Encoding.DER,cryptography.hazmat.primitives.serialization.PublicFormat.SubjectPublicKeyInfo)\r\n\r\n                            NASC_CPF_MATRICULA_RG_SIGLAEXPEDIDOR_UF = NASCIMENTO + CPF + MATRICULA + RG + SIGLAEXPEDIDOR_E_UF\r\n                            INSTENSINO_GRAUESCOLARIDADE_NOMECURSO_MUNICINSTIT_UF = str(INSTENSINO) + str(ESCOLARIDADE) + str(NOME_CURSO) + str(MUNICIPIO_INSTENSINO) + str(UF_INSTENSINO)\r\n\r\n                            extension1 = Extension({'extn_id': ExtensionId('2.16.76.1.10.1'),\r\n                                                    'critical': False,\r\n                                                    'extn_value': NASC_CPF_MATRICULA_RG_SIGLAEXPEDIDOR_UF.encode()\r\n                                                    })\r\n                            extension2 = Extension({'extn_id': ExtensionId('2.16.76.1.10.2'),\r\n                                                    'critical': False,\r\n                                                    'extn_value': unidecode.unidecode(\r\n                                                        INSTENSINO_GRAUESCOLARIDADE_NOMECURSO_MUNICINSTIT_UF).encode()\r\n                                                    })\r\n\r\n                            extension3 = False\r\n\r\n                            if NOME_SOCIAL is not False and NOME_SOCIAL is not None and NOME_SOCIAL != \"False\":\r\n                                extension3 = Extension({'extn_id': ExtensionId('2.16.76.1.4.3'),\r\n                                                        'critical': False,\r\n                                                        'extn_value': unidecode.unidecode(\r\n                                                            NOME_SOCIAL).encode()\r\n                                                        })\r\n\r\n\r\n                            authority_key_identifier = Extension({\r\n                                'extn_id': ExtensionId('authority_key_identifier'),\r\n                                'critical': False,\r\n                                'extn_value': AuthorityKeyIdentifier({\r\n                                  'key_identifier': AUTHORITY_KEY_IDENTIFIER.encode()\r\n                                    })\r\n                            })\r\n\r\n                            authority_information_access = Extension({\r\n                                'extn_id': ExtensionId('authority_information_access'),\r\n                                'critical': False,\r\n                                'extn_value': [{\r\n                                    'access_method': AccessMethod('1.3.6.1.5.5.7.48.5'),\r\n                                    'access_location': GeneralName('uniform_resource_identifier', URI(AUTHORITY_INFORMATION_ACCESS))\r\n                                }]\r\n                            })\r\n                            crl_distribution_point = Extension({\r\n                                'extn_id': ExtensionId('crl_distribution_points'),\r\n                                'critical': False,\r\n                                'extn_value': [{\r\n                                    'distribution_point': DistributionPointName('full_name', [GeneralName('uniform_resource_identifier', URI(CRL_DISTRIBUTION_POINT))]),\r\n                                    # 'crl_issuer': [GeneralName('uniform_resource_identifier', URI(CRL_DISTRIBUTION_POINT))]\r\n                                }]\r\n                            })\r\n\r\n                            # sha256_rsa\r\n                            signed_digest_algo = 'sha256_rsa'\r\n\r\n\r\n                            if extension3:\r\n                                extensions_tuple = (extension1, extension2, extension3, authority_information_access, crl_distribution_point, authority_key_identifier)\r\n                            else:\r\n                                extensions_tuple = (extension1, extension2, authority_information_access, crl_distribution_point, authority_key_identifier)\r\n\r\n\r\n                            tbs = TbsCertificate({\r\n                                'version': Version(1),\r\n                                'serial_number': int(SERIAL),\r\n                                'issuer': Name.build({\r\n                                    'common_name': EEA_COMMON_NAME,\r\n                                }),\r\n                                'subject': Name.build({\r\n                                    'common_name': COMMON_NAME,\r\n                                }),\r\n                                'signature': {\r\n                                    'algorithm': signed_digest_algo,\r\n                                    'parameters': None,\r\n                                },\r\n                                'extensions': (extensions_tuple),\r\n\r\n                                'validity': {\r\n                                    'not_before': Time({\r\n                                        'general_time': GeneralizedTime(parser.parse(NOT_VALID_BEFORE)),\r\n                                    }),\r\n                                    'not_after': Time({\r\n                                        'general_time': GeneralizedTime(parser.parse(NOT_VALID_AFTER)),\r\n                                    }),\r\n                                },\r\n                                'subject_public_key_info': {\r\n                                    'algorithm': {\r\n                                        'algorithm': 'rsa',\r\n                                        'parameters': None,\r\n                                    },\r\n                                    # 'public_key': RSAPublicKey.load(encode_rsa_public_key(pub)),\r\n                                    'public_key': RSAPublicKey.load(pub),\r\n                                }\r\n                            })\r\n\r\n                            # Sign the TBS Certificate\r\n                            value = priv.sign(tbs.dump(),mechanism=Mechanism.SHA256_RSA_PKCS)\r\n\r\n                            cert = Certificate({\r\n                                'tbs_certificate': tbs,\r\n                                'signature_algorithm': {\r\n                                    'algorithm': signed_digest_algo,\r\n                                    'parameters': None,\r\n                                },\r\n                                'signature_value': value,\r\n                            })\r\n                            attribute_certificate = pem.armor('CERTIFICATE', cert.dump()).decode()\r\n                            return (attribute_certificate + token_certificate).strip()\r\n                    else:\r\n                        return 'Token not found'\r\n            except TokenNotPresent:\r\n                pass\r\n```\r\nA sample of this certificate is attached. When I upload this PEM file to https://redkestrel.co.uk/products/decoder/  \r\nThere is an error in there:\r\n\r\n```\r\nSubject Public Key Info:\r\n            Public Key Algorithm: rsaEncryption\r\n            Unable to load Public Key\r\n140164712199936:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1197:\r\n140164712199936:error:0D06C03A:asn1 encoding routines:ASN1_D2I_EX_PRIMITIVE:nested asn1 error:tasn_dec.c:765:\r\n140164712199936:error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:tasn_dec.c:697:Field=n, Type=RSA\r\n140164712199936:error:0408B004:rsa routines:RSA_PUB_DECODE:RSA lib:rsa_ameth.c:99:\r\n140164712199936:error:0B07707D:x509 certificate routines:X509_PUBKEY_get:public key decode error:x_pubkey.c:154:\r\n```\r\nWhat's wrong?\r\n[cert.zip](https://github.com/wbond/asn1crypto/files/2816989/cert.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/127", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/127/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/127/events", "html_url": "https://github.com/wbond/asn1crypto/issues/127", "id": 402749520, "node_id": "MDU6SXNzdWU0MDI3NDk1MjA=", "number": 127, "title": "Cannot extract pubkey from certificate", "user": {"login": "ftbarata", "id": 20630844, "node_id": "MDQ6VXNlcjIwNjMwODQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/20630844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftbarata", "html_url": "https://github.com/ftbarata", "followers_url": "https://api.github.com/users/ftbarata/followers", "following_url": "https://api.github.com/users/ftbarata/following{/other_user}", "gists_url": "https://api.github.com/users/ftbarata/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftbarata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftbarata/subscriptions", "organizations_url": "https://api.github.com/users/ftbarata/orgs", "repos_url": "https://api.github.com/users/ftbarata/repos", "events_url": "https://api.github.com/users/ftbarata/events{/privacy}", "received_events_url": "https://api.github.com/users/ftbarata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-01-24T15:05:25Z", "updated_at": "2019-02-16T21:58:20Z", "closed_at": "2019-02-16T21:58:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have this code below working, but:\r\n1) I'm unable to read pubkey from the generated certificate. AFAIK, a certificate is composed by some elements, including signature algorithm, public key and the signature itself, so anyone could verify the signature using same algorithm and the pubkey, right? I tried \r\n```\r\nopenssl x509 -pubkey -noout -in cert.pem \r\nError getting public key\r\n140003854860736:error:0D0680A8:asn1 encoding routines:asn1_check_tlen:wrong tag:../crypto/asn1/tasn_dec.c:1129:\r\n140003854860736:error:0D06C03A:asn1 encoding routines:asn1_d2i_ex_primitive:nested asn1 error:../crypto/asn1/tasn_dec.c:693:\r\n140003854860736:error:0D08303A:asn1 encoding routines:asn1_template_noexp_d2i:nested asn1 error:../crypto/asn1/tasn_dec.c:626:Field=n, Type=RSA\r\n140003854860736:error:0408B004:rsa routines:rsa_pub_decode:RSA lib:../crypto/rsa/rsa_ameth.c:51:\r\n140003854860736:error:0B09407D:x509 certificate routines:x509_pubkey_decode:public key decode error:../crypto/x509/x_pubkey.c:124:\r\n```\r\n\r\nCode:\r\n```\r\n            try:\r\n                for token in lib.get_tokens():\r\n                    if token.serial.decode() == TOKEN_SERIAL:\r\n                        with token.open(user_pin=PIN) as session:\r\n                            priv = ''\r\n                            pub = ''\r\n                            try:\r\n                                # priv = session.get_key(object_class=pkcs11.constants.ObjectClass.PRIVATE_KEY, label=TOKEN_LABEL)\r\n                                priv = session.get_key(object_class=pkcs11.constants.ObjectClass.PRIVATE_KEY)\r\n                            except pkcs11.exceptions.NoSuchKey:\r\n                                for j in session.get_objects({Attribute.CLASS: ObjectClass.PRIVATE_KEY}):\r\n                                    priv = j\r\n                                    break\r\n                            except pkcs11.exceptions.MultipleObjectsReturned:\r\n                                for j in session.get_objects({Attribute.CLASS: ObjectClass.PRIVATE_KEY}):\r\n                                    priv = j\r\n                                    break\r\n\r\n                            certificate = next(session.get_objects({Attribute.CLASS: pkcs11.constants.ObjectClass.CERTIFICATE}))\r\n                            der_bytes = certificate[Attribute.VALUE]\r\n                            pem_bytes = pem.armor('CERTIFICATE', der_bytes)\r\n                            token_certificate = pem_bytes.decode()\r\n\r\n                            try:\r\n                                # pub = session.get_key(object_class=pkcs11.constants.ObjectClass.PUBLIC_KEY, label=TOKEN_LABEL)\r\n                                pub = encode_rsa_public_key(session.get_key(object_class=pkcs11.constants.ObjectClass.PUBLIC_KEY))\r\n\r\n                            except pkcs11.MultipleObjectsReturned:\r\n                                for i in session.get_objects({Attribute.CLASS: pkcs11.constants.ObjectClass.PUBLIC_KEY}):\r\n                                    pub = encode_rsa_public_key(i)\r\n                                    break\r\n\r\n                            except pkcs11.exceptions.NoSuchKey:\r\n                                cert2 = x509.load_pem_x509_certificate(pem.armor('CERTIFICATE', der_bytes),default_backend())\r\n                                # pubdata = cert2.public_key().public_bytes(cryptography.hazmat.primitives.serialization.Encoding.DER,cryptography.hazmat.primitives.serialization.PublicFormat.SubjectPublicKeyInfo)\r\n                                pubdata = cert2.public_key().public_bytes(cryptography.hazmat.primitives.serialization.Encoding.DER,cryptography.hazmat.primitives.serialization.PublicFormat.SubjectPublicKeyInfo)\r\n                                # pub = pem.armor('RSA PUBLIC KEY', pubdata)\r\n                                pub = pubdata\r\n\r\n                            NASC_CPF_MATRICULA_RG_SIGLAEXPEDIDOR_UF = NASCIMENTO + CPF + MATRICULA + RG + SIGLAEXPEDIDOR_E_UF\r\n                            INSTENSINO_GRAUESCOLARIDADE_NOMECURSO_MUNICINSTIT_UF = str(INSTENSINO) + str(ESCOLARIDADE) + str(NOME_CURSO) + str(MUNICIPIO_INSTENSINO) + str(UF_INSTENSINO)\r\n\r\n                            extension1 = Extension({'extn_id': ExtensionId('2.16.76.1.10.1'),\r\n                                                    'critical': False,\r\n                                                    'extn_value': NASC_CPF_MATRICULA_RG_SIGLAEXPEDIDOR_UF.encode()\r\n                                                    })\r\n                            extension2 = Extension({'extn_id': ExtensionId('2.16.76.1.10.2'),\r\n                                                    'critical': False,\r\n                                                    'extn_value': unidecode.unidecode(\r\n                                                        INSTENSINO_GRAUESCOLARIDADE_NOMECURSO_MUNICINSTIT_UF).encode()\r\n                                                    })\r\n\r\n                            extension3 = False\r\n\r\n                            if NOME_SOCIAL is not False or NOME_SOCIAL != \"False\":\r\n                                extension3 = Extension({'extn_id': ExtensionId('2.16.76.1.4.3'),\r\n                                                        'critical': False,\r\n                                                        'extn_value': unidecode.unidecode(\r\n                                                            NOME_SOCIAL).encode()\r\n                                                        })\r\n\r\n\r\n                            authority_key_identifier = Extension({\r\n                                'extn_id': ExtensionId('authority_key_identifier'),\r\n                                'critical': False,\r\n                                'extn_value': AuthorityKeyIdentifier({\r\n                                  'key_identifier': AUTHORITY_KEY_IDENTIFIER.encode()\r\n                                    })\r\n                            })\r\n\r\n                            authority_information_access = Extension({\r\n                                'extn_id': ExtensionId('authority_information_access'),\r\n                                'critical': False,\r\n                                'extn_value': [{\r\n                                    'access_method': AccessMethod('1.3.6.1.5.5.7.48.5'),\r\n                                    'access_location': GeneralName('uniform_resource_identifier', URI(AUTHORITY_INFORMATION_ACCESS))\r\n                                }]\r\n                            })\r\n                            crl_distribution_point = Extension({\r\n                                'extn_id': ExtensionId('crl_distribution_points'),\r\n                                'critical': False,\r\n                                'extn_value': [{\r\n                                    'distribution_point': DistributionPointName('full_name', [GeneralName('uniform_resource_identifier', URI(CRL_DISTRIBUTION_POINT))]),\r\n                                    # 'crl_issuer': [GeneralName('uniform_resource_identifier', URI(CRL_DISTRIBUTION_POINT))]\r\n                                }]\r\n                            })\r\n\r\n                            # sha256_rsa\r\n                            signed_digest_algo = 'sha256_rsa'\r\n\r\n\r\n                            if extension3:\r\n                                extensions_tuple = (extension1, extension2, extension3, authority_information_access, crl_distribution_point, authority_key_identifier)\r\n                            else:\r\n                                extensions_tuple = (extension1, extension2, authority_information_access, crl_distribution_point, authority_key_identifier)\r\n\r\n\r\n                            tbs = TbsCertificate({\r\n                                'version': Version(1),\r\n                                'serial_number': int(SERIAL),\r\n                                'issuer': Name.build({\r\n                                    'common_name': EEA_COMMON_NAME,\r\n                                }),\r\n                                'subject': Name.build({\r\n                                    'common_name': COMMON_NAME,\r\n                                }),\r\n                                'signature': {\r\n                                    'algorithm': signed_digest_algo,\r\n                                    'parameters': None,\r\n                                },\r\n                                'extensions': (extensions_tuple),\r\n\r\n                                'validity': {\r\n                                    'not_before': Time({\r\n                                        'general_time': GeneralizedTime(parser.parse(NOT_VALID_BEFORE)),\r\n                                    }),\r\n                                    'not_after': Time({\r\n                                        'general_time': GeneralizedTime(parser.parse(NOT_VALID_AFTER)),\r\n                                    }),\r\n                                },\r\n                                'subject_public_key_info': {\r\n                                    'algorithm': {\r\n                                        'algorithm': 'rsa',\r\n                                        'parameters': None,\r\n                                    },\r\n                                    # 'public_key': RSAPublicKey.load(encode_rsa_public_key(pub)),\r\n                                    'public_key': RSAPublicKey.load(pub),\r\n                                }\r\n                            })\r\n\r\n                            # Sign the TBS Certificate\r\n                            value = priv.sign(tbs.dump(),\r\n                                              mechanism=Mechanism.SHA256_RSA_PKCS)\r\n\r\n                            cert = Certificate({\r\n                                'tbs_certificate': tbs,\r\n                                'signature_algorithm': {\r\n                                    'algorithm': signed_digest_algo,\r\n                                    'parameters': None,\r\n                                },\r\n                                'signature_value': value,\r\n                            })\r\n                            attribute_certificate = pem.armor('CERTIFICATE', cert.dump()).decode()\r\n                            return (attribute_certificate + token_certificate).strip()\r\n                    else:\r\n                        return 'Token not found'\r\n            except TokenNotPresent:\r\n                pass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/124", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/124/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/124/events", "html_url": "https://github.com/wbond/asn1crypto/issues/124", "id": 391856288, "node_id": "MDU6SXNzdWUzOTE4NTYyODg=", "number": 124, "title": "ECPrivateKey does not zero-pad private key, violates rfc5915", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220107140, "node_id": "MDU6TGFiZWwyMjAxMDcxNDA=", "url": "https://api.github.com/repos/wbond/asn1crypto/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-12-17T19:26:15Z", "updated_at": "2019-08-21T14:38:37Z", "closed_at": "2019-08-21T14:38:37Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hi,\r\n\r\n<https://tools.ietf.org/html/rfc5915>:\r\n> privateKey is the private key.  It is an octet string of length\r\n> ceiling (log2(n)/8) (where n is the order of the curve) obtained\r\n> from the unsigned integer via the Integer-to-Octet-String-\r\n> Primitive (I2OSP) defined in [RFC3447].\r\n\r\nI.e. the encoded number must be padded with zeros. Best rationale I can think of is that an encrypted ec key would leak information (key size) otherwise.\r\n\r\nasn1crypto uses `IntegerOctetString` which cannot be told the encoded width of the number. I.e. the number is **not** padded.\r\n`IntegerOctetString` is only used in `ECPrivateKey`.\r\n\r\nCode that wants to generate a correct `ECPrivateKey` structure would need to pass the intended length of the key. I don't see any way around this; asn1crypto cannot determine the width by any other means.\r\n\r\nI'm not sure how the API should look like. `(31337, 32)`? Or `{'value': 31337, 'width': 32}`? Or add a new class method which takes value + width?\r\n\r\nA breaking change (i.e. do not accept a plain int) might be acceptable; existing code is incorrect anyway.\r\n\r\n`.native` should still return an `int`. Actual encoding (and its length) can be read with `.contents`.\r\n\r\nThanks!\r\n\r\nIncorrect key (generated by asn1crypto):\r\n```\r\n-----BEGIN PRIVATE KEY-----\r\nMGkCAQAwEwYHKoZIzj0CAQYIKoZIzj0DAQcETzBNAgEBBAJ6aaFEA0IABC+quZfc\r\ndJWlahQfx2dJjqCwY65KkbxAVUU/7WfnnwVfOaIKLFq1YIfiQ/6pjmr+soVeoJIm\r\nhetpZvE17EgMWEM=\r\n-----END PRIVATE KEY-----\r\n```\r\n\r\nCorrect key (generated by openssl):\r\n```\r\n-----BEGIN EC PRIVATE KEY-----\r\nMHcCAQEEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHppoAoGCCqGSM49\r\nAwEHoUQDQgAEL6q5l9x0laVqFB/HZ0mOoLBjrkqRvEBVRT/tZ+efBV85ogosWrVg\r\nh+JD/qmOav6yhV6gkiaF62lm8TXsSAxYQw==\r\n-----END EC PRIVATE KEY-----\r\n```\r\n\r\nCode to generate above key:\r\n```python3\r\nfrom asn1crypto.keys import ECPointBitString, ECPrivateKey, NamedCurve, PrivateKeyInfo\r\nfrom asn1crypto.pem import armor\r\n\r\nkey = PrivateKeyInfo.wrap(\r\n    ECPrivateKey({\r\n        'version': 1,\r\n        'private_key': 31337,\r\n        'parameters': NamedCurve('secp256r1'),\r\n        'public_key': ECPointBitString.from_coords(\r\n            0x2faab997dc7495a56a141fc767498ea0b063ae4a91bc4055453fed67e79f055f,\r\n            0x39a20a2c5ab56087e243fea98e6afeb2855ea0922685eb6966f135ec480c5843,\r\n        ),\r\n    }),\r\n    'ec'\r\n)\r\nprint(armor('PRIVATE KEY', key.dump()).decode(), end=\"\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/123", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/123/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/123/events", "html_url": "https://github.com/wbond/asn1crypto/issues/123", "id": 391187009, "node_id": "MDU6SXNzdWUzOTExODcwMDk=", "number": 123, "title": "Cannot load crypto.dll in _big_num_ctypes.py", "user": {"login": "amanb87", "id": 12748790, "node_id": "MDQ6VXNlcjEyNzQ4Nzkw", "avatar_url": "https://avatars0.githubusercontent.com/u/12748790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amanb87", "html_url": "https://github.com/amanb87", "followers_url": "https://api.github.com/users/amanb87/followers", "following_url": "https://api.github.com/users/amanb87/following{/other_user}", "gists_url": "https://api.github.com/users/amanb87/gists{/gist_id}", "starred_url": "https://api.github.com/users/amanb87/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amanb87/subscriptions", "organizations_url": "https://api.github.com/users/amanb87/orgs", "repos_url": "https://api.github.com/users/amanb87/repos", "events_url": "https://api.github.com/users/amanb87/events{/privacy}", "received_events_url": "https://api.github.com/users/amanb87/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-14T16:49:31Z", "updated_at": "2019-07-13T11:15:43Z", "closed_at": "2019-07-13T11:15:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been trying to work out imports in the asn1crypto package. While trying to do the `import _big_num_ctypes`  from asn1crypto\\\\_perf, I get the below error. I have crypto.dll installed in System32 & SysWOW64 folders and registered with regsrv32. This has been tested on Windows 7 64-bit with the Anaconda distribution of Python 3.6.7(32-bit) & Python 3.7(64-bit). Looking at the error, I realized there may be an architecture version conflict, so I tried on both 32-bit & 64-bit versions of Python but the error persisted. \r\n\r\n```\r\n(py36_32) C:\\Users\\%USERPROFILE%>python\r\nPython 3.6.7 |Anaconda, Inc.| (default, Dec 10 2018, 21:25:28) [MSC v.1915 32 bi\r\nt (Intel)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from asn1crypto._perf import _big_num_ctypes\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\%USERPROFILE%\\Anaconda3\\envs\\py36_32\\lib\\site-packages\\asn1crypto\\_\r\nperf\\_big_num_ctypes.py\", line 39, in <module>\r\n    libcrypto = CDLL(libcrypto_path)\r\n  File \"C:\\Users\\%USERPROFILE%\\Anaconda3\\envs\\py36_32\\lib\\ctypes\\__init__.py\", line\r\n348, in __init__\r\n    self._handle = _dlopen(self._name, mode)\r\nOSError: [WinError 193] %1 is not a valid Win32 application\r\n```\r\nHowever, the dll itself is successfully found:\r\n```\r\n>>> from ctypes.util import find_library\r\n>>> testlib = find_library('crypto')\r\n>>> testlib\r\n'C:\\\\windows\\\\system32\\\\crypto.dll'\r\n```\r\nI also re-installed asn1crypto and its dependencies from `conda` but that didn't help either:\r\n```\r\nasn1crypto:   0.24.0-py36_0\r\ncryptography: 2.4.1-py36h7a1dbc1_0\r\npyopenssl:    18.0.0-py36_0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/122", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/122/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/122/events", "html_url": "https://github.com/wbond/asn1crypto/issues/122", "id": 375088297, "node_id": "MDU6SXNzdWUzNzUwODgyOTc=", "number": 122, "title": "field 'children' is None before debug() runs and populated after", "user": {"login": "awwad", "id": 13263928, "node_id": "MDQ6VXNlcjEzMjYzOTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/13263928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awwad", "html_url": "https://github.com/awwad", "followers_url": "https://api.github.com/users/awwad/followers", "following_url": "https://api.github.com/users/awwad/following{/other_user}", "gists_url": "https://api.github.com/users/awwad/gists{/gist_id}", "starred_url": "https://api.github.com/users/awwad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awwad/subscriptions", "organizations_url": "https://api.github.com/users/awwad/orgs", "repos_url": "https://api.github.com/users/awwad/repos", "events_url": "https://api.github.com/users/awwad/events{/privacy}", "received_events_url": "https://api.github.com/users/awwad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-29T15:57:01Z", "updated_at": "2018-10-29T16:24:03Z", "closed_at": "2018-10-29T16:24:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this intended behavior?  Should I not be looking at `.children`?\r\n\r\n\r\n### Example 1, core load methods:\r\n```Python\r\n>>> asn1_obj = asn1crypto.core.load(b'0\\x19\\x04\\x061234ab\\x1a\\x07methody\\x04\\x06abcdef')\r\n>>> asn1_obj.children\r\n>>> asn1_obj.children\r\n>>> asn1_obj.debug()\r\n  asn1crypto.core.Sequence Object #4328903400\r\n    Header: 0x3019\r\n      constructed universal tag 16\r\n    Data: 0x04063132333461621a076d6574686f64790406616263646566\r\n>>> asn1_obj.children\r\n[(0, 0, 4, b'\\x04\\x06', b'1234ab', b''), (0, 0, 26, b'\\x1a\\x07', b'methody', b''), (0, 0, 4, b'\\x04\\x06', b'abcdef', b'')]\r\n```\r\n\r\n### Example 2, custom class load method:\r\n```Python\r\n>>> asn1_obj = defs.Signature.load(b'0\\x19\\x04\\x061234ab\\x1a\\x07methody\\x04\\x06abcdef')\r\n>>> asn1_obj.children\r\n>>> asn1_obj.children\r\n>>> asn1_obj.debug()\r\n  tuf.encoding.asn1_metadata_definitions.Signature Object #4328903400\r\n    Header: 0x3019\r\n      constructed universal tag 16\r\n    Data: 0x04063132333461621a076d6574686f64790406616263646566\r\n      Field \"keyid\"\r\n        asn1crypto.core.OctetString Object #4325197304\r\n          Header: 0x0406\r\n            primitive universal tag 4\r\n          Data: 0x313233346162\r\n            Native: b'1234ab'\r\n      Field \"method\"\r\n        asn1crypto.core.VisibleString Object #4330570024\r\n          Header: 0x1a07\r\n            primitive universal tag 26\r\n          Data: 0x6d6574686f6479\r\n            Native: methody\r\n      Field \"value\"\r\n        asn1crypto.core.OctetString Object #4330570136\r\n          Header: 0x0406\r\n            primitive universal tag 4\r\n          Data: 0x616263646566\r\n            Native: b'abcdef'\r\n>>> asn1_obj.children\r\n[<asn1crypto.core.OctetString 4325197304 b'\\x04\\x061234ab'>, <asn1crypto.core.VisibleString 4330570024 b'\\x1a\\x07methody'>, <asn1crypto.core.OctetString 4330570136 b'\\x04\\x06abcdef'>]\r\n```\r\n\r\n\r\n### source of DER data\r\nFWIW, here's the definition of class Signature:\r\n```Python\r\nclass Signature(ac.Sequence):\r\n  _fields = [\r\n      ('keyid', ac.OctetString),\r\n      ('method', ac.VisibleString),\r\n      ('value', ac.OctetString)]\r\n```\r\nAnd here's the source of the bytes used above:\r\n```Python\r\n>>> defs.Signature({'keyid': b'1234ab', 'method': 'methody', 'value': b'abcdef'}).dump()\r\nb'0\\x19\\x04\\x061234ab\\x1a\\x07methody\\x04\\x06abcdef'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/121", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/121/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/121/events", "html_url": "https://github.com/wbond/asn1crypto/issues/121", "id": 374466667, "node_id": "MDU6SXNzdWUzNzQ0NjY2Njc=", "number": 121, "title": "Installation issue: undefined symbol: SSLv2_client_method", "user": {"login": "slzarate", "id": 12899963, "node_id": "MDQ6VXNlcjEyODk5OTYz", "avatar_url": "https://avatars0.githubusercontent.com/u/12899963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slzarate", "html_url": "https://github.com/slzarate", "followers_url": "https://api.github.com/users/slzarate/followers", "following_url": "https://api.github.com/users/slzarate/following{/other_user}", "gists_url": "https://api.github.com/users/slzarate/gists{/gist_id}", "starred_url": "https://api.github.com/users/slzarate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slzarate/subscriptions", "organizations_url": "https://api.github.com/users/slzarate/orgs", "repos_url": "https://api.github.com/users/slzarate/repos", "events_url": "https://api.github.com/users/slzarate/events{/privacy}", "received_events_url": "https://api.github.com/users/slzarate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-26T16:54:53Z", "updated_at": "2018-11-01T16:30:13Z", "closed_at": "2018-11-01T13:54:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am installing `asn1crypto` in Docker and am receiving the following error:\r\n```\r\npip install asn1crypto\r\nTraceback (most recent call last):\r\n  File \"/miniconda/bin/pip\", line 7, in <module>\r\n    from pip._internal import main\r\n  File \"/miniconda/lib/python2.7/site-packages/pip/_internal/__init__.py\", line 40, in <module>\r\n    from pip._internal.cli.autocompletion import autocomplete\r\n  File \"/miniconda/lib/python2.7/site-packages/pip/_internal/cli/autocompletion.py\", line 8, in <module>\r\n    from pip._internal.cli.main_parser import create_main_parser\r\n  File \"/miniconda/lib/python2.7/site-packages/pip/_internal/cli/main_parser.py\", line 12, in <module>\r\n    from pip._internal.commands import (\r\n  File \"/miniconda/lib/python2.7/site-packages/pip/_internal/commands/__init__.py\", line 6, in <module>\r\n    from pip._internal.commands.completion import CompletionCommand\r\n  File \"/miniconda/lib/python2.7/site-packages/pip/_internal/commands/completion.py\", line 6, in <module>\r\n    from pip._internal.cli.base_command import Command\r\n  File \"/miniconda/lib/python2.7/site-packages/pip/_internal/cli/base_command.py\", line 18, in <module>\r\n    from pip._internal.download import PipSession\r\n  File \"/miniconda/lib/python2.7/site-packages/pip/_internal/download.py\", line 15, in <module>\r\n    from pip._vendor import requests, six, urllib3\r\n  File \"/miniconda/lib/python2.7/site-packages/pip/_vendor/requests/__init__.py\", line 97, in <module>\r\n    from pip._vendor.urllib3.contrib import pyopenssl\r\n  File \"/miniconda/lib/python2.7/site-packages/pip/_vendor/urllib3/contrib/pyopenssl.py\", line 46, in <module>\r\n    import OpenSSL.SSL\r\n  File \"/miniconda/lib/python2.7/site-packages/OpenSSL/__init__.py\", line 8, in <module>\r\n    from OpenSSL import rand, crypto, SSL\r\n  File \"/miniconda/lib/python2.7/site-packages/OpenSSL/rand.py\", line 11, in <module>\r\n    from OpenSSL._util import (\r\n  File \"/miniconda/lib/python2.7/site-packages/OpenSSL/_util.py\", line 7, in <module>\r\n    binding = Binding()\r\n  File \"/miniconda/lib/python2.7/site-packages/cryptography/hazmat/bindings/openssl/binding.py\", line 89, in __init__\r\n    self._ensure_ffi_initialized()\r\n  File \"/miniconda/lib/python2.7/site-packages/cryptography/hazmat/bindings/openssl/binding.py\", line 109, in _ensure_ffi_initialized\r\n    libraries=libraries,\r\n  File \"/miniconda/lib/python2.7/site-packages/cryptography/hazmat/bindings/utils.py\", line 80, in build_ffi\r\n    extra_link_args=extra_link_args,\r\n  File \"/miniconda/lib/python2.7/site-packages/cffi/api.py\", line 451, in verify\r\n    lib = self.verifier.load_library()\r\n  File \"/miniconda/lib/python2.7/site-packages/cffi/verifier.py\", line 105, in load_library\r\n    return self._load_library()\r\n  File \"/miniconda/lib/python2.7/site-packages/cffi/verifier.py\", line 216, in _load_library\r\n    return self._vengine.load_library()\r\n  File \"/miniconda/lib/python2.7/site-packages/cffi/vengine_cpy.py\", line 159, in load_library\r\n    raise VerificationError(error)\r\ncffi.error.VerificationError: importing '/miniconda/lib/python2.7/site-packages/cryptography/_Cryptography_cffi_4ed9e37dx4000d087.so': /miniconda/lib/python2.7/site-packages/cryptography/_Cryptography_cffi_4ed9e37dx4000d087.so: undefined symbol: SSLv2_client_method\r\n```\r\n\r\nThis command worked earlier this week. Has a new version been released that leads to this breaking?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/119", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/119/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/119/events", "html_url": "https://github.com/wbond/asn1crypto/issues/119", "id": 366736356, "node_id": "MDU6SXNzdWUzNjY3MzYzNTY=", "number": 119, "title": "New PyPI release?", "user": {"login": "ra-kete", "id": 4521314, "node_id": "MDQ6VXNlcjQ1MjEzMTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/4521314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ra-kete", "html_url": "https://github.com/ra-kete", "followers_url": "https://api.github.com/users/ra-kete/followers", "following_url": "https://api.github.com/users/ra-kete/following{/other_user}", "gists_url": "https://api.github.com/users/ra-kete/gists{/gist_id}", "starred_url": "https://api.github.com/users/ra-kete/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ra-kete/subscriptions", "organizations_url": "https://api.github.com/users/ra-kete/orgs", "repos_url": "https://api.github.com/users/ra-kete/repos", "events_url": "https://api.github.com/users/ra-kete/events{/privacy}", "received_events_url": "https://api.github.com/users/ra-kete/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-10-04T11:05:11Z", "updated_at": "2019-10-03T05:25:04Z", "closed_at": "2019-10-03T01:23:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "The last release, 0.24.0, was published nearly 10 months ago now. Looks like a lot has happened since then. Can we get a new release on PyPI, for those who cannot pull directly from master?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/117", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/117/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/117/events", "html_url": "https://github.com/wbond/asn1crypto/issues/117", "id": 365204180, "node_id": "MDU6SXNzdWUzNjUyMDQxODA=", "number": 117, "title": "Certificate status lost while parsing OCSP response", "user": {"login": "laurivosandi", "id": 194685, "node_id": "MDQ6VXNlcjE5NDY4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/194685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurivosandi", "html_url": "https://github.com/laurivosandi", "followers_url": "https://api.github.com/users/laurivosandi/followers", "following_url": "https://api.github.com/users/laurivosandi/following{/other_user}", "gists_url": "https://api.github.com/users/laurivosandi/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurivosandi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurivosandi/subscriptions", "organizations_url": "https://api.github.com/users/laurivosandi/orgs", "repos_url": "https://api.github.com/users/laurivosandi/repos", "events_url": "https://api.github.com/users/laurivosandi/events{/privacy}", "received_events_url": "https://api.github.com/users/laurivosandi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220107140, "node_id": "MDU6TGFiZWwyMjAxMDcxNDA=", "url": "https://api.github.com/repos/wbond/asn1crypto/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 220107142, "node_id": "MDU6TGFiZWwyMjAxMDcxNDI=", "url": "https://api.github.com/repos/wbond/asn1crypto/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-30T08:14:32Z", "updated_at": "2019-10-01T05:19:13Z", "closed_at": "2019-10-01T05:19:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nit seems during the parse information is lost and both \"good\" and \"unknown\" states are mapped to None?\r\nhttps://github.com/wbond/asn1crypto/blob/master/asn1crypto/ocsp.py#L329\r\n\r\nAlso I think all three cases should be covered in the unit test, currently there is no checks for certificate status there.\r\n\r\nCode snippet I used for testing:\r\n\r\n```\r\nfrom asn1crypto import ocsp, pem, x509\r\nimport requests\r\n\r\ncertificate_buf = b\"\"\"\r\n-----BEGIN CERTIFICATE-----\r\nMIIF5zCCA8+gAwIBAgIQayc3fL+OmQtaHqUpJIKeujANBgkqhkiG9w0BAQsFADBj\r\nMQswCQYDVQQGEwJFRTEiMCAGA1UECgwZQVMgU2VydGlmaXRzZWVyaW1pc2tlc2t1\r\nczEXMBUGA1UEYQwOTlRSRUUtMTA3NDcwMTMxFzAVBgNVBAMMDkVTVEVJRC1TSyAy\r\nMDE1MB4XDTE3MTEyOTEyMTY0MVoXDTE5MTEwNzIxNTk1OVowgZ8xCzAJBgNVBAYT\r\nAkVFMRkwFwYDVQQKDBBFU1RFSUQgKERJR0ktSUQpMRcwFQYDVQQLDA5hdXRoZW50\r\naWNhdGlvbjEjMCEGA1UEAwwaVsOVU0FOREksTEFVUkksMzg4MTAyNDAzNDgxETAP\r\nBgNVBAQMCFbDlVNBTkRJMQ4wDAYDVQQqDAVMQVVSSTEUMBIGA1UEBRMLMzg4MTAy\r\nNDAzNDgwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAT6OOQmBBJ4fjnmXkCmLeDwcQOx\r\nMtHeSsAbQKcORvWv1Qkw2UewSHag9KIWTdM/XATxtUDBp8tHaI59z+CuOuTJW93/\r\nKGwIEhdOCx1JgqCZm+eH1oBUuvXW/Z3vwNFY80CjggIGMIICAjAJBgNVHRMEAjAA\r\nMA4GA1UdDwEB/wQEAwIDiDBTBgNVHSAETDBKMD4GCSsGAQQBzh8BAjAxMC8GCCsG\r\nAQUFBwIBFiNodHRwczovL3d3dy5zay5lZS9yZXBvc2l0b29yaXVtL0NQUzAIBgYE\r\nAI96AQIwIQYDVR0RBBowGIEWbGF1cmkudm9zYW5kaUBlZXN0aS5lZTAdBgNVHQ4E\r\nFgQUH8FQqUGrpoGB6uFNV9Lens3+ipgwIAYDVR0lAQH/BBYwFAYIKwYBBQUHAwIG\r\nCCsGAQUFBwMEMB8GA1UdIwQYMBaAFLOriLyZ1WKkhSoIzbQdcjuDckdRMGEGCCsG\r\nAQUFBwEDBFUwUzBRBgYEAI5GAQUwRzBFFj9odHRwczovL3NrLmVlL2VuL3JlcG9z\r\naXRvcnkvY29uZGl0aW9ucy1mb3ItdXNlLW9mLWNlcnRpZmljYXRlcy8TAkVOMGoG\r\nCCsGAQUFBwEBBF4wXDAnBggrBgEFBQcwAYYbaHR0cDovL2FpYS5zay5lZS9lc3Rl\r\naWQyMDE1MDEGCCsGAQUFBzAChiVodHRwOi8vYy5zay5lZS9FU1RFSUQtU0tfMjAx\r\nNS5kZXIuY3J0MDwGA1UdHwQ1MDMwMaAvoC2GK2h0dHA6Ly93d3cuc2suZWUvY3Js\r\ncy9lc3RlaWQvZXN0ZWlkMjAxNS5jcmwwDQYJKoZIhvcNAQELBQADggIBAFBuNJvm\r\n1RPqDp81upsmjYUXe86z+6iWQOLTF3zvKmj3hwzmp4KkbmDrWvstWFABSkst5A4c\r\nBcgGbDZzdsdAaf1gq4/b9hXnxQ//x9NRnPFZJL1yMl7Qf/y2Z957ZwTJMPntXmlf\r\nBJF3nQbA0w5D8al+/W8esl7BkFdBge7l6gpA2Y+PynwqfB/uYhI+7MQaIiSe33LO\r\nhdlz7DlNnHGa2ahTJu8i4+Ip0j86whP6XBt2vT4WLsfwWoZal5gs7kcsWq0/5a2k\r\nULQQ363leirkt7kuGnXKOnukxWL3GeBJwo++GxvK/7j5uUbdwtMgkwlyQkdhxSWI\r\nome6VtqBsh6Tk907P3TCWNwGP0y1UAx6xCHQisjywgOPy9nxCVIxPjMlUXkwSYtl\r\npyN9guqFx61XV6dPzAPtlOHSFB73hNgqt7ikLHyhI2kUgW5zLVqLEOw2iE6s24AY\r\njhPjJSgaWC+jDXbE4NuAhe0bj/M2VIKoXCOOl/ZqTM6cjR4xY9yy0bucDE1awqHp\r\nnb0E0V4hvFAeRtOgydG6TxnZjjvRk5oR0CRaMidFtWX+VKVIozaeytVnVhfNU0SG\r\nHccSCfIUQvPI+ukQQ3hOwMQptccpCo9CHXu2KRsVbE3rti0GM/+M9pDqKteu0k6f\r\n1pnshaUqoYBcOOGuFerrVQXsA8meY9Y8qv3r\r\n-----END CERTIFICATE-----\r\n\"\"\"\r\nurl = \"http://ocsp.sk.ee/_proxy\"\r\n\r\nheader, _, certificate_der_bytes = pem.unarmor(certificate_buf)\r\ncertificate = x509.Certificate.load(certificate_der_bytes)\r\n\r\nprint(\"Subject is:\", certificate.subject.native)\r\n\r\nbuf = ocsp.OCSPRequest({\r\n\t\"tbs_request\": {\r\n\t\t\"request_list\": [{\r\n\t\t\t\"req_cert\": {\r\n\t\t\t\t\"serial_number\":  certificate.serial_number,\r\n\t\t\t\t'hash_algorithm': {\r\n\t\t\t\t    'algorithm': \"sha1\"\r\n\t\t\t\t},\r\n        'issuer_name_hash': certificate.subject.sha1,\r\n\t\t\t\t'issuer_key_hash': certificate.public_key.sha1,\r\n\t\t\t},\r\n\t\t}],\r\n\t}\r\n}).dump()\r\n\r\nr = requests.post(url, data=buf, headers={\"Content-Type\":\"application/ocsp-request\"})\r\nresponse = ocsp.OCSPResponse.load(r.content).native[\"response_bytes\"][\"response\"]\r\nfor r in response[\"tbs_response_data\"][\"responses\"]:\r\n  print(\"Certificate status is:\", r[\"cert_status\"])\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/115", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/115/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/115/events", "html_url": "https://github.com/wbond/asn1crypto/issues/115", "id": 362825621, "node_id": "MDU6SXNzdWUzNjI4MjU2MjE=", "number": 115, "title": "Should KeyTransRecipientInfo use a different Algorithm OID->parameter class map?", "user": {"login": "wiml", "id": 156891, "node_id": "MDQ6VXNlcjE1Njg5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/156891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiml", "html_url": "https://github.com/wiml", "followers_url": "https://api.github.com/users/wiml/followers", "following_url": "https://api.github.com/users/wiml/following{/other_user}", "gists_url": "https://api.github.com/users/wiml/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiml/subscriptions", "organizations_url": "https://api.github.com/users/wiml/orgs", "repos_url": "https://api.github.com/users/wiml/repos", "events_url": "https://api.github.com/users/wiml/events{/privacy}", "received_events_url": "https://api.github.com/users/wiml/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-22T04:32:27Z", "updated_at": "2019-08-02T02:29:01Z", "closed_at": "2019-08-02T02:29:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/wbond/asn1crypto/blob/98d23f5fcce5d3ed3296bac77aef487b6245807a/asn1crypto/cms.py#L673\r\n\r\nRight now, `KeyTransRecipientInfo`'s `key_encryption_algorithm` field is parsed as a `KeyEncryptionAlgorithm`. However that spec's mapping is mostly for key \"wrapping\" (transporting a key using a symmetric key) while KTRI is used for transporting a key using an asymmetric key. The algorithms used in KTRI are typically `rsaes_pkcs1v15` or `rsaes_oaep`.\r\n\r\nIt doesn't look like there is already a sequence type in asn1crypto which has mappings for both `rsaes_pkcs1v15` and `rsaes_oaep`, but maybe it would make sense to combine all of the AlgorithmIdentifier specs for encryption algorithms (symmetric or asymmetric or \"wrapping\") into one?\r\n\r\n(It happens that the RSA key type and the RSAES-PKCS1v15 algorithm have the same OID, and neither requires parameters, so the existing mapping works okay for RSA, although I think it would be clearer to use the `rsaes_pkcs1v15` name. However, RSA-OAEP does have parameters, and without a mapping for it, it's difficult to work with RSA-OAEP-encrypted data.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/113", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/113/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/113/events", "html_url": "https://github.com/wbond/asn1crypto/issues/113", "id": 357587423, "node_id": "MDU6SXNzdWUzNTc1ODc0MjM=", "number": 113, "title": "Can libcrypto dependency be optional?", "user": {"login": "methane", "id": 199592, "node_id": "MDQ6VXNlcjE5OTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-09-06T10:12:28Z", "updated_at": "2019-08-10T12:05:25Z", "closed_at": "2019-07-13T11:14:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/wbond/asn1crypto/blob/9e15efd73f1b7cfba73cb56b3188eb879480f77c/asn1crypto/_perf/_big_num_ctypes.py#L35-L39\r\n\r\nThis code may cause SEGV, when binary incompatible OpenSSL version is used in same process.\r\nIn our case, we use custom (newer) OpenSSL for Python's ssl, uwsgi, cryptography, and pysqlcipher.\r\nBut asn1crypto loads system's libcrypto and it caused SEGV.\r\n\r\nWe solved the SEGV by manually removing `_perf` module.  But this manual step is not idiomatic.\r\nHow about making libcrypto dependency optional and make it asn1crypto (and pyca/cryptography)\r\nsafe by default?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/112", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/112/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/112/events", "html_url": "https://github.com/wbond/asn1crypto/issues/112", "id": 356552184, "node_id": "MDU6SXNzdWUzNTY1NTIxODQ=", "number": 112, "title": "Help needed to decrypt CMS", "user": {"login": "attila123", "id": 1728046, "node_id": "MDQ6VXNlcjE3MjgwNDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1728046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/attila123", "html_url": "https://github.com/attila123", "followers_url": "https://api.github.com/users/attila123/followers", "following_url": "https://api.github.com/users/attila123/following{/other_user}", "gists_url": "https://api.github.com/users/attila123/gists{/gist_id}", "starred_url": "https://api.github.com/users/attila123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/attila123/subscriptions", "organizations_url": "https://api.github.com/users/attila123/orgs", "repos_url": "https://api.github.com/users/attila123/repos", "events_url": "https://api.github.com/users/attila123/events{/privacy}", "received_events_url": "https://api.github.com/users/attila123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-03T15:53:42Z", "updated_at": "2018-09-04T19:22:52Z", "closed_at": "2018-09-03T16:00:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nSorry for this n00b \"support question\" here, but I need some help to decrypt a CMS.\r\nIt was encrypted this way:\r\n```\r\nopenssl cms -encrypt -aes-256-ofb -md sha384 -in input_message.txt -out openssl_generated_aes_256_ofb.cms -outform PEM certificate.cert\r\n```\r\nDecryption with openssl:\r\n```\r\nopenssl cms -decrypt -in openssl_generated_aes_256_ofb.cms -inform PEM -inkey private_key.pem\r\n```\r\nI managed to come up this far myself:\r\n```\r\nfrom asn1crypto import pem, cms\r\n\r\n\r\nwith open('openssl_generated_aes_256_ofb.cms', 'rb') as f:\r\n    byte_string = f.read()\r\n    if pem.detect(byte_string):\r\n        type_name, headers, der_bytes = pem.unarmor(byte_string)\r\n        info = cms.ContentInfo.load(der_bytes)\r\n        digested_data = info['content']\r\n        # This is asn1crypto.cms.EnvelopedData\r\n        print('digested_data', digested_data)\r\n        # This is asn1crypto.cms.EncryptedContentInfo\r\n        print(digested_data['encrypted_content_info'])\r\n        # This is asn1crypto.core.OctetString\r\n        print(digested_data['encrypted_content_info']['encrypted_content'])\r\n```\r\nHopefully it is usable...\r\nCould you please advise how to do the decryption using the private key file?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/109", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/109/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/109/events", "html_url": "https://github.com/wbond/asn1crypto/issues/109", "id": 348777981, "node_id": "MDU6SXNzdWUzNDg3Nzc5ODE=", "number": 109, "title": "Add rsaes_oaep to KeyEncryptionAlgorithmId", "user": {"login": "luckylud", "id": 10115202, "node_id": "MDQ6VXNlcjEwMTE1MjAy", "avatar_url": "https://avatars3.githubusercontent.com/u/10115202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luckylud", "html_url": "https://github.com/luckylud", "followers_url": "https://api.github.com/users/luckylud/followers", "following_url": "https://api.github.com/users/luckylud/following{/other_user}", "gists_url": "https://api.github.com/users/luckylud/gists{/gist_id}", "starred_url": "https://api.github.com/users/luckylud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luckylud/subscriptions", "organizations_url": "https://api.github.com/users/luckylud/orgs", "repos_url": "https://api.github.com/users/luckylud/repos", "events_url": "https://api.github.com/users/luckylud/events{/privacy}", "received_events_url": "https://api.github.com/users/luckylud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-08T15:30:05Z", "updated_at": "2018-09-04T12:09:24Z", "closed_at": "2018-09-04T12:09:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\nI need to add rsaes_oaep KeyEncryptionAlgorithmId in asn1crypto/cms.py\r\n\r\nSee my commit: https://github.com/luckylud/asn1crypto/commit/d2364cdfd6210f22529260c2828882cfd0061e83\r\n\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/108", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/108/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/108/events", "html_url": "https://github.com/wbond/asn1crypto/issues/108", "id": 348776366, "node_id": "MDU6SXNzdWUzNDg3NzYzNjY=", "number": 108, "title": "Add pkcs12_sha1_rc4_128 to EncryptionAlgorithmId", "user": {"login": "luckylud", "id": 10115202, "node_id": "MDQ6VXNlcjEwMTE1MjAy", "avatar_url": "https://avatars3.githubusercontent.com/u/10115202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luckylud", "html_url": "https://github.com/luckylud", "followers_url": "https://api.github.com/users/luckylud/followers", "following_url": "https://api.github.com/users/luckylud/following{/other_user}", "gists_url": "https://api.github.com/users/luckylud/gists{/gist_id}", "starred_url": "https://api.github.com/users/luckylud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luckylud/subscriptions", "organizations_url": "https://api.github.com/users/luckylud/orgs", "repos_url": "https://api.github.com/users/luckylud/repos", "events_url": "https://api.github.com/users/luckylud/events{/privacy}", "received_events_url": "https://api.github.com/users/luckylud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-08T15:26:24Z", "updated_at": "2018-09-04T12:09:09Z", "closed_at": "2018-09-04T12:09:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI use asn1crypto for one project and I want to submit one pull request to add pkcs12_sha1_rc4_128   EncryptionAlgorithmId in asn1crypto/algos.py\r\n\r\nSee : https://github.com/luckylud/asn1crypto/commit/6e0ddd673584d7855519d2589f8222c8c02da2b7\r\n\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/107", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/107/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/107/events", "html_url": "https://github.com/wbond/asn1crypto/issues/107", "id": 346932511, "node_id": "MDU6SXNzdWUzNDY5MzI1MTE=", "number": 107, "title": "URI can't have trailing slash", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-02T09:31:36Z", "updated_at": "2018-09-04T12:09:56Z", "closed_at": "2018-09-04T12:09:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```python3\r\n#!/usr/bin/env python3\r\n\r\nfrom asn1crypto.x509 import URI\r\n\r\nuri = URI('http://www.example.net/')\r\nuri2 = URI.load(uri.dump())\r\nprint(uri2.native)\r\n```\r\n\r\nThis outputs `http://www.example.net`, i.e. the trailing slash was stripped.\r\n\r\nI found this while loading a Certificate that's issued by letsencrypt and dumping it again. comparing the results. Their AIA has a trailing slash.\r\n\r\nI'm not sure if there is some standard that says that URIs must not have trailing slashes. But even then, asn1crypto shouldn't strip it, in my opinion.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/103", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/103/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/103/events", "html_url": "https://github.com/wbond/asn1crypto/issues/103", "id": 335831616, "node_id": "MDU6SXNzdWUzMzU4MzE2MTY=", "number": 103, "title": "Inconsistent `.native` conversion for broken certs", "user": {"login": "rooterkyberian", "id": 637466, "node_id": "MDQ6VXNlcjYzNzQ2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/637466?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rooterkyberian", "html_url": "https://github.com/rooterkyberian", "followers_url": "https://api.github.com/users/rooterkyberian/followers", "following_url": "https://api.github.com/users/rooterkyberian/following{/other_user}", "gists_url": "https://api.github.com/users/rooterkyberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/rooterkyberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rooterkyberian/subscriptions", "organizations_url": "https://api.github.com/users/rooterkyberian/orgs", "repos_url": "https://api.github.com/users/rooterkyberian/repos", "events_url": "https://api.github.com/users/rooterkyberian/events{/privacy}", "received_events_url": "https://api.github.com/users/rooterkyberian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-26T13:55:35Z", "updated_at": "2018-07-06T13:50:18Z", "closed_at": "2018-07-06T13:50:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I try to convert certificate to `native` while it contains invalid fields I get and error first time around, and only first time:\r\n\r\nBroken cert example taken from:  https://github.com/pyca/cryptography/blob/a5865d9b630df7586785b683ed145b977ad7e0c4/vectors/cryptography_vectors/x509/san_x400address.der\r\n```python\r\nfrom asn1crypto import pem, x509\r\n\r\nwith open('san_x400address.der', 'rb') as f:\r\n    der_bytes = f.read()\r\n\r\ncert = x509.Certificate.load(der_bytes)\r\n\r\nfor i in range(2):\r\n    print(i)\r\n    try:\r\n        result = cert.native\r\n    except Exception as e:\r\n        result = e\r\n    print(result)\r\n```\r\n**I get:**\r\n```\r\n0\r\nError parsing asn1crypto.x509.BuiltInStandardAttributes - method should have been constructed, but primitive was found\r\n    while parsing asn1crypto.x509.ORAddress\r\n    while parsing asn1crypto.x509.GeneralNames\r\n    while parsing asn1crypto.x509.Extension\r\n    while parsing asn1crypto.x509.Extensions\r\n    while parsing asn1crypto.x509.TbsCertificate\r\n    while parsing asn1crypto.x509.Certificate\r\n1\r\nOrderedDict()\r\n```\r\n\r\n**Expected:** both times I should get the same error.\r\n\r\nTested with `asn1crypto==0.24.0`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/102", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/102/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/102/events", "html_url": "https://github.com/wbond/asn1crypto/issues/102", "id": 335223241, "node_id": "MDU6SXNzdWUzMzUyMjMyNDE=", "number": 102, "title": "Empty BitString decoded incorrectly?", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-24T23:45:09Z", "updated_at": "2018-06-29T03:00:31Z", "closed_at": "2018-06-29T03:00:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```python\r\nfrom asn1crypto.core import BitString\r\n\r\nbits = BitString(())\r\nbuf = bits.dump(True)\r\nprint(buf.hex())\r\n\r\nbits2 = BitString.load(buf)\r\nprint(bits2.native)\r\nprint(bits2.dump(True).hex())\r\n```\r\n\r\n```\r\n030100\r\n(0, 0, 0, 0, 0, 0, 0, 0)\r\n03020000\r\n```\r\n\r\nI believe that the correct encoding for the empty bit string is indeed `03 01 00`. When decoding, the result should be the empty bitstring again.\r\n\r\n> If the bitstring is empty, there shall be no subsequent octets, and the initial octet shall be zero.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/101", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/101/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/101/events", "html_url": "https://github.com/wbond/asn1crypto/issues/101", "id": 334642768, "node_id": "MDU6SXNzdWUzMzQ2NDI3Njg=", "number": 101, "title": "Cannot retrieve modulus from PKCS#8 private key", "user": {"login": "gringus", "id": 3704589, "node_id": "MDQ6VXNlcjM3MDQ1ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3704589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gringus", "html_url": "https://github.com/gringus", "followers_url": "https://api.github.com/users/gringus/followers", "following_url": "https://api.github.com/users/gringus/following{/other_user}", "gists_url": "https://api.github.com/users/gringus/gists{/gist_id}", "starred_url": "https://api.github.com/users/gringus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gringus/subscriptions", "organizations_url": "https://api.github.com/users/gringus/orgs", "repos_url": "https://api.github.com/users/gringus/repos", "events_url": "https://api.github.com/users/gringus/events{/privacy}", "received_events_url": "https://api.github.com/users/gringus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-21T20:20:59Z", "updated_at": "2018-06-29T19:17:46Z", "closed_at": "2018-06-29T18:17:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "While writing some internal tool which need to extract modulus from certificates/private keys I run into some problems. I generate a new RSA private key:\r\n```\r\nopenssl genpkey -algorithm RSA -out test.pem\r\n```\r\nCommand:\r\n```\r\nopenssl rsa -in test.pem -noout -modulus\r\n```\r\nreturns modulus of the key. Unfortunately trying to run:\r\n```\r\nfrom asn1crypto import keys, pem\r\n\r\nwith open('test.pem', 'rb') as f:\r\n    type_name, headers, der_bytes = pem.unarmor(f.read())\r\n    object = keys.RSAPrivateKey.load(der_bytes)\r\n    print(object['modulus'].native)\r\n```\r\nthrows the following error:\r\n```\r\nValueError: Field \"private_exponent\" is missing from structure\r\n    while parsing asn1crypto.keys.RSAPrivateKey\r\n```\r\nThis seems to be affecting only PKCS#8 keys (`BEGIN PRIVATE KEY` tag) but not PKCS#1 keys (`BEGIN RSA PRIVATE KEY` tag), so:\r\n```\r\nopenssl genrsa -out test.pem\r\n```\r\ndoes not cause any problems. This is with **asn1crypto 0.24** and **OpenSSL 1.0.2o**.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/100", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/100/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/100/events", "html_url": "https://github.com/wbond/asn1crypto/issues/100", "id": 334546738, "node_id": "MDU6SXNzdWUzMzQ1NDY3Mzg=", "number": 100, "title": "Drop EC math operators?", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220107143, "node_id": "MDU6TGFiZWwyMjAxMDcxNDM=", "url": "https://api.github.com/repos/wbond/asn1crypto/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-06-21T15:31:18Z", "updated_at": "2019-07-13T11:13:37Z", "closed_at": "2019-07-13T11:13:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that the ``PrimePoint`` class for elliptic curve implements multiplication and addition over an elliptic curve. Internally it uses a pure Python implementation with an optional accelerator for inverse mod using CFFI and OpenSSL's big numbers. I'm rather worried about the custom implementation in asn1crypto. It doesn't seem to implement protection against malicious input, see https://safecurves.cr.yp.to/\r\n\r\nDoes asn1crypto really need to come with a custom EC math implementation? After all isn't its primary purpose ASN.1 handling and a high level interface to common ASN.1 data structures?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/97", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/97/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/97/events", "html_url": "https://github.com/wbond/asn1crypto/issues/97", "id": 329768968, "node_id": "MDU6SXNzdWUzMjk3Njg5Njg=", "number": 97, "title": "repeated bytes when handling implicit tags", "user": {"login": "processor2018", "id": 38175440, "node_id": "MDQ6VXNlcjM4MTc1NDQw", "avatar_url": "https://avatars3.githubusercontent.com/u/38175440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/processor2018", "html_url": "https://github.com/processor2018", "followers_url": "https://api.github.com/users/processor2018/followers", "following_url": "https://api.github.com/users/processor2018/following{/other_user}", "gists_url": "https://api.github.com/users/processor2018/gists{/gist_id}", "starred_url": "https://api.github.com/users/processor2018/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/processor2018/subscriptions", "organizations_url": "https://api.github.com/users/processor2018/orgs", "repos_url": "https://api.github.com/users/processor2018/repos", "events_url": "https://api.github.com/users/processor2018/events{/privacy}", "received_events_url": "https://api.github.com/users/processor2018/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-06T08:40:14Z", "updated_at": "2018-06-29T18:12:48Z", "closed_at": "2018-06-29T18:12:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nimport asn1crypto.core\r\nimport unittest\r\n\r\nclass SpcPeImageFlags(asn1crypto.core.BitString):\r\n    _map = {\r\n    0 : \"includeResources\",\r\n    1 : \"includeDebugInfo\",    \r\n    2 : \"includeImportAddressTable\",\r\n    }\r\n\r\nclass SpcSerializedObject(asn1crypto.core.Sequence):\r\n    _fields = [\r\n        (\"classId\", asn1crypto.core.OctetString),\r\n        (\"serializedData\", asn1crypto.core.OctetString),\r\n    ]\r\n\r\nclass SpcString(asn1crypto.core.Choice):\r\n    _alternatives = [\r\n        (\"unicode\", asn1crypto.core.BMPString, {\"implicit\": 0}),\r\n        (\"ascii\", asn1crypto.core.IA5String, {\"implicit\": 1}),\r\n    ]\r\n\r\nclass SpcLink(asn1crypto.core.Choice):\r\n    _alternatives = [\r\n        (\"url\", asn1crypto.core.IA5String, {\"implicit\": 0}),\r\n        (\"moniker\", SpcSerializedObject, {\"implicit\": 1}),\r\n        (\"file\", SpcString, {\"explicit\": 2})\r\n    ]\r\n\r\nclass SpcPeImageData(asn1crypto.core.Sequence):\r\n    _fields = [\r\n        (\"flags\",SpcPeImageFlags,{\"default\":\"includeResources\"}),\r\n        (\"file\",SpcLink,{\"explicit\": 0})\r\n    ]\r\n\r\n\r\nclass CoreTests(unittest.TestCase):\r\n    def test_what_problem(self):\r\n        bytes_piece = b\"\\x30\\x09\\x03\\x01\\x00\\xA0\\x04\\xA2\\x02\\x80\\x00\"\r\n        asn_piece = SpcPeImageData.load(bytes_piece, strict=True)\r\n        self.assertEqual(bytes_piece[2:5], \r\n            asn_piece['flags'].dump())\r\n        self.assertEqual(bytes_piece[5:11], \r\n            asn_piece['file'].dump())\r\n ```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/96", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/96/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/96/events", "html_url": "https://github.com/wbond/asn1crypto/issues/96", "id": 325313349, "node_id": "MDU6SXNzdWUzMjUzMTMzNDk=", "number": 96, "title": "Stuck on building an extension authority information access URI", "user": {"login": "ftbarata", "id": 20630844, "node_id": "MDQ6VXNlcjIwNjMwODQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/20630844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftbarata", "html_url": "https://github.com/ftbarata", "followers_url": "https://api.github.com/users/ftbarata/followers", "following_url": "https://api.github.com/users/ftbarata/following{/other_user}", "gists_url": "https://api.github.com/users/ftbarata/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftbarata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftbarata/subscriptions", "organizations_url": "https://api.github.com/users/ftbarata/orgs", "repos_url": "https://api.github.com/users/ftbarata/repos", "events_url": "https://api.github.com/users/ftbarata/events{/privacy}", "received_events_url": "https://api.github.com/users/ftbarata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-05-22T14:13:21Z", "updated_at": "2018-06-27T17:39:14Z", "closed_at": "2018-05-24T11:11:33Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "Hello, I'm stuck on trying to build an extension:\r\n\r\n`authority_information_access = Extension({'extn_id': ExtensionId('1.3.6.1.5.5.7.1.1'),\r\n'critical': False,\r\n'extn_value': {'access_method': AccessMethod('1.3.6.1.5.5.7.48.5'), 'access_location': GeneralName(URI('http://test.com'))}\r\n})`\r\n\r\nI get:\r\n\r\n`.virtualenv/lib/python3.5/site-packages/asn1crypto/core.py\", line 1100, in __init__\r\n    if name not in self._name_map:\r\nTypeError: unhashable type: 'URI'\r\n    while constructing asn1crypto.x509.GeneralName`\r\n\r\nI tried many ways, like\r\n`uri = URI()\r\nuri.set(value='http://test.com')\r\nGeneralName(uri)\r\n`\r\nBut no success. Don't know what else to try to make it works\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/95", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/95/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/95/events", "html_url": "https://github.com/wbond/asn1crypto/issues/95", "id": 324437526, "node_id": "MDU6SXNzdWUzMjQ0Mzc1MjY=", "number": 95, "title": "Convert from asn1crypto.x509.Certificate to PEM, DER, CER", "user": {"login": "ftbarata", "id": 20630844, "node_id": "MDQ6VXNlcjIwNjMwODQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/20630844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftbarata", "html_url": "https://github.com/ftbarata", "followers_url": "https://api.github.com/users/ftbarata/followers", "following_url": "https://api.github.com/users/ftbarata/following{/other_user}", "gists_url": "https://api.github.com/users/ftbarata/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftbarata/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftbarata/subscriptions", "organizations_url": "https://api.github.com/users/ftbarata/orgs", "repos_url": "https://api.github.com/users/ftbarata/repos", "events_url": "https://api.github.com/users/ftbarata/events{/privacy}", "received_events_url": "https://api.github.com/users/ftbarata/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-18T14:39:16Z", "updated_at": "2018-05-18T16:40:39Z", "closed_at": "2018-05-18T15:13:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am using this function:\r\nhttps://github.com/danni/python-pkcs11/blob/master/tests/test_x509.py#L166\r\n\r\nAnd the result is an asn1crypto.x509.Certificate instance. How to convert it to PEM, DER, CER.... formats?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/93", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/93/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/93/events", "html_url": "https://github.com/wbond/asn1crypto/issues/93", "id": 319566503, "node_id": "MDU6SXNzdWUzMTk1NjY1MDM=", "number": 93, "title": "Have not_valid_after and not_valid_before fields on x509.Certificate", "user": {"login": "reox", "id": 431045, "node_id": "MDQ6VXNlcjQzMTA0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/431045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reox", "html_url": "https://github.com/reox", "followers_url": "https://api.github.com/users/reox/followers", "following_url": "https://api.github.com/users/reox/following{/other_user}", "gists_url": "https://api.github.com/users/reox/gists{/gist_id}", "starred_url": "https://api.github.com/users/reox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reox/subscriptions", "organizations_url": "https://api.github.com/users/reox/orgs", "repos_url": "https://api.github.com/users/reox/repos", "events_url": "https://api.github.com/users/reox/events{/privacy}", "received_events_url": "https://api.github.com/users/reox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-02T14:04:43Z", "updated_at": "2018-06-30T21:45:38Z", "closed_at": "2018-06-30T21:45:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We recently switched at androguard from cryptography to asn1crypto.\r\nIt looks like that the Certificate class are quite compatbile but it bugs me, that you can not easily get the validity of the certificate.\r\nIn cryptography's implementation, you have the fields `not_valid_after` and `not_valid_before` which return a datetime.\r\nI learned you can do something like this:\r\n```\r\nnot_valid_before = x509_cert['tbs_certificate']['validity']['not_before'].native\r\nnot_valid_after = x509_cert['tbs_certificate']['validity']['not_after'].native\r\n```\r\n\r\nIt would be nice to have the same functionality as in cryptography library!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/86", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/86/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/86/events", "html_url": "https://github.com/wbond/asn1crypto/issues/86", "id": 311472409, "node_id": "MDU6SXNzdWUzMTE0NzI0MDk=", "number": 86, "title": "Problems parsing GeneralizedTime if one decimal is used", "user": {"login": "erny", "id": 77168, "node_id": "MDQ6VXNlcjc3MTY4", "avatar_url": "https://avatars2.githubusercontent.com/u/77168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erny", "html_url": "https://github.com/erny", "followers_url": "https://api.github.com/users/erny/followers", "following_url": "https://api.github.com/users/erny/following{/other_user}", "gists_url": "https://api.github.com/users/erny/gists{/gist_id}", "starred_url": "https://api.github.com/users/erny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erny/subscriptions", "organizations_url": "https://api.github.com/users/erny/orgs", "repos_url": "https://api.github.com/users/erny/repos", "events_url": "https://api.github.com/users/erny/events{/privacy}", "received_events_url": "https://api.github.com/users/erny/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220107140, "node_id": "MDU6TGFiZWwyMjAxMDcxNDA=", "url": "https://api.github.com/repos/wbond/asn1crypto/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-05T04:54:22Z", "updated_at": "2019-08-10T11:03:45Z", "closed_at": "2019-08-10T11:03:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I receive de following string: \\0x181520180405062426.0+0200\r\nbut I get error: TypeError: coercing to Unicode: need string or buffer, datetime.timedelta found\r\n\r\nThis can be fixes changing GeneralizedTime in core.py, function _date_by_len (around line 4725):\r\n        elif strlen == 18:\r\nto:\r\n        elif strlen > 14:\r\n\r\nAll tests still pass.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/84", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/84/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/84/events", "html_url": "https://github.com/wbond/asn1crypto/issues/84", "id": 309078487, "node_id": "MDU6SXNzdWUzMDkwNzg0ODc=", "number": 84, "title": "rt.keys()", "user": {"login": "ellemac123", "id": 11759080, "node_id": "MDQ6VXNlcjExNzU5MDgw", "avatar_url": "https://avatars3.githubusercontent.com/u/11759080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ellemac123", "html_url": "https://github.com/ellemac123", "followers_url": "https://api.github.com/users/ellemac123/followers", "following_url": "https://api.github.com/users/ellemac123/following{/other_user}", "gists_url": "https://api.github.com/users/ellemac123/gists{/gist_id}", "starred_url": "https://api.github.com/users/ellemac123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ellemac123/subscriptions", "organizations_url": "https://api.github.com/users/ellemac123/orgs", "repos_url": "https://api.github.com/users/ellemac123/repos", "events_url": "https://api.github.com/users/ellemac123/events{/privacy}", "received_events_url": "https://api.github.com/users/ellemac123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-27T18:15:43Z", "updated_at": "2018-03-27T18:15:50Z", "closed_at": "2018-03-27T18:15:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/83", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/83/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/83/events", "html_url": "https://github.com/wbond/asn1crypto/issues/83", "id": 299100011, "node_id": "MDU6SXNzdWUyOTkxMDAwMTE=", "number": 83, "title": "pypi tarball is missing tests", "user": {"login": "mgorny", "id": 110765, "node_id": "MDQ6VXNlcjExMDc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgorny", "html_url": "https://github.com/mgorny", "followers_url": "https://api.github.com/users/mgorny/followers", "following_url": "https://api.github.com/users/mgorny/following{/other_user}", "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions", "organizations_url": "https://api.github.com/users/mgorny/orgs", "repos_url": "https://api.github.com/users/mgorny/repos", "events_url": "https://api.github.com/users/mgorny/events{/privacy}", "received_events_url": "https://api.github.com/users/mgorny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-21T19:36:18Z", "updated_at": "2018-02-25T02:51:51Z", "closed_at": "2018-02-25T02:50:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The tarball uploaded to pypi doesn't contain the `tests` directory. Could you please fix it to contain all files necessary to test the package?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/80", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/80/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/80/events", "html_url": "https://github.com/wbond/asn1crypto/issues/80", "id": 284478168, "node_id": "MDU6SXNzdWUyODQ0NzgxNjg=", "number": 80, "title": "[BUG] ObjectIdentifier does not return correct value for native", "user": {"login": "aalba6675", "id": 5254809, "node_id": "MDQ6VXNlcjUyNTQ4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5254809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aalba6675", "html_url": "https://github.com/aalba6675", "followers_url": "https://api.github.com/users/aalba6675/followers", "following_url": "https://api.github.com/users/aalba6675/following{/other_user}", "gists_url": "https://api.github.com/users/aalba6675/gists{/gist_id}", "starred_url": "https://api.github.com/users/aalba6675/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aalba6675/subscriptions", "organizations_url": "https://api.github.com/users/aalba6675/orgs", "repos_url": "https://api.github.com/users/aalba6675/repos", "events_url": "https://api.github.com/users/aalba6675/events{/privacy}", "received_events_url": "https://api.github.com/users/aalba6675/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-26T01:29:19Z", "updated_at": "2018-01-27T02:30:19Z", "closed_at": "2018-01-27T02:30:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Documentation: \"ObjectIdentifier instances are converted to a unicode string in a dotted-integer format when .native is accessed.\"\r\n\r\nExample:\r\n```\r\n# Will print: \"value_name\"\r\nprint(MyType('1.8.2.1.23').native)\r\n```\r\nExpecting dotted-integer so the answer should be \"1.8.2.1.23\", no?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/78", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/78/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/78/events", "html_url": "https://github.com/wbond/asn1crypto/issues/78", "id": 276191960, "node_id": "MDU6SXNzdWUyNzYxOTE5NjA=", "number": 78, "title": "Attempting to dump certificate to PEM string", "user": {"login": "dmwesterhoff", "id": 4187196, "node_id": "MDQ6VXNlcjQxODcxOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4187196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmwesterhoff", "html_url": "https://github.com/dmwesterhoff", "followers_url": "https://api.github.com/users/dmwesterhoff/followers", "following_url": "https://api.github.com/users/dmwesterhoff/following{/other_user}", "gists_url": "https://api.github.com/users/dmwesterhoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmwesterhoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmwesterhoff/subscriptions", "organizations_url": "https://api.github.com/users/dmwesterhoff/orgs", "repos_url": "https://api.github.com/users/dmwesterhoff/repos", "events_url": "https://api.github.com/users/dmwesterhoff/events{/privacy}", "received_events_url": "https://api.github.com/users/dmwesterhoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-22T20:12:21Z", "updated_at": "2017-11-28T16:15:28Z", "closed_at": "2017-11-28T16:15:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, maybe I am utilizing the API incorrectly but after creating a certificate with certbuilder I am trying to dump that certificate as a PEM encoded string.\r\n\r\n`>>> der_bytes = root_ca_certificate.dump()`\r\n`>>> pem_bytes = pem.armor('CERTIFICATE', der_bytes)`\r\n\r\nAnd I'm receiving:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/asn1crypto/pem.py\", line 82, in armor\r\n    type_name(type_name)\r\nTypeError: 'str' object is not callable\r\n```\r\n\r\nAny advice on how to proceed?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/76", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/76/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/76/events", "html_url": "https://github.com/wbond/asn1crypto/issues/76", "id": 274780567, "node_id": "MDU6SXNzdWUyNzQ3ODA1Njc=", "number": 76, "title": "can we validate PDF signatures using this ?", "user": {"login": "sandys", "id": 76883, "node_id": "MDQ6VXNlcjc2ODgz", "avatar_url": "https://avatars2.githubusercontent.com/u/76883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sandys", "html_url": "https://github.com/sandys", "followers_url": "https://api.github.com/users/sandys/followers", "following_url": "https://api.github.com/users/sandys/following{/other_user}", "gists_url": "https://api.github.com/users/sandys/gists{/gist_id}", "starred_url": "https://api.github.com/users/sandys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sandys/subscriptions", "organizations_url": "https://api.github.com/users/sandys/orgs", "repos_url": "https://api.github.com/users/sandys/repos", "events_url": "https://api.github.com/users/sandys/events{/privacy}", "received_events_url": "https://api.github.com/users/sandys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-17T07:54:23Z", "updated_at": "2017-11-20T12:11:33Z", "closed_at": "2017-11-20T12:11:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\nsorry if this is the wrong place to ask, but have been looking for a python utility to check and validate signed PDF.\r\n\r\nYou have a pdf library, but no testcases for that - so am wondering if I got the meaning wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/74", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/74/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/74/events", "html_url": "https://github.com/wbond/asn1crypto/issues/74", "id": 273858008, "node_id": "MDU6SXNzdWUyNzM4NTgwMDg=", "number": 74, "title": "Issue Loading cms.SignedData", "user": {"login": "aaronst", "id": 7453602, "node_id": "MDQ6VXNlcjc0NTM2MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7453602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronst", "html_url": "https://github.com/aaronst", "followers_url": "https://api.github.com/users/aaronst/followers", "following_url": "https://api.github.com/users/aaronst/following{/other_user}", "gists_url": "https://api.github.com/users/aaronst/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronst/subscriptions", "organizations_url": "https://api.github.com/users/aaronst/orgs", "repos_url": "https://api.github.com/users/aaronst/repos", "events_url": "https://api.github.com/users/aaronst/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-14T16:33:14Z", "updated_at": "2017-11-20T12:15:47Z", "closed_at": "2017-11-20T12:15:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having troubles trying to load a `cms.SignedData()`.\r\n\r\n```python\r\n#!/usr/bin/env python2\r\n\r\n\r\n\"\"\"Test asn1crypto's cms module with a Signed Data blob.\"\"\"\r\n\r\n\r\nfrom asn1crypto.cms import SignedData\r\n\r\n\r\nif __name__ == '__main__':\r\n    F = open('test.cms', 'rb')\r\n\r\n    SIGNED_DATA = SignedData.load(F.read())\r\n\r\n    print '# of certs: {}'.format(len(SIGNED_DATA['certificates']))\r\n```\r\n\r\n[Here](https://nofile.io/f/ctDosgg1Nf4/test.cms) is a signed data blob that I'm using to test.  You can verify that it is in fact a signed data blob with the following `openssl` command:\r\n\r\n```\r\nopenssl asn1parse -i -in test.cms -inform DER\r\n```\r\n\r\nUsing that blob with the script above results in the following:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./cms_test.py\", line 15, in <module>\r\n    print '# of certs: {}'.format(len(SIGNED_DATA['certificates']))\r\n  File \"/usr/local/lib/python2.7/site-packages/asn1crypto/core.py\", line 3248, in __getitem__\r\n    self._parse_children()\r\n  File \"/usr/local/lib/python2.7/site-packages/asn1crypto/core.py\", line 3706, in _parse_children\r\n    raise e\r\nValueError: Field \"encap_content_info\" is missing from structure\r\n    while parsing asn1crypto.cms.SignedData\r\n```\r\n\r\nSo, either I'm mistaken and the file I'm using to test isn't a signed data blob, or there is a bug in this module.  Any help is much appreciated.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/73", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/73/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/73/events", "html_url": "https://github.com/wbond/asn1crypto/issues/73", "id": 261173751, "node_id": "MDU6SXNzdWUyNjExNzM3NTE=", "number": 73, "title": "Assumptions about self signed state", "user": {"login": "mttcpr", "id": 17837811, "node_id": "MDQ6VXNlcjE3ODM3ODEx", "avatar_url": "https://avatars2.githubusercontent.com/u/17837811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mttcpr", "html_url": "https://github.com/mttcpr", "followers_url": "https://api.github.com/users/mttcpr/followers", "following_url": "https://api.github.com/users/mttcpr/following{/other_user}", "gists_url": "https://api.github.com/users/mttcpr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mttcpr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mttcpr/subscriptions", "organizations_url": "https://api.github.com/users/mttcpr/orgs", "repos_url": "https://api.github.com/users/mttcpr/repos", "events_url": "https://api.github.com/users/mttcpr/events{/privacy}", "received_events_url": "https://api.github.com/users/mttcpr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-28T02:24:53Z", "updated_at": "2017-11-20T12:31:42Z", "closed_at": "2017-11-20T12:31:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed you are currently using key ids to make assumptions about self signed state in asn1crypto/x509. \r\n\r\nhttps://github.com/wbond/asn1crypto/blob/16f4ce0c4a809486621ee8333ed5250d2e509818/asn1crypto/x509.py#L2518\r\n\r\nI would consider replacing that 'yes' with 'maybe' because (1) key IDs are not always correct, and, (2) users would likely assume that self_signed == True means the signature was verified. It'd be safer to bite the CPU bullet and check the signature. \r\n\r\nNote that this suggestion is loosely coupled to https://github.com/wbond/oscrypto/issues/21\r\n\r\nIf you change those yeses to maybes without broadening the oscrypto SignatureError exception cases or otherwise handling those mismatch errors, this code in CertValidator will emit exceptions much more regularly:\r\n\r\n```\r\n    # In the case of \"maybe\", we have to check the signature\r\n    signature_algo = cert['signature_algorithm'].signature_algo\r\n    hash_algo = cert['signature_algorithm'].hash_algo\r\n\r\n    if signature_algo == 'rsassa_pkcs1v15':\r\n        verify_func = asymmetric.rsa_pkcs1v15_verify\r\n    elif signature_algo == 'dsa':\r\n        verify_func = asymmetric.dsa_verify\r\n    elif signature_algo == 'ecdsa':\r\n        verify_func = asymmetric.ecdsa_verify\r\n    else:\r\n        raise PathValidationError(pretty_message(\r\n            '''\r\n            Unable to verify the signature of the certificate since it uses\r\n            the unsupported algorithm %s\r\n            ''',\r\n            signature_algo\r\n        ))\r\n\r\n    try:\r\n        key_object = asymmetric.load_certificate(cert)\r\n        verify_func(key_object, cert['signature_value'].native, cert['tbs_certificate'].dump(), hash_algo)\r\n        return True\r\n\r\n    except (oscrypto.errors.SignatureError):\r\n        return False\r\n\r\n```\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/71", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/71/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/71/events", "html_url": "https://github.com/wbond/asn1crypto/issues/71", "id": 255706416, "node_id": "MDU6SXNzdWUyNTU3MDY0MTY=", "number": 71, "title": "Creating certs-only SignedData", "user": {"login": "mttcpr", "id": 17837811, "node_id": "MDQ6VXNlcjE3ODM3ODEx", "avatar_url": "https://avatars2.githubusercontent.com/u/17837811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mttcpr", "html_url": "https://github.com/mttcpr", "followers_url": "https://api.github.com/users/mttcpr/followers", "following_url": "https://api.github.com/users/mttcpr/following{/other_user}", "gists_url": "https://api.github.com/users/mttcpr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mttcpr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mttcpr/subscriptions", "organizations_url": "https://api.github.com/users/mttcpr/orgs", "repos_url": "https://api.github.com/users/mttcpr/repos", "events_url": "https://api.github.com/users/mttcpr/events{/privacy}", "received_events_url": "https://api.github.com/users/mttcpr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-06T18:50:25Z", "updated_at": "2017-09-14T19:12:27Z", "closed_at": "2017-09-14T19:12:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Trying to create a certs-only p7c, but all required fields in SignedData are not encoded, and it appears there is no way to add empty digest algorithms or signer info sets? In the absence of content, I believe both of these should be encoded as an empty SET.\r\n\r\n      SignedData ::= SEQUENCE {\r\n        version CMSVersion,\r\n        digestAlgorithms DigestAlgorithmIdentifiers,\r\n        encapContentInfo EncapsulatedContentInfo,\r\n        certificates [0] IMPLICIT CertificateSet OPTIONAL,\r\n        crls [1] IMPLICIT RevocationInfoChoices OPTIONAL,\r\n        signerInfos SignerInfos }\r\n\r\ni.e. using this code\r\n\r\n```\r\n    signed_data = cms.SignedData({\r\n        'version': 'v1',\r\n        'encap_content_info': {\r\n            'content_type': 'data',\r\n        },\r\n        'certificates': cs,\r\n    })\r\n```\r\n\r\nthe two \"SET {}\" fields below are missing in the encoded output:\r\n```\r\n\r\n    SEQUENCE {\r\n      INTEGER 1\r\n      SET {}\r\n      SEQUENCE {\r\n        OBJECT IDENTIFIER data (1 2 840 113549 1 7 1)\r\n        }\r\n      [0] {\r\n            --{ cert data here }--\r\n        }\r\n      SET {}\r\n      }\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/69", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/69/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/69/events", "html_url": "https://github.com/wbond/asn1crypto/issues/69", "id": 252220973, "node_id": "MDU6SXNzdWUyNTIyMjA5NzM=", "number": 69, "title": "Got errors while parsing", "user": {"login": "huytn", "id": 5128892, "node_id": "MDQ6VXNlcjUxMjg4OTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5128892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huytn", "html_url": "https://github.com/huytn", "followers_url": "https://api.github.com/users/huytn/followers", "following_url": "https://api.github.com/users/huytn/following{/other_user}", "gists_url": "https://api.github.com/users/huytn/gists{/gist_id}", "starred_url": "https://api.github.com/users/huytn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huytn/subscriptions", "organizations_url": "https://api.github.com/users/huytn/orgs", "repos_url": "https://api.github.com/users/huytn/repos", "events_url": "https://api.github.com/users/huytn/events{/privacy}", "received_events_url": "https://api.github.com/users/huytn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-23T09:40:34Z", "updated_at": "2017-08-28T03:08:00Z", "closed_at": "2017-08-28T03:08:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my code:\r\n\r\n```\r\n# -*- coding: utf-8 -*-\r\n\r\n'''\r\nCreated on Aug 17, 2017\r\n\r\n@author: huytn\r\n'''\r\nfrom asn1crypto import pem, x509\r\nfrom certvalidator import CertificateValidator, ValidationContext, validate\r\n\r\nif __name__ == '__main__':\r\n    trust_roots = []\r\n    with open('ca4.crt', 'rb') as f:\r\n        ders_bytes = f.read()\r\n        if pem.detect(ders_bytes):\r\n            for _, _, der_bytes in pem.unarmor(ders_bytes, multiple=True):\r\n                trust_roots.append(der_bytes)\r\n        else:\r\n            trust_roots.append(ders_bytes)\r\n        f.close()\r\n    \r\n    with open('cert.pem', 'rb') as f:\r\n        end_entity_cert = f.read()\r\n        if pem.detect(end_entity_cert):\r\n            _, _, end_entity_cert = pem.unarmor(end_entity_cert)\r\n        f.close()\r\n    \r\n    context = ValidationContext(trust_roots=trust_roots, allow_fetching=True, ocsp_fetch_params={'hash_algo':u'sha256'}, revocation_mode='require')\r\n    validator = CertificateValidator(end_entity_cert, validation_context=context)\r\n    valid_path = validator.validate_usage(validator._certificate.key_usage_value.native, set(validator._certificate.extended_key_usage_value.native))\r\n    result = validate.validate_path(context, valid_path)\r\n```\r\n\r\nca4.crt file includes root and CA, below is output\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test_ocsp.py\", line 32, in <module>\r\n    valid_path = validator.validate_usage(validator._certificate.key_usage_value.native, set(validator._certificate.extended_key_usage_value.native))\r\n  File \"/Users/huytn/.pyenv/versions/2.7.13/lib/python2.7/site-packages/certvalidator/__init__.py\", line 193, in validate_usage\r\n    self._validate_path()\r\n  File \"/Users/huytn/.pyenv/versions/2.7.13/lib/python2.7/site-packages/certvalidator/__init__.py\", line 121, in _validate_path\r\n    validate_path(self._context, candidate_path)\r\n  File \"/Users/huytn/.pyenv/versions/2.7.13/lib/python2.7/site-packages/certvalidator/validate.py\", line 50, in validate_path\r\n    return _validate_path(validation_context, path)\r\n  File \"/Users/huytn/.pyenv/versions/2.7.13/lib/python2.7/site-packages/certvalidator/validate.py\", line 386, in _validate_path\r\n    end_entity_name_override=end_entity_name_override\r\n  File \"/Users/huytn/.pyenv/versions/2.7.13/lib/python2.7/site-packages/certvalidator/validate.py\", line 891, in verify_ocsp_response\r\n    ocsp_responses = validation_context.retrieve_ocsps(cert, issuer)\r\n  File \"/Users/huytn/.pyenv/versions/2.7.13/lib/python2.7/site-packages/certvalidator/context.py\", line 507, in retrieve_ocsps\r\n    self._extract_ocsp_certs(ocsp_response)\r\n  File \"/Users/huytn/.pyenv/versions/2.7.13/lib/python2.7/site-packages/certvalidator/context.py\", line 534, in _extract_ocsp_certs\r\n    if self.certificate_registry.add_other_cert(other_cert):\r\n  File \"/Users/huytn/.pyenv/versions/2.7.13/lib/python2.7/site-packages/certvalidator/registry.py\", line 199, in add_other_cert\r\n    if cert.key_identifier:\r\n  File \"/Users/huytn/.pyenv/versions/2.7.13/lib/python2.7/site-packages/asn1crypto/x509.py\", line 2250, in key_identifier\r\n    if not self.key_identifier_value:\r\n  File \"/Users/huytn/.pyenv/versions/2.7.13/lib/python2.7/site-packages/asn1crypto/x509.py\", line 1931, in key_identifier_value\r\n    self._set_extensions()\r\n  File \"/Users/huytn/.pyenv/versions/2.7.13/lib/python2.7/site-packages/asn1crypto/x509.py\", line 1885, in _set_extensions\r\n    setattr(self, attribute_name, extension['extn_value'].parsed)\r\n  File \"/Users/huytn/.pyenv/versions/2.7.13/lib/python2.7/site-packages/asn1crypto/core.py\", line 3205, in __getitem__\r\n    raise e\r\nValueError: Insufficient data - 2 bytes requested but only 0 available\r\n    while parsing asn1crypto.core.ParsableOctetString\r\n    while parsing asn1crypto.x509.Extension\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/68", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/68/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/68/events", "html_url": "https://github.com/wbond/asn1crypto/issues/68", "id": 251264803, "node_id": "MDU6SXNzdWUyNTEyNjQ4MDM=", "number": 68, "title": "cryptography import asn1crypto(asn1crypto>=0.21.0)\uff0cbut asn1crypto has a bug fixed and has not new release ", "user": {"login": "anhkgg", "id": 9443285, "node_id": "MDQ6VXNlcjk0NDMyODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9443285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anhkgg", "html_url": "https://github.com/anhkgg", "followers_url": "https://api.github.com/users/anhkgg/followers", "following_url": "https://api.github.com/users/anhkgg/following{/other_user}", "gists_url": "https://api.github.com/users/anhkgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/anhkgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anhkgg/subscriptions", "organizations_url": "https://api.github.com/users/anhkgg/orgs", "repos_url": "https://api.github.com/users/anhkgg/repos", "events_url": "https://api.github.com/users/anhkgg/events{/privacy}", "received_events_url": "https://api.github.com/users/anhkgg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-08-18T14:36:19Z", "updated_at": "2017-09-25T17:50:41Z", "closed_at": "2017-09-25T17:50:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "in file `cryptography/src/cryptography/x509/extensions.py`, import asn1crypto\r\n```\r\nfrom asn1crypto.keys import PublicKeyInfo\r\n```\r\ncryptography limit asn1crypto>=0.21.0\uff0cbut the newest release version has bug fixed in\uff1a\r\n[https://github.com/wbond/asn1crypto/commit/64ab19707acb644772a9ac3d94479fbe79b49365](https://github.com/wbond/asn1crypto/commit/64ab19707acb644772a9ac3d94479fbe79b49365).\r\n\r\nasn1crypto has not release the fixed commit.\r\n\r\nso. when i use cryptography on Python 2, the unicode string here may raise a UnicodeDecodeError as it\r\ntries to join a bytestring path to the unicode name \"crypto\"\r\n\r\nPlease  release a new version.\r\n\r\nyou can see here: https://github.com/pyca/cryptography/issues/3868#issuecomment-323349109\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/67", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/67/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/67/events", "html_url": "https://github.com/wbond/asn1crypto/issues/67", "id": 250283365, "node_id": "MDU6SXNzdWUyNTAyODMzNjU=", "number": 67, "title": "Various exception messages have em-dash which can lead to odd errors", "user": {"login": "philmayers", "id": 739238, "node_id": "MDQ6VXNlcjczOTIzOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/739238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philmayers", "html_url": "https://github.com/philmayers", "followers_url": "https://api.github.com/users/philmayers/followers", "following_url": "https://api.github.com/users/philmayers/following{/other_user}", "gists_url": "https://api.github.com/users/philmayers/gists{/gist_id}", "starred_url": "https://api.github.com/users/philmayers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philmayers/subscriptions", "organizations_url": "https://api.github.com/users/philmayers/orgs", "repos_url": "https://api.github.com/users/philmayers/repos", "events_url": "https://api.github.com/users/philmayers/events{/privacy}", "received_events_url": "https://api.github.com/users/philmayers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-15T10:55:53Z", "updated_at": "2017-09-14T18:08:42Z", "closed_at": "2017-09-14T18:08:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was getting an error:\r\n\r\n```\r\n*** UnicodeEncodeError: 'ascii' codec can't encode character u'\\u2013' in position 108: ordinal not in range(128)\r\n```\r\n...which turned out to be from asn1crypto/core.py line 3099, trying to re-raise the message:\r\n\r\n```\r\nCan not set a native python value to responder_id, which has the choice type of asn1crypto.ocsp.ResponderId \u2013 value must be an instance of Asn1Value\r\n```\r\nI'm aware that python and unicode at the terminal has a somewhat polarising effect on discussions, but can I suggest that the em-dash in the various exceptions in core.py might be safely replaced with ascii hyphen?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/66", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/66/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/66/events", "html_url": "https://github.com/wbond/asn1crypto/issues/66", "id": 249181726, "node_id": "MDU6SXNzdWUyNDkxODE3MjY=", "number": 66, "title": "LDAP or HTTPS can be used for OCSP", "user": {"login": "doowon", "id": 968143, "node_id": "MDQ6VXNlcjk2ODE0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/968143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doowon", "html_url": "https://github.com/doowon", "followers_url": "https://api.github.com/users/doowon/followers", "following_url": "https://api.github.com/users/doowon/following{/other_user}", "gists_url": "https://api.github.com/users/doowon/gists{/gist_id}", "starred_url": "https://api.github.com/users/doowon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doowon/subscriptions", "organizations_url": "https://api.github.com/users/doowon/orgs", "repos_url": "https://api.github.com/users/doowon/repos", "events_url": "https://api.github.com/users/doowon/events{/privacy}", "received_events_url": "https://api.github.com/users/doowon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-09T22:34:38Z", "updated_at": "2017-09-14T18:05:13Z", "closed_at": "2017-09-14T18:05:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is a rare case but LDAP and HTTPS are used for OCSP. In the code, only http is considered to be used for OCSP.\r\n\r\nHere is one of the examples.\r\n\r\n```\r\nAuthority Information Access:\r\n                OCSP - URI:http://pki.aloaha.com/CertEnroll/pki.aloaha.com_aloaha.crt\r\n                OCSP - URI:ldap://pki.aloaha.com/CN=aloaha,CN=AIA,CN=Public%20Key%20Services,CN=Services,CN=Configuration,DC=aloaha,DC=com?cACertificate?base?objectClass=certificationAuthority\r\n```\r\n\r\nAnother example for https\r\n\r\n`https://ocsp.verisign.com`\r\n\r\nhttps://github.com/wbond/asn1crypto/blob/2068a8abfd5e34210f5dc521cbdec672c87c95bd/asn1crypto/x509.py#L2380", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/63", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/63/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/63/events", "html_url": "https://github.com/wbond/asn1crypto/issues/63", "id": 248058381, "node_id": "MDU6SXNzdWUyNDgwNTgzODE=", "number": 63, "title": "Cannot parse nested structure with application tag", "user": {"login": "tiran", "id": 444071, "node_id": "MDQ6VXNlcjQ0NDA3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/444071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiran", "html_url": "https://github.com/tiran", "followers_url": "https://api.github.com/users/tiran/followers", "following_url": "https://api.github.com/users/tiran/following{/other_user}", "gists_url": "https://api.github.com/users/tiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiran/subscriptions", "organizations_url": "https://api.github.com/users/tiran/orgs", "repos_url": "https://api.github.com/users/tiran/repos", "events_url": "https://api.github.com/users/tiran/events{/privacy}", "received_events_url": "https://api.github.com/users/tiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-04T16:42:26Z", "updated_at": "2017-09-19T16:47:46Z", "closed_at": "2017-09-15T11:42:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Rev d7cf731ff4fd8c7abd859bb0598b11fd7ef7d0d5 fixed simple sequence with application tag. Thanks a lot for the quick fix! asn1crypto still cannot correctly parse ASN.1 with nested explicit application tags, e.g. Kerberos AP-REQ. AP-REQ is sequence with explicit application tag 14 that contains another sequence with explicit application tag 1. In Kerberos, all tags are explicit. A tests is available at https://github.com/tiran/kkdcpasn1/blob/asn1crypto/pykkdcpasn1.py\r\n\r\n## Code\r\n\r\n```\r\nclass Ticket(core.Sequence):\r\n    \"\"\"Ticket for AP-REQ and SEQUENCE OF Ticket\r\n\r\n    Ticket ::= [APPLICATION 1] SEQUENCE {\r\n        tkt-vno      [0] INTEGER,\r\n        realm        [1] Realm,\r\n        sname        [2] PrincipalName,\r\n        enc-part     [3] EncryptedData\r\n    }\r\n    \"\"\"\r\n    explicit_class = APPLICATION\r\n    explicit_tag = 1\r\n    tag_type = TAG\r\n\r\n    _fields = [\r\n        ('tkt-vno', core.Integer, {'tag_type': TAG, 'tag': 0}),\r\n        ('realm', Realm, {'tag_type': TAG, 'tag': 1}),\r\n        ('sname', PrincipalName, {'tag_type': TAG, 'tag': 2}),\r\n        ('enc-part', EncryptedData, {'tag_type': TAG, 'tag': 3}),\r\n    ]\r\n\r\nclass AP_REQ(core.Sequence):\r\n    \"\"\"AP-REQ -- Application request\r\n\r\n    Client/server authentication exchange (CS)\r\n\r\n    AP-REQ ::= [APPLICATION 14] SEQUENCE {\r\n        pvno         [0] INTEGER (5),\r\n        msg-type     [1] INTEGER (14),\r\n        ap-options   [2] APOptions,\r\n        ticket       [3] Ticket,\r\n        authenticator        [4] EncryptedData\r\n    }\r\n    \"\"\"\r\n    explicit_class = APPLICATION\r\n    explicit_tag = 14\r\n    tag_type = TAG\r\n\r\n    _fields = [\r\n        ('pvno', core.Integer, {'tag_type': TAG, 'tag': 0, 'default': 5}),\r\n        ('msg-type', core.Integer, {'tag_type': TAG, 'tag': 1, 'default': 14}),\r\n        ('ap-options', APOptions, {'tag_type': TAG, 'tag': 2}),\r\n        ('ticket', Ticket, {'tag_type': TAG, 'tag': 3}),\r\n        ('authenticator', EncryptedData, {'tag_type': TAG, 'tag': 4}),\r\n    ]\r\n```\r\n\r\n## traceback\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"pykkdcpasn1.py\", line 523, in <module>\r\n    test()\r\n  File \"pykkdcpasn1.py\", line 519, in test\r\n    pprint(apreq.native)\r\n  File \"/tmp/venv/lib64/python3.6/site-packages/asn1crypto/core.py\", line 3702, in native\r\n    self._parse_children(recurse=True)\r\n  File \"/tmp/venv/lib64/python3.6/site-packages/asn1crypto/core.py\", line 3646, in _parse_children\r\n    raise e\r\n  File \"/tmp/venv/lib64/python3.6/site-packages/asn1crypto/core.py\", line 3619, in _parse_children\r\n    child = _build(*child)\r\n  File \"/tmp/venv/lib64/python3.6/site-packages/asn1crypto/core.py\", line 4965, in _build\r\n    value = _build(*info, spec=spec, spec_params={'no_explicit': True})\r\n  File \"/tmp/venv/lib64/python3.6/site-packages/asn1crypto/core.py\", line 4994, in _build\r\n    CLASS_NUM_TO_NAME_MAP.get(class_, class_)\r\nValueError: Error parsing __main__.Ticket - class should have been universal, but application was found\r\n    while parsing __main__.AP_REQ\r\n```\r\n\r\n## ASN.1 payload\r\n\r\n```\r\n    0:d=0  hl=4 l= 510 cons: appl [ 14 ]       \r\n    4:d=1  hl=4 l= 506 cons:  SEQUENCE          \r\n    8:d=2  hl=2 l=   3 cons:   cont [ 0 ]        \r\n   10:d=3  hl=2 l=   1 prim:    INTEGER           :05\r\n   13:d=2  hl=2 l=   3 cons:   cont [ 1 ]        \r\n   15:d=3  hl=2 l=   1 prim:    INTEGER           :0E\r\n   18:d=2  hl=2 l=   7 cons:   cont [ 2 ]        \r\n   20:d=3  hl=2 l=   5 prim:    BIT STRING        \r\n   27:d=2  hl=4 l= 321 cons:   cont [ 3 ]        \r\n   31:d=3  hl=4 l= 317 cons:    appl [ 1 ]        \r\n   35:d=4  hl=4 l= 313 cons:     SEQUENCE          \r\n   39:d=5  hl=2 l=   3 cons:      cont [ 0 ]        \r\n   41:d=6  hl=2 l=   1 prim:       INTEGER           :05\r\n   44:d=5  hl=2 l=  15 cons:      cont [ 1 ]        \r\n   46:d=6  hl=2 l=  13 prim:       GENERALSTRING     \r\n   61:d=5  hl=2 l=  29 cons:      cont [ 2 ]        \r\n   63:d=6  hl=2 l=  27 cons:       SEQUENCE          \r\n   65:d=7  hl=2 l=   3 cons:        cont [ 0 ]        \r\n   67:d=8  hl=2 l=   1 prim:         INTEGER           :01\r\n   70:d=7  hl=2 l=  20 cons:        cont [ 1 ]        \r\n   72:d=8  hl=2 l=  18 cons:         SEQUENCE          \r\n   74:d=9  hl=2 l=   6 prim:          GENERALSTRING     \r\n   82:d=9  hl=2 l=   8 prim:          GENERALSTRING     \r\n   92:d=5  hl=4 l= 256 cons:      cont [ 3 ]        \r\n   96:d=6  hl=3 l= 253 cons:       SEQUENCE          \r\n   99:d=7  hl=2 l=   3 cons:        cont [ 0 ]        \r\n  101:d=8  hl=2 l=   1 prim:         INTEGER           :12\r\n  104:d=7  hl=2 l=   3 cons:        cont [ 1 ]        \r\n  106:d=8  hl=2 l=   1 prim:         INTEGER           :01\r\n  109:d=7  hl=3 l= 240 cons:        cont [ 2 ]        \r\n  112:d=8  hl=3 l= 237 prim:         OCTET STRING      [HEX DUMP]:ECC2A53967B412D791DFF3EA3D50F765DC7ED7C7E66912C836163F5BD0A07FC679E46D36C9B38A2273C877D233AD55FAB9F3D95637F8F1DC22117723E77537C92D909064DE10B26E86C9EFDCCF37CC16D20E75849D0CBD04A56E7F69D46C6D7DB9DDDC6ACBBE37D6CF49C6CC78C57228C0E903FDC08772B030DD22DC84B5D55C66E07279E9840A3EA68F1C27BA26305D1CD05D1E3A994A4246DB8E834948EFD3788409760994AF1A72F5CF1485C49C7646A3B72C460FD62F5C373C224ECE0859F4DDEF5B77BF75A9AB220524E00A35A357722F703A218C5FD1A717ED0392F19864BF0B52921B501906A8AF48C3\r\n  352:d=2  hl=3 l= 159 cons:   cont [ 4 ]        \r\n  355:d=3  hl=3 l= 156 cons:    SEQUENCE          \r\n  358:d=4  hl=2 l=   3 cons:     cont [ 0 ]        \r\n  360:d=5  hl=2 l=   1 prim:      INTEGER           :12\r\n  363:d=4  hl=3 l= 148 cons:     cont [ 2 ]        \r\n  366:d=5  hl=3 l= 145 prim:      OCTET STRING      [HEX DUMP]:EAD1DF7495E86BFEC932DBA81C9A764826080BB8C359AC3627C4B2CE530217042449E9CAA3DB66031FBE4B1CF942EC9EC773A2FB2485DD4D6E1271F9FF41D26C54CE9370D6E4573156CDC051944A563056BFA1D47CECEFF3CB4AC455FE33CD03E91BA9B4DC2243CE59EF0E1865AEBDBA76E30EB2AD8DEB71409B11F86CFA6C6E488270303C0451BD86A91C139018421A07\r\n```\r\n\r\nhttps://lapo.it/asn1js/#6E8201FE308201FAA003020105A10302010EA20703050000000000A38201416182013D30820139A003020105A10F1B0D465245454950412E4C4F43414CA21D301BA003020101A11430121B066B61646D696E1B086368616E67657077A38201003081FDA003020112A103020101A281F00481EDECC2A53967B412D791DFF3EA3D50F765DC7ED7C7E66912C836163F5BD0A07FC679E46D36C9B38A2273C877D233AD55FAB9F3D95637F8F1DC22117723E77537C92D909064DE10B26E86C9EFDCCF37CC16D20E75849D0CBD04A56E7F69D46C6D7DB9DDDC6ACBBE37D6CF49C6CC78C57228C0E903FDC08772B030DD22DC84B5D55C66E07279E9840A3EA68F1C27BA26305D1CD05D1E3A994A4246DB8E834948EFD3788409760994AF1A72F5CF1485C49C7646A3B72C460FD62F5C373C224ECE0859F4DDEF5B77BF75A9AB220524E00A35A357722F703A218C5FD1A717ED0392F19864BF0B52921B501906A8AF48C3A4819F30819CA003020112A28194048191EAD1DF7495E86BFEC932DBA81C9A764826080BB8C359AC3627C4B2CE530217042449E9CAA3DB66031FBE4B1CF942EC9EC773A2FB2485DD4D6E1271F9FF41D26C54CE9370D6E4573156CDC051944A563056BFA1D47CECEFF3CB4AC455FE33CD03E91BA9B4DC2243CE59EF0E1865AEBDBA76E30EB2AD8DEB71409B11F86CFA6C6E488270303C0451BD86A91C139018421A07", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/61", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/61/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/61/events", "html_url": "https://github.com/wbond/asn1crypto/issues/61", "id": 244951967, "node_id": "MDU6SXNzdWUyNDQ5NTE5Njc=", "number": 61, "title": "traceback!!", "user": {"login": "ljh19930603", "id": 25343841, "node_id": "MDQ6VXNlcjI1MzQzODQx", "avatar_url": "https://avatars0.githubusercontent.com/u/25343841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljh19930603", "html_url": "https://github.com/ljh19930603", "followers_url": "https://api.github.com/users/ljh19930603/followers", "following_url": "https://api.github.com/users/ljh19930603/following{/other_user}", "gists_url": "https://api.github.com/users/ljh19930603/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljh19930603/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljh19930603/subscriptions", "organizations_url": "https://api.github.com/users/ljh19930603/orgs", "repos_url": "https://api.github.com/users/ljh19930603/repos", "events_url": "https://api.github.com/users/ljh19930603/events{/privacy}", "received_events_url": "https://api.github.com/users/ljh19930603/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-24T01:34:00Z", "updated_at": "2017-08-10T13:35:32Z", "closed_at": "2017-08-10T13:35:32Z", "author_association": "NONE", "active_lock_reason": null, "body": ">>> from asn1crypto.keys import PublicKeyInfo\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Python27\\lib\\site-packages\\asn1crypto\\keys.py\", line 22, in <module>\r\n    from ._elliptic_curve import (\r\n  File \"C:\\Python27\\lib\\site-packages\\asn1crypto\\_elliptic_curve.py\", line 51, in <module>\r\n    from ._int import inverse_mod\r\n  File \"C:\\Python27\\lib\\site-packages\\asn1crypto\\_int.py\", line 56, in <module>\r\n    from ._perf._big_num_ctypes import libcrypto\r\n  File \"C:\\Python27\\lib\\site-packages\\asn1crypto\\_perf\\_big_num_ctypes.py\", line 31, in <module>\r\n    libcrypto_path = find_library('crypto')\r\n  File \"C:\\Python27\\lib\\ctypes\\util.py\", line 53, in find_library\r\n    fname = os.path.join(directory, name)\r\n  File \"C:\\Python27\\lib\\ntpath.py\", line 85, in join\r\n    result_path = result_path + p_path\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xd1 in position 1: ordinal not in range(128)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/60", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/60/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/60/events", "html_url": "https://github.com/wbond/asn1crypto/issues/60", "id": 238039689, "node_id": "MDU6SXNzdWUyMzgwMzk2ODk=", "number": 60, "title": "Handle TeletexString as iso-8859-1", "user": {"login": "EnTeQuAk", "id": 139033, "node_id": "MDQ6VXNlcjEzOTAzMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/139033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EnTeQuAk", "html_url": "https://github.com/EnTeQuAk", "followers_url": "https://api.github.com/users/EnTeQuAk/followers", "following_url": "https://api.github.com/users/EnTeQuAk/following{/other_user}", "gists_url": "https://api.github.com/users/EnTeQuAk/gists{/gist_id}", "starred_url": "https://api.github.com/users/EnTeQuAk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EnTeQuAk/subscriptions", "organizations_url": "https://api.github.com/users/EnTeQuAk/orgs", "repos_url": "https://api.github.com/users/EnTeQuAk/repos", "events_url": "https://api.github.com/users/EnTeQuAk/events{/privacy}", "received_events_url": "https://api.github.com/users/EnTeQuAk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-23T04:46:02Z", "updated_at": "2017-09-27T08:24:13Z", "closed_at": "2017-09-14T17:56:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I came across a pkcs7 signature that has a x509 `common_name` that includes a `{` and was generated my m2crypto and asn1crypto chokes on it.\r\n\r\nM2Crypto simply forwards asn1 encoding to openssl and I found https://wiki.openssl.org/index.php/Manual:Req(1)#BUGS which states that OpenSSL encodes TeletexString as ISO-8859-1 (Latin 1). Then I found https://github.com/etingof/pyasn1/blob/master/pyasn1/type/char.py#L241-L250 which kinda verifies that and wondered if we could implement a fallback in asn1crypto that falls back to latin-1 if we run into a decoding problem? Or, maybe even kick out T61 and just use latin-1?\r\n\r\nSee https://github.com/mozilla/signing-clients/pull/24 the signature in question and a traceback.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/59", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/59/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/59/events", "html_url": "https://github.com/wbond/asn1crypto/issues/59", "id": 237914582, "node_id": "MDU6SXNzdWUyMzc5MTQ1ODI=", "number": 59, "title": "Create a asn1crypto-testdata pypi package + automate release", "user": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220107143, "node_id": "MDU6TGFiZWwyMjAxMDcxNDM=", "url": "https://api.github.com/repos/wbond/asn1crypto/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-06-22T17:14:58Z", "updated_at": "2019-10-03T01:22:48Z", "closed_at": "2019-10-03T01:22:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to run the unittests in my environment I could not get them to work:\r\n\r\n```bash\r\n[cooper:~/asn1crypto-0.22.0:]$ ~/virtualenvs/setup_py_fun/bin/python3 setup.py test\r\nrunning test\r\nrunning egg_info\r\nwriting asn1crypto.egg-info/PKG-INFO\r\nwriting dependency_links to asn1crypto.egg-info/dependency_links.txt\r\nwriting top-level names to asn1crypto.egg-info/top_level.txt\r\nreading manifest file 'asn1crypto.egg-info/SOURCES.txt'\r\nwriting manifest file 'asn1crypto.egg-info/SOURCES.txt'\r\nrunning build_ext\r\ntests (unittest.loader._FailedTest) ... ERROR\r\n\r\n======================================================================\r\nERROR: tests (unittest.loader._FailedTest)\r\n----------------------------------------------------------------------\r\nImportError: Failed to import test module: tests\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/unittest/loader.py\", line 153, in loadTestsFromName\r\n    module = __import__(module_name)\r\nModuleNotFoundError: No module named 'tests'\r\n\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.000s\r\n\r\nFAILED (errors=1)\r\nTest failed: <unittest.runner.TextTestResult run=1 errors=1 failures=0>\r\nerror: Test failed: <unittest.runner.TextTestResult run=1 errors=1 failures=0>\r\n```\r\n\r\nPlaying with setup.py now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/58", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/58/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/58/events", "html_url": "https://github.com/wbond/asn1crypto/issues/58", "id": 237237368, "node_id": "MDU6SXNzdWUyMzcyMzczNjg=", "number": 58, "title": "LICENSE is not included in pypi tarball", "user": {"login": "jschueller", "id": 3832365, "node_id": "MDQ6VXNlcjM4MzIzNjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3832365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jschueller", "html_url": "https://github.com/jschueller", "followers_url": "https://api.github.com/users/jschueller/followers", "following_url": "https://api.github.com/users/jschueller/following{/other_user}", "gists_url": "https://api.github.com/users/jschueller/gists{/gist_id}", "starred_url": "https://api.github.com/users/jschueller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jschueller/subscriptions", "organizations_url": "https://api.github.com/users/jschueller/orgs", "repos_url": "https://api.github.com/users/jschueller/repos", "events_url": "https://api.github.com/users/jschueller/events{/privacy}", "received_events_url": "https://api.github.com/users/jschueller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-20T14:47:54Z", "updated_at": "2017-08-04T18:16:58Z", "closed_at": "2017-08-04T18:16:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/57", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/57/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/57/events", "html_url": "https://github.com/wbond/asn1crypto/issues/57", "id": 235724139, "node_id": "MDU6SXNzdWUyMzU3MjQxMzk=", "number": 57, "title": "Typo in asn1crypto.core error message", "user": {"login": "someshi", "id": 2360284, "node_id": "MDQ6VXNlcjIzNjAyODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2360284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/someshi", "html_url": "https://github.com/someshi", "followers_url": "https://api.github.com/users/someshi/followers", "following_url": "https://api.github.com/users/someshi/following{/other_user}", "gists_url": "https://api.github.com/users/someshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/someshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/someshi/subscriptions", "organizations_url": "https://api.github.com/users/someshi/orgs", "repos_url": "https://api.github.com/users/someshi/repos", "events_url": "https://api.github.com/users/someshi/events{/privacy}", "received_events_url": "https://api.github.com/users/someshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-13T23:48:00Z", "updated_at": "2017-06-14T00:36:05Z", "closed_at": "2017-06-14T00:36:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see this message too often so thought to report the typo\r\n\r\n```\r\n /asn1crypto/core.py\", line 779, in __init__\r\n    type_name(value)\r\nTypeError: value must be an instance of **Ans1Value**, not bytes\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/56", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/56/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/56/events", "html_url": "https://github.com/wbond/asn1crypto/issues/56", "id": 233440529, "node_id": "MDU6SXNzdWUyMzM0NDA1Mjk=", "number": 56, "title": "Trouble parsing OCSP request from StrongSwan", "user": {"login": "laurivosandi", "id": 194685, "node_id": "MDQ6VXNlcjE5NDY4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/194685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurivosandi", "html_url": "https://github.com/laurivosandi", "followers_url": "https://api.github.com/users/laurivosandi/followers", "following_url": "https://api.github.com/users/laurivosandi/following{/other_user}", "gists_url": "https://api.github.com/users/laurivosandi/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurivosandi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurivosandi/subscriptions", "organizations_url": "https://api.github.com/users/laurivosandi/orgs", "repos_url": "https://api.github.com/users/laurivosandi/repos", "events_url": "https://api.github.com/users/laurivosandi/events{/privacy}", "received_events_url": "https://api.github.com/users/laurivosandi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-04T15:31:46Z", "updated_at": "2017-07-14T03:23:51Z", "closed_at": "2017-07-14T03:23:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am having trouble parsing OCSP request from StrongSwan. Base64 encoding of the DER request in question is:\r\n\r\n```\r\nMIGVMIGSMFEwTzBNMAkGBSsOAwIaBQAEFBD07/WvCa6V3cvOq9pdq278smVFBBSfIwRKCe7nPWojuAb164jF62AHcAIUTbNhvLwhJrngY6sYzQTi2dSkHMeiPTA7MB0GCSsGAQUFBzABAgQQhaRGOT27I73QpRF4j8XuUjAaBgkrBgEFBQcwAQQEDTALBgkrBgEFBQcwAQE= \r\n```\r\nAttempting to parse extensions or run .native on the whole thing results in:\r\n\r\n```\r\nValueError: Insufficient data - 1424303782342441662876496716754552 bytes requested but only 16 available\r\n    while parsing asn1crypto.core.ParsableOctetString\r\n    while parsing asn1crypto.ocsp.TBSRequestExtension\r\n    while parsing asn1crypto.ocsp.TBSRequestExtensions\r\n    while parsing asn1crypto.ocsp.TBSRequest\r\n    while parsing asn1crypto.ocsp.OCSPRequest\r\n```\r\n\r\nSkipping extensions or not using .native on the whole thing works as expected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/55", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/55/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/55/events", "html_url": "https://github.com/wbond/asn1crypto/issues/55", "id": 232037470, "node_id": "MDU6SXNzdWUyMzIwMzc0NzA=", "number": 55, "title": "Modify CMS structure", "user": {"login": "saferoom-app", "id": 21174174, "node_id": "MDQ6VXNlcjIxMTc0MTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/21174174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saferoom-app", "html_url": "https://github.com/saferoom-app", "followers_url": "https://api.github.com/users/saferoom-app/followers", "following_url": "https://api.github.com/users/saferoom-app/following{/other_user}", "gists_url": "https://api.github.com/users/saferoom-app/gists{/gist_id}", "starred_url": "https://api.github.com/users/saferoom-app/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saferoom-app/subscriptions", "organizations_url": "https://api.github.com/users/saferoom-app/orgs", "repos_url": "https://api.github.com/users/saferoom-app/repos", "events_url": "https://api.github.com/users/saferoom-app/events{/privacy}", "received_events_url": "https://api.github.com/users/saferoom-app/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-29T14:27:58Z", "updated_at": "2017-05-30T10:44:08Z", "closed_at": "2017-05-30T10:43:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nIs it possible to take existing CMS structure with 3 recipients, remove one of the recipients and have a new CMS structure with 2 recipients?\r\n\r\nBR,\r\nAlexey ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/50", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/50/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/50/events", "html_url": "https://github.com/wbond/asn1crypto/issues/50", "id": 229452543, "node_id": "MDU6SXNzdWUyMjk0NTI1NDM=", "number": 50, "title": "KeyAlgorithmIdentifierId in asn1crypto.CMS doesn't include encryption mode OIDs", "user": {"login": "someshi", "id": 2360284, "node_id": "MDQ6VXNlcjIzNjAyODQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2360284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/someshi", "html_url": "https://github.com/someshi", "followers_url": "https://api.github.com/users/someshi/followers", "following_url": "https://api.github.com/users/someshi/following{/other_user}", "gists_url": "https://api.github.com/users/someshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/someshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/someshi/subscriptions", "organizations_url": "https://api.github.com/users/someshi/orgs", "repos_url": "https://api.github.com/users/someshi/repos", "events_url": "https://api.github.com/users/someshi/events{/privacy}", "received_events_url": "https://api.github.com/users/someshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-17T18:49:29Z", "updated_at": "2017-05-18T00:32:30Z", "closed_at": "2017-05-18T00:32:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the payload being encrypted is not another cryptographic key, regular encryption is done instead of key wrapping (at least that is what openssl command line does). If you agree, please include the 'encryption mode' OIDs in the KeyEncryptionAlgorithmIdentifierId map e.g. `2.16.840.1.101.3.4.1.2 - id-aes128-CBC `", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/47", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/47/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/47/events", "html_url": "https://github.com/wbond/asn1crypto/issues/47", "id": 228564527, "node_id": "MDU6SXNzdWUyMjg1NjQ1Mjc=", "number": 47, "title": "PKCS#12 generation example", "user": {"login": "laurivosandi", "id": 194685, "node_id": "MDQ6VXNlcjE5NDY4NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/194685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laurivosandi", "html_url": "https://github.com/laurivosandi", "followers_url": "https://api.github.com/users/laurivosandi/followers", "following_url": "https://api.github.com/users/laurivosandi/following{/other_user}", "gists_url": "https://api.github.com/users/laurivosandi/gists{/gist_id}", "starred_url": "https://api.github.com/users/laurivosandi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laurivosandi/subscriptions", "organizations_url": "https://api.github.com/users/laurivosandi/orgs", "repos_url": "https://api.github.com/users/laurivosandi/repos", "events_url": "https://api.github.com/users/laurivosandi/events{/privacy}", "received_events_url": "https://api.github.com/users/laurivosandi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-14T19:39:26Z", "updated_at": "2017-05-14T19:45:10Z", "closed_at": "2017-05-14T19:45:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, in the test it seems right now PKCS#12 reading is supported. What about generating PKCS#12?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/46", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/46/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/46/events", "html_url": "https://github.com/wbond/asn1crypto/issues/46", "id": 224125986, "node_id": "MDU6SXNzdWUyMjQxMjU5ODY=", "number": 46, "title": "CMS Example", "user": {"login": "saferoom-app", "id": 21174174, "node_id": "MDQ6VXNlcjIxMTc0MTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/21174174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saferoom-app", "html_url": "https://github.com/saferoom-app", "followers_url": "https://api.github.com/users/saferoom-app/followers", "following_url": "https://api.github.com/users/saferoom-app/following{/other_user}", "gists_url": "https://api.github.com/users/saferoom-app/gists{/gist_id}", "starred_url": "https://api.github.com/users/saferoom-app/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saferoom-app/subscriptions", "organizations_url": "https://api.github.com/users/saferoom-app/orgs", "repos_url": "https://api.github.com/users/saferoom-app/repos", "events_url": "https://api.github.com/users/saferoom-app/events{/privacy}", "received_events_url": "https://api.github.com/users/saferoom-app/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-25T12:48:33Z", "updated_at": "2017-04-27T13:51:42Z", "closed_at": "2017-04-27T13:51:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nCan you provide one example how to generate CMS structure with 2 PFX files. I am trying to understand the code and I can't get the idea how to generate CMS\r\n\r\nThanks in advance\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/43", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/43/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/43/events", "html_url": "https://github.com/wbond/asn1crypto/issues/43", "id": 219097129, "node_id": "MDU6SXNzdWUyMTkwOTcxMjk=", "number": 43, "title": "ECPrivateKey creation", "user": {"login": "ofek", "id": 9677399, "node_id": "MDQ6VXNlcjk2NzczOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/9677399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ofek", "html_url": "https://github.com/ofek", "followers_url": "https://api.github.com/users/ofek/followers", "following_url": "https://api.github.com/users/ofek/following{/other_user}", "gists_url": "https://api.github.com/users/ofek/gists{/gist_id}", "starred_url": "https://api.github.com/users/ofek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ofek/subscriptions", "organizations_url": "https://api.github.com/users/ofek/orgs", "repos_url": "https://api.github.com/users/ofek/repos", "events_url": "https://api.github.com/users/ofek/events{/privacy}", "received_events_url": "https://api.github.com/users/ofek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 29, "created_at": "2017-04-03T23:48:46Z", "updated_at": "2017-04-06T02:07:33Z", "closed_at": "2017-04-06T02:07:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say I have a 256 bit secret and its associated secp256k1 serialized public key, how can I convert to DER? Specifically, I'm using this as a reference: [https://github.com/ofek/coincurve/blob/master/tests/samples.py](https://github.com/ofek/coincurve/blob/master/tests/samples.py)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/42", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/42/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/42/events", "html_url": "https://github.com/wbond/asn1crypto/issues/42", "id": 216556721, "node_id": "MDU6SXNzdWUyMTY1NTY3MjE=", "number": 42, "title": "RSAPublicKey is backwards in order of modulus and exponent", "user": {"login": "ehampshire", "id": 7033374, "node_id": "MDQ6VXNlcjcwMzMzNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7033374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehampshire", "html_url": "https://github.com/ehampshire", "followers_url": "https://api.github.com/users/ehampshire/followers", "following_url": "https://api.github.com/users/ehampshire/following{/other_user}", "gists_url": "https://api.github.com/users/ehampshire/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehampshire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehampshire/subscriptions", "organizations_url": "https://api.github.com/users/ehampshire/orgs", "repos_url": "https://api.github.com/users/ehampshire/repos", "events_url": "https://api.github.com/users/ehampshire/events{/privacy}", "received_events_url": "https://api.github.com/users/ehampshire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-23T20:09:00Z", "updated_at": "2017-03-24T00:41:19Z", "closed_at": "2017-03-24T00:41:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "OpenSSL doesn't like the order you have the asn1crypto.keys.RSAPublicKey object.  Simply switching the order around let's things parse correctly.  I overrode with my own class, like so:\r\n\r\n`class MyRSAPublicKey(Sequence):\r\n\r\n    _fields = [\r\n        ('public_exponent', Integer),\r\n        ('modulus', Integer),\r\n    ]`\r\n\r\n\r\nExample parsing the RSAPublicKey with it currently:\r\n\r\n> openssl rsa -pubin -inform PEM -text -noout < test.pub\r\nModulus (17 bit): 65537 (0x10001)\r\nExponent:\r\n    00:c1:72:a6:ca:26:db:34:1e:8c:27:8d:d4:d6:0f:\r\n    cd:05:16:55:95:a1:f0:a8:55:b4:a0:28:b1:db:bf:\r\n    c5:df:f4:7b:b4:65:3f:31:5f:04:60:d8:d2:13:3a:\r\n    8a:58:93:78:68:a3:95:78:d8:72:0d:21:d5:f7:c3:\r\n    a8:ae:7d:3a:ad:71:10:79:cf:8c:32:a3:95:16:92:\r\n    6d:63:1a:a3:55:e6:69:9a:37:0a:58:b6:44:dc:fe:\r\n    be:39:12:d1:56:ef:15:99:8f:e4:ca:91:30:e8:e6:\r\n    f5:fd:59:c5:17:61:53:b4:91:8d:df:53:8a:cc:b6:\r\n    4f:7b:c2:19:83:db:76:8b:44:55:85:de:61:5e:f0:\r\n    6f:29:8b:8a:70:af:44:16:b3:2b:27:6b:d6:63:e6:\r\n    65:81:ed:19:5c:18:12:31:77:64:30:a0:26:6b:fe:\r\n    d8:c4:0e:72:f1:26:b4:50:96:d0:e9:b3:8c:c0:bf:\r\n    a5:67:d5:5f:fc:cd:be:15:b9:db:6f:4b:eb:f3:85:\r\n    bc:5d:ef:82:3f:56:09:cf:e4:3a:e6:f6:97:2b:a6:\r\n    17:70:5e:3e:76:f4:89:f7:af:ee:9e:6f:89:f6:0c:\r\n    2b:b3:3e:97:af:4a:e7:31:f8:39:3f:14:df:62:de:\r\n    01:6b:fa:80:14:9c:9e:da:5f:48:7f:e5:8f:b2:02:\r\n    01:bf\r\n\r\n\r\nExample parsing with the order switched:\r\n\r\n> openssl rsa -pubin -inform PEM -text -noout < test.pub\r\nModulus (2048 bit):\r\n    00:c1:72:a6:ca:26:db:34:1e:8c:27:8d:d4:d6:0f:\r\n    cd:05:16:55:95:a1:f0:a8:55:b4:a0:28:b1:db:bf:\r\n    c5:df:f4:7b:b4:65:3f:31:5f:04:60:d8:d2:13:3a:\r\n    8a:58:93:78:68:a3:95:78:d8:72:0d:21:d5:f7:c3:\r\n    a8:ae:7d:3a:ad:71:10:79:cf:8c:32:a3:95:16:92:\r\n    6d:63:1a:a3:55:e6:69:9a:37:0a:58:b6:44:dc:fe:\r\n    be:39:12:d1:56:ef:15:99:8f:e4:ca:91:30:e8:e6:\r\n    f5:fd:59:c5:17:61:53:b4:91:8d:df:53:8a:cc:b6:\r\n    4f:7b:c2:19:83:db:76:8b:44:55:85:de:61:5e:f0:\r\n    6f:29:8b:8a:70:af:44:16:b3:2b:27:6b:d6:63:e6:\r\n    65:81:ed:19:5c:18:12:31:77:64:30:a0:26:6b:fe:\r\n    d8:c4:0e:72:f1:26:b4:50:96:d0:e9:b3:8c:c0:bf:\r\n    a5:67:d5:5f:fc:cd:be:15:b9:db:6f:4b:eb:f3:85:\r\n    bc:5d:ef:82:3f:56:09:cf:e4:3a:e6:f6:97:2b:a6:\r\n    17:70:5e:3e:76:f4:89:f7:af:ee:9e:6f:89:f6:0c:\r\n    2b:b3:3e:97:af:4a:e7:31:f8:39:3f:14:df:62:de:\r\n    01:6b:fa:80:14:9c:9e:da:5f:48:7f:e5:8f:b2:02:\r\n    01:bf\r\nExponent: 65537 (0x10001)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/41", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/41/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/41/events", "html_url": "https://github.com/wbond/asn1crypto/issues/41", "id": 215632746, "node_id": "MDU6SXNzdWUyMTU2MzI3NDY=", "number": 41, "title": "accented dir + unicode str mismatch", "user": {"login": "DomCharn", "id": 26549662, "node_id": "MDQ6VXNlcjI2NTQ5NjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/26549662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DomCharn", "html_url": "https://github.com/DomCharn", "followers_url": "https://api.github.com/users/DomCharn/followers", "following_url": "https://api.github.com/users/DomCharn/following{/other_user}", "gists_url": "https://api.github.com/users/DomCharn/gists{/gist_id}", "starred_url": "https://api.github.com/users/DomCharn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DomCharn/subscriptions", "organizations_url": "https://api.github.com/users/DomCharn/orgs", "repos_url": "https://api.github.com/users/DomCharn/repos", "events_url": "https://api.github.com/users/DomCharn/events{/privacy}", "received_events_url": "https://api.github.com/users/DomCharn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-21T05:26:34Z", "updated_at": "2017-09-25T17:51:24Z", "closed_at": "2017-05-09T17:50:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Met issue when upgrading paramiko 1.15 to 2.2.1 (Windows10 + Python 2.7.1)\r\n\r\nIn the sequence the following : \"from asn1crypto.algos import DSASignature\"  entails Unicode Error \r\nThe identified cause :\r\n  in the $PATH we got the  \" C:\\Users\\dom\\Vic cl\u00e9 USB\\Downloads\\cmder_mini\\bin;\" Dir.\r\n  when the instruction libcrypto_path = find_library('crypto') is executed we have the previous Dir (str) + 'crypto' coded as unicode involving the error in 'fname = os.path.join(directory, name)'\r\n\r\nWishing not to modify the code  the bypass was to change directory's name\r\n\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\python271\\lib\\site-packages\\asn1crypto\\algos.py\", line 23, in <module>\r\n    from ._int import fill_width\r\n  File \"C:\\python271\\lib\\site-packages\\asn1crypto\\_int.py\", line 56, in <module>\r\n    from ._perf._big_num_ctypes import libcrypto\r\n  File \"C:\\python271\\lib\\site-packages\\asn1crypto\\_perf\\_big_num_ctypes.py\", line 31, in <module>\r\n    libcrypto_path = find_library('crypto')\r\n  File \"C:\\python271\\lib\\ctypes\\util.py\", line 54, in find_library\r\n    fname = os.path.join(directory, name)\r\n  File \"C:\\python271\\lib\\ntpath.py\", line 85, in join\r\n    result_path = result_path + p_path\r\n  File \"C:\\python271\\lib\\encodings\\utf_8.py\", line 16, in decode\r\n    return codecs.utf_8_decode(input, errors, True)\r\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xe9 in position 17: invalid continuation byte\r\n>>>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/40", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/40/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/40/events", "html_url": "https://github.com/wbond/asn1crypto/issues/40", "id": 214391346, "node_id": "MDU6SXNzdWUyMTQzOTEzNDY=", "number": 40, "title": "release version 0.22.0 on pypi", "user": {"login": "danmilon", "id": 1139595, "node_id": "MDQ6VXNlcjExMzk1OTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1139595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danmilon", "html_url": "https://github.com/danmilon", "followers_url": "https://api.github.com/users/danmilon/followers", "following_url": "https://api.github.com/users/danmilon/following{/other_user}", "gists_url": "https://api.github.com/users/danmilon/gists{/gist_id}", "starred_url": "https://api.github.com/users/danmilon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danmilon/subscriptions", "organizations_url": "https://api.github.com/users/danmilon/orgs", "repos_url": "https://api.github.com/users/danmilon/repos", "events_url": "https://api.github.com/users/danmilon/events{/privacy}", "received_events_url": "https://api.github.com/users/danmilon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-15T13:38:28Z", "updated_at": "2017-03-15T14:02:30Z", "closed_at": "2017-03-15T14:02:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/36", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/36/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/36/events", "html_url": "https://github.com/wbond/asn1crypto/issues/36", "id": 211296073, "node_id": "MDU6SXNzdWUyMTEyOTYwNzM=", "number": 36, "title": "Indefinite length encoding supported on input?", "user": {"login": "aalba6675", "id": 5254809, "node_id": "MDQ6VXNlcjUyNTQ4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5254809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aalba6675", "html_url": "https://github.com/aalba6675", "followers_url": "https://api.github.com/users/aalba6675/followers", "following_url": "https://api.github.com/users/aalba6675/following{/other_user}", "gists_url": "https://api.github.com/users/aalba6675/gists{/gist_id}", "starred_url": "https://api.github.com/users/aalba6675/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aalba6675/subscriptions", "organizations_url": "https://api.github.com/users/aalba6675/orgs", "repos_url": "https://api.github.com/users/aalba6675/repos", "events_url": "https://api.github.com/users/aalba6675/events{/privacy}", "received_events_url": "https://api.github.com/users/aalba6675/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-03-02T05:50:25Z", "updated_at": "2017-03-11T11:40:15Z", "closed_at": "2017-03-11T11:40:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "v0.21.1\r\n\r\nEncountered a p12 file using indefinite length encoding in auth_safe. The Content-Info OctetString is not aggregated correctly from the substrings. The reconstructed OctetString is too large and the native value contains the ASN.1 headers of the substrings instead of only content.\r\n\r\nTest case\r\n\r\nInput string in hex = '2480040d8dfff0980736af936e423acfcc04159277f7f0e479ffc7dc33b2d03d7b1a186d4472aa490000'\r\n\r\n[dummy.zip](https://github.com/wbond/asn1crypto/files/812869/dummy.zip)\r\n\r\n$ openssl asn1parse -inform DER -in dummy.da2\r\n    0:d=0  hl=2 l=inf  cons: OCTET STRING      \r\n    2:d=1  hl=2 l=  13 prim: OCTET STRING      [HEX DUMP]:8DFFF0980736AF936E423ACFCC\r\n   17:d=1  hl=2 l=  21 prim: OCTET STRING      [HEX DUMP]:9277F7F0E479FFC7DC33B2D03D7B1A186D4472AA49\r\n   40:d=1  hl=2 l=   0 prim: EOC               \r\n\r\nExpected behaviour: an OctetString whose native value is a byte string of length 34 \r\n```python\r\n>>> data = binascii.unhexlify('2480040d8dfff0980736af936e423acfcc04159277f7f0e479ffc7dc33b2d03d7b1a186d4472aa490000')\r\n>>> x = core.OctetString.load(data)\r\n>>> len(x.native)\r\n34\r\n>>> binascii.hexlify(x.native)\r\nb'8dfff0980736af936e423acfcc9277f7f0e479ffc7dc33b2d03d7b1a186d4472aa49'\r\n```\r\n\r\nObserved behaviour:\r\n```python\r\n>>> data = binascii.unhexlify('2480040d8dfff0980736af936e423acfcc04159277f7f0e479ffc7dc33b2d03d7b1a186d4472aa490000')\r\n>>> x = core.OctetString.load(data)\r\n>>> len(x.native)\r\n38\r\n>>> binascii.hexlify(x.native)\r\nb'040d8dfff0980736af936e423acfcc04159277f7f0e479ffc7dc33b2d03d7b1a186d4472aa49'\r\n\r\n## note ASN.1 headers 040d and 0415 are in the native value\r\n```\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/35", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/35/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/35/events", "html_url": "https://github.com/wbond/asn1crypto/issues/35", "id": 210305269, "node_id": "MDU6SXNzdWUyMTAzMDUyNjk=", "number": 35, "title": "Error encoding GeneralNames: TypeError: unorderable types: NoneType() >= int()", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-26T10:08:19Z", "updated_at": "2017-02-27T16:30:37Z", "closed_at": "2017-02-27T16:30:37Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Related to #33:\r\n\r\nDirectly above the erroring line (parser.py:235) there is \"tag = tag\". Would that be the issue here?\r\n\r\n```\r\n#!/usr/bin/env python3\r\n\r\nfrom asn1crypto.x509 import GeneralNames\r\n\r\nder = bytes.fromhex(\r\n    '302E820F73757363657274652E676F622E7665A01B060560865E0202A0120C105249462D472D32303030343033362D30'\r\n)\r\n\r\nalt = GeneralNames.load(der)\r\nalt.dump(force=True)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"alt.py\", line 10, in <module>\r\n    alt.dump(force=True)\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 3975, in dump\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 3842, in _set_contents\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 1107, in dump\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 3512, in dump\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 3081, in _set_contents\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 789, in dump\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 1485, in dump\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 534, in dump\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 524, in dump\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/parser.py\", line 237, in _dump_header\r\nTypeError: unorderable types: NoneType() >= int()\r\n```\r\n\r\n```\r\n  0  46: SEQUENCE {\r\n  2  15: . [2] 'suscerte.gob.ve'\r\n 19  27: . [0] {\r\n 21   5: . . OBJECT IDENTIFIER '2 16 862 2 2'\r\n 28  18: . . [0] {\r\n 30  16: . . . UTF8String 'RIF-G-20004036-0'\r\n       : . . . }\r\n       : . . }\r\n       : . }\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/34", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/34/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/34/events", "html_url": "https://github.com/wbond/asn1crypto/issues/34", "id": 210304106, "node_id": "MDU6SXNzdWUyMTAzMDQxMDY=", "number": 34, "title": "Error encoding NameConstraints: UnicodeError: label empty or too long", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-26T09:52:06Z", "updated_at": "2017-02-27T16:30:13Z", "closed_at": "2017-02-27T16:30:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Related to #33:\r\n```\r\n#!/usr/bin/env python3\r\n\r\nfrom asn1crypto.x509 import NameConstraints\r\n\r\nder = bytes.fromhex(\r\n    '303ea03c300582032e6772300582032e6575300682042e656475300682042e6f7267300581032e6772300581032e6575300681042e656475300681042e6f7267'\r\n)\r\ncs = NameConstraints.load(der)\r\ncs.dump(force=True)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.5/encodings/idna.py\", line 165, in encode\r\n    raise UnicodeError(\"label empty or too long\")\r\nUnicodeError: label empty or too long\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"./name.py\", line 9, in <module>\r\n    cs.dump(force=True)\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 3512, in dump\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 3081, in _set_contents\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 3975, in dump\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 3842, in _set_contents\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 3512, in dump\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 3081, in _set_contents\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 1107, in dump\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 1483, in dump\r\n  File \"/home/joern/env/lib/python3.5/site-packages/asn1crypto-0.21.1-py3.5.egg/asn1crypto/core.py\", line 1556, in set\r\nUnicodeError: encoding with 'idna' codec failed (UnicodeError: label empty or too long)\r\n```\r\n\r\n```\r\n  0  62: SEQUENCE {\r\n  2  60: . [0] {\r\n  4   5: . . SEQUENCE {\r\n  6   3: . . . [2] 2E 67 72                   .gr\r\n       : . . . }\r\n 11   5: . . SEQUENCE {\r\n 13   3: . . . [2] 2E 65 75                   .eu\r\n       : . . . }\r\n 18   6: . . SEQUENCE {\r\n 20   4: . . . [2] '.edu'\r\n       : . . . }\r\n 26   6: . . SEQUENCE {\r\n 28   4: . . . [2] '.org'\r\n       : . . . }\r\n 34   5: . . SEQUENCE {\r\n 36   3: . . . [1] 2E 67 72                   .gr\r\n       : . . . }\r\n 41   5: . . SEQUENCE {\r\n 43   3: . . . [1] 2E 65 75                   .eu\r\n       : . . . }\r\n 48   6: . . SEQUENCE {\r\n 50   4: . . . [1] '.edu'\r\n       : . . . }\r\n 56   6: . . SEQUENCE {\r\n 58   4: . . . [1] '.org'\r\n       : . . . }\r\n       : . . }\r\n       : . }\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/33", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/33/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/33/events", "html_url": "https://github.com/wbond/asn1crypto/issues/33", "id": 210303005, "node_id": "MDU6SXNzdWUyMTAzMDMwMDU=", "number": 33, "title": "More incorrect cRLDistributionPoints encodings", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-26T09:36:58Z", "updated_at": "2017-02-27T16:29:55Z", "closed_at": "2017-02-27T16:29:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I'm really sorry, but I found more (possible) issues :-)\r\nI took a list of 157 (trusted) root certs, decoded + reencoded them with asn1crypto.\r\n\r\n5 / 157 certs failed.\r\n\r\n3 of them had issues with incorrect cRLDistributionPoints encoding (Similar but probably not same as #32)\r\n\r\n```\r\n#!/usr/bin/env python3\r\n\r\nimport traceback\r\nimport requests\r\nfrom asn1crypto import pem, x509\r\n\r\ncerts = requests.get('https://mkcert.org/generate/').content\r\nfailed = 0\r\n\r\nfor i, (type_name, headers, der_bytes) in enumerate(pem.unarmor(certs, multiple=True)):\r\n    if type_name != 'CERTIFICATE':\r\n        print('Skipping ' + type_name)\r\n    cert = x509.Certificate.load(der_bytes)\r\n    try:\r\n        dumped = cert.dump(force=True)\r\n        if cert.dump(force=True) != der_bytes:\r\n            with open('%03d.dump' % i, 'wb') as fp:\r\n                fp.write(dumped)\r\n            raise Exception('Input does not match output')\r\n    except Exception as e:\r\n        failed += 1\r\n        with open('%03d.orig' % i, 'wb') as fp:\r\n            fp.write(der_bytes)\r\n        with open('%03d.exc' % i, 'wt') as fp:\r\n            traceback.print_exc(file=fp)\r\n\r\nprint('%d / %d certs failed' % (failed, i + 1))\r\n```\r\n\r\nAnd just the broken cRLDistributionPoints:\r\n```\r\n#!/usr/bin/env python3\r\n\r\nfrom asn1crypto.x509 import CRLDistributionPoints\r\nfrom base64 import b64decode\r\n\r\ncrldp = [\r\n'''\r\nMIG9MIG6oIG3oIG0hiFodHRwOi8vd3d3LmUtc3ppZ25vLmh1L1Jvb3RDQS5jcmyGgY5sZGFwOi8v\r\nbGRhcC5lLXN6aWduby5odS9DTj1NaWNyb3NlYyUyMGUtU3ppZ25vJTIwUm9vdCUyMENBLE9VPWUt\r\nU3ppZ25vJTIwQ0EsTz1NaWNyb3NlYyUyMEx0ZC4sTD1CdWRhcGVzdCxDPUhVP2NlcnRpZmljYXRl\r\nUmV2b2NhdGlvbkxpc3Q7YmluYXJ5\r\n''', '''\r\nMIHIMIGAoH6gfIZ6bGRhcDovL2RpcmVjdG9yeS5kLXRydXN0Lm5ldC9DTj1ELVRSVVNUJTIwUm9v\r\ndCUyMENsYXNzJTIwMyUyMENBJTIwMiUyMDIwMDksTz1ELVRydXN0JTIwR21iSCxDPURFP2NlcnRp\r\nZmljYXRlcmV2b2NhdGlvbmxpc3QwQ6BBoD+GPWh0dHA6Ly93d3cuZC10cnVzdC5uZXQvY3JsL2Qt\r\ndHJ1c3Rfcm9vdF9jbGFzc18zX2NhXzJfMjAwOS5jcmw=\r\n''', '''\r\nMIHSMIGHoIGEoIGBhn9sZGFwOi8vZGlyZWN0b3J5LmQtdHJ1c3QubmV0L0NOPUQtVFJVU1QlMjBS\r\nb290JTIwQ2xhc3MlMjAzJTIwQ0ElMjAyJTIwRVYlMjAyMDA5LE89RC1UcnVzdCUyMEdtYkgsQz1E\r\nRT9jZXJ0aWZpY2F0ZXJldm9jYXRpb25saXN0MEagRKBChkBodHRwOi8vd3d3LmQtdHJ1c3QubmV0\r\nL2NybC9kLXRydXN0X3Jvb3RfY2xhc3NfM19jYV8yX2V2XzIwMDkuY3Js\r\n''',\r\n]\r\n\r\nfor i, dp in enumerate(crldp):\r\n    der = b64decode(dp)\r\n\r\n    p = CRLDistributionPoints.load(der)\r\n    with open('dp-%d-orig.der' % i, 'wb') as fp:\r\n        fp.write(der)\r\n    with open('dp-%d-dump.der' % i, 'wb') as fp:\r\n        fp.write(p.dump(force=True))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/32", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/32/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/32/events", "html_url": "https://github.com/wbond/asn1crypto/issues/32", "id": 208695213, "node_id": "MDU6SXNzdWUyMDg2OTUyMTM=", "number": 32, "title": "cRLDistributionPoints extension incorrectly encoded", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-19T05:19:17Z", "updated_at": "2017-02-20T00:21:09Z", "closed_at": "2017-02-19T21:21:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "916defc8514b71e8ac677ce5879745b36387cf09 broke the encoding of cRLDistributionPoints.\r\n\r\nTest case:\r\n\r\n```\r\n#!/usr/bin/python3\r\n\r\nimport asn1crypto.x509\r\nimport base64\r\nimport sys\r\n\r\ncrt = \"\"\"\r\nMIIEfjCCA2agAwIBAgIIAb26AgiiG8EwDQYJKoZIhvcNAQELBQAwSTELMAkGA1UE \r\nBhMCVVMxEzARBgNVBAoTCkdvb2dsZSBJbmMxJTAjBgNVBAMTHEdvb2dsZSBJbnRl\r\ncm5ldCBBdXRob3JpdHkgRzIwHhcNMTcwMjAxMTMyMTAwWhcNMTcwNDI2MTMyMTAw\r\nWjBnMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwN\r\nTW91bnRhaW4gVmlldzETMBEGA1UECgwKR29vZ2xlIEluYzEWMBQGA1UEAwwNd3d3\r\nLmdvb2dsZS5kZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALwP5je3\r\n55At+FDsLQ0qUShcjVIdgF1EeSvQWPjNnDLZo+QJ0FVmzdAlZPponAPmK123vW3h\r\nB2oxXSozo4NL7vvCutcbUpY5HmN73YFNehiWgauMfqlAVtTP0bUwHnf5oV/IE4ZO\r\nfyB8DXyFPznLBYrSx0RAeQwpvDlAxBZfDqQgwXo04YYeQ6kFxH9lMkBMmhzTi504\r\nUtkWJfxVAMiXsHubdVWOAAGR64Fl2hROgfwUjmMfnOMzxRSaX6hSndx8u+msTnM8\r\nJmxYNGicSo6x0gt5y/DwB2+HXzk/3WF15NzVrr2JZoKv/C1vUIIxUscZUp/dHAq3\r\nrMpvJCLYyJM9rWsCAwEAAaOCAUowggFGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggr\r\nBgEFBQcDAjAYBgNVHREEETAPgg13d3cuZ29vZ2xlLmRlMGgGCCsGAQUFBwEBBFww\r\nWjArBggrBgEFBQcwAoYfaHR0cDovL3BraS5nb29nbGUuY29tL0dJQUcyLmNydDAr\r\nBggrBgEFBQcwAYYfaHR0cDovL2NsaWVudHMxLmdvb2dsZS5jb20vb2NzcDAdBgNV\r\nHQ4EFgQUPeG3xIBw4wOiVNjQg4sTjFEBsagwDAYDVR0TAQH/BAIwADAfBgNVHSME\r\nGDAWgBRK3QYWG7z2aLV29YG2u2IaulqBLzAhBgNVHSAEGjAYMAwGCisGAQQB1nkC\r\nBQEwCAYGZ4EMAQICMDAGA1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9wa2kuZ29vZ2xl\r\nLmNvbS9HSUFHMi5jcmwwDQYJKoZIhvcNAQELBQADggEBACRqqYg/mrCu+P+opO8V\r\n92BC9aRsRA1LJS1Hr5yiWgAHllRc2ds1RY65y7MUe5yj/L6Mh7txGRUy70A0Gl86\r\nCbs8Ao5OxlapSxkStMpuzltYmNGC8Am1LmmmteqMqWVkY4LndJpKk+gviPJgZGnX\r\nifvkFe6kseMpBYYe+n2blpU/EycYTOcwx5b/ymzs1xW8pSaFn+jeFvrcPJpq6WNq\r\nPEdeKVPppA7t6memNUVfo/6OgMluvAPDfpnSezf47rtLXzc4tiJB4mEfX7GQe3+G\r\nyyoPEw6BNFGBqC0OTnVurqpthqp+W21EYdjgcz97AVRYrnyGhHlfwUdhbJJz9/oc\r\nqrc=\r\n\"\"\"\r\n\r\nder_orig = base64.b64decode(crt)\r\n\r\ncrt = asn1crypto.x509.Certificate.load(der_orig)\r\nder_dump = crt.dump(force=True)\r\n\r\nprint(len(der_orig), len(der_dump), der_orig == der_dump, file=sys.stderr)\r\nsys.stdout.buffer.write(der_dump)\r\n```\r\n\r\nThe new encoding is 2 bytes larger than the original one.\r\ndumpasn1 shows on the result:\r\n\r\n```\r\n 828   50: . . . . SEQUENCE {\r\n 830    3: . . . . . OBJECT IDENTIFIER cRLDistributionPoints (2 5 29 31)\r\n 835   43: . . . . . OCTET STRING, encapsulates {\r\n 837   41: . . . . . . SEQUENCE {\r\n 839   39: . . . . . . . SEQUENCE {\r\n 841   35: . . . . . . . . [0] {\r\n 843   33: . . . . . . . . . [0] {\r\n 845   33: . . . . . . . . . . [0] {\r\n 847   31: . . . . . . . . . . . [6] 'http://pki.google.com/GIAG2.crl'\r\n         : . . . . . . . . . . . }\r\nError: Inconsistent object length, 2 bytes difference.\r\n         : . . . . . . . . . . }\r\nError: Inconsistent object length, 2 bytes difference.\r\n         : . . . . . . . . . }\r\n         : . . . . . . . . }\r\n         : . . . . . . . }\r\n         : . . . . . . }\r\n         : . . . . . }\r\n         : . . . . }\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/30", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/30/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/30/events", "html_url": "https://github.com/wbond/asn1crypto/issues/30", "id": 206682225, "node_id": "MDU6SXNzdWUyMDY2ODIyMjU=", "number": 30, "title": "Cannot set OID spec field with SetOf Any", "user": {"login": "aalba6675", "id": 5254809, "node_id": "MDQ6VXNlcjUyNTQ4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5254809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aalba6675", "html_url": "https://github.com/aalba6675", "followers_url": "https://api.github.com/users/aalba6675/followers", "following_url": "https://api.github.com/users/aalba6675/following{/other_user}", "gists_url": "https://api.github.com/users/aalba6675/gists{/gist_id}", "starred_url": "https://api.github.com/users/aalba6675/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aalba6675/subscriptions", "organizations_url": "https://api.github.com/users/aalba6675/orgs", "repos_url": "https://api.github.com/users/aalba6675/repos", "events_url": "https://api.github.com/users/aalba6675/events{/privacy}", "received_events_url": "https://api.github.com/users/aalba6675/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-10T01:31:22Z", "updated_at": "2017-02-10T10:43:52Z", "closed_at": "2017-02-10T10:43:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I may be misunderstading oid spec but...why doesn't the following code work when the field is SetOf Anys but determined by OID spec to be SetOf BMPString.\r\n\r\n(Or how do you actually create Attribute objects by setting fields directly instead of load'ing from existing data?)\r\n\r\nReproducer\r\n```python\r\n# from pkcs12.py\r\nclass Attribute(Sequence):\r\n    _fields = [\r\n        ('type', AttributeType),\r\n        ('values', SetOf, {'spec': Any}),\r\n    ]\r\n\r\n    _oid_pair = ('type', 'values')\r\n    _oid_specs = {\r\n        'friendly_name': SetOfBMPString,\r\n        'local_key_id': SetOfOctetString,\r\n        'microsoft_csp_name': SetOfBMPString,\r\n    }\r\n\r\nclass Attributes(SetOf):\r\n    _child_spec = Attribute\r\n\r\n>>>from asn1crypto import pkcs12, core\r\n>>>x = pkcs12.Attribute()\r\n>>>x['type'] = 'friendly_name'\r\n>>>## I think x['values'] should now be interpreted as SetOfBMPString, no?\r\n>>>x['values'] = [ 'hello', 'world']\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/venv3/lib/python3.5/site-packages/asn1crypto/core.py\", line 2982, in __setitem__\r\n    new_value = self._make_value(field_name, field_spec, value_spec, field_params, value)\r\n  File \"/venv3/lib/python3.5/site-packages/asn1crypto/core.py\", line 3237, in _make_value\r\n    wrapper = field_spec(value=new_value.dump(), **field_params)\r\n  File \"/venv3/lib/python3.5/site-packages/asn1crypto/core.py\", line 3582, in __init__\r\n    raise e\r\n  File \"/venv3/lib/python3.5/site-packages/asn1crypto/core.py\", line 3573, in __init__\r\n    self.__setitem__(index, child)\r\n  File \"/v6/venv3/lib/python3.5/site-packages/asn1crypto/core.py\", line 3733, in __setitem__\r\n    new_value = self._make_value(value)\r\n  File \"/venv3/lib/python3.5/site-packages/asn1crypto/core.py\", line 3658, in _make_value\r\n    type_name(self)\r\nValueError: Can not set a native python value to asn1crypto.core.SetOf where the _child_spec is Any \u2013 value must be an instance of Asn1Value\r\n    while constructing asn1crypto.core.SetOf\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/29", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/29/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/29/events", "html_url": "https://github.com/wbond/asn1crypto/issues/29", "id": 205964975, "node_id": "MDU6SXNzdWUyMDU5NjQ5NzU=", "number": 29, "title": "Truncated data raises an IndexError, rather than a ValueError", "user": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-07T17:50:17Z", "updated_at": "2017-02-08T00:59:41Z", "closed_at": "2017-02-07T22:51:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I didn't see this documented, so I infer that it's probably a bug:\r\n\r\n```pycon\r\n>>>> from asn1crypto.algos import DSASignature\r\n>>>> DSASignature.load(\"\\x30\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/asn1crypto/core.py\", line 229, in load\r\n    value, _ = _parse_build(encoded_data, spec=spec, spec_params=kwargs, strict=strict)\r\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/asn1crypto/core.py\", line 4851, in _parse_build\r\n    info, new_pointer = _parse(encoded_data, encoded_len, pointer)\r\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/asn1crypto/parser.py\", line 151, in _parse\r\n    length_octet = ord(encoded_data[pointer]) if _PY2 else encoded_data[pointer]\r\nIndexError: string index out of range\r\n>>>> DSASignature.load(b\"\\x30\\x03\\x02\\x00\\x02\", strict=True).native\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/asn1crypto/core.py\", line 3434, in native\r\n    self._parse_children(recurse=True)\r\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/asn1crypto/core.py\", line 3281, in _parse_children\r\n    parts, child_pointer = _parse(self._contents, contents_length, pointer=child_pointer)\r\n  File \"/Users/alex_gaynor/.virtualenvs/cryptography/site-packages/asn1crypto/parser.py\", line 151, in _parse\r\n    length_octet = ord(encoded_data[pointer]) if _PY2 else encoded_data[pointer]\r\nIndexError: string index out of range\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/27", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/27/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/27/events", "html_url": "https://github.com/wbond/asn1crypto/issues/27", "id": 191308767, "node_id": "MDU6SXNzdWUxOTEzMDg3Njc=", "number": 27, "title": "Specify default encoding for TeletexString", "user": {"login": "athoms", "id": 930179, "node_id": "MDQ6VXNlcjkzMDE3OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/930179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/athoms", "html_url": "https://github.com/athoms", "followers_url": "https://api.github.com/users/athoms/followers", "following_url": "https://api.github.com/users/athoms/following{/other_user}", "gists_url": "https://api.github.com/users/athoms/gists{/gist_id}", "starred_url": "https://api.github.com/users/athoms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/athoms/subscriptions", "organizations_url": "https://api.github.com/users/athoms/orgs", "repos_url": "https://api.github.com/users/athoms/repos", "events_url": "https://api.github.com/users/athoms/events{/privacy}", "received_events_url": "https://api.github.com/users/athoms/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220107142, "node_id": "MDU6TGFiZWwyMjAxMDcxNDI=", "url": "https://api.github.com/repos/wbond/asn1crypto/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-23T15:45:26Z", "updated_at": "2017-09-14T17:51:11Z", "closed_at": "2017-09-14T17:51:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to work with some certificates created by OpenSSL which used TeletexString with Latin-1 encoding for the commonName of the subject:\r\n````\r\nasn1crypto.x509.NameTypeAndValue Object #48061904\r\n  Header: 0x300d\r\n    constructed universal tag 16\r\n  Data: 0x060355040314064dfc6c6c6572\r\n    Field \"type\"\r\n      asn1crypto.x509.NameType Object #48061968\r\n        Header: 0x0603\r\n          primitive universal tag 6\r\n        Data: 0x550403\r\n          Native: common_name\r\n    Field \"value\"\r\n      asn1crypto.x509.DirectoryString Object #48061744\r\n        Data: 0x14064dfc6c6c6572\r\n          asn1crypto.core.TeletexString Object #48062096\r\n            Header: 0x1406\r\n              primitive universal tag 20\r\n            Data: 0x4dfc6c6c6572\r\n              Native: M\u00feller\r\n````\r\n\r\nThe value \"M\u00feller\" should be \"M\u00fcller\".  If I change the default encoding via `asn1crypto.core.TeletexString._encoding = 'latin1'` then the value is correctly decoded. But that feels very dirty. :wink:\r\nIs there an official way to change the default encoding? I couldn't find one.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/26", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/26/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/26/events", "html_url": "https://github.com/wbond/asn1crypto/issues/26", "id": 189153077, "node_id": "MDU6SXNzdWUxODkxNTMwNzc=", "number": 26, "title": "AttributeError: 'Sequence' object has no attribute '__bytes__' / '__unicode__'", "user": {"login": "Poddster", "id": 3941642, "node_id": "MDQ6VXNlcjM5NDE2NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3941642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Poddster", "html_url": "https://github.com/Poddster", "followers_url": "https://api.github.com/users/Poddster/followers", "following_url": "https://api.github.com/users/Poddster/following{/other_user}", "gists_url": "https://api.github.com/users/Poddster/gists{/gist_id}", "starred_url": "https://api.github.com/users/Poddster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Poddster/subscriptions", "organizations_url": "https://api.github.com/users/Poddster/orgs", "repos_url": "https://api.github.com/users/Poddster/repos", "events_url": "https://api.github.com/users/Poddster/events{/privacy}", "received_events_url": "https://api.github.com/users/Poddster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-14T16:09:50Z", "updated_at": "2016-11-23T15:03:40Z", "closed_at": "2016-11-23T15:03:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "`print()` used on a `Sequence` will raise an exception.\r\n\r\nIs this a code bug or a documentation issue?\r\n\r\n e.g. are subclasses of `Sequence` meant to implement `__bytes__` and `__unicode__` ? \r\n\r\nI notice that subclasses of `Concat` can use its implementation -- though I note that the py2 and py3 will give inconsistent printouts, so I'm not sure if you intended it to be this way or not.\r\n\r\n\r\nThanks.\r\n\r\ntest.py:\r\n```python\r\n#!/usr/bin/env python2\r\n# coding=utf-8\r\nfrom __future__ import absolute_import, division, print_function\r\nimport asn1crypto.core\r\n\r\nclass MySequence(asn1crypto.core.Sequence):\r\n    _fields = [\r\n        ('abc', asn1crypto.core.PrintableString),\r\n    ]\r\n\r\nkeyinfo_dict= {'abc': u\"1234\"}\r\nki = MySequence(keyinfo_dict)\r\nprint(repr(ki.dump()))\r\nprint(ki.debug())\r\nprint(ki)\r\n```\r\n\r\noutput:\r\n```text\r\n$ python 2 ./test.py \r\n'0\\x06\\x13\\x041234'\r\n  __main__.MySequence Object #140130113838608\r\n    Header: 0x3006\r\n      constructed universal tag 16\r\n    Data: 0x130431323334\r\n      Field \"abc\"\r\n        asn1crypto.core.PrintableString Object #140130113838736\r\n          Header: 0x1304\r\n            primitive universal tag 19\r\n          Data: 0x31323334\r\n            Native: 1234\r\nNone\r\nTraceback (most recent call last):\r\n  File \"./test.py\", line 15, in <module>\r\n    print(ki)\r\n  File \"/usr/local/lib/python2.7/dist-packages/asn1crypto/core.py\", line 290, in __str__\r\n    return self.__bytes__()\r\nAttributeError: 'MySequence' object has no attribute '__bytes__'\r\n\r\n$ python3 ./test.py \r\nb'0\\x06\\x13\\x041234'\r\n  __main__.MySequence Object #140594304391152\r\n    Header: 0x3006\r\n      constructed universal tag 16\r\n    Data: 0x130431323334\r\n      Field \"abc\"\r\n        asn1crypto.core.PrintableString Object #140594304492824\r\n          Header: 0x1304\r\n            primitive universal tag 19\r\n          Data: 0x31323334\r\n            Native: 1234\r\nNone\r\nTraceback (most recent call last):\r\n  File \"./test.py\", line 15, in <module>\r\n    print(ki)\r\n  File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 292, in __str__\r\n    return self.__unicode__()\r\nAttributeError: 'MySequence' object has no attribute '__unicode__'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/24", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/24/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/24/events", "html_url": "https://github.com/wbond/asn1crypto/issues/24", "id": 182752353, "node_id": "MDU6SXNzdWUxODI3NTIzNTM=", "number": 24, "title": "Error parsing cms CompressedData", "user": {"login": "abhishek-ram", "id": 7054720, "node_id": "MDQ6VXNlcjcwNTQ3MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7054720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhishek-ram", "html_url": "https://github.com/abhishek-ram", "followers_url": "https://api.github.com/users/abhishek-ram/followers", "following_url": "https://api.github.com/users/abhishek-ram/following{/other_user}", "gists_url": "https://api.github.com/users/abhishek-ram/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhishek-ram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhishek-ram/subscriptions", "organizations_url": "https://api.github.com/users/abhishek-ram/orgs", "repos_url": "https://api.github.com/users/abhishek-ram/repos", "events_url": "https://api.github.com/users/abhishek-ram/events{/privacy}", "received_events_url": "https://api.github.com/users/abhishek-ram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-10-13T10:27:17Z", "updated_at": "2017-04-05T08:56:08Z", "closed_at": "2016-11-29T10:51:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am working on implemented a file transfer protocol called AS2 and this requires messages to be compressed, signed and encrypted as per the CMS Specifications.\n\nI have started with the compression and am able to parse the compressed data ASN1 generated using this package.\n\nHowever I am getting the below error when I try to parse data generated from another tool that implements this protocol as well. \n\n```\nTraceback (most recent call last):\n  File \"/Users/abhishekram/Documents/work/Research/pyAS2-lib/dev/tests/test_with_mecas2.py\", line 16, in test_compressed_message\n    in_mic_content = in_message.parse(infile.read())\n  File \"/Users/abhishekram/Documents/work/Research/pyAS2-lib/dev/pyas2lib/message.py\", line 150, in parse\n    decompress_message(mic_content)\n  File \"/Users/abhishekram/Documents/work/Research/pyAS2-lib/dev/pyas2lib/cms.py\", line 31, in decompress_message\n    return cms_content['content'].decompressed\n  File \"/Users/abhishekram/Documents/work/Research/pyAS2-lib/dev/venv/lib/python2.7/site-packages/asn1crypto/cms.py\", line 883, in decompressed\n    self._decompressed = zlib.decompress(self['encap_content_info']['content'].native)\n  File \"/Users/abhishekram/Documents/work/Research/pyAS2-lib/dev/venv/lib/python2.7/site-packages/asn1crypto/core.py\", line 2770, in __getitem__\n    raise e\nValueError: Error parsing asn1crypto.core.ParsableOctetString - method should have been primitive, but constructed was found\n    while parsing asn1crypto.cms.EncapsulatedContentInfo\n```\n\nI am also attaching the [DER encoded compressed data](https://github.com/wbond/asn1crypto/files/526839/meca2_compressed.txt)\n\nASN1 for your reference.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/23", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/23/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/23/events", "html_url": "https://github.com/wbond/asn1crypto/issues/23", "id": 173848793, "node_id": "MDU6SXNzdWUxNzM4NDg3OTM=", "number": 23, "title": "\"parameters\" missing when using rsa / rsassa_pkcs1v15", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-29T19:11:13Z", "updated_at": "2016-08-30T18:30:36Z", "closed_at": "2016-08-30T18:30:36Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "There's a feature in algos.SignedDigestAlgorithm to set parameters to Null when using certain algorithms. \"rsassa_pkcs1v15\" is missing.\nWhile this is easily fixed, same problem occurs for KeyEncryptionAlgorithm.\n\nI'm wondering why you're using different classes, according to rfc5652 both SignatureAlgorithmIdentifier and KeyEncryptionAlgorithmIdentifier are the same as AlgorithmIdentifier. And rfc4055 defines this \"parameters MUST be present and MUST be NULL\" constraint for AlgorithmIdentifier.\nSo shouldn't the logic for Null be inside AlgorithmIdentifier and the other two classes inherit from here?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/22", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/22/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/22/events", "html_url": "https://github.com/wbond/asn1crypto/issues/22", "id": 173814381, "node_id": "MDU6SXNzdWUxNzM4MTQzODE=", "number": 22, "title": "Cannot create cms.SignedData", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-29T16:25:12Z", "updated_at": "2016-08-29T18:23:38Z", "closed_at": "2016-08-29T17:44:35Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I'm trying to create a CMS structure (ContentInfo containing SignedData), but don't know how. The following fails. My mistake or a bug?\n\n```\n#!/usr/bin/python3\nfrom asn1crypto import cms\ncms.SignedData({\n    'version': 'v1',\n    'encap_content_info': {\n        'content_type': 'data',\n        'content': b'Hello',\n    }\n})\n```\n\nError:\n\n```\nTraceback (most recent call last):\n  File \"sd.py\", line 7, in <module>\n    'content': b'Hello',\n  File \"/usr/lib/python3/dist-packages/asn1crypto/core.py\", line 2646, in __init__\n    raise e\n  File \"/usr/lib/python3/dist-packages/asn1crypto/core.py\", line 2641, in __init__\n    self.__setitem__(key, value[key])\n  File \"/usr/lib/python3/dist-packages/asn1crypto/core.py\", line 2786, in __setitem__\n    new_value = self._make_value(field_name, field_spec, value_spec, field_params, value)\n  File \"/usr/lib/python3/dist-packages/asn1crypto/core.py\", line 2998, in _make_value\n    is_any = issubclass(field_spec, Any)\nTypeError: issubclass() arg 1 must be a class\n    while constructing asn1crypto.cms.SignedData\n```\n\nfield_spec is None in core.py:2998.\nI assume it comes from SignedData._fields where it says None for encap_content_info.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/21", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/21/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/21/events", "html_url": "https://github.com/wbond/asn1crypto/issues/21", "id": 169558806, "node_id": "MDU6SXNzdWUxNjk1NTg4MDY=", "number": 21, "title": "Incorrect DER encoding of \"Named bit lists\"", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-08-05T08:48:00Z", "updated_at": "2016-08-05T15:25:53Z", "closed_at": "2016-08-05T11:16:16Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Hello,\nI loaded an x509.Certificate and dumped it again with force=True.\nThe result differs from the original.\nThe certificate includes the Extension \"Key Usage\".\nThe value is encoded as \"03 02 05 a0\" in the original, but \"03 03 07 a0 00\" in the dumped form.\nThe former is the bit string \"101\", the latter is \"101000000\". According to the standards, only the former is correct.\n\nRFC5280 specifies that trailing zeros are removed:\n\n> Named bit lists are BIT STRINGs where the values have been assigned\n> names.  This specification makes use of named bit lists in the\n> definitions for the key usage, CRL distribution points, and freshest\n> CRL certificate extensions, as well as the freshest CRL and issuing\n> distribution point CRL extensions.  When DER encoding a named bit\n> list, trailing zeros MUST be omitted.  That is, the encoded value\n> ends with the last named bit that is set to one.\n\nAlso see X.690 11.2.2 and X.680 21.7\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/19", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/19/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/19/events", "html_url": "https://github.com/wbond/asn1crypto/issues/19", "id": 166945503, "node_id": "MDU6SXNzdWUxNjY5NDU1MDM=", "number": 19, "title": "Wrong structure for the Name object causes invalid CSR DER", "user": {"login": "williampiras", "id": 5661650, "node_id": "MDQ6VXNlcjU2NjE2NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5661650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/williampiras", "html_url": "https://github.com/williampiras", "followers_url": "https://api.github.com/users/williampiras/followers", "following_url": "https://api.github.com/users/williampiras/following{/other_user}", "gists_url": "https://api.github.com/users/williampiras/gists{/gist_id}", "starred_url": "https://api.github.com/users/williampiras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/williampiras/subscriptions", "organizations_url": "https://api.github.com/users/williampiras/orgs", "repos_url": "https://api.github.com/users/williampiras/repos", "events_url": "https://api.github.com/users/williampiras/events{/privacy}", "received_events_url": "https://api.github.com/users/williampiras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-07-22T00:14:34Z", "updated_at": "2016-07-23T00:23:32Z", "closed_at": "2016-07-22T01:49:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Will,\n\nI noticed this error debugging an issue with the CSR generator library, but it seems to be caused by an error int the way the Subject distinguishing name object is represented in the ASN.1 crypto element Name\n\nIn particular, page 114 of rfc5280 (https://tools.ietf.org/html/rfc5280) states that a Name hast the following structure.\n\n```\nName ::= CHOICE { -- only one possibility for now --\n  rdnSequence  RDNSequence }\n\nRDNSequence ::= SEQUENCE OF RelativeDistinguishedName_\n\nDistinguishedName ::=   RDNSequence\n\nRelativeDistinguishedName ::= SET SIZE (1..MAX) OF AttributeTypeAndValue\n\n....\n\nAttribute               ::= SEQUENCE {\n      type             AttributeType,\n      values    SET OF AttributeValue }\n            -- at least one value is required\n\nAttributeType           ::= OBJECT IDENTIFIER\n\nAttributeValue          ::= ANY -- DEFINED BY AttributeType\n\nAttributeTypeAndValue   ::= SEQUENCE {\n    type    AttributeType,\n    value   AttributeValue }_\n```\n\nThis implies that  in the generated CSR we should see something like\n\n```\nSEQUENCE\n    SET\n        SEQUENCE\n            OID\n            VALUE\n    SET\n        SEQUENCE\n            OID\n            VALUE\n```\n\nThe subject domain name of the CSR generated by the last version available of CSR generator has the following structure:\n\n```\nSEQUENCE\n    SET\n        SEQUENCE\n            OID\n            VALUE\n        SEQUENCE\n            OID\n            VALUE\n```\n\nThe issue that we see with this is that based on the field specified and base on the order they appear, the CSR is rejected or not. For instance the following CSR will be accepted because all the IDs are reported in the right order:\n\n-----BEGIN CERTIFICATE REQUEST-----\nMIIDGzCCAgUCAQAwgZoxgZcwCQYDVQQGEwJVUzARBgNVBAgMCkNhbGlmb3JuaWEw\nFAYDVQQHDA1TYW4gRnJhbmNpc2MwMBcGA1UECgwQbXkgb3JnIDEyMzQ1Njc4OTAm\nBgNVBAMMH215aG9zdDEyMzQ1Njc4OS5teWRvbWFpbjEyMy5jb20wIAYJKoZIhvcN\nAQkBFhNhYmNAbXlkb21haW4xMjMuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A\nMIIBCgKCAQEArzqYKehUC4uvhh/i4sN3Q8DqPoAG62ozz9KywKcyDQ6xxx/pbIpz\nUVPlxFKPdI+7w+ytbSGyuHe0rqQEBAi2MNQdLISY+9MZ0grOu/cQH7vAXIM8JqZN\nDJQSw49ohhuk3rg50rLbA0QpCiQMZ+3IQqPOE11oC0GEQtJQVF9z82sCBhzy3RF3\nrw5Ro7KubJiSK+OlYZzqcEC6REUfu5SpTT7kDlMNP+519kktZW7fBFDmXBt+Uz69\nflgUZVob/EpHQy/XbhWVJwrYRK6MOHxhhWG/+GyJHPWX5du6G0U5D0ddVFwbi8Qj\nhcMkG7/dqD70o1U2GlorOSA/WexB5tVymQIDAQABoD0wOwYJKoZIhvcNAQkOMS4w\nLDAqBgNVHREEIzAhgh9teWhvc3QxMjM0NTY3ODkubXlkb21haW4xMjMuY29tMAsG\nCSqGSIb3DQEBCwOCAQEAmjMU1J1JINSVc4ClMeVXyUqIt8y9gesht+xMzUePCB9t\n4Ax5zjDFGlYUO1z3lgLZaE9Ov46oiMXSU0D9h/HvZZJrxsEd4r8YYSMg/NMIxMVI\nIHMeab97bhhIn3g9x2vdfnf3LVOig1N1nEWbLovKQ7f17obXX+bClph3wEuVaYWm\nwJOkZyZXfHAawecqdK5LWzREUQNJ4AYpzkvWk77CpFsrFs+wO3puR8DyA2RDYGNG\nYnRLAfhzIPHQg1x1lvXXW8lFfxD+eEa9q0SisqZp020BhAZ3hticDdspcUp3lpSa\n8Ipuiiokjf7VxYTQMw5ZSOIZqWuTxZIWXs/AgCfbmA==\n-----END CERTIFICATE REQUEST-----\n\nThe following CSR will be rejected\n\n-----BEGIN CERTIFICATE REQUEST-----\nMIIC9zCCAeECAQAwdzF1MAkGA1UEBhMCVVMwEQYDVQQIDApDYWxpZm9ybmlhMBQG\nA1UEBwwNU2FuIEZyYW5jaXNjMDAXBgNVBAoMEG15IG9yZyAxMjM0NTY3ODkwJgYD\nVQQDDB9teWhvc3QxMjM0NTY3ODkubXlkb21haW4xMjMuY29tMIIBIjANBgkqhkiG\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1zz1e5+05DtmnXUOVUx7noYmEZ7dd9ja/zA+\nYwDx3M0fU9m5UqDKTShUyX/jVCq17Eihv3goQZt4kYSsPRiHsitaA1LndQX5Bnd9\nZrbV3cTEU8qn4djas/V3vNSI8HZ2OOwff+6HHW8fTk04lkMOdWA+QQZAXZRYsix1\n01vwmNTIuv9yX6L4QxV3dV5dvkgvgjVlQ1Mik348ycTJP6br1YgSdodEnS8KgzpB\n2fm5eKfjmBKKMI8a49pzqSHLsfNY4i/5oUjHiwn3CIpCloUfiSkL10OFG0EfVnE8\nMx7vaz6jjgx5Chupzwy8AFsROHBvMLCBQRtherQ0pwvyHdTPYwIDAQABoD0wOwYJ\nKoZIhvcNAQkOMS4wLDAqBgNVHREEIzAhgh9teWhvc3QxMjM0NTY3ODkubXlkb21h\naW4xMjMuY29tMAsGCSqGSIb3DQEBCwOCAQEAApSFaaOFd9meRqsbi7p/SLqp4ynF\nme9YZPC/+VLyUMYArcpvCNJOkZNwupr66AXL+CXaLfRUOXSKBjWXtszHwuf2eQ83\nYfli8iD0Idxk6BVqZrekWPuXz7128wJ/sY6e842c0BfDhNgPLhXyaVLIkWHojh26\nfwPxVt5tD6yVym6K+KAZQP4yroW7wHqnCyBAA5xnUAoL3ZKsyjwjbOn+4sEUxMqx\nZCciI63pG5jmvACXv49x58lBWrdEM6eUmDyFO/di92kmuAF8ro07uUYba5i2mqrs\nPh4UVmq+/aiF4QENEOEBw6fkZmFLqQbVOSrgMR1in0ustXCoHcO4uuDR6g==\n-----END CERTIFICATE REQUEST-----\n\nAfter a lot of digging in RFC/standards and some really helpful emails with the CA guys it looks like the issue here is that a CSR generated skipping the SET element for each RDNSequence produces a single SET that contains all the SEQUENCEs. When this happens the order the element and their content length matters in order to generate valid DER encoded content.\n\nThis happens because the rules to map ASN1 to DER state that a SET OF ASN1 element (PKCS uses SET OF instead of SET) has to contain a list of elements ordered by ascending value of tag (see end of section 5.15 http://luca.ntop.org/Teaching/Appunti/asn1.html). The DER encoding section also explain how to identify the discriminant tag when two elements tags are the same (30 HEX for the SET OF elements) and do the comparison (basically do the lexicographic comparison of the bytes that follow, so in this case the length field)\n\nLooking at the asn1parse of the good CSR we see this \n\n```\n15:d=4  hl=2 l=   9 cons: SEQUENCE          \n17:d=5  hl=2 l=   3 prim: OBJECT            :countryName\n22:d=5  hl=2 l=   2 prim: PRINTABLESTRING   :US\n\n26:d=4  hl=2 l=  17 cons: SEQUENCE          \n28:d=5  hl=2 l=   3 prim: OBJECT            :stateOrProvinceName\n33:d=5  hl=2 l=  10 prim: UTF8STRING        :California\n\n45:d=4  hl=2 l=  20 cons: SEQUENCE          \n47:d=5  hl=2 l=   3 prim: OBJECT            :localityName\n52:d=5  hl=2 l=  13 prim: UTF8STRING        :San Francisc0\n\n67:d=4  hl=2 l=  23 cons: SEQUENCE          \n69:d=5  hl=2 l=   3 prim: OBJECT            :organizationName\n74:d=5  hl=2 l=  16 prim: UTF8STRING        :my org 123456789\n\n92:d=4  hl=2 l=  38 cons: SEQUENCE          \n94:d=5  hl=2 l=   3 prim: OBJECT            :commonName\n99:d=5  hl=2 l=  31 prim: UTF8STRING        :myhost123456789.mydomain123.com\n```\n\nthe tag sequence is 9 -> 17 -> 20 -> 23 -> 38. Everything works.\n\nLooking at the asn1parse of the bad CSR we see this\n\n```\n17:d=4  hl=2 l=   9 cons: SEQUENCE          \n19:d=5  hl=2 l=   3 prim: OBJECT            :countryName\n24:d=5  hl=2 l=   2 prim: PRINTABLESTRING   :US\n\n28:d=4  hl=2 l=  17 cons: SEQUENCE          \n30:d=5  hl=2 l=   3 prim: OBJECT            :stateOrProvinceName\n35:d=5  hl=2 l=  10 prim: UTF8STRING        :California\n\n47:d=4  hl=2 l=  20 cons: SEQUENCE          \n49:d=5  hl=2 l=   3 prim: OBJECT            :localityName\n54:d=5  hl=2 l=  13 prim: UTF8STRING        :San Francisc0\n\n69:d=4  hl=2 l=  23 cons: SEQUENCE          \n71:d=5  hl=2 l=   3 prim: OBJECT            :organizationName\n76:d=5  hl=2 l=  16 prim: UTF8STRING        :my org 123456789\n\n94:d=4  hl=2 l=  38 cons: SEQUENCE          \n96:d=5  hl=2 l=   3 prim: OBJECT            :commonName\n101:d=5  hl=2 l=  31 prim: UTF8STRING        :myhost123456789.mydomain123.com\n\n134:d=4  hl=2 l=  32 cons: SEQUENCE          \n136:d=5  hl=2 l=   9 prim: OBJECT            :emailAddress\n147:d=5  hl=2 l=  19 prim: IA5STRING         :abc@mydomain123.com\n```\n\nthe tag sequence is 9 -> 17 -> 20 -> 23 -> 38 -> 32. The CA rejects the CSR.\n\nIf the assumptions above are correct I see the two following issues:\n\n1) The Name element should be modified so that each AttributeTypeAndValue is stored in its own SET OF\n\n2) The DER encoding of the SET OF elements does not follow the mandatory tag sorting rule required by the DER encoding.\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/18", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/18/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/18/events", "html_url": "https://github.com/wbond/asn1crypto/issues/18", "id": 163438521, "node_id": "MDU6SXNzdWUxNjM0Mzg1MjE=", "number": 18, "title": "CMS Enveloped Data creation failure", "user": {"login": "balena", "id": 8530651, "node_id": "MDQ6VXNlcjg1MzA2NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8530651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balena", "html_url": "https://github.com/balena", "followers_url": "https://api.github.com/users/balena/followers", "following_url": "https://api.github.com/users/balena/following{/other_user}", "gists_url": "https://api.github.com/users/balena/gists{/gist_id}", "starred_url": "https://api.github.com/users/balena/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balena/subscriptions", "organizations_url": "https://api.github.com/users/balena/orgs", "repos_url": "https://api.github.com/users/balena/repos", "events_url": "https://api.github.com/users/balena/events{/privacy}", "received_events_url": "https://api.github.com/users/balena/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 220107142, "node_id": "MDU6TGFiZWwyMjAxMDcxNDI=", "url": "https://api.github.com/repos/wbond/asn1crypto/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2016-07-01T17:16:21Z", "updated_at": "2016-11-23T23:45:38Z", "closed_at": "2016-11-23T15:13:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to create a CMS Enveloped Data using asn1crypto as a substitution of the Google's certificate-transparency source code I forked on my project https://github.com/balena/python-smime. I had the idea of using asn1crypto after having some trouble when parsing indefinite-length attributes generated by certain E-Mail managers (like Thunderbird).\n\nWhile asn1crypto is great for parsing all kinds of CMS data, I am getting some trouble when generating them. I have an unit test where the PKCS7 output is passed as input to command-line OpenSSL in order to make sure the implementation is compatible. But all I get is an error from OpenSSL when parsing ASN.1 tags (I don't know exactly which one).\n\nThere is a single function responsible for returning a CMS ContentInfo structure as follows:\n\n```\ndef __get_enveloped_data(pubkey_cipher, sym_cipher, x509_cert,\n                         encrypted_key, iv, encrypted_content):\n    return cms.ContentInfo({\n        'contentType': cms.ContentType(u'enveloped_data'),\n        'content': cms.EnvelopedData({\n            'version': u'v0',\n            'recipient_infos': cms.RecipientInfos([\n                cms.RecipientInfo(\n                    name='ktri',\n                    value=cms.KeyTransRecipientInfo({\n                        'version': u'v0',\n                        'rid': cms.RecipientIdentifier(\n                            name='issuer_and_serial_number',\n                            value=__get_issuer_and_serial_number(x509_cert)\n                        ),\n                        'key_encryption_algorithm': cms.KeyEncryptionAlgorithm({\n                            'algorithm': pubkey_cipher.oid,\n                            'parameters': core.Null()\n                        }),\n                        'encrypted_key': encrypted_key\n                    })\n                )\n            ]),\n            'encrypted_content_info': cms.EncryptedContentInfo({\n                'content_type': cms.ContentType(u'data'),\n                'content_encryption_algorithm': cms.EncryptionAlgorithm({\n                    'algorithm': sym_cipher.oid,\n                    'parameters': iv\n                }),\n                'encrypted_content': cms.OctetString(\n                    encrypted_content, tag=0, tag_type='implicit')\n            })\n        }, tag=0, tag_type='explicit')\n    })\n```\n\nThe object returned by the above function is encoded using:\n\n```\nencoded_content = __encode_in_base64(enveloped_data.dump())\n```\n\nAnd the __encode_in_base64 is just a pretty printer function to convert the DER output into BASE64.\n\nWhen I execute the OpenSSL function:\n\n```\n$ openssl smime -decrypt -in tmp -inkey private_key.pem\n```\n\nAll I get is the following:\n\n```\nError reading S/MIME message\n140702704453280:error:0D0680A8:asn1 encoding routines:ASN1_CHECK_TLEN:wrong tag:tasn_dec.c:1338:\n140702704453280:error:0D06C03A:asn1 encoding routines:ASN1_D2I_EX_PRIMITIVE:nested asn1 error:tasn_dec.c:852:\n140702704453280:error:0D08303A:asn1 encoding routines:ASN1_TEMPLATE_NOEXP_D2I:nested asn1 error:tasn_dec.c:772:Field=type, Type=PKCS7\n140702704453280:error:0D0D106E:asn1 encoding routines:B64_READ_ASN1:decode error:asn_mime.c:193:\n140702704453280:error:0D0D40CB:asn1 encoding routines:SMIME_read_ASN1:asn1 parse error:asn_mime.c:528:\n```\n\nDo you have any idea what could be the problem? Is there any caveat when encoding asn1crypto structures like the above?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/17", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/17/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/17/events", "html_url": "https://github.com/wbond/asn1crypto/issues/17", "id": 160284001, "node_id": "MDU6SXNzdWUxNjAyODQwMDE=", "number": 17, "title": "Add OS X OIDs to x509.KeyPurposeId", "user": {"login": "wbond", "id": 41734, "node_id": "MDQ6VXNlcjQxNzM0", "avatar_url": "https://avatars0.githubusercontent.com/u/41734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wbond", "html_url": "https://github.com/wbond", "followers_url": "https://api.github.com/users/wbond/followers", "following_url": "https://api.github.com/users/wbond/following{/other_user}", "gists_url": "https://api.github.com/users/wbond/gists{/gist_id}", "starred_url": "https://api.github.com/users/wbond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wbond/subscriptions", "organizations_url": "https://api.github.com/users/wbond/orgs", "repos_url": "https://api.github.com/users/wbond/repos", "events_url": "https://api.github.com/users/wbond/events{/privacy}", "received_events_url": "https://api.github.com/users/wbond/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-14T21:06:37Z", "updated_at": "2016-06-16T09:34:33Z", "closed_at": "2016-06-16T09:34:33Z", "author_association": "OWNER", "active_lock_reason": null, "body": "To properly implement https://github.com/wbond/oscrypto/issues/15, we need to add OIDs from https://github.com/wbond/oscrypto/blob/master/oscrypto/_osx/trust_list.py#L93-L111 to https://github.com/wbond/asn1crypto/blob/master/asn1crypto/x509.py#L1531-L1591\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/16", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/16/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/16/events", "html_url": "https://github.com/wbond/asn1crypto/issues/16", "id": 156479153, "node_id": "MDU6SXNzdWUxNTY0NzkxNTM=", "number": 16, "title": "Cannot build with pybuild: command 'CleanCommand' has no such option 'all'", "user": {"login": "joernheissler", "id": 865592, "node_id": "MDQ6VXNlcjg2NTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/865592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joernheissler", "html_url": "https://github.com/joernheissler", "followers_url": "https://api.github.com/users/joernheissler/followers", "following_url": "https://api.github.com/users/joernheissler/following{/other_user}", "gists_url": "https://api.github.com/users/joernheissler/gists{/gist_id}", "starred_url": "https://api.github.com/users/joernheissler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joernheissler/subscriptions", "organizations_url": "https://api.github.com/users/joernheissler/orgs", "repos_url": "https://api.github.com/users/joernheissler/repos", "events_url": "https://api.github.com/users/joernheissler/events{/privacy}", "received_events_url": "https://api.github.com/users/joernheissler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-24T11:01:48Z", "updated_at": "2016-06-16T09:57:27Z", "closed_at": "2016-06-16T09:57:27Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "$ pybuild\nI: pybuild base:184: python3.5 setup.py clean\nrunning clean\nerror: error in /home/wulf/git/oss/asn1crypto/.pybuild/pythonX.Y_3.5/.pydistutils.cfg: command 'CleanCommand' has no such option 'all'\nE: pybuild pybuild:319: plugin distutils failed: exit code=1: python3.5 setup.py clean\n\n$ cat .pybuild/pythonX.Y_3.5/.pydistutils.cfg\n[clean]\nall=1\n[build]\nbuild-lib=/home/wulf/git/oss/asn1crypto/.pybuild/pythonX.Y_3.5/build\n[install]\ninstall-layout=deb\ninstall-scripts=/usr/bin\ninstall-lib=/usr/lib/python3.5/dist-packages\n[easy_install]\nallow_hosts=None\n\nI found a fix, but don't know how correct it is:\nAdd to setup.py:\nboolean_options = ['all']\ndef initialize_options(self):\n  self.all = None\n\nMore or less copy+pasted from /usr/lib/python3.5/distutils/command/clean.py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/15", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/15/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/15/events", "html_url": "https://github.com/wbond/asn1crypto/issues/15", "id": 154469550, "node_id": "MDU6SXNzdWUxNTQ0Njk1NTA=", "number": 15, "title": "asn1crypto raise exception parsing indefinite length", "user": {"login": "wfranzini", "id": 5097668, "node_id": "MDQ6VXNlcjUwOTc2Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5097668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wfranzini", "html_url": "https://github.com/wfranzini", "followers_url": "https://api.github.com/users/wfranzini/followers", "following_url": "https://api.github.com/users/wfranzini/following{/other_user}", "gists_url": "https://api.github.com/users/wfranzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/wfranzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wfranzini/subscriptions", "organizations_url": "https://api.github.com/users/wfranzini/orgs", "repos_url": "https://api.github.com/users/wfranzini/repos", "events_url": "https://api.github.com/users/wfranzini/events{/privacy}", "received_events_url": "https://api.github.com/users/wfranzini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-12T12:24:51Z", "updated_at": "2016-06-16T11:30:09Z", "closed_at": "2016-06-16T11:30:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nas showed in the test case addedd with #14 asn1crypto explodes parsing a .p7m file with indefinite lengths:\n\nValueError: Insufficient data - 57904015269414514108800405237541285051975119636830231669355043598084451101117 bytes requested but only 57362 available\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/wbond/asn1crypto/issues/13", "repository_url": "https://api.github.com/repos/wbond/asn1crypto", "labels_url": "https://api.github.com/repos/wbond/asn1crypto/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/wbond/asn1crypto/issues/13/comments", "events_url": "https://api.github.com/repos/wbond/asn1crypto/issues/13/events", "html_url": "https://github.com/wbond/asn1crypto/issues/13", "id": 144254469, "node_id": "MDU6SXNzdWUxNDQyNTQ0Njk=", "number": 13, "title": "Error parsing X509", "user": {"login": "Sebubu", "id": 8782386, "node_id": "MDQ6VXNlcjg3ODIzODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8782386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sebubu", "html_url": "https://github.com/Sebubu", "followers_url": "https://api.github.com/users/Sebubu/followers", "following_url": "https://api.github.com/users/Sebubu/following{/other_user}", "gists_url": "https://api.github.com/users/Sebubu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sebubu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sebubu/subscriptions", "organizations_url": "https://api.github.com/users/Sebubu/orgs", "repos_url": "https://api.github.com/users/Sebubu/repos", "events_url": "https://api.github.com/users/Sebubu/events{/privacy}", "received_events_url": "https://api.github.com/users/Sebubu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-29T12:46:25Z", "updated_at": "2016-03-29T13:37:24Z", "closed_at": "2016-03-29T13:31:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys\nI've found a problem parsing a certificate with oscrypto. It looks like it's a asn1crypto error.\n\nCertificate: HTTPS certificate of https://www.admin.ch\n\n``` python\nfrom oscrypto.asymmetric import load_certificate\ncert = load_certificate('/home/severin/Downloads/admin.ch.crt')\ncert.asn1.native\n```\n\ncert.asn1.native raises AttributeError: 'int' object has no attribute 'decode'\nStacktrace:\n\n>  Traceback (most recent call last):\n>   File \"/home/osboxes/PycharmProjects/StrongMan/strongMan/tests/certificates/test_container.py\", line 368, in test_load_cert\n>     cert.asn1.native\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 2846, in native\n>     self._native[name] = child.native\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 2846, in native\n>     self._native[name] = child.native\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 3308, in native\n>     self._native = [child.native for child in self]\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 3308, in <listcomp>\n>     self._native = [child.native for child in self]\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 2846, in native\n>     self._native[name] = child.native\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 1804, in native\n>     self._native = self._parsed[0].native\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 3308, in native\n>     self._native = [child.native for child in self]\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 3308, in <listcomp>\n>     self._native = [child.native for child in self]\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 2846, in native\n>     self._native[name] = child.native\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 829, in native\n>     return self.chosen.native\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 3308, in native\n>     self._native = [child.native for child in self]\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 3308, in <listcomp>\n>     self._native = [child.native for child in self]\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 829, in native\n>     return self.chosen.native\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/core.py\", line 1128, in native\n>     self._native = self.__unicode__()\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/x509.py\", line 150, in **unicode**\n>     return uri_to_iri(self.contents)\n>   File \"/usr/local/lib/python3.5/dist-packages/asn1crypto/_iri.py\", line 135, in uri_to_iri\n>     port = port.decode('ascii')\n>  AttributeError: 'int' object has no attribute 'decode'\n", "performed_via_github_app": null, "score": 1.0}]}