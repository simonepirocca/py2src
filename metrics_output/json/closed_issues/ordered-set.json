{"total_count": 23, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/69", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/69/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/69/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/69", "id": 640109941, "node_id": "MDU6SXNzdWU2NDAxMDk5NDE=", "number": 69, "title": "a bug in a new version of ordered_set", "user": {"login": "lotus-devo", "id": 62652254, "node_id": "MDQ6VXNlcjYyNjUyMjU0", "avatar_url": "https://avatars2.githubusercontent.com/u/62652254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lotus-devo", "html_url": "https://github.com/lotus-devo", "followers_url": "https://api.github.com/users/lotus-devo/followers", "following_url": "https://api.github.com/users/lotus-devo/following{/other_user}", "gists_url": "https://api.github.com/users/lotus-devo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lotus-devo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lotus-devo/subscriptions", "organizations_url": "https://api.github.com/users/lotus-devo/orgs", "repos_url": "https://api.github.com/users/lotus-devo/repos", "events_url": "https://api.github.com/users/lotus-devo/events{/privacy}", "received_events_url": "https://api.github.com/users/lotus-devo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-17T03:23:34Z", "updated_at": "2020-06-17T20:51:07Z", "closed_at": "2020-06-17T20:51:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run a pylatex program on ubuntu on Ubuntu 16.04 with Python 3.5. I got following error:\r\nTraceback (most recent call last):\r\n  File \"test1.py\", line 2, in <module>\r\n    import pylatex as pl\r\n  File \"/home/dongl/.local/lib/python3.5/site-packages/pylatex/__init__.py\", line 8, in <module>\r\n    from .basic import HugeText, NewPage, LineBreak, NewLine, HFill, LargeText, \\\r\n  File \"/home/dongl/.local/lib/python3.5/site-packages/pylatex/basic.py\", line 9, in <module>\r\n    from .base_classes import CommandBase, Environment, ContainerCommand\r\n  File \"/home/dongl/.local/lib/python3.5/site-packages/pylatex/base_classes/__init__.py\", line 8, in <module>\r\n    from .latex_object import LatexObject\r\n  File \"/home/dongl/.local/lib/python3.5/site-packages/pylatex/base_classes/latex_object.py\", line 9, in <module>\r\n    from ordered_set import OrderedSet\r\n  File \"/home/dongl/.local/lib/python3.5/site-packages/ordered_set.py\", line 51, in <module>\r\n    class OrderedSet(MutableSet[T], Sequence[T]):\r\n  File \"/home/dongl/.local/lib/python3.5/site-packages/ordered_set.py\", line 186, in OrderedSet\r\n    def update(self, sequence: SetLike[T]) -> int:\r\n  File \"/usr/lib/python3.5/typing.py\", line 546, in __getitem__\r\n    \"Cannot subscript an existing Union. Use Union[u, t] instead.\")\r\nTypeError: Cannot subscript an existing Union. Use Union[u, t] instead.\r\n\r\n\r\nSiunds like a bug in view version of ordered_set, how can I solve this?\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/67", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/67/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/67/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/67", "id": 615324450, "node_id": "MDU6SXNzdWU2MTUzMjQ0NTA=", "number": 67, "title": "Python 3.5 is not actually supported", "user": {"login": "rominf", "id": 3449635, "node_id": "MDQ6VXNlcjM0NDk2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3449635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rominf", "html_url": "https://github.com/rominf", "followers_url": "https://api.github.com/users/rominf/followers", "following_url": "https://api.github.com/users/rominf/following{/other_user}", "gists_url": "https://api.github.com/users/rominf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rominf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rominf/subscriptions", "organizations_url": "https://api.github.com/users/rominf/orgs", "repos_url": "https://api.github.com/users/rominf/repos", "events_url": "https://api.github.com/users/rominf/events{/privacy}", "received_events_url": "https://api.github.com/users/rominf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-10T06:02:52Z", "updated_at": "2020-06-17T20:51:19Z", "closed_at": "2020-06-17T20:51:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm building ConceptNet 5.7 on Ubuntu 16.04 with Python 3.5. I get following error:\r\n```\r\n  File \"/home/conceptnet/conceptnet5/conceptnet5/db/prepare_data.py\", line 6, in <module>\r\n    from ordered_set import OrderedSet\r\n  File \"/home/conceptnet/env/lib/python3.5/site-packages/ordered_set.py\", line 51, in <module>\r\n    class OrderedSet(MutableSet[T], Sequence[T]):\r\n  File \"/home/conceptnet/env/lib/python3.5/site-packages/ordered_set.py\", line 186, in OrderedSet\r\n    def update(self, sequence: SetLike[T]) -> int:\r\n  File \"/usr/lib/python3.5/typing.py\", line 546, in __getitem__\r\n    \"Cannot subscript an existing Union. Use Union[u, t] instead.\")\r\nTypeError: Cannot subscript an existing Union. Use Union[u, t] instead.\r\n```\r\n\r\nLooks like compatibility with Python 3.5 was lost. I suggest to remove it from a list of supported Python versions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/62", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/62/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/62/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/62", "id": 569451094, "node_id": "MDU6SXNzdWU1Njk0NTEwOTQ=", "number": 62, "title": "Adding FrozenOrderedSet", "user": {"login": "Eric-Arellano", "id": 14852634, "node_id": "MDQ6VXNlcjE0ODUyNjM0", "avatar_url": "https://avatars3.githubusercontent.com/u/14852634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eric-Arellano", "html_url": "https://github.com/Eric-Arellano", "followers_url": "https://api.github.com/users/Eric-Arellano/followers", "following_url": "https://api.github.com/users/Eric-Arellano/following{/other_user}", "gists_url": "https://api.github.com/users/Eric-Arellano/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eric-Arellano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eric-Arellano/subscriptions", "organizations_url": "https://api.github.com/users/Eric-Arellano/orgs", "repos_url": "https://api.github.com/users/Eric-Arellano/repos", "events_url": "https://api.github.com/users/Eric-Arellano/events{/privacy}", "received_events_url": "https://api.github.com/users/Eric-Arellano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-23T07:25:31Z", "updated_at": "2020-02-24T03:31:39Z", "closed_at": "2020-02-24T03:31:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey Robyn, would you be willing to consider me putting up a PR to create a `FrozenOrderedSet` to go along with `OrderedSet`, similar to the stdlib's `set` vs. `frozenset`? (Followup to https://github.com/LuminosoInsight/ordered-set/issues/35).\r\n\r\nMy project wants a collection with three properties:\r\n\r\n1) deduplicates elements\r\n2) consistent iteration order\r\n3) immutability\r\n\r\nThere are multiple collections that implement 2 of the 3, but none that implement all 3 in the Python ecosystem.\r\n\r\nI know we could inline this or I could create my own library, but I wanted to try contributing to this repo first as I believe it will be helpful to others like @rominf and I don't want to bifurcate the community.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/59", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/59/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/59/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/59", "id": 542960755, "node_id": "MDU6SXNzdWU1NDI5NjA3NTU=", "number": 59, "title": "Dropping Python 2 support", "user": {"login": "Eric-Arellano", "id": 14852634, "node_id": "MDQ6VXNlcjE0ODUyNjM0", "avatar_url": "https://avatars3.githubusercontent.com/u/14852634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eric-Arellano", "html_url": "https://github.com/Eric-Arellano", "followers_url": "https://api.github.com/users/Eric-Arellano/followers", "following_url": "https://api.github.com/users/Eric-Arellano/following{/other_user}", "gists_url": "https://api.github.com/users/Eric-Arellano/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eric-Arellano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eric-Arellano/subscriptions", "organizations_url": "https://api.github.com/users/Eric-Arellano/orgs", "repos_url": "https://api.github.com/users/Eric-Arellano/repos", "events_url": "https://api.github.com/users/Eric-Arellano/events{/privacy}", "received_events_url": "https://api.github.com/users/Eric-Arellano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-27T18:56:17Z", "updated_at": "2020-02-23T07:07:32Z", "closed_at": "2020-02-23T07:07:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello. Thank you for this awesome library!\r\n\r\nI'm wondering if you have thought about removing Python 2 support? \r\n\r\nThe main benefit would be being able to move the type hints from the type stub library directly to the source implementation. This would simplify things for type-hint users because type hints would work out of the box, rather than needing to install a separate library and needing to ensure that MyPy points to the stubs.\r\n\r\n--\r\n\r\nThanks to `setup.py`'s `python_requires`, Python 2 users would safely resolve `ordered-set==3.1.1` when calling `pip2 install ordered-set`. Meanwhile, Python 3 users would resolve the newest version, e.g. `ordered-set==4.0.0`.\r\n\r\nThat is, this won't negatively impact Python 2 users at all outside of missing possible future changes (although, this library seems very stable already).\r\n\r\n--\r\n\r\nGiven the go-ahead, I'd be happy to put up a PR that inlines the type hints, tweaks `setup.py`, and runs MyPy in CI.\r\n\r\n(Type stubs give some issues to the wrapper around MyPy that I'm using, so I would love to see this change and am eager to help however possible.)\r\n\r\n--\r\n\r\nFinally, see https://python3statement.org for precedent from most of the Python ecosystem for no longer supporting Python 2 once it goes EOL in 5 days. Includes Pytest, TensorFlow, Apache Spark, and Requests. https://python3statement.org", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/55", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/55/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/55/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/55", "id": 477006397, "node_id": "MDU6SXNzdWU0NzcwMDYzOTc=", "number": 55, "title": "Equality comparisons with regular set don't commute", "user": {"login": "wimglenn", "id": 6615374, "node_id": "MDQ6VXNlcjY2MTUzNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6615374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wimglenn", "html_url": "https://github.com/wimglenn", "followers_url": "https://api.github.com/users/wimglenn/followers", "following_url": "https://api.github.com/users/wimglenn/following{/other_user}", "gists_url": "https://api.github.com/users/wimglenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/wimglenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wimglenn/subscriptions", "organizations_url": "https://api.github.com/users/wimglenn/orgs", "repos_url": "https://api.github.com/users/wimglenn/repos", "events_url": "https://api.github.com/users/wimglenn/events{/privacy}", "received_events_url": "https://api.github.com/users/wimglenn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-08-05T18:51:56Z", "updated_at": "2020-01-13T16:19:27Z", "closed_at": "2020-01-13T16:19:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Equality with set is not commutative:\r\n\r\n```\r\n>>> s = {'x', 'y'}\r\n>>> os = OrderedSet(['x', 'y'])\r\n>>> s == os\r\nFalse\r\n>>> os == s\r\nTrue\r\n```\r\n\r\nIt will be difficult to fix because this returns `False` instead of `NotImplemented`\r\n\r\n```\r\n>>> s.__eq__(os)\r\nFalse\r\n```\r\n\r\nI'm not sure the best way forward.  You can allow `OrderedSet.__eq__` to take the precedence if it is a proper set subclass..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/54", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/54/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/54/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/54", "id": 476333311, "node_id": "MDU6SXNzdWU0NzYzMzMzMTE=", "number": 54, "title": "Tag 3.1.1", "user": {"login": "wimglenn", "id": 6615374, "node_id": "MDQ6VXNlcjY2MTUzNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6615374?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wimglenn", "html_url": "https://github.com/wimglenn", "followers_url": "https://api.github.com/users/wimglenn/followers", "following_url": "https://api.github.com/users/wimglenn/following{/other_user}", "gists_url": "https://api.github.com/users/wimglenn/gists{/gist_id}", "starred_url": "https://api.github.com/users/wimglenn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wimglenn/subscriptions", "organizations_url": "https://api.github.com/users/wimglenn/orgs", "repos_url": "https://api.github.com/users/wimglenn/repos", "events_url": "https://api.github.com/users/wimglenn/events{/privacy}", "received_events_url": "https://api.github.com/users/wimglenn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-02T19:55:25Z", "updated_at": "2020-04-29T16:05:30Z", "closed_at": "2020-04-29T16:05:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you push a git tag for the v3.1.1 release currently on PyPI, please?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/45", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/45/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/45/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/45", "id": 371736406, "node_id": "MDU6SXNzdWUzNzE3MzY0MDY=", "number": 45, "title": "Efficiency of difference_update is much worse than set", "user": {"login": "Erotemic", "id": 3186211, "node_id": "MDQ6VXNlcjMxODYyMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3186211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erotemic", "html_url": "https://github.com/Erotemic", "followers_url": "https://api.github.com/users/Erotemic/followers", "following_url": "https://api.github.com/users/Erotemic/following{/other_user}", "gists_url": "https://api.github.com/users/Erotemic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erotemic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erotemic/subscriptions", "organizations_url": "https://api.github.com/users/Erotemic/orgs", "repos_url": "https://api.github.com/users/Erotemic/repos", "events_url": "https://api.github.com/users/Erotemic/events{/privacy}", "received_events_url": "https://api.github.com/users/Erotemic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-18T22:21:19Z", "updated_at": "2018-11-29T14:29:01Z", "closed_at": "2018-11-29T14:29:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I use ordered-set quite a bit, and I noticed the difference_update op was taking an extremely long time. \r\n\r\nAfter looking into it I found that the current implementation of difference_update makes M calls to discard where M is the number of items to remove. \r\n\r\n```python\r\n        for item in it.chain.from_iterable(sets):\r\n            self.discard(item)\r\n```\r\n\r\nThen I took a look at the discard logic and it actually needs to make an O(N) loop to update indices after each discard.\r\n\r\nI wrote a benchmark script to investigate how much of a problem this causes: \r\n\r\n```python\r\n\r\n\"\"\"\r\nRequirements:\r\n    pip install timerit\r\n\"\"\"\r\nimport timerit\r\nimport copy\r\nimport ordered_set\r\n\r\n\r\ndef benchmark_difference_update():\r\n    N = 1000\r\n    items = list(range(N))\r\n\r\n    o_set = ordered_set.OrderedSet(items)\r\n    u_set = set(items)\r\n\r\n    to_remove = items[::2]\r\n\r\n    for timer in timerit.Timerit(100, bestof=3, label='(Unordered) difference update (inplace)'):\r\n        _u_set = copy.deepcopy(u_set)\r\n        with timer:\r\n            _u_set.difference_update(to_remove)\r\n\r\n    for timer in timerit.Timerit(10, bestof=3, label='(Ordered) difference update (inplace)'):\r\n        _o_set = copy.deepcopy(o_set)\r\n        with timer:\r\n            _o_set.difference_update(to_remove)\r\n\r\n    for timer in timerit.Timerit(100, bestof=3, label='(Ordered) difference (not inplace)'):\r\n        with timer:\r\n            _new_o_set = o_set.difference(to_remove)\r\n\r\n    def _discard_update_alternative(self, *sets):\r\n        import itertools as it\r\n        keys = set(it.chain(*sets))\r\n        _discard_many(self, keys)\r\n\r\n    def _discard_many(self, keys):\r\n        \"\"\"\r\n        sets = [to_remove]\r\n        self = o_set\r\n        \"\"\"\r\n        idxs = [self.map[key] for key in keys]\r\n        # Remove indices in reverse order\r\n        for idx in sorted(idxs)[::-1]:\r\n            del self.items[idx]\r\n\r\n        # Update mapping requires O(N) traversal\r\n        # I don't see any way around it (doesn't mean there isn't one)\r\n        for idx, key in enumerate(self.items):\r\n            self.map[key] = idx\r\n\r\n    for timer in timerit.Timerit(100, bestof=3, label='(Ordered) difference update (inplace alt impl)'):\r\n        _o_set_alt = copy.deepcopy(o_set)\r\n        with timer:\r\n            _discard_update_alternative(_o_set_alt, to_remove)\r\n\r\n    assert _o_set_alt == _new_o_set\r\n    assert _o_set_alt == _o_set\r\n    assert _u_set == _o_set\r\n```\r\n\r\nIn these tests I test difference_update with (1) the builtin set class, (2) the OrderedSet class, (3) the non-inplace version of OrderedSet.difference and (4) an alternate implementation of OrderedSet.difference_update. \r\n\r\nThe results are clear:\r\n\r\n```\r\nTimed best=9.976 \u00b5s, mean=10.163 \u00b1 0.1 \u00b5s for (Unordered) difference update (inplace)\r\nTimed best=39.947 ms, mean=40.133 \u00b1 0.2 ms for (Ordered) difference update (inplace)\r\nTimed best=367.376 \u00b5s, mean=378.990 \u00b1 22.6 \u00b5s for (Ordered) difference (not inplace)\r\n\r\nTimed best=177.687 \u00b5s, mean=187.137 \u00b1 8.0 \u00b5s for (Ordered) difference update (inplace alt impl)\r\n```\r\n\r\nUnordered set differences are by far the fastest. When N=1000 OrderedSet is 4000x slower than builtins.set.\r\n\r\nIf one was to use OrderedSet.difference instead of OrderedSet.difference_update, you are only 40x slower, which is much better. \r\n\r\nMy alternate implementation of difference_update makes use of a `discard_many` function, which is much more efficient when multiple items are discarded as it saves the O(N) map update until the end. I'm not sure if there is any way around this O(N) update. If there is it would likely require modifying the underlying data structure. However, the O(N) overhead cost is much better than the O(N*M) overhead that was previously incurred. With my alt implementation OrderedSet is only 20x slower than builtins.set. Not perfect, but better. \r\n\r\nThe `intersection_update` also has the O(N * M) overhead. It probably makes sense to simply rewrite it in terms of `difference_update`, so we only have to worry about optimizing code in one place. IE: \r\n\r\n```python\r\n    def intersection_update_alt(self, other):\r\n        to_remove = [item for item in self if item not in other]\r\n        self.difference_update(to_remove)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/43", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/43/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/43/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/43", "id": 364471993, "node_id": "MDU6SXNzdWUzNjQ0NzE5OTM=", "number": 43, "title": "Is this a backport of collections.OrderedSet?", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-27T13:17:57Z", "updated_at": "2018-09-27T13:19:49Z", "closed_at": "2018-09-27T13:19:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Great work here.\r\nCan this be used as a replacement for collections.OrderedSet for libraries who support Python 2.7?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/35", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/35/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/35/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/35", "id": 358091560, "node_id": "MDU6SXNzdWUzNTgwOTE1NjA=", "number": 35, "title": "Support an option to create immutable set", "user": {"login": "rominf", "id": 3449635, "node_id": "MDQ6VXNlcjM0NDk2MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3449635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rominf", "html_url": "https://github.com/rominf", "followers_url": "https://api.github.com/users/rominf/followers", "following_url": "https://api.github.com/users/rominf/following{/other_user}", "gists_url": "https://api.github.com/users/rominf/gists{/gist_id}", "starred_url": "https://api.github.com/users/rominf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rominf/subscriptions", "organizations_url": "https://api.github.com/users/rominf/orgs", "repos_url": "https://api.github.com/users/rominf/repos", "events_url": "https://api.github.com/users/rominf/events{/privacy}", "received_events_url": "https://api.github.com/users/rominf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-07T14:33:21Z", "updated_at": "2020-01-15T02:47:57Z", "closed_at": "2019-03-06T19:42:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I need to pass ordered set as function default argument, therefore, I need an immutable set. Please provide a way to create an immutable set.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/34", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/34/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/34/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/34", "id": 357574745, "node_id": "MDU6SXNzdWUzNTc1NzQ3NDU=", "number": 34, "title": "Wanting to do range queries with OrderedSet", "user": {"login": "winash12", "id": 9129700, "node_id": "MDQ6VXNlcjkxMjk3MDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9129700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/winash12", "html_url": "https://github.com/winash12", "followers_url": "https://api.github.com/users/winash12/followers", "following_url": "https://api.github.com/users/winash12/following{/other_user}", "gists_url": "https://api.github.com/users/winash12/gists{/gist_id}", "starred_url": "https://api.github.com/users/winash12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/winash12/subscriptions", "organizations_url": "https://api.github.com/users/winash12/orgs", "repos_url": "https://api.github.com/users/winash12/repos", "events_url": "https://api.github.com/users/winash12/events{/privacy}", "received_events_url": "https://api.github.com/users/winash12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-06T09:39:05Z", "updated_at": "2018-09-07T15:39:05Z", "closed_at": "2018-09-07T14:44:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/32", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/32/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/32/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/32", "id": 338711928, "node_id": "MDU6SXNzdWUzMzg3MTE5Mjg=", "number": 32, "title": "\"native\" implementation on python 3.7? ", "user": {"login": "burnpanck", "id": 1310437, "node_id": "MDQ6VXNlcjEzMTA0Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1310437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burnpanck", "html_url": "https://github.com/burnpanck", "followers_url": "https://api.github.com/users/burnpanck/followers", "following_url": "https://api.github.com/users/burnpanck/following{/other_user}", "gists_url": "https://api.github.com/users/burnpanck/gists{/gist_id}", "starred_url": "https://api.github.com/users/burnpanck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burnpanck/subscriptions", "organizations_url": "https://api.github.com/users/burnpanck/orgs", "repos_url": "https://api.github.com/users/burnpanck/repos", "events_url": "https://api.github.com/users/burnpanck/events{/privacy}", "received_events_url": "https://api.github.com/users/burnpanck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-05T20:16:44Z", "updated_at": "2018-07-07T16:08:46Z", "closed_at": "2018-07-07T16:08:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since in python 3.7 the insertion-order preservation nature of dict objects [has been declared](https://mail.python.org/pipermail/python-dev/2017-December/151283.html) to be an official part of the Python language spec (see [What\u2019s New In Python 3.7](https://docs.python.org/3.7/whatsnew/3.7.html)), `dict` is already almost an ordered-set, except for that it doesn't have the interface of a set. Likely, wrapping `dict` such that it's keys are exposed with the interface of `ordered-set` would be more efficient than the python implementation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/28", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/28/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/28/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/28", "id": 332473235, "node_id": "MDU6SXNzdWUzMzI0NzMyMzU=", "number": 28, "title": "Comparison operators are inconsistent", "user": {"login": "rspeer", "id": 234227, "node_id": "MDQ6VXNlcjIzNDIyNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/234227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rspeer", "html_url": "https://github.com/rspeer", "followers_url": "https://api.github.com/users/rspeer/followers", "following_url": "https://api.github.com/users/rspeer/following{/other_user}", "gists_url": "https://api.github.com/users/rspeer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rspeer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rspeer/subscriptions", "organizations_url": "https://api.github.com/users/rspeer/orgs", "repos_url": "https://api.github.com/users/rspeer/repos", "events_url": "https://api.github.com/users/rspeer/events{/privacy}", "received_events_url": "https://api.github.com/users/rspeer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-14T16:20:04Z", "updated_at": "2018-06-14T18:26:31Z", "closed_at": "2018-06-14T18:26:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Because we implement an order-sensitive `__eq__` but inherit methods such as `__le__` from OrderedSet, we get this inconsistent result:\r\n\r\n```\r\n>>> from ordered_set import OrderedSet\r\n>>> a = OrderedSet(['b', 'a'])\r\n>>> b = OrderedSet(['a', 'b'])\r\n>>> a < b\r\nFalse\r\n>>> a > b\r\nFalse\r\n>>> a == b\r\nFalse\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/26", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/26/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/26/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/26", "id": 275749730, "node_id": "MDU6SXNzdWUyNzU3NDk3MzA=", "number": 26, "title": "Add support for typing annotations", "user": {"login": "nicoulaj", "id": 3162, "node_id": "MDQ6VXNlcjMxNjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoulaj", "html_url": "https://github.com/nicoulaj", "followers_url": "https://api.github.com/users/nicoulaj/followers", "following_url": "https://api.github.com/users/nicoulaj/following{/other_user}", "gists_url": "https://api.github.com/users/nicoulaj/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoulaj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoulaj/subscriptions", "organizations_url": "https://api.github.com/users/nicoulaj/orgs", "repos_url": "https://api.github.com/users/nicoulaj/repos", "events_url": "https://api.github.com/users/nicoulaj/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoulaj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-21T15:19:13Z", "updated_at": "2018-09-29T17:22:59Z", "closed_at": "2018-09-12T18:43:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice if OrderedSet supported PEP 484 typing module, so that we can do in Python 3:\r\n```\r\nmy_set: OrderedSet[Context] = OrderedSet()\r\n```\r\n\r\nRight now pycharm/pylint flag it as a typing error:\r\n```\r\nClass 'type' does not define '__getitem__', so the '[]' operator cannot be used on its instances\r\n```\r\nRelated: PyCQA/pylint#1657", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/22", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/22/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/22/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/22", "id": 195198211, "node_id": "MDU6SXNzdWUxOTUxOTgyMTE=", "number": 22, "title": "Adapt with normal set?", "user": {"login": "minghu6", "id": 13537217, "node_id": "MDQ6VXNlcjEzNTM3MjE3", "avatar_url": "https://avatars2.githubusercontent.com/u/13537217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minghu6", "html_url": "https://github.com/minghu6", "followers_url": "https://api.github.com/users/minghu6/followers", "following_url": "https://api.github.com/users/minghu6/following{/other_user}", "gists_url": "https://api.github.com/users/minghu6/gists{/gist_id}", "starred_url": "https://api.github.com/users/minghu6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minghu6/subscriptions", "organizations_url": "https://api.github.com/users/minghu6/orgs", "repos_url": "https://api.github.com/users/minghu6/repos", "events_url": "https://api.github.com/users/minghu6/events{/privacy}", "received_events_url": "https://api.github.com/users/minghu6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-13T09:12:00Z", "updated_at": "2016-12-25T14:28:24Z", "closed_at": "2016-12-25T14:28:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why not wrap up the `OrderedSet` and some set operation(such as `issubset` `injection`) in a new class, \r\nThe new class is an ordered set and can interact with normal set", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/21", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/21/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/21/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/21", "id": 194504533, "node_id": "MDU6SXNzdWUxOTQ1MDQ1MzM=", "number": 21, "title": "Performance", "user": {"login": "u2", "id": 161756, "node_id": "MDQ6VXNlcjE2MTc1Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/161756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/u2", "html_url": "https://github.com/u2", "followers_url": "https://api.github.com/users/u2/followers", "following_url": "https://api.github.com/users/u2/following{/other_user}", "gists_url": "https://api.github.com/users/u2/gists{/gist_id}", "starred_url": "https://api.github.com/users/u2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/u2/subscriptions", "organizations_url": "https://api.github.com/users/u2/orgs", "repos_url": "https://api.github.com/users/u2/repos", "events_url": "https://api.github.com/users/u2/events{/privacy}", "received_events_url": "https://api.github.com/users/u2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-09T03:21:08Z", "updated_at": "2016-12-11T14:50:31Z", "closed_at": "2016-12-09T16:43:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have benchmarked this implementation, but it seems that it does not have a better performance.\r\n```python\r\n\r\nimport time\r\n\r\nimport collections\r\n\r\nclass OrderedSet(collections.MutableSet):\r\n\r\n    def __init__(self, iterable=None):\r\n        self.end = end = [] \r\n        end += [None, end, end]         # sentinel node for doubly linked list\r\n        self.map = {}                   # key --> [key, prev, next]\r\n        if iterable is not None:\r\n            self |= iterable\r\n\r\n    def __len__(self):\r\n        return len(self.map)\r\n\r\n    def __contains__(self, key):\r\n        return key in self.map\r\n\r\n    def add(self, key):\r\n        if key not in self.map:\r\n            end = self.end\r\n            curr = end[1]\r\n            curr[2] = end[1] = self.map[key] = [key, curr, end]\r\n\r\n    def discard(self, key):\r\n        if key in self.map:        \r\n            key, prev, next = self.map.pop(key)\r\n            prev[2] = next\r\n            next[1] = prev\r\n\r\n    def __iter__(self):\r\n        end = self.end\r\n        curr = end[2]\r\n        while curr is not end:\r\n            yield curr[0]\r\n            curr = curr[2]\r\n\r\n    def __reversed__(self):\r\n        end = self.end\r\n        curr = end[1]\r\n        while curr is not end:\r\n            yield curr[0]\r\n            curr = curr[1]\r\n\r\n    def pop(self, last=True):\r\n        if not self:\r\n            raise KeyError('set is empty')\r\n        key = self.end[1][0] if last else self.end[2][0]\r\n        self.discard(key)\r\n        return key\r\n\r\n    def __repr__(self):\r\n        if not self:\r\n            return '%s()' % (self.__class__.__name__,)\r\n        return '%s(%r)' % (self.__class__.__name__, list(self))\r\n\r\n    def __eq__(self, other):\r\n        if isinstance(other, OrderedSet):\r\n            return len(self) == len(other) and list(self) == list(other)\r\n        return set(self) == set(other)\r\n\r\n\r\n\"\"\"\r\nAn OrderedSet is a custom MutableSet that remembers its order, so that every\r\nentry has an index that can be looked up.\r\n\r\nBased on a recipe originally posted to ActiveState Recipes by Raymond Hettiger,\r\nand released under the MIT license.\r\n\r\nRob Speer's changes are as follows:\r\n\r\n    - changed the content from a doubly-linked list to a regular Python list.\r\n      Seriously, who wants O(1) deletes but O(N) lookups by index?\r\n    - add() returns the index of the added item\r\n    - index() just returns the index of an item\r\n    - added a __getstate__ and __setstate__ so it can be pickled\r\n    - added __getitem__\r\n\"\"\"\r\nimport collections\r\n\r\nSLICE_ALL = slice(None)\r\n__version__ = '2.0.1'\r\n\r\n\r\ndef is_iterable(obj):\r\n    \"\"\"\r\n    Are we being asked to look up a list of things, instead of a single thing?\r\n    We check for the `__iter__` attribute so that this can cover types that\r\n    don't have to be known by this module, such as NumPy arrays.\r\n\r\n    Strings, however, should be considered as atomic values to look up, not\r\n    iterables. The same goes for tuples, since they are immutable and therefore\r\n    valid entries.\r\n\r\n    We don't need to check for the Python 2 `unicode` type, because it doesn't\r\n    have an `__iter__` attribute anyway.\r\n    \"\"\"\r\n    return hasattr(obj, '__iter__') and not isinstance(obj, str) and not isinstance(obj, tuple)\r\n\r\n\r\nclass OrderedSet2(collections.MutableSet):\r\n    \"\"\"\r\n    An OrderedSet is a custom MutableSet that remembers its order, so that\r\n    every entry has an index that can be looked up.\r\n    \"\"\"\r\n    def __init__(self, iterable=None):\r\n        self.items = []\r\n        self.map = {}\r\n        if iterable is not None:\r\n            self |= iterable\r\n\r\n    def __len__(self):\r\n        return len(self.items)\r\n\r\n    def __getitem__(self, index):\r\n        \"\"\"\r\n        Get the item at a given index.\r\n\r\n        If `index` is a slice, you will get back that slice of items. If it's\r\n        the slice [:], exactly the same object is returned. (If you want an\r\n        independent copy of an OrderedSet, use `OrderedSet.copy()`.)\r\n\r\n        If `index` is an iterable, you'll get the OrderedSet of items\r\n        corresponding to those indices. This is similar to NumPy's\r\n        \"fancy indexing\".\r\n        \"\"\"\r\n        if index == SLICE_ALL:\r\n            return self\r\n        elif hasattr(index, '__index__') or isinstance(index, slice):\r\n            result = self.items[index]\r\n            if isinstance(result, list):\r\n                return OrderedSet(result)\r\n            else:\r\n                return result\r\n        elif is_iterable(index):\r\n            return OrderedSet([self.items[i] for i in index])\r\n        else:\r\n            raise TypeError(\"Don't know how to index an OrderedSet by %r\" %\r\n                    index)\r\n\r\n    def copy(self):\r\n        return OrderedSet(self)\r\n\r\n    def __getstate__(self):\r\n        if len(self) == 0:\r\n            # The state can't be an empty list.\r\n            # We need to return a truthy value, or else __setstate__ won't be run.\r\n            #\r\n            # This could have been done more gracefully by always putting the state\r\n            # in a tuple, but this way is backwards- and forwards- compatible with\r\n            # previous versions of OrderedSet.\r\n            return (None,)\r\n        else:\r\n            return list(self)\r\n\r\n    def __setstate__(self, state):\r\n        if state == (None,):\r\n            self.__init__([])\r\n        else:\r\n            self.__init__(state)\r\n\r\n    def __contains__(self, key):\r\n        return key in self.map\r\n\r\n    def add(self, key):\r\n        \"\"\"\r\n        Add `key` as an item to this OrderedSet, then return its index.\r\n\r\n        If `key` is already in the OrderedSet, return the index it already\r\n        had.\r\n        \"\"\"\r\n        if key not in self.map:\r\n            self.map[key] = len(self.items)\r\n            self.items.append(key)\r\n        return self.map[key]\r\n    append = add\r\n\r\n    def update(self, sequence):\r\n        \"\"\"\r\n        Update the set with the given iterable sequence, then return the index\r\n        of the last element inserted.\r\n        \"\"\"\r\n        item_index = None\r\n        try:\r\n            for item in sequence:\r\n                item_index = self.add(item)\r\n        except TypeError:\r\n            raise ValueError('Argument needs to be an iterable, got %s' % type(sequence))\r\n        return item_index\r\n\r\n    def index(self, key):\r\n        \"\"\"\r\n        Get the index of a given entry, raising an IndexError if it's not\r\n        present.\r\n\r\n        `key` can be an iterable of entries that is not a string, in which case\r\n        this returns a list of indices.\r\n        \"\"\"\r\n        if is_iterable(key):\r\n            return [self.index(subkey) for subkey in key]\r\n        return self.map[key]\r\n\r\n    def pop(self):\r\n        \"\"\"\r\n        Remove and return the last element from the set.\r\n\r\n        Raises KeyError if the set is empty.\r\n        \"\"\"\r\n        if not self.items:\r\n            raise KeyError('Set is empty')\r\n\r\n        elem = self.items[-1]\r\n        del self.items[-1]\r\n        del self.map[elem]\r\n        return elem\r\n\r\n    def discard(self, key):\r\n        \"\"\"\r\n        Remove an element.  Do not raise an exception if absent.\r\n\r\n        The MutableSet mixin uses this to implement the .remove() method, which\r\n        *does* raise an error when asked to remove a non-existent item.\r\n        \"\"\"\r\n        if key in self:\r\n            i = self.map[key]\r\n            del self.items[i]\r\n            del self.map[key]\r\n            for k, v in self.map.items():\r\n                if v >= i:\r\n                    self.map[k] = v - 1\r\n\r\n    def clear(self):\r\n        \"\"\"\r\n        Remove all items from this OrderedSet.\r\n        \"\"\"\r\n        del self.items[:]\r\n        self.map.clear()\r\n\r\n    def __iter__(self):\r\n        return iter(self.items)\r\n\r\n    def __reversed__(self):\r\n        return reversed(self.items)\r\n\r\n    def __repr__(self):\r\n        if not self:\r\n            return '%s()' % (self.__class__.__name__,)\r\n        return '%s(%r)' % (self.__class__.__name__, list(self))\r\n\r\n    def __eq__(self, other):\r\n        if isinstance(other, OrderedSet):\r\n            return len(self) == len(other) and self.items == other.items\r\n        try:\r\n            other_as_set = set(other)\r\n        except TypeError:\r\n            # If `other` can't be converted into a set, it's not equal.\r\n            return False\r\n        else:\r\n            return set(self) == other_as_set\r\n\r\n\r\ndef processing(num, set1, item):\r\n  for i in range(num):\r\n    set1.add(item)\r\n    item in set1\r\n    set1.remove(item)\r\n    set1.add(item)\r\n    set1.pop()\r\n    set1.add(item)\r\n    set1.discard(item)\r\n\r\ndef benchmark(num):\r\n  set = OrderedSet(list(range(200)))\r\n  t1 = time.time()\r\n  processing(num, set, 300)\r\n  t2 = time.time()\r\n  elapsed = t2 - t1\r\n  print \"total time: %.4f\" % elapsed\r\n  print \"sum: %d\" % num\r\n\r\n  set = OrderedSet2(list(range(200)))\r\n  t1 = time.time()\r\n  processing(num, set, 300)\r\n  t2 = time.time()\r\n  elapsed = t2 - t1\r\n  print \"total time: %.4f\" % elapsed\r\n  print \"sum: %d\" % num\r\n\r\nif __name__ == '__main__':\r\n  benchmark(10000)\r\n\r\n```\r\n\r\nThe result is \r\n```\r\ntotal time: 0.0568\r\nsum: 10000\r\ntotal time: 0.3500\r\nsum: 10000\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/20", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/20/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/20/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/20", "id": 144173720, "node_id": "MDU6SXNzdWUxNDQxNzM3MjA=", "number": 20, "title": "version inconsistent?", "user": {"login": "martinitus", "id": 7611856, "node_id": "MDQ6VXNlcjc2MTE4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7611856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinitus", "html_url": "https://github.com/martinitus", "followers_url": "https://api.github.com/users/martinitus/followers", "following_url": "https://api.github.com/users/martinitus/following{/other_user}", "gists_url": "https://api.github.com/users/martinitus/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinitus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinitus/subscriptions", "organizations_url": "https://api.github.com/users/martinitus/orgs", "repos_url": "https://api.github.com/users/martinitus/repos", "events_url": "https://api.github.com/users/martinitus/events{/privacy}", "received_events_url": "https://api.github.com/users/martinitus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-29T06:49:26Z", "updated_at": "2016-03-29T18:01:21Z", "closed_at": "2016-03-29T18:01:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "setup.py was updated to 2.0, but line 20 in ordered_set.py states `__version__ = '1.5.0'`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/19", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/19/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/19/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/19", "id": 139118834, "node_id": "MDU6SXNzdWUxMzkxMTg4MzQ=", "number": 19, "title": "Inefficient code in discard?", "user": {"login": "Smattr", "id": 203893, "node_id": "MDQ6VXNlcjIwMzg5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/203893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Smattr", "html_url": "https://github.com/Smattr", "followers_url": "https://api.github.com/users/Smattr/followers", "following_url": "https://api.github.com/users/Smattr/following{/other_user}", "gists_url": "https://api.github.com/users/Smattr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Smattr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Smattr/subscriptions", "organizations_url": "https://api.github.com/users/Smattr/orgs", "repos_url": "https://api.github.com/users/Smattr/repos", "events_url": "https://api.github.com/users/Smattr/events{/privacy}", "received_events_url": "https://api.github.com/users/Smattr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-07T22:52:14Z", "updated_at": "2016-05-24T16:59:03Z", "closed_at": "2016-05-24T16:49:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think perhaps I'm missing something, but it seems to me the following replaces an O(n) operation with an O(1) operation, leaving functionality identical.\n\n```\ndiff --git a/ordered_set.py b/ordered_set.py\nindex bf88cd8..118672e 100644\n--- a/ordered_set.py\n+++ b/ordered_set.py\n@@ -160,7 +160,7 @@ class OrderedSet(collections.MutableSet):\n         *does* raise an error when asked to remove a non-existent item.\n         \"\"\"\n         if key in self:\n-            i = self.items.index(key)\n+            i = self.map[key]\n             del self.items[i]\n             del self.map[key]\n             for k, v in self.map.items():\n```\n\nI initially thought perhaps the index was looked up via the list because the indices in the map weren't necessarily up to date, but the trailing loop updates them when deleting an element. Is there some other reason the list needs to be used for the lookup here? Thanks for your time.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/18", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/18/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/18/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/18", "id": 125473622, "node_id": "MDU6SXNzdWUxMjU0NzM2MjI=", "number": 18, "title": "new version on pypi?", "user": {"login": "dashea", "id": 4419868, "node_id": "MDQ6VXNlcjQ0MTk4Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4419868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dashea", "html_url": "https://github.com/dashea", "followers_url": "https://api.github.com/users/dashea/followers", "following_url": "https://api.github.com/users/dashea/following{/other_user}", "gists_url": "https://api.github.com/users/dashea/gists{/gist_id}", "starred_url": "https://api.github.com/users/dashea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dashea/subscriptions", "organizations_url": "https://api.github.com/users/dashea/orgs", "repos_url": "https://api.github.com/users/dashea/repos", "events_url": "https://api.github.com/users/dashea/events{/privacy}", "received_events_url": "https://api.github.com/users/dashea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-07T20:01:00Z", "updated_at": "2016-01-12T20:38:58Z", "closed_at": "2016-01-12T20:38:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the 1.4 version of OrderedSet, pop is implemented (via MutableSet), but in such a way that it returns the first item instead of the last. It's kind of annoying, and it's already fixed in github, so it would be nice if there were a release. Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/16", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/16/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/16/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/16", "id": 121384695, "node_id": "MDU6SXNzdWUxMjEzODQ2OTU=", "number": 16, "title": ".index method handles tuple keys as iterables", "user": {"login": "leo-labs", "id": 2592059, "node_id": "MDQ6VXNlcjI1OTIwNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2592059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leo-labs", "html_url": "https://github.com/leo-labs", "followers_url": "https://api.github.com/users/leo-labs/followers", "following_url": "https://api.github.com/users/leo-labs/following{/other_user}", "gists_url": "https://api.github.com/users/leo-labs/gists{/gist_id}", "starred_url": "https://api.github.com/users/leo-labs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leo-labs/subscriptions", "organizations_url": "https://api.github.com/users/leo-labs/orgs", "repos_url": "https://api.github.com/users/leo-labs/repos", "events_url": "https://api.github.com/users/leo-labs/events{/privacy}", "received_events_url": "https://api.github.com/users/leo-labs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-10T02:01:29Z", "updated_at": "2015-12-15T19:29:57Z", "closed_at": "2015-12-15T19:29:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Apparently `.index(key)` handles all iterables (except strings) as list of subkeys. \nWhen using tuples as keys, this will break. \n\nCan we either add an extra case for tuples _or_ remove the extra logic for iterables?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/12", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/12/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/12/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/12", "id": 106712765, "node_id": "MDU6SXNzdWUxMDY3MTI3NjU=", "number": 12, "title": "Unit tests & travis-ci", "user": {"login": "Toilal", "id": 1165758, "node_id": "MDQ6VXNlcjExNjU3NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1165758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Toilal", "html_url": "https://github.com/Toilal", "followers_url": "https://api.github.com/users/Toilal/followers", "following_url": "https://api.github.com/users/Toilal/following{/other_user}", "gists_url": "https://api.github.com/users/Toilal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Toilal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Toilal/subscriptions", "organizations_url": "https://api.github.com/users/Toilal/orgs", "repos_url": "https://api.github.com/users/Toilal/repos", "events_url": "https://api.github.com/users/Toilal/events{/privacy}", "received_events_url": "https://api.github.com/users/Toilal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-16T07:04:23Z", "updated_at": "2015-09-16T07:06:56Z", "closed_at": "2015-09-16T07:06:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would you want to have unit tests and travis-ci configuration for this project ?\n\nI can open a pull request to perform this, but you will have to open an account on travis-ci and enable the travis-ci service on github.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/10", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/10/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/10/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/10", "id": 106701408, "node_id": "MDU6SXNzdWUxMDY3MDE0MDg=", "number": 10, "title": "Implement discard", "user": {"login": "Toilal", "id": 1165758, "node_id": "MDQ6VXNlcjExNjU3NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1165758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Toilal", "html_url": "https://github.com/Toilal", "followers_url": "https://api.github.com/users/Toilal/followers", "following_url": "https://api.github.com/users/Toilal/following{/other_user}", "gists_url": "https://api.github.com/users/Toilal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Toilal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Toilal/subscriptions", "organizations_url": "https://api.github.com/users/Toilal/orgs", "repos_url": "https://api.github.com/users/Toilal/repos", "events_url": "https://api.github.com/users/Toilal/events{/privacy}", "received_events_url": "https://api.github.com/users/Toilal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-16T05:36:13Z", "updated_at": "2015-09-17T18:39:16Z", "closed_at": "2015-09-17T18:39:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it planned ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/5", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/5/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/5/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/5", "id": 38249237, "node_id": "MDU6SXNzdWUzODI0OTIzNw==", "number": 5, "title": "Pickling then unpickling fails for the empty OrderedSet().", "user": {"login": "mjpieters", "id": 46775, "node_id": "MDQ6VXNlcjQ2Nzc1", "avatar_url": "https://avatars3.githubusercontent.com/u/46775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjpieters", "html_url": "https://github.com/mjpieters", "followers_url": "https://api.github.com/users/mjpieters/followers", "following_url": "https://api.github.com/users/mjpieters/following{/other_user}", "gists_url": "https://api.github.com/users/mjpieters/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjpieters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjpieters/subscriptions", "organizations_url": "https://api.github.com/users/mjpieters/orgs", "repos_url": "https://api.github.com/users/mjpieters/repos", "events_url": "https://api.github.com/users/mjpieters/events{/privacy}", "received_events_url": "https://api.github.com/users/mjpieters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-07-20T02:13:32Z", "updated_at": "2014-07-21T18:56:43Z", "closed_at": "2014-07-21T18:56:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following fails:\n\n``` python\n>>> import pickle\n>>> from ordered_set import OrderedSet\n>>> pickle.loads(pickle.dumps(OrderedSet()))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/mj/Development/venvs/stackoverflow-2.7/lib/python2.7/site-packages/ordered_set.py\", line 126, in __repr__\n    if not self:\n  File \"/Users/mj/Development/venvs/stackoverflow-2.7/lib/python2.7/site-packages/ordered_set.py\", line 49, in __len__\n    return len(self.items)\nAttributeError: 'OrderedSet' object has no attribute 'items'\n```\n\nbecause `OrderedSet.__getstate__` returns an empty list, causing `pickle` to assume you don't want `__setstate__` to be called when loading again.\n\nThis can be fixed by using a `__getstate__` that wraps the list in a 1-element tuple:\n\n``` python\ndef __getstate__(self):\n    return (list(self),)\n\ndef __setstate__(self, state):\n    if isinstance(state, tuple):\n        state = state[0]   # new pickle format\n    self.__init__(state)    \n```\n\nBy explicitly testing for a tuple in `__setstate__` previously pickled data can still be loaded.\n\nAlso see http://stackoverflow.com/questions/24846605/cannot-pickle-empty-ordered-set\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/4", "repository_url": "https://api.github.com/repos/LuminosoInsight/ordered-set", "labels_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/4/comments", "events_url": "https://api.github.com/repos/LuminosoInsight/ordered-set/issues/4/events", "html_url": "https://github.com/LuminosoInsight/ordered-set/issues/4", "id": 32546576, "node_id": "MDU6SXNzdWUzMjU0NjU3Ng==", "number": 4, "title": "PyPi entry is not updated to current repo url", "user": {"login": "nephics", "id": 419154, "node_id": "MDEyOk9yZ2FuaXphdGlvbjQxOTE1NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/419154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nephics", "html_url": "https://github.com/nephics", "followers_url": "https://api.github.com/users/nephics/followers", "following_url": "https://api.github.com/users/nephics/following{/other_user}", "gists_url": "https://api.github.com/users/nephics/gists{/gist_id}", "starred_url": "https://api.github.com/users/nephics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nephics/subscriptions", "organizations_url": "https://api.github.com/users/nephics/orgs", "repos_url": "https://api.github.com/users/nephics/repos", "events_url": "https://api.github.com/users/nephics/events{/privacy}", "received_events_url": "https://api.github.com/users/nephics/received_events", "type": "Organization", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-30T15:42:41Z", "updated_at": "2014-05-23T18:14:12Z", "closed_at": "2014-05-23T18:14:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The package entry on PyPi https://pypi.python.org/pypi/ordered-set has a wrong Home Page url property. Please update the package description on PyPi.\n", "performed_via_github_app": null, "score": 1.0}]}