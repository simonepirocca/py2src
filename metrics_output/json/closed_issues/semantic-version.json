{"total_count": 44, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/104", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/104/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/104/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/104", "id": 675592073, "node_id": "MDU6SXNzdWU2NzU1OTIwNzM=", "number": 104, "title": "Docs say that named components patch must be both an integer and a tuple of strings", "user": {"login": "claremacrae", "id": 4840096, "node_id": "MDQ6VXNlcjQ4NDAwOTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4840096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claremacrae", "html_url": "https://github.com/claremacrae", "followers_url": "https://api.github.com/users/claremacrae/followers", "following_url": "https://api.github.com/users/claremacrae/following{/other_user}", "gists_url": "https://api.github.com/users/claremacrae/gists{/gist_id}", "starred_url": "https://api.github.com/users/claremacrae/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claremacrae/subscriptions", "organizations_url": "https://api.github.com/users/claremacrae/orgs", "repos_url": "https://api.github.com/users/claremacrae/repos", "events_url": "https://api.github.com/users/claremacrae/events{/privacy}", "received_events_url": "https://api.github.com/users/claremacrae/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1524604356, "node_id": "MDU6TGFiZWwxNTI0NjA0MzU2", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Status:CodeWelcome", "name": "Status:CodeWelcome", "color": "87f2b5", "default": false, "description": "This feature design has been approved; next step: write the code!"}, {"id": 333307117, "node_id": "MDU6TGFiZWwzMzMzMDcxMTc=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Topic:Doc", "name": "Topic:Doc", "color": "02e10c", "default": false, "description": "Documentation, examples, HowTo, guides, etc"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-08T21:38:21Z", "updated_at": "2020-08-09T11:05:57Z", "closed_at": "2020-08-09T10:52:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "This text is present in both `README.rst` and `docs/index.rst`:\r\n\r\n```rst\r\nIn that case, ``major``, ``minor`` and ``patch`` are mandatory, and must be integers.\r\n``prerelease`` and ``patch``, if provided, must be tuples of strings:\r\n```\r\n\r\nI think the second `patch` reference must be to some other argument instead...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/103", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/103/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/103/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/103", "id": 652000183, "node_id": "MDU6SXNzdWU2NTIwMDAxODM=", "number": 103, "title": "SimpleSpec comparison not producing documented results", "user": {"login": "soda480", "id": 3664215, "node_id": "MDQ6VXNlcjM2NjQyMTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3664215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soda480", "html_url": "https://github.com/soda480", "followers_url": "https://api.github.com/users/soda480/followers", "following_url": "https://api.github.com/users/soda480/following{/other_user}", "gists_url": "https://api.github.com/users/soda480/gists{/gist_id}", "starred_url": "https://api.github.com/users/soda480/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soda480/subscriptions", "organizations_url": "https://api.github.com/users/soda480/orgs", "repos_url": "https://api.github.com/users/soda480/repos", "events_url": "https://api.github.com/users/soda480/events{/privacy}", "received_events_url": "https://api.github.com/users/soda480/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333307117, "node_id": "MDU6TGFiZWwzMzMzMDcxMTc=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Topic:Doc", "name": "Topic:Doc", "color": "02e10c", "default": false, "description": "Documentation, examples, HowTo, guides, etc"}, {"id": 5006041, "node_id": "MDU6TGFiZWw1MDA2MDQx", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Bug", "name": "Type:Bug", "color": "fc2929", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-07T05:00:01Z", "updated_at": "2020-07-08T12:06:16Z", "closed_at": "2020-07-08T12:05:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Per your documentation the following should return True:\r\n```\r\n>>> s = SimpleSpec('==0.1.1')\r\n>>> Version('0.1.1-alpha1') in s\r\nFalse\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/99", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/99/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/99/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/99", "id": 627164664, "node_id": "MDU6SXNzdWU2MjcxNjQ2NjQ=", "number": 99, "title": "Invalid NPM block", "user": {"login": "gjedeer", "id": 315648, "node_id": "MDQ6VXNlcjMxNTY0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/315648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gjedeer", "html_url": "https://github.com/gjedeer", "followers_url": "https://api.github.com/users/gjedeer/followers", "following_url": "https://api.github.com/users/gjedeer/following{/other_user}", "gists_url": "https://api.github.com/users/gjedeer/gists{/gist_id}", "starred_url": "https://api.github.com/users/gjedeer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gjedeer/subscriptions", "organizations_url": "https://api.github.com/users/gjedeer/orgs", "repos_url": "https://api.github.com/users/gjedeer/repos", "events_url": "https://api.github.com/users/gjedeer/events{/privacy}", "received_events_url": "https://api.github.com/users/gjedeer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 967949847, "node_id": "MDU6TGFiZWw5Njc5NDk4NDc=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Topic:NPM", "name": "Topic:NPM", "color": "bfdadc", "default": false, "description": "Implementing NPM-style version specifiers"}, {"id": 5006045, "node_id": "MDU6TGFiZWw1MDA2MDQ1", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Q&A", "name": "Type:Q&A", "color": "dddddd", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-29T10:25:05Z", "updated_at": "2020-06-03T08:23:08Z", "closed_at": "2020-06-02T10:20:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting an error when parsing an expression from npmjs.com:\r\n\r\n```\r\n>>> import semantic_version\r\n>>> semantic_version.__version__\r\n'2.8.5'\r\n>>> semantic_version.NpmSpec('>= 2.1.2 < 3')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/gdr/venv3/lib/python3.6/site-packages/semantic_version/base.py\", line 618, in __init__\r\n    self.clause = self._parse_to_clause(expression)\r\n  File \"/home/gdr/venv3/lib/python3.6/site-packages/semantic_version/base.py\", line 1225, in _parse_to_clause\r\n    return cls.Parser.parse(expression)\r\n  File \"/home/gdr/venv3/lib/python3.6/site-packages/semantic_version/base.py\", line 1265, in parse\r\n    raise ValueError(\"Invalid NPM block in %r: %r\" % (expression, block))\r\nValueError: Invalid NPM block in '>= 2.1.2 < 3': '>='\r\n```\r\n\r\nThe full version spec was:\r\n```\r\n>= 2.1.2 < 3\r\n```\r\n\r\nI did not make up this spec string - it was found when parsing package.json found on npm.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/98", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/98/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/98/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/98", "id": 606947918, "node_id": "MDU6SXNzdWU2MDY5NDc5MTg=", "number": 98, "title": "A version matching wildstar patch SimpleSpec is not matched by a version with the same prefix", "user": {"login": "numaru", "id": 23616600, "node_id": "MDQ6VXNlcjIzNjE2NjAw", "avatar_url": "https://avatars3.githubusercontent.com/u/23616600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/numaru", "html_url": "https://github.com/numaru", "followers_url": "https://api.github.com/users/numaru/followers", "following_url": "https://api.github.com/users/numaru/following{/other_user}", "gists_url": "https://api.github.com/users/numaru/gists{/gist_id}", "starred_url": "https://api.github.com/users/numaru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/numaru/subscriptions", "organizations_url": "https://api.github.com/users/numaru/orgs", "repos_url": "https://api.github.com/users/numaru/repos", "events_url": "https://api.github.com/users/numaru/events{/privacy}", "received_events_url": "https://api.github.com/users/numaru/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 967950131, "node_id": "MDU6TGFiZWw5Njc5NTAxMzE=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Topic:PyPI", "name": "Topic:PyPI", "color": "bfdadc", "default": false, "description": "Implementing PyPI-style version specifiers"}, {"id": 5006041, "node_id": "MDU6TGFiZWw1MDA2MDQx", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Bug", "name": "Type:Bug", "color": "fc2929", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-26T07:52:32Z", "updated_at": "2020-04-29T09:56:28Z", "closed_at": "2020-04-29T09:51:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Description\r\n\r\nIt is specified in [PEP440](https://www.python.org/dev/peps/pep-0440/#version-matching) that the version `1.1.8` should match the spec `==1.1.*`. The `SimpleSpec` does not fulfill this requirement.  \r\n\r\n### Reproduction snippet\r\n\r\n```python\r\nfrom semantic_version import Version, SimpleSpec\r\n\r\nversion = Version(\"1.1.8\")\r\nassert version not in SimpleSpec(\"==1.1\") # Not equal, so 1.1.8 does not match clause\r\nassert version in SimpleSpec(\"==1.1.8\") # Equal, so 1.1.8 matches clause\r\nassert version in SimpleSpec(\"==1.*.*\") # Same prefix, so 1.1.8 matches clause and it works\r\nassert version in SimpleSpec(\"==1.1.*\") # Same prefix, so 1.1.8 matches clause but it fails\r\n```\r\n\r\n### Environment\r\npython: 3.8.0\r\nsemantic-version: 2.8.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/94", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/94/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/94/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/94", "id": 569960168, "node_id": "MDU6SXNzdWU1Njk5NjAxNjg=", "number": 94, "title": "semantic_version.validate incorrectly processes x.x.x.x", "user": {"login": "ShamanTcler", "id": 30176093, "node_id": "MDQ6VXNlcjMwMTc2MDkz", "avatar_url": "https://avatars0.githubusercontent.com/u/30176093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShamanTcler", "html_url": "https://github.com/ShamanTcler", "followers_url": "https://api.github.com/users/ShamanTcler/followers", "following_url": "https://api.github.com/users/ShamanTcler/following{/other_user}", "gists_url": "https://api.github.com/users/ShamanTcler/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShamanTcler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShamanTcler/subscriptions", "organizations_url": "https://api.github.com/users/ShamanTcler/orgs", "repos_url": "https://api.github.com/users/ShamanTcler/repos", "events_url": "https://api.github.com/users/ShamanTcler/events{/privacy}", "received_events_url": "https://api.github.com/users/ShamanTcler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 5006045, "node_id": "MDU6TGFiZWw1MDA2MDQ1", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Q&A", "name": "Type:Q&A", "color": "dddddd", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-24T16:11:07Z", "updated_at": "2020-02-24T16:50:40Z", "closed_at": "2020-02-24T16:50:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "print(\"is 15.0.7.287 a sematic version:\", semantic_version.validate('15.0.7.287'))\r\n\r\nreturns:\r\nis 15.0.7.287 a sematic version: False\r\n\r\nBut yet the doc supports \"build\": \r\n>>> v = semantic_version.Version('0.1.1')\r\n>>> v.major\r\n0\r\n>>> v.minor\r\n1\r\n>>> v.patch\r\n1\r\n>>> v.prerelease\r\n[]\r\n>>> v.build\r\n[]\r\n\r\nThanks for the good work.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/89", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/89/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/89/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/89", "id": 540650357, "node_id": "MDU6SXNzdWU1NDA2NTAzNTc=", "number": 89, "title": "Can `Version.coerce()` accept leading zeroes?", "user": {"login": "andrew-ni", "id": 29108945, "node_id": "MDQ6VXNlcjI5MTA4OTQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/29108945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrew-ni", "html_url": "https://github.com/andrew-ni", "followers_url": "https://api.github.com/users/andrew-ni/followers", "following_url": "https://api.github.com/users/andrew-ni/following{/other_user}", "gists_url": "https://api.github.com/users/andrew-ni/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrew-ni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrew-ni/subscriptions", "organizations_url": "https://api.github.com/users/andrew-ni/orgs", "repos_url": "https://api.github.com/users/andrew-ni/repos", "events_url": "https://api.github.com/users/andrew-ni/events{/privacy}", "received_events_url": "https://api.github.com/users/andrew-ni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 967960133, "node_id": "MDU6TGFiZWw5Njc5NjAxMzM=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Topic:API", "name": "Topic:API", "color": "bfdadc", "default": false, "description": "Improvements to the library API"}, {"id": 5006043, "node_id": "MDU6TGFiZWw1MDA2MDQz", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Enhancement", "name": "Type:Enhancement", "color": "84b6eb", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-19T23:59:46Z", "updated_at": "2019-12-21T15:03:04Z", "closed_at": "2019-12-21T15:02:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to allow something like this? `Version.coerce('1.01.1')` \r\n\r\nThis raises a ValueError: Invalid leading zero in minor: '1.01.1'\r\n\r\nbut is there a specific reason why the coerce function shouldn't be able to handle this? This would be very useful as a lot of programs (docker, ubuntu) use the format: `YY.MM.patch`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/87", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/87/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/87/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/87", "id": 538427405, "node_id": "MDU6SXNzdWU1Mzg0Mjc0MDU=", "number": 87, "title": "docs inconsistent with pre-release handling since 2.8.3", "user": {"login": "tdamsma", "id": 7870803, "node_id": "MDQ6VXNlcjc4NzA4MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7870803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tdamsma", "html_url": "https://github.com/tdamsma", "followers_url": "https://api.github.com/users/tdamsma/followers", "following_url": "https://api.github.com/users/tdamsma/following{/other_user}", "gists_url": "https://api.github.com/users/tdamsma/gists{/gist_id}", "starred_url": "https://api.github.com/users/tdamsma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tdamsma/subscriptions", "organizations_url": "https://api.github.com/users/tdamsma/orgs", "repos_url": "https://api.github.com/users/tdamsma/repos", "events_url": "https://api.github.com/users/tdamsma/events{/privacy}", "received_events_url": "https://api.github.com/users/tdamsma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-16T13:55:43Z", "updated_at": "2019-12-21T14:49:18Z", "closed_at": "2019-12-21T14:49:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With the change in 2.8.3 pre release handling there is now a bug in the docs\r\n\r\nWith 2.8.3:\r\n\r\n``` Python\r\nfrom semantic_version import SimpleSpec\r\ns = SimpleSpec('>=0.1.1')  # At least 0.1.1\r\ns.match(Version('0.1.1-alpha1')) # False\r\n```\r\n\r\nBefore 2.8.3:\r\n``` Python\r\nfrom semantic_version import SimpleSpec\r\ns = SimpleSpec('>=0.1.1')  # At least 0.1.1\r\ns.match(Version('0.1.1-alpha1')) # True\r\n```\r\n\r\nThe docs on pypi are now inconsistent, as they describe the pre 2.8.3 behaviour.\r\n\r\n\r\n> Requirement specification\r\n> \r\n> The SimpleSpec object describes a range of accepted versions:\r\n> \r\n> >>> s = SimpleSpec('>=0.1.1')  # At least 0.1.1\r\n> >>> s.match(Version('0.1.1'))\r\n> True\r\n> >>> s.match(Version('0.1.1-alpha1'))  # pre-release satisfy version spec\r\n> True\r\n> >>> s.match(Version('0.1.0'))\r\n> False\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/86", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/86/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/86/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/86", "id": 526264852, "node_id": "MDU6SXNzdWU1MjYyNjQ4NTI=", "number": 86, "title": "NpmSpec doesn't properly handle prerelease versions", "user": {"login": "nwalters512", "id": 1476544, "node_id": "MDQ6VXNlcjE0NzY1NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1476544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nwalters512", "html_url": "https://github.com/nwalters512", "followers_url": "https://api.github.com/users/nwalters512/followers", "following_url": "https://api.github.com/users/nwalters512/following{/other_user}", "gists_url": "https://api.github.com/users/nwalters512/gists{/gist_id}", "starred_url": "https://api.github.com/users/nwalters512/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nwalters512/subscriptions", "organizations_url": "https://api.github.com/users/nwalters512/orgs", "repos_url": "https://api.github.com/users/nwalters512/repos", "events_url": "https://api.github.com/users/nwalters512/events{/privacy}", "received_events_url": "https://api.github.com/users/nwalters512/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-20T23:02:25Z", "updated_at": "2019-11-21T19:16:02Z", "closed_at": "2019-11-21T12:13:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the npm version range `>0.0.0-alpha <0.0.0-beta`. I would expect the version `0.0.0-alpha.0` to match this version range, and evaluating the constraints independently tells me this should be true:\r\n\r\n```python\r\n>>> from semantic_version import Version\r\n>>> Version('0.0.0-alpha.0') > Version('0.0.0-alpha')\r\nTrue\r\n>>> Version('0.0.0-alpha.0') < Version('0.0.0-beta')\r\nTrue\r\n```\r\n\r\nHowever, `NpmSpec` reports that this is not the case:\r\n\r\n```python\r\n>>> from semantic_version import Version, NpmSpec\r\n>>> Version('0.0.0-alpha.0') in NpmSpec('>0.0.0-alpha <0.0.0-beta')\r\nFalse\r\n```\r\n\r\nThis appears to be a bug, but it's possible that my understanding of prerelease versions in compound npm version ranges is off.\r\n\r\nThanks for all the work on this library!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/85", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/85/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/85/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/85", "id": 498275790, "node_id": "MDU6SXNzdWU0OTgyNzU3OTA=", "number": 85, "title": "next_major, next_minor do now work in case of partial versions", "user": {"login": "regisz", "id": 5145946, "node_id": "MDQ6VXNlcjUxNDU5NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5145946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regisz", "html_url": "https://github.com/regisz", "followers_url": "https://api.github.com/users/regisz/followers", "following_url": "https://api.github.com/users/regisz/following{/other_user}", "gists_url": "https://api.github.com/users/regisz/gists{/gist_id}", "starred_url": "https://api.github.com/users/regisz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regisz/subscriptions", "organizations_url": "https://api.github.com/users/regisz/orgs", "repos_url": "https://api.github.com/users/regisz/repos", "events_url": "https://api.github.com/users/regisz/events{/privacy}", "received_events_url": "https://api.github.com/users/regisz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-09-25T13:08:24Z", "updated_at": "2019-11-21T14:13:29Z", "closed_at": "2019-11-21T14:13:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nsemantic-version: 2.8.2\r\nPython version: 3.5.6\r\n```\r\n\r\nA \"-\" sign is added at the end of version if I use next_major/next_minor in case of a partial version.\r\n\r\n```python\r\n>>> from semantic_version import Version\r\n>>> aa = Version(\"1.1.1\", partial=True)\r\n>>> aa.next_major()\r\nVersion('2.0.0-', partial=True)\r\n>>> aa.next_minor()\r\nVersion('1.2.0-', partial=True)\r\n>>> aa.next_patch()\r\nVersion('1.1.2-', partial=True)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/82", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/82/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/82/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/82", "id": 489288541, "node_id": "MDU6SXNzdWU0ODkyODg1NDE=", "number": 82, "title": "TypeError when trying to access Spec.specs", "user": {"login": "iamdefinitelyahuman", "id": 35276322, "node_id": "MDQ6VXNlcjM1Mjc2MzIy", "avatar_url": "https://avatars3.githubusercontent.com/u/35276322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iamdefinitelyahuman", "html_url": "https://github.com/iamdefinitelyahuman", "followers_url": "https://api.github.com/users/iamdefinitelyahuman/followers", "following_url": "https://api.github.com/users/iamdefinitelyahuman/following{/other_user}", "gists_url": "https://api.github.com/users/iamdefinitelyahuman/gists{/gist_id}", "starred_url": "https://api.github.com/users/iamdefinitelyahuman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iamdefinitelyahuman/subscriptions", "organizations_url": "https://api.github.com/users/iamdefinitelyahuman/orgs", "repos_url": "https://api.github.com/users/iamdefinitelyahuman/repos", "events_url": "https://api.github.com/users/iamdefinitelyahuman/events{/privacy}", "received_events_url": "https://api.github.com/users/iamdefinitelyahuman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 5006041, "node_id": "MDU6TGFiZWw1MDA2MDQx", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Bug", "name": "Type:Bug", "color": "fc2929", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-04T17:18:21Z", "updated_at": "2019-09-06T11:14:21Z", "closed_at": "2019-09-06T11:10:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python version: `3.6.8`\r\n`semantic_version` version: `2.8.1`\r\nOS: Ubuntu `18.04`\r\n\r\nPossibly related to #79 -  I'm getting a `TypeError` whenever I try to access `Spec.specs` with any of the following conditions:\r\n\r\n* the `Spec` includes a patch version\r\n* the `Spec` operator is any of (`>=`, `>`, `<=`, `<`)\r\n\r\nThe traceback is identical in every case:\r\n\r\n```python\r\n>>> Spec('0.1.0').specs\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/computer/code/venv/lib/python3.6/site-packages/semantic_version/base.py\", line 1161, in specs\r\n    return list(self)\r\n  File \"/home/computer/code/venv/lib/python3.6/site-packages/semantic_version/base.py\", line 1169, in __iter__\r\n    for clause in self.clause:\r\nTypeError: 'Range' object is not iterable\r\n\r\n```\r\n\r\nWithout a patch version, or using a `^` operator (even with a patch version) I have no issues:\r\n\r\n```python\r\n>>> Spec('0.1').specs\r\n[<SpecItem: >= Version('0.1.0', partial=True)>, <SpecItem: < Version('0.1.1', partial=True)>]\r\n>>> Spec('^0.1.0').specs\r\n[<SpecItem: < Version('0.2.0', partial=True)>, <SpecItem: >= Version('0.1.0', partial=True)>]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/81", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/81/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/81/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/81", "id": 489268064, "node_id": "MDU6SXNzdWU0ODkyNjgwNjQ=", "number": 81, "title": "Incorrect matching when using `partial` keyword argument in `Version`", "user": {"login": "jasongraham", "id": 399471, "node_id": "MDQ6VXNlcjM5OTQ3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/399471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasongraham", "html_url": "https://github.com/jasongraham", "followers_url": "https://api.github.com/users/jasongraham/followers", "following_url": "https://api.github.com/users/jasongraham/following{/other_user}", "gists_url": "https://api.github.com/users/jasongraham/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasongraham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasongraham/subscriptions", "organizations_url": "https://api.github.com/users/jasongraham/orgs", "repos_url": "https://api.github.com/users/jasongraham/repos", "events_url": "https://api.github.com/users/jasongraham/events{/privacy}", "received_events_url": "https://api.github.com/users/jasongraham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-04T16:31:28Z", "updated_at": "2019-09-21T11:55:46Z", "closed_at": "2019-09-21T11:55:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python versions: 3.7.4 and 3.6.9\r\nOS: Windows 10\r\n\r\nI've found interesting behavior in version 2.8.1 which I believe is a bug.\r\n\r\n```python\r\n>>> # Expected, good\r\n>>> Version(\"1.0.0\") in Spec(\"==1.0.0\")\r\nTrue\r\n>>> Version(\"1.0.0\") in Spec(\"!=1.0.0\")\r\nFalse\r\n\r\n>>> # Unexpected, probably a bug\r\n>>> # Expected that these would match above without partial\r\n>>> Version(\"1.0.0\", partial=True) in Spec(\"==1.0.0\")\r\nTrue\r\n>>> Version(\"1.0.0\", partial=True) in Spec(\"!=1.0.0\")\r\nTrue\r\n\r\n>>> # Unexpected, probably a bug\r\n>>> # Expected that these would match above without partial\r\n>>> Version(\"1\", partial=True) in Spec(\"==1.0.0\")\r\nFalse\r\n>>> Version(\"1\", partial=True) in Spec(\"!=1.0.0\")\r\nTrue\r\n```\r\n\r\nIn version 2.6.0, the `partial` keyword argument seemed to add missing minor / patch numbers as `0`.  It seems to be doing something different now.\r\n\r\n```python\r\n>>> Version(\"1.0.0\") == Version(\"1.0.0\", partial=True)\r\nTrue\r\n>>> Version(\"1.0.0\") != Version(\"1.0.0\", partial=True)\r\nTrue\r\n>>> Version(\"1.0.0\") == Version(\"1\", partial=True)\r\nFalse\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/80", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/80/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/80/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/80", "id": 487395077, "node_id": "MDU6SXNzdWU0ODczOTUwNzc=", "number": 80, "title": "Possibly another breaking change between 2.6.0 and 2.7.0 (not fixed in 2.8.1)", "user": {"login": "elemental-lf", "id": 24651317, "node_id": "MDQ6VXNlcjI0NjUxMzE3", "avatar_url": "https://avatars3.githubusercontent.com/u/24651317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elemental-lf", "html_url": "https://github.com/elemental-lf", "followers_url": "https://api.github.com/users/elemental-lf/followers", "following_url": "https://api.github.com/users/elemental-lf/following{/other_user}", "gists_url": "https://api.github.com/users/elemental-lf/gists{/gist_id}", "starred_url": "https://api.github.com/users/elemental-lf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elemental-lf/subscriptions", "organizations_url": "https://api.github.com/users/elemental-lf/orgs", "repos_url": "https://api.github.com/users/elemental-lf/repos", "events_url": "https://api.github.com/users/elemental-lf/events{/privacy}", "received_events_url": "https://api.github.com/users/elemental-lf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-30T09:51:49Z", "updated_at": "2019-09-03T12:32:42Z", "closed_at": "2019-09-03T12:32:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently investigating a problem in an application of mime which works fine with 2.6.0 and breaks with 2.7.0 and later versions including 2.8.1.\r\nThe exception I get is (with 2.8.1):\r\n```\r\ns1:4: DeprecationWarning: Partial versions will be removed in 3.0; use SimpleSpec('1.x.x') instead.\r\n  version_obj = semantic_version.Version(version, partial=True)\r\nTraceback (most recent call last):\r\n  File \"s1\", line 5, in <module>\r\n    if version_obj not in supported:\r\n  File \"venv/lib64/python3.7/site-packages/semantic_version/base.py\", line 642, in __contains__\r\n    return self.match(version)\r\n  File \"venv/lib64/python3.7/site-packages/semantic_version/base.py\", line 630, in match\r\n    return self.clause.match(version)\r\n  File \"venv/lib64/python3.7/site-packages/semantic_version/base.py\", line 745, in match\r\n    return all(clause.match(version) for clause in self.clauses)\r\n  File \"venv/lib64/python3.7/site-packages/semantic_version/base.py\", line 745, in <genexpr>\r\n    return all(clause.match(version) for clause in self.clauses)\r\n  File \"venv/lib64/python3.7/site-packages/semantic_version/base.py\", line 910, in match\r\n    return version >= self.target\r\n  File \"venv/lib64/python3.7/site-packages/semantic_version/base.py\", line 467, in __ge__\r\n    return self.precedence_key >= other.precedence_key\r\nTypeError: '>=' not supported between instances of 'NoneType' and 'int'\r\n```\r\nHere is a code snippet to reproduce the issue:\r\n```python\r\nimport semantic_version\r\nsupported=semantic_version.Spec('>=1,<2')\r\nversion = '1'\r\nversion_obj = semantic_version.Version(version, partial=True)\r\nif version_obj not in supported:\r\n  raise RuntimeError('Configuration has unsupported version of \"{}\".'.format(version))\r\n```\r\nIt obviously has something to do with the partial version specification and it's possible that I'm not using `semantic-version` correctly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/79", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/79/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/79/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/79", "id": 486938067, "node_id": "MDU6SXNzdWU0ODY5MzgwNjc=", "number": 79, "title": "Version 2.7 broke compatibility", "user": {"login": "tzoiker", "id": 6230141, "node_id": "MDQ6VXNlcjYyMzAxNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6230141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tzoiker", "html_url": "https://github.com/tzoiker", "followers_url": "https://api.github.com/users/tzoiker/followers", "following_url": "https://api.github.com/users/tzoiker/following{/other_user}", "gists_url": "https://api.github.com/users/tzoiker/gists{/gist_id}", "starred_url": "https://api.github.com/users/tzoiker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tzoiker/subscriptions", "organizations_url": "https://api.github.com/users/tzoiker/orgs", "repos_url": "https://api.github.com/users/tzoiker/repos", "events_url": "https://api.github.com/users/tzoiker/events{/privacy}", "received_events_url": "https://api.github.com/users/tzoiker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 5006041, "node_id": "MDU6TGFiZWw1MDA2MDQx", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Bug", "name": "Type:Bug", "color": "fc2929", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-29T12:49:24Z", "updated_at": "2019-08-29T15:28:29Z", "closed_at": "2019-08-29T15:28:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ironically, semver library does not follow semver. For example, removing `specs` property from `Spec` broke compatibility with version 2.6. Please, introduce breaking changes with major bump only.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/78", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/78/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/78/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/78", "id": 486675808, "node_id": "MDU6SXNzdWU0ODY2NzU4MDg=", "number": 78, "title": "Version bump to 2.7.0 does not adhere to Strict SemVer 2.0", "user": {"login": "dnathe4th", "id": 305278, "node_id": "MDQ6VXNlcjMwNTI3OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/305278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnathe4th", "html_url": "https://github.com/dnathe4th", "followers_url": "https://api.github.com/users/dnathe4th/followers", "following_url": "https://api.github.com/users/dnathe4th/following{/other_user}", "gists_url": "https://api.github.com/users/dnathe4th/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnathe4th/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnathe4th/subscriptions", "organizations_url": "https://api.github.com/users/dnathe4th/orgs", "repos_url": "https://api.github.com/users/dnathe4th/repos", "events_url": "https://api.github.com/users/dnathe4th/events{/privacy}", "received_events_url": "https://api.github.com/users/dnathe4th/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-29T00:41:39Z", "updated_at": "2019-08-29T19:32:00Z", "closed_at": "2019-08-29T09:41:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [new constructor](https://github.com/rbarrois/python-semanticversion/blob/1655f9cdd72dd3e6dcaf071e84aa5e897e06d39d/semantic_version/base.py#L87) leveraging Python3 syntax is a breaking change and should result in a major version bump to 3.0 per SemVer2.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/72", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/72/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/72/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/72", "id": 445950943, "node_id": "MDU6SXNzdWU0NDU5NTA5NDM=", "number": 72, "title": "Spec(`~=1.1.0`) matches Version(`1.2.0-foobar`)", "user": {"login": "nathandines", "id": 793167, "node_id": "MDQ6VXNlcjc5MzE2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/793167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathandines", "html_url": "https://github.com/nathandines", "followers_url": "https://api.github.com/users/nathandines/followers", "following_url": "https://api.github.com/users/nathandines/following{/other_user}", "gists_url": "https://api.github.com/users/nathandines/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathandines/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathandines/subscriptions", "organizations_url": "https://api.github.com/users/nathandines/orgs", "repos_url": "https://api.github.com/users/nathandines/repos", "events_url": "https://api.github.com/users/nathandines/events{/privacy}", "received_events_url": "https://api.github.com/users/nathandines/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 5006041, "node_id": "MDU6TGFiZWw1MDA2MDQx", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Bug", "name": "Type:Bug", "color": "fc2929", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-20T06:56:22Z", "updated_at": "2019-08-28T17:53:23Z", "closed_at": "2019-08-28T17:53:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would expect this to return `False`, but when comparing the versions mentioned in the title, I'm getting a `True` result. Is my interpretation of the rules incorrect, or is this a bug?\r\n\r\nExample:\r\n```py\r\n>>> semantic_version.match('~=1.1.0', '1.2.0-foobar')\r\nTrue\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/71", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/71/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/71/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/71", "id": 444645207, "node_id": "MDU6SXNzdWU0NDQ2NDUyMDc=", "number": 71, "title": "TypeError on matching to Spec('~1')", "user": {"login": "awcrosby", "id": 4432895, "node_id": "MDQ6VXNlcjQ0MzI4OTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4432895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awcrosby", "html_url": "https://github.com/awcrosby", "followers_url": "https://api.github.com/users/awcrosby/followers", "following_url": "https://api.github.com/users/awcrosby/following{/other_user}", "gists_url": "https://api.github.com/users/awcrosby/gists{/gist_id}", "starred_url": "https://api.github.com/users/awcrosby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awcrosby/subscriptions", "organizations_url": "https://api.github.com/users/awcrosby/orgs", "repos_url": "https://api.github.com/users/awcrosby/repos", "events_url": "https://api.github.com/users/awcrosby/events{/privacy}", "received_events_url": "https://api.github.com/users/awcrosby/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 5006041, "node_id": "MDU6TGFiZWw1MDA2MDQx", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Bug", "name": "Type:Bug", "color": "fc2929", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-15T21:05:57Z", "updated_at": "2019-08-28T18:58:48Z", "closed_at": "2019-08-28T18:58:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can make a specifier with `'~1'` but when doing a `match` or `select` on it, it causes a `TypeError`. I tried to provide the relevant details below, thanks!\r\n\r\n```\r\nSuccessfully installed semantic-version-2.6.0\r\n(sv) awc:env$ python3\r\nPython 3.6.8 (default, Jan 27 2019, 09:00:23)\r\n[GCC 8.2.1 20181215 (Red Hat 8.2.1-6)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.                                  \r\n>>> import semantic_version\r\n>>> v = semantic_version.Version('1.1.2')\r\n>>> s_major = semantic_version.Spec('~1')\r\n>>> s_minor = semantic_version.Spec('~1.1')\r\n>>> s_minor.match(v)\r\nTrue\r\n>>> s_major.match(v)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/awc/code/env/sv/lib/python3.6/site-packages/semantic_version/base.py\", line 515, in match\r\n    return all(spec.match(version) for spec in self.specs)\r\n  File \"/home/awc/code/env/sv/lib/python3.6/site-packages/semantic_version/base.py\", line 515, in <genexpr>\r\n    return all(spec.match(version) for spec in self.specs)\r\n  File \"/home/awc/code/env/sv/lib/python3.6/site-packages/semantic_version/base.py\", line 478, in match\r\n    return self.spec <= version < self.spec.next_minor()\r\n  File \"/home/awc/code/env/sv/lib/python3.6/site-packages/semantic_version/base.py\", line 104, in next_minor\r\n    '.'.join(str(x) for x in [self.major, self.minor + 1, 0]))\r\nTypeError: unsupported operand type(s) for +: 'NoneType' and 'int'\r\n>>> s_major\r\n<Spec: (<SpecItem: ~ Version('1', partial=True)>,)>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/70", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/70/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/70/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/70", "id": 440921400, "node_id": "MDU6SXNzdWU0NDA5MjE0MDA=", "number": 70, "title": "Support for advanced range separator: pipe", "user": {"login": "ulziibay", "id": 1626382, "node_id": "MDQ6VXNlcjE2MjYzODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1626382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulziibay", "html_url": "https://github.com/ulziibay", "followers_url": "https://api.github.com/users/ulziibay/followers", "following_url": "https://api.github.com/users/ulziibay/following{/other_user}", "gists_url": "https://api.github.com/users/ulziibay/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulziibay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulziibay/subscriptions", "organizations_url": "https://api.github.com/users/ulziibay/orgs", "repos_url": "https://api.github.com/users/ulziibay/repos", "events_url": "https://api.github.com/users/ulziibay/events{/privacy}", "received_events_url": "https://api.github.com/users/ulziibay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 967949847, "node_id": "MDU6TGFiZWw5Njc5NDk4NDc=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Topic:NPM", "name": "Topic:NPM", "color": "bfdadc", "default": false, "description": "Implementing NPM-style version specifiers"}, {"id": 333304799, "node_id": "MDU6TGFiZWwzMzMzMDQ3OTk=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:NewFeature", "name": "Type:NewFeature", "color": "02d7e1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-06T22:13:11Z", "updated_at": "2019-08-28T19:49:11Z", "closed_at": "2019-08-28T19:15:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Per https://docs.npmjs.com/misc/semver#advanced-range-syntax, using `||` as logical-or for ranges is allowed.\r\nRequesting to add `Spec()` be aware of such initializers.\r\n\r\nOn: `semantic-version==2.6.0` and `python==3.6`, \r\n`Spec(\"1.0.0 || <=0.9.4\")` throws with:\r\n```\r\nValueError: Invalid version string: '1.0.0 || <=0.9.4'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/67", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/67/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/67/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/67", "id": 328238600, "node_id": "MDU6SXNzdWUzMjgyMzg2MDA=", "number": 67, "title": "next_patch ", "user": {"login": "vabic", "id": 14078870, "node_id": "MDQ6VXNlcjE0MDc4ODcw", "avatar_url": "https://avatars2.githubusercontent.com/u/14078870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vabic", "html_url": "https://github.com/vabic", "followers_url": "https://api.github.com/users/vabic/followers", "following_url": "https://api.github.com/users/vabic/following{/other_user}", "gists_url": "https://api.github.com/users/vabic/gists{/gist_id}", "starred_url": "https://api.github.com/users/vabic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vabic/subscriptions", "organizations_url": "https://api.github.com/users/vabic/orgs", "repos_url": "https://api.github.com/users/vabic/repos", "events_url": "https://api.github.com/users/vabic/events{/privacy}", "received_events_url": "https://api.github.com/users/vabic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333307117, "node_id": "MDU6TGFiZWwzMzMzMDcxMTc=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Topic:Doc", "name": "Topic:Doc", "color": "02e10c", "default": false, "description": "Documentation, examples, HowTo, guides, etc"}, {"id": 5006041, "node_id": "MDU6TGFiZWw1MDA2MDQx", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Bug", "name": "Type:Bug", "color": "fc2929", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-31T17:58:14Z", "updated_at": "2018-06-18T11:31:35Z", "closed_at": "2018-06-18T11:31:35Z", "author_association": "NONE", "active_lock_reason": null, "body": ">>> v1 = semantic_version.Version('1.1.1-pre+build')\r\n>>> v2 = v1.next_patch()\r\n>>> str(v2)\r\n'1.1.1'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/66", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/66/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/66/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/66", "id": 308877925, "node_id": "MDU6SXNzdWUzMDg4Nzc5MjU=", "number": 66, "title": ".x versioning is not supported", "user": {"login": "r-bit-rry", "id": 34023431, "node_id": "MDQ6VXNlcjM0MDIzNDMx", "avatar_url": "https://avatars2.githubusercontent.com/u/34023431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r-bit-rry", "html_url": "https://github.com/r-bit-rry", "followers_url": "https://api.github.com/users/r-bit-rry/followers", "following_url": "https://api.github.com/users/r-bit-rry/following{/other_user}", "gists_url": "https://api.github.com/users/r-bit-rry/gists{/gist_id}", "starred_url": "https://api.github.com/users/r-bit-rry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r-bit-rry/subscriptions", "organizations_url": "https://api.github.com/users/r-bit-rry/orgs", "repos_url": "https://api.github.com/users/r-bit-rry/repos", "events_url": "https://api.github.com/users/r-bit-rry/events{/privacy}", "received_events_url": "https://api.github.com/users/r-bit-rry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 967949847, "node_id": "MDU6TGFiZWw5Njc5NDk4NDc=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Topic:NPM", "name": "Topic:NPM", "color": "bfdadc", "default": false, "description": "Implementing NPM-style version specifiers"}, {"id": 333304799, "node_id": "MDU6TGFiZWwzMzMzMDQ3OTk=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:NewFeature", "name": "Type:NewFeature", "color": "02d7e1", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-27T08:53:19Z", "updated_at": "2019-08-28T19:16:35Z", "closed_at": "2019-08-28T19:16:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to NPM semver documentation .x behaviour is supposed to act like:\r\n\r\n    Patch releases: 1.0 or 1.0.x or ~1.0.4\r\n    Minor releases: 1 or 1.x or ^1.0.4\r\n    Major releases: * or x\r\n\r\nHowever Spec class doesn't parse versions with 'x' instead of a digit", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/65", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/65/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/65/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/65", "id": 290055152, "node_id": "MDU6SXNzdWUyOTAwNTUxNTI=", "number": 65, "title": "ints shouldn't be compared with `is`", "user": {"login": "Julian", "id": 329822, "node_id": "MDQ6VXNlcjMyOTgyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/329822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julian", "html_url": "https://github.com/Julian", "followers_url": "https://api.github.com/users/Julian/followers", "following_url": "https://api.github.com/users/Julian/following{/other_user}", "gists_url": "https://api.github.com/users/Julian/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julian/subscriptions", "organizations_url": "https://api.github.com/users/Julian/orgs", "repos_url": "https://api.github.com/users/Julian/repos", "events_url": "https://api.github.com/users/Julian/events{/privacy}", "received_events_url": "https://api.github.com/users/Julian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-19T17:44:44Z", "updated_at": "2018-06-18T11:08:14Z", "closed_at": "2018-06-18T11:08:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "See e.g. https://github.com/rbarrois/python-semanticversion/blob/master/semantic_version/base.py#L94 -- it's implementation specific as to whether any given int is the same actual object as any other.\r\n\r\nIt happens to be this will work fine on CPython at the minute, which is unlikely to change its behavior, but that's not guaranteed across implementations (and there's no disadvantage to using == :).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/61", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/61/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/61/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/61", "id": 270877088, "node_id": "MDU6SXNzdWUyNzA4NzcwODg=", "number": 61, "title": "Carat ^ matching is not compatible with NPM prerelease exclusion", "user": {"login": "paulortman", "id": 9878230, "node_id": "MDQ6VXNlcjk4NzgyMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9878230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulortman", "html_url": "https://github.com/paulortman", "followers_url": "https://api.github.com/users/paulortman/followers", "following_url": "https://api.github.com/users/paulortman/following{/other_user}", "gists_url": "https://api.github.com/users/paulortman/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulortman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulortman/subscriptions", "organizations_url": "https://api.github.com/users/paulortman/orgs", "repos_url": "https://api.github.com/users/paulortman/repos", "events_url": "https://api.github.com/users/paulortman/events{/privacy}", "received_events_url": "https://api.github.com/users/paulortman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 967949847, "node_id": "MDU6TGFiZWw5Njc5NDk4NDc=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Topic:NPM", "name": "Topic:NPM", "color": "bfdadc", "default": false, "description": "Implementing NPM-style version specifiers"}, {"id": 5006041, "node_id": "MDU6TGFiZWw1MDA2MDQx", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Bug", "name": "Type:Bug", "color": "fc2929", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-03T04:35:02Z", "updated_at": "2019-08-28T19:11:59Z", "closed_at": "2019-08-28T19:11:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The current carat match algorithm matches pre-release versions (-alpha, -beta).  NPM only considers those versions which are not pre-releases.  Given that the carat match was added explicitly to mirror the NPM extension, it seems like identical behavior is desired.\r\n\r\nFor example, search for the \"babel\" package from [semver](https://semver.npmjs.com/) and then use \"^5.0.0\" as the search term.  None of the 5.0.0-betas are selected.  Using python-semanticversion, they would match.\r\n\r\nTo fix this will require adjusting existing tests -- and therefore potentially breaking existing behavior.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/55", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/55/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/55/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/55", "id": 250019725, "node_id": "MDU6SXNzdWUyNTAwMTk3MjU=", "number": 55, "title": "Version.__repr__ does not respect subclasses", "user": {"login": "kgbaird", "id": 7782732, "node_id": "MDQ6VXNlcjc3ODI3MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7782732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kgbaird", "html_url": "https://github.com/kgbaird", "followers_url": "https://api.github.com/users/kgbaird/followers", "following_url": "https://api.github.com/users/kgbaird/following{/other_user}", "gists_url": "https://api.github.com/users/kgbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/kgbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kgbaird/subscriptions", "organizations_url": "https://api.github.com/users/kgbaird/orgs", "repos_url": "https://api.github.com/users/kgbaird/repos", "events_url": "https://api.github.com/users/kgbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/kgbaird/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 967960133, "node_id": "MDU6TGFiZWw5Njc5NjAxMzM=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Topic:API", "name": "Topic:API", "color": "bfdadc", "default": false, "description": "Improvements to the library API"}, {"id": 5006043, "node_id": "MDU6TGFiZWw1MDA2MDQz", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Enhancement", "name": "Type:Enhancement", "color": "84b6eb", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-14T12:44:38Z", "updated_at": "2018-06-18T13:44:07Z", "closed_at": "2018-06-18T13:44:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The current `__repr__` implementation hard codes `Version` as the class name. This means any subclasses will be represented with `Version` instead of their class name. Would it be feasible to change this so the class name was shown instead of the hard coded `Version`.\r\n\r\nI'm willing to work on this, and in fact, already have a commit staged up in a fork, if this change is acceptable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/53", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/53/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/53/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/53", "id": 245836408, "node_id": "MDU6SXNzdWUyNDU4MzY0MDg=", "number": 53, "title": "Construct Version objects from tuples", "user": {"login": "drdavella", "id": 2458487, "node_id": "MDQ6VXNlcjI0NTg0ODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2458487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drdavella", "html_url": "https://github.com/drdavella", "followers_url": "https://api.github.com/users/drdavella/followers", "following_url": "https://api.github.com/users/drdavella/following{/other_user}", "gists_url": "https://api.github.com/users/drdavella/gists{/gist_id}", "starred_url": "https://api.github.com/users/drdavella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drdavella/subscriptions", "organizations_url": "https://api.github.com/users/drdavella/orgs", "repos_url": "https://api.github.com/users/drdavella/repos", "events_url": "https://api.github.com/users/drdavella/events{/privacy}", "received_events_url": "https://api.github.com/users/drdavella/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 967946219, "node_id": "MDU6TGFiZWw5Njc5NDYyMTk=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Status:DesignNeeded", "name": "Status:DesignNeeded", "color": "fef2c0", "default": false, "description": "This issue is waiting for somewhat to suggest a new design"}, {"id": 967960133, "node_id": "MDU6TGFiZWw5Njc5NjAxMzM=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Topic:API", "name": "Topic:API", "color": "bfdadc", "default": false, "description": "Improvements to the library API"}, {"id": 5006043, "node_id": "MDU6TGFiZWw1MDA2MDQz", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Type:Enhancement", "name": "Type:Enhancement", "color": "84b6eb", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-26T19:57:41Z", "updated_at": "2019-08-28T19:17:35Z", "closed_at": "2019-08-28T19:17:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful to be able to do the following:\r\n```python\r\nimport semantic_version as sv\r\nversion = sv.Version((1,0,0))\r\n```\r\nI would be willing to take on a PR for this feature myself, if it seems reasonable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/48", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/48/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/48/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/48", "id": 182713972, "node_id": "MDU6SXNzdWUxODI3MTM5NzI=", "number": 48, "title": "no python 2 wheel/universal wheel", "user": {"login": "RonnyPfannschmidt", "id": 156838, "node_id": "MDQ6VXNlcjE1NjgzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/156838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RonnyPfannschmidt", "html_url": "https://github.com/RonnyPfannschmidt", "followers_url": "https://api.github.com/users/RonnyPfannschmidt/followers", "following_url": "https://api.github.com/users/RonnyPfannschmidt/following{/other_user}", "gists_url": "https://api.github.com/users/RonnyPfannschmidt/gists{/gist_id}", "starred_url": "https://api.github.com/users/RonnyPfannschmidt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RonnyPfannschmidt/subscriptions", "organizations_url": "https://api.github.com/users/RonnyPfannschmidt/orgs", "repos_url": "https://api.github.com/users/RonnyPfannschmidt/repos", "events_url": "https://api.github.com/users/RonnyPfannschmidt/events{/privacy}", "received_events_url": "https://api.github.com/users/RonnyPfannschmidt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-13T07:20:11Z", "updated_at": "2019-08-28T19:18:28Z", "closed_at": "2019-08-28T19:18:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/46", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/46/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/46/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/46", "id": 161297459, "node_id": "MDU6SXNzdWUxNjEyOTc0NTk=", "number": 46, "title": "Specs are separated using commas instead of spaces", "user": {"login": "BernhardPosselt", "id": 195053, "node_id": "MDQ6VXNlcjE5NTA1Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/195053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BernhardPosselt", "html_url": "https://github.com/BernhardPosselt", "followers_url": "https://api.github.com/users/BernhardPosselt/followers", "following_url": "https://api.github.com/users/BernhardPosselt/following{/other_user}", "gists_url": "https://api.github.com/users/BernhardPosselt/gists{/gist_id}", "starred_url": "https://api.github.com/users/BernhardPosselt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BernhardPosselt/subscriptions", "organizations_url": "https://api.github.com/users/BernhardPosselt/orgs", "repos_url": "https://api.github.com/users/BernhardPosselt/repos", "events_url": "https://api.github.com/users/BernhardPosselt/events{/privacy}", "received_events_url": "https://api.github.com/users/BernhardPosselt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-20T21:16:46Z", "updated_at": "2019-08-28T19:19:36Z", "closed_at": "2019-08-28T19:19:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are currently writing an API for which will be accessed with PHP and/or JS. Both have a semver package that supports ranges, however they split the ranges using spaces rather than spaces, e.g.\n\n```\n>=1.2.3 <2.0.0\n```\n\nand not\n\n```\n>=1.2.3,<2.0.0\n```\n\nAFAIK ranges are not part of semver, but it would be awesome to be compatible. \n\nThere are two ways I can think of fixing this:\n- Simply replace the comma with a space which would be backwards incompatible but cleaner, or\n- When instantiating a Spec we check if the string contains a comma and save it in a bool attribute. When parsing the version and serializing back to a string we would inspect the flag and use a comma or space. This approach would be backwards compatible but not as nice :)\n\nI could create a PR if you want, it seems these are the only lines that have to be adjusted:\n- https://github.com/rbarrois/python-semanticversion/blob/master/semantic_version/base.py#L503\n- https://github.com/rbarrois/python-semanticversion/blob/master/semantic_version/base.py#L532\n\nWhat do you think?\n\nRelated:\n- https://docs.npmjs.com/misc/semver\n- https://packagist.org/packages/vierbergenlars/php-semver\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/43", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/43/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/43/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/43", "id": 160241170, "node_id": "MDU6SXNzdWUxNjAyNDExNzA=", "number": 43, "title": "SubfieldBase will be removed in Django 1.10", "user": {"login": "drewbrew", "id": 7773256, "node_id": "MDQ6VXNlcjc3NzMyNTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7773256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drewbrew", "html_url": "https://github.com/drewbrew", "followers_url": "https://api.github.com/users/drewbrew/followers", "following_url": "https://api.github.com/users/drewbrew/following{/other_user}", "gists_url": "https://api.github.com/users/drewbrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/drewbrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drewbrew/subscriptions", "organizations_url": "https://api.github.com/users/drewbrew/orgs", "repos_url": "https://api.github.com/users/drewbrew/repos", "events_url": "https://api.github.com/users/drewbrew/events{/privacy}", "received_events_url": "https://api.github.com/users/drewbrew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-06-14T17:42:08Z", "updated_at": "2016-09-28T08:56:57Z", "closed_at": "2016-09-01T11:24:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Warnings upon launching a Django 1.9.5 project using `semantic_version`:\n\n```\n/<snipped>/.venv/lib/python3.5/site-packages/semantic_version/django_fields.py:38: RemovedInDjango110Warning: SubfieldBase has been deprecated. Use Field.from_db_value instead.\n  str('SemVerField'), (BaseSemVerField, models.CharField), {})\n\n/<snipped>/.venv/lib/python3.5/site-packages/semantic_version/django_fields.py:41: RemovedInDjango110Warning: SubfieldBase has been deprecated. Use Field.from_db_value instead.\n  class VersionField(SemVerField):\n\n/<snipped>/.venv/lib/python3.5/site-packages/semantic_version/django_fields.py:64: RemovedInDjango110Warning: SubfieldBase has been deprecated. Use Field.from_db_value instead.\n  class SpecField(SemVerField):\n```\n\nIt looks like the solution is to remove `__metaclass__` and manually define the to/from Python methods: https://stackoverflow.com/questions/35166085/how-to-deal-with-subfieldbase-has-been-deprecated-use-field-from-db-value-inst\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/40", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/40/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/40/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/40", "id": 137069463, "node_id": "MDU6SXNzdWUxMzcwNjk0NjM=", "number": 40, "title": "Add doc for \"compatible release\" spec", "user": {"login": "rbarrois", "id": 694541, "node_id": "MDQ6VXNlcjY5NDU0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/694541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbarrois", "html_url": "https://github.com/rbarrois", "followers_url": "https://api.github.com/users/rbarrois/followers", "following_url": "https://api.github.com/users/rbarrois/following{/other_user}", "gists_url": "https://api.github.com/users/rbarrois/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbarrois/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbarrois/subscriptions", "organizations_url": "https://api.github.com/users/rbarrois/orgs", "repos_url": "https://api.github.com/users/rbarrois/repos", "events_url": "https://api.github.com/users/rbarrois/events{/privacy}", "received_events_url": "https://api.github.com/users/rbarrois/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 333307117, "node_id": "MDU6TGFiZWwzMzMzMDcxMTc=", "url": "https://api.github.com/repos/rbarrois/python-semanticversion/labels/Topic:Doc", "name": "Topic:Doc", "color": "02e10c", "default": false, "description": "Documentation, examples, HowTo, guides, etc"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-28T16:36:09Z", "updated_at": "2016-03-07T12:44:14Z", "closed_at": "2016-03-07T12:44:14Z", "author_association": "OWNER", "active_lock_reason": null, "body": "A new feature was added in #38, we still need to add the doc :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/37", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/37/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/37/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/37", "id": 135878449, "node_id": "MDU6SXNzdWUxMzU4Nzg0NDk=", "number": 37, "title": "Support compatible release clauses (~=)", "user": {"login": "ekmartin", "id": 3536982, "node_id": "MDQ6VXNlcjM1MzY5ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3536982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekmartin", "html_url": "https://github.com/ekmartin", "followers_url": "https://api.github.com/users/ekmartin/followers", "following_url": "https://api.github.com/users/ekmartin/following{/other_user}", "gists_url": "https://api.github.com/users/ekmartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekmartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekmartin/subscriptions", "organizations_url": "https://api.github.com/users/ekmartin/orgs", "repos_url": "https://api.github.com/users/ekmartin/repos", "events_url": "https://api.github.com/users/ekmartin/events{/privacy}", "received_events_url": "https://api.github.com/users/ekmartin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-23T21:56:30Z", "updated_at": "2016-02-28T16:13:01Z", "closed_at": "2016-02-28T16:13:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi!\nHere's an example:\n\n``` python\nSpec('~=1.5.6') # results in a ValueError\n```\n\nhttps://www.python.org/dev/peps/pep-0440/#compatible-release\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/35", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/35/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/35/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/35", "id": 134570827, "node_id": "MDU6SXNzdWUxMzQ1NzA4Mjc=", "number": 35, "title": "^ support isn't npm-compatible", "user": {"login": "autopulated", "id": 3456211, "node_id": "MDQ6VXNlcjM0NTYyMTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3456211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/autopulated", "html_url": "https://github.com/autopulated", "followers_url": "https://api.github.com/users/autopulated/followers", "following_url": "https://api.github.com/users/autopulated/following{/other_user}", "gists_url": "https://api.github.com/users/autopulated/gists{/gist_id}", "starred_url": "https://api.github.com/users/autopulated/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/autopulated/subscriptions", "organizations_url": "https://api.github.com/users/autopulated/orgs", "repos_url": "https://api.github.com/users/autopulated/repos", "events_url": "https://api.github.com/users/autopulated/events{/privacy}", "received_events_url": "https://api.github.com/users/autopulated/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-18T12:39:06Z", "updated_at": "2016-02-22T11:03:52Z", "closed_at": "2016-02-21T17:55:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "npm treats ^ differently for 0.x versions, see the node-semver docs: https://github.com/npm/node-semver#caret-ranges-123-025-004\n\n(and fwiw yotta also treats it [differently](http://yottadocs.mbed.com/reference/module.html#dependencies), treating ^ for 0.x versions as meaning exact version, as semver technically has no compatibility guarantees for 0.x versions)\n\n(While I was checking the code i also noticed a double-return here: https://github.com/rbarrois/python-semanticversion/blob/master/semantic_version/base.py#L462-L463)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/33", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/33/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/33/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/33", "id": 118684667, "node_id": "MDU6SXNzdWUxMTg2ODQ2Njc=", "number": 33, "title": "Optional VersionField that is null breaks Django ORM on retrieval", "user": {"login": "hugorodgerbrown", "id": 200944, "node_id": "MDQ6VXNlcjIwMDk0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/200944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugorodgerbrown", "html_url": "https://github.com/hugorodgerbrown", "followers_url": "https://api.github.com/users/hugorodgerbrown/followers", "following_url": "https://api.github.com/users/hugorodgerbrown/following{/other_user}", "gists_url": "https://api.github.com/users/hugorodgerbrown/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugorodgerbrown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugorodgerbrown/subscriptions", "organizations_url": "https://api.github.com/users/hugorodgerbrown/orgs", "repos_url": "https://api.github.com/users/hugorodgerbrown/repos", "events_url": "https://api.github.com/users/hugorodgerbrown/events{/privacy}", "received_events_url": "https://api.github.com/users/hugorodgerbrown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-24T19:25:18Z", "updated_at": "2016-02-11T23:37:08Z", "closed_at": "2016-02-11T23:37:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there - running on Django 1.8. I have a model that has an optional VersionField (null=True, blank=True). If I save the model, I can see in the database that the value is stored as the string 'None', which then subsequently fails on rehydration:\n\n```\nTraceback (most recent call last):\n  File \"/Projects/python-semanticversion/tests/test_django.py\", line 56, in test_null_version\n    self.assertRaises(ValueError, models.PartialVersionModel.objects.get(id=obj.id))\n  File \"/Users/hugo/.virtualenvs/semver/lib/python2.7/site-packages/django/db/models/manager.py\", line 127, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/Users/hugo/.virtualenvs/semver/lib/python2.7/site-packages/django/db/models/query.py\", line 328, in get\n    num = len(clone)\n  File \"/Users/hugo/.virtualenvs/semver/lib/python2.7/site-packages/django/db/models/query.py\", line 144, in __len__\n    self._fetch_all()\n  File \"/Users/hugo/.virtualenvs/semver/lib/python2.7/site-packages/django/db/models/query.py\", line 965, in _fetch_all\n    self._result_cache = list(self.iterator())\n  File \"/Users/hugo/.virtualenvs/semver/lib/python2.7/site-packages/django/db/models/query.py\", line 255, in iterator\n    obj = model_cls.from_db(db, init_list, row[model_fields_start:model_fields_end])\n  File \"/Users/hugo/.virtualenvs/semver/lib/python2.7/site-packages/django/db/models/base.py\", line 489, in from_db\n    new = cls(*values)\n  File \"/Users/hugo/.virtualenvs/semver/lib/python2.7/site-packages/django/db/models/base.py\", line 410, in __init__\n    setattr(self, field.attname, val)\n  File \"/Users/hugo/.virtualenvs/semver/lib/python2.7/site-packages/django/db/models/fields/subclassing.py\", line 44, in __set__\n    obj.__dict__[self.field.name] = self.field.to_python(value)\n  File \"/Users/hugo/Projects/src/github.com/yunojuno/python-semanticversion/semantic_version/django_fields.py\", line 61, in to_python\n    return base.Version(value, partial=self.partial)\n  File \"/Users/hugo/Projects/src/github.com/yunojuno/python-semanticversion/semantic_version/base.py\", line 75, in __init__\n    major, minor, patch, prerelease, build = self.parse(version_string, partial)\n  File \"/Users/hugo/Projects/src/github.com/yunojuno/python-semanticversion/semantic_version/base.py\", line 192, in parse\n    raise ValueError('Invalid version string: %r' % version_string)\nValueError: Invalid version string: u'None'\n```\n\nYou can test this with the following test:\n\n``` python\ndef test_optional_field(self):\n    \"\"\"Test storing a null value in optional VersionField.\"\"\"\n    obj = models.PartialVersionModel()\n    obj.save()\n    self.assertIsNone(obj.optional)\n    self.assertRaises(ValueError, models.PartialVersionModel.objects.get, id=obj.id)\n```\n\nThis makes some sense, as the `VersionField.to_python` method doesn't check for 'None':\n\n```\ndef to_python(self, value):\n    \"\"\"Converts any value to a base.Version field.\"\"\"\n    if value is None or value == '':\n        return value\n    if isinstance(value, base.Version):\n        return value\n    if self.coerce:\n        return base.Version.coerce(value, partial=self.partial)\n    else:\n        return base.Version(value, partial=self.partial)\n```\n\nPossibly looking at the `BaseSemVerField.get_prep_value` method, which just str's the object value:\n\n``` python\ndef get_prep_value(self, obj):\n    return str(obj)\n```\n\nThis would turn `None` into `'None'` \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/30", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/30/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/30/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/30", "id": 111376004, "node_id": "MDU6SXNzdWUxMTEzNzYwMDQ=", "number": 30, "title": "Support npm/composer extensions?", "user": {"login": "skwashd", "id": 45939, "node_id": "MDQ6VXNlcjQ1OTM5", "avatar_url": "https://avatars2.githubusercontent.com/u/45939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skwashd", "html_url": "https://github.com/skwashd", "followers_url": "https://api.github.com/users/skwashd/followers", "following_url": "https://api.github.com/users/skwashd/following{/other_user}", "gists_url": "https://api.github.com/users/skwashd/gists{/gist_id}", "starred_url": "https://api.github.com/users/skwashd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skwashd/subscriptions", "organizations_url": "https://api.github.com/users/skwashd/orgs", "repos_url": "https://api.github.com/users/skwashd/repos", "events_url": "https://api.github.com/users/skwashd/events{/privacy}", "received_events_url": "https://api.github.com/users/skwashd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-10-14T11:07:42Z", "updated_at": "2016-02-12T00:20:07Z", "closed_at": "2016-02-12T00:20:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "npm and composer support the use of tilde (`~`) and caret (`^`) in version requirements.  Would you accept a well written and tested patch that implements support for this in comparisons?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/24", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/24/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/24/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/24", "id": 103994541, "node_id": "MDU6SXNzdWUxMDM5OTQ1NDE=", "number": 24, "title": "Version bump from prereleases not working as expected", "user": {"login": "MinchinWeb", "id": 1548809, "node_id": "MDQ6VXNlcjE1NDg4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1548809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MinchinWeb", "html_url": "https://github.com/MinchinWeb", "followers_url": "https://api.github.com/users/MinchinWeb/followers", "following_url": "https://api.github.com/users/MinchinWeb/following{/other_user}", "gists_url": "https://api.github.com/users/MinchinWeb/gists{/gist_id}", "starred_url": "https://api.github.com/users/MinchinWeb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MinchinWeb/subscriptions", "organizations_url": "https://api.github.com/users/MinchinWeb/orgs", "repos_url": "https://api.github.com/users/MinchinWeb/repos", "events_url": "https://api.github.com/users/MinchinWeb/events{/privacy}", "received_events_url": "https://api.github.com/users/MinchinWeb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-31T06:10:59Z", "updated_at": "2016-02-17T16:57:52Z", "closed_at": "2016-02-11T23:42:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was expecting that a prerelease version, when bumped, would go up to the 'full' or release version without bumping the main version number if not needed.\n\nProbably makes more sense if I give examples.\n\nWhat I expected:\n\n```\n1.0.0-dev --[major]--> 1.0.0\n1.0.1-dev --[major]--> 2.0.0\n1.1.0-dev --[major]--> 2.0.0\n\n1.0.0-dev --[minor]--> 1.0.0\n1.0.1-dev --[minor]--> 1.1.0\n1.1.0-dev --[minor]--> 1.1.0\n\n1.0.0-dev --[patch]--> 1.0.0\n1.0.1-dev --[patch]--> 1.0.1\n1.1.0-dev --[patch]--> 1.1.0\n```\n\nWhat currently happens:\n\n```\n1.0.0-dev --[major]--> 2.0.0\n1.0.1-dev --[major]--> 2.0.0\n1.1.0-dev --[major]--> 2.0.0\n\n1.0.0-dev --[minor]--> 1.1.0\n1.0.1-dev --[minor]--> 1.1.0\n1.1.0-dev --[minor]--> 1.2.0\n\n1.0.0-dev --[patch]--> 1.0.1\n1.0.1-dev --[patch]--> 1.0.2\n1.1.0-dev --[patch]--> 1.1.1\n```\n\nIf this a bug in the implementation, or have I missed something in the spec? Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/22", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/22/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/22/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/22", "id": 92520006, "node_id": "MDU6SXNzdWU5MjUyMDAwNg==", "number": 22, "title": "django unit tests are broken", "user": {"login": "mhrivnak", "id": 53091, "node_id": "MDQ6VXNlcjUzMDkx", "avatar_url": "https://avatars2.githubusercontent.com/u/53091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhrivnak", "html_url": "https://github.com/mhrivnak", "followers_url": "https://api.github.com/users/mhrivnak/followers", "following_url": "https://api.github.com/users/mhrivnak/following{/other_user}", "gists_url": "https://api.github.com/users/mhrivnak/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhrivnak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhrivnak/subscriptions", "organizations_url": "https://api.github.com/users/mhrivnak/orgs", "repos_url": "https://api.github.com/users/mhrivnak/repos", "events_url": "https://api.github.com/users/mhrivnak/events{/privacy}", "received_events_url": "https://api.github.com/users/mhrivnak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-02T01:10:48Z", "updated_at": "2015-07-02T14:36:05Z", "closed_at": "2015-07-02T14:36:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It appears that when django 1.7 or newer is installed, some unit tests have errors. I tested with 1.4.20, 1.5.12, and 1.6.11 which all pass.\n\nExamples below are using a fresh python 2.7.9 virtualenv, with the stated django version, and South==1.0.2\n\nOn 1.7.8, this happens:\n\n```\n======================================================================\nERROR: setUpClass (tests.test_django.DbInteractingTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/mhrivnak/git/python-semanticversion/tests/test_django.py\", line 182, in setUpClass\n    cls.old_state = DjangoTestSuiteRunner().setup_databases()\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/test/runner.py\", line 109, in setup_databases\n    return setup_databases(self.verbosity, self.interactive, **kwargs)\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/test/runner.py\", line 299, in setup_databases\n    serialize=connection.settings_dict.get(\"TEST\", {}).get(\"SERIALIZE\", True),\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/db/backends/creation.py\", line 377, in create_test_db\n    test_flush=True,\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 93, in call_command\n    app_name = get_commands()[name]\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/utils/lru_cache.py\", line 101, in wrapper\n    result = user_function(*args, **kwds)\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 73, in get_commands\n    for app_config in reversed(list(apps.get_app_configs())):\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/apps/registry.py\", line 137, in get_app_configs\n    self.check_apps_ready()\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/apps/registry.py\", line 124, in check_apps_ready\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\nAppRegistryNotReady: Apps aren't loaded yet.\n\n======================================================================\nERROR: test_serialization (tests.test_django.DjangoFieldTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/mhrivnak/git/python-semanticversion/tests/test_django.py\", line 97, in test_serialization\n    obj1, obj2 = serializers.deserialize('json', data)\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 81, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 75, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 93, in Deserializer\n    Model = _get_model(d[\"model\"])\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 156, in _get_model\n    return apps.get_model(model_identifier)\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/apps/registry.py\", line 199, in get_model\n    self.check_models_ready()\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/apps/registry.py\", line 131, in check_models_ready\n    raise AppRegistryNotReady(\"Models aren't loaded yet.\")\nDeserializationError: Models aren't loaded yet.\n\n======================================================================\nERROR: test_serialization_partial (tests.test_django.DjangoFieldTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/mhrivnak/git/python-semanticversion/tests/test_django.py\", line 109, in test_serialization_partial\n    obj1, obj2 = serializers.deserialize('json', data)\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 81, in Deserializer\n    six.reraise(DeserializationError, DeserializationError(e), sys.exc_info()[2])\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/core/serializers/json.py\", line 75, in Deserializer\n    for obj in PythonDeserializer(objects, **options):\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 93, in Deserializer\n    Model = _get_model(d[\"model\"])\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/core/serializers/python.py\", line 156, in _get_model\n    return apps.get_model(model_identifier)\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/apps/registry.py\", line 199, in get_model\n    self.check_models_ready()\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/apps/registry.py\", line 131, in check_models_ready\n    raise AppRegistryNotReady(\"Models aren't loaded yet.\")\nDeserializationError: Models aren't loaded yet.\n\n======================================================================\nERROR: test_freezing_app (tests.test_django.SouthTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/mhrivnak/git/python-semanticversion/tests/test_django.py\", line 147, in test_freezing_app\n    frozen = south.creator.freezer.freeze_apps('django_test_app')\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/south/creator/freezer.py\", line 26, in freeze_apps\n    for model in models.get_models(models.get_app(app)):\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/db/models/__init__.py\", line 54, in alias\n    return getattr(loading, function_name)(*args, **kwargs)\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/apps/registry.py\", line 372, in get_app\n    models_module = self.get_app_config(app_label).models_module\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/apps/registry.py\", line 146, in get_app_config\n    self.check_apps_ready()\n  File \"/home/mhrivnak/pythons/semver-d17/local/lib/python2.7/site-packages/django/apps/registry.py\", line 124, in check_apps_ready\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\nAppRegistryNotReady: Apps aren't loaded yet.\n\n----------------------------------------------------------------------\nRan 57 tests in 0.027s\n\nFAILED (errors=4, skipped=1)\n```\n\nAnd on 1.8.2, this...\n\n```\n$ python setup.py test\nrunning test\nrunning egg_info\nwriting semantic_version.egg-info/PKG-INFO\nwriting top-level names to semantic_version.egg-info/top_level.txt\nwriting dependency_links to semantic_version.egg-info/dependency_links.txt\nreading manifest file 'semantic_version.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nno previously-included directories found matching 'docs/_build'\nwriting manifest file 'semantic_version.egg-info/SOURCES.txt'\nrunning build_ext\nTraceback (most recent call last):\n  File \"setup.py\", line 58, in <module>\n    test_suite='tests',\n  File \"/usr/lib/python2.7/distutils/core.py\", line 151, in setup\n    dist.run_commands()\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n    self.run_command(cmd)\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 972, in run_command\n    cmd_obj.run()\n  File \"/home/mhrivnak/pythons/semver/local/lib/python2.7/site-packages/setuptools/command/test.py\", line 142, in run\n    self.with_project_on_sys_path(self.run_tests)\n  File \"/home/mhrivnak/pythons/semver/local/lib/python2.7/site-packages/setuptools/command/test.py\", line 122, in with_project_on_sys_path\n    func()\n  File \"/home/mhrivnak/pythons/semver/local/lib/python2.7/site-packages/setuptools/command/test.py\", line 163, in run_tests\n    testRunner=self._resolve_as_ep(self.test_runner),\n  File \"/usr/lib/python2.7/unittest/main.py\", line 94, in __init__\n    self.parseArgs(argv)\n  File \"/usr/lib/python2.7/unittest/main.py\", line 149, in parseArgs\n    self.createTests()\n  File \"/usr/lib/python2.7/unittest/main.py\", line 158, in createTests\n    self.module)\n  File \"/usr/lib/python2.7/unittest/loader.py\", line 130, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/usr/lib/python2.7/unittest/loader.py\", line 103, in loadTestsFromName\n    return self.loadTestsFromModule(obj)\n  File \"/home/mhrivnak/pythons/semver/local/lib/python2.7/site-packages/setuptools/command/test.py\", line 37, in loadTestsFromModule\n    tests.append(self.loadTestsFromName(submodule))\n  File \"/usr/lib/python2.7/unittest/loader.py\", line 100, in loadTestsFromName\n    parent, obj = obj, getattr(obj, part)\nAttributeError: 'module' object has no attribute 'test_django'\n```\n\nThe problem on 1.8.2 appears to be the result of this import failing: https://github.com/rbarrois/python-semanticversion/blob/v2.4.1/tests/test_django.py#L176\n\nThat class was removed as of django 1.8: https://docs.djangoproject.com/en/1.8/releases/1.8/\n\nIf you fix that import to instead use django.test.runner.DiscoverRunner, then the same errors from 1.7.8 appear.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/20", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/20/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/20/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/20", "id": 65236025, "node_id": "MDU6SXNzdWU2NTIzNjAyNQ==", "number": 20, "title": "Missing CREDITS file in tarball", "user": {"login": "hguemar", "id": 1500122, "node_id": "MDQ6VXNlcjE1MDAxMjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1500122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hguemar", "html_url": "https://github.com/hguemar", "followers_url": "https://api.github.com/users/hguemar/followers", "following_url": "https://api.github.com/users/hguemar/following{/other_user}", "gists_url": "https://api.github.com/users/hguemar/gists{/gist_id}", "starred_url": "https://api.github.com/users/hguemar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hguemar/subscriptions", "organizations_url": "https://api.github.com/users/hguemar/orgs", "repos_url": "https://api.github.com/users/hguemar/repos", "events_url": "https://api.github.com/users/hguemar/events{/privacy}", "received_events_url": "https://api.github.com/users/hguemar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-30T15:18:16Z", "updated_at": "2015-03-31T23:20:37Z", "closed_at": "2015-03-31T23:20:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm packaging python-semanticversion for Fedora, and documentation fails to build due to docs/credits.rst being a symbolic link to CREDITS which is not shipped in 2.3.1 tarball.\n\nIt's not critical, but packagers would be grateful if you fix it in the next release :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/18", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/18/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/18/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/18", "id": 59840131, "node_id": "MDU6SXNzdWU1OTg0MDEzMQ==", "number": 18, "title": "semver spec violation for versions with build metadata", "user": {"login": "mwarren", "id": 150902, "node_id": "MDQ6VXNlcjE1MDkwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/150902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwarren", "html_url": "https://github.com/mwarren", "followers_url": "https://api.github.com/users/mwarren/followers", "following_url": "https://api.github.com/users/mwarren/following{/other_user}", "gists_url": "https://api.github.com/users/mwarren/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwarren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwarren/subscriptions", "organizations_url": "https://api.github.com/users/mwarren/orgs", "repos_url": "https://api.github.com/users/mwarren/repos", "events_url": "https://api.github.com/users/mwarren/events{/privacy}", "received_events_url": "https://api.github.com/users/mwarren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-04T18:32:18Z", "updated_at": "2016-02-12T00:20:32Z", "closed_at": "2016-02-12T00:20:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to [semver 2.0.0](http://semver.org/spec/v2.0.0.html), spec rule number 10, two versions that differ only in build metadata should have the same precedence. However, `cmp` of two such versions returns non-zero:\n\n```\n$ python\nPython 2.7.6 (default, Sep  9 2014, 15:04:36)\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.39)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from semantic_version import Version\n>>> cmp(Version('1.0.0'), Version('1.0.0+build'))\n-1\n```\n\nI almost started working on a fix and pull request, but it looks from [pydoc in the code](https://github.com/rbarrois/python-semanticversion/blob/master/semantic_version/base.py#L284) that this might be intentional?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/16", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/16/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/16/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/16", "id": 57945942, "node_id": "MDU6SXNzdWU1Nzk0NTk0Mg==", "number": 16, "title": "API for bumping versions", "user": {"login": "RickEyre", "id": 1071332, "node_id": "MDQ6VXNlcjEwNzEzMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1071332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RickEyre", "html_url": "https://github.com/RickEyre", "followers_url": "https://api.github.com/users/RickEyre/followers", "following_url": "https://api.github.com/users/RickEyre/following{/other_user}", "gists_url": "https://api.github.com/users/RickEyre/gists{/gist_id}", "starred_url": "https://api.github.com/users/RickEyre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RickEyre/subscriptions", "organizations_url": "https://api.github.com/users/RickEyre/orgs", "repos_url": "https://api.github.com/users/RickEyre/repos", "events_url": "https://api.github.com/users/RickEyre/events{/privacy}", "received_events_url": "https://api.github.com/users/RickEyre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-17T16:27:48Z", "updated_at": "2015-03-31T23:21:50Z", "closed_at": "2015-03-31T23:21:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "What would you think of something like:\n\n``` python\nversion.bump_major()\nversion.bump_minor()\nversion.bump_patch()\n```\n\nEach of these would reset any lower levels in the versioning 'hierarchy'. So running `version.bump_major()` on `1.0.0-prerelease+build` would result in `2.0.0`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/14", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/14/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/14/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/14", "id": 47836632, "node_id": "MDU6SXNzdWU0NzgzNjYzMg==", "number": 14, "title": "Comparison is broken for partials", "user": {"login": "cattz", "id": 761191, "node_id": "MDQ6VXNlcjc2MTE5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/761191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cattz", "html_url": "https://github.com/cattz", "followers_url": "https://api.github.com/users/cattz/followers", "following_url": "https://api.github.com/users/cattz/following{/other_user}", "gists_url": "https://api.github.com/users/cattz/gists{/gist_id}", "starred_url": "https://api.github.com/users/cattz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cattz/subscriptions", "organizations_url": "https://api.github.com/users/cattz/orgs", "repos_url": "https://api.github.com/users/cattz/repos", "events_url": "https://api.github.com/users/cattz/events{/privacy}", "received_events_url": "https://api.github.com/users/cattz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-05T13:41:10Z", "updated_at": "2015-09-15T21:52:39Z", "closed_at": "2015-09-15T21:52:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting wrong results comparing versions using partials :\n\n``` python\nprint semantic_version.Version('1.2.0-beta', partial=True) >  semantic_version.Version('1.2.0', partial=True)\nprint semantic_version.Version('1.2.0-beta', partial=True) <  semantic_version.Version('1.2.0', partial=True)\nprint semantic_version.Version('1.2.0-beta', partial=True) == semantic_version.Version('1.2.0', partial=True)\n\nprint semantic_version.Version('1.2-beta', partial=True) >  semantic_version.Version('1.2', partial=True)\nprint semantic_version.Version('1.2-beta', partial=True) <  semantic_version.Version('1.2', partial=True)\nprint semantic_version.Version('1.2-beta', partial=True) == semantic_version.Version('1.2', partial=True)\n\nprint semantic_version.Version('1.2.0-beta') >  semantic_version.Version('1.2.0')\nprint semantic_version.Version('1.2.0-beta') <  semantic_version.Version('1.2.0')\nprint semantic_version.Version('1.2.0-beta') == semantic_version.Version('1.2.0')\n\nFalse\nFalse\nTrue\n\nFalse\nFalse\nTrue\n\nFalse\nTrue\nFalse\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/13", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/13/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/13/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/13", "id": 37299205, "node_id": "MDU6SXNzdWUzNzI5OTIwNQ==", "number": 13, "title": "specify utf-8 encoding in setup.py", "user": {"login": "dwieeb", "id": 236501, "node_id": "MDQ6VXNlcjIzNjUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/236501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwieeb", "html_url": "https://github.com/dwieeb", "followers_url": "https://api.github.com/users/dwieeb/followers", "following_url": "https://api.github.com/users/dwieeb/following{/other_user}", "gists_url": "https://api.github.com/users/dwieeb/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwieeb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwieeb/subscriptions", "organizations_url": "https://api.github.com/users/dwieeb/orgs", "repos_url": "https://api.github.com/users/dwieeb/repos", "events_url": "https://api.github.com/users/dwieeb/events{/privacy}", "received_events_url": "https://api.github.com/users/dwieeb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-07T19:01:17Z", "updated_at": "2014-09-23T22:11:52Z", "closed_at": "2014-09-23T22:11:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the module is being setup, you are defaulting to system-level encoding, which can sometimes be ascii, which fails when it parses the non-ascii character here: https://github.com/rbarrois/python-semanticversion/blob/master/semantic_version/__init__.py#L6.\n\n> Traceback (most recent call last): File \"<string>\", line 17, in <module> File \"/sites/preprod/.virtual_python/build/semantic-version/setup.py\", line 31, in <module> version=get_version(PACKAGE), File \"/sites/preprod/.virtual_python/build/semantic-version/setup.py\", line 19, in get_version for line in f: File \"/sites/preprod/.virtual_python/lib/python3.3/encodings/ascii.py\", line 26, in decode return codecs.ascii_decode(input, self.errors)[0] UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 167: ordinal not in range(128) Complete output from command python setup.py egg_info: Traceback (most recent call last): File \"<string>\", line 17, in <module> File \"/sites/preprod/.virtual_python/build/semantic-version/setup.py\", line 31, in <module> version=get_version(PACKAGE), File \"/sites/preprod/.virtual_python/build/semantic-version/setup.py\", line 19, in get_version for line in f: File \"/sites/preprod/.virtual_python/lib/python3.3/encodings/ascii.py\", line 26, in decode return codecs.ascii_decode(input, self.errors)[0] UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 167: ordinal not in range(128)\n\nThis is probably what you wanna do before parsing files in setup.py:\n\n``` python\nimport sys\nsys.setdefaultencoding(\"UTF-8\")\n```\n\nAn alternative fix is to set \n`LANG=\"en_us.UTF-8\"`\nin `.bashrc` of the user that does the pip install\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/9", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/9/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/9/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/9", "id": 27457151, "node_id": "MDU6SXNzdWUyNzQ1NzE1MQ==", "number": 9, "title": "Update to semver 2.0.0", "user": {"login": "Zearin", "id": 630124, "node_id": "MDQ6VXNlcjYzMDEyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/630124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zearin", "html_url": "https://github.com/Zearin", "followers_url": "https://api.github.com/users/Zearin/followers", "following_url": "https://api.github.com/users/Zearin/following{/other_user}", "gists_url": "https://api.github.com/users/Zearin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zearin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zearin/subscriptions", "organizations_url": "https://api.github.com/users/Zearin/orgs", "repos_url": "https://api.github.com/users/Zearin/repos", "events_url": "https://api.github.com/users/Zearin/events{/privacy}", "received_events_url": "https://api.github.com/users/Zearin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-12T18:39:33Z", "updated_at": "2014-02-13T00:34:38Z", "closed_at": "2014-02-13T00:34:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "The latest version on http://semver.org is 2.0.0.  Let\u2019s ditch that `rc1` for this module\u2019s semver conformance! :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/7", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/7/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/7/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/7", "id": 25143144, "node_id": "MDU6SXNzdWUyNTE0MzE0NA==", "number": 7, "title": "Issue moving from 2.2.1 to 2.2.2 OSX Mavericks", "user": {"login": "howardroark", "id": 292642, "node_id": "MDQ6VXNlcjI5MjY0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/292642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/howardroark", "html_url": "https://github.com/howardroark", "followers_url": "https://api.github.com/users/howardroark/followers", "following_url": "https://api.github.com/users/howardroark/following{/other_user}", "gists_url": "https://api.github.com/users/howardroark/gists{/gist_id}", "starred_url": "https://api.github.com/users/howardroark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/howardroark/subscriptions", "organizations_url": "https://api.github.com/users/howardroark/orgs", "repos_url": "https://api.github.com/users/howardroark/repos", "events_url": "https://api.github.com/users/howardroark/events{/privacy}", "received_events_url": "https://api.github.com/users/howardroark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-07T01:45:18Z", "updated_at": "2014-01-08T23:20:30Z", "closed_at": "2014-01-08T23:20:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was able to install 2.2.1 fine, but had this issue when installing 2.2.2.\n\n```\n  Downloading semantic_version-2.2.2.tar.gz\n  Running setup.py egg_info for package semantic-version\n    Traceback (most recent call last):\n      File \"<string>\", line 16, in <module>\n      File \"/private/tmp/pip_build_root/semantic-version/setup.py\", line 58, in <module>\n        test_suite='tests',\n      File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py\", line 112, in setup\n        _setup_distribution = dist = klass(attrs)\n      File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/setuptools/dist.py\", line 260, in __init__\n        self.fetch_build_eggs(attrs.pop('setup_requires'))\n      File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/setuptools/dist.py\", line 284, in fetch_build_eggs\n        parse_requirements(requires), installer=self.fetch_build_egg\n      File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py\", line 569, in resolve\n        raise VersionConflict(dist,req) # XXX put more info here\n    pkg_resources.VersionConflict: (setuptools 0.6c12dev-r88846 (/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python), Requirement.parse('setuptools>=0.8'))\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 16, in <module>\n\n  File \"/private/tmp/pip_build_root/semantic-version/setup.py\", line 58, in <module>\n\n    test_suite='tests',\n\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/core.py\", line 112, in setup\n\n    _setup_distribution = dist = klass(attrs)\n\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/setuptools/dist.py\", line 260, in __init__\n\n    self.fetch_build_eggs(attrs.pop('setup_requires'))\n\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/setuptools/dist.py\", line 284, in fetch_build_eggs\n\n    parse_requirements(requires), installer=self.fetch_build_egg\n\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/pkg_resources.py\", line 569, in resolve\n\n    raise VersionConflict(dist,req) # XXX put more info here\n\npkg_resources.VersionConflict: (setuptools 0.6c12dev-r88846 (/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python), Requirement.parse('setuptools>=0.8'))\n\n----------------------------------------\nCleaning up...\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/4", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/4/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/4/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/4", "id": 22844135, "node_id": "MDU6SXNzdWUyMjg0NDEzNQ==", "number": 4, "title": "Automatically parse 1.x.x as partial", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-11-18T15:49:47Z", "updated_at": "2014-03-08T20:15:49Z", "closed_at": "2014-03-08T20:15:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/3", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/3/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/3/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/3", "id": 22250080, "node_id": "MDU6SXNzdWUyMjI1MDA4MA==", "number": 3, "title": "What API specification?", "user": {"login": "XNerv", "id": 3037797, "node_id": "MDQ6VXNlcjMwMzc3OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3037797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XNerv", "html_url": "https://github.com/XNerv", "followers_url": "https://api.github.com/users/XNerv/followers", "following_url": "https://api.github.com/users/XNerv/following{/other_user}", "gists_url": "https://api.github.com/users/XNerv/gists{/gist_id}", "starred_url": "https://api.github.com/users/XNerv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XNerv/subscriptions", "organizations_url": "https://api.github.com/users/XNerv/orgs", "repos_url": "https://api.github.com/users/XNerv/repos", "events_url": "https://api.github.com/users/XNerv/events{/privacy}", "received_events_url": "https://api.github.com/users/XNerv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-11-07T08:13:48Z", "updated_at": "2014-02-27T21:08:59Z", "closed_at": "2014-02-13T00:34:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "What specification of semantic version is valid for your module?\nv2.0.0   v2.0.0-rc.2    v2.0.0-rc.1\n\nThanks for the great project.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/2", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/2/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/2/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/2", "id": 12186092, "node_id": "MDU6SXNzdWUxMjE4NjA5Mg==", "number": 2, "title": "isValid(version) for public API", "user": {"login": "MaliusArth", "id": 1645005, "node_id": "MDQ6VXNlcjE2NDUwMDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1645005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaliusArth", "html_url": "https://github.com/MaliusArth", "followers_url": "https://api.github.com/users/MaliusArth/followers", "following_url": "https://api.github.com/users/MaliusArth/following{/other_user}", "gists_url": "https://api.github.com/users/MaliusArth/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaliusArth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaliusArth/subscriptions", "organizations_url": "https://api.github.com/users/MaliusArth/orgs", "repos_url": "https://api.github.com/users/MaliusArth/repos", "events_url": "https://api.github.com/users/MaliusArth/events{/privacy}", "received_events_url": "https://api.github.com/users/MaliusArth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-03-19T15:40:22Z", "updated_at": "2013-10-29T00:14:51Z", "closed_at": "2013-03-21T21:31:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "catching the `ValueError` of, let's say `Version('we12we.12we.23')`, doesn't seem to be very performant\nso maybe you could add a similar implementation of the following code to the public API?\n\n``` python\ndef isValid(version):\n    try:\n        Version(version)\n    except ValueError:\n        return False\n    return True\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/1", "repository_url": "https://api.github.com/repos/rbarrois/python-semanticversion", "labels_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/1/comments", "events_url": "https://api.github.com/repos/rbarrois/python-semanticversion/issues/1/events", "html_url": "https://github.com/rbarrois/python-semanticversion/issues/1", "id": 9462389, "node_id": "MDU6SXNzdWU5NDYyMzg5", "number": 1, "title": "Cannot create partial versions", "user": {"login": "vstojkovic", "id": 2179337, "node_id": "MDQ6VXNlcjIxNzkzMzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2179337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vstojkovic", "html_url": "https://github.com/vstojkovic", "followers_url": "https://api.github.com/users/vstojkovic/followers", "following_url": "https://api.github.com/users/vstojkovic/following{/other_user}", "gists_url": "https://api.github.com/users/vstojkovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/vstojkovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vstojkovic/subscriptions", "organizations_url": "https://api.github.com/users/vstojkovic/orgs", "repos_url": "https://api.github.com/users/vstojkovic/repos", "events_url": "https://api.github.com/users/vstojkovic/events{/privacy}", "received_events_url": "https://api.github.com/users/vstojkovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-12-21T11:28:53Z", "updated_at": "2013-03-20T01:05:50Z", "closed_at": "2013-03-20T01:02:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I pass '2.0' to the `Version` constructor, I get a `ValueError` regardless of whether I specified `partial=True` or not. I suspect that this is because `version_re` and `partial_version_re` are completely identical.\n\nIf this is intended behavior, then the documentation should be fixed to reflect that.\n", "performed_via_github_app": null, "score": 1.0}]}