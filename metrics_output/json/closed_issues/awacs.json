{"total_count": 30, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/cloudtools/awacs/issues/135", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/135/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/135/events", "html_url": "https://github.com/cloudtools/awacs/issues/135", "id": 506823189, "node_id": "MDU6SXNzdWU1MDY4MjMxODk=", "number": 135, "title": "awacs does not contain StringEquals class/function", "user": {"login": "castaway2000", "id": 4655782, "node_id": "MDQ6VXNlcjQ2NTU3ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4655782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/castaway2000", "html_url": "https://github.com/castaway2000", "followers_url": "https://api.github.com/users/castaway2000/followers", "following_url": "https://api.github.com/users/castaway2000/following{/other_user}", "gists_url": "https://api.github.com/users/castaway2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/castaway2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/castaway2000/subscriptions", "organizations_url": "https://api.github.com/users/castaway2000/orgs", "repos_url": "https://api.github.com/users/castaway2000/repos", "events_url": "https://api.github.com/users/castaway2000/events{/privacy}", "received_events_url": "https://api.github.com/users/castaway2000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-14T19:03:27Z", "updated_at": "2019-10-15T02:58:39Z", "closed_at": "2019-10-15T02:58:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "StringEquals is referenced many times through the code but the function is no longer used. \r\nas seen in these examples: https://github.com/cloudtools/awacs/blob/7ff6195b1c63382de81a9dca619b57d37cd5746d/examples/s3.py#L7\r\n\r\nand the description of how to use ConditionalElement here\r\nhttps://github.com/cloudtools/awacs/blob/7ff6195b1c63382de81a9dca619b57d37cd5746d/awacs/aws.py#L90\r\n\r\nHow is this functions supposed to work? I saw it referenced in the _conditional_strings variable here: https://github.com/cloudtools/awacs/blob/7ff6195b1c63382de81a9dca619b57d37cd5746d/awacs/aws.py#L215\r\n\r\nhowever I am not sure how i am supposed to use the following code to create the condition as it returns a NoneType Object when using it like so: make_condition('StringEquals', 'StringEquals')\r\nhttps://github.com/cloudtools/awacs/blob/7ff6195b1c63382de81a9dca619b57d37cd5746d/awacs/aws.py#L229\r\n\r\nthe use of this conditional implementation is unclear or broken. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/121", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/121/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/121/events", "html_url": "https://github.com/cloudtools/awacs/issues/121", "id": 433916323, "node_id": "MDU6SXNzdWU0MzM5MTYzMjM=", "number": 121, "title": "PRs", "user": {"login": "marinpurgar", "id": 1115765, "node_id": "MDQ6VXNlcjExMTU3NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1115765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marinpurgar", "html_url": "https://github.com/marinpurgar", "followers_url": "https://api.github.com/users/marinpurgar/followers", "following_url": "https://api.github.com/users/marinpurgar/following{/other_user}", "gists_url": "https://api.github.com/users/marinpurgar/gists{/gist_id}", "starred_url": "https://api.github.com/users/marinpurgar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marinpurgar/subscriptions", "organizations_url": "https://api.github.com/users/marinpurgar/orgs", "repos_url": "https://api.github.com/users/marinpurgar/repos", "events_url": "https://api.github.com/users/marinpurgar/events{/privacy}", "received_events_url": "https://api.github.com/users/marinpurgar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-16T18:09:26Z", "updated_at": "2019-04-17T04:51:24Z", "closed_at": "2019-04-16T19:31:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any chance to give some luv to current PRs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/111", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/111/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/111/events", "html_url": "https://github.com/cloudtools/awacs/issues/111", "id": 410350575, "node_id": "MDU6SXNzdWU0MTAzNTA1NzU=", "number": 111, "title": "Wrong Condition name in `_condition_strings`", "user": {"login": "iharush", "id": 6792346, "node_id": "MDQ6VXNlcjY3OTIzNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/6792346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iharush", "html_url": "https://github.com/iharush", "followers_url": "https://api.github.com/users/iharush/followers", "following_url": "https://api.github.com/users/iharush/following{/other_user}", "gists_url": "https://api.github.com/users/iharush/gists{/gist_id}", "starred_url": "https://api.github.com/users/iharush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iharush/subscriptions", "organizations_url": "https://api.github.com/users/iharush/orgs", "repos_url": "https://api.github.com/users/iharush/repos", "events_url": "https://api.github.com/users/iharush/events{/privacy}", "received_events_url": "https://api.github.com/users/iharush/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-14T15:20:21Z", "updated_at": "2019-02-23T22:47:57Z", "closed_at": "2019-02-23T22:47:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `_condition_strings` has some wrong condition name value:\r\n`StringEqualsIgnoresCase` should be `StringEqualsIgnoreCase` (without the s in Ignore)\r\n\r\nin addition the condition `StringNotEqualsIgnoreCase` is missing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/104", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/104/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/104/events", "html_url": "https://github.com/cloudtools/awacs/issues/104", "id": 358629442, "node_id": "MDU6SXNzdWUzNTg2Mjk0NDI=", "number": 104, "title": "new policies for Setting Up Encryption in AWS Glue", "user": {"login": "danielbeach", "id": 34192225, "node_id": "MDQ6VXNlcjM0MTkyMjI1", "avatar_url": "https://avatars0.githubusercontent.com/u/34192225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielbeach", "html_url": "https://github.com/danielbeach", "followers_url": "https://api.github.com/users/danielbeach/followers", "following_url": "https://api.github.com/users/danielbeach/following{/other_user}", "gists_url": "https://api.github.com/users/danielbeach/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielbeach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielbeach/subscriptions", "organizations_url": "https://api.github.com/users/danielbeach/orgs", "repos_url": "https://api.github.com/users/danielbeach/repos", "events_url": "https://api.github.com/users/danielbeach/events{/privacy}", "received_events_url": "https://api.github.com/users/danielbeach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-10T13:44:02Z", "updated_at": "2018-09-10T14:31:42Z", "closed_at": "2018-09-10T14:31:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can the following new policies be added in? They were released recently.\r\nglue:GetDataCatalogEncryptionSettings\r\nglue:PutDataCatalogEncryptionSettings\r\nglue:CreateSecurityConfiguration\r\nglue:GetSecurityConfiguration\r\nglue:GetSecurityConfigurations\r\nglue:DeleteSecurityConfiguration", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/101", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/101/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/101/events", "html_url": "https://github.com/cloudtools/awacs/issues/101", "id": 341712443, "node_id": "MDU6SXNzdWUzNDE3MTI0NDM=", "number": 101, "title": "BaseARN does not generate valid ARNs for region-less resources in China", "user": {"login": "mxpxgx", "id": 315558, "node_id": "MDQ6VXNlcjMxNTU1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/315558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mxpxgx", "html_url": "https://github.com/mxpxgx", "followers_url": "https://api.github.com/users/mxpxgx/followers", "following_url": "https://api.github.com/users/mxpxgx/following{/other_user}", "gists_url": "https://api.github.com/users/mxpxgx/gists{/gist_id}", "starred_url": "https://api.github.com/users/mxpxgx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mxpxgx/subscriptions", "organizations_url": "https://api.github.com/users/mxpxgx/orgs", "repos_url": "https://api.github.com/users/mxpxgx/repos", "events_url": "https://api.github.com/users/mxpxgx/events{/privacy}", "received_events_url": "https://api.github.com/users/mxpxgx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-16T23:22:27Z", "updated_at": "2018-07-23T01:56:49Z", "closed_at": "2018-07-23T01:56:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is related to #84\r\nS3 bucket ARN cannot contain region information, and the current implementation to generate the ARN partition is based on the region which should not be specified.\r\n\r\nThis is an issue for buckets in China region (_e.g._ cn-north-1).\r\n\r\nThis is an example of a valid China bucket: arn:aws-cn:s3:::my_china_bucket\r\n\r\nThis affects any region-less services like S3 and IAM in China accounts.\r\n\r\naws_partition should be at least optional.\r\n```\r\ndef __init__(self, service, resource, region='', account='', aws_partition=''):\r\n    region_string = region.lower()\r\n    if not aws_partition:\r\n        if region_string.startswith(\"cn-\"):\r\n            aws_partition = \"aws-cn\"\r\n        elif region_string.startswith(\"us-gov\"):\r\n            aws_partition = \"aws-us-gov\"\r\n        else:\r\n            aws_partition = \"aws\"\r\n\r\n    self.data = \"arn:%s:%s:%s:%s:%s\" % (\r\n        aws_partition, service, region, account, resource)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/96", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/96/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/96/events", "html_url": "https://github.com/cloudtools/awacs/issues/96", "id": 319258335, "node_id": "MDU6SXNzdWUzMTkyNTgzMzU=", "number": 96, "title": "During handling of the above exception, another exception occurred:", "user": {"login": "chizou", "id": 8129778, "node_id": "MDQ6VXNlcjgxMjk3Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/8129778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chizou", "html_url": "https://github.com/chizou", "followers_url": "https://api.github.com/users/chizou/followers", "following_url": "https://api.github.com/users/chizou/following{/other_user}", "gists_url": "https://api.github.com/users/chizou/gists{/gist_id}", "starred_url": "https://api.github.com/users/chizou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chizou/subscriptions", "organizations_url": "https://api.github.com/users/chizou/orgs", "repos_url": "https://api.github.com/users/chizou/repos", "events_url": "https://api.github.com/users/chizou/events{/privacy}", "received_events_url": "https://api.github.com/users/chizou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-01T17:02:25Z", "updated_at": "2018-07-21T19:25:22Z", "closed_at": "2018-07-21T19:25:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here is the error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/awacs/__init__.py\", line 44, in __getattr__\r\n    return self.properties.__getitem__(name)\r\nKeyError: 'type'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"temp.py\", line 16, in <module>\r\n    print(PolicyDocument.to_json())\r\n  File \"/usr/local/lib/python3.5/dist-packages/awacs/aws.py\", line 174, in to_json\r\n    return json.dumps(p, cls=awsencode, indent=indent, sort_keys=sort_keys)\r\n  File \"/usr/lib/python3.5/json/__init__.py\", line 237, in dumps\r\n    **kw).encode(obj)\r\n  File \"/usr/lib/python3.5/json/encoder.py\", line 200, in encode\r\n    chunks = list(chunks)\r\n  File \"/usr/lib/python3.5/json/encoder.py\", line 429, in _iterencode\r\n    yield from _iterencode_dict(o, _current_indent_level)\r\n  File \"/usr/lib/python3.5/json/encoder.py\", line 403, in _iterencode_dict\r\n    yield from chunks\r\n  File \"/usr/lib/python3.5/json/encoder.py\", line 324, in _iterencode_list\r\n    yield from chunks\r\n  File \"/usr/lib/python3.5/json/encoder.py\", line 436, in _iterencode\r\n    o = _default(o)\r\n  File \"/usr/local/lib/python3.5/dist-packages/awacs/__init__.py\", line 127, in default\r\n    return obj.JSONrepr()\r\n  File \"/usr/local/lib/python3.5/dist-packages/awacs/__init__.py\", line 99, in JSONrepr\r\n    (k, self.type))\r\n  File \"/usr/local/lib/python3.5/dist-packages/awacs/__init__.py\", line 46, in __getattr__\r\n    raise AttributeError(name)\r\nAttributeError: type\r\n```\r\nhere is the sample code generating that:\r\n```\r\nfrom awacs.aws import Action, Policy, Statement\r\n\r\npolicy=Policy( Statement=[ Statement() ])                                                                                                                                                                                               print(policy.to_json())\r\n```\r\nadding `Effect=\"Allow\"` fixes it:\r\n```\r\nfrom awacs.aws import Action, Policy, Statement\r\n\r\npolicy=Policy( Statement=[ Statement(Effect=\"Allow\") ])                                                                                                                                                                                 print(policy.to_json())  \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/95", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/95/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/95/events", "html_url": "https://github.com/cloudtools/awacs/issues/95", "id": 314184955, "node_id": "MDU6SXNzdWUzMTQxODQ5NTU=", "number": 95, "title": "Is it possible to get a release?", "user": {"login": "hammy7867", "id": 16857953, "node_id": "MDQ6VXNlcjE2ODU3OTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/16857953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hammy7867", "html_url": "https://github.com/hammy7867", "followers_url": "https://api.github.com/users/hammy7867/followers", "following_url": "https://api.github.com/users/hammy7867/following{/other_user}", "gists_url": "https://api.github.com/users/hammy7867/gists{/gist_id}", "starred_url": "https://api.github.com/users/hammy7867/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hammy7867/subscriptions", "organizations_url": "https://api.github.com/users/hammy7867/orgs", "repos_url": "https://api.github.com/users/hammy7867/repos", "events_url": "https://api.github.com/users/hammy7867/events{/privacy}", "received_events_url": "https://api.github.com/users/hammy7867/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-13T17:10:57Z", "updated_at": "2019-01-23T01:37:47Z", "closed_at": "2019-01-23T01:37:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nThere were some upates added for a few missing permissions that I opened an issue for about a month back. I'm hoping we can get a release with these changes?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/92", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/92/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/92/events", "html_url": "https://github.com/cloudtools/awacs/issues/92", "id": 308384423, "node_id": "MDU6SXNzdWUzMDgzODQ0MjM=", "number": 92, "title": "Allow a list of Principals as property of the Statement class", "user": {"login": "christiangrenzel", "id": 37052120, "node_id": "MDQ6VXNlcjM3MDUyMTIw", "avatar_url": "https://avatars2.githubusercontent.com/u/37052120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christiangrenzel", "html_url": "https://github.com/christiangrenzel", "followers_url": "https://api.github.com/users/christiangrenzel/followers", "following_url": "https://api.github.com/users/christiangrenzel/following{/other_user}", "gists_url": "https://api.github.com/users/christiangrenzel/gists{/gist_id}", "starred_url": "https://api.github.com/users/christiangrenzel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christiangrenzel/subscriptions", "organizations_url": "https://api.github.com/users/christiangrenzel/orgs", "repos_url": "https://api.github.com/users/christiangrenzel/repos", "events_url": "https://api.github.com/users/christiangrenzel/events{/privacy}", "received_events_url": "https://api.github.com/users/christiangrenzel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-25T20:51:04Z", "updated_at": "2018-03-25T23:54:05Z", "closed_at": "2018-03-25T23:54:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. The Statement class only allows a single principal as argument. When a list of principals has the same statement, I have to repeat the statement for each principal instead of creating a single statement with a list of principals.\r\nWould be cleaner to pass a list of principals and have a single statement for a list of principals. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/91", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/91/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/91/events", "html_url": "https://github.com/cloudtools/awacs/issues/91", "id": 306165369, "node_id": "MDU6SXNzdWUzMDYxNjUzNjk=", "number": 91, "title": "Cloudwatch missing dashboard actions", "user": {"login": "hammy7867", "id": 16857953, "node_id": "MDQ6VXNlcjE2ODU3OTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/16857953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hammy7867", "html_url": "https://github.com/hammy7867", "followers_url": "https://api.github.com/users/hammy7867/followers", "following_url": "https://api.github.com/users/hammy7867/following{/other_user}", "gists_url": "https://api.github.com/users/hammy7867/gists{/gist_id}", "starred_url": "https://api.github.com/users/hammy7867/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hammy7867/subscriptions", "organizations_url": "https://api.github.com/users/hammy7867/orgs", "repos_url": "https://api.github.com/users/hammy7867/repos", "events_url": "https://api.github.com/users/hammy7867/events{/privacy}", "received_events_url": "https://api.github.com/users/hammy7867/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-17T15:31:42Z", "updated_at": "2018-03-17T16:40:07Z", "closed_at": "2018-03-17T16:38:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "[https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/permissions-reference-cw.html](url)\r\n\r\nWe are missing CloudWatch dashboard actions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/90", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/90/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/90/events", "html_url": "https://github.com/cloudtools/awacs/issues/90", "id": 296789280, "node_id": "MDU6SXNzdWUyOTY3ODkyODA=", "number": 90, "title": "Generated policies are missing some dynamo Actions", "user": {"login": "pdex", "id": 82187, "node_id": "MDQ6VXNlcjgyMTg3", "avatar_url": "https://avatars2.githubusercontent.com/u/82187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pdex", "html_url": "https://github.com/pdex", "followers_url": "https://api.github.com/users/pdex/followers", "following_url": "https://api.github.com/users/pdex/following{/other_user}", "gists_url": "https://api.github.com/users/pdex/gists{/gist_id}", "starred_url": "https://api.github.com/users/pdex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pdex/subscriptions", "organizations_url": "https://api.github.com/users/pdex/orgs", "repos_url": "https://api.github.com/users/pdex/repos", "events_url": "https://api.github.com/users/pdex/events{/privacy}", "received_events_url": "https://api.github.com/users/pdex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-13T15:58:23Z", "updated_at": "2018-02-13T17:47:47Z", "closed_at": "2018-02-13T17:47:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that the policies.js bundle that's being parsed to generate the .py files is missing some dynamo actions. Specifically dynamodb:DescribeTimeToLive and dynamodb:UpdateTimeToLive.\r\n\r\nThis page appears to be missing `UpdateTimeToLive`\r\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/list_dynamodb.html\r\n\r\nThis page maybe has the most correct set of references?\r\nhttps://docs.aws.amazon.com/amazondynamodb/latest/developerguide/api-permissions-reference.html\r\n\r\nIt might make sense for the `gen.py` process to reconcile the policies.js source against some of the html documentation. I'd be willing to take a crack at that with a pull request if you're interested.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/84", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/84/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/84/events", "html_url": "https://github.com/cloudtools/awacs/issues/84", "id": 252956643, "node_id": "MDU6SXNzdWUyNTI5NTY2NDM=", "number": 84, "title": "BaseARN does not generate valid ARNs for GovCloud and CN partitions of AWS", "user": {"login": "earlrob", "id": 4182395, "node_id": "MDQ6VXNlcjQxODIzOTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4182395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/earlrob", "html_url": "https://github.com/earlrob", "followers_url": "https://api.github.com/users/earlrob/followers", "following_url": "https://api.github.com/users/earlrob/following{/other_user}", "gists_url": "https://api.github.com/users/earlrob/gists{/gist_id}", "starred_url": "https://api.github.com/users/earlrob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/earlrob/subscriptions", "organizations_url": "https://api.github.com/users/earlrob/orgs", "repos_url": "https://api.github.com/users/earlrob/repos", "events_url": "https://api.github.com/users/earlrob/events{/privacy}", "received_events_url": "https://api.github.com/users/earlrob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-25T16:37:32Z", "updated_at": "2017-09-14T15:14:46Z", "closed_at": "2017-09-14T15:14:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Gov Cloud and China regions use an alternate partition name for ARNs. The following docs and code from aws which show how to properly build a region-agnostic arn:  [aws arn docs](http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-arns)\r\nTL;DR\r\nexample arn \r\n\r\n> arn:partition:service:region:account-id:resourcetype:resource\r\n\r\n_partition_ : The partition that the resource is in. For standard AWS regions, the partition is aws. If you have resources in other partitions, the partition is aws-partitionname. For example, the partition for resources in the China (Beijing) region is aws-cn.\r\n\r\n[awscli](https://github.com/aws/aws-cli/blob/1.11.139/awscli/customizations/emr/createdefaultroles.py)\r\nTL;DR\r\n```\r\ndef _get_policy_arn_suffix(region):\r\n  region_string = region.lower()\r\n  if region_string.startswith(\"cn-\"):\r\n   return \"aws-cn\"\r\n  elif region_string.startswith(\"us-gov\"):\r\n    return \"aws-us-gov\"\r\n  else:\r\n    return \"aws\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/80", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/80/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/80/events", "html_url": "https://github.com/cloudtools/awacs/issues/80", "id": 245758384, "node_id": "MDU6SXNzdWUyNDU3NTgzODQ=", "number": 80, "title": "How to provide CanonicalUser Principal in the new version?", "user": {"login": "pbudzon", "id": 1087886, "node_id": "MDQ6VXNlcjEwODc4ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1087886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbudzon", "html_url": "https://github.com/pbudzon", "followers_url": "https://api.github.com/users/pbudzon/followers", "following_url": "https://api.github.com/users/pbudzon/following{/other_user}", "gists_url": "https://api.github.com/users/pbudzon/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbudzon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbudzon/subscriptions", "organizations_url": "https://api.github.com/users/pbudzon/orgs", "repos_url": "https://api.github.com/users/pbudzon/repos", "events_url": "https://api.github.com/users/pbudzon/events{/privacy}", "received_events_url": "https://api.github.com/users/pbudzon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-26T15:18:56Z", "updated_at": "2017-09-14T14:47:56Z", "closed_at": "2017-07-26T16:37:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems with the latest release, it is no longer possible to specify `CanonicalUser` as a principal? This type of principal is used for S3 BucketPolicy, with Statement:\r\n```\r\n aws.Statement(\r\n                        Effect=aws.Allow,\r\n                        Principal=aws.Principal(\r\n                            \"CanonicalUser\", \"some canonical id\"\r\n                        ),\r\n                        Action=[\r\n                            aws.Action(\"s3\", \"GetObject\"),\r\n                        ],\r\n                        Resource=[\r\n                            Join(\"\", [\"arn:aws:s3:::\", Ref(self.bucket_name), \"/*\"]),\r\n                        ],\r\n                    ),\r\n```\r\n\r\nthe above now fails with:\r\n```\r\nValueError: Principal must be one of: AWS, Federated, Service\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/75", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/75/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/75/events", "html_url": "https://github.com/cloudtools/awacs/issues/75", "id": 243432127, "node_id": "MDU6SXNzdWUyNDM0MzIxMjc=", "number": 75, "title": "cloudfront does not allow for resource level permissions", "user": {"login": "parrott-kevin", "id": 4129431, "node_id": "MDQ6VXNlcjQxMjk0MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4129431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parrott-kevin", "html_url": "https://github.com/parrott-kevin", "followers_url": "https://api.github.com/users/parrott-kevin/followers", "following_url": "https://api.github.com/users/parrott-kevin/following{/other_user}", "gists_url": "https://api.github.com/users/parrott-kevin/gists{/gist_id}", "starred_url": "https://api.github.com/users/parrott-kevin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parrott-kevin/subscriptions", "organizations_url": "https://api.github.com/users/parrott-kevin/orgs", "repos_url": "https://api.github.com/users/parrott-kevin/repos", "events_url": "https://api.github.com/users/parrott-kevin/events{/privacy}", "received_events_url": "https://api.github.com/users/parrott-kevin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-17T15:22:17Z", "updated_at": "2020-07-15T12:40:13Z", "closed_at": "2020-07-15T12:40:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "When creating policies for cloudfront, resource level specifications are [not allowed](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html) and [example](https://forums.aws.amazon.com/thread.jspa?messageID=755009&tstart=0). So when creating policies the creator has to remember to change\r\n```\r\n\"Resource\": [\r\n    \"arn:aws:cloudfront:::*\"\r\n]\r\n```\r\nto \r\n```\r\n\"Resource\": [\r\n    \"*\"\r\n]\r\n```\r\nfor the policy to be correct.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/72", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/72/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/72/events", "html_url": "https://github.com/cloudtools/awacs/issues/72", "id": 241813143, "node_id": "MDU6SXNzdWUyNDE4MTMxNDM=", "number": 72, "title": "README.rst provides bad example", "user": {"login": "sweetness-magoo", "id": 19799250, "node_id": "MDQ6VXNlcjE5Nzk5MjUw", "avatar_url": "https://avatars1.githubusercontent.com/u/19799250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sweetness-magoo", "html_url": "https://github.com/sweetness-magoo", "followers_url": "https://api.github.com/users/sweetness-magoo/followers", "following_url": "https://api.github.com/users/sweetness-magoo/following{/other_user}", "gists_url": "https://api.github.com/users/sweetness-magoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sweetness-magoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sweetness-magoo/subscriptions", "organizations_url": "https://api.github.com/users/sweetness-magoo/orgs", "repos_url": "https://api.github.com/users/sweetness-magoo/repos", "events_url": "https://api.github.com/users/sweetness-magoo/events{/privacy}", "received_events_url": "https://api.github.com/users/sweetness-magoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-10T19:02:01Z", "updated_at": "2017-07-25T05:27:09Z", "closed_at": "2017-07-25T05:27:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When this code (that is found in the README) is run...\r\n\r\n```from awacs.aws import Action, Allow, Policy, Principal, Statement\r\nfrom awacs.iam import ARN as IAM_ARN\r\nfrom awacs.s3  import ARN as S3_ARN\r\n\r\naccount = \"123456789012\"\r\nuser = \"user/Bob\"\r\n\r\npd = Policy(\r\n    Version=\"2012-10-17\",\r\n    Id=\"S3-Account-Permissions\",\r\n    Statement=[\r\n        Statement(\r\n            Sid=\"1\",\r\n            Effect=Allow,\r\n            Principal=Principal(\"AWS\", [IAM_ARN(account, user)]),\r\n            Action=[Action(\"s3\", \"*\")],\r\n            Resource=[S3_ARN(\"my_corporate_bucket/*\"),],\r\n        ),\r\n    ],\r\n)\r\nprint(pd.to_json())\r\n```\r\nIt does not produce the json policy as specified in the README.  The IAM_ARN is wrong. \r\n\r\nExpected: `\"arn:aws:iam:123456789012:user/Bob:\"`\r\nActual: `\"arn:aws:iam:user/Bob::123456789012\"`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/70", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/70/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/70/events", "html_url": "https://github.com/cloudtools/awacs/issues/70", "id": 240269837, "node_id": "MDU6SXNzdWUyNDAyNjk4Mzc=", "number": 70, "title": "Missing a few CodeCommit & CloudFormation actions", "user": {"login": "Noah-Huppert", "id": 3323504, "node_id": "MDQ6VXNlcjMzMjM1MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3323504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Noah-Huppert", "html_url": "https://github.com/Noah-Huppert", "followers_url": "https://api.github.com/users/Noah-Huppert/followers", "following_url": "https://api.github.com/users/Noah-Huppert/following{/other_user}", "gists_url": "https://api.github.com/users/Noah-Huppert/gists{/gist_id}", "starred_url": "https://api.github.com/users/Noah-Huppert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Noah-Huppert/subscriptions", "organizations_url": "https://api.github.com/users/Noah-Huppert/orgs", "repos_url": "https://api.github.com/users/Noah-Huppert/repos", "events_url": "https://api.github.com/users/Noah-Huppert/events{/privacy}", "received_events_url": "https://api.github.com/users/Noah-Huppert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-03T21:43:17Z", "updated_at": "2017-07-25T05:22:02Z", "closed_at": "2017-07-25T05:22:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was going recreating [this AWS policy example](https://docs.aws.amazon.com/codepipeline/latest/userguide/iam-identity-based-access-control.html#view-default-service-role-policy) with Troposphere and awacs and I found that awacs was missing a couple actions.\r\n\r\n- `codecommit:CancelUploadArchive`\r\n- `codecommit:GetCommit`\r\n- `codecommit:GetUploadArchiveStatus`\r\n- `codecommit:UploadArchive`\r\n- `cloudformation:DeleteChangeSet`\r\n\r\nMore may be missing, I didn't look at the spec, these actions just weren't implemented and I was trying to use them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/67", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/67/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/67/events", "html_url": "https://github.com/cloudtools/awacs/issues/67", "id": 225866956, "node_id": "MDU6SXNzdWUyMjU4NjY5NTY=", "number": 67, "title": "Missing lambda:ListTags/TagResource", "user": {"login": "ejholmes", "id": 95166, "node_id": "MDQ6VXNlcjk1MTY2", "avatar_url": "https://avatars0.githubusercontent.com/u/95166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ejholmes", "html_url": "https://github.com/ejholmes", "followers_url": "https://api.github.com/users/ejholmes/followers", "following_url": "https://api.github.com/users/ejholmes/following{/other_user}", "gists_url": "https://api.github.com/users/ejholmes/gists{/gist_id}", "starred_url": "https://api.github.com/users/ejholmes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ejholmes/subscriptions", "organizations_url": "https://api.github.com/users/ejholmes/orgs", "repos_url": "https://api.github.com/users/ejholmes/repos", "events_url": "https://api.github.com/users/ejholmes/events{/privacy}", "received_events_url": "https://api.github.com/users/ejholmes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-03T01:48:56Z", "updated_at": "2017-07-25T05:16:31Z", "closed_at": "2017-07-25T05:16:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think this were added fairly recently with tags support for AWS Lambda.\r\n\r\n/cc @phobologic ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/62", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/62/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/62/events", "html_url": "https://github.com/cloudtools/awacs/issues/62", "id": 209005200, "node_id": "MDU6SXNzdWUyMDkwMDUyMDA=", "number": 62, "title": "Need support for Amazon Cognito User Pools", "user": {"login": "philipmw", "id": 1379645, "node_id": "MDQ6VXNlcjEzNzk2NDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1379645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philipmw", "html_url": "https://github.com/philipmw", "followers_url": "https://api.github.com/users/philipmw/followers", "following_url": "https://api.github.com/users/philipmw/following{/other_user}", "gists_url": "https://api.github.com/users/philipmw/gists{/gist_id}", "starred_url": "https://api.github.com/users/philipmw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philipmw/subscriptions", "organizations_url": "https://api.github.com/users/philipmw/orgs", "repos_url": "https://api.github.com/users/philipmw/repos", "events_url": "https://api.github.com/users/philipmw/events{/privacy}", "received_events_url": "https://api.github.com/users/philipmw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-20T23:34:24Z", "updated_at": "2017-02-21T05:26:03Z", "closed_at": "2017-02-21T05:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "[IAM Policy Generator](https://awspolicygen.s3.amazonaws.com/policygen.html) supports \"Amazon Cognito User Pools\", having these actions:\r\n\r\n* cognito-idp:AddCustomAttributes\r\n* cognito-idp:AdminAddUserToGroup\r\n* cognito-idp:AdminConfirmSignUp\r\n* cognito-idp:AdminCreateUser\r\n* cognito-idp:AdminDeleteUser\r\n* cognito-idp:AdminDeleteUserAttributes\r\n* cognito-idp:AdminDisableUser\r\n* cognito-idp:AdminEnableUser\r\n* cognito-idp:AdminForgetDevice\r\n* cognito-idp:AdminGetDevice\r\n* cognito-idp:AdminGetUser\r\n* cognito-idp:AdminInitiateAuth\r\n* cognito-idp:AdminListDevices\r\n* cognito-idp:AdminListGroupsForUser\r\n* cognito-idp:AdminRemoveUserFromGroup\r\n* cognito-idp:AdminResetUserPassword\r\n* cognito-idp:AdminRespondToAuthChallenge\r\n* cognito-idp:AdminSetUserSettings\r\n* cognito-idp:AdminUpdateDeviceStatus\r\n* cognito-idp:AdminUpdateUserAttributes\r\n* cognito-idp:AdminUserGlobalSignOut\r\n* cognito-idp:CreateGroup\r\n* cognito-idp:CreateUserImportJob\r\n* cognito-idp:CreateUserPool\r\n* cognito-idp:CreateUserPoolClient\r\n* cognito-idp:DeleteGroup\r\n* cognito-idp:DeleteUserPool\r\n* cognito-idp:DeleteUserPoolClient\r\n* cognito-idp:DescribeUserImportJob\r\n* cognito-idp:DescribeUserPool\r\n* cognito-idp:DescribeUserPoolClient\r\n* cognito-idp:GetCSVHeader\r\n* cognito-idp:GetGroup\r\n* cognito-idp:ListGroups\r\n* cognito-idp:ListUserImportJobs\r\n* cognito-idp:ListUserPoolClients\r\n* cognito-idp:ListUserPools\r\n* cognito-idp:ListUsers\r\n* cognito-idp:ListUsersInGroup\r\n* cognito-idp:StartUserImportJob\r\n* cognito-idp:StopUserImportJob\r\n* cognito-idp:UpdateGroup\r\n* cognito-idp:UpdateUserPool\r\n* cognito-idp:UpdateUserPoolClient\r\n\r\n(source: IAM Policy Generator JS source code.)\r\n\r\nWe need support for this in awacs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/61", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/61/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/61/events", "html_url": "https://github.com/cloudtools/awacs/issues/61", "id": 206437156, "node_id": "MDU6SXNzdWUyMDY0MzcxNTY=", "number": 61, "title": "S3 ARN broken ", "user": {"login": "mrwalters1988", "id": 16690445, "node_id": "MDQ6VXNlcjE2NjkwNDQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/16690445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrwalters1988", "html_url": "https://github.com/mrwalters1988", "followers_url": "https://api.github.com/users/mrwalters1988/followers", "following_url": "https://api.github.com/users/mrwalters1988/following{/other_user}", "gists_url": "https://api.github.com/users/mrwalters1988/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrwalters1988/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrwalters1988/subscriptions", "organizations_url": "https://api.github.com/users/mrwalters1988/orgs", "repos_url": "https://api.github.com/users/mrwalters1988/repos", "events_url": "https://api.github.com/users/mrwalters1988/events{/privacy}", "received_events_url": "https://api.github.com/users/mrwalters1988/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-09T08:33:52Z", "updated_at": "2017-07-26T01:33:41Z", "closed_at": "2017-07-26T01:33:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "My sample code is below. When I run it, which is straight out of the examples, I get the following error: \r\n\r\n```\r\n    Resource=[s3.ARN(\"*\"), ],\r\n  File \"C:\\Python27\\lib\\site-packages\\awacs\\__init__.py\", line 111, in __init__\r\n    sup.__init__(None, props=self.props, **kwargs)\r\n  File \"C:\\Python27\\lib\\site-packages\\awacs\\__init__.py\", line 40, in __init__\r\n    self.__setattr__(k, v)\r\n  File \"C:\\Python27\\lib\\site-packages\\awacs\\__init__.py\", line 84, in __setattr__\r\n    (self.type, name))\r\n  File \"C:\\Python27\\lib\\site-packages\\awacs\\__init__.py\", line 46, in __getattr__\r\n    raise AttributeError(name)\r\nAttributeError: type\r\n```\r\n```\r\ncfnrole = awsinstance.add_resource(Role(\r\n    \"CFNRole\",\r\n    AssumeRolePolicyDocument=Policy(\r\n        Statement=[\r\n            Statement(\r\n                Effect=Allow,\r\n                Action=[AssumeRole],\r\n                Principal=Principal(\"Service\", [\"ec2.amazonaws.com\"])\r\n            )\r\n        ]\r\n    ),\r\n    Path='/',\r\n    Policies=[\r\n        Policy(\r\n            PolicyName=\"S3AccessForInstances\",\r\n            PolicyDocument=Policy(\r\n                Statement=[\r\n                    Statement(\r\n                        Action=[s3.ListAllMyBuckets, s3.GetBucketLocation],\r\n                        Effect=Allow,\r\n                        Resource=[s3.ARN(\"*\"), ],\r\n                ),\r\n                ],\r\n            )\r\n        ),\r\n    ]\r\n ))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/58", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/58/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/58/events", "html_url": "https://github.com/cloudtools/awacs/issues/58", "id": 202441795, "node_id": "MDU6SXNzdWUyMDI0NDE3OTU=", "number": 58, "title": "Principal('service', 'cloudtrail.amazonaws.com')", "user": {"login": "emayssat-ms", "id": 14188968, "node_id": "MDQ6VXNlcjE0MTg4OTY4", "avatar_url": "https://avatars1.githubusercontent.com/u/14188968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emayssat-ms", "html_url": "https://github.com/emayssat-ms", "followers_url": "https://api.github.com/users/emayssat-ms/followers", "following_url": "https://api.github.com/users/emayssat-ms/following{/other_user}", "gists_url": "https://api.github.com/users/emayssat-ms/gists{/gist_id}", "starred_url": "https://api.github.com/users/emayssat-ms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emayssat-ms/subscriptions", "organizations_url": "https://api.github.com/users/emayssat-ms/orgs", "repos_url": "https://api.github.com/users/emayssat-ms/repos", "events_url": "https://api.github.com/users/emayssat-ms/events{/privacy}", "received_events_url": "https://api.github.com/users/emayssat-ms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-23T04:03:45Z", "updated_at": "2017-07-26T04:37:07Z", "closed_at": "2017-07-26T04:37:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I spent about 3h to find out that the policy was invalid because it is not 'service', but 'Service'.\r\nIs there a way to prevent watch for those typos?\r\n\r\nThe error shows up only at create_stack or stack_updates.\r\nSurprisingly, the template validation is successful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/57", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/57/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/57/events", "html_url": "https://github.com/cloudtools/awacs/issues/57", "id": 181781287, "node_id": "MDU6SXNzdWUxODE3ODEyODc=", "number": 57, "title": "Condition referencing unknown variable condition when serializing", "user": {"login": "bkeyser", "id": 6879440, "node_id": "MDQ6VXNlcjY4Nzk0NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6879440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkeyser", "html_url": "https://github.com/bkeyser", "followers_url": "https://api.github.com/users/bkeyser/followers", "following_url": "https://api.github.com/users/bkeyser/following{/other_user}", "gists_url": "https://api.github.com/users/bkeyser/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkeyser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkeyser/subscriptions", "organizations_url": "https://api.github.com/users/bkeyser/orgs", "repos_url": "https://api.github.com/users/bkeyser/repos", "events_url": "https://api.github.com/users/bkeyser/events{/privacy}", "received_events_url": "https://api.github.com/users/bkeyser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-07T22:33:51Z", "updated_at": "2016-10-07T22:58:28Z", "closed_at": "2016-10-07T22:58:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "When serializing to JSON, Condition of the aws module references a condition instance variable of ConditionElement\n\n``` python\ndef JSONrepr(self):\n    d = {}\n    for c in self.conditions:\n        d[c.condition] = c.get_dict()\n```\n\nHowever, ConditionElement has instance variables of key, value, and cond_dict.  This situation causes an issue when serializing\n\n``` bash\n...\nFile \"/projects/aws/python-3.4/lib64/python3.4/site-packages/awacs/aws.py\", line 106, in JSONrepr\n    d[c.condition] = c.get_dict()\nAttributeError: 'ConditionElement' object has no attribute 'condition'\n```\n\nThe Condition class utilizes a list of ConditionElement instances.  These instances could be serialized provided the ConditionElement also provides serialization.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/56", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/56/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/56/events", "html_url": "https://github.com/cloudtools/awacs/issues/56", "id": 173091919, "node_id": "MDU6SXNzdWUxNzMwOTE5MTk=", "number": 56, "title": "Missing ForAllValues / ForAnyValue ", "user": {"login": "troyready", "id": 1806418, "node_id": "MDQ6VXNlcjE4MDY0MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1806418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troyready", "html_url": "https://github.com/troyready", "followers_url": "https://api.github.com/users/troyready/followers", "following_url": "https://api.github.com/users/troyready/following{/other_user}", "gists_url": "https://api.github.com/users/troyready/gists{/gist_id}", "starred_url": "https://api.github.com/users/troyready/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troyready/subscriptions", "organizations_url": "https://api.github.com/users/troyready/orgs", "repos_url": "https://api.github.com/users/troyready/repos", "events_url": "https://api.github.com/users/troyready/events{/privacy}", "received_events_url": "https://api.github.com/users/troyready/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-25T00:59:03Z", "updated_at": "2017-05-03T04:14:43Z", "closed_at": "2017-05-03T04:14:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As documented in https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_multi-value-conditions.html - should be possible to make a condition like:\n\n``` json\n\"Condition\": {\n  \"ForAllValues:StringLike\": {\n    \"dynamodb:requestedAttributes\": [\n      \"PostDateTime\",\n      \"Message\",\n      \"Tags\"\n    ]\n  }\n}\n```\n\nSeem valuable to anyone else to add?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/54", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/54/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/54/events", "html_url": "https://github.com/cloudtools/awacs/issues/54", "id": 165785333, "node_id": "MDU6SXNzdWUxNjU3ODUzMzM=", "number": 54, "title": "iam ARN broken", "user": {"login": "webratz", "id": 2162832, "node_id": "MDQ6VXNlcjIxNjI4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2162832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webratz", "html_url": "https://github.com/webratz", "followers_url": "https://api.github.com/users/webratz/followers", "following_url": "https://api.github.com/users/webratz/following{/other_user}", "gists_url": "https://api.github.com/users/webratz/gists{/gist_id}", "starred_url": "https://api.github.com/users/webratz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webratz/subscriptions", "organizations_url": "https://api.github.com/users/webratz/orgs", "repos_url": "https://api.github.com/users/webratz/repos", "events_url": "https://api.github.com/users/webratz/events{/privacy}", "received_events_url": "https://api.github.com/users/webratz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-07-15T13:21:10Z", "updated_at": "2017-07-26T03:21:16Z", "closed_at": "2017-07-26T03:21:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nat least in the lates t(0.6.0) version the IAM ARN function returns something else than in `0.5.4``\n. This is no more a valid ARN, therefore I consider this function broken in the new version.\n## test code\n\n```\nimport awacs.iam\nfoo_arn = awacs.iam.ARN('123456789012', 'root')\nprint foo_arn.data\n```\n### 0.5.4\n\nthis is an valid ARN\n\n```\n$ python test.py\narn:aws:iam::123456789012:root\n```\n### 0.6.0\n\nthis ARN is invalid\n\n```\n$ python test.py\narn:aws:iam:root::123456789012\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/41", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/41/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/41/events", "html_url": "https://github.com/cloudtools/awacs/issues/41", "id": 145283618, "node_id": "MDU6SXNzdWUxNDUyODM2MTg=", "number": 41, "title": "Missing autoscaling permissions for \"AttachLoadBalancers\" and \"DetachLoadBalancers\"", "user": {"login": "matthewdfuller", "id": 1226686, "node_id": "MDQ6VXNlcjEyMjY2ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1226686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewdfuller", "html_url": "https://github.com/matthewdfuller", "followers_url": "https://api.github.com/users/matthewdfuller/followers", "following_url": "https://api.github.com/users/matthewdfuller/following{/other_user}", "gists_url": "https://api.github.com/users/matthewdfuller/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewdfuller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewdfuller/subscriptions", "organizations_url": "https://api.github.com/users/matthewdfuller/orgs", "repos_url": "https://api.github.com/users/matthewdfuller/repos", "events_url": "https://api.github.com/users/matthewdfuller/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewdfuller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-01T20:57:47Z", "updated_at": "2017-05-03T03:50:22Z", "closed_at": "2017-05-03T03:50:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "The autoscaling.py file is missing the following lines:\n\n```\nAttachLoadBalancers = Action(prefix, 'AttachLoadBalancers'),\nDetachLoadBalancers = Action(prefix, 'DetachLoadBalancers')\n```\n\nThese were actually missing from the AWS console until recently due to an oversight on their end. They have always been valid permissions, but just didn't exist in the \"IAM Role Generator\" UI. I filed a support request with AWS and they added them.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/34", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/34/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/34/events", "html_url": "https://github.com/cloudtools/awacs/issues/34", "id": 129753689, "node_id": "MDU6SXNzdWUxMjk3NTM2ODk=", "number": 34, "title": "invalid permission?", "user": {"login": "tbhi", "id": 878258, "node_id": "MDQ6VXNlcjg3ODI1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/878258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbhi", "html_url": "https://github.com/tbhi", "followers_url": "https://api.github.com/users/tbhi/followers", "following_url": "https://api.github.com/users/tbhi/following{/other_user}", "gists_url": "https://api.github.com/users/tbhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbhi/subscriptions", "organizations_url": "https://api.github.com/users/tbhi/orgs", "repos_url": "https://api.github.com/users/tbhi/repos", "events_url": "https://api.github.com/users/tbhi/events{/privacy}", "received_events_url": "https://api.github.com/users/tbhi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-01-29T12:34:55Z", "updated_at": "2017-07-26T04:36:41Z", "closed_at": "2017-07-26T04:36:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "awacs/sqs.py lists ChangeMessageVisibilityBatch as a permission but if I try and use it in a queue policy manually I get:\n\n> Failed to save changes to the policy document. Reason: com.amazonaws.AmazonServiceException: Value SQS:ChangeMessageVisibilityBatch for parameter ActionName is invalid. Reason: Please refer to the appropriate WSDL for a list of valid actions. (Service: AmazonSQS; Status Code: 400; Error Code: InvalidParameterValue; \n\nThe WSDL at http://queue.amazonaws.com/doc/2012-11-05/QueueService.wsdl doesn't seemed to clarify (as ChangeMessageVisibilityBatch is listed) but I don't fully understand it.  But it seems like ChangeMessageVisibilityBatch isn't valid, and it is not listed on http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/UsingIAM.html.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/32", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/32/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/32/events", "html_url": "https://github.com/cloudtools/awacs/issues/32", "id": 112047443, "node_id": "MDU6SXNzdWUxMTIwNDc0NDM=", "number": 32, "title": "`.type` is not always set", "user": {"login": "solidsnack", "id": 153008, "node_id": "MDQ6VXNlcjE1MzAwOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/153008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solidsnack", "html_url": "https://github.com/solidsnack", "followers_url": "https://api.github.com/users/solidsnack/followers", "following_url": "https://api.github.com/users/solidsnack/following{/other_user}", "gists_url": "https://api.github.com/users/solidsnack/gists{/gist_id}", "starred_url": "https://api.github.com/users/solidsnack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solidsnack/subscriptions", "organizations_url": "https://api.github.com/users/solidsnack/orgs", "repos_url": "https://api.github.com/users/solidsnack/repos", "events_url": "https://api.github.com/users/solidsnack/events{/privacy}", "received_events_url": "https://api.github.com/users/solidsnack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-18T22:42:38Z", "updated_at": "2017-07-26T04:34:04Z", "closed_at": "2017-07-26T04:34:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nawacs.aws.Policy(Version='2012-10-17', Statement=[])  # No error\nawacs.aws.Policy(Version='2012-10-17', statement=[])  # Try to raise on line 84, but .type is never set, so we raise on line 46 \n```\n\nGitHub's storage layer is down but here is a patch that I presume does the right thing.\n\n``` diff\n--- a/awacs/__init__.py 2015-10-18 15:35:38.000000000 -0700\n+++ b/awacs/__init__.py 2015-10-18 15:40:23.000000000 -0700\n@@ -20,6 +20,10 @@\n         self.props = props\n         # Cache the keys for validity checks\n         self.propnames = props.keys()\n+        if type is None:\n+            self.type = type(self).__module__ + '.' + type(self).__name__\n+        else:\n+            self.type = type\n\n         # unset/None is also legal\n         if name and not valid_names.match(name):\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/16", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/16/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/16/events", "html_url": "https://github.com/cloudtools/awacs/issues/16", "id": 70600785, "node_id": "MDU6SXNzdWU3MDYwMDc4NQ==", "number": 16, "title": "Cannot create S3 bucket policy for public access", "user": {"login": "pas256", "id": 92010, "node_id": "MDQ6VXNlcjkyMDEw", "avatar_url": "https://avatars1.githubusercontent.com/u/92010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pas256", "html_url": "https://github.com/pas256", "followers_url": "https://api.github.com/users/pas256/followers", "following_url": "https://api.github.com/users/pas256/following{/other_user}", "gists_url": "https://api.github.com/users/pas256/gists{/gist_id}", "starred_url": "https://api.github.com/users/pas256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pas256/subscriptions", "organizations_url": "https://api.github.com/users/pas256/orgs", "repos_url": "https://api.github.com/users/pas256/repos", "events_url": "https://api.github.com/users/pas256/events{/privacy}", "received_events_url": "https://api.github.com/users/pas256/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-24T06:25:54Z", "updated_at": "2015-05-05T17:25:46Z", "closed_at": "2015-05-05T17:25:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to create an S3 bucket policy like this\n\n```\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"PublicAccess\",\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"s3:GetObject\",\n            \"Resource\": \"arn:aws:s3:::my-bucket/*\"\n        }\n    ]\n}\n```\n\nBut the way `Principal` is written now, it only supports the format\n\n```\n\"Principal\": {\n    \"Federated\": \"accounts.google.com\"\n}\n```\n\n:-(\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/15", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/15/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/15/events", "html_url": "https://github.com/cloudtools/awacs/issues/15", "id": 70022384, "node_id": "MDU6SXNzdWU3MDAyMjM4NA==", "number": 15, "title": "Issue w/ Ref & Join's when building ARNs in Cloudformation/troposphere", "user": {"login": "phobologic", "id": 517334, "node_id": "MDQ6VXNlcjUxNzMzNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/517334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phobologic", "html_url": "https://github.com/phobologic", "followers_url": "https://api.github.com/users/phobologic/followers", "following_url": "https://api.github.com/users/phobologic/following{/other_user}", "gists_url": "https://api.github.com/users/phobologic/gists{/gist_id}", "starred_url": "https://api.github.com/users/phobologic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phobologic/subscriptions", "organizations_url": "https://api.github.com/users/phobologic/orgs", "repos_url": "https://api.github.com/users/phobologic/repos", "events_url": "https://api.github.com/users/phobologic/events{/privacy}", "received_events_url": "https://api.github.com/users/phobologic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-04-22T04:44:16Z", "updated_at": "2017-07-26T04:02:04Z", "closed_at": "2017-07-26T04:02:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is per Chris Shenton on the cloudtools-dev group:\n\n```\nBeen using tropo for a few weeks and started using AWACS so I can more easily create IAM Roles and Policy documents. Liking it a lot, thanks, guys.\n\nBut I'm stuck trying to reference a resource in an AWACS policy, I can't figure how to build the ARN. The docs show hard-wired names, e.g.:\n\nS3:  Resource=[s3.S3_ARN(\"myBucket\")],\nSQS: Resource=[sqs.SQS_ARN(region, account, \"queue1\"), ],\n\nFor things that need Region and Account, is there a way to get those without hard-wiring them in my tropo script?  I was hoping to use Ref(\"AWS::Region\") and Ref(\"AWS::AccountID\") but those generate resources like:\n\n\"Resource\": [\n   \"arn:aws:dynamodb:<troposphere.Ref object at 0x10978c128>:<troposphere.Ref object at 0x10978c1d0>:table/JobStateDB\"\n],\n\nI'd also like to avoid hard-wiring my resource name; for example, I have a DynamoDB defined like:\n\nr_jobstate_db = t.add_resource(\n    dynamodb.Table(\n        \"JobStateDB\",\n        AttributeDefinitions=[dynamodb.AttributeDefinition(\"job\", \"S\")],\n        KeySchema=[dynamodb.Key(\"job\", \"HASH\")],\n        ProvisionedThroughput=dynamodb.ProvisionedThroughput(\n            Ref(p_jobstate_readunits),\n            Ref(p_jobstate_writeunits),\n        )\n    ))\n\nAnd I want to reference it in AWACS. Below, I know the Ref()s fail as above; I think I'm relying on knowing the implementation when I access the \".title\" attribute:\n\n                    Statement(\n                        Action=[awacs.dynamodb.PutItem, ],\n                        Effect=Allow,\n                        Resource=[\n                            awacs.dynamodb.ARN(\n                                Ref(\"AWS::Region\"),\n                                Ref(\"AWS::AccountID\"),\n                                r_jobstate_db.title,\n                                ),\n                            ],\n\nAny guidance on how I can:\n* Get AWS \"Region\" and \"AccountID\" to build the ARN without hard-wiring\n* Get the resources name to build the ARN without peeking at code\n\nOr is there a totally smarter way to do this, like:\n\n  Resource=[awacs.dyamodb.MagickARN(r_jobstate_db)]\n\nThanks!\n```\n\nThis seems like something we should investigate.  Not sure if this is:\n1. Possible in regular cloudformation iam policies.\n2. A problem with awacs\n3. A problem with troposphere\n\nAnyway, I think it's curious enough that we should have a bug for it just to make sure it doesn't get lost.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/12", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/12/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/12/events", "html_url": "https://github.com/cloudtools/awacs/issues/12", "id": 59295434, "node_id": "MDU6SXNzdWU1OTI5NTQzNA==", "number": 12, "title": "New release?", "user": {"login": "craigbruce", "id": 1503648, "node_id": "MDQ6VXNlcjE1MDM2NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1503648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigbruce", "html_url": "https://github.com/craigbruce", "followers_url": "https://api.github.com/users/craigbruce/followers", "following_url": "https://api.github.com/users/craigbruce/following{/other_user}", "gists_url": "https://api.github.com/users/craigbruce/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigbruce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigbruce/subscriptions", "organizations_url": "https://api.github.com/users/craigbruce/orgs", "repos_url": "https://api.github.com/users/craigbruce/repos", "events_url": "https://api.github.com/users/craigbruce/events{/privacy}", "received_events_url": "https://api.github.com/users/craigbruce/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "phobologic", "id": 517334, "node_id": "MDQ6VXNlcjUxNzMzNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/517334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phobologic", "html_url": "https://github.com/phobologic", "followers_url": "https://api.github.com/users/phobologic/followers", "following_url": "https://api.github.com/users/phobologic/following{/other_user}", "gists_url": "https://api.github.com/users/phobologic/gists{/gist_id}", "starred_url": "https://api.github.com/users/phobologic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phobologic/subscriptions", "organizations_url": "https://api.github.com/users/phobologic/orgs", "repos_url": "https://api.github.com/users/phobologic/repos", "events_url": "https://api.github.com/users/phobologic/events{/privacy}", "received_events_url": "https://api.github.com/users/phobologic/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "phobologic", "id": 517334, "node_id": "MDQ6VXNlcjUxNzMzNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/517334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phobologic", "html_url": "https://github.com/phobologic", "followers_url": "https://api.github.com/users/phobologic/followers", "following_url": "https://api.github.com/users/phobologic/following{/other_user}", "gists_url": "https://api.github.com/users/phobologic/gists{/gist_id}", "starred_url": "https://api.github.com/users/phobologic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phobologic/subscriptions", "organizations_url": "https://api.github.com/users/phobologic/orgs", "repos_url": "https://api.github.com/users/phobologic/repos", "events_url": "https://api.github.com/users/phobologic/events{/privacy}", "received_events_url": "https://api.github.com/users/phobologic/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2015-02-27T21:16:38Z", "updated_at": "2015-02-27T23:03:13Z", "closed_at": "2015-02-27T23:03:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, \n\nI don't suppose you could release a new version? There are quite a few new services only on master, like SWF.\n\nCheers\nCraig\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/9", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/9/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/9/events", "html_url": "https://github.com/cloudtools/awacs/issues/9", "id": 44307518, "node_id": "MDU6SXNzdWU0NDMwNzUxOA==", "number": 9, "title": "egg-info missing?", "user": {"login": "Redundancy", "id": 5021300, "node_id": "MDQ6VXNlcjUwMjEzMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5021300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Redundancy", "html_url": "https://github.com/Redundancy", "followers_url": "https://api.github.com/users/Redundancy/followers", "following_url": "https://api.github.com/users/Redundancy/following{/other_user}", "gists_url": "https://api.github.com/users/Redundancy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Redundancy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Redundancy/subscriptions", "organizations_url": "https://api.github.com/users/Redundancy/orgs", "repos_url": "https://api.github.com/users/Redundancy/repos", "events_url": "https://api.github.com/users/Redundancy/events{/privacy}", "received_events_url": "https://api.github.com/users/Redundancy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-09-29T15:35:54Z", "updated_at": "2017-07-26T04:02:25Z", "closed_at": "2017-07-26T04:02:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "when installing awacs using pip I get\n`Could not find .egg-info directory in install record for awacs==0.4.2`\n\nThis triggers a bug in pip with removing an index file:\nhttps://mail.python.org/pipermail/distutils-sig/2013-August/022528.html\n\nI'll try and submit an issue on pypa/pip, but it would potentially be nice to remove the cause of the warning.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cloudtools/awacs/issues/3", "repository_url": "https://api.github.com/repos/cloudtools/awacs", "labels_url": "https://api.github.com/repos/cloudtools/awacs/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/cloudtools/awacs/issues/3/comments", "events_url": "https://api.github.com/repos/cloudtools/awacs/issues/3/events", "html_url": "https://github.com/cloudtools/awacs/issues/3", "id": 17886519, "node_id": "MDU6SXNzdWUxNzg4NjUxOQ==", "number": 3, "title": "Problems with the Policy class and IAM Role Trust Relationships", "user": {"login": "jonathanq", "id": 589670, "node_id": "MDQ6VXNlcjU4OTY3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/589670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathanq", "html_url": "https://github.com/jonathanq", "followers_url": "https://api.github.com/users/jonathanq/followers", "following_url": "https://api.github.com/users/jonathanq/following{/other_user}", "gists_url": "https://api.github.com/users/jonathanq/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathanq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathanq/subscriptions", "organizations_url": "https://api.github.com/users/jonathanq/orgs", "repos_url": "https://api.github.com/users/jonathanq/repos", "events_url": "https://api.github.com/users/jonathanq/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathanq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-08-09T21:34:27Z", "updated_at": "2013-08-09T23:14:45Z", "closed_at": "2013-08-09T23:14:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was trying to create an IAM role document using troposphere and awacs but ran into an issue with using the `Policy` and `Statement` classes for the `AssumeRolePolicyDocument` attribute of a Role.   \n\nThe `Statement` class requires that the `Action` and `Principal` be a list and not single items.  While this is true for regular IAM policies, it is not true for the Trust Relationship documents required for IAM Instance Roles. \n\nFor those policy documents - the Action and Principal must be a single item and not a list.  \n\nHere is some code that works with awacs/troposphere to generate a Policy.  \n\n```\niam_role = iam.Role(\n    name='IAMRole',\n    AssumeRolePolicyDocument=awacs_aws.Policy(\n        Statement=[\n            awacs.aws.Statement(\n                Effect=awacs.aws.Allow,\n                Principal=[awacs.aws.Principal(principal=\"Service\", resources=[\"ec2.amazonaws.com\"])],\n                Action=[awacs.sts.AssumeRole]\n            )\n        ]\n    ),\n    Path=\"/\",\n    Policies=\n    ...\n)\n```\n\nThe policy document generated by the code is invalid according to AWS and causes a syntax error in the UI when you try to save it.\n\n```\n{\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"sts:AssumeRole\"\n            ], \n            \"Effect\": \"Allow\", \n            \"Principal\": [\n                {\n                    \"Service\": [\n                        \"ec2.amazonaws.com\"\n                    ]\n                }\n            ]\n        }\n    ]\n}\n```\n\nIn order to make the above document valid, you just need to make both Principal and Action a single item instead of a list, and then it saves correctly in the UI.\n\nI am not sure the best way to fix this as the Statement class is shared, as is the Policy class.  Or if its even worth fixing. I just wanted to share my workaround incase anyone else hit it.\n\nI just used a regular dict for this policy like:\n\n```\nname='IAMRole',\n    AssumeRolePolicyDocument={\n        \"Statement\": [\n            {\n                \"Action\": awacs.sts.AssumeRole,\n                \"Effect\": awacs.aws.Allow,\n                \"Principal\": awacs.aws.Principal(principal=\"Service\", resources=[\"ec2.amazonaws.com\"])\n            }\n        ]\n    }\n```\n", "performed_via_github_app": null, "score": 1.0}]}