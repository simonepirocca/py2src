{"total_count": 31, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pbrod/numdifftools/issues/52", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/52/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/52/events", "html_url": "https://github.com/pbrod/numdifftools/issues/52", "id": 561041897, "node_id": "MDU6SXNzdWU1NjEwNDE4OTc=", "number": 52, "title": "Gradient fails when full_output=True [AttributeError: 'tuple' object has no attribute 'squeeze']", "user": {"login": "Alexander-Serov", "id": 22743277, "node_id": "MDQ6VXNlcjIyNzQzMjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/22743277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexander-Serov", "html_url": "https://github.com/Alexander-Serov", "followers_url": "https://api.github.com/users/Alexander-Serov/followers", "following_url": "https://api.github.com/users/Alexander-Serov/following{/other_user}", "gists_url": "https://api.github.com/users/Alexander-Serov/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexander-Serov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexander-Serov/subscriptions", "organizations_url": "https://api.github.com/users/Alexander-Serov/orgs", "repos_url": "https://api.github.com/users/Alexander-Serov/repos", "events_url": "https://api.github.com/users/Alexander-Serov/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexander-Serov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T14:18:20Z", "updated_at": "2020-02-26T14:26:56Z", "closed_at": "2020-02-26T14:26:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is an MWE:\r\n```\r\nimport numdifftools as nd\r\n\r\nres = nd.Gradient(lambda x, y: x + y, full_output=False)(1, 3)\r\nres = nd.Gradient(lambda x, y: x + y, full_output=True)(1, 3)\r\n```\r\nThe last line fails with\r\n```\r\nFile \"C:\\Python37\\lib\\site-packages\\numdifftools\\core.py\", line 748, in __call__\r\n    *args, **kwds).squeeze()\r\nAttributeError: 'tuple' object has no attribute 'squeeze'\r\n```\r\nIt seems like `Gradient` tries to apply `squeeze` to the output tuple containing both the result and the `full_output` object.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/51", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/51/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/51/events", "html_url": "https://github.com/pbrod/numdifftools/issues/51", "id": 561024367, "node_id": "MDU6SXNzdWU1NjEwMjQzNjc=", "number": 51, "title": "Error in the documention of the Hessian class?", "user": {"login": "Alexander-Serov", "id": 22743277, "node_id": "MDQ6VXNlcjIyNzQzMjc3", "avatar_url": "https://avatars1.githubusercontent.com/u/22743277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexander-Serov", "html_url": "https://github.com/Alexander-Serov", "followers_url": "https://api.github.com/users/Alexander-Serov/followers", "following_url": "https://api.github.com/users/Alexander-Serov/following{/other_user}", "gists_url": "https://api.github.com/users/Alexander-Serov/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexander-Serov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexander-Serov/subscriptions", "organizations_url": "https://api.github.com/users/Alexander-Serov/orgs", "repos_url": "https://api.github.com/users/Alexander-Serov/repos", "events_url": "https://api.github.com/users/Alexander-Serov/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexander-Serov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T13:48:31Z", "updated_at": "2020-02-26T18:02:57Z", "closed_at": "2020-02-26T18:02:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the Hessian class definition I read\r\n```\r\nReturns\r\n    -------\r\n    hess : ndarray\r\n       array of partial second derivatives, Hessian\r\n    \"\"\", extra_note=\"\"\"\r\n    Computes the Hessian according to method as:\r\n    'forward' :eq:`7`, 'central' :eq:`9` and 'complex' :eq:`10`:\r\n\r\n    .. math::\r\n        \\quad ((f(x + d_j e_j + d_k e_k) - f(x + d_j e_j))) / (d_j d_k)\r\n        :label: 7\r\n```\r\n\r\nThe second term in this formula is non-symmetric towards `d_j <--> d_k`  substitution, which suggests it is wrong. I guess the term should just read `f(x)`.\r\n\r\nI found this typo (?) while investigating for the reasons of weird Hessian results (negaitve Hessian determinant in a minimum), which I will post as a separate issue once I make sure it's not a problem on my side.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/46", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/46/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/46/events", "html_url": "https://github.com/pbrod/numdifftools/issues/46", "id": 428919368, "node_id": "MDU6SXNzdWU0Mjg5MTkzNjg=", "number": 46, "title": "doctest failed", "user": {"login": "rutadesai", "id": 7421733, "node_id": "MDQ6VXNlcjc0MjE3MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7421733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rutadesai", "html_url": "https://github.com/rutadesai", "followers_url": "https://api.github.com/users/rutadesai/followers", "following_url": "https://api.github.com/users/rutadesai/following{/other_user}", "gists_url": "https://api.github.com/users/rutadesai/gists{/gist_id}", "starred_url": "https://api.github.com/users/rutadesai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rutadesai/subscriptions", "organizations_url": "https://api.github.com/users/rutadesai/orgs", "repos_url": "https://api.github.com/users/rutadesai/repos", "events_url": "https://api.github.com/users/rutadesai/events{/privacy}", "received_events_url": "https://api.github.com/users/rutadesai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-03T18:46:14Z", "updated_at": "2020-02-26T17:33:10Z", "closed_at": "2020-02-26T17:32:37Z", "author_association": "NONE", "active_lock_reason": null, "body": " nd.test(coverage=True, doctests=True) fails, returns FAILED (errors=3, failures=10). I am on Windows with Anaconda, python 3.7. I used pip install for installing numdifftools. Any ideas on why this might be failing?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/42", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/42/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/42/events", "html_url": "https://github.com/pbrod/numdifftools/issues/42", "id": 379128278, "node_id": "MDU6SXNzdWUzNzkxMjgyNzg=", "number": 42, "title": "New release?", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-09T11:37:04Z", "updated_at": "2019-06-10T12:44:02Z", "closed_at": "2019-06-10T12:44:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems like the last release is some time ago and there are some deprecations, like:\r\n```\r\n/home/travis/miniconda2/envs/testenv/lib/python2.7/site-packages/numdifftools/core.py:330: DeprecationWarning: `factorial` is deprecated!\r\nImporting `factorial` from scipy.misc is deprecated in scipy 1.0.0. Use `scipy.special.factorial` instead.\r\n  misc.factorial(np.arange(offset, step * nterms + offset, step))\r\n```\r\n\r\nThat seem fixed on master but not in that latest release. This would make PyMC3's life easier.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/41", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/41/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/41/events", "html_url": "https://github.com/pbrod/numdifftools/issues/41", "id": 360609293, "node_id": "MDU6SXNzdWUzNjA2MDkyOTM=", "number": 41, "title": " ModuleNotFoundError: No module named 'info'", "user": {"login": "alla15747", "id": 19640509, "node_id": "MDQ6VXNlcjE5NjQwNTA5", "avatar_url": "https://avatars3.githubusercontent.com/u/19640509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alla15747", "html_url": "https://github.com/alla15747", "followers_url": "https://api.github.com/users/alla15747/followers", "following_url": "https://api.github.com/users/alla15747/following{/other_user}", "gists_url": "https://api.github.com/users/alla15747/gists{/gist_id}", "starred_url": "https://api.github.com/users/alla15747/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alla15747/subscriptions", "organizations_url": "https://api.github.com/users/alla15747/orgs", "repos_url": "https://api.github.com/users/alla15747/repos", "events_url": "https://api.github.com/users/alla15747/events{/privacy}", "received_events_url": "https://api.github.com/users/alla15747/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-16T06:33:38Z", "updated_at": "2020-02-26T18:05:44Z", "closed_at": "2020-02-26T18:05:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to fix this issue?\r\n\r\nModuleNotFoundError                       Traceback (most recent call last)\r\n<ipython-input-19-a3397d88b620> in <module>()\r\n      1 import numpy as np\r\n----> 2 import numdifftools as nd\r\n      3 fd = nd.Derivative(np.exp)              # 1'st derivative\r\n      4 fdd = nd.Derivative(np.exp,derOrder=2)  # 2'nd derivative\r\n      5 fd(1)\r\n\r\n~\\Anaconda3\\lib\\site-packages\\numdifftools\\__init__.py in <module>()\r\n----> 1 from info import __doc__\r\n      2 from core import *\r\n      3 \r\n      4 from numpy.testing import Tester\r\n      5 test = Tester().test\r\n\r\nModuleNotFoundError: No module named 'info'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/39", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/39/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/39/events", "html_url": "https://github.com/pbrod/numdifftools/issues/39", "id": 336968930, "node_id": "MDU6SXNzdWUzMzY5Njg5MzA=", "number": 39, "title": "TypeError: unsupported operand type(s) for /: 'float' and 'Bicomplex'", "user": {"login": "bacalfa", "id": 1297074, "node_id": "MDQ6VXNlcjEyOTcwNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1297074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bacalfa", "html_url": "https://github.com/bacalfa", "followers_url": "https://api.github.com/users/bacalfa/followers", "following_url": "https://api.github.com/users/bacalfa/following{/other_user}", "gists_url": "https://api.github.com/users/bacalfa/gists{/gist_id}", "starred_url": "https://api.github.com/users/bacalfa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bacalfa/subscriptions", "organizations_url": "https://api.github.com/users/bacalfa/orgs", "repos_url": "https://api.github.com/users/bacalfa/repos", "events_url": "https://api.github.com/users/bacalfa/events{/privacy}", "received_events_url": "https://api.github.com/users/bacalfa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-29T11:47:02Z", "updated_at": "2020-02-26T18:48:50Z", "closed_at": "2020-02-26T18:48:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following gives an error:\r\n\r\n```\r\nimport numpy as np\r\nimport numdifftools as nd\r\n\r\ng = lambda x: 1.0/(np.exp(x[0]) + np.cos(x[1]) + 10)\r\n\r\nprint(nd.Gradient(g, method=\"multicomplex\")([1.0, 2.0]))\r\n```\r\n\r\nIf I change the method to `\"complex\"`, it works fine. Is there a way to use the multicomplex method in this situation and other similar ones?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/38", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/38/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/38/events", "html_url": "https://github.com/pbrod/numdifftools/issues/38", "id": 327677806, "node_id": "MDU6SXNzdWUzMjc2Nzc4MDY=", "number": 38, "title": "complex hessian matrix", "user": {"login": "rperrier1", "id": 34160654, "node_id": "MDQ6VXNlcjM0MTYwNjU0", "avatar_url": "https://avatars3.githubusercontent.com/u/34160654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rperrier1", "html_url": "https://github.com/rperrier1", "followers_url": "https://api.github.com/users/rperrier1/followers", "following_url": "https://api.github.com/users/rperrier1/following{/other_user}", "gists_url": "https://api.github.com/users/rperrier1/gists{/gist_id}", "starred_url": "https://api.github.com/users/rperrier1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rperrier1/subscriptions", "organizations_url": "https://api.github.com/users/rperrier1/orgs", "repos_url": "https://api.github.com/users/rperrier1/repos", "events_url": "https://api.github.com/users/rperrier1/events{/privacy}", "received_events_url": "https://api.github.com/users/rperrier1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-30T10:54:01Z", "updated_at": "2018-06-03T23:31:04Z", "closed_at": "2018-06-03T23:31:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI went through the following issue recently while trying to compute the Hessian matrix of a cost function which outputs complex numbers. Note that there is no similar problem while evaluating the gradient.\r\nnumdifftools casts the imaginary part and return a real matrix. I made a dirty fix in forcing the `hess` variable in line 943 of core.py to be complex and it does work, so I guess it should be easy to correct.\r\n\r\nHere is a toy example to reproduce the problem:\r\n```\r\nimport numpy as np\r\nimport numdifftools as nd\r\n\r\ndef foo(x):\r\n    return np.inner(x, x)-1j\r\n\r\nx = np.random.randn(3)\r\nhessn = nd.Hessian(foo)\r\n\r\nhessn(x)\r\n```\r\nwhich outputs in my case:\r\n`C:\\MyPrograms\\Anaconda3\\lib\\site-packages\\numdifftools\\core.py:947: ComplexWarning: Casting complex values to real discards the imaginary part\r\n  ) / (4. * hess[i, i])`\r\n\r\nThanks a lot for this great tool that you provide!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/37", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/37/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/37/events", "html_url": "https://github.com/pbrod/numdifftools/issues/37", "id": 313345250, "node_id": "MDU6SXNzdWUzMTMzNDUyNTA=", "number": 37, "title": "Unable to install on Python 2.7", "user": {"login": "rparini", "id": 7817173, "node_id": "MDQ6VXNlcjc4MTcxNzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/7817173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rparini", "html_url": "https://github.com/rparini", "followers_url": "https://api.github.com/users/rparini/followers", "following_url": "https://api.github.com/users/rparini/following{/other_user}", "gists_url": "https://api.github.com/users/rparini/gists{/gist_id}", "starred_url": "https://api.github.com/users/rparini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rparini/subscriptions", "organizations_url": "https://api.github.com/users/rparini/orgs", "repos_url": "https://api.github.com/users/rparini/repos", "events_url": "https://api.github.com/users/rparini/events{/privacy}", "received_events_url": "https://api.github.com/users/rparini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-11T14:19:17Z", "updated_at": "2018-06-29T07:38:36Z", "closed_at": "2018-06-08T15:21:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I can't get numdifftools to install with python 2.7.  I resolved the error \r\n```\r\nRuntimeError: Due to a bug in setuptools, PyScaffold currently needs at least Python 3.4! Install PyScaffold 2.5 for Python 2.7 support.\r\n```\r\nby changing in setup.py \r\n```Python\r\nsetup(setup_requires=['pyscaffold>=3.0a0,<3.1a0'] + sphinx,\r\n```\r\nto \r\n```python\r\nsetup(setup_requires=['pyscaffold==2.5.10'] + sphinx,\r\n```\r\n(2.5.10 is needed to work with setuptools version >= 39 due to blue-yonder/pyscaffold#148).  But I then get the error \r\n```\r\nerror: 'egg_base' must be a directory name (got `src`)\r\n```\r\nwhich is the setuptools bug that the PyScaffold docs say you need to use PyScaffold 2.5 to avoid.  It might be that the project needs to be set up with PyScaffold 2.5 in the first place as well as installed with it.  When I go back to the commit https://github.com/pbrod/numdifftools/commit/406a79877e0dd45aefe210b08e73cdd58ff4cb15 (just before numdifftools was updated with PyScaffold 3) then I can get it to install on python 2.7 if I downgrade setuptools to < 39.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/36", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/36/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/36/events", "html_url": "https://github.com/pbrod/numdifftools/issues/36", "id": 300136379, "node_id": "MDU6SXNzdWUzMDAxMzYzNzk=", "number": 36, "title": "Error on evaluating gradient", "user": {"login": "nkeito", "id": 16063845, "node_id": "MDQ6VXNlcjE2MDYzODQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/16063845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkeito", "html_url": "https://github.com/nkeito", "followers_url": "https://api.github.com/users/nkeito/followers", "following_url": "https://api.github.com/users/nkeito/following{/other_user}", "gists_url": "https://api.github.com/users/nkeito/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkeito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkeito/subscriptions", "organizations_url": "https://api.github.com/users/nkeito/orgs", "repos_url": "https://api.github.com/users/nkeito/repos", "events_url": "https://api.github.com/users/nkeito/events{/privacy}", "received_events_url": "https://api.github.com/users/nkeito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-02-26T07:41:20Z", "updated_at": "2020-02-26T18:07:58Z", "closed_at": "2020-02-26T18:07:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nI'm facing this problem, I have a function like this:\r\n\r\ndef function( v, r, z , observation):\r\n    return numpy.linalg.norm( observation - model(v,r,z) )   \r\n\r\nand model is a function which takes the (vector parameters) v, r, z and returns a vector of the same size as observation, thus far, everything is ok, but when I try to compute the gradient of function, I'm facing  the next error\r\n\r\nTraceback (most recent call last):\r\n  File \"Main.py\", line 62, in <module>\r\n    z = my_grad(  v, r, z, observation )\r\n  File \"/Users/Angel/Documents/Projects/Ursula/26Feb/Optimization/Solvers.py\", line 33, in grad\r\n    return dfun( v )\r\n  File \"/Users/Angel/anaconda/lib/python2.7/site-packages/numdifftools/nd_algopy.py\", line 147, in __call__\r\n    df = fun(x0, *args, **kwds)\r\n  File \"/Users/Angel/anaconda/lib/python2.7/site-packages/numdifftools/nd_algopy.py\", line 346, in _forward\r\n    return np.atleast_2d(super(Jacobian, self)._forward(x, *args, **kwds))\r\n  File \"/Users/Angel/anaconda/lib/python2.7/site-packages/numdifftools/nd_algopy.py\", line 266, in _forward\r\n    y = self.fun(tmp, *args, **kwds)\r\n  File \"/Users/Angel/Documents/Projects/Solvers.py\", line 29, in <lambda>\r\n    fun = lambda x: function( v, r, z , observation)\r\nValueError: setting an array element with a sequence.\r\n\r\nMy function to compute the gradient is as follows:\r\n\r\ndef my_grad( v, r, z , observation):\r\n   fun = lambda x: function( v, r, z , observation)\r\n  dfun = nda.Gradient(fun)\r\n  return dfun( v )\r\n\r\nI believe that I'm not making any mistake, but if you have any suggestion, please let me know\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/34", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/34/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/34/events", "html_url": "https://github.com/pbrod/numdifftools/issues/34", "id": 256174219, "node_id": "MDU6SXNzdWUyNTYxNzQyMTk=", "number": 34, "title": "Licence clarification.", "user": {"login": "edward-dauvergne", "id": 10072253, "node_id": "MDQ6VXNlcjEwMDcyMjUz", "avatar_url": "https://avatars1.githubusercontent.com/u/10072253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edward-dauvergne", "html_url": "https://github.com/edward-dauvergne", "followers_url": "https://api.github.com/users/edward-dauvergne/followers", "following_url": "https://api.github.com/users/edward-dauvergne/following{/other_user}", "gists_url": "https://api.github.com/users/edward-dauvergne/gists{/gist_id}", "starred_url": "https://api.github.com/users/edward-dauvergne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edward-dauvergne/subscriptions", "organizations_url": "https://api.github.com/users/edward-dauvergne/orgs", "repos_url": "https://api.github.com/users/edward-dauvergne/repos", "events_url": "https://api.github.com/users/edward-dauvergne/events{/privacy}", "received_events_url": "https://api.github.com/users/edward-dauvergne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-08T08:11:39Z", "updated_at": "2017-12-22T09:57:31Z", "closed_at": "2017-12-22T09:57:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was wondering if it would be possible to clarify the licensing text:\r\n\r\n> * Neither the name of the {organization} nor the names of its\r\n  contributors may be used to endorse or promote products derived from\r\nthis software without specific prior written permission.\r\n\r\nHere the \"{organization}\" part from the stock licence template is ambiguous, who does it refer to?  This is normally replaced for legal clarity.  One way that I have seen, if there is no formal organisation, is to use:\r\n\r\n> * Neither the names of the copyright holders nor the names of any\r\n   contributors may be used to endorse or promote products derived from\r\n   this software without specific prior written permission.\r\n\r\nCheers,\r\nEdward", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/33", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/33/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/33/events", "html_url": "https://github.com/pbrod/numdifftools/issues/33", "id": 251554125, "node_id": "MDU6SXNzdWUyNTE1NTQxMjU=", "number": 33, "title": "recipe for conda-forge", "user": {"login": "andyfaff", "id": 702934, "node_id": "MDQ6VXNlcjcwMjkzNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/702934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andyfaff", "html_url": "https://github.com/andyfaff", "followers_url": "https://api.github.com/users/andyfaff/followers", "following_url": "https://api.github.com/users/andyfaff/following{/other_user}", "gists_url": "https://api.github.com/users/andyfaff/gists{/gist_id}", "starred_url": "https://api.github.com/users/andyfaff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andyfaff/subscriptions", "organizations_url": "https://api.github.com/users/andyfaff/orgs", "repos_url": "https://api.github.com/users/andyfaff/repos", "events_url": "https://api.github.com/users/andyfaff/events{/privacy}", "received_events_url": "https://api.github.com/users/andyfaff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-21T05:36:17Z", "updated_at": "2017-12-22T10:10:35Z", "closed_at": "2017-12-22T10:10:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using numdifftools as a dependency for a package of mine. Because the package uses an extension I make it available on conda-forge (which takes care of all the different OS/numpy/python combinations).\r\n\r\nHowever, numdifftools is not currently available on conda-forge. Would you mind if numdifftools was added as a recipe on [conda-forge](https://conda-forge.org/)?\r\n\r\nI don't mind doing the groundwork for this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/30", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/30/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/30/events", "html_url": "https://github.com/pbrod/numdifftools/issues/30", "id": 234344126, "node_id": "MDU6SXNzdWUyMzQzNDQxMjY=", "number": 30, "title": "Hessian and Hessdiag give different results", "user": {"login": "avcopan", "id": 3904306, "node_id": "MDQ6VXNlcjM5MDQzMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3904306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avcopan", "html_url": "https://github.com/avcopan", "followers_url": "https://api.github.com/users/avcopan/followers", "following_url": "https://api.github.com/users/avcopan/following{/other_user}", "gists_url": "https://api.github.com/users/avcopan/gists{/gist_id}", "starred_url": "https://api.github.com/users/avcopan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avcopan/subscriptions", "organizations_url": "https://api.github.com/users/avcopan/orgs", "repos_url": "https://api.github.com/users/avcopan/repos", "events_url": "https://api.github.com/users/avcopan/events{/privacy}", "received_events_url": "https://api.github.com/users/avcopan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-07T21:11:28Z", "updated_at": "2020-02-26T14:29:08Z", "closed_at": "2020-02-26T14:29:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Great code!  I'm finding it very useful.  I have a query regarding version 0.9.20.\r\n\r\nI noticed that `Hessian` and `Hessdiag` give significantly different results, on the order of 0.01%.  I have a way of checking my answer, and the `Hessdiag` result matches it very closely, on the order of 10^-12%.\r\n\r\nThe difference appears to be that `Hessdiag` is ignoring my requested stepping scheme (a simple `step=0.005`) and doing something smarter, whereas `Hessian` obeys my request.\r\n\r\nIs this behavior expected?\r\n\r\nEither way, I am also curious how to request the same stepping scheme for `Hessian` in order to match the other two results.\r\n\r\nI don't have a minimal working example because the function being differentiated is complicated, but this is how I am calling it (here's a [link](https://github.com/avcopan/scfexchange/blob/master/examples/rpa.py#L91)):\r\n```\r\nimport numdifftools as ndt                                                       \r\n                                                                                 \r\nenergy_fn = phf.get_energy_field_function(niter=300, e_threshold=1e-14,          \r\n                                          d_threshold=1e-13)                     \r\nhess_diag_fn = ndt.Hessdiag(energy_fn, step=0.005, order=12,                     \r\n                            method='central', full_output=True)                  \r\nhess_fn = ndt.Hessian(energy_fn, step=0.005, order=12, method='central',         \r\n                      full_output=True)                                          \r\nhess_diag, hess_diag_results = hess_diag_fn(np.r_[0., 0., 0.])                   \r\nhess, hess_results = hess_fn(np.r_[0., 0., 0.])                                  \r\n                                                                                 \r\n# This is the correct answer:                                                    \r\nprint(-alpha.diagonal())  # ->[-7.93556221 -3.06821077 -0.05038621]              \r\n                                                                                 \r\n# ndt.Hessdiag gives the correct answer, but seems to use a different            \r\n# stepping scheme from the one I requested:                                      \r\nprint(hess_diag)          # ->[-7.93556221 -3.06821077 -0.05038621]              \r\n                                                                                 \r\n# ndt.Hessian gives an incorrect answer, but seems to use the stepping           \r\n# scheme I requested:                                                            \r\nprint(hess.diagonal())    # ->[-7.93496262 -3.06834544 -0.05039031]              \r\n                                                                                 \r\n                                                                                 \r\n                                                                                 \r\n# This is the output string from ndt.Hessian:                                    \r\nprint(hess_results)                                                              \r\n# ->info(error_estimate=array([[ 0.06353102,  0.06353102,  0.06353102],          \r\n#                              [ 0.06353102,  0.06353102,  0.06353102],          \r\n#                              [ 0.06353102,  0.06353102,  0.06353102]]),        \r\n#        final_step=array([[ 0.005,  0.005,  0.005],                             \r\n#                          [ 0.005,  0.005,  0.005],                             \r\n#                          [ 0.005,  0.005,  0.005]]),                           \r\n#        index=array([0, 1, 2, 3, 4, 5, 6, 7, 8]) )                              \r\n                                                                                 \r\n# This is the output string from ndt.Hessdiag:                                   \r\nprint(hess_diag_results)                                                         \r\n# ->info(error_estimate=array([ 0.66617107,  0.66617107,  0.66617107])           \r\n#        final_step=array([ 0.0524288,  0.0524288,  0.0524288])                  \r\n#        index=array([0, 1, 2]))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/27", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/27/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/27/events", "html_url": "https://github.com/pbrod/numdifftools/issues/27", "id": 202794517, "node_id": "MDU6SXNzdWUyMDI3OTQ1MTc=", "number": 27, "title": "Working with numdifftools.Jacobian to find a Jacobian of a vector function", "user": {"login": "Omer80", "id": 3463905, "node_id": "MDQ6VXNlcjM0NjM5MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3463905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Omer80", "html_url": "https://github.com/Omer80", "followers_url": "https://api.github.com/users/Omer80/followers", "following_url": "https://api.github.com/users/Omer80/following{/other_user}", "gists_url": "https://api.github.com/users/Omer80/gists{/gist_id}", "starred_url": "https://api.github.com/users/Omer80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Omer80/subscriptions", "organizations_url": "https://api.github.com/users/Omer80/orgs", "repos_url": "https://api.github.com/users/Omer80/repos", "events_url": "https://api.github.com/users/Omer80/events{/privacy}", "received_events_url": "https://api.github.com/users/Omer80/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-24T11:38:28Z", "updated_at": "2017-01-24T18:19:18Z", "closed_at": "2017-01-24T18:19:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nHello, I've opened a question in stackoverflow regarding a MemoryError that I get when I try to use numdifftools.Jacobian - [link](http://stackoverflow.com/questions/41827242/python-working-with-numdifftools-jacobian-to-find-a-jacobian-of-a-vector-functi).\r\n```\r\nIn [27]: m.initial_state.shape\r\nOut[27]: (2048,)\r\n\r\nIn [28]: m.rhs_pde(m.initial_state).shape\r\nOut[28]: (2048,)\r\n\r\nIn [29]: jac = nd.Jacobian(m.rhs_pde)(m.initial_state)\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-29-6bc47cd5a4d5>\", line 1, in <module>\r\n    jac = nd.Jacobian(m.rhs_pde)(m.initial_state)\r\n\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/numdifftools/core.py\", line 666, in __call__\r\n    return super(Jacobian, self).__call__(np.atleast_1d(x), *args, **kwds)\r\n\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/numdifftools/core.py\", line 297, in __call__\r\n    results = self._derivative(xi, args, kwds)\r\n\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/numdifftools/core.py\", line 656, in _derivative_nonzero_order\r\n    results = [diff(f, fxi, xi, h, *args, **kwds) for h in steps]\r\n\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/numdifftools/core.py\", line 613, in _central\r\n    increments = self._increments(n, h)\r\n\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/numdifftools/core.py\", line 609, in _increments\r\n    return np.dot(self._identity(n), h)\r\n\r\n  File \"/home/anaconda2/lib/python2.7/site-packages/numdifftools/core.py\", line 604, in _identity\r\n    m = np.zeros((n, n, n))\r\n\r\nMemoryError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/26", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/26/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/26/events", "html_url": "https://github.com/pbrod/numdifftools/issues/26", "id": 200454707, "node_id": "MDU6SXNzdWUyMDA0NTQ3MDc=", "number": 26, "title": "question about the wheel", "user": {"login": "stonebig", "id": 4312421, "node_id": "MDQ6VXNlcjQzMTI0MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stonebig", "html_url": "https://github.com/stonebig", "followers_url": "https://api.github.com/users/stonebig/followers", "following_url": "https://api.github.com/users/stonebig/following{/other_user}", "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}", "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions", "organizations_url": "https://api.github.com/users/stonebig/orgs", "repos_url": "https://api.github.com/users/stonebig/repos", "events_url": "https://api.github.com/users/stonebig/events{/privacy}", "received_events_url": "https://api.github.com/users/stonebig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-12T19:15:42Z", "updated_at": "2017-03-10T08:57:50Z", "closed_at": "2017-03-10T08:57:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the function of that enormous object of 8_201_869 byte in the pypi  wheel ? it makes the wheel  pretty big, compared to the source .zip\r\n\r\nnumdifftools-0.9.20.data/data/share/numdifftools/docs/_build/doctrees/environment.pickle\t8201869\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/25", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/25/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/25/events", "html_url": "https://github.com/pbrod/numdifftools/issues/25", "id": 198852355, "node_id": "MDU6SXNzdWUxOTg4NTIzNTU=", "number": 25, "title": "Jacobian broken since 0.9.15", "user": {"login": "baroobob", "id": 3643831, "node_id": "MDQ6VXNlcjM2NDM4MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3643831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baroobob", "html_url": "https://github.com/baroobob", "followers_url": "https://api.github.com/users/baroobob/followers", "following_url": "https://api.github.com/users/baroobob/following{/other_user}", "gists_url": "https://api.github.com/users/baroobob/gists{/gist_id}", "starred_url": "https://api.github.com/users/baroobob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baroobob/subscriptions", "organizations_url": "https://api.github.com/users/baroobob/orgs", "repos_url": "https://api.github.com/users/baroobob/repos", "events_url": "https://api.github.com/users/baroobob/events{/privacy}", "received_events_url": "https://api.github.com/users/baroobob/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 85634156, "node_id": "MDU6TGFiZWw4NTYzNDE1Ng==", "url": "https://api.github.com/repos/pbrod/numdifftools/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pbrod", "id": 1193469, "node_id": "MDQ6VXNlcjExOTM0Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1193469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbrod", "html_url": "https://github.com/pbrod", "followers_url": "https://api.github.com/users/pbrod/followers", "following_url": "https://api.github.com/users/pbrod/following{/other_user}", "gists_url": "https://api.github.com/users/pbrod/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbrod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbrod/subscriptions", "organizations_url": "https://api.github.com/users/pbrod/orgs", "repos_url": "https://api.github.com/users/pbrod/repos", "events_url": "https://api.github.com/users/pbrod/events{/privacy}", "received_events_url": "https://api.github.com/users/pbrod/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pbrod", "id": 1193469, "node_id": "MDQ6VXNlcjExOTM0Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1193469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbrod", "html_url": "https://github.com/pbrod", "followers_url": "https://api.github.com/users/pbrod/followers", "following_url": "https://api.github.com/users/pbrod/following{/other_user}", "gists_url": "https://api.github.com/users/pbrod/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbrod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbrod/subscriptions", "organizations_url": "https://api.github.com/users/pbrod/orgs", "repos_url": "https://api.github.com/users/pbrod/repos", "events_url": "https://api.github.com/users/pbrod/events{/privacy}", "received_events_url": "https://api.github.com/users/pbrod/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2017-01-05T01:14:16Z", "updated_at": "2017-01-06T16:23:40Z", "closed_at": "2017-01-06T04:25:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wrote some code back in September that uses Jacobian to calculate all the partial derivatives for a matrix valued function of a vector argument. I started working with this code again this morning and discovered that it no longer works. I traced it down to a change in the behavior of Jacobian. This simple program demonstrates what I mean.\r\n```python\r\nfrom numpy import array\r\nfrom numdifftools import Jacobian\r\nx = array([1,2])\r\nG = lambda x: array([[x[0], x[1]], [x[0], x[1]]])\r\ndGdx = Jacobian(lambda x: G(x))\r\nD = dGdx(x)\r\nprint G(x).shape\r\nprint D.shape\r\n```\r\nThis is the output with numdifftools 0.9.14 installed.\r\n```\r\n(2, 2)\r\n(2, 2, 2)\r\n```\r\nThis is the output with numdifftools 0.9.15 or later installed.\r\n ```\r\n(2, 2)\r\n(2, 2, 4)\r\n```\r\nSo numdifftools 0.9.15 and later returns the wrong size tensor.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/24", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/24/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/24/events", "html_url": "https://github.com/pbrod/numdifftools/issues/24", "id": 175210706, "node_id": "MDU6SXNzdWUxNzUyMTA3MDY=", "number": 24, "title": "Upload proper distutils/setuptools tarball to PyPI", "user": {"login": "SoapGentoo", "id": 16636962, "node_id": "MDQ6VXNlcjE2NjM2OTYy", "avatar_url": "https://avatars3.githubusercontent.com/u/16636962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SoapGentoo", "html_url": "https://github.com/SoapGentoo", "followers_url": "https://api.github.com/users/SoapGentoo/followers", "following_url": "https://api.github.com/users/SoapGentoo/following{/other_user}", "gists_url": "https://api.github.com/users/SoapGentoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/SoapGentoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SoapGentoo/subscriptions", "organizations_url": "https://api.github.com/users/SoapGentoo/orgs", "repos_url": "https://api.github.com/users/SoapGentoo/repos", "events_url": "https://api.github.com/users/SoapGentoo/events{/privacy}", "received_events_url": "https://api.github.com/users/SoapGentoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-06T10:16:39Z", "updated_at": "2016-09-08T11:54:19Z", "closed_at": "2016-09-08T11:05:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear numdifftools developers,\nI have recently packaged numdifftools 0.9.16 for Gentoo. One problem is that you do not provide full distutils tarballs on PyPI anymore. Linux distributions heavily rely on being able to run distutils/setuptools on their own systems, be it Gentoo or any other distribution, and hence wheels packages are unworkable for us. So please also upload properly packaged tarballs to PyPI (including all the metadata files such as PKG-INFO) and so. And no, the Github generated tarballs are not sufficient, as they lack the PKG-INFO files, which results in an error. The wider Linux community will greatly appreciate having both tarballs and wheels packages! Thanks for considering my call for help.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/22", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/22/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/22/events", "html_url": "https://github.com/pbrod/numdifftools/issues/22", "id": 162169440, "node_id": "MDU6SXNzdWUxNjIxNjk0NDA=", "number": 22, "title": "Jacobian", "user": {"login": "Plancalkuele", "id": 8739031, "node_id": "MDQ6VXNlcjg3MzkwMzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8739031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Plancalkuele", "html_url": "https://github.com/Plancalkuele", "followers_url": "https://api.github.com/users/Plancalkuele/followers", "following_url": "https://api.github.com/users/Plancalkuele/following{/other_user}", "gists_url": "https://api.github.com/users/Plancalkuele/gists{/gist_id}", "starred_url": "https://api.github.com/users/Plancalkuele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Plancalkuele/subscriptions", "organizations_url": "https://api.github.com/users/Plancalkuele/orgs", "repos_url": "https://api.github.com/users/Plancalkuele/repos", "events_url": "https://api.github.com/users/Plancalkuele/events{/privacy}", "received_events_url": "https://api.github.com/users/Plancalkuele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-24T15:17:05Z", "updated_at": "2017-06-26T22:34:55Z", "closed_at": "2016-06-24T17:26:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to generate the Jacobian from a function in which i use math.fsum()  for making the function adaptable to the number of input values given.\n\nHere is the code:\n\n```\nimport math\nimport numpy as np\nimport numdifftools as nd\n\nConst = 1.64735\nN = np.array([2, 4, 2])\nM = np.array([1])\nE = np.array([1])\nC = np.array([0.9218, 0.5780, 2.1182])\nD = np.array([0.2610])\nO = np.array([0.7410])\n\ny_pred = lambda C,D,O: Const + math.fsum(N*C) + math.fsum(M*D) + math.fsum(E*O)\n\njac = nd.Jacobian(y_pred)(C,D,O)\n\nprint(jac)\n```\n\nThe output is:\n`[[ 2.  4.  2.]]`\n\nWhich is basically the array N and not what I want to generate, the Jacobian.\nIs it possible to define a function like this (with a sum function) and then try to generate the Jacobian?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/21", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/21/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/21/events", "html_url": "https://github.com/pbrod/numdifftools/issues/21", "id": 161123643, "node_id": "MDU6SXNzdWUxNjExMjM2NDM=", "number": 21, "title": "ReadTheDocs permission denied", "user": {"login": "andrewfowlie", "id": 3758193, "node_id": "MDQ6VXNlcjM3NTgxOTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3758193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewfowlie", "html_url": "https://github.com/andrewfowlie", "followers_url": "https://api.github.com/users/andrewfowlie/followers", "following_url": "https://api.github.com/users/andrewfowlie/following{/other_user}", "gists_url": "https://api.github.com/users/andrewfowlie/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewfowlie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewfowlie/subscriptions", "organizations_url": "https://api.github.com/users/andrewfowlie/orgs", "repos_url": "https://api.github.com/users/andrewfowlie/repos", "events_url": "https://api.github.com/users/andrewfowlie/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewfowlie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-06-20T06:14:23Z", "updated_at": "2016-07-18T12:16:02Z", "closed_at": "2016-06-24T17:28:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Accessing http://numdifftools.readthedocs.io/ directs to http://numdifftools.readthedocs.io/en/v0.9.14/ and I see the message:\n\n> Permission Denied\n> \n> You don't have the proper permissions to view this page. Please contact the owner of this project to request permission.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/20", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/20/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/20/events", "html_url": "https://github.com/pbrod/numdifftools/issues/20", "id": 160731018, "node_id": "MDU6SXNzdWUxNjA3MzEwMTg=", "number": 20, "title": "Any plans to support parallel function evaluation to utilize multiple cores ?", "user": {"login": "mistycheney", "id": 580361, "node_id": "MDQ6VXNlcjU4MDM2MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/580361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mistycheney", "html_url": "https://github.com/mistycheney", "followers_url": "https://api.github.com/users/mistycheney/followers", "following_url": "https://api.github.com/users/mistycheney/following{/other_user}", "gists_url": "https://api.github.com/users/mistycheney/gists{/gist_id}", "starred_url": "https://api.github.com/users/mistycheney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mistycheney/subscriptions", "organizations_url": "https://api.github.com/users/mistycheney/orgs", "repos_url": "https://api.github.com/users/mistycheney/repos", "events_url": "https://api.github.com/users/mistycheney/events{/privacy}", "received_events_url": "https://api.github.com/users/mistycheney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-16T18:40:10Z", "updated_at": "2020-02-26T18:50:28Z", "closed_at": "2020-02-26T18:50:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this very useful package. I wonder if you have plans to add support for parallel function evaluation so multiple cores can be utilized  ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/19", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/19/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/19/events", "html_url": "https://github.com/pbrod/numdifftools/issues/19", "id": 143787641, "node_id": "MDU6SXNzdWUxNDM3ODc2NDE=", "number": 19, "title": "multiple observations mishandled in Jacobian", "user": {"login": "mikofski", "id": 1385621, "node_id": "MDQ6VXNlcjEzODU2MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1385621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikofski", "html_url": "https://github.com/mikofski", "followers_url": "https://api.github.com/users/mikofski/followers", "following_url": "https://api.github.com/users/mikofski/following{/other_user}", "gists_url": "https://api.github.com/users/mikofski/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikofski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikofski/subscriptions", "organizations_url": "https://api.github.com/users/mikofski/orgs", "repos_url": "https://api.github.com/users/mikofski/repos", "events_url": "https://api.github.com/users/mikofski/events{/privacy}", "received_events_url": "https://api.github.com/users/mikofski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 85634156, "node_id": "MDU6TGFiZWw4NTYzNDE1Ng==", "url": "https://api.github.com/repos/pbrod/numdifftools/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-27T08:17:59Z", "updated_at": "2016-04-03T20:43:18Z", "closed_at": "2016-04-03T20:43:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you so much for this tool. Also I am a long time fan of [John D'Errico from MATLAB FEX](http://www.mathworks.com/matlabcentral/profile/authors/869215-john-d-errico).\n\nAccording to the [documentation on Jacobian](http://numdifftools.readthedocs.org/en/latest/api/generated/numdifftools.core.Jacobian.html) it says:\n\n> If f returns a 1d array, it returns a Jacobian. If a 2d array is returned by f (e.g., with a value for each observation), it returns a 3d array with the Jacobian of each observation with shape xk x nobs x xk. I.e., the Jacobian of the first observation would be [:, 0, :]\n\nBut that is not what I observe. Consider the following function. ALGOPY returns the following Jacobian:\n\n``` python\nimport numpy as np\nfrom algopy import zeros as azeros\nimport numdifftools.nd_algopy as nda\n\ndef f(x):\n    f0 = x[0] ** 2 + x[1] ** 2\n    f1 = x[0] ** 3 + x[1] ** 3\n    s0 = f0.size\n    s1 = f1.size\n    out = azeros((2, (s0 + s1) / 2),dtype=x)\n    out[0,:] = f0\n    out[1,:] = f1\n    return out\n\nx = np.array([(1, 2, 3, 4),(5, 6, 7, 8)],dtype=float)\n# array([[ 1.,  2.,  3.,  4.],\n#        [ 5.,  6.,  7.,  8.]])\ny = f(x)\n#array([[  26.,   40.,   58.,   80.],\n#       [ 126.,  224.,  370.,  576.]])\njaca = nda.Jacobian(f)\nj = jaca(x)\n#array([[[   2.,    0.,    0.,    0.,   10.,    0.,    0.,    0.],\n#        [   0.,    4.,    0.,    0.,    0.,   12.,    0.,    0.],\n#        [   0.,    0.,    6.,    0.,    0.,    0.,   14.,    0.],\n#        [   0.,    0.,    0.,    8.,    0.,    0.,    0.,   16.]],\n#\n#       [[   3.,    0.,    0.,    0.,   75.,    0.,    0.,    0.],\n#        [   0.,   12.,    0.,    0.,    0.,  108.,    0.,    0.],\n#        [   0.,    0.,   27.,    0.,    0.,    0.,  147.,    0.],\n#        [   0.,    0.,    0.,   48.,    0.,    0.,    0.,  192.]]])\n```\n\nThis is what I expected to happen. Each observation and corresponding function evaluation is treated like a separate independent variable. And since the function returns a 2d array, the Jacobian is 3d.\n\nHowever when I try the same thing with `numdifftools` I get inconsistent results.:\n- if the number of observations is less than or equal to the degrees of freedom, then the observations are added together, depending on how I shape the arguments and the return value\n- if the number of observations is greater than the degrees of freedom, then I get a stacktrace.\n\n``` python\nimport numpy as np\nimport numdifftools as nd\n\ndef g(x):\n    f0 = x[0]**2 + x[1]**2\n    f1 = x[0]**3 + x[1]**3\n    return np.array([f0, f1])\n\nx = np.array([(1, 2, 3, 4),(5, 6, 7, 8)],dtype=float)\n# array([[ 1.,  2.,  3.,  4.],\n#        [ 5.,  6.,  7.,  8.]])\ny = g(x)\n#array([[  26.,   40.,   58.,   80.],\n#       [ 126.,  224.,  370.,  576.]])\njac = nd.Jacobian(g)\njac([1, 2])\n#array([[  2.,   4.],\n#       [  3.,  12.]])\njac([(1, 3), (2, 4)])\n#array([[[  6.        ,   0.        ],\n#        [ 13.6535884 ,   0.        ]],\n#\n#       [[  0.        ,  16.25349666],\n#        [  0.        ,  75.        ]]])\nj = jac(x)\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-20-0da34a79b9f7> in <module>()\n----> 1 j = jac(x)\n\nc:\\python27\\lib\\site-packages\\numdifftools\\core.pyc in __call__(self, x, *args, **kwds)\n   1032\n   1033     def __call__(self, x, *args, **kwds):\n-> 1034         return super(Gradient, self).__call__(np.atleast_1d(x), *args, **kwds)\n   1035\n   1036\n\nc:\\python27\\lib\\site-packages\\numdifftools\\core.pyc in __call__(self, x, *args, **kwds)\n    647     def __call__(self, x, *args, **kwds):\n    648         xi = np.asarray(x)\n--> 649         results = self._derivative(xi, args, kwds)\n    650         derivative, info = self._extrapolate(*results)\n    651         if self.full_output:\n\nc:\\python27\\lib\\site-packages\\numdifftools\\core.pyc in _derivative_nonzero_order(self, xi, args, kwds)\n    866         steps = self._get_steps(xi)\n    867         fxi = self._eval_first(f, xi, *args, **kwds)\n--> 868         results = [diff(f, fxi, xi, h, *args, **kwds) for h in steps]\n    869         step_ratio = self._compute_step_ratio(steps)\n    870\n\nc:\\python27\\lib\\site-packages\\numdifftools\\core.pyc in _central(f, fx, x, h, *args, **kwds)\n    986     def _central(f, fx, x, h, *args, **kwds):\n    987         n = len(x)\n--> 988         increments = np.identity(n) * h\n    989         partials = [(f(x + hi, *args, **kwds) - f(x - hi, *args, **kwds)) / 2.0\n    990                     for hi in increments]\n\nValueError: operands could not be broadcast together with shapes (2,2) (2,4)\n```\n\nI will look into the source when I have more time, and in the meantime, the ALGOPY methods much more performant.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/16", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/16/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/16/events", "html_url": "https://github.com/pbrod/numdifftools/issues/16", "id": 123279894, "node_id": "MDU6SXNzdWUxMjMyNzk4OTQ=", "number": 16, "title": "Support for multiple dimensions?", "user": {"login": "solarjoe", "id": 10460113, "node_id": "MDQ6VXNlcjEwNDYwMTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/10460113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solarjoe", "html_url": "https://github.com/solarjoe", "followers_url": "https://api.github.com/users/solarjoe/followers", "following_url": "https://api.github.com/users/solarjoe/following{/other_user}", "gists_url": "https://api.github.com/users/solarjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/solarjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solarjoe/subscriptions", "organizations_url": "https://api.github.com/users/solarjoe/orgs", "repos_url": "https://api.github.com/users/solarjoe/repos", "events_url": "https://api.github.com/users/solarjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/solarjoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-21T13:30:11Z", "updated_at": "2015-12-23T14:06:11Z", "closed_at": "2015-12-23T13:33:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\nis there a way to calculate directional derivatives of a function\nusing numdifftools, as with directionaldiff or gradest from Matlab's derivest?\n\nKind regards,\nJoe\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/15", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/15/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/15/events", "html_url": "https://github.com/pbrod/numdifftools/issues/15", "id": 115329915, "node_id": "MDU6SXNzdWUxMTUzMjk5MTU=", "number": 15, "title": "remove sphinx/numpydoc from requirements.txt", "user": {"login": "pkienzle", "id": 473456, "node_id": "MDQ6VXNlcjQ3MzQ1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/473456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkienzle", "html_url": "https://github.com/pkienzle", "followers_url": "https://api.github.com/users/pkienzle/followers", "following_url": "https://api.github.com/users/pkienzle/following{/other_user}", "gists_url": "https://api.github.com/users/pkienzle/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkienzle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkienzle/subscriptions", "organizations_url": "https://api.github.com/users/pkienzle/orgs", "repos_url": "https://api.github.com/users/pkienzle/repos", "events_url": "https://api.github.com/users/pkienzle/events{/privacy}", "received_events_url": "https://api.github.com/users/pkienzle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-05T17:09:09Z", "updated_at": "2015-11-10T19:00:29Z", "closed_at": "2015-11-10T18:58:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was surprised to have my sphinx version updated when I installed numdifftools.  Do you really need the following packages from requirements.txt to run numdifftools?\n\n```\nnumpydoc>=0.5\nsphinx_rtd_theme>=0.1.7\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/14", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/14/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/14/events", "html_url": "https://github.com/pbrod/numdifftools/issues/14", "id": 109580874, "node_id": "MDU6SXNzdWUxMDk1ODA4NzQ=", "number": 14, "title": "Example of using Jacobian with args and kwds?", "user": {"login": "mattdornfeld", "id": 4313686, "node_id": "MDQ6VXNlcjQzMTM2ODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4313686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattdornfeld", "html_url": "https://github.com/mattdornfeld", "followers_url": "https://api.github.com/users/mattdornfeld/followers", "following_url": "https://api.github.com/users/mattdornfeld/following{/other_user}", "gists_url": "https://api.github.com/users/mattdornfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattdornfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattdornfeld/subscriptions", "organizations_url": "https://api.github.com/users/mattdornfeld/orgs", "repos_url": "https://api.github.com/users/mattdornfeld/repos", "events_url": "https://api.github.com/users/mattdornfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/mattdornfeld/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-02T22:12:10Z", "updated_at": "2015-10-04T20:45:19Z", "closed_at": "2015-10-04T20:45:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you provide an example of using Jacobian with args?\n\nI have a function \n\ndef f(x, args):\n    pass\n\nI tried \n\nx0 \njac = Jacobian(f)\njac(x0, args)\n\nThis produces the error\n\nTypeError                                 Traceback (most recent call last)\n<ipython-input-66-86e601a44004> in <module>()\n----> 1 jac(q0,params)\n\n/usr/local/lib/python2.7/dist-packages/numdifftools/core.pyc in **call**(self, x, _args, *_kwds)\n   1112 \n   1113     def **call**(self, x, _args, *_kwds):\n-> 1114         return super(Gradient, self).**call**(np.atleast_1d(x), _args, *_kwds)\n   1115 \n   1116 \n\n/usr/local/lib/python2.7/dist-packages/numdifftools/core.pyc in **call**(self, x, _args, *_kwds)\n    747     def **call**(self, x, _args, *_kwds):\n    748         xi = np.asarray(x)\n--> 749         results = self._derivative(xi, args, kwds)\n    750         derivative, info = self._extrapolate(*results)\n    751         if self.full_output:\n\n/usr/local/lib/python2.7/dist-packages/numdifftools/core.pyc in _derivative(self, xi, args, kwds)\n    945         steps = self._get_steps(xi)\n    946         fxi = self._eval_first(f, xi, _args, *_kwds)\n--> 947         results = [diff(f, fxi, xi, h, _args, *_kwds) for h in steps]\n    948         step_ratio = self._compute_step_ratio(steps)\n    949 \n\n/usr/local/lib/python2.7/dist-packages/numdifftools/core.pyc in _central(f, fx, x, h, _args, *_kwds)\n   1067         increments = np.identity(n) \\* h\n   1068         partials = [(f(x + hi, _args, *_kwds) - f(x - hi, _args, *_kwds)) / 2.0\n-> 1069                     for hi in increments]\n   1070         return np.array(partials).T\n   1071 \n\nTypeError: unsupported operand type(s) for -: 'list' and 'list'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/12", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/12/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/12/events", "html_url": "https://github.com/pbrod/numdifftools/issues/12", "id": 105541314, "node_id": "MDU6SXNzdWUxMDU1NDEzMTQ=", "number": 12, "title": "BicomplexTester.test_arcsin - test failure", "user": {"login": "jlec", "id": 79732, "node_id": "MDQ6VXNlcjc5NzMy", "avatar_url": "https://avatars0.githubusercontent.com/u/79732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlec", "html_url": "https://github.com/jlec", "followers_url": "https://api.github.com/users/jlec/followers", "following_url": "https://api.github.com/users/jlec/following{/other_user}", "gists_url": "https://api.github.com/users/jlec/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlec/subscriptions", "organizations_url": "https://api.github.com/users/jlec/orgs", "repos_url": "https://api.github.com/users/jlec/repos", "events_url": "https://api.github.com/users/jlec/events{/privacy}", "received_events_url": "https://api.github.com/users/jlec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-09T08:15:19Z", "updated_at": "2015-11-03T09:43:50Z", "closed_at": "2015-11-03T09:43:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nself = <test_multicomplex.BicomplexTester testMethod=test_arcsin>\n\n    def test_arcsin(self):\n        z1 = bicomplex(np.linspace(-0.98, 0.98, 5), 0)\n        z2 = z1.arcsin()\n        np.testing.assert_allclose(z2.real, np.arcsin(z1.z1).real)\n>       np.testing.assert_allclose(z2.imag1, np.arcsin(z1.z1).imag)\n\ntests/test_multicomplex.py:165: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/usr/lib64/python3.3/site-packages/numpy/testing/utils.py:1297: in assert_allclose\n    verbose=verbose, header=header)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncomparison = <function assert_allclose.<locals>.compare at 0x2b29122bb7a0>, x = array([ -1.80209436e-17,   3.04011480e-17,   0.00000000e+00,\n        -8.74043172e-18,  -1.02088676e-17]), y = array([ -2.38805371e-17,  -1.40242092e-17,   0.00000000e+00,\n        -1.40242092e-17,  -2.38805371e-17]), err_msg = ''\nverbose = True, header = 'Not equal to tolerance rtol=1e-07, atol=0', precision = 6\n\n    def assert_array_compare(comparison, x, y, err_msg='', verbose=True,\n                             header='', precision=6):\n        from numpy.core import array, isnan, isinf, any, all, inf\n        x = array(x, copy=False, subok=True)\n        y = array(y, copy=False, subok=True)\n\n        def isnumber(x):\n            return x.dtype.char in '?bhilqpBHILQPefdgFDG'\n\n        def chk_same_position(x_id, y_id, hasval='nan'):\n            \"\"\"Handling nan/inf: check that x and y have the nan/inf at the same\n            locations.\"\"\"\n            try:\n                assert_array_equal(x_id, y_id)\n            except AssertionError:\n                msg = build_err_msg([x, y],\n                                    err_msg + '\\nx and y %s location mismatch:' \\\n                                    % (hasval), verbose=verbose, header=header,\n                                    names=('x', 'y'), precision=precision)\n                raise AssertionError(msg)\n\n        try:\n            cond = (x.shape==() or y.shape==()) or x.shape == y.shape\n            if not cond:\n                msg = build_err_msg([x, y],\n                                    err_msg\n                                    + '\\n(shapes %s, %s mismatch)' % (x.shape,\n                                                                      y.shape),\n                                    verbose=verbose, header=header,\n                                    names=('x', 'y'), precision=precision)\n                if not cond :\n                    raise AssertionError(msg)\n\n            if isnumber(x) and isnumber(y):\n                x_isnan, y_isnan = isnan(x), isnan(y)\n                x_isinf, y_isinf = isinf(x), isinf(y)\n\n                # Validate that the special values are in the same place\n                if any(x_isnan) or any(y_isnan):\n                    chk_same_position(x_isnan, y_isnan, hasval='nan')\n                if any(x_isinf) or any(y_isinf):\n                    # Check +inf and -inf separately, since they are different\n                    chk_same_position(x == +inf, y == +inf, hasval='+inf')\n                    chk_same_position(x == -inf, y == -inf, hasval='-inf')\n\n                # Combine all the special values\n                x_id, y_id = x_isnan, y_isnan\n                x_id |= x_isinf\n                y_id |= y_isinf\n\n                # Only do the comparison if actual values are left\n                if all(x_id):\n                    return\n\n                if any(x_id):\n                    val = comparison(x[~x_id], y[~y_id])\n                else:\n                    val = comparison(x, y)\n            else:\n                val = comparison(x, y)\n\n            if isinstance(val, bool):\n                cond = val\n                reduced = [0]\n            else:\n                reduced = val.ravel()\n                cond = reduced.all()\n                reduced = reduced.tolist()\n            if not cond:\n                match = 100-100.0*reduced.count(1)/len(reduced)\n                msg = build_err_msg([x, y],\n                                    err_msg\n                                    + '\\n(mismatch %s%%)' % (match,),\n                                    verbose=verbose, header=header,\n                                    names=('x', 'y'), precision=precision)\n                if not cond :\n>                   raise AssertionError(msg)\nE                   AssertionError: \nE                   Not equal to tolerance rtol=1e-07, atol=0\nE                   \nE                   (mismatch 100.0%)\nE                    x: array([ -1.802094e-17,   3.040115e-17,   0.000000e+00,  -8.740432e-18,\nE                           -1.020887e-17])\nE                    y: array([ -2.388054e-17,  -1.402421e-17,   0.000000e+00,  -1.402421e-17,\nE                           -2.388054e-17])\n\n```\n\nnumdifftools-0.9.12\nNumpy-1.9.2\npython-3.3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/11", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/11/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/11/events", "html_url": "https://github.com/pbrod/numdifftools/issues/11", "id": 105541197, "node_id": "MDU6SXNzdWUxMDU1NDExOTc=", "number": 11, "title": "BicomplexTester.test_arccos - test failure", "user": {"login": "jlec", "id": 79732, "node_id": "MDQ6VXNlcjc5NzMy", "avatar_url": "https://avatars0.githubusercontent.com/u/79732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlec", "html_url": "https://github.com/jlec", "followers_url": "https://api.github.com/users/jlec/followers", "following_url": "https://api.github.com/users/jlec/following{/other_user}", "gists_url": "https://api.github.com/users/jlec/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlec/subscriptions", "organizations_url": "https://api.github.com/users/jlec/orgs", "repos_url": "https://api.github.com/users/jlec/repos", "events_url": "https://api.github.com/users/jlec/events{/privacy}", "received_events_url": "https://api.github.com/users/jlec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-09T08:14:27Z", "updated_at": "2015-11-03T09:43:56Z", "closed_at": "2015-11-03T09:43:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nself = <numdifftools.tests.test_multicomplex.BicomplexTester testMethod=test_arccos>\n\n    def test_arccos(self):\n        z1 = bicomplex(np.linspace(-0.98, 0.98, 5), 0)\n        z2 = z1.arccos()\n        np.testing.assert_allclose(z2.real, np.arccos(z1.z1).real)\n>       np.testing.assert_allclose(z2.imag1, np.arccos(z1.z1).imag)\n\nnumdifftools/tests/test_multicomplex.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/usr/lib64/python3.3/site-packages/numpy/testing/utils.py:1297: in assert_allclose\n    verbose=verbose, header=header)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncomparison = <function assert_allclose.<locals>.compare at 0x2b29122b7200>, x = array([  1.80209436e-17,  -3.04011480e-17,  -0.00000000e+00,\n         8.74043172e-18,   1.02088676e-17]), y = array([ -2.38805371e-17,  -1.40242092e-17,  -0.00000000e+00,\n        -1.40242092e-17,  -2.38805371e-17]), err_msg = ''\nverbose = True, header = 'Not equal to tolerance rtol=1e-07, atol=0', precision = 6\n\n    def assert_array_compare(comparison, x, y, err_msg='', verbose=True,\n                             header='', precision=6):\n        from numpy.core import array, isnan, isinf, any, all, inf\n        x = array(x, copy=False, subok=True)\n        y = array(y, copy=False, subok=True)\n\n        def isnumber(x):\n            return x.dtype.char in '?bhilqpBHILQPefdgFDG'\n\n        def chk_same_position(x_id, y_id, hasval='nan'):\n            \"\"\"Handling nan/inf: check that x and y have the nan/inf at the same\n            locations.\"\"\"\n            try:\n                assert_array_equal(x_id, y_id)\n            except AssertionError:\n                msg = build_err_msg([x, y],\n                                    err_msg + '\\nx and y %s location mismatch:' \\\n                                    % (hasval), verbose=verbose, header=header,\n                                    names=('x', 'y'), precision=precision)\n                raise AssertionError(msg)\n\n        try:\n            cond = (x.shape==() or y.shape==()) or x.shape == y.shape\n            if not cond:\n                msg = build_err_msg([x, y],\n                                    err_msg\n                                    + '\\n(shapes %s, %s mismatch)' % (x.shape,\n                                                                      y.shape),\n                                    verbose=verbose, header=header,\n                                    names=('x', 'y'), precision=precision)\n                if not cond :\n                    raise AssertionError(msg)\n\n            if isnumber(x) and isnumber(y):\n                x_isnan, y_isnan = isnan(x), isnan(y)\n                x_isinf, y_isinf = isinf(x), isinf(y)\n\n                # Validate that the special values are in the same place\n                if any(x_isnan) or any(y_isnan):\n                    chk_same_position(x_isnan, y_isnan, hasval='nan')\n                if any(x_isinf) or any(y_isinf):\n                    # Check +inf and -inf separately, since they are different\n                    chk_same_position(x == +inf, y == +inf, hasval='+inf')\n                    chk_same_position(x == -inf, y == -inf, hasval='-inf')\n\n                # Combine all the special values\n                x_id, y_id = x_isnan, y_isnan\n                x_id |= x_isinf\n                y_id |= y_isinf\n\n                # Only do the comparison if actual values are left\n                if all(x_id):\n                    return\n\n                if any(x_id):\n                    val = comparison(x[~x_id], y[~y_id])\n                else:\n                    val = comparison(x, y)\n            else:\n                val = comparison(x, y)\n\n            if isinstance(val, bool):\n                cond = val\n                reduced = [0]\n            else:\n                reduced = val.ravel()\n                cond = reduced.all()\n                reduced = reduced.tolist()\n            if not cond:\n                match = 100-100.0*reduced.count(1)/len(reduced)\n                msg = build_err_msg([x, y],\n                                    err_msg\n                                    + '\\n(mismatch %s%%)' % (match,),\n                                    verbose=verbose, header=header,\n                                    names=('x', 'y'), precision=precision)\n                if not cond :\n>                   raise AssertionError(msg)\nE                   AssertionError: \nE                   Not equal to tolerance rtol=1e-07, atol=0\nE                   \nE                   (mismatch 100.0%)\nE                    x: array([  1.802094e-17,  -3.040115e-17,  -0.000000e+00,   8.740432e-18,\nE                            1.020887e-17])\nE                    y: array([ -2.388054e-17,  -1.402421e-17,  -0.000000e+00,  -1.402421e-17,\nE                           -2.388054e-17])\n\n/usr/lib64/python3.3/site-packages/numpy/testing/utils.py:665: AssertionError\n```\n\nNumdifftools-0.9.12\nNumpy-1.9.2\npython-3.3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/9", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/9/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/9/events", "html_url": "https://github.com/pbrod/numdifftools/issues/9", "id": 103342370, "node_id": "MDU6SXNzdWUxMDMzNDIzNzA=", "number": 9, "title": "Backward differentiation method fails with additional parameters", "user": {"login": "yusekiya", "id": 13986116, "node_id": "MDQ6VXNlcjEzOTg2MTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/13986116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yusekiya", "html_url": "https://github.com/yusekiya", "followers_url": "https://api.github.com/users/yusekiya/followers", "following_url": "https://api.github.com/users/yusekiya/following{/other_user}", "gists_url": "https://api.github.com/users/yusekiya/gists{/gist_id}", "starred_url": "https://api.github.com/users/yusekiya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yusekiya/subscriptions", "organizations_url": "https://api.github.com/users/yusekiya/orgs", "repos_url": "https://api.github.com/users/yusekiya/repos", "events_url": "https://api.github.com/users/yusekiya/events{/privacy}", "received_events_url": "https://api.github.com/users/yusekiya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-26T19:02:20Z", "updated_at": "2015-08-28T00:58:30Z", "closed_at": "2015-08-28T00:58:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "numdifftools.Derivative(method='backward') has a bug.\nThe following code\n\n``` python\nimport numdifftools as nd\ndef func(x, a):\n    return a * x * x\ndf = nd.Derivative(func, method='backward')\ndf(0.0, 1.0)\n```\n\noutputs an error:\n\n```\nTraceback (most recent call last):\n  File \"qr_22224RvW.py\", line 5, in <module>\n    df(0.0, 1.0)\n  File \"c:\\msys64\\home\\.anaconda\\Lib\\site-packages\\numdifftools\\core.py\", line 995, in __call__\n    results = self._derivative(xi, args, kwds)\n  File \"c:\\msys64\\home\\.anaconda\\Lib\\site-packages\\numdifftools\\core.py\", line 1190, in _derivative\n    results = [diff(f, fxi, xi, h, *args, **kwds) for h in steps]\n  File \"c:\\msys64\\home\\.anaconda\\Lib\\site-packages\\numdifftools\\core.py\", line 1190, in <listcomp>\n    results = [diff(f, fxi, xi, h, *args, **kwds) for h in steps]\n  File \"c:\\msys64\\home\\.anaconda\\Lib\\site-packages\\numdifftools\\core.py\", line 1213, in _backward\n    return (f_x0i - fun(x0i - h))\nTypeError: func() missing 1 required positional argument: 'a'\n```\n\nIt seems that the arguments *args and **kwds are missing at the return of _backward in the Derivative class.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/8", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/8/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/8/events", "html_url": "https://github.com/pbrod/numdifftools/issues/8", "id": 102648736, "node_id": "MDU6SXNzdWUxMDI2NDg3MzY=", "number": 8, "title": "Add suggested reference for numdifftools?", "user": {"login": "kyleniemeyer", "id": 190432, "node_id": "MDQ6VXNlcjE5MDQzMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/190432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleniemeyer", "html_url": "https://github.com/kyleniemeyer", "followers_url": "https://api.github.com/users/kyleniemeyer/followers", "following_url": "https://api.github.com/users/kyleniemeyer/following{/other_user}", "gists_url": "https://api.github.com/users/kyleniemeyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleniemeyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleniemeyer/subscriptions", "organizations_url": "https://api.github.com/users/kyleniemeyer/orgs", "repos_url": "https://api.github.com/users/kyleniemeyer/repos", "events_url": "https://api.github.com/users/kyleniemeyer/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleniemeyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-23T19:17:35Z", "updated_at": "2015-08-28T19:12:18Z", "closed_at": "2015-08-28T19:12:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Do you have a suggested way to cite numdifftools in a research article? My current approach would be to  include a link to the GitHub repo, something like\n\n```\n@misc{Brodtkorb:2015,\n    Author = {Per A Brodtkorb},\n    Title = {numdifftools 0.9.2},\n    Howpublished = {\\url{https://github.com/pbrod/numdifftools}},\n    Month = aug,\n    Year = {2015}}\n```\n\nbut if there is a \"better\"/official reference, I'd prefer to use that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/6", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/6/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/6/events", "html_url": "https://github.com/pbrod/numdifftools/issues/6", "id": 82496830, "node_id": "MDU6SXNzdWU4MjQ5NjgzMA==", "number": 6, "title": "Hessian fails with strange error when function returns inf", "user": {"login": "pkienzle", "id": 473456, "node_id": "MDQ6VXNlcjQ3MzQ1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/473456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkienzle", "html_url": "https://github.com/pkienzle", "followers_url": "https://api.github.com/users/pkienzle/followers", "following_url": "https://api.github.com/users/pkienzle/following{/other_user}", "gists_url": "https://api.github.com/users/pkienzle/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkienzle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkienzle/subscriptions", "organizations_url": "https://api.github.com/users/pkienzle/orgs", "repos_url": "https://api.github.com/users/pkienzle/repos", "events_url": "https://api.github.com/users/pkienzle/events{/privacy}", "received_events_url": "https://api.github.com/users/pkienzle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-29T16:35:33Z", "updated_at": "2015-08-20T01:03:23Z", "closed_at": "2015-08-20T01:03:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example:\n\nimport numdifftools as nd\nimport numpy as np\ndef finf(x): return np.inf\nnd.Hessian(finf)([0.1])\n\nnumdifftools/core.pyc in _romb_extrap(self, der_init, h1)\n-->             errest = np.ones(der_init.shape) \\* hout\nValueError: operands could not be broadcast together with shapes (24,) (0,) \n\nSince all values are infinite, the _remove_non_finite leaves hout empty, hence the error.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/5", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/5/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/5/events", "html_url": "https://github.com/pbrod/numdifftools/issues/5", "id": 63969262, "node_id": "MDU6SXNzdWU2Mzk2OTI2Mg==", "number": 5, "title": "run_benchmarks doesn't work on Python 3", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-24T11:05:39Z", "updated_at": "2015-08-28T01:00:30Z", "closed_at": "2015-08-28T01:00:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I wanted to execute the `run_benchmarks.py` for numdifftools.\n\nThere's this error on Python 3:\n\n```\nIn [2]: import numdifftools.run_benchmark\nN= 4\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-2-8fd62210f116> in <module>()\n----> 1 import numdifftools.run_benchmark\n\n/Users/deil/code/numdifftools/numdifftools/run_benchmark.py in <module>()\n     49     ref_g = None\n     50     f = BenchmarkFunction(N)\n---> 51     for i, (key, Gradient) in enumerate(gradient_funs.iteritems()):\n     52         t = time.time()\n     53         gradient_f = Gradient(f)\n\nAttributeError: 'OrderedDict' object has no attribute 'iteritems'\n```\n\nI'm not sure how I'm supposed to execute them ... usually examples and benchmarks are in a separate folder that is not installed with the Python package into site-packages.\n\nWouldn't that be better here, too, for the \"main()\" part that actually executes the code and produces a plot? The benchmark code and class could still be in the package.\n\ncc @maniteja\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/4", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/4/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/4/events", "html_url": "https://github.com/pbrod/numdifftools/issues/4", "id": 63968317, "node_id": "MDU6SXNzdWU2Mzk2ODMxNw==", "number": 4, "title": "Put docs on readthedocs?", "user": {"login": "cdeil", "id": 852409, "node_id": "MDQ6VXNlcjg1MjQwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/852409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdeil", "html_url": "https://github.com/cdeil", "followers_url": "https://api.github.com/users/cdeil/followers", "following_url": "https://api.github.com/users/cdeil/following{/other_user}", "gists_url": "https://api.github.com/users/cdeil/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdeil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdeil/subscriptions", "organizations_url": "https://api.github.com/users/cdeil/orgs", "repos_url": "https://api.github.com/users/cdeil/repos", "events_url": "https://api.github.com/users/cdeil/events{/privacy}", "received_events_url": "https://api.github.com/users/cdeil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-24T11:00:08Z", "updated_at": "2015-10-30T22:35:30Z", "closed_at": "2015-10-30T22:35:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As a follow-up to #2 I'd like to suggest to put the numdifftools on https://readthedocs.org/ .\nThis would be very useful to have for users and the scipy.diff discussions.\n\n@pbrod - It's very easy to set up and usually work directly. If you your into any issues (assuming you want this for numdifftools), let me know and I'll try to help, I've done this for a few Python packages and know where to look e.g. in the Sphinx build log if there's some error.\n\ncc @maniteja\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pbrod/numdifftools/issues/1", "repository_url": "https://api.github.com/repos/pbrod/numdifftools", "labels_url": "https://api.github.com/repos/pbrod/numdifftools/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/pbrod/numdifftools/issues/1/comments", "events_url": "https://api.github.com/repos/pbrod/numdifftools/issues/1/events", "html_url": "https://github.com/pbrod/numdifftools/issues/1", "id": 55008605, "node_id": "MDU6SXNzdWU1NTAwODYwNQ==", "number": 1, "title": "Jacobian method does not produce expected results", "user": {"login": "khrapovs", "id": 3774663, "node_id": "MDQ6VXNlcjM3NzQ2NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3774663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khrapovs", "html_url": "https://github.com/khrapovs", "followers_url": "https://api.github.com/users/khrapovs/followers", "following_url": "https://api.github.com/users/khrapovs/following{/other_user}", "gists_url": "https://api.github.com/users/khrapovs/gists{/gist_id}", "starred_url": "https://api.github.com/users/khrapovs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khrapovs/subscriptions", "organizations_url": "https://api.github.com/users/khrapovs/orgs", "repos_url": "https://api.github.com/users/khrapovs/repos", "events_url": "https://api.github.com/users/khrapovs/events{/privacy}", "received_events_url": "https://api.github.com/users/khrapovs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-21T11:46:55Z", "updated_at": "2015-01-21T13:10:13Z", "closed_at": "2015-01-21T13:10:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\ng = lambda c: c[0]\nf = lambda c: np.array([c[0], 0])\n\nnd.Gradient(g)([1, 1])\n```\n\n> array([ 1.,  0.])\n\n```\nnd.Jacobian(f)([1, 1])[0]\n```\n\n> array([ 0.,  0.])\n\nIt looks like Jacobian is inconsistent with Gardient. What did I miss?\n", "performed_via_github_app": null, "score": 1.0}]}