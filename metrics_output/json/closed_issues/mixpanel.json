{"total_count": 28, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/79", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/79/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/79/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/79", "id": 557861420, "node_id": "MDU6SXNzdWU1NTc4NjE0MjA=", "number": 79, "title": "SSL: CERTIFICATE_VERIFY_FAILED", "user": {"login": "DataGreed", "id": 2033163, "node_id": "MDQ6VXNlcjIwMzMxNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2033163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DataGreed", "html_url": "https://github.com/DataGreed", "followers_url": "https://api.github.com/users/DataGreed/followers", "following_url": "https://api.github.com/users/DataGreed/following{/other_user}", "gists_url": "https://api.github.com/users/DataGreed/gists{/gist_id}", "starred_url": "https://api.github.com/users/DataGreed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DataGreed/subscriptions", "organizations_url": "https://api.github.com/users/DataGreed/orgs", "repos_url": "https://api.github.com/users/DataGreed/repos", "events_url": "https://api.github.com/users/DataGreed/events{/privacy}", "received_events_url": "https://api.github.com/users/DataGreed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-31T01:42:38Z", "updated_at": "2020-02-04T18:38:06Z", "closed_at": "2020-02-04T18:38:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since yesterday I've started receiving this error whenever I try to initialize mixpanel on my local machine.\r\n\r\nThis never happened the day before.\r\n\r\nThe full exception text:\r\n```\r\n<urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1056)>\r\n\r\nFile \".env/lib/python3.7/site-packages/mixpanel/__init__.py\" in track\r\n  95.         self._consumer.send('events', json_dumps(event, cls=self._serializer))\r\n\r\nFile \".env/lib/python3.7/site-packages/mixpanel/__init__.py\" in send\r\n  488.             self._write_request(self._endpoints[endpoint], json_message, api_key)\r\n\r\nFile \".env/lib/python3.7/site-packages/mixpanel/__init__.py\" in _write_request\r\n  511.             six.raise_from(MixpanelException(e), e)\r\n\r\nFile \"<string>\" in raise_from\r\n  3. # Permission is hereby granted, free of charge, to any person obtaining a copy\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/78", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/78/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/78/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/78", "id": 544321675, "node_id": "MDU6SXNzdWU1NDQzMjE2NzU=", "number": 78, "title": "trying to fire an event in mixpanel but getting below error", "user": {"login": "mhassaanmughal", "id": 27001061, "node_id": "MDQ6VXNlcjI3MDAxMDYx", "avatar_url": "https://avatars3.githubusercontent.com/u/27001061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhassaanmughal", "html_url": "https://github.com/mhassaanmughal", "followers_url": "https://api.github.com/users/mhassaanmughal/followers", "following_url": "https://api.github.com/users/mhassaanmughal/following{/other_user}", "gists_url": "https://api.github.com/users/mhassaanmughal/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhassaanmughal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhassaanmughal/subscriptions", "organizations_url": "https://api.github.com/users/mhassaanmughal/orgs", "repos_url": "https://api.github.com/users/mhassaanmughal/repos", "events_url": "https://api.github.com/users/mhassaanmughal/events{/privacy}", "received_events_url": "https://api.github.com/users/mhassaanmughal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-01T07:18:57Z", "updated_at": "2020-01-10T19:41:06Z", "closed_at": "2020-01-10T19:41:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"mixpanelEvent.py\", line 194, in <module>\r\n    mp.track(123, 'ABC')\r\n  File \"/usr/local/lib/python2.7/dist-packages/mixpanel/__init__.py\", line 95, in track\r\n    self._consumer.send('events', json_dumps(event, cls=self._serializer))\r\n  File \"/usr/local/lib/python2.7/dist-packages/mixpanel/__init__.py\", line 488, in send\r\n    self._write_request(self._endpoints[endpoint], json_message, api_key)\r\n  File \"/usr/local/lib/python2.7/dist-packages/mixpanel/__init__.py\", line 511, in _write_request\r\n    six.raise_from(MixpanelException(e), e)\r\n  File \"/usr/local/lib/python2.7/dist-packages/six.py\", line 740, in raise_from\r\n    raise value\r\nmixpanel.MixpanelException: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:590)>\r\n\r\n\r\nusing python 2.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/75", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/75/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/75/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/75", "id": 477273822, "node_id": "MDU6SXNzdWU0NzcyNzM4MjI=", "number": 75, "title": "Document Proxy method for frontend events", "user": {"login": "dawsbot", "id": 3408480, "node_id": "MDQ6VXNlcjM0MDg0ODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3408480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dawsbot", "html_url": "https://github.com/dawsbot", "followers_url": "https://api.github.com/users/dawsbot/followers", "following_url": "https://api.github.com/users/dawsbot/following{/other_user}", "gists_url": "https://api.github.com/users/dawsbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/dawsbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dawsbot/subscriptions", "organizations_url": "https://api.github.com/users/dawsbot/orgs", "repos_url": "https://api.github.com/users/dawsbot/repos", "events_url": "https://api.github.com/users/dawsbot/events{/privacy}", "received_events_url": "https://api.github.com/users/dawsbot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-06T09:35:10Z", "updated_at": "2019-08-22T16:00:46Z", "closed_at": "2019-08-22T16:00:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "An official document from Mixpanel Support recommends a backend proxy to avoid ad-blockers. This involves setting the `api_host` when initializing the frontend JS library. But I cannot seem to find anywhere that says how the backend should be configured to proxy.\r\n\r\nHere is the help article, method number four here is what I'm speaking about: https://help.mixpanel.com/hc/en-us/articles/115004499463-Ad-Blockers-Affect-Mixpanel\r\n\r\nOur backend is a flask-python application, and we already have a BE integration of Mixpanel for server-side events.\r\n\r\n<br />\r\n\r\n## Self-Research\r\n\r\n* It looks like the backend needs to handle `/track/`, `/decide/`, and `/engage/` (https://github.com/mixpanel/mixpanel-js/blob/8b2e1f7b/src/mixpanel-core.js#L87-L110)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/73", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/73/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/73/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/73", "id": 459982495, "node_id": "MDU6SXNzdWU0NTk5ODI0OTU=", "number": 73, "title": "Documentation error (+tmp fix in my local)", "user": {"login": "Emixam23", "id": 6987848, "node_id": "MDQ6VXNlcjY5ODc4NDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/6987848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Emixam23", "html_url": "https://github.com/Emixam23", "followers_url": "https://api.github.com/users/Emixam23/followers", "following_url": "https://api.github.com/users/Emixam23/following{/other_user}", "gists_url": "https://api.github.com/users/Emixam23/gists{/gist_id}", "starred_url": "https://api.github.com/users/Emixam23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Emixam23/subscriptions", "organizations_url": "https://api.github.com/users/Emixam23/orgs", "repos_url": "https://api.github.com/users/Emixam23/repos", "events_url": "https://api.github.com/users/Emixam23/events{/privacy}", "received_events_url": "https://api.github.com/users/Emixam23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-24T16:21:10Z", "updated_at": "2019-09-18T16:40:55Z", "closed_at": "2019-09-18T16:40:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI think I found an error in your doc: https://developer.mixpanel.com/docs/python#section-scaling-your-server-side-tracking\r\n\r\nIf you're taking a look at \r\n\r\n```\r\nclass LoggingConsumer(object):\r\n    def __init__(self):\r\n        self.mp_log = open(\"MIXPANEL_LOG.txt\", \"w+\")\r\n\r\n    def send(self, endpoint, json_message):\r\n        self.mp_log.write(\"{0}::{1}\\n\".format(endpoint, message))\r\n\r\n# Whenever you track with logging_mp, your messages will\r\n# be written to MIXPANEL_LOG.txt rather than being sent\r\n# to the Mixpanel servers\r\nlogging_mp = Mixpanel(YOUR_TOKEN, LoggingConsumer())\r\n```\r\n\r\nThe `send()` function here takes 3 parameters. However, if you implement the code below:\r\n\r\n```\r\n\r\n# ...\r\n\r\nmp = mixpanel.Mixpanel(YOUR_TOKEN, EnqueueingConsumer())\r\n\r\n# Track just like you would in any other situation\r\n# Example: mp.track(user_id, 'Sent Message')\r\n\r\n# this will fail on import_data()\r\nmp.track(str(user_id), event_name, {'time': date.strftime(\"%Y-%m-%dT%H:%M:%S\")})\r\nmp.import_data(_API_KEY, str(user_id), event_name, int(second_date.timestamp()))\r\n\r\n# ...\r\n```\r\n\r\n> Traceback (most recent call last):\r\n  ...\r\n  File \"/Users/XXXXXXX/.local/share/virtualenvs/XXXXXXX/lib/python3.7/site-packages/mixpanel/__init__.py\", line 96, in track\r\n    self._consumer.send('events', dump)\r\nTypeError: send() missing 1 required positional argument: 'api_key'\r\n\r\nBy looking deeper in your library, that's where the problem is coming from (as far as I think)\r\n\r\n```\r\nclass Mixpanel(object):\r\n    \"\"\"Instances of Mixpanel are used for all events and profile updates.\r\n\r\n    :param str token: your project's Mixpanel token\r\n    :param consumer: can be used to alter the behavior of tracking (default\r\n        :class:`~.Consumer`)\r\n    :param json.JSONEncoder serializer: a JSONEncoder subclass used to handle\r\n        JSON serialization (default :class:`~.DatetimeSerializer`)\r\n\r\n    See `Built-in consumers`_ for details about the consumer interface.\r\n\r\n    .. versionadded:: 4.2.0\r\n        The *serializer* parameter.\r\n    \"\"\"\r\n\r\n    def __init__(self, token, consumer=None, serializer=DatetimeSerializer):\r\n        self._token = token\r\n        self._consumer = consumer or Consumer()\r\n        self._serializer = serializer\r\n\r\n    def _now(self):\r\n        return time.time()\r\n\r\n    def track(self, distinct_id, event_name, properties=None, meta=None):\r\n        \"\"\"Record an event.\r\n\r\n        :param str distinct_id: identifies the user triggering the event\r\n        :param str event_name: a name describing the event\r\n        :param dict properties: additional data to record; keys should be\r\n            strings, and values should be strings, numbers, or booleans\r\n        :param dict meta: overrides Mixpanel special properties\r\n\r\n        ``properties`` should describe the circumstances of the event, or\r\n        aspects of the source or user associated with it. ``meta`` is used\r\n        (rarely) to override special values sent in the event object.\r\n        \"\"\"\r\n        all_properties = {\r\n            'token': self._token,\r\n            'distinct_id': distinct_id,\r\n            'time': int(self._now()),\r\n            'mp_lib': 'python',\r\n            '$lib_version': __version__,\r\n        }\r\n        if properties:\r\n            all_properties.update(properties)\r\n        event = {\r\n            'event': event_name,\r\n            'properties': all_properties,\r\n        }\r\n        if meta:\r\n            event.update(meta)\r\n        dump = json_dumps(event, cls=self._serializer)\r\n        self._consumer.send('events', dump)\r\n\r\n    def import_data(self, api_key, distinct_id, event_name, timestamp,\r\n                    properties=None, meta=None):\r\n        \"\"\"Record an event that occured more than 5 days in the past.\r\n\r\n        :param str api_key: your Mixpanel project's API key\r\n        :param str distinct_id: identifies the user triggering the event\r\n        :param str event_name: a name describing the event\r\n        :param int timestamp: UTC seconds since epoch\r\n        :param dict properties: additional data to record; keys should be\r\n            strings, and values should be strings, numbers, or booleans\r\n        :param dict meta: overrides Mixpanel special properties\r\n\r\n        To avoid accidentally recording invalid events, the Mixpanel API's\r\n        ``track`` endpoint disallows events that occurred too long ago. This\r\n        method can be used to import such events. See our online documentation\r\n        for `more details\r\n        <https://mixpanel.com/docs/api-documentation/importing-events-older-than-31-days>`__.\r\n        \"\"\"\r\n        all_properties = {\r\n            'token': self._token,\r\n            'distinct_id': distinct_id,\r\n            'time': int(timestamp),\r\n            'mp_lib': 'python',\r\n            '$lib_version': __version__,\r\n        }\r\n        if properties:\r\n            all_properties.update(properties)\r\n        event = {\r\n            'event': event_name,\r\n            'properties': all_properties,\r\n        }\r\n        if meta:\r\n            event.update(meta)\r\n        self._consumer.send('imports', json_dumps(event, cls=self._serializer), api_key)\r\n```\r\n\r\nAs you can notice, unlike `def track(self, distinct_id, event_name, properties=None, meta=None):`, the function `def import_data(self, api_key, distinct_id, event_name, timestamp, properties=None, meta=None):` calls **self._consumer.send(...)** with one more parameter, raising the following exception:\r\n\r\n`self._consumer.send('events', dump)`\r\n`self._consumer.send('imports', json_dumps(event, cls=self._serializer), api_key)`\r\n\r\n> REMIND :\r\n> Traceback (most recent call last):\r\n  ...\r\n  File \"/Users/XXXXXXX/.local/share/virtualenvs/XXXXXXX/lib/python3.7/site-packages/mixpanel/__init__.py\", line 96, in track\r\n    self._consumer.send('events', dump)\r\nTypeError: send() missing 1 required positional argument: 'api_key'\r\n\r\nIn order to fix it, I did the following:\r\n\r\n```\r\nclass LoggingConsumer(object):\r\n    def __init__(self):\r\n        self.mp_log = open(\"MIXPANEL_LOG.txt\", \"w+\")\r\n\r\n    def send(self, endpoint, json_message, FIX_FOR_MIXPANEL_API_KEY_PARAMETER=None):\r\n        self.mp_log.write(\"{0}::{1}\\n\".format(endpoint, message))\r\n```\r\n\r\n-----\r\n\r\nI am not at all a Python developer so if it's really an issue on your end and not mine, I won't propose any PR since I don't feel my level in Python good enough for such coding :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/71", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/71/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/71/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/71", "id": 423969620, "node_id": "MDU6SXNzdWU0MjM5Njk2MjA=", "number": 71, "title": "Add support for remove operation", "user": {"login": "smcoll", "id": 321438, "node_id": "MDQ6VXNlcjMyMTQzOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/321438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smcoll", "html_url": "https://github.com/smcoll", "followers_url": "https://api.github.com/users/smcoll/followers", "following_url": "https://api.github.com/users/smcoll/following{/other_user}", "gists_url": "https://api.github.com/users/smcoll/gists{/gist_id}", "starred_url": "https://api.github.com/users/smcoll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smcoll/subscriptions", "organizations_url": "https://api.github.com/users/smcoll/orgs", "repos_url": "https://api.github.com/users/smcoll/repos", "events_url": "https://api.github.com/users/smcoll/events{/privacy}", "received_events_url": "https://api.github.com/users/smcoll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-21T22:28:59Z", "updated_at": "2019-05-31T21:22:21Z", "closed_at": "2019-05-31T21:22:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is currently no support for the `$remove` operation in the client, so there isn't a way to remove a list item value for a property name.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/70", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/70/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/70/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/70", "id": 360797298, "node_id": "MDU6SXNzdWUzNjA3OTcyOTg=", "number": 70, "title": "MixpanelException: <urlopen error EOF occurred in violation of protocol (_ssl.c:661)>", "user": {"login": "mohamedrez", "id": 1301162, "node_id": "MDQ6VXNlcjEzMDExNjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1301162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohamedrez", "html_url": "https://github.com/mohamedrez", "followers_url": "https://api.github.com/users/mohamedrez/followers", "following_url": "https://api.github.com/users/mohamedrez/following{/other_user}", "gists_url": "https://api.github.com/users/mohamedrez/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohamedrez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohamedrez/subscriptions", "organizations_url": "https://api.github.com/users/mohamedrez/orgs", "repos_url": "https://api.github.com/users/mohamedrez/repos", "events_url": "https://api.github.com/users/mohamedrez/events{/privacy}", "received_events_url": "https://api.github.com/users/mohamedrez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-17T09:59:54Z", "updated_at": "2018-09-18T15:17:30Z", "closed_at": "2018-09-17T20:12:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using mixpanel with mixpanel_async I keep getting this error on the logs\r\n\r\n```\r\nMixpanelException: <urlopen error EOF occurred in violation of protocol (_ssl.c:661)>\r\n\r\n        at raise_from (/usr/local/lib/python2.7/site-packages/six.py:737)\r\n        at _flush_endpoint (/usr/local/lib/python2.7/site-packages/mixpanel/__init__.py:466)\r\n        at _sync_flush (/usr/local/lib/python2.7/site-packages/mixpanel_async/async_buffered_consumer.py:256)\r\n        at run (/usr/local/lib/python2.7/site-packages/mixpanel_async/async_buffered_consumer.py:37)\r\n        at __bootstrap_inner (/usr/local/lib/python2.7/threading.py:801)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/68", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/68/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/68/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/68", "id": 301524174, "node_id": "MDU6SXNzdWUzMDE1MjQxNzQ=", "number": 68, "title": "Support for querying", "user": {"login": "gregorypease280", "id": 7565621, "node_id": "MDQ6VXNlcjc1NjU2MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7565621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregorypease280", "html_url": "https://github.com/gregorypease280", "followers_url": "https://api.github.com/users/gregorypease280/followers", "following_url": "https://api.github.com/users/gregorypease280/following{/other_user}", "gists_url": "https://api.github.com/users/gregorypease280/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregorypease280/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregorypease280/subscriptions", "organizations_url": "https://api.github.com/users/gregorypease280/orgs", "repos_url": "https://api.github.com/users/gregorypease280/repos", "events_url": "https://api.github.com/users/gregorypease280/events{/privacy}", "received_events_url": "https://api.github.com/users/gregorypease280/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-01T19:11:24Z", "updated_at": "2018-11-13T19:14:36Z", "closed_at": "2018-11-13T19:14:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be awesome if this library supported a way to grab some basic data from mixpanel (User profiles etc...), is this library still being developed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/66", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/66/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/66/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/66", "id": 203985310, "node_id": "MDU6SXNzdWUyMDM5ODUzMTA=", "number": 66, "title": "Not able to track old events by using mixpanel.import_data", "user": {"login": "codetarsier", "id": 487403, "node_id": "MDQ6VXNlcjQ4NzQwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codetarsier", "html_url": "https://github.com/codetarsier", "followers_url": "https://api.github.com/users/codetarsier/followers", "following_url": "https://api.github.com/users/codetarsier/following{/other_user}", "gists_url": "https://api.github.com/users/codetarsier/gists{/gist_id}", "starred_url": "https://api.github.com/users/codetarsier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codetarsier/subscriptions", "organizations_url": "https://api.github.com/users/codetarsier/orgs", "repos_url": "https://api.github.com/users/codetarsier/repos", "events_url": "https://api.github.com/users/codetarsier/events{/privacy}", "received_events_url": "https://api.github.com/users/codetarsier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-30T11:28:48Z", "updated_at": "2017-01-30T15:00:30Z", "closed_at": "2017-01-30T14:50:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI'm not able to track the old events( > 5 days) by using **mixpanel.import_data**.\r\n`mixpanel.import_data(TEST2_MIXPANEL_TOKEN, actor_object_id, action_verb, action_time, properties=action_dict_data)`\r\n`mixpanel.people_set(actor_object_id, {'$first_name': actor_first_name})`\r\n\r\nIt creates people in \"explore\" section without any action-events. It doesn't throw any exception.\r\n\r\nWhen I use **mixpanel.track** and log events from past 5days then everything works fine.\r\n`mixpanel.track(actor_object_id, action_verb, action_data)`\r\n`mixpanel.people_set(actor_object_id, {'$first_name': actor_first_name})`\r\n\r\npython : v3.5.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/65", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/65/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/65/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/65", "id": 199480940, "node_id": "MDU6SXNzdWUxOTk0ODA5NDA=", "number": 65, "title": "JS MixPanel lib variables", "user": {"login": "paulocheque", "id": 94350, "node_id": "MDQ6VXNlcjk0MzUw", "avatar_url": "https://avatars1.githubusercontent.com/u/94350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulocheque", "html_url": "https://github.com/paulocheque", "followers_url": "https://api.github.com/users/paulocheque/followers", "following_url": "https://api.github.com/users/paulocheque/following{/other_user}", "gists_url": "https://api.github.com/users/paulocheque/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulocheque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulocheque/subscriptions", "organizations_url": "https://api.github.com/users/paulocheque/orgs", "repos_url": "https://api.github.com/users/paulocheque/repos", "events_url": "https://api.github.com/users/paulocheque/events{/privacy}", "received_events_url": "https://api.github.com/users/paulocheque/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-09T05:41:25Z", "updated_at": "2017-01-11T19:43:22Z", "closed_at": "2017-01-11T19:43:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I am integrating MixPanel server side, but I would like to include the internal variables of the JS MixPanel library version, like the browser information, network etc.\r\n\r\nIs there any MixPanel example that can guide us on this?\r\n\r\nI was wondering if I can use the JS lib to collect the browser information (https://github.com/mixpanel/mixpanel-js/blob/master/src/utils.js) or if it is better to collect this data directly on the server.\r\n\r\n![screen shot 2017-01-09 at 2 56 43 am](https://cloud.githubusercontent.com/assets/94350/21757519/50a1d9d6-d617-11e6-94cd-f5b0f2959e55.png)\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/63", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/63/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/63/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/63", "id": 162315350, "node_id": "MDU6SXNzdWUxNjIzMTUzNTA=", "number": 63, "title": "flush function for Buffered Consumer not working", "user": {"login": "eilonle", "id": 20044277, "node_id": "MDQ6VXNlcjIwMDQ0Mjc3", "avatar_url": "https://avatars0.githubusercontent.com/u/20044277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eilonle", "html_url": "https://github.com/eilonle", "followers_url": "https://api.github.com/users/eilonle/followers", "following_url": "https://api.github.com/users/eilonle/following{/other_user}", "gists_url": "https://api.github.com/users/eilonle/gists{/gist_id}", "starred_url": "https://api.github.com/users/eilonle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eilonle/subscriptions", "organizations_url": "https://api.github.com/users/eilonle/orgs", "repos_url": "https://api.github.com/users/eilonle/repos", "events_url": "https://api.github.com/users/eilonle/events{/privacy}", "received_events_url": "https://api.github.com/users/eilonle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "zakj", "id": 24062, "node_id": "MDQ6VXNlcjI0MDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/24062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zakj", "html_url": "https://github.com/zakj", "followers_url": "https://api.github.com/users/zakj/followers", "following_url": "https://api.github.com/users/zakj/following{/other_user}", "gists_url": "https://api.github.com/users/zakj/gists{/gist_id}", "starred_url": "https://api.github.com/users/zakj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zakj/subscriptions", "organizations_url": "https://api.github.com/users/zakj/orgs", "repos_url": "https://api.github.com/users/zakj/repos", "events_url": "https://api.github.com/users/zakj/events{/privacy}", "received_events_url": "https://api.github.com/users/zakj/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zakj", "id": 24062, "node_id": "MDQ6VXNlcjI0MDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/24062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zakj", "html_url": "https://github.com/zakj", "followers_url": "https://api.github.com/users/zakj/followers", "following_url": "https://api.github.com/users/zakj/following{/other_user}", "gists_url": "https://api.github.com/users/zakj/gists{/gist_id}", "starred_url": "https://api.github.com/users/zakj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zakj/subscriptions", "organizations_url": "https://api.github.com/users/zakj/orgs", "repos_url": "https://api.github.com/users/zakj/repos", "events_url": "https://api.github.com/users/zakj/events{/privacy}", "received_events_url": "https://api.github.com/users/zakj/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-06-26T06:47:31Z", "updated_at": "2016-12-22T00:17:49Z", "closed_at": "2016-12-22T00:12:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nin class BufferedConsumer the flush function in line 338 should change to \ndef flush (self,api_key=None) \n\nand then in line 444-445 should change to:\n        for endpoint in self._buffers.keys():\n            self._flush_endpoint(endpoint,api_key=api_key)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/62", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/62/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/62/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/62", "id": 161186132, "node_id": "MDU6SXNzdWUxNjExODYxMzI=", "number": 62, "title": "using import_data with Buffered consumer is not working", "user": {"login": "eilonle", "id": 20044277, "node_id": "MDQ6VXNlcjIwMDQ0Mjc3", "avatar_url": "https://avatars0.githubusercontent.com/u/20044277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eilonle", "html_url": "https://github.com/eilonle", "followers_url": "https://api.github.com/users/eilonle/followers", "following_url": "https://api.github.com/users/eilonle/following{/other_user}", "gists_url": "https://api.github.com/users/eilonle/gists{/gist_id}", "starred_url": "https://api.github.com/users/eilonle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eilonle/subscriptions", "organizations_url": "https://api.github.com/users/eilonle/orgs", "repos_url": "https://api.github.com/users/eilonle/repos", "events_url": "https://api.github.com/users/eilonle/events{/privacy}", "received_events_url": "https://api.github.com/users/eilonle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "zakj", "id": 24062, "node_id": "MDQ6VXNlcjI0MDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/24062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zakj", "html_url": "https://github.com/zakj", "followers_url": "https://api.github.com/users/zakj/followers", "following_url": "https://api.github.com/users/zakj/following{/other_user}", "gists_url": "https://api.github.com/users/zakj/gists{/gist_id}", "starred_url": "https://api.github.com/users/zakj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zakj/subscriptions", "organizations_url": "https://api.github.com/users/zakj/orgs", "repos_url": "https://api.github.com/users/zakj/repos", "events_url": "https://api.github.com/users/zakj/events{/privacy}", "received_events_url": "https://api.github.com/users/zakj/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zakj", "id": 24062, "node_id": "MDQ6VXNlcjI0MDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/24062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zakj", "html_url": "https://github.com/zakj", "followers_url": "https://api.github.com/users/zakj/followers", "following_url": "https://api.github.com/users/zakj/following{/other_user}", "gists_url": "https://api.github.com/users/zakj/gists{/gist_id}", "starred_url": "https://api.github.com/users/zakj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zakj/subscriptions", "organizations_url": "https://api.github.com/users/zakj/orgs", "repos_url": "https://api.github.com/users/zakj/repos", "events_url": "https://api.github.com/users/zakj/events{/privacy}", "received_events_url": "https://api.github.com/users/zakj/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-06-20T12:42:15Z", "updated_at": "2016-06-22T08:33:16Z", "closed_at": "2016-06-21T20:56:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "the send function used by the default consumer got the api_key as a parameter , the send function used by the Buffered consumer does not . So if you will try to run the import data with the Buffered Consumer it will result in an error.  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/61", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/61/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/61/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/61", "id": 135465881, "node_id": "MDU6SXNzdWUxMzU0NjU4ODE=", "number": 61, "title": "__init__() takes exactly 3 arguments (2 given)", "user": {"login": "powerfool", "id": 1142077, "node_id": "MDQ6VXNlcjExNDIwNzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1142077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/powerfool", "html_url": "https://github.com/powerfool", "followers_url": "https://api.github.com/users/powerfool/followers", "following_url": "https://api.github.com/users/powerfool/following{/other_user}", "gists_url": "https://api.github.com/users/powerfool/gists{/gist_id}", "starred_url": "https://api.github.com/users/powerfool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/powerfool/subscriptions", "organizations_url": "https://api.github.com/users/powerfool/orgs", "repos_url": "https://api.github.com/users/powerfool/repos", "events_url": "https://api.github.com/users/powerfool/events{/privacy}", "received_events_url": "https://api.github.com/users/powerfool/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-22T16:21:36Z", "updated_at": "2016-02-25T00:40:43Z", "closed_at": "2016-02-24T12:54:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting this error trying to initialize Mixpanel.\nAny idea what might be wrong?\n\n![screenshot 2016-02-22 18 19 25](https://cloud.githubusercontent.com/assets/1142077/13224381/f55d3c92-d990-11e5-8afd-734f369eb3d1.png)\n\nI installed using pip and then did:\n\n```\nfrom mixpanel import Mixpanel\nmp = Mixpanel('1234567890')\n```\n\nThanks for any tips!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/60", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/60/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/60/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/60", "id": 120248695, "node_id": "MDU6SXNzdWUxMjAyNDg2OTU=", "number": 60, "title": "Py3k support?", "user": {"login": "tiggreen", "id": 3679842, "node_id": "MDQ6VXNlcjM2Nzk4NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3679842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiggreen", "html_url": "https://github.com/tiggreen", "followers_url": "https://api.github.com/users/tiggreen/followers", "following_url": "https://api.github.com/users/tiggreen/following{/other_user}", "gists_url": "https://api.github.com/users/tiggreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiggreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiggreen/subscriptions", "organizations_url": "https://api.github.com/users/tiggreen/orgs", "repos_url": "https://api.github.com/users/tiggreen/repos", "events_url": "https://api.github.com/users/tiggreen/events{/privacy}", "received_events_url": "https://api.github.com/users/tiggreen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-03T19:23:48Z", "updated_at": "2015-12-03T19:59:20Z", "closed_at": "2015-12-03T19:42:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Guys,\n\nis there any chance you will support python 3.4+ in a near future? I'm aware that there is a separate not official fork for it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/57", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/57/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/57/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/57", "id": 104804392, "node_id": "MDU6SXNzdWUxMDQ4MDQzOTI=", "number": 57, "title": "Unspecified requirement", "user": {"login": "leonsas", "id": 2005930, "node_id": "MDQ6VXNlcjIwMDU5MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2005930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonsas", "html_url": "https://github.com/leonsas", "followers_url": "https://api.github.com/users/leonsas/followers", "following_url": "https://api.github.com/users/leonsas/following{/other_user}", "gists_url": "https://api.github.com/users/leonsas/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonsas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonsas/subscriptions", "organizations_url": "https://api.github.com/users/leonsas/orgs", "repos_url": "https://api.github.com/users/leonsas/repos", "events_url": "https://api.github.com/users/leonsas/events{/privacy}", "received_events_url": "https://api.github.com/users/leonsas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "zakj", "id": 24062, "node_id": "MDQ6VXNlcjI0MDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/24062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zakj", "html_url": "https://github.com/zakj", "followers_url": "https://api.github.com/users/zakj/followers", "following_url": "https://api.github.com/users/zakj/following{/other_user}", "gists_url": "https://api.github.com/users/zakj/gists{/gist_id}", "starred_url": "https://api.github.com/users/zakj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zakj/subscriptions", "organizations_url": "https://api.github.com/users/zakj/orgs", "repos_url": "https://api.github.com/users/zakj/repos", "events_url": "https://api.github.com/users/zakj/events{/privacy}", "received_events_url": "https://api.github.com/users/zakj/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zakj", "id": 24062, "node_id": "MDQ6VXNlcjI0MDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/24062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zakj", "html_url": "https://github.com/zakj", "followers_url": "https://api.github.com/users/zakj/followers", "following_url": "https://api.github.com/users/zakj/following{/other_user}", "gists_url": "https://api.github.com/users/zakj/gists{/gist_id}", "starred_url": "https://api.github.com/users/zakj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zakj/subscriptions", "organizations_url": "https://api.github.com/users/zakj/orgs", "repos_url": "https://api.github.com/users/zakj/repos", "events_url": "https://api.github.com/users/zakj/events{/privacy}", "received_events_url": "https://api.github.com/users/zakj/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-09-04T00:03:27Z", "updated_at": "2015-11-02T19:51:33Z", "closed_at": "2015-11-02T19:51:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was getting the following error:\n\n```\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mixpanel/__init__.py\", line 24, in <module>\n    from six.moves import urllib\nImportError: cannot import name urllib\n```\n\nEasily fixed with `pip install six --upgrade`, so you guys might want to add a `requirements.txt` file. I'm on Python 2.7.9.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/56", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/56/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/56/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/56", "id": 104464832, "node_id": "MDU6SXNzdWUxMDQ0NjQ4MzI=", "number": 56, "title": "json_dumps should be a part of the class to make overriding it easy", "user": {"login": "ashwch", "id": 1311161, "node_id": "MDQ6VXNlcjEzMTExNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1311161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashwch", "html_url": "https://github.com/ashwch", "followers_url": "https://api.github.com/users/ashwch/followers", "following_url": "https://api.github.com/users/ashwch/following{/other_user}", "gists_url": "https://api.github.com/users/ashwch/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashwch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashwch/subscriptions", "organizations_url": "https://api.github.com/users/ashwch/orgs", "repos_url": "https://api.github.com/users/ashwch/repos", "events_url": "https://api.github.com/users/ashwch/events{/privacy}", "received_events_url": "https://api.github.com/users/ashwch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-09-02T12:00:26Z", "updated_at": "2015-11-02T19:28:34Z", "closed_at": "2015-11-02T19:28:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently [`json_dumps`](https://github.com/mixpanel/mixpanel-python/blob/master/mixpanel/__init__.py#L39) is a module level method which makes it difficult to override it.\n\nIt should be a class level method so that base classes can easily override it.\n\nFor example let's say I want to handle `decimal.Decimal` fields as well then currently I will have to do something like this:\n\n```\nfrom decimal import Decimal\nimport json\nimport mixpanel\n\nclass MixPanelDataSerializer(mixpanel.DatetimeSerializer):\n    def default(self, obj):\n        if isinstance(obj, Decimal):\n            return float(obj)\n        return super(MixPanelDataSerializer, self).default(obj)\n\n\ndef json_dumps(data):\n    return json.dumps(data, separators=(',', ':'), cls=MixPanelDataSerializer)\n\nmixpanel.json_dumps = json_dumps  # assign the new function to the module object\n```\n\nWhat do you guys think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/55", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/55/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/55/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/55", "id": 103068613, "node_id": "MDU6SXNzdWUxMDMwNjg2MTM=", "number": 55, "title": "Python 3.4 issue..simple fix", "user": {"login": "sirvon", "id": 1570089, "node_id": "MDQ6VXNlcjE1NzAwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1570089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirvon", "html_url": "https://github.com/sirvon", "followers_url": "https://api.github.com/users/sirvon/followers", "following_url": "https://api.github.com/users/sirvon/following{/other_user}", "gists_url": "https://api.github.com/users/sirvon/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirvon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirvon/subscriptions", "organizations_url": "https://api.github.com/users/sirvon/orgs", "repos_url": "https://api.github.com/users/sirvon/repos", "events_url": "https://api.github.com/users/sirvon/events{/privacy}", "received_events_url": "https://api.github.com/users/sirvon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-08-25T16:41:57Z", "updated_at": "2015-08-25T18:15:07Z", "closed_at": "2015-08-25T18:15:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` java\nTraceback (most recent call last):\n  File \"ClientTokenQ.py\", line 4, in <module>\n    from lib import queueMixin as qm\n  File \"/home/creator/apps/xnainfra/lib/queueMixin.py\", line 12, in <module>\n    from mixpanel import Mixpanel\n  File \"/usr/local/lib/python3.4/site-packages/mixpanel/__init__.py\", line 209\n    except Exception, e:\n```\n\n``` java\nexcept Exception as e:\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/53", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/53/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/53/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/53", "id": 84822626, "node_id": "MDU6SXNzdWU4NDgyMjYyNg==", "number": 53, "title": "Incorrect documentation for people_track_charge(...)", "user": {"login": "eKIK", "id": 1250308, "node_id": "MDQ6VXNlcjEyNTAzMDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1250308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eKIK", "html_url": "https://github.com/eKIK", "followers_url": "https://api.github.com/users/eKIK/followers", "following_url": "https://api.github.com/users/eKIK/following{/other_user}", "gists_url": "https://api.github.com/users/eKIK/gists{/gist_id}", "starred_url": "https://api.github.com/users/eKIK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eKIK/subscriptions", "organizations_url": "https://api.github.com/users/eKIK/orgs", "repos_url": "https://api.github.com/users/eKIK/repos", "events_url": "https://api.github.com/users/eKIK/events{/privacy}", "received_events_url": "https://api.github.com/users/eKIK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-03T23:46:44Z", "updated_at": "2015-06-09T09:21:56Z", "closed_at": "2015-06-04T18:03:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "The current version of mixpanel on pypi is 4.0.2. at the time of writing.\n\nThe documentation (http://mixpanel.github.io/mixpanel-python/#mixpanel.Mixpanel.people_track_charge) depicts the behavior for 4.0.2+ though since the handling of the properties=None changed there (https://github.com/mixpanel/mixpanel-python/commit/d92dd5faf69f3a743c093396e8699f6747efbadf).\n\nPossible solutions:\n1. Update the documentation and change the function signature to: people_track_charge(distinct_id, amount, properties, meta=None)\nOR\n2. Release version 4.0.3.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/47", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/47/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/47/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/47", "id": 62684480, "node_id": "MDU6SXNzdWU2MjY4NDQ4MA==", "number": 47, "title": "Add documentation for people_set's meta argument", "user": {"login": "gracaninja", "id": 1245095, "node_id": "MDQ6VXNlcjEyNDUwOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1245095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gracaninja", "html_url": "https://github.com/gracaninja", "followers_url": "https://api.github.com/users/gracaninja/followers", "following_url": "https://api.github.com/users/gracaninja/following{/other_user}", "gists_url": "https://api.github.com/users/gracaninja/gists{/gist_id}", "starred_url": "https://api.github.com/users/gracaninja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gracaninja/subscriptions", "organizations_url": "https://api.github.com/users/gracaninja/orgs", "repos_url": "https://api.github.com/users/gracaninja/repos", "events_url": "https://api.github.com/users/gracaninja/events{/privacy}", "received_events_url": "https://api.github.com/users/gracaninja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "zakj", "id": 24062, "node_id": "MDQ6VXNlcjI0MDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/24062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zakj", "html_url": "https://github.com/zakj", "followers_url": "https://api.github.com/users/zakj/followers", "following_url": "https://api.github.com/users/zakj/following{/other_user}", "gists_url": "https://api.github.com/users/zakj/gists{/gist_id}", "starred_url": "https://api.github.com/users/zakj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zakj/subscriptions", "organizations_url": "https://api.github.com/users/zakj/orgs", "repos_url": "https://api.github.com/users/zakj/repos", "events_url": "https://api.github.com/users/zakj/events{/privacy}", "received_events_url": "https://api.github.com/users/zakj/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "zakj", "id": 24062, "node_id": "MDQ6VXNlcjI0MDYy", "avatar_url": "https://avatars3.githubusercontent.com/u/24062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zakj", "html_url": "https://github.com/zakj", "followers_url": "https://api.github.com/users/zakj/followers", "following_url": "https://api.github.com/users/zakj/following{/other_user}", "gists_url": "https://api.github.com/users/zakj/gists{/gist_id}", "starred_url": "https://api.github.com/users/zakj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zakj/subscriptions", "organizations_url": "https://api.github.com/users/zakj/orgs", "repos_url": "https://api.github.com/users/zakj/repos", "events_url": "https://api.github.com/users/zakj/events{/privacy}", "received_events_url": "https://api.github.com/users/zakj/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-03-18T12:42:14Z", "updated_at": "2015-03-18T22:02:43Z", "closed_at": "2015-03-18T22:02:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI am trying to do a server side update and I don't want the last seen time to be changed.\n\nI am calling my update with the flag $ignore_time to True but it is still updating the last seen. Am I doing something wrong?\n\nHere is some code:\n\ndef get_people_dict(user):\n    try:\n        birth_date_string = convert_datetime_to_string(user.date_of_birth)\n    except:\n        birth_date_string = convert_datetime_to_string(datetime.date.today())\n\n```\ntopics = [t.title for t in user.topics]\npeople_dict = {}\npeople_dict[\"$username\"] = user.username\npeople_dict[\"$first_name\"] = user.first_name\npeople_dict[\"$last_name\"] = user.last_name\npeople_dict[\"$email\"] = user.email\npeople_dict[\"$created\"] = convert_datetime_to_string(user.date_joined)\npeople_dict[\"$ip\"] = convert_datetime_to_string(user.current_ip)\npeople_dict[\"country\"] = user.country\npeople_dict[\"date_of_birth\"] = birth_date_string\npeople_dict[\"rating\"] = user.rating\npeople_dict[\"topics\"] = topics\npeople_dict[\"is_client\"] = user.is_client\npeople_dict[\"is_editor\"] = user.is_editor\npeople_dict[\"total_jobs\"] = user.total_jobs\npeople_dict[\"total_spent_money\"] = round(user.total_spent_money, 1)\npeople_dict[\"level\"] = user.user_level.level_id\npeople_dict[\"activated\"] = user.active\nif user.native_language:\n    people_dict[\"native_language\"] = user.native_language.shortname\npeople_dict[\"is_senior_editor\"] = user.is_senior_editor\npeople_dict[\"can_give_feedback\"] = user.can_give_feedback\npeople_dict[\"is_copy_editor\"] = user.is_copy_editor\npeople_dict = get_people_lang_pair_dict(user, people_dict)\npeople_dict[\"balance\"] = round(user.get_balance(), 1)\n# Do not update last seen\npeople_dict[\"$ignore_time\"] = True\nreturn people_dict\n```\n\nconnection.people_set(user.username, people_dict)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/45", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/45/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/45/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/45", "id": 60488023, "node_id": "MDU6SXNzdWU2MDQ4ODAyMw==", "number": 45, "title": "Fail to install 4.0.1 due to missing README.md", "user": {"login": "phaseburn", "id": 102327, "node_id": "MDQ6VXNlcjEwMjMyNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/102327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phaseburn", "html_url": "https://github.com/phaseburn", "followers_url": "https://api.github.com/users/phaseburn/followers", "following_url": "https://api.github.com/users/phaseburn/following{/other_user}", "gists_url": "https://api.github.com/users/phaseburn/gists{/gist_id}", "starred_url": "https://api.github.com/users/phaseburn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phaseburn/subscriptions", "organizations_url": "https://api.github.com/users/phaseburn/orgs", "repos_url": "https://api.github.com/users/phaseburn/repos", "events_url": "https://api.github.com/users/phaseburn/events{/privacy}", "received_events_url": "https://api.github.com/users/phaseburn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-10T11:52:58Z", "updated_at": "2015-03-10T15:39:49Z", "closed_at": "2015-03-10T15:39:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "$ sudo easy_install mixpanel-py\nSearching for mixpanel-py\nReading https://pypi.python.org/simple/mixpanel-py/\n/Library/Python/2.7/site-packages/setuptools-12.4-py2.7.egg/pkg_resources/**init**.py:2512: PEP440Warning: 'mixpanel (py-2.0.0)' is being parsed as a legacy, non PEP 440, version. You may find odd behavior and sort order. In particular it will be sorted as less than 0.0. It is recommend to migrate to PEP 440 compatible versions.\n/Library/Python/2.7/site-packages/setuptools-12.4-py2.7.egg/pkg_resources/**init**.py:2512: PEP440Warning: 'mixpanel (py-2.0.1)' is being parsed as a legacy, non PEP 440, version. You may find odd behavior and sort order. In particular it will be sorted as less than 0.0. It is recommend to migrate to PEP 440 compatible versions.\n/Library/Python/2.7/site-packages/setuptools-12.4-py2.7.egg/pkg_resources/**init**.py:2512: PEP440Warning: 'mixpanel (py-3.0.0)' is being parsed as a legacy, non PEP 440, version. You may find odd behavior and sort order. In particular it will be sorted as less than 0.0. It is recommend to migrate to PEP 440 compatible versions.\n/Library/Python/2.7/site-packages/setuptools-12.4-py2.7.egg/pkg_resources/**init**.py:2512: PEP440Warning: 'mixpanel (py-3.1.1)' is being parsed as a legacy, non PEP 440, version. You may find odd behavior and sort order. In particular it will be sorted as less than 0.0. It is recommend to migrate to PEP 440 compatible versions.\n/Library/Python/2.7/site-packages/setuptools-12.4-py2.7.egg/pkg_resources/**init**.py:2512: PEP440Warning: 'mixpanel (py-3.1.2)' is being parsed as a legacy, non PEP 440, version. You may find odd behavior and sort order. In particular it will be sorted as less than 0.0. It is recommend to migrate to PEP 440 compatible versions.\n/Library/Python/2.7/site-packages/setuptools-12.4-py2.7.egg/pkg_resources/**init**.py:2512: PEP440Warning: 'mixpanel (py-3.1.3)' is being parsed as a legacy, non PEP 440, version. You may find odd behavior and sort order. In particular it will be sorted as less than 0.0. It is recommend to migrate to PEP 440 compatible versions.\n/Library/Python/2.7/site-packages/setuptools-12.4-py2.7.egg/pkg_resources/**init**.py:2512: PEP440Warning: 'mixpanel (py-3.2.0)' is being parsed as a legacy, non PEP 440, version. You may find odd behavior and sort order. In particular it will be sorted as less than 0.0. It is recommend to migrate to PEP 440 compatible versions.\n/Library/Python/2.7/site-packages/setuptools-12.4-py2.7.egg/pkg_resources/**init**.py:2512: PEP440Warning: 'mixpanel (py-3.2.1)' is being parsed as a legacy, non PEP 440, version. You may find odd behavior and sort order. In particular it will be sorted as less than 0.0. It is recommend to migrate to PEP 440 compatible versions.\n/Library/Python/2.7/site-packages/setuptools-12.4-py2.7.egg/pkg_resources/**init**.py:2512: PEP440Warning: 'mixpanel (py-4.0.0)' is being parsed as a legacy, non PEP 440, version. You may find odd behavior and sort order. In particular it will be sorted as less than 0.0. It is recommend to migrate to PEP 440 compatible versions.\n/Library/Python/2.7/site-packages/setuptools-12.4-py2.7.egg/pkg_resources/**init**.py:2512: PEP440Warning: 'mixpanel (py-4.0.1)' is being parsed as a legacy, non PEP 440, version. You may find odd behavior and sort order. In particular it will be sorted as less than 0.0. It is recommend to migrate to PEP 440 compatible versions.\nBest match: mixpanel-py 4.0.1\nDownloading https://pypi.python.org/packages/source/m/mixpanel-py/mixpanel-py-4.0.1.tar.gz#md5=e9d45a9aa82f95e84c960259a9c4d520\nProcessing mixpanel-py-4.0.1.tar.gz\nWriting /tmp/easy_install-UsdqLT/mixpanel-py-4.0.1/setup.cfg\nRunning mixpanel-py-4.0.1/setup.py -q bdist_egg --dist-dir /tmp/easy_install-UsdqLT/mixpanel-py-4.0.1/egg-dist-tmp-zhhP_i\nerror: README.md: No such file or directory\n$\n\nI would normally in such circumstances attempt to read the README file to see if I did something wrong, but, alas, I can't even do that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/44", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/44/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/44/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/44", "id": 59709426, "node_id": "MDU6SXNzdWU1OTcwOTQyNg==", "number": 44, "title": "Provide a way to send Super Properties", "user": {"login": "djds23", "id": 5833968, "node_id": "MDQ6VXNlcjU4MzM5Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5833968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djds23", "html_url": "https://github.com/djds23", "followers_url": "https://api.github.com/users/djds23/followers", "following_url": "https://api.github.com/users/djds23/following{/other_user}", "gists_url": "https://api.github.com/users/djds23/gists{/gist_id}", "starred_url": "https://api.github.com/users/djds23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djds23/subscriptions", "organizations_url": "https://api.github.com/users/djds23/orgs", "repos_url": "https://api.github.com/users/djds23/repos", "events_url": "https://api.github.com/users/djds23/events{/privacy}", "received_events_url": "https://api.github.com/users/djds23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-03T21:35:13Z", "updated_at": "2015-03-03T22:19:34Z", "closed_at": "2015-03-03T22:19:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "As far as I can tell from the documentation, it is only possible for one to send super properties from the javascript client. It would be fantastic to do this on the server side.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/29", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/29/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/29/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/29", "id": 46746750, "node_id": "MDU6SXNzdWU0Njc0Njc1MA==", "number": 29, "title": "Can't use mutable data types for function defaults", "user": {"login": "eriktaubeneck", "id": 982499, "node_id": "MDQ6VXNlcjk4MjQ5OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/982499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eriktaubeneck", "html_url": "https://github.com/eriktaubeneck", "followers_url": "https://api.github.com/users/eriktaubeneck/followers", "following_url": "https://api.github.com/users/eriktaubeneck/following{/other_user}", "gists_url": "https://api.github.com/users/eriktaubeneck/gists{/gist_id}", "starred_url": "https://api.github.com/users/eriktaubeneck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eriktaubeneck/subscriptions", "organizations_url": "https://api.github.com/users/eriktaubeneck/orgs", "repos_url": "https://api.github.com/users/eriktaubeneck/repos", "events_url": "https://api.github.com/users/eriktaubeneck/events{/privacy}", "received_events_url": "https://api.github.com/users/eriktaubeneck/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43973200, "node_id": "MDU6TGFiZWw0Mzk3MzIwMA==", "url": "https://api.github.com/repos/mixpanel/mixpanel-python/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-24T14:52:08Z", "updated_at": "2015-03-10T00:31:47Z", "closed_at": "2015-03-10T00:31:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Many of the methods in the API use `{}` as a function default, however this can lead to serious issues. See [this blog post](http://pythonconquerstheuniverse.wordpress.com/category/python-gotchas/) on this python gotcha.  You should use `None` and then, for example in `track` call `all_properties.update(properties or {})`.\n\nWithout this, subsequent calls that don't provide properties, after one that does, will send the old properties along, which will lead to all sorts of confusion. :confounded:\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/27", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/27/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/27/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/27", "id": 45346376, "node_id": "MDU6SXNzdWU0NTM0NjM3Ng==", "number": 27, "title": "Properties list", "user": {"login": "Nihisil", "id": 475367, "node_id": "MDQ6VXNlcjQ3NTM2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/475367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nihisil", "html_url": "https://github.com/Nihisil", "followers_url": "https://api.github.com/users/Nihisil/followers", "following_url": "https://api.github.com/users/Nihisil/following{/other_user}", "gists_url": "https://api.github.com/users/Nihisil/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nihisil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nihisil/subscriptions", "organizations_url": "https://api.github.com/users/Nihisil/orgs", "repos_url": "https://api.github.com/users/Nihisil/repos", "events_url": "https://api.github.com/users/Nihisil/events{/privacy}", "received_events_url": "https://api.github.com/users/Nihisil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-10-09T09:43:20Z", "updated_at": "2014-10-10T00:24:40Z", "closed_at": "2014-10-10T00:24:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "This exist any way to send multiple property values?\n\nAll that I found is https://mixpanel.com/docs/properties-or-segments/property-data-types\n\n> List\n> To send a list of values (for example, the products in a shopping cart), send them as a JSON array. This will allow you, in the segmentation report, when you query for a particular item, show all events where that item was included in the list.\n\nBut this is not working, I tried:\n\nproperties = {\n            'Brand': ['first', 'second'],\n}\n\nIn mixpanel this displayed as [\"first\",\"second\"]\n\nAnd in http doc I can't find any references about list properties.\n\nIf this exist any way to set properties list, please let me know - I will implement this by my own.\n\nI really need this mechanism.\n\nThanks,\nAlex\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/24", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/24/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/24/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/24", "id": 41235394, "node_id": "MDU6SXNzdWU0MTIzNTM5NA==", "number": 24, "title": "Consumer._write_request retry functionality", "user": {"login": "sorin", "id": 60167, "node_id": "MDQ6VXNlcjYwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/60167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sorin", "html_url": "https://github.com/sorin", "followers_url": "https://api.github.com/users/sorin/followers", "following_url": "https://api.github.com/users/sorin/following{/other_user}", "gists_url": "https://api.github.com/users/sorin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sorin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sorin/subscriptions", "organizations_url": "https://api.github.com/users/sorin/orgs", "repos_url": "https://api.github.com/users/sorin/repos", "events_url": "https://api.github.com/users/sorin/events{/privacy}", "received_events_url": "https://api.github.com/users/sorin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-26T23:45:47Z", "updated_at": "2014-08-27T00:25:55Z", "closed_at": "2014-08-27T00:25:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm about to implement it in a fork, was wondering if the project maintainer think it's a good idea? I could contribute the code.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/21", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/21/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/21/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/21", "id": 39843036, "node_id": "MDU6SXNzdWUzOTg0MzAzNg==", "number": 21, "title": "Import Legacy Data", "user": {"login": "cooncesean", "id": 47877, "node_id": "MDQ6VXNlcjQ3ODc3", "avatar_url": "https://avatars0.githubusercontent.com/u/47877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooncesean", "html_url": "https://github.com/cooncesean", "followers_url": "https://api.github.com/users/cooncesean/followers", "following_url": "https://api.github.com/users/cooncesean/following{/other_user}", "gists_url": "https://api.github.com/users/cooncesean/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooncesean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooncesean/subscriptions", "organizations_url": "https://api.github.com/users/cooncesean/orgs", "repos_url": "https://api.github.com/users/cooncesean/repos", "events_url": "https://api.github.com/users/cooncesean/events{/privacy}", "received_events_url": "https://api.github.com/users/cooncesean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43973202, "node_id": "MDU6TGFiZWw0Mzk3MzIwMg==", "url": "https://api.github.com/repos/mixpanel/mixpanel-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-08T17:01:45Z", "updated_at": "2015-03-10T01:55:55Z", "closed_at": "2015-03-10T00:44:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Provide functionality to import data into Mixpanel older than 5 days.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/19", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/19/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/19/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/19", "id": 38941377, "node_id": "MDU6SXNzdWUzODk0MTM3Nw==", "number": 19, "title": "Python Binding To Export Data From MixPanel", "user": {"login": "cooncesean", "id": 47877, "node_id": "MDQ6VXNlcjQ3ODc3", "avatar_url": "https://avatars0.githubusercontent.com/u/47877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooncesean", "html_url": "https://github.com/cooncesean", "followers_url": "https://api.github.com/users/cooncesean/followers", "following_url": "https://api.github.com/users/cooncesean/following{/other_user}", "gists_url": "https://api.github.com/users/cooncesean/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooncesean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooncesean/subscriptions", "organizations_url": "https://api.github.com/users/cooncesean/orgs", "repos_url": "https://api.github.com/users/cooncesean/repos", "events_url": "https://api.github.com/users/cooncesean/events{/privacy}", "received_events_url": "https://api.github.com/users/cooncesean/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-28T22:43:24Z", "updated_at": "2014-07-29T15:47:09Z", "closed_at": "2014-07-29T01:28:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have read your [documentation regarding exporting data via the MixPanel API using Python](https://mixpanel.com/docs/api-documentation/data-export-api#libs-python) and was wondering if there was an official Python binding aside from [this module](https://mixpanel.com/site_media//api/v2/mixpanel.py) to allow our team to query MixPanel for our data.\n\nWe're specifically looking for a library that can be added as a requirement and installed via pip. If not, do you mind if we fork that module, package and a distribute it? Let me know if there is a better solution that I may have missed - thanks :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/8", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/8/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/8/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/8", "id": 18329699, "node_id": "MDU6SXNzdWUxODMyOTY5OQ==", "number": 8, "title": "Allow doing people_set without updating last_seen", "user": {"login": "daniyalzade", "id": 409427, "node_id": "MDQ6VXNlcjQwOTQyNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/409427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniyalzade", "html_url": "https://github.com/daniyalzade", "followers_url": "https://api.github.com/users/daniyalzade/followers", "following_url": "https://api.github.com/users/daniyalzade/following{/other_user}", "gists_url": "https://api.github.com/users/daniyalzade/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniyalzade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniyalzade/subscriptions", "organizations_url": "https://api.github.com/users/daniyalzade/orgs", "repos_url": "https://api.github.com/users/daniyalzade/repos", "events_url": "https://api.github.com/users/daniyalzade/events{/privacy}", "received_events_url": "https://api.github.com/users/daniyalzade/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43973202, "node_id": "MDU6TGFiZWw0Mzk3MzIwMg==", "url": "https://api.github.com/repos/mixpanel/mixpanel-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-08-21T00:21:35Z", "updated_at": "2013-11-25T20:30:20Z", "closed_at": "2013-11-25T20:30:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes I want to set a property on the user object retrospectively, and I want this not to update the last_seen value of the user object. Afaics there is no way of doing this. Should there be?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/7", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/7/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/7/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/7", "id": 16993074, "node_id": "MDU6SXNzdWUxNjk5MzA3NA==", "number": 7, "title": "Make Mixpanel.alias() send synchronously, regardless of the consumer configuration", "user": {"login": "joeatwork", "id": 106866, "node_id": "MDQ6VXNlcjEwNjg2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/106866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeatwork", "html_url": "https://github.com/joeatwork", "followers_url": "https://api.github.com/users/joeatwork/followers", "following_url": "https://api.github.com/users/joeatwork/following{/other_user}", "gists_url": "https://api.github.com/users/joeatwork/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeatwork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeatwork/subscriptions", "organizations_url": "https://api.github.com/users/joeatwork/orgs", "repos_url": "https://api.github.com/users/joeatwork/repos", "events_url": "https://api.github.com/users/joeatwork/events{/privacy}", "received_events_url": "https://api.github.com/users/joeatwork/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 43973202, "node_id": "MDU6TGFiZWw0Mzk3MzIwMg==", "url": "https://api.github.com/repos/mixpanel/mixpanel-python/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "orienwu", "id": 1744079, "node_id": "MDQ6VXNlcjE3NDQwNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1744079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orienwu", "html_url": "https://github.com/orienwu", "followers_url": "https://api.github.com/users/orienwu/followers", "following_url": "https://api.github.com/users/orienwu/following{/other_user}", "gists_url": "https://api.github.com/users/orienwu/gists{/gist_id}", "starred_url": "https://api.github.com/users/orienwu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orienwu/subscriptions", "organizations_url": "https://api.github.com/users/orienwu/orgs", "repos_url": "https://api.github.com/users/orienwu/repos", "events_url": "https://api.github.com/users/orienwu/events{/privacy}", "received_events_url": "https://api.github.com/users/orienwu/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "orienwu", "id": 1744079, "node_id": "MDQ6VXNlcjE3NDQwNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1744079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orienwu", "html_url": "https://github.com/orienwu", "followers_url": "https://api.github.com/users/orienwu/followers", "following_url": "https://api.github.com/users/orienwu/following{/other_user}", "gists_url": "https://api.github.com/users/orienwu/gists{/gist_id}", "starred_url": "https://api.github.com/users/orienwu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orienwu/subscriptions", "organizations_url": "https://api.github.com/users/orienwu/orgs", "repos_url": "https://api.github.com/users/orienwu/repos", "events_url": "https://api.github.com/users/orienwu/events{/privacy}", "received_events_url": "https://api.github.com/users/orienwu/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2013-07-19T21:10:00Z", "updated_at": "2014-06-17T21:59:04Z", "closed_at": "2014-06-17T21:58:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Aliases only take affect after the alias message is received by Mixpanel, which means in asynchronous or time-shifted cases if events or updates associated with a newly created alias arrive before the alias itself, they could be attributed to the wrong user. Change the python library to always send the messages associated with alias immediately when alias() is called.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/5", "repository_url": "https://api.github.com/repos/mixpanel/mixpanel-python", "labels_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/5/comments", "events_url": "https://api.github.com/repos/mixpanel/mixpanel-python/issues/5/events", "html_url": "https://github.com/mixpanel/mixpanel-python/issues/5", "id": 16779519, "node_id": "MDU6SXNzdWUxNjc3OTUxOQ==", "number": 5, "title": "pip package name incorrect in README", "user": {"login": "ckalima", "id": 264071, "node_id": "MDQ6VXNlcjI2NDA3MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/264071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckalima", "html_url": "https://github.com/ckalima", "followers_url": "https://api.github.com/users/ckalima/followers", "following_url": "https://api.github.com/users/ckalima/following{/other_user}", "gists_url": "https://api.github.com/users/ckalima/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckalima/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckalima/subscriptions", "organizations_url": "https://api.github.com/users/ckalima/orgs", "repos_url": "https://api.github.com/users/ckalima/repos", "events_url": "https://api.github.com/users/ckalima/events{/privacy}", "received_events_url": "https://api.github.com/users/ckalima/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "joeatwork", "id": 106866, "node_id": "MDQ6VXNlcjEwNjg2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/106866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeatwork", "html_url": "https://github.com/joeatwork", "followers_url": "https://api.github.com/users/joeatwork/followers", "following_url": "https://api.github.com/users/joeatwork/following{/other_user}", "gists_url": "https://api.github.com/users/joeatwork/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeatwork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeatwork/subscriptions", "organizations_url": "https://api.github.com/users/joeatwork/orgs", "repos_url": "https://api.github.com/users/joeatwork/repos", "events_url": "https://api.github.com/users/joeatwork/events{/privacy}", "received_events_url": "https://api.github.com/users/joeatwork/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "joeatwork", "id": 106866, "node_id": "MDQ6VXNlcjEwNjg2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/106866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeatwork", "html_url": "https://github.com/joeatwork", "followers_url": "https://api.github.com/users/joeatwork/followers", "following_url": "https://api.github.com/users/joeatwork/following{/other_user}", "gists_url": "https://api.github.com/users/joeatwork/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeatwork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeatwork/subscriptions", "organizations_url": "https://api.github.com/users/joeatwork/orgs", "repos_url": "https://api.github.com/users/joeatwork/repos", "events_url": "https://api.github.com/users/joeatwork/events{/privacy}", "received_events_url": "https://api.github.com/users/joeatwork/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2013-07-15T21:17:38Z", "updated_at": "2013-07-19T19:57:17Z", "closed_at": "2013-07-16T17:11:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running 'pip install mixpanel-python' as documented in the README actually installs a different Mixpanel package than this official release.\n\nAs suggested in the Mixpanel help docs, the correct install command is:\n\n```\npip install mixpanel-py\n```\n\nAlso noticed that the installed package name has a dash, which required some SyntaxError workarounds when trying to import. Any chance of renaming the installed package from 'mixpanel-py' to 'mixpanel_py' or just 'mixpanel'? Not clear on any existing package conflict issues there.\n\nThanks for an official release!\n", "performed_via_github_app": null, "score": 1.0}]}