{"total_count": 218, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/462", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/462/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/462/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/462", "id": 640685645, "node_id": "MDU6SXNzdWU2NDA2ODU2NDU=", "number": 462, "title": "Django 3: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS", "user": {"login": "thibaut-singlefile", "id": 59576766, "node_id": "MDQ6VXNlcjU5NTc2NzY2", "avatar_url": "https://avatars0.githubusercontent.com/u/59576766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thibaut-singlefile", "html_url": "https://github.com/thibaut-singlefile", "followers_url": "https://api.github.com/users/thibaut-singlefile/followers", "following_url": "https://api.github.com/users/thibaut-singlefile/following{/other_user}", "gists_url": "https://api.github.com/users/thibaut-singlefile/gists{/gist_id}", "starred_url": "https://api.github.com/users/thibaut-singlefile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thibaut-singlefile/subscriptions", "organizations_url": "https://api.github.com/users/thibaut-singlefile/orgs", "repos_url": "https://api.github.com/users/thibaut-singlefile/repos", "events_url": "https://api.github.com/users/thibaut-singlefile/events{/privacy}", "received_events_url": "https://api.github.com/users/thibaut-singlefile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-17T19:25:12Z", "updated_at": "2020-06-17T19:27:38Z", "closed_at": "2020-06-17T19:27:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to add `path(r\"activity/\", include(\"actstream.urls\")),` to make the feed endpoints available in Django 3 fails with the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"./manage.py\", line 31, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/management/__init__.py\", line 401, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/management/__init__.py\", line 395, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/management/commands/test.py\", line 23, in run_from_argv\r\n    super().run_from_argv(argv)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/management/base.py\", line 330, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/management/base.py\", line 371, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/management/commands/test.py\", line 53, in handle\r\n    failures = test_runner.run_tests(test_labels)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/snapshottest/django.py\", line 32, in run_tests\r\n    **kwargs\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/test/runner.py\", line 698, in run_tests\r\n    self.run_checks(databases)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/test/runner.py\", line 636, in run_checks\r\n    call_command('check', verbosity=self.verbosity, databases=databases)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/management/__init__.py\", line 168, in call_command\r\n    return command.execute(*args, **defaults)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/management/base.py\", line 371, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/management/commands/check.py\", line 69, in handle\r\n    databases=options['databases'],\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/management/base.py\", line 396, in check\r\n    databases=databases,\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/checks/registry.py\", line 70, in run_checks\r\n    new_errors = check(app_configs=app_configs, databases=databases)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/checks/urls.py\", line 13, in check_url_config\r\n    return check_resolver(resolver)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/core/checks/urls.py\", line 23, in check_resolver\r\n    return check_method()\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/urls/resolvers.py\", line 408, in check\r\n    for pattern in self.url_patterns:\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/utils/functional.py\", line 48, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/urls/resolvers.py\", line 589, in url_patterns\r\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/utils/functional.py\", line 48, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/urls/resolvers.py\", line 582, in urlconf_module\r\n    return import_module(self.urlconf_name)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Documents/application/application/urls.py\", line 40, in <module>\r\n    path(r\"api/v1/\", include(\"application.api.urls\")),\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/urls/conf.py\", line 34, in include\r\n    urlconf_module = import_module(urlconf_module)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Documents/application/application/api/urls.py\", line 57, in <module>\r\n    path(r\"activity/\", include(\"actstream.urls\")),\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/urls/conf.py\", line 34, in include\r\n    urlconf_module = import_module(urlconf_module)\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/actstream/urls.py\", line 3, in <module>\r\n    from actstream import feeds, views\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/actstream/feeds.py\", line 8, in <module>\r\n    from django.contrib.sites.models import Site\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/contrib/sites/models.py\", line 78, in <module>\r\n    class Site(models.Model):\r\n  File \"/.local/share/virtualenvs/application-Y1CezQv3/lib/python3.6/site-packages/django/db/models/base.py\", line 116, in __new__\r\n    \"INSTALLED_APPS.\" % (module, name)\r\nRuntimeError: Model class django.contrib.sites.models.Site doesn't declare an explicit app_label and isn't in an application in INSTALLED_APPS.\r\n```\r\n\r\nDid anyone encounter the same issue? Any tips on how to fix this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/453", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/453/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/453/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/453", "id": 567052853, "node_id": "MDU6SXNzdWU1NjcwNTI4NTM=", "number": 453, "title": "A new release with django 3 compatibility", "user": {"login": "tasn", "id": 108670, "node_id": "MDQ6VXNlcjEwODY3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/108670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tasn", "html_url": "https://github.com/tasn", "followers_url": "https://api.github.com/users/tasn/followers", "following_url": "https://api.github.com/users/tasn/following{/other_user}", "gists_url": "https://api.github.com/users/tasn/gists{/gist_id}", "starred_url": "https://api.github.com/users/tasn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tasn/subscriptions", "organizations_url": "https://api.github.com/users/tasn/orgs", "repos_url": "https://api.github.com/users/tasn/repos", "events_url": "https://api.github.com/users/tasn/events{/privacy}", "received_events_url": "https://api.github.com/users/tasn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-02-18T17:40:08Z", "updated_at": "2020-06-08T09:34:03Z", "closed_at": "2020-06-08T09:34:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "master already supports django3 thanks to #438.\r\nPlease make a release (0.8.1 or 0.9.0) that includes these fixes so we can update to django3.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/452", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/452/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/452/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/452/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/452", "id": 567000716, "node_id": "MDU6SXNzdWU1NjcwMDA3MTY=", "number": 452, "title": "Python 3.7 compatibility", "user": {"login": "Mapiarz", "id": 2741167, "node_id": "MDQ6VXNlcjI3NDExNjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2741167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mapiarz", "html_url": "https://github.com/Mapiarz", "followers_url": "https://api.github.com/users/Mapiarz/followers", "following_url": "https://api.github.com/users/Mapiarz/following{/other_user}", "gists_url": "https://api.github.com/users/Mapiarz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mapiarz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mapiarz/subscriptions", "organizations_url": "https://api.github.com/users/Mapiarz/orgs", "repos_url": "https://api.github.com/users/Mapiarz/repos", "events_url": "https://api.github.com/users/Mapiarz/events{/privacy}", "received_events_url": "https://api.github.com/users/Mapiarz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T16:13:36Z", "updated_at": "2020-04-29T04:41:56Z", "closed_at": "2020-04-29T04:41:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is Python 3.7 supported or compatible with django-activity-stream? If so, which versions? Docs for the most recent (0.8.0) only mention support up to Python 3.6. \r\n\r\nThanks!\r\nBartosz", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/446", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/446/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/446/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/446", "id": 545354435, "node_id": "MDU6SXNzdWU1NDUzNTQ0MzU=", "number": 446, "title": "Fix simple typo: objct -> object", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-05T01:32:49Z", "updated_at": "2020-01-05T03:45:50Z", "closed_at": "2020-01-05T03:45:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in docs/source/streams.rst.\nShould read `object` rather than `objct`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/445", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/445/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/445/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/445", "id": 545201821, "node_id": "MDU6SXNzdWU1NDUyMDE4MjE=", "number": 445, "title": "Create stream for team/organization", "user": {"login": "cobyrne09", "id": 11958261, "node_id": "MDQ6VXNlcjExOTU4MjYx", "avatar_url": "https://avatars3.githubusercontent.com/u/11958261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cobyrne09", "html_url": "https://github.com/cobyrne09", "followers_url": "https://api.github.com/users/cobyrne09/followers", "following_url": "https://api.github.com/users/cobyrne09/following{/other_user}", "gists_url": "https://api.github.com/users/cobyrne09/gists{/gist_id}", "starred_url": "https://api.github.com/users/cobyrne09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cobyrne09/subscriptions", "organizations_url": "https://api.github.com/users/cobyrne09/orgs", "repos_url": "https://api.github.com/users/cobyrne09/repos", "events_url": "https://api.github.com/users/cobyrne09/events{/privacy}", "received_events_url": "https://api.github.com/users/cobyrne09/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-03T23:17:44Z", "updated_at": "2020-01-06T01:48:39Z", "closed_at": "2020-01-04T15:46:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to create a stream for a team/organization of users, apart from the follow/unfollow functionality. Each member of the team would be able to see the activity of their respective team. My team/organization model is not involved in any actions, it is simply an abstraction layer of my user model. My 'actors' are always users, and never teams as a whole. Can this be achieved through 'Actor Streams' or another existing method? Or will I need to create a custom stream? Looking through the code base, I can't figure out how to achieve this, and there don't seem to be others interested in this based on the github issues. I would have thought it was a moderately common use case \ud83e\udd37\u200d\u2642\ufe0f.\r\n\r\nI recognize I could 'hack' this by forcing every user to follow every other user on the team, and then using a 'User stream', but I would prefer not to do this, for reasons that are not relevant to the question. \r\n\r\nThanks for any guidance and for a great package. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/441", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/441/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/441/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/441", "id": 536675161, "node_id": "MDU6SXNzdWU1MzY2NzUxNjE=", "number": 441, "title": "Nullify Actor (Potential feature?)", "user": {"login": "ReproKillbot", "id": 34966484, "node_id": "MDQ6VXNlcjM0OTY2NDg0", "avatar_url": "https://avatars3.githubusercontent.com/u/34966484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ReproKillbot", "html_url": "https://github.com/ReproKillbot", "followers_url": "https://api.github.com/users/ReproKillbot/followers", "following_url": "https://api.github.com/users/ReproKillbot/following{/other_user}", "gists_url": "https://api.github.com/users/ReproKillbot/gists{/gist_id}", "starred_url": "https://api.github.com/users/ReproKillbot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ReproKillbot/subscriptions", "organizations_url": "https://api.github.com/users/ReproKillbot/orgs", "repos_url": "https://api.github.com/users/ReproKillbot/repos", "events_url": "https://api.github.com/users/ReproKillbot/events{/privacy}", "received_events_url": "https://api.github.com/users/ReproKillbot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-11T23:43:21Z", "updated_at": "2019-12-17T21:22:58Z", "closed_at": "2019-12-17T21:22:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "We want to make Actions for a user that is not logged in, an anonymous user. Our plan to do this is to make user nullable on ```Action```. Does this plan make sense, are there any unintended consequences to this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/438", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/438/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/438/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/438", "id": 534373699, "node_id": "MDU6SXNzdWU1MzQzNzM2OTk=", "number": 438, "title": "Django3 Removed private Python 2 compatibility APIs\u00b6", "user": {"login": "mzdehbashi", "id": 42932059, "node_id": "MDQ6VXNlcjQyOTMyMDU5", "avatar_url": "https://avatars2.githubusercontent.com/u/42932059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzdehbashi", "html_url": "https://github.com/mzdehbashi", "followers_url": "https://api.github.com/users/mzdehbashi/followers", "following_url": "https://api.github.com/users/mzdehbashi/following{/other_user}", "gists_url": "https://api.github.com/users/mzdehbashi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzdehbashi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzdehbashi/subscriptions", "organizations_url": "https://api.github.com/users/mzdehbashi/orgs", "repos_url": "https://api.github.com/users/mzdehbashi/repos", "events_url": "https://api.github.com/users/mzdehbashi/events{/privacy}", "received_events_url": "https://api.github.com/users/mzdehbashi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/justquick/django-activity-stream/milestones/2", "html_url": "https://github.com/justquick/django-activity-stream/milestone/2", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/milestones/2/labels", "id": 4229000, "node_id": "MDk6TWlsZXN0b25lNDIyOTAwMA==", "number": 2, "title": "0.9.0", "description": "", "creator": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "open_issues": 6, "closed_issues": 2, "state": "open", "created_at": "2019-04-15T01:44:19Z", "updated_at": "2019-12-12T12:44:07Z", "due_on": "2019-06-30T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2019-12-07T08:37:19Z", "updated_at": "2019-12-12T12:44:07Z", "closed_at": "2019-12-12T12:44:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django3 removed \"django.utils.encoding.python_2_unicode_compatible()\" and it is used in \r\nactsream/models.py\r\nis there any plan to fix this in future?\r\n\r\nhttps://docs.djangoproject.com/en/3.0/releases/3.0/#removed-private-python-2-compatibility-apis", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/433", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/433/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/433/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/433", "id": 446442040, "node_id": "MDU6SXNzdWU0NDY0NDIwNDA=", "number": 433, "title": "Can you post a new version on pypi?", "user": {"login": "missuor", "id": 4561294, "node_id": "MDQ6VXNlcjQ1NjEyOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4561294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/missuor", "html_url": "https://github.com/missuor", "followers_url": "https://api.github.com/users/missuor/followers", "following_url": "https://api.github.com/users/missuor/following{/other_user}", "gists_url": "https://api.github.com/users/missuor/gists{/gist_id}", "starred_url": "https://api.github.com/users/missuor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/missuor/subscriptions", "organizations_url": "https://api.github.com/users/missuor/orgs", "repos_url": "https://api.github.com/users/missuor/repos", "events_url": "https://api.github.com/users/missuor/events{/privacy}", "received_events_url": "https://api.github.com/users/missuor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-21T06:41:19Z", "updated_at": "2020-05-20T14:51:56Z", "closed_at": "2019-05-21T07:36:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": " Tags\r\n0.7.0  \u2026\r\n on 14 Dec 2018   b2f651d   zip   tar.gz\r\n0.6.5  \u2026\r\n on 21 Jan 2018   f8f71d2   zip   tar.gz", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/431", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/431/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/431/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/431", "id": 430164431, "node_id": "MDU6SXNzdWU0MzAxNjQ0MzE=", "number": 431, "title": "Docs clarification about how to use custom data in actions", "user": {"login": "timur-orudzhov", "id": 3646772, "node_id": "MDQ6VXNlcjM2NDY3NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3646772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timur-orudzhov", "html_url": "https://github.com/timur-orudzhov", "followers_url": "https://api.github.com/users/timur-orudzhov/followers", "following_url": "https://api.github.com/users/timur-orudzhov/following{/other_user}", "gists_url": "https://api.github.com/users/timur-orudzhov/gists{/gist_id}", "starred_url": "https://api.github.com/users/timur-orudzhov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timur-orudzhov/subscriptions", "organizations_url": "https://api.github.com/users/timur-orudzhov/orgs", "repos_url": "https://api.github.com/users/timur-orudzhov/repos", "events_url": "https://api.github.com/users/timur-orudzhov/events{/privacy}", "received_events_url": "https://api.github.com/users/timur-orudzhov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-07T16:24:53Z", "updated_at": "2019-07-05T18:05:26Z", "closed_at": "2019-07-05T18:05:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I suppose, docs needs clarification about how to use custom data in actions:\r\n\r\nFirst of all, for json field support django-actstream uses two third party libraries: django-jsonfield, django-jsonfield-compat.\r\n\r\nSecond, i think would be useful, to point out how to disable jsonfield-compat, cause django > 1.9 already has json field implementation, if postgresql is used as db, because these fields implementation behaves differently: jsonfield-compat renders itself as string, while django's json field renders itself as json object. In order to disable jsonfield-compat, we should set this in settings and rerun migrations:\r\n\r\n```python\r\n# settings for disable jsonfield-compat and use django's built-in json field\r\nUSE_NATIVE_JSONFIELD = True\r\n```\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/425", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/425/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/425/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/425", "id": 417272655, "node_id": "MDU6SXNzdWU0MTcyNzI2NTU=", "number": 425, "title": "name 'request' is not defined", "user": {"login": "maciejurm", "id": 33297273, "node_id": "MDQ6VXNlcjMzMjk3Mjcz", "avatar_url": "https://avatars3.githubusercontent.com/u/33297273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maciejurm", "html_url": "https://github.com/maciejurm", "followers_url": "https://api.github.com/users/maciejurm/followers", "following_url": "https://api.github.com/users/maciejurm/following{/other_user}", "gists_url": "https://api.github.com/users/maciejurm/gists{/gist_id}", "starred_url": "https://api.github.com/users/maciejurm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maciejurm/subscriptions", "organizations_url": "https://api.github.com/users/maciejurm/orgs", "repos_url": "https://api.github.com/users/maciejurm/repos", "events_url": "https://api.github.com/users/maciejurm/events{/privacy}", "received_events_url": "https://api.github.com/users/maciejurm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-05T12:23:52Z", "updated_at": "2019-03-09T00:52:33Z", "closed_at": "2019-03-09T00:52:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I try to add request.user like documentation said:\r\n`action.send(request.user, verb='joined', target=group)`\r\n\r\nBut when I add request.user to signal and try to save object error appear: \"name 'request' is not defined\". User model in app.py is registered. \r\n\r\nMy model and signal:\r\n`class Subject(models.Model):\r\n    title = models.CharField(max_length=255)\r\n    embed = models.URLField(max_length=255, blank=True, null=True)\r\n    slug = AutoSlugField(populate_from='title', unique=True)\r\n    body = models.TextField()\r\n    image = models.ImageField(upload_to='subject')\r\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\r\n    active = models.BooleanField(default=True)\r\n    created_at = models.DateTimeField(auto_now_add=True)\r\n    board = models.ForeignKey(Board, on_delete=models.CASCADE, related_name='subjects')\r\n\r\n    class Meta:\r\n        verbose_name = 'Post'\r\n\r\n    def get_absolute_url(self):\r\n        return reverse('subject_detail',\r\n                       args=[self.slug])\r\n\r\ndef my_handler(sender, instance, created, **kwargs):\r\n    action.send(request.user, instance, verb='doda\u0142 post')\r\n\r\npost_save.connect(my_handler, sender=Subject)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/424", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/424/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/424/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/424", "id": 406383378, "node_id": "MDU6SXNzdWU0MDYzODMzNzg=", "number": 424, "title": "Try for or force Django's native JSONField", "user": {"login": "raphaelyancey", "id": 5130438, "node_id": "MDQ6VXNlcjUxMzA0Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5130438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphaelyancey", "html_url": "https://github.com/raphaelyancey", "followers_url": "https://api.github.com/users/raphaelyancey/followers", "following_url": "https://api.github.com/users/raphaelyancey/following{/other_user}", "gists_url": "https://api.github.com/users/raphaelyancey/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphaelyancey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphaelyancey/subscriptions", "organizations_url": "https://api.github.com/users/raphaelyancey/orgs", "repos_url": "https://api.github.com/users/raphaelyancey/repos", "events_url": "https://api.github.com/users/raphaelyancey/events{/privacy}", "received_events_url": "https://api.github.com/users/raphaelyancey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-04T15:31:23Z", "updated_at": "2019-02-04T15:47:56Z", "closed_at": "2019-02-04T15:47:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "`django-jsonfield` [conflicts](https://bitbucket.org/schinckel/django-jsonfield/issues/57/cannot-use-in-the-same-project-as-djangos) with [Django's native JSONField](https://docs.djangoproject.com/en/1.11/ref/contrib/postgres/fields/#django.contrib.postgres.fields.JSONField), and instead of converting the codebase I'd like `actstream` to use it if possible.\r\n\r\nShould we maybe create a `JSONFIELD_IMPLEMENTATION` setting to force which JSONField the module will use, since we cannot check for sure if the user is running its database(s) on PostgreSQL? And defaults to `django-jsonfield`'s implementation.\r\n\r\n```python\r\n# settings.py\r\n\r\nfrom django.contrib.postgres.fields import JSONField\r\n\r\nACTSTREAM_SETTINGS = {\r\n    # ...\r\n    'JSONFIELD_IMPLEMENTATION': JSONField\r\n    # ...\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/415", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/415/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/415/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/415", "id": 387357363, "node_id": "MDU6SXNzdWUzODczNTczNjM=", "number": 415, "title": "Supporting django-mysql's JSONField", "user": {"login": "cb109", "id": 6052590, "node_id": "MDQ6VXNlcjYwNTI1OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6052590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cb109", "html_url": "https://github.com/cb109", "followers_url": "https://api.github.com/users/cb109/followers", "following_url": "https://api.github.com/users/cb109/following{/other_user}", "gists_url": "https://api.github.com/users/cb109/gists{/gist_id}", "starred_url": "https://api.github.com/users/cb109/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cb109/subscriptions", "organizations_url": "https://api.github.com/users/cb109/orgs", "repos_url": "https://api.github.com/users/cb109/repos", "events_url": "https://api.github.com/users/cb109/events{/privacy}", "received_events_url": "https://api.github.com/users/cb109/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-04T16:01:00Z", "updated_at": "2018-12-11T15:58:24Z", "closed_at": "2018-12-11T15:58:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We'd like to use the option to attach arbitrary contextual information to Actions https://django-activity-stream.readthedocs.io/en/latest/data.html#adding-custom-data-to-your-actions.\r\n\r\nI see that this already supports both PostgreSQL's JSONField as well as other databases using `django-jsonfield` as a compatibility layer in between. We are using MySQL with `django-mysql` on top, which has a JSONField of its own: https://django-mysql.readthedocs.io/en/latest/model_fields/json_field.html\r\n\r\nWe'd like to avoid using two different JSONField implementations and I am thinking of adding additional, optional support for the latter to this library. If you (aka the users/maintainers) have any opinion on this, whether you think it's a good or bad idea, please let me know.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/406", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/406/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/406/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/406", "id": 356266555, "node_id": "MDU6SXNzdWUzNTYyNjY1NTU=", "number": 406, "title": "Stream returned using model_stream method has always a null action object", "user": {"login": "faxioman", "id": 943944, "node_id": "MDQ6VXNlcjk0Mzk0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/943944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faxioman", "html_url": "https://github.com/faxioman", "followers_url": "https://api.github.com/users/faxioman/followers", "following_url": "https://api.github.com/users/faxioman/following{/other_user}", "gists_url": "https://api.github.com/users/faxioman/gists{/gist_id}", "starred_url": "https://api.github.com/users/faxioman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faxioman/subscriptions", "organizations_url": "https://api.github.com/users/faxioman/orgs", "repos_url": "https://api.github.com/users/faxioman/repos", "events_url": "https://api.github.com/users/faxioman/events{/privacy}", "received_events_url": "https://api.github.com/users/faxioman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-02T09:09:30Z", "updated_at": "2018-09-03T20:19:53Z", "closed_at": "2018-09-03T20:19:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm sending an action like this\r\n```\r\naction.send(request.user, verb='refilled', action_object=self.product)  # self.product is an instance of ShoeProduct\r\n```\r\nThe action is correctly sent and these are my action data at db level:\r\n\r\n```\r\nid\tactor_object_id\tverb\tdescription\ttarget_object_id\taction_object_object_id\ttimestamp\tpublic\taction_object_content_type_id\tactor_content_type_id\ttarget_content_type_id\r\n9\t1\trefilled\t\t\t8479\t2018-08-31 22:04:03.045199+02\tt\t91\t12\t\r\n```\r\n\r\nUsing model_stream in this way:\r\n\r\n```\r\nmodel_stream(ShoeProduct)[0]\r\n```\r\n\r\nI'm getting:\r\n\r\n```\r\n<Action: admin@rapidosoft.it refilled 1 minute ago>\r\n```\r\nand I can see the the action_object property is always None (action_object_object_id and action_object_content_type_id are None too)\r\n\r\nDjango: 1.11.9\r\nPython: 3.5.1\r\ndjango-activity-stream: 0.6.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/404", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/404/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/404/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/404", "id": 351203178, "node_id": "MDU6SXNzdWUzNTEyMDMxNzg=", "number": 404, "title": "Did getstream.io sponsored this app to delay development", "user": {"login": "gotexis", "id": 38595828, "node_id": "MDQ6VXNlcjM4NTk1ODI4", "avatar_url": "https://avatars3.githubusercontent.com/u/38595828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gotexis", "html_url": "https://github.com/gotexis", "followers_url": "https://api.github.com/users/gotexis/followers", "following_url": "https://api.github.com/users/gotexis/following{/other_user}", "gists_url": "https://api.github.com/users/gotexis/gists{/gist_id}", "starred_url": "https://api.github.com/users/gotexis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gotexis/subscriptions", "organizations_url": "https://api.github.com/users/gotexis/orgs", "repos_url": "https://api.github.com/users/gotexis/repos", "events_url": "https://api.github.com/users/gotexis/events{/privacy}", "received_events_url": "https://api.github.com/users/gotexis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-16T13:22:01Z", "updated_at": "2018-08-16T13:50:56Z", "closed_at": "2018-08-16T13:50:38Z", "author_association": "NONE", "active_lock_reason": "too heated", "body": "What incentive could a proprietary company back an open source alternative?\r\n\r\nTo bribe the authors so to make it shitty?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/402", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/402/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/402/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/402", "id": 349011041, "node_id": "MDU6SXNzdWUzNDkwMTEwNDE=", "number": 402, "title": "Django 2.1 incompatibility ?", "user": {"login": "Agi-dev", "id": 30291367, "node_id": "MDQ6VXNlcjMwMjkxMzY3", "avatar_url": "https://avatars0.githubusercontent.com/u/30291367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Agi-dev", "html_url": "https://github.com/Agi-dev", "followers_url": "https://api.github.com/users/Agi-dev/followers", "following_url": "https://api.github.com/users/Agi-dev/following{/other_user}", "gists_url": "https://api.github.com/users/Agi-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/Agi-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Agi-dev/subscriptions", "organizations_url": "https://api.github.com/users/Agi-dev/orgs", "repos_url": "https://api.github.com/users/Agi-dev/repos", "events_url": "https://api.github.com/users/Agi-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/Agi-dev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-09T07:34:35Z", "updated_at": "2018-08-10T11:05:21Z", "closed_at": "2018-08-09T13:56:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've upgraded my django version to 2.1 and I've got this message when I launch 'python manage.py' :\r\n\r\n`\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 15, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/Users/francois/.local/share/virtualenvs/tao-back-54Rbleea/lib/python3.6/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/Users/francois/.local/share/virtualenvs/tao-back-54Rbleea/lib/python3.6/site-packages/django/core/management/__init__.py\", line 357, in execute\r\n    django.setup()\r\n  File \"/Users/francois/.local/share/virtualenvs/tao-back-54Rbleea/lib/python3.6/site-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/Users/francois/.local/share/virtualenvs/tao-back-54Rbleea/lib/python3.6/site-packages/django/apps/registry.py\", line 112, in populate\r\n    app_config.import_models()\r\n  File \"/Users/francois/.local/share/virtualenvs/tao-back-54Rbleea/lib/python3.6/site-packages/django/apps/config.py\", line 198, in import_models\r\n    self.models_module = import_module(models_module_name)\r\n  File \"/Users/francois/.local/share/virtualenvs/tao-back-54Rbleea/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Users/francois/.local/share/virtualenvs/tao-back-54Rbleea/lib/python3.6/site-packages/actstream/models.py\", line 57, in <module>\r\n    class Action(models.Model):\r\n  File \"/Users/francois/.local/share/virtualenvs/tao-back-54Rbleea/lib/python3.6/site-packages/actstream/models.py\", line 171, in Action\r\n    @models.permalink\r\nAttributeError: module 'django.db.models' has no attribute 'permalink'\r\n`\r\n\r\nWhen I downgrade to Django <2.1, it's working.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/401", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/401/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/401/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/401", "id": 348288432, "node_id": "MDU6SXNzdWUzNDgyODg0MzI=", "number": 401, "title": "Release of 0.6.6 with Django 2.x fixes", "user": {"login": "askoretskiy", "id": 48295, "node_id": "MDQ6VXNlcjQ4Mjk1", "avatar_url": "https://avatars2.githubusercontent.com/u/48295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/askoretskiy", "html_url": "https://github.com/askoretskiy", "followers_url": "https://api.github.com/users/askoretskiy/followers", "following_url": "https://api.github.com/users/askoretskiy/following{/other_user}", "gists_url": "https://api.github.com/users/askoretskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/askoretskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/askoretskiy/subscriptions", "organizations_url": "https://api.github.com/users/askoretskiy/orgs", "repos_url": "https://api.github.com/users/askoretskiy/repos", "events_url": "https://api.github.com/users/askoretskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/askoretskiy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2018-08-07T11:54:34Z", "updated_at": "2019-01-18T21:47:35Z", "closed_at": "2019-01-18T21:31:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Current master branch contains several fixes for newer Django.\r\n\r\nIs there any time plan to release 0.6.6 version?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/400", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/400/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/400/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/400", "id": 347808117, "node_id": "MDU6SXNzdWUzNDc4MDgxMTc=", "number": 400, "title": "Not compatible with django 2.1", "user": {"login": "pupattan", "id": 19246595, "node_id": "MDQ6VXNlcjE5MjQ2NTk1", "avatar_url": "https://avatars3.githubusercontent.com/u/19246595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pupattan", "html_url": "https://github.com/pupattan", "followers_url": "https://api.github.com/users/pupattan/followers", "following_url": "https://api.github.com/users/pupattan/following{/other_user}", "gists_url": "https://api.github.com/users/pupattan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pupattan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pupattan/subscriptions", "organizations_url": "https://api.github.com/users/pupattan/orgs", "repos_url": "https://api.github.com/users/pupattan/repos", "events_url": "https://api.github.com/users/pupattan/events{/privacy}", "received_events_url": "https://api.github.com/users/pupattan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-08-06T07:25:27Z", "updated_at": "2018-11-14T15:09:30Z", "closed_at": "2018-08-06T07:42:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "remote:        Traceback (most recent call last):\r\nremote:          File \"manage.py\", line 23, in <module>\r\nremote:            execute_from_command_line(sys.argv)\r\nremote:          File \"/app/.heroku/python/lib/python3.6/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\nremote:            utility.execute()\r\nremote:          File \"/app/.heroku/python/lib/python3.6/site-packages/django/core/management/__init__.py\", line 357, in execute\r\nremote:            django.setup()\r\nremote:          File \"/app/.heroku/python/lib/python3.6/site-packages/django/__init__.py\", line 24, in setup\r\nremote:            apps.populate(settings.INSTALLED_APPS)\r\nremote:          File \"/app/.heroku/python/lib/python3.6/site-packages/django/apps/registry.py\", line 112, in populate\r\nremote:            app_config.import_models()\r\nremote:          File \"/app/.heroku/python/lib/python3.6/site-packages/django/apps/config.py\", line 198, in import_models\r\nremote:            self.models_module = import_module(models_module_name)\r\nremote:          File \"/app/.heroku/python/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\nremote:            return _bootstrap._gcd_import(name[level:], package, level)\r\nremote:          File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\nremote:          File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\nremote:          File \"<frozen importlib._bootstrap>\", line 955, in _find_and_load_unlocked\r\nremote:          File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\r\nremote:          File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\r\nremote:          File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\nremote:          File \"/app/.heroku/python/lib/python3.6/site-packages/actstream/models.py\", line 57, in <module>\r\nremote:            class Action(models.Model):\r\nremote:          File \"/app/.heroku/python/lib/python3.6/site-packages/actstream/models.py\", line 171, in Action\r\nremote:            @models.permalink\r\nremote:        AttributeError: module 'django.db.models' has no attribute 'permalink'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/398", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/398/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/398/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/398", "id": 346446610, "node_id": "MDU6SXNzdWUzNDY0NDY2MTA=", "number": 398, "title": "Unexpected keyword argument when using user_stream", "user": {"login": "nkprince007", "id": 17202890, "node_id": "MDQ6VXNlcjE3MjAyODkw", "avatar_url": "https://avatars3.githubusercontent.com/u/17202890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkprince007", "html_url": "https://github.com/nkprince007", "followers_url": "https://api.github.com/users/nkprince007/followers", "following_url": "https://api.github.com/users/nkprince007/following{/other_user}", "gists_url": "https://api.github.com/users/nkprince007/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkprince007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkprince007/subscriptions", "organizations_url": "https://api.github.com/users/nkprince007/orgs", "repos_url": "https://api.github.com/users/nkprince007/repos", "events_url": "https://api.github.com/users/nkprince007/events{/privacy}", "received_events_url": "https://api.github.com/users/nkprince007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-01T04:46:04Z", "updated_at": "2018-08-09T21:57:28Z", "closed_at": "2018-08-09T21:57:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Configuration:\r\n- python3.6\r\n- pip freeze output: https://clbin.com/bm27G\r\n\r\nError Info:\r\n\r\n```\r\n----> 1 user_stream(User.objects.last())\r\n\r\n~/project/.venv/lib/python3.6/site-packages/actstream/decorators.py in wrapped(manager, *args, **kwargs)\r\n     20     def wrapped(manager, *args, **kwargs):\r\n     21         offset, limit = kwargs.pop('_offset', None), kwargs.pop('_limit', None)\r\n---> 22         qs = func(manager, *args, **kwargs)\r\n     23         if isinstance(qs, dict):\r\n     24             qs = manager.public(**qs)\r\n\r\n~/project/.venv/lib/python3.6/site-packages/actstream/managers.py in user(self, obj, **kwargs)\r\n    112\r\n    113         if len(actors_by_content_type) + len(others_by_content_type) == 0:\r\n--> 114             return qs.none()\r\n    115\r\n    116         for content_type_id, object_ids in actors_by_content_type.items():\r\n\r\n~/project/.venv/lib/python3.6/site-packages/actstream/gfk.py in none(self)\r\n     50\r\n     51     def none(self):\r\n---> 52         clone = self._clone(klass=EmptyGFKQuerySet)\r\n     53         if hasattr(clone.query, 'set_empty'):\r\n     54             clone.query.set_empty()\r\n\r\nTypeError: _clone() got an unexpected keyword argument 'klass'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/396", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/396/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/396/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/396", "id": 342746560, "node_id": "MDU6SXNzdWUzNDI3NDY1NjA=", "number": 396, "title": "Django2 compatibility", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-19T14:14:25Z", "updated_at": "2018-07-28T17:16:18Z", "closed_at": "2018-07-28T17:16:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am taking note the issue one by one in here. If any experienced developer can guide me through I would appreciated and submit my `PR`\r\n\r\n1. `url.py`\r\n```bash\r\n?: (2_0.W001) Your URL pattern '^activity/' has a route that contains '(?P<', begins with a '^', or ends with a '$'. This was likely an oversight when migrating to django.urls.path().\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/395", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/395/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/395/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/395", "id": 341119275, "node_id": "MDU6SXNzdWUzNDExMTkyNzU=", "number": 395, "title": "Use with django rest", "user": {"login": "KhanMaytok", "id": 5711547, "node_id": "MDQ6VXNlcjU3MTE1NDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5711547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KhanMaytok", "html_url": "https://github.com/KhanMaytok", "followers_url": "https://api.github.com/users/KhanMaytok/followers", "following_url": "https://api.github.com/users/KhanMaytok/following{/other_user}", "gists_url": "https://api.github.com/users/KhanMaytok/gists{/gist_id}", "starred_url": "https://api.github.com/users/KhanMaytok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KhanMaytok/subscriptions", "organizations_url": "https://api.github.com/users/KhanMaytok/orgs", "repos_url": "https://api.github.com/users/KhanMaytok/repos", "events_url": "https://api.github.com/users/KhanMaytok/events{/privacy}", "received_events_url": "https://api.github.com/users/KhanMaytok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-13T18:36:14Z", "updated_at": "2018-07-13T19:26:06Z", "closed_at": "2018-07-13T19:26:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I would like to use the activity stream in a token based auth. How can I migrate from a session based auth? I can migrate some functions, but, for example, I have problems in the `feeds.UserJSONActivityFeed.as_view(),` (returns the activity stream as json)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/394", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/394/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/394/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/394", "id": 340731263, "node_id": "MDU6SXNzdWUzNDA3MzEyNjM=", "number": 394, "title": "Sponsorship", "user": {"login": "nparsons08", "id": 1328388, "node_id": "MDQ6VXNlcjEzMjgzODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1328388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nparsons08", "html_url": "https://github.com/nparsons08", "followers_url": "https://api.github.com/users/nparsons08/followers", "following_url": "https://api.github.com/users/nparsons08/following{/other_user}", "gists_url": "https://api.github.com/users/nparsons08/gists{/gist_id}", "starred_url": "https://api.github.com/users/nparsons08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nparsons08/subscriptions", "organizations_url": "https://api.github.com/users/nparsons08/orgs", "repos_url": "https://api.github.com/users/nparsons08/repos", "events_url": "https://api.github.com/users/nparsons08/events{/privacy}", "received_events_url": "https://api.github.com/users/nparsons08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-12T17:33:25Z", "updated_at": "2018-07-28T18:25:54Z", "closed_at": "2018-07-28T18:25:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey there. I'm interested in sponsoring your project. Please email me at nick@getstream.io to chat further. Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/393", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/393/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/393/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/393", "id": 339899076, "node_id": "MDU6SXNzdWUzMzk4OTkwNzY=", "number": 393, "title": "Action.objects.none() doesn't work in Django 2.0.x", "user": {"login": "tapia", "id": 589897, "node_id": "MDQ6VXNlcjU4OTg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/589897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tapia", "html_url": "https://github.com/tapia", "followers_url": "https://api.github.com/users/tapia/followers", "following_url": "https://api.github.com/users/tapia/following{/other_user}", "gists_url": "https://api.github.com/users/tapia/gists{/gist_id}", "starred_url": "https://api.github.com/users/tapia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tapia/subscriptions", "organizations_url": "https://api.github.com/users/tapia/orgs", "repos_url": "https://api.github.com/users/tapia/repos", "events_url": "https://api.github.com/users/tapia/events{/privacy}", "received_events_url": "https://api.github.com/users/tapia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-10T15:39:45Z", "updated_at": "2018-07-29T04:01:58Z", "closed_at": "2018-07-29T04:01:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I try to make an empty Queryset like this:\r\n\r\n    Action.objects.none()\r\n\r\nI get this error:\r\n\r\n    TypeError: _clone() got an unexpected keyword argument 'klass'\r\n\r\nThis is because in Django 2, `QuerySet._clone()` doesn't receive any parameter. I've monkey-patched `GFKQuerySet` like this, and it works nicely:\r\n\r\n    def none(self):\r\n        clone = self._clone()\r\n        if hasattr(clone.query, 'set_empty'):\r\n            clone.query.set_empty()\r\n        return clone\r\n    \r\n    GFKQuerySet.none = none", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/391", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/391/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/391/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/391", "id": 321523963, "node_id": "MDU6SXNzdWUzMjE1MjM5NjM=", "number": 391, "title": "0.7.0 is not released on pypi", "user": {"login": "mitch104", "id": 9034588, "node_id": "MDQ6VXNlcjkwMzQ1ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9034588?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitch104", "html_url": "https://github.com/mitch104", "followers_url": "https://api.github.com/users/mitch104/followers", "following_url": "https://api.github.com/users/mitch104/following{/other_user}", "gists_url": "https://api.github.com/users/mitch104/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitch104/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitch104/subscriptions", "organizations_url": "https://api.github.com/users/mitch104/orgs", "repos_url": "https://api.github.com/users/mitch104/repos", "events_url": "https://api.github.com/users/mitch104/events{/privacy}", "received_events_url": "https://api.github.com/users/mitch104/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-09T10:56:00Z", "updated_at": "2018-05-31T05:58:03Z", "closed_at": "2018-05-09T11:02:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Similar to https://github.com/justquick/django-activity-stream/issues/367 version 0.7.0 is on GitHub but only version 0.6.5 is released on pypi", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/377", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/377/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/377/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/377", "id": 302042414, "node_id": "MDU6SXNzdWUzMDIwNDI0MTQ=", "number": 377, "title": "Newsfeed New Pattern Issue", "user": {"login": "bobozar", "id": 25740878, "node_id": "MDQ6VXNlcjI1NzQwODc4", "avatar_url": "https://avatars2.githubusercontent.com/u/25740878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobozar", "html_url": "https://github.com/bobozar", "followers_url": "https://api.github.com/users/bobozar/followers", "following_url": "https://api.github.com/users/bobozar/following{/other_user}", "gists_url": "https://api.github.com/users/bobozar/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobozar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobozar/subscriptions", "organizations_url": "https://api.github.com/users/bobozar/orgs", "repos_url": "https://api.github.com/users/bobozar/repos", "events_url": "https://api.github.com/users/bobozar/events{/privacy}", "received_events_url": "https://api.github.com/users/bobozar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-03T23:41:43Z", "updated_at": "2018-03-04T05:34:56Z", "closed_at": "2018-03-04T05:34:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a model called 'POSTNEWS' and it has been registered with actstream alongside USER model. I want to achieve the same or similar newsfeed pattern like Twitter.\r\n\r\nI created a template that shows all item in 'POSTNEWS', so when a user visits url '/timeline/', all items in 'POSTNEWS' model will be displayed in template 'allnews.html'.\r\n\r\nNow, I want this-  when a user lets call the user 'Jack', visits /timeline/, he should only see his items and items of people he is following and items of people who are following him.\r\n\r\nCan I achieve this process with this package? I read through the docs but I'm yet to understand or know how to go about this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/374", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/374/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/374/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/374", "id": 296147915, "node_id": "MDU6SXNzdWUyOTYxNDc5MTU=", "number": 374, "title": "Project Activity Stream", "user": {"login": "ramezkabbani", "id": 28882385, "node_id": "MDQ6VXNlcjI4ODgyMzg1", "avatar_url": "https://avatars3.githubusercontent.com/u/28882385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramezkabbani", "html_url": "https://github.com/ramezkabbani", "followers_url": "https://api.github.com/users/ramezkabbani/followers", "following_url": "https://api.github.com/users/ramezkabbani/following{/other_user}", "gists_url": "https://api.github.com/users/ramezkabbani/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramezkabbani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramezkabbani/subscriptions", "organizations_url": "https://api.github.com/users/ramezkabbani/orgs", "repos_url": "https://api.github.com/users/ramezkabbani/repos", "events_url": "https://api.github.com/users/ramezkabbani/events{/privacy}", "received_events_url": "https://api.github.com/users/ramezkabbani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-11T00:42:42Z", "updated_at": "2018-04-10T04:56:07Z", "closed_at": "2018-04-10T04:56:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Has anyone used this as a project level activity stream? That is a stream of all registered models filtered by project pk. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/371", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/371/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/371/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/371", "id": 293400683, "node_id": "MDU6SXNzdWUyOTM0MDA2ODM=", "number": 371, "title": "TypeError, Can't load '/activity/' view", "user": {"login": "bennett-jacob", "id": 13636529, "node_id": "MDQ6VXNlcjEzNjM2NTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/13636529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bennett-jacob", "html_url": "https://github.com/bennett-jacob", "followers_url": "https://api.github.com/users/bennett-jacob/followers", "following_url": "https://api.github.com/users/bennett-jacob/following{/other_user}", "gists_url": "https://api.github.com/users/bennett-jacob/gists{/gist_id}", "starred_url": "https://api.github.com/users/bennett-jacob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bennett-jacob/subscriptions", "organizations_url": "https://api.github.com/users/bennett-jacob/orgs", "repos_url": "https://api.github.com/users/bennett-jacob/repos", "events_url": "https://api.github.com/users/bennett-jacob/events{/privacy}", "received_events_url": "https://api.github.com/users/bennett-jacob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-01T04:33:49Z", "updated_at": "2018-05-27T18:49:15Z", "closed_at": "2018-04-03T07:47:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the error `_clone() got an unexpected keyword argument 'klass'` when loading the `/activity/` view in Django 2.0. All other things work as expected (I think). I can't load the activity view.\r\n\r\n```\r\nTraceback:\r\n\r\nFile \"/home/ec2-user/environment/quest/venv/local/lib/python3.6/dist-packages/django/core/handlers/exception.py\" in inner\r\n  35.             response = get_response(request)\r\n\r\nFile \"/home/ec2-user/environment/quest/venv/local/lib/python3.6/dist-packages/django/core/handlers/base.py\" in _get_response\r\n  128.                 response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/home/ec2-user/environment/quest/venv/local/lib/python3.6/dist-packages/django/core/handlers/base.py\" in _get_response\r\n  126.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/home/ec2-user/environment/quest/venv/local/lib/python3.6/dist-packages/django/contrib/auth/decorators.py\" in _wrapped_view\r\n  21.                 return view_func(request, *args, **kwargs)\r\n\r\nFile \"/home/ec2-user/environment/quest/venv/local/lib/python3.6/dist-packages/actstream/views.py\" in stream\r\n  54.             'action_list': models.user_stream(request.user)\r\n\r\nFile \"/home/ec2-user/environment/quest/venv/local/lib/python3.6/dist-packages/actstream/decorators.py\" in wrapped\r\n  22.         qs = func(manager, *args, **kwargs)\r\n\r\nFile \"/home/ec2-user/environment/quest/venv/local/lib/python3.6/dist-packages/actstream/managers.py\" in user\r\n  114.             return qs.none()\r\n\r\nFile \"/home/ec2-user/environment/quest/venv/local/lib/python3.6/dist-packages/actstream/gfk.py\" in none\r\n  52.         clone = self._clone(klass=EmptyGFKQuerySet)\r\n\r\nException Type: TypeError at /activity/\r\nException Value: _clone() got an unexpected keyword argument 'klass'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/370", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/370/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/370/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/370", "id": 290517317, "node_id": "MDU6SXNzdWUyOTA1MTczMTc=", "number": 370, "title": "django import missing", "user": {"login": "luiscastillocr", "id": 3835089, "node_id": "MDQ6VXNlcjM4MzUwODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3835089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luiscastillocr", "html_url": "https://github.com/luiscastillocr", "followers_url": "https://api.github.com/users/luiscastillocr/followers", "following_url": "https://api.github.com/users/luiscastillocr/following{/other_user}", "gists_url": "https://api.github.com/users/luiscastillocr/gists{/gist_id}", "starred_url": "https://api.github.com/users/luiscastillocr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luiscastillocr/subscriptions", "organizations_url": "https://api.github.com/users/luiscastillocr/orgs", "repos_url": "https://api.github.com/users/luiscastillocr/repos", "events_url": "https://api.github.com/users/luiscastillocr/events{/privacy}", "received_events_url": "https://api.github.com/users/luiscastillocr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-22T15:59:22Z", "updated_at": "2018-03-24T10:05:10Z", "closed_at": "2018-03-24T10:05:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think there is a missing import in https://github.com/justquick/django-activity-stream/blob/master/actstream/registry.py\r\n\r\n`\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 9, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/var/lib/jenkins/workspace/wikirealty/lib/python3.4/site-packages/django/core/management/__init__.py\", line 364, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/var/lib/jenkins/workspace/wikirealty/lib/python3.4/site-packages/django/core/management/__init__.py\", line 338, in execute\r\n    django.setup()\r\n  File \"/var/lib/jenkins/workspace/wikirealty/lib/python3.4/site-packages/django/__init__.py\", line 27, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/var/lib/jenkins/workspace/wikirealty/lib/python3.4/site-packages/django/apps/registry.py\", line 116, in populate\r\n    app_config.ready()\r\n  File \"/var/lib/jenkins/workspace/wikirealty-staging-api/apps/activity_feed/apps.py\", line 13, in ready\r\n    registry.register(User)\r\n  File \"/var/lib/jenkins/workspace/wikirealty/lib/python3.4/site-packages/actstream/registry.py\", line 90, in register\r\n    self[model_class] = setup_generic_relations(model_class)\r\n  File \"/var/lib/jenkins/workspace/wikirealty/lib/python3.4/site-packages/actstream/registry.py\", line 30, in setup_generic_relations\r\n    if django.VERSION[:2] >= (1, 8):\r\nNameError: name 'django' is not defined\r\n`\r\n0.6.5 seems to be okay though\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/367", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/367/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/367/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/367", "id": 288774730, "node_id": "MDU6SXNzdWUyODg3NzQ3MzA=", "number": 367, "title": "Recent release mismatch: 0.6.4 and 0.6.5", "user": {"login": "cjerdonek", "id": 355822, "node_id": "MDQ6VXNlcjM1NTgyMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/355822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjerdonek", "html_url": "https://github.com/cjerdonek", "followers_url": "https://api.github.com/users/cjerdonek/followers", "following_url": "https://api.github.com/users/cjerdonek/following{/other_user}", "gists_url": "https://api.github.com/users/cjerdonek/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjerdonek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjerdonek/subscriptions", "organizations_url": "https://api.github.com/users/cjerdonek/orgs", "repos_url": "https://api.github.com/users/cjerdonek/repos", "events_url": "https://api.github.com/users/cjerdonek/events{/privacy}", "received_events_url": "https://api.github.com/users/cjerdonek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-01-16T03:25:15Z", "updated_at": "2018-01-21T11:18:48Z", "closed_at": "2018-01-21T04:30:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "On PyPI, the latest release is 0.6.4 uploaded on 2017-07-23:\r\nhttps://pypi.python.org/pypi/django-activity-stream\r\n\r\nHowever, the GitHub project doesn't show a 0.6.4 release, so it's not clear what SHA 0.6.4 on PyPI corresponds to:\r\nhttps://github.com/justquick/django-activity-stream/releases\r\n\r\nAlso, GitHub shows a 0.6.5 release from December 2017 that isn't on PyPI, so it's also a little confusing as to how these two releases relate to each other. For example, is 0.6.4 on PyPI supposed to be the same as 0.6.5 on GitHub? That would explain why each is only released on one and not the other.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/364", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/364/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/364/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/364/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/364", "id": 283107758, "node_id": "MDU6SXNzdWUyODMxMDc3NTg=", "number": 364, "title": "Move runtests outside of app package", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/justquick/django-activity-stream/milestones/1", "html_url": "https://github.com/justquick/django-activity-stream/milestone/1", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/milestones/1/labels", "id": 3254885, "node_id": "MDk6TWlsZXN0b25lMzI1NDg4NQ==", "number": 1, "title": "0.7.0", "description": "support for Django 1.11 LTS+ 2.1+ only.", "creator": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2018-04-10T06:59:31Z", "updated_at": "2019-04-15T01:48:42Z", "due_on": "2019-01-31T08:00:00Z", "closed_at": "2019-04-15T01:48:42Z"}, "comments": 0, "created_at": "2017-12-19T05:20:04Z", "updated_at": "2018-04-10T07:01:20Z", "closed_at": "2018-04-10T04:36:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/361", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/361/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/361/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/361", "id": 279593350, "node_id": "MDU6SXNzdWUyNzk1OTMzNTA=", "number": 361, "title": "Django 2.0 Incompatibilities", "user": {"login": "guilhermej", "id": 8609457, "node_id": "MDQ6VXNlcjg2MDk0NTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/8609457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guilhermej", "html_url": "https://github.com/guilhermej", "followers_url": "https://api.github.com/users/guilhermej/followers", "following_url": "https://api.github.com/users/guilhermej/following{/other_user}", "gists_url": "https://api.github.com/users/guilhermej/gists{/gist_id}", "starred_url": "https://api.github.com/users/guilhermej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guilhermej/subscriptions", "organizations_url": "https://api.github.com/users/guilhermej/orgs", "repos_url": "https://api.github.com/users/guilhermej/repos", "events_url": "https://api.github.com/users/guilhermej/events{/privacy}", "received_events_url": "https://api.github.com/users/guilhermej/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/justquick/django-activity-stream/milestones/1", "html_url": "https://github.com/justquick/django-activity-stream/milestone/1", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/milestones/1/labels", "id": 3254885, "node_id": "MDk6TWlsZXN0b25lMzI1NDg4NQ==", "number": 1, "title": "0.7.0", "description": "support for Django 1.11 LTS+ 2.1+ only.", "creator": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2018-04-10T06:59:31Z", "updated_at": "2019-04-15T01:48:42Z", "due_on": "2019-01-31T08:00:00Z", "closed_at": "2019-04-15T01:48:42Z"}, "comments": 4, "created_at": "2017-12-06T01:32:16Z", "updated_at": "2018-04-10T07:02:05Z", "closed_at": "2017-12-19T05:19:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django 2.0 was released. The first problema that I face was a deprecated module:\r\ndjango.core.urlresolvers. now it is django.urls\r\n\r\nThere is a prevision to give Django 2 suport?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/360", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/360/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/360/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/360", "id": 275705946, "node_id": "MDU6SXNzdWUyNzU3MDU5NDY=", "number": 360, "title": "Scalability of django-activity-stream", "user": {"login": "JRafiei", "id": 13350419, "node_id": "MDQ6VXNlcjEzMzUwNDE5", "avatar_url": "https://avatars1.githubusercontent.com/u/13350419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JRafiei", "html_url": "https://github.com/JRafiei", "followers_url": "https://api.github.com/users/JRafiei/followers", "following_url": "https://api.github.com/users/JRafiei/following{/other_user}", "gists_url": "https://api.github.com/users/JRafiei/gists{/gist_id}", "starred_url": "https://api.github.com/users/JRafiei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JRafiei/subscriptions", "organizations_url": "https://api.github.com/users/JRafiei/orgs", "repos_url": "https://api.github.com/users/JRafiei/repos", "events_url": "https://api.github.com/users/JRafiei/events{/privacy}", "received_events_url": "https://api.github.com/users/JRafiei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/justquick/django-activity-stream/milestones/1", "html_url": "https://github.com/justquick/django-activity-stream/milestone/1", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/milestones/1/labels", "id": 3254885, "node_id": "MDk6TWlsZXN0b25lMzI1NDg4NQ==", "number": 1, "title": "0.7.0", "description": "support for Django 1.11 LTS+ 2.1+ only.", "creator": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2018-04-10T06:59:31Z", "updated_at": "2019-04-15T01:48:42Z", "due_on": "2019-01-31T08:00:00Z", "closed_at": "2019-04-15T01:48:42Z"}, "comments": 3, "created_at": "2017-11-21T13:08:54Z", "updated_at": "2018-04-25T03:24:19Z", "closed_at": "2018-04-25T03:24:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! We're trying to build a social network using django and I was looking in the available solutions in the python community. There seems to be two main projects about activity streams and news feeds. this app and the stream framework.\r\n\r\nAs I read the documents, I must say that the documentation is very well written and clear to follow. So we're considering to use activity-stream for our project. I'm just concerned about the scalability of using the app.\r\n\r\nCan anyone provide an estimate about its scalability? Do we need to  use nosql databases like Redis or Cassandra in the future and if so is that possible with django-activity-stream?\r\nI coudn't find a clear answer to this questions, especially about the scalability, so I really appreciate any guide or suggestions about this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/357", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/357/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/357/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/357", "id": 266878598, "node_id": "MDU6SXNzdWUyNjY4Nzg1OTg=", "number": 357, "title": "display_action, render_to_string and context isolation", "user": {"login": "fabrixxm", "id": 309361, "node_id": "MDQ6VXNlcjMwOTM2MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/309361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabrixxm", "html_url": "https://github.com/fabrixxm", "followers_url": "https://api.github.com/users/fabrixxm/followers", "following_url": "https://api.github.com/users/fabrixxm/following{/other_user}", "gists_url": "https://api.github.com/users/fabrixxm/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabrixxm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabrixxm/subscriptions", "organizations_url": "https://api.github.com/users/fabrixxm/orgs", "repos_url": "https://api.github.com/users/fabrixxm/repos", "events_url": "https://api.github.com/users/fabrixxm/events{/privacy}", "received_events_url": "https://api.github.com/users/fabrixxm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-19T15:08:37Z", "updated_at": "2018-01-21T11:08:07Z", "closed_at": "2018-01-21T11:08:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "commit 1cd38f2a replace the context with a fresh dict.\r\n\r\nI think it's related to #328\u00a0and #342 (I can't find more details about the change)\r\n\r\nProblem is, that change isolates completely the action template from the context it will be inserted.\r\n\r\nA quick example: I want to show the actor name as \"You\" if the actor is same as logged in user. I don't have the original context anymore, I can't access request.user...\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/355", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/355/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/355/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/355", "id": 264469060, "node_id": "MDU6SXNzdWUyNjQ0NjkwNjA=", "number": 355, "title": "django 2.0.x support and drop versions reaching EOL", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/justquick/django-activity-stream/milestones/1", "html_url": "https://github.com/justquick/django-activity-stream/milestone/1", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/milestones/1/labels", "id": 3254885, "node_id": "MDk6TWlsZXN0b25lMzI1NDg4NQ==", "number": 1, "title": "0.7.0", "description": "support for Django 1.11 LTS+ 2.1+ only.", "creator": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2018-04-10T06:59:31Z", "updated_at": "2019-04-15T01:48:42Z", "due_on": "2019-01-31T08:00:00Z", "closed_at": "2019-04-15T01:48:42Z"}, "comments": 7, "created_at": "2017-10-11T06:19:13Z", "updated_at": "2018-04-10T07:02:35Z", "closed_at": "2018-04-10T04:56:27Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/354", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/354/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/354/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/354", "id": 261948147, "node_id": "MDU6SXNzdWUyNjE5NDgxNDc=", "number": 354, "title": "[Question] use small integer for verbs?", "user": {"login": "ralphite", "id": 3046804, "node_id": "MDQ6VXNlcjMwNDY4MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3046804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralphite", "html_url": "https://github.com/ralphite", "followers_url": "https://api.github.com/users/ralphite/followers", "following_url": "https://api.github.com/users/ralphite/following{/other_user}", "gists_url": "https://api.github.com/users/ralphite/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralphite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralphite/subscriptions", "organizations_url": "https://api.github.com/users/ralphite/orgs", "repos_url": "https://api.github.com/users/ralphite/repos", "events_url": "https://api.github.com/users/ralphite/events{/privacy}", "received_events_url": "https://api.github.com/users/ralphite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-01T21:31:22Z", "updated_at": "2017-10-13T07:36:15Z", "closed_at": "2017-10-13T07:36:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "For better performance could you change to small integer with choices for verb?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/353", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/353/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/353/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/353", "id": 261486790, "node_id": "MDU6SXNzdWUyNjE0ODY3OTA=", "number": 353, "title": "when one to one field is set as primary key, stream decorator removes item as target", "user": {"login": "KeynesYouDigIt", "id": 10255911, "node_id": "MDQ6VXNlcjEwMjU1OTEx", "avatar_url": "https://avatars3.githubusercontent.com/u/10255911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KeynesYouDigIt", "html_url": "https://github.com/KeynesYouDigIt", "followers_url": "https://api.github.com/users/KeynesYouDigIt/followers", "following_url": "https://api.github.com/users/KeynesYouDigIt/following{/other_user}", "gists_url": "https://api.github.com/users/KeynesYouDigIt/gists{/gist_id}", "starred_url": "https://api.github.com/users/KeynesYouDigIt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KeynesYouDigIt/subscriptions", "organizations_url": "https://api.github.com/users/KeynesYouDigIt/orgs", "repos_url": "https://api.github.com/users/KeynesYouDigIt/repos", "events_url": "https://api.github.com/users/KeynesYouDigIt/events{/privacy}", "received_events_url": "https://api.github.com/users/KeynesYouDigIt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-28T23:03:15Z", "updated_at": "2018-05-08T23:28:46Z", "closed_at": "2017-10-13T07:37:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "im using actstream to populate a stream with things like\r\n\r\n`guy posted whats up on group_feed`\r\n \r\nMy issue is, for a certain type of `group_feed`, the `group` object has been changed to have this\r\n\r\n`org = models.OneToOneField(Organization, primary_key=True)`\r\n\r\n(this was done since devs were complaining that the org id should have the same PK as the org_feed)\r\n\r\nNow when the @ stream decorator runs `fetch_generic_relations()` it cant find the generic relation and pops out as \r\n`guy posted whats up` (note the missing feed)\r\n\r\nive confirmed this is only happening for feeds attached to an object with a onetoone field and primary key=true .\r\n\r\nWhats even *stranger* is when I make a custom @ stream decorator to run `fetch_generic_relations('')`\r\n\r\neverything runs fine. It doesnt appear if any of the if statements in stream are hitting true.\r\n\r\nHow is `fetch_generic_relations()` supposed to work? I keep reading through it and nothing seems to stick out to me as to where the gfk gets screwed up. Help?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/351", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/351/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/351/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/351", "id": 254327085, "node_id": "MDU6SXNzdWUyNTQzMjcwODU=", "number": 351, "title": "Getting None for Actor, Action  and Target objects", "user": {"login": "rohitnaidu19", "id": 10061150, "node_id": "MDQ6VXNlcjEwMDYxMTUw", "avatar_url": "https://avatars0.githubusercontent.com/u/10061150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohitnaidu19", "html_url": "https://github.com/rohitnaidu19", "followers_url": "https://api.github.com/users/rohitnaidu19/followers", "following_url": "https://api.github.com/users/rohitnaidu19/following{/other_user}", "gists_url": "https://api.github.com/users/rohitnaidu19/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohitnaidu19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohitnaidu19/subscriptions", "organizations_url": "https://api.github.com/users/rohitnaidu19/orgs", "repos_url": "https://api.github.com/users/rohitnaidu19/repos", "events_url": "https://api.github.com/users/rohitnaidu19/events{/privacy}", "received_events_url": "https://api.github.com/users/rohitnaidu19/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-31T13:03:39Z", "updated_at": "2020-01-06T01:19:16Z", "closed_at": "2017-10-13T07:40:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am able to insert the correct values for Actor, Action  and Target objects. I can also see these values in the Admin but when is use  `user_stream(request.user, with_user_activity=True)` i get `<Action: None  sent 1 hour, 22 minutes ago>]>`.  The Actor is None, Action is missing after 'sent'.\r\nBut when i do `Action.objects.all()` i get `<Action: Rocky sent Asap Email to Rahul 1 hour, 22 minutes ago>`. I guess there's an issue with the Manager.\r\n\r\nAlso `activity/feed/json/` return no data even though there are entries in Actions:\r\n{\r\n    \"totalItems\": 0,\r\n    \"items\": []\r\n}\r\n\r\nIf inserts are working in Actions and Follows table what could be the issue? I am using UUID fields as pk.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/347", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/347/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/347/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/347", "id": 236335156, "node_id": "MDU6SXNzdWUyMzYzMzUxNTY=", "number": 347, "title": "ImportError: cannot import salons.managers.MyActionManager. try fixing ACRSTREAM_SETTINGS[MANAGAER]setting", "user": {"login": "silasseB", "id": 24662802, "node_id": "MDQ6VXNlcjI0NjYyODAy", "avatar_url": "https://avatars2.githubusercontent.com/u/24662802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silasseB", "html_url": "https://github.com/silasseB", "followers_url": "https://api.github.com/users/silasseB/followers", "following_url": "https://api.github.com/users/silasseB/following{/other_user}", "gists_url": "https://api.github.com/users/silasseB/gists{/gist_id}", "starred_url": "https://api.github.com/users/silasseB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silasseB/subscriptions", "organizations_url": "https://api.github.com/users/silasseB/orgs", "repos_url": "https://api.github.com/users/silasseB/repos", "events_url": "https://api.github.com/users/silasseB/events{/privacy}", "received_events_url": "https://api.github.com/users/silasseB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-15T22:48:39Z", "updated_at": "2017-08-27T00:58:34Z", "closed_at": "2017-08-27T00:58:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "here i my settings.py\r\n\r\nACTSTREAM_SETTINGS =  {\r\n                                       'MANAGER': 'salons.managers.MyActionManager'\r\n                                       'FECTH_RELATIONS' : True,\r\n                                       'USE_JSONFIELD' :True,\r\n}\r\n\r\nand my managers.py\r\n\r\nfrom datetime   import   datetime\r\nfrom django.contrib.contenttypes.models    import   ContentType\r\nfrom actstream.managers  import  ActionManager,  stream\r\n\r\nclass MyActionManager(ActionManager):\r\n\r\n        @stream\r\n        def ready(self, obj,   verb = posted, time =None):\r\n                  if time is None:\r\n                       time = datetime.now()\r\n                  return  obj.actor_actions.filter(verb = verb, timestamp = time__lte=time\r\n\r\n\r\nand my __init__.py\r\ndefault_apps_config = 'salons.apps.SalonsConfig'\r\n\r\n\r\nand finaly my apps.py\r\n\r\nfrom django.apps import AppConfig\r\n\r\nclass SalonsApp(AppConfig):\r\n         name = 'salons'\r\n\r\n          def ready(self):\r\n                  from actstream import registry\r\n                  registry.register(self.get_model('salonProfile')\r\n\r\n\r\n\r\n\r\n`I have been stuck here for two todays now, please anyone help me", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/344", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/344/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/344/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/344", "id": 232690572, "node_id": "MDU6SXNzdWUyMzI2OTA1NzI=", "number": 344, "title": "How create activity list for connected modals?", "user": {"login": "nurzhannogerbek", "id": 8999232, "node_id": "MDQ6VXNlcjg5OTkyMzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8999232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nurzhannogerbek", "html_url": "https://github.com/nurzhannogerbek", "followers_url": "https://api.github.com/users/nurzhannogerbek/followers", "following_url": "https://api.github.com/users/nurzhannogerbek/following{/other_user}", "gists_url": "https://api.github.com/users/nurzhannogerbek/gists{/gist_id}", "starred_url": "https://api.github.com/users/nurzhannogerbek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nurzhannogerbek/subscriptions", "organizations_url": "https://api.github.com/users/nurzhannogerbek/orgs", "repos_url": "https://api.github.com/users/nurzhannogerbek/repos", "events_url": "https://api.github.com/users/nurzhannogerbek/events{/privacy}", "received_events_url": "https://api.github.com/users/nurzhannogerbek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-31T20:45:05Z", "updated_at": "2017-06-01T16:35:49Z", "closed_at": "2017-06-01T16:28:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I have one question. Is it possible to create next thing with the help of this app? I was really confused after reading the documentation. Pls help!\r\n\r\nI have model `Project`. Also I have models as `Characterictic` and `Task` which are related with Project. In other words every project has sections like Characterictic and Task. Users can add comment to any characterictic or task objects.\r\n\r\nI want to show in template last 10 activity which was in current project. Order that list by time. As you can see from the modals every Characterictic and Task has fields like: revision_date (Last time of update) and creation_date (Date of creation). Also Comment model has field created which show when comment was created.\r\n\r\n**For example**:\r\n```\r\nProject A:\r\n1) User A added comment to Task A in  11:45\r\n2) User B edited Characterictic B  in 11:30.\r\n3) User B added comment to Characterictic C in 10:30.\r\n***\r\n10) User B created Characterictic A in 09:00.\r\n\r\nProject B:\r\n1) User A added comment to Task A in  11:45\r\n2) User B edited Characterictic B  in 11:30.\r\n3) User B added comment to Characterictic C in 10:30.\r\n***\r\n10) User B created Characterictic A in 09:00.\r\n```\r\n\r\n**models.py:**\r\n```\r\nclass Project(models.Model):\r\n    name = models.CharField(_('Name'), max_length=250)\r\n    create_time = models.DateTimeField(auto_now_add=True)\r\n    revision_date = models.DateTimeField(_('Date of last update'), auto_now=True)\r\n\r\nclass Characteristic(models.Model):\r\n    project = models.ForeignKey(Project, on_delete=models.CASCADE)\r\n    symbol = models.CharField(_('Symbol'), max_length=250)\r\n    description = models.TextField(_('Description'))\r\n    comments = models.ManyToManyField(\"Comment\")\r\n    create_time = models.DateTimeField(auto_now_add=True)\r\n    revision_date = models.DateTimeField(_('Date of last update'), auto_now=True)\r\n\r\nclass Task(models.Model):\r\n    project = models.ForeignKey(Project, on_delete=models.CASCADE)\r\n    symbol = models.CharField(_('Symbol'), max_length=250)\r\n    description = models.TextField(_('Description'))\r\n    comments = models.ManyToManyField(\"Comment\")\r\n    create_time = models.DateTimeField(auto_now_add=True)\r\n    revision_date = models.DateTimeField(_('Date of last update'), auto_now=True)\r\n\r\nclass Comment(models.Model):\r\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\r\n    text = models.TextField()\r\n    created = models.DateTimeField(auto_now_add=True)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/343", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/343/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/343/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/343", "id": 229299512, "node_id": "MDU6SXNzdWUyMjkyOTk1MTI=", "number": 343, "title": "How does `5-5-2017` comes to my report?", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-17T10:00:10Z", "updated_at": "2017-05-17T11:06:19Z", "closed_at": "2017-05-17T11:06:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "`django==1.9.12`\r\n`django-activity-stream==0.6.3`\r\nhttps://cl.ly/150a3r382U3T\r\n\r\nIs it a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/342", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/342/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/342/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/342", "id": 227972531, "node_id": "MDU6SXNzdWUyMjc5NzI1MzE=", "number": 342, "title": "Django 1.11 Incompatibilities", "user": {"login": "cb109", "id": 6052590, "node_id": "MDQ6VXNlcjYwNTI1OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6052590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cb109", "html_url": "https://github.com/cb109", "followers_url": "https://api.github.com/users/cb109/followers", "following_url": "https://api.github.com/users/cb109/following{/other_user}", "gists_url": "https://api.github.com/users/cb109/gists{/gist_id}", "starred_url": "https://api.github.com/users/cb109/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cb109/subscriptions", "organizations_url": "https://api.github.com/users/cb109/orgs", "repos_url": "https://api.github.com/users/cb109/repos", "events_url": "https://api.github.com/users/cb109/events{/privacy}", "received_events_url": "https://api.github.com/users/cb109/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 31, "created_at": "2017-05-11T12:21:03Z", "updated_at": "2019-12-27T20:19:59Z", "closed_at": "2017-12-19T06:49:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The overall functionality to store actions via signals seems to work nicely in Django 1.11, but trying to use the `activity_stream` and `display_action` templatetags I came across some small things that are broken due to changes in 1.11.\r\n\r\n* `actstream/templatetags/activity_tags.py`, line 96:\r\n    ```python\r\n    return render_to_string(templates, context)\r\n    ```\r\n    Context is a `django.template.context.Context` instance here, but in 1.11 it must be a simple dict,\r\n    ```python\r\n    return render_to_string(templates, context.flatten())\r\n    ```\r\n    would possibly fix that, haven't fully tested it yet.\r\n\r\n* `actstream/urls.py`, top of the file:\r\n    ```python\r\n    try:\r\n        from django.conf.urls import url, patterns\r\n    except ImportError:\r\n        from django.conf.urls.defaults import url, patterns\r\n    ```\r\n    The `patterns()` function is not available anymore, either the url patterns need some rework or you'd have to provide your own vendorized version. In 1.9 it says: \r\n    > django.conf.urls.patterns() is deprecated and will be removed in Django 1.10. Update your urlpatterns to be a list of django.conf.urls.url() instances instead.\r\n\r\n* `actstream/views.py`: All usage of `render_to_response()` is a problem, see https://docs.djangoproject.com/en/1.11/releases/1.10/\r\n    > The dictionary and context_instance parameters for the following functions are removed:\r\ndjango.shortcuts.render()\r\ndjango.shortcuts.render_to_response()\r\n\r\nThe changelog tells me that the latest, officially supported Django version is 1.9. Are there any plans yet to extend support to Django 1.10+?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/337", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/337/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/337/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/337", "id": 215327920, "node_id": "MDU6SXNzdWUyMTUzMjc5MjA=", "number": 337, "title": "Receiving Invalid block tag: 'activity_mystream'", "user": {"login": "Khailz", "id": 6279013, "node_id": "MDQ6VXNlcjYyNzkwMTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6279013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Khailz", "html_url": "https://github.com/Khailz", "followers_url": "https://api.github.com/users/Khailz/followers", "following_url": "https://api.github.com/users/Khailz/following{/other_user}", "gists_url": "https://api.github.com/users/Khailz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Khailz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Khailz/subscriptions", "organizations_url": "https://api.github.com/users/Khailz/orgs", "repos_url": "https://api.github.com/users/Khailz/repos", "events_url": "https://api.github.com/users/Khailz/events{/privacy}", "received_events_url": "https://api.github.com/users/Khailz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-03-20T04:23:44Z", "updated_at": "2018-04-10T08:49:56Z", "closed_at": "2018-04-10T08:49:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting `Invalid block tag on line 828: activity_mystream. Did you forget to register or load this tag?` I have reinstalled and uninstalled several times. Changing the name of  the `{% load activity_tags %}` tag, it is listed under acceptable tags. It worked fine before, is this just an issue with django 1.10?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/335", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/335/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/335/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/335", "id": 213723031, "node_id": "MDU6SXNzdWUyMTM3MjMwMzE=", "number": 335, "title": "Time for a new release?", "user": {"login": "suriya", "id": 43382, "node_id": "MDQ6VXNlcjQzMzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/43382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suriya", "html_url": "https://github.com/suriya", "followers_url": "https://api.github.com/users/suriya/followers", "following_url": "https://api.github.com/users/suriya/following{/other_user}", "gists_url": "https://api.github.com/users/suriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/suriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suriya/subscriptions", "organizations_url": "https://api.github.com/users/suriya/orgs", "repos_url": "https://api.github.com/users/suriya/repos", "events_url": "https://api.github.com/users/suriya/events{/privacy}", "received_events_url": "https://api.github.com/users/suriya/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "justquick", "id": 35289, "node_id": "MDQ6VXNlcjM1Mjg5", "avatar_url": "https://avatars2.githubusercontent.com/u/35289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justquick", "html_url": "https://github.com/justquick", "followers_url": "https://api.github.com/users/justquick/followers", "following_url": "https://api.github.com/users/justquick/following{/other_user}", "gists_url": "https://api.github.com/users/justquick/gists{/gist_id}", "starred_url": "https://api.github.com/users/justquick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justquick/subscriptions", "organizations_url": "https://api.github.com/users/justquick/orgs", "repos_url": "https://api.github.com/users/justquick/repos", "events_url": "https://api.github.com/users/justquick/events{/privacy}", "received_events_url": "https://api.github.com/users/justquick/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "justquick", "id": 35289, "node_id": "MDQ6VXNlcjM1Mjg5", "avatar_url": "https://avatars2.githubusercontent.com/u/35289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justquick", "html_url": "https://github.com/justquick", "followers_url": "https://api.github.com/users/justquick/followers", "following_url": "https://api.github.com/users/justquick/following{/other_user}", "gists_url": "https://api.github.com/users/justquick/gists{/gist_id}", "starred_url": "https://api.github.com/users/justquick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justquick/subscriptions", "organizations_url": "https://api.github.com/users/justquick/orgs", "repos_url": "https://api.github.com/users/justquick/repos", "events_url": "https://api.github.com/users/justquick/events{/privacy}", "received_events_url": "https://api.github.com/users/justquick/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-03-13T10:14:12Z", "updated_at": "2017-07-23T17:49:52Z", "closed_at": "2017-07-23T17:49:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "There have been a lot of changes since the last release. Could you please release a new version with the latest commits?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/333", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/333/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/333/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/333", "id": 213418251, "node_id": "MDU6SXNzdWUyMTM0MTgyNTE=", "number": 333, "title": "Keep supported django versions only [1.8-1.11]", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-03-10T18:35:48Z", "updated_at": "2018-01-21T16:54:40Z", "closed_at": "2018-01-21T16:54:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/328", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/328/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/328/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/328", "id": 211108716, "node_id": "MDU6SXNzdWUyMTExMDg3MTY=", "number": 328, "title": "display_action template tag causes exception \"render_to_string() must be called with a dict, not a Context\" in Django 1.10", "user": {"login": "masroore", "id": 200963, "node_id": "MDQ6VXNlcjIwMDk2Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/200963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/masroore", "html_url": "https://github.com/masroore", "followers_url": "https://api.github.com/users/masroore/followers", "following_url": "https://api.github.com/users/masroore/following{/other_user}", "gists_url": "https://api.github.com/users/masroore/gists{/gist_id}", "starred_url": "https://api.github.com/users/masroore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/masroore/subscriptions", "organizations_url": "https://api.github.com/users/masroore/orgs", "repos_url": "https://api.github.com/users/masroore/repos", "events_url": "https://api.github.com/users/masroore/events{/privacy}", "received_events_url": "https://api.github.com/users/masroore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-01T15:08:35Z", "updated_at": "2017-03-02T07:50:20Z", "closed_at": "2017-03-02T07:50:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Django 1.10. \r\n\r\n`display_action` template causes the exception on activity_tags.py:94. `DisplayAction.render_result()` \r\n\r\n```python\r\nclass DisplayAction(AsNode):\r\n\r\n    def render_result(self, context):\r\n         ...\r\n        return render_to_string(templates, context)\r\n```\r\nIn the code above, `context` is an instance of `RequestContext` (and not a `dict` like previous Django versions)\r\n\r\nRelated to #322 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/326", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/326/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/326/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/326", "id": 210186021, "node_id": "MDU6SXNzdWUyMTAxODYwMjE=", "number": 326, "title": "What are the guidelines to contributing?", "user": {"login": "cmwaura", "id": 12831942, "node_id": "MDQ6VXNlcjEyODMxOTQy", "avatar_url": "https://avatars0.githubusercontent.com/u/12831942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmwaura", "html_url": "https://github.com/cmwaura", "followers_url": "https://api.github.com/users/cmwaura/followers", "following_url": "https://api.github.com/users/cmwaura/following{/other_user}", "gists_url": "https://api.github.com/users/cmwaura/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmwaura/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmwaura/subscriptions", "organizations_url": "https://api.github.com/users/cmwaura/orgs", "repos_url": "https://api.github.com/users/cmwaura/repos", "events_url": "https://api.github.com/users/cmwaura/events{/privacy}", "received_events_url": "https://api.github.com/users/cmwaura/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-24T23:34:45Z", "updated_at": "2017-03-10T17:07:57Z", "closed_at": "2017-03-10T17:07:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just finished fixing the deprecated 'render_to_response' however, I dont know what the guidelines for contributing to the repo are. It would be great for people who want to contribute.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/325", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/325/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/325/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/325", "id": 210097446, "node_id": "MDU6SXNzdWUyMTAwOTc0NDY=", "number": 325, "title": "How can I generate a json feed of my posts?", "user": {"login": "raymestalez", "id": 4761235, "node_id": "MDQ6VXNlcjQ3NjEyMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4761235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raymestalez", "html_url": "https://github.com/raymestalez", "followers_url": "https://api.github.com/users/raymestalez/followers", "following_url": "https://api.github.com/users/raymestalez/following{/other_user}", "gists_url": "https://api.github.com/users/raymestalez/gists{/gist_id}", "starred_url": "https://api.github.com/users/raymestalez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raymestalez/subscriptions", "organizations_url": "https://api.github.com/users/raymestalez/orgs", "repos_url": "https://api.github.com/users/raymestalez/repos", "events_url": "https://api.github.com/users/raymestalez/events{/privacy}", "received_events_url": "https://api.github.com/users/raymestalez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-24T16:42:09Z", "updated_at": "2017-02-24T16:53:26Z", "closed_at": "2017-02-24T16:53:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I have a blog-type website, and I want to generate json feed of the activity stream of my latest posts. I want to be able to go to /feed/posts/, and see my latest posts in a json format.\r\n\r\nI've been reading the [docs](http://django-activity-stream.readthedocs.io/en/latest/feeds.html), but it is still unclear. I don't understand how can I generate a feed for a specific model, and then point a specific url to it. \r\n\r\nIdeally, I would just create a view where I take the list of activities, convert them into a json format, and then return this json.\r\n\r\nCan you give me an example of how it's done?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/324", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/324/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/324/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/324", "id": 209073984, "node_id": "MDU6SXNzdWUyMDkwNzM5ODQ=", "number": 324, "title": "Can I use this app to implement ActivityPub?", "user": {"login": "raymestalez", "id": 4761235, "node_id": "MDQ6VXNlcjQ3NjEyMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4761235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raymestalez", "html_url": "https://github.com/raymestalez", "followers_url": "https://api.github.com/users/raymestalez/followers", "following_url": "https://api.github.com/users/raymestalez/following{/other_user}", "gists_url": "https://api.github.com/users/raymestalez/gists{/gist_id}", "starred_url": "https://api.github.com/users/raymestalez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raymestalez/subscriptions", "organizations_url": "https://api.github.com/users/raymestalez/orgs", "repos_url": "https://api.github.com/users/raymestalez/repos", "events_url": "https://api.github.com/users/raymestalez/events{/privacy}", "received_events_url": "https://api.github.com/users/raymestalez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-21T08:32:13Z", "updated_at": "2019-06-12T16:06:27Z", "closed_at": "2019-06-12T16:06:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I am trying to figure out how to implement [ActivityPub](https://www.w3.org/TR/activitypub/) protocol on my website. I have never done this before, so I don't entirely understand how these things work. \r\n\r\nDo you think I will be able to use this app to implement this protocol? Can you give me some advice on how I should go about doing that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/323", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/323/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/323/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/323", "id": 209072531, "node_id": "MDU6SXNzdWUyMDkwNzI1MzE=", "number": 323, "title": "ImportError: No module named 'django.core.urlresolvers'", "user": {"login": "raymestalez", "id": 4761235, "node_id": "MDQ6VXNlcjQ3NjEyMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4761235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raymestalez", "html_url": "https://github.com/raymestalez", "followers_url": "https://api.github.com/users/raymestalez/followers", "following_url": "https://api.github.com/users/raymestalez/following{/other_user}", "gists_url": "https://api.github.com/users/raymestalez/gists{/gist_id}", "starred_url": "https://api.github.com/users/raymestalez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raymestalez/subscriptions", "organizations_url": "https://api.github.com/users/raymestalez/orgs", "repos_url": "https://api.github.com/users/raymestalez/repos", "events_url": "https://api.github.com/users/raymestalez/events{/privacy}", "received_events_url": "https://api.github.com/users/raymestalez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-21T08:24:51Z", "updated_at": "2017-06-01T16:26:16Z", "closed_at": "2017-02-21T08:56:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I have just installed this app with:\r\n`pip3.5 install django-activity-stream\r\n`\r\n added it to my INSTALLED_APPS, and added this to urls.py:\r\n\r\n`('^activity/', actstream.urls),`\r\n\r\nWhen I'm trying to run my project, I'm getting an error:\r\n\r\n`ImportError: No module named 'django.core.urlresolvers'`\r\n\r\nAm I doing something wrong?\r\n\r\n(I'm using Django 2.0, if it matters)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/322", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/322/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/322/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/322", "id": 208809745, "node_id": "MDU6SXNzdWUyMDg4MDk3NDU=", "number": 322, "title": "TypeError: render_to_response() got an unexpected keyword argument 'context_instance'", "user": {"login": "nikparmar", "id": 9884670, "node_id": "MDQ6VXNlcjk4ODQ2NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/9884670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikparmar", "html_url": "https://github.com/nikparmar", "followers_url": "https://api.github.com/users/nikparmar/followers", "following_url": "https://api.github.com/users/nikparmar/following{/other_user}", "gists_url": "https://api.github.com/users/nikparmar/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikparmar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikparmar/subscriptions", "organizations_url": "https://api.github.com/users/nikparmar/orgs", "repos_url": "https://api.github.com/users/nikparmar/repos", "events_url": "https://api.github.com/users/nikparmar/events{/privacy}", "received_events_url": "https://api.github.com/users/nikparmar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-20T08:11:36Z", "updated_at": "2017-03-02T07:50:14Z", "closed_at": "2017-03-02T07:50:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "When accessing the `/activity/` url getting this error.\r\nMay be the code base is yet not compatible with the django 1.10", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/318", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/318/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/318/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/318", "id": 197995210, "node_id": "MDU6SXNzdWUxOTc5OTUyMTA=", "number": 318, "title": "Filter Action Error:  Field 'actor' does not generate an automatic  reverse relation and therefore cannot be used for reverse querying. ", "user": {"login": "maguri", "id": 14354821, "node_id": "MDQ6VXNlcjE0MzU0ODIx", "avatar_url": "https://avatars3.githubusercontent.com/u/14354821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maguri", "html_url": "https://github.com/maguri", "followers_url": "https://api.github.com/users/maguri/followers", "following_url": "https://api.github.com/users/maguri/following{/other_user}", "gists_url": "https://api.github.com/users/maguri/gists{/gist_id}", "starred_url": "https://api.github.com/users/maguri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maguri/subscriptions", "organizations_url": "https://api.github.com/users/maguri/orgs", "repos_url": "https://api.github.com/users/maguri/repos", "events_url": "https://api.github.com/users/maguri/events{/privacy}", "received_events_url": "https://api.github.com/users/maguri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-29T11:45:40Z", "updated_at": "2017-08-24T21:49:53Z", "closed_at": "2017-01-04T15:35:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey every one (@justquick),\r\n\r\nI have a django app and now I want to introduce **django-activity-stream** to notify users from events.\r\n\r\nMy **issue** is that I can not `filter` actions by `actor` or `target`:\r\n\r\n> `python3.5 shell`\r\n```\r\n>>> from app import models\r\n>>> a = models.MyAppUser.objects.all()[1]\r\n>>> a\r\n<MyAppUser: Mark>\r\n>>> t = models.MyAppUser.objects.all()[2]\r\n>>> t\r\n<MyAppUser: Steve>\r\n>>> from actstream.models import Action\r\n>>> Action(actor=a, verb='POST', target=t)\r\n<Action: Mark POST Steve 0 minutes ago>\r\n>>> Action.objects.filter(actor=a)\r\n```\r\n\r\n> **Error**:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/.../lib/python3.5/site-packages/django/core/management/commands/shell.py\", line 69, in handle\r\n    self.run_shell(shell=options['interface'])\r\n  File \"/.../lib/python3.5/site-packages/django/core/management/commands/shell.py\", line 61, in run_shell\r\n    raise ImportError\r\nImportError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \"/.../lib/python3.5/site-packages/django/db/models/manager.py\", line 122, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/.../lib/python3.5/site-packages/django/db/models/query.py\", line 790, in filter\r\n    return self._filter_or_exclude(False, *args, **kwargs)\r\n  File \"/.../lib/python3.5/site-packages/django/db/models/query.py\", line 808, in _filter_or_exclude\r\n    clone.query.add_q(Q(*args, **kwargs))\r\n  File \"/.../lib/python3.5/site-packages/django/db/models/sql/query.py\", line 1243, in add_q\r\n    clause, _ = self._add_q(q_object, self.used_aliases)\r\n  File \"/.../lib/python3.5/site-packages/django/db/models/sql/query.py\", line 1269, in _add_q\r\n    allow_joins=allow_joins, split_subq=split_subq,\r\n  File \"/.../lib/python3.5/site-packages/django/db/models/sql/query.py\", line 1149, in build_filter\r\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\r\n  File \"/.../lib/python3.5/site-packages/django/db/models/sql/query.py\", line 1035, in solve_lookup_type\r\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\r\n  File \"/.../lib/python3.5/site-packages/django/db/models/sql/query.py\", line 1316, in names_to_path\r\n    \"adding a GenericRelation.\" % name\r\n```\r\n```\r\ndjango.core.exceptions.FieldError: Field 'actor' does not generate an automatic \r\nreverse relation and therefore cannot be used for reverse querying. \r\nIf it is a GenericForeignKey, consider adding a GenericRelation.\r\n```\r\nThe output of my `pip freeze` is:\r\n\r\n```\r\napp==0.0.1\r\ncoverage==4.2\r\ndj-database-url==0.4.1\r\n**Django==1.9.5**\r\n**django-activity-stream==0.6.3**\r\ndjango-anymail==0.5\r\ndjango-bootstrap-breadcrumbs==0.8\r\ndjango-bootstrap-datepicker==1.1.1\r\ndjango-bootstrap3==7.1.0\r\ndjango-bower==5.1.0\r\ndjango-configurations==2.0\r\ndjango-debug-toolbar==1.5\r\ndjango-formtools==1.0\r\ndjango-nose==1.4.4\r\ndjango-postman==3.3.2\r\nfactory-boy==2.7.0\r\nfake-factory==0.7.2\r\nflake8==3.0.4\r\nmccabe==0.5.2\r\nnose==1.3.7\r\nPillow==3.3.1\r\npsycopg2==2.6.2\r\npycodestyle==2.0.0\r\npyflakes==1.2.3\r\npython-dateutil==2.6.0\r\nPyYAML==3.12\r\nrequests==2.11.1\r\nrollbar==0.13.6\r\nsix==1.10.0\r\nsqlparse==0.2.1\r\nwhitenoise==3.2.1\r\n\r\n```\r\n\r\nSimilar like [issue 281](https://github.com/justquick/django-activity-stream/issues/281)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/317", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/317/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/317/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/317", "id": 197599762, "node_id": "MDU6SXNzdWUxOTc1OTk3NjI=", "number": 317, "title": "Support follow type", "user": {"login": "zmrenwu", "id": 13174219, "node_id": "MDQ6VXNlcjEzMTc0MjE5", "avatar_url": "https://avatars2.githubusercontent.com/u/13174219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmrenwu", "html_url": "https://github.com/zmrenwu", "followers_url": "https://api.github.com/users/zmrenwu/followers", "following_url": "https://api.github.com/users/zmrenwu/following{/other_user}", "gists_url": "https://api.github.com/users/zmrenwu/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmrenwu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmrenwu/subscriptions", "organizations_url": "https://api.github.com/users/zmrenwu/orgs", "repos_url": "https://api.github.com/users/zmrenwu/repos", "events_url": "https://api.github.com/users/zmrenwu/events{/privacy}", "received_events_url": "https://api.github.com/users/zmrenwu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/justquick/django-activity-stream/milestones/1", "html_url": "https://github.com/justquick/django-activity-stream/milestone/1", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/milestones/1/labels", "id": 3254885, "node_id": "MDk6TWlsZXN0b25lMzI1NDg4NQ==", "number": 1, "title": "0.7.0", "description": "support for Django 1.11 LTS+ 2.1+ only.", "creator": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 16, "state": "closed", "created_at": "2018-04-10T06:59:31Z", "updated_at": "2019-04-15T01:48:42Z", "due_on": "2019-01-31T08:00:00Z", "closed_at": "2019-04-15T01:48:42Z"}, "comments": 7, "created_at": "2016-12-26T15:50:29Z", "updated_at": "2018-04-10T09:05:42Z", "closed_at": "2018-01-21T11:08:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Now, **django-activity-stream** only support one follow type that is follow or unfollow. However, there are  other follow relationships such as *like*, *favorite*, *watch* and so on. So we need a type field in Follow model: `type =models.CharField()`. Thus, we can do some different things for different follow type. For example, if a user *favorite* a forum post, he/she would see all activity stream which target object is that post. We also allow user to *like* a forum post, but in this case, the activity stream would not show on user's feeds. *favorite* and *like* are all follow relationship but we should treat them differently.\r\n\r\nThe current app framework is easy to support it. Just add a type field in Follow model and extend the follow  and unfollow view that make them can receive a type parameter and use that mechanism to retrieve or create the Follow model.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/315", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/315/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/315/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/315", "id": 180523540, "node_id": "MDU6SXNzdWUxODA1MjM1NDA=", "number": 315, "title": "User app required by activity stream breaks django", "user": {"login": "cmwaura", "id": 12831942, "node_id": "MDQ6VXNlcjEyODMxOTQy", "avatar_url": "https://avatars0.githubusercontent.com/u/12831942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmwaura", "html_url": "https://github.com/cmwaura", "followers_url": "https://api.github.com/users/cmwaura/followers", "following_url": "https://api.github.com/users/cmwaura/following{/other_user}", "gists_url": "https://api.github.com/users/cmwaura/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmwaura/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmwaura/subscriptions", "organizations_url": "https://api.github.com/users/cmwaura/orgs", "repos_url": "https://api.github.com/users/cmwaura/repos", "events_url": "https://api.github.com/users/cmwaura/events{/privacy}", "received_events_url": "https://api.github.com/users/cmwaura/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-02T17:27:13Z", "updated_at": "2017-06-02T16:40:21Z", "closed_at": "2017-06-02T16:38:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there a different way of registering the user model in Django>= 1.9.5.  This is because I am getting this error \n\n```\ndjango.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\n```\n\nand Initially i thought it was activity stream giving me problems but its actually django complaining due to the fact that i imported the user model i.e\n\n```\nfrom django.contrib.auth.models import User\n```\n\nin the apps.py. Everything else is working well except for that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/310", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/310/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/310/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/310", "id": 174189781, "node_id": "MDU6SXNzdWUxNzQxODk3ODE=", "number": 310, "title": "Django -'AnonymousUser' object has no attribute '_meta", "user": {"login": "parksang21", "id": 21288261, "node_id": "MDQ6VXNlcjIxMjg4MjYx", "avatar_url": "https://avatars3.githubusercontent.com/u/21288261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parksang21", "html_url": "https://github.com/parksang21", "followers_url": "https://api.github.com/users/parksang21/followers", "following_url": "https://api.github.com/users/parksang21/following{/other_user}", "gists_url": "https://api.github.com/users/parksang21/gists{/gist_id}", "starred_url": "https://api.github.com/users/parksang21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parksang21/subscriptions", "organizations_url": "https://api.github.com/users/parksang21/orgs", "repos_url": "https://api.github.com/users/parksang21/repos", "events_url": "https://api.github.com/users/parksang21/events{/privacy}", "received_events_url": "https://api.github.com/users/parksang21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-31T05:47:30Z", "updated_at": "2018-04-10T04:59:21Z", "closed_at": "2018-04-10T04:59:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please help\nthis is my forms.py\n`from django.contrib.auth.models import User\nfrom django import forms\nfrom django.contrib import auth\n\nclass UserForm(forms.ModelForm):\n    password = forms.CharField(widget=forms.PasswordInput)\n\n```\nclass Meta:\n    model = User\n    fields =['username', 'email', 'password']\n```\n\nclass LoginForm(forms.Form):\n    login_email = forms.EmailField(\n        label='EMAIL',\n        max_length=100,\n        error_messages={'required': '\ud544\uc218 \uac12\uc785\ub2c8\ub2e4'},\n        widget=forms.TextInput(attrs={'placeholder': '\uc774\uba54\uc77c\uc744 \uc785\ub825\ud574\uc8fc\uc138\uc694'})\n    )\n    login_password = forms.CharField(\n        label='PASSWORD',\n        error_messages={'required': '\ud544\uc218 \uac12\uc785\ub2c8\ub2e4'},\n        widget=forms.PasswordInput(attrs={'placeholder': '\ube44\ubc00\ubc88\ud638\ub97c \uc785\ub825\ud574\uc8fc\uc138\uc694'})\n    )\n\n```\ndef clean(self):\n    form_data = self.cleaned_data\n    if form_data.get('login_username'):\n        if not User.objects.filter(username=form_data['login_username']).exists():\n            self._errors['login_username'] = ['\uc544\uc774\ub514\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4']\n        else:\n            user = auth.authenticate(username=form_data['login_username'], password=form_data['login_password'])\n            if not user:\n                self._errors['login_password'] = ['\ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4']\n\n    return form_data\n```\n\nclass SignupForm(forms.Form):\n    signup_username = forms.CharField(\n        label='NAME',\n        error_messages={'required': '\ud544\uc218 \uac12\uc785\ub2c8\ub2e4'},\n        max_length=30,\n        widget=forms.TextInput(attrs={'placeholder': '\uc774\ub984\uc744 \uc785\ub825\ud574\uc8fc\uc138\uc694'})\n    )\n    signup_email = forms.EmailField(\n        label='EMAIL',\n        error_messages={'required':'\ud544\uc218 \uac12\uc785\ub2c8\ub2e4'},\n        max_length=100,\n        widget=forms.TextInput(attrs={'placeholder':'\uc774\uba54\uc77c\uc744 \uc785\ub825\ud574\uc8fc\uc138\uc694'})\n    )\n    signup_password = forms.CharField(\n        label='PASSWORD',\n        error_messages={'required': '\ud544\uc218 \uac12\uc785\ub2c8\ub2e4'},\n        widget=forms.PasswordInput(attrs={'placeholder': '\ube44\ubc00\ubc88\ud638\ub97c \uc785\ub825\ud574\uc8fc\uc138\uc694'})\n    )\n    signup_password_check = forms.CharField(\n        label='PASSWORD REPEAT',\n        error_messages={'required': '\ud544\uc218 \uac12\uc785\ub2c8\ub2e4'},\n        widget=forms.PasswordInput(attrs={'placeholder': '\ube44\ubc00\ubc88\ud638\ub97c \ub2e4\uc2dc \ud55c\ubc88 \uc785\ub825\ud574\uc8fc\uc138\uc694'})\n    )\n\n```\n# \ube44\ubc00\ubc88\ud638\uc640 \ube44\ubc00\ubc88\ud638 \ud655\uc778\uc774 \ub2e4\ub97c\ub54c error\ub97c \ucd9c\ub825\ud558\ub294 \ud568\uc218\ndef clean(self):\n    form_data = self.cleaned_data\n    if form_data.get('signup_password'):\n        if form_data['signup_password'] != form_data['signup_password_check']:\n            self._errors[\"signup_password\"] = [\"\"] # Will raise a error message\n            self._errors[\"signup_password_check\"] = [\"\ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4\"]\n            del form_data['signup_password']\n\n    if form_data.get('signup_email'):\n        if User.objects.filter(email=form_data['signup_email']).exists():\n            self._errors['signup_userEmail'] = ['\uc774\uba54\uc77c\uc774 \uc911\ubcf5\ub418\uc5c8\uc2b5\ub2c8\ub2e4']\n\n    return form_data\n```\n\n`\nthis is my views.py\n\n`def login(request):\n    if request.method == 'POST':\n        login_form = LoginForm(request.POST)\n\n```\n    if login_form.is_valid():\n        email = request.POST.get('login_email')\n        password = request.POST.get('login_password')\n\n        if request.GET.get('from'):\n            linked_from = request.GET.get('from')\n        else:\n            linked_from = False\n\n        user = auth.authenticate(email=email, password=password)\n\n        auth.login(request, user)\n\n        if linked_from:\n            return HttpResponseRedirect(linked_from)\n        else:\n            return HttpResponseRedirect('/')\nelse:\n    login_form = LoginForm()\n\nreturn render(request, 'main/login.html', {\n    'login_form': login_form,\n})\n```\n# /logout/\n\ndef logout(request):\n    # \ub85c\uadf8\uc544\uc6c3 \ud55c\ub2e4\n    auth.logout(request)\n\n```\nif request.GET.get('from'):\n    linked_from = request.GET.get('from')\nelse:\n    linked_from = False\n\n# \uc774\uc804 \uc8fc\uc18c\ub97c GET\uc73c\ub85c \ubc1b\uc544\uc654\uc73c\uba74\nif linked_from:\n    return HttpResponseRedirect(linked_from)\n# \uc544\ub2c8\uba74 \uccab \ud398\uc774\uc9c0\ub85c \uc774\ub3d9\nelse:\n    return HttpResponseRedirect('/')\n```\n\ndef signup(request):\n    if request.method == 'POST':\n        signup_form = SignupForm(request.POST, request.FILES)\n\n```\n    if signup_form.is_valid():\n        User.objects.create_user(\n            username=request.POST.get('signup_username'),\n            password=request.POST.get('signup_password'),\n            email=request.POST.get('signup_email'),\n        )\n\n        # \ud68c\uc6d0\uac00\uc785\uc744 \ud55c \ub4a4 user\uc5d0 \uc815\ubcf4 \uc800\uc7a5\n        user = auth.authenticate(username=request.POST.get('signup_username'),\n                                 password=request.POST.get('signup_password'),\n                                 email=request.POST.get('signup_email'))\n\n        # \ub85c\uadf8\uc778\n        auth.login(request, user)\n\n        # user\uc5d0 \ubd99\ub294 user.member\ub97c \ub9cc\ub4e4\uc5b4\uc90c\n        Member.objects.create(user=user)\n\n\n        user.member.save()\n\n        return HttpResponseRedirect('/')\nelse:\n    signup_form = SignupForm()\n\nreturn render(request, 'main/signup.html', {\n    'signup_form': signup_form,\n})`\n```\n\nand i get AttribureError like this whenever i tried login\n'AnonymousUser' object has no attribute '_meta'\n\nplease help\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/308", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/308/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/308/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/308", "id": 172997985, "node_id": "MDU6SXNzdWUxNzI5OTc5ODU=", "number": 308, "title": "Django 1.10 removes django.conf.urls.patterns (deprecated in 1.8)", "user": {"login": "awatts", "id": 145824, "node_id": "MDQ6VXNlcjE0NTgyNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/145824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awatts", "html_url": "https://github.com/awatts", "followers_url": "https://api.github.com/users/awatts/followers", "following_url": "https://api.github.com/users/awatts/following{/other_user}", "gists_url": "https://api.github.com/users/awatts/gists{/gist_id}", "starred_url": "https://api.github.com/users/awatts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awatts/subscriptions", "organizations_url": "https://api.github.com/users/awatts/orgs", "repos_url": "https://api.github.com/users/awatts/repos", "events_url": "https://api.github.com/users/awatts/events{/privacy}", "received_events_url": "https://api.github.com/users/awatts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-24T16:21:46Z", "updated_at": "2017-06-01T08:59:58Z", "closed_at": "2017-02-07T07:47:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "urls.py starts with:\n\n``` python\ntry:                                                                               \n    from django.conf.urls import url, patterns                                     \nexcept ImportError:                                                                \n    from django.conf.urls.defaults import url, patterns                                                                                      \n```\n\n`django.conf.urls.patterns` is removed in Django 1.10, so the exception handler tries to use the even older `django.conf.urls.defaults`, leading to an `ImportError` on Django 1.10. Changing to \n\n``` python\ntry:                                                                               \n    from django.conf.urls import url                                    \nexcept ImportError:                                                                \n    from django.conf.urls.defaults import url, patterns\n```\n\nworks in 1.10, but could cause problems on < 1.8.\n\nMaybe change at the bottom of urls.py from:\n\n``` python\nif django.VERSION[:2] < (1, 9):                                                    \n    urlpatterns = patterns('', *urlpatterns)\n```\n\nto\n\n``` python\nif django.VERSION[:2] < (1, 9):       \n    try:\n        from django.conf.urls import patterns\n    except ImportError:\n        from django.conf.urls.defaults import patterns                                         \n    urlpatterns = patterns('', *urlpatterns)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/305", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/305/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/305/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/305", "id": 171756279, "node_id": "MDU6SXNzdWUxNzE3NTYyNzk=", "number": 305, "title": "No way to create a follower relationship from a custom user class?", "user": {"login": "shombo", "id": 10076478, "node_id": "MDQ6VXNlcjEwMDc2NDc4", "avatar_url": "https://avatars3.githubusercontent.com/u/10076478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shombo", "html_url": "https://github.com/shombo", "followers_url": "https://api.github.com/users/shombo/followers", "following_url": "https://api.github.com/users/shombo/following{/other_user}", "gists_url": "https://api.github.com/users/shombo/gists{/gist_id}", "starred_url": "https://api.github.com/users/shombo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shombo/subscriptions", "organizations_url": "https://api.github.com/users/shombo/orgs", "repos_url": "https://api.github.com/users/shombo/repos", "events_url": "https://api.github.com/users/shombo/events{/privacy}", "received_events_url": "https://api.github.com/users/shombo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-17T20:46:47Z", "updated_at": "2016-08-19T19:30:45Z", "closed_at": "2016-08-19T19:30:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Up front, I'm new to django and actstream, but not new to programming, etc. \n\nI am having a couple of issues here. The ideal solution would be to have a way to not have to rely on the django auth user class to create follower relationships. When trying to create a follower relationship with my custom user class, I get an error telling me that it must be of class User. \n\nI have attempted a work around where my user class can return a django user instance of itself and register a following relationship. This works for the creation of such relationships, but when I try to retrieve user_streams, it gives me an error saying that the model User isn't registered.\n\nAfter going back to apps.py and playing with that for a bit, I cannot find a way to register the User class. With every different attempt to register such a class, I get an AppRegistryNotReady(\"Apps aren't loaded yet.\") error.\n\n`from django.contrib.auth.models import User`\n\nis the cause of the error.\n\nSo my two main questions are this:\n1. Is there any way whatsoever that I can use a different class other than User to establish a following relationship?\n2. If not, how can I register the user class into the registry?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/302", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/302/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/302/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/302", "id": 169819184, "node_id": "MDU6SXNzdWUxNjk4MTkxODQ=", "number": 302, "title": "Add git tag for version 0.6.2", "user": {"login": "jonemo", "id": 97921, "node_id": "MDQ6VXNlcjk3OTIx", "avatar_url": "https://avatars0.githubusercontent.com/u/97921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonemo", "html_url": "https://github.com/jonemo", "followers_url": "https://api.github.com/users/jonemo/followers", "following_url": "https://api.github.com/users/jonemo/following{/other_user}", "gists_url": "https://api.github.com/users/jonemo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonemo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonemo/subscriptions", "organizations_url": "https://api.github.com/users/jonemo/orgs", "repos_url": "https://api.github.com/users/jonemo/repos", "events_url": "https://api.github.com/users/jonemo/events{/privacy}", "received_events_url": "https://api.github.com/users/jonemo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-07T22:17:29Z", "updated_at": "2016-08-19T19:47:11Z", "closed_at": "2016-08-19T19:47:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just a small suggestion: Consider tagging the commit that got released to pypi as `0.6.2` with that version number. I just spent some time tracking down the bug reported in https://github.com/justquick/django-activity-stream/pull/266, not realizing that the fix has already been released. \n\n(I know, I shouldn't rely on Github tags for this, but tags are a convenient way to compare different release versions of a code base)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/301", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/301/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/301/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/301", "id": 169738892, "node_id": "MDU6SXNzdWUxNjk3Mzg4OTI=", "number": 301, "title": "django.contrib.site need", "user": {"login": "missuor", "id": 4561294, "node_id": "MDQ6VXNlcjQ1NjEyOTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4561294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/missuor", "html_url": "https://github.com/missuor", "followers_url": "https://api.github.com/users/missuor/followers", "following_url": "https://api.github.com/users/missuor/following{/other_user}", "gists_url": "https://api.github.com/users/missuor/gists{/gist_id}", "starred_url": "https://api.github.com/users/missuor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/missuor/subscriptions", "organizations_url": "https://api.github.com/users/missuor/orgs", "repos_url": "https://api.github.com/users/missuor/repos", "events_url": "https://api.github.com/users/missuor/events{/privacy}", "received_events_url": "https://api.github.com/users/missuor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-06T09:38:12Z", "updated_at": "2016-08-19T19:48:39Z", "closed_at": "2016-08-19T19:48:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Django 1.9.x 's been supported via doc(#supported-environments).\n\nMy env is Django1.9.7 and I  find that I must add 'django.contrib.site' into 'INSTALLED_APPS'. [Basic app configuration](http://django-activity-stream.readthedocs.io/en/latest/installation.html#basic-app-configuration) and do something like add site into my database(not do)\n\nvim /path/to/envs/Lib/site-packages/actstream/feeds.py\nand comment\n`#from django.contrib.sites.models import Site # line 9`\nand replace `Site.objects.get_current().domain` to `'/'`\n\nplease do update your doc or ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/299", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/299/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/299/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/299", "id": 169513250, "node_id": "MDU6SXNzdWUxNjk1MTMyNTA=", "number": 299, "title": "Monkey Patching DatabaseOperations::last_executed_query With No Checking of Django Version", "user": {"login": "fredpalmer", "id": 32422, "node_id": "MDQ6VXNlcjMyNDIy", "avatar_url": "https://avatars2.githubusercontent.com/u/32422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fredpalmer", "html_url": "https://github.com/fredpalmer", "followers_url": "https://api.github.com/users/fredpalmer/followers", "following_url": "https://api.github.com/users/fredpalmer/following{/other_user}", "gists_url": "https://api.github.com/users/fredpalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/fredpalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fredpalmer/subscriptions", "organizations_url": "https://api.github.com/users/fredpalmer/orgs", "repos_url": "https://api.github.com/users/fredpalmer/repos", "events_url": "https://api.github.com/users/fredpalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/fredpalmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-05T02:00:06Z", "updated_at": "2016-08-19T21:37:49Z", "closed_at": "2016-08-19T21:37:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "The comment here implies that patching won't take place depending on the version of Django:\n\nhttps://github.com/justquick/django-activity-stream/blob/master/actstream/apps.py#L16\n\nWell - there's absolutely no check for the version of Django and it does cause problems in some cases where the property on the `Cursor` object isn't set yet.  \n\nPlease remove this entirely.  It's really _not_ the responsibility of a 3rd-party application to patch Django in this regard.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/298", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/298/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/298/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/298", "id": 165360875, "node_id": "MDU6SXNzdWUxNjUzNjA4NzU=", "number": 298, "title": "Guideline to assign action target and object?", "user": {"login": "wyx2000", "id": 1753969, "node_id": "MDQ6VXNlcjE3NTM5Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1753969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wyx2000", "html_url": "https://github.com/wyx2000", "followers_url": "https://api.github.com/users/wyx2000/followers", "following_url": "https://api.github.com/users/wyx2000/following{/other_user}", "gists_url": "https://api.github.com/users/wyx2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/wyx2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wyx2000/subscriptions", "organizations_url": "https://api.github.com/users/wyx2000/orgs", "repos_url": "https://api.github.com/users/wyx2000/repos", "events_url": "https://api.github.com/users/wyx2000/events{/privacy}", "received_events_url": "https://api.github.com/users/wyx2000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-13T16:11:31Z", "updated_at": "2016-08-19T19:54:59Z", "closed_at": "2016-08-19T19:54:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example, under one donation event, I add a donation from user A, what should assign to target and object?  donation event to target or user A to target?\n\nAnother thing is if I assign target or object, it seems I cannot delete them, for example, if I assign user A to action object, after user A is deleted, the action will be disappeared too. Is that by design? seems not quite right, I still want to see activities of an object even it is deleted.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/293", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/293/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/293/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/293", "id": 153563777, "node_id": "MDU6SXNzdWUxNTM1NjM3Nzc=", "number": 293, "title": "NoReverseMatch when using Python 3.5.1", "user": {"login": "avorio", "id": 649020, "node_id": "MDQ6VXNlcjY0OTAyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/649020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avorio", "html_url": "https://github.com/avorio", "followers_url": "https://api.github.com/users/avorio/followers", "following_url": "https://api.github.com/users/avorio/following{/other_user}", "gists_url": "https://api.github.com/users/avorio/gists{/gist_id}", "starred_url": "https://api.github.com/users/avorio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avorio/subscriptions", "organizations_url": "https://api.github.com/users/avorio/orgs", "repos_url": "https://api.github.com/users/avorio/repos", "events_url": "https://api.github.com/users/avorio/events{/privacy}", "received_events_url": "https://api.github.com/users/avorio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-07T00:54:39Z", "updated_at": "2016-05-07T10:50:40Z", "closed_at": "2016-05-07T10:50:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Nevermind.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/292", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/292/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/292/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/292", "id": 148596950, "node_id": "MDU6SXNzdWUxNDg1OTY5NTA=", "number": 292, "title": "RemovedInDjango110Warning: SubfieldBase has been deprecated.", "user": {"login": "hanuprateek", "id": 6202043, "node_id": "MDQ6VXNlcjYyMDIwNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6202043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanuprateek", "html_url": "https://github.com/hanuprateek", "followers_url": "https://api.github.com/users/hanuprateek/followers", "following_url": "https://api.github.com/users/hanuprateek/following{/other_user}", "gists_url": "https://api.github.com/users/hanuprateek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanuprateek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanuprateek/subscriptions", "organizations_url": "https://api.github.com/users/hanuprateek/orgs", "repos_url": "https://api.github.com/users/hanuprateek/repos", "events_url": "https://api.github.com/users/hanuprateek/events{/privacy}", "received_events_url": "https://api.github.com/users/hanuprateek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-04-15T08:40:31Z", "updated_at": "2016-06-03T17:51:11Z", "closed_at": "2016-05-04T06:53:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After upgrading to django 1.9 started seeing this warning when using JSONField.\n\n\"RemovedInDjango110Warning: SubfieldBase has been deprecated. Use Field.from_db_value instead.\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/289", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/289/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/289/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/289", "id": 145817124, "node_id": "MDU6SXNzdWUxNDU4MTcxMjQ=", "number": 289, "title": "Does django-activity-stream 0.6.0 support custom data?", "user": {"login": "wyx2000", "id": 1753969, "node_id": "MDQ6VXNlcjE3NTM5Njk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1753969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wyx2000", "html_url": "https://github.com/wyx2000", "followers_url": "https://api.github.com/users/wyx2000/followers", "following_url": "https://api.github.com/users/wyx2000/following{/other_user}", "gists_url": "https://api.github.com/users/wyx2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/wyx2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wyx2000/subscriptions", "organizations_url": "https://api.github.com/users/wyx2000/orgs", "repos_url": "https://api.github.com/users/wyx2000/repos", "events_url": "https://api.github.com/users/wyx2000/events{/privacy}", "received_events_url": "https://api.github.com/users/wyx2000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-04T22:01:04Z", "updated_at": "2016-05-18T02:35:18Z", "closed_at": "2016-05-18T02:35:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "it seems it should 0.4.4, but how come I don't see table column for it? and it sure doesn't work for me.\nAny idea?\n\nCREATE TABLE actstream_action\n(\n  id serial NOT NULL,\n  actor_object_id character varying(255) NOT NULL,\n  verb character varying(255) NOT NULL,\n  description text,\n  target_object_id character varying(255),\n  action_object_object_id character varying(255),\n  \"timestamp\" timestamp with time zone NOT NULL,\n  public boolean NOT NULL,\n  action_object_content_type_id integer,\n  actor_content_type_id integer NOT NULL,\n  target_content_type_id integer,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/285", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/285/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/285/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/285", "id": 138841059, "node_id": "MDU6SXNzdWUxMzg4NDEwNTk=", "number": 285, "title": "The model User is not registered", "user": {"login": "YassWarrior", "id": 17320086, "node_id": "MDQ6VXNlcjE3MzIwMDg2", "avatar_url": "https://avatars0.githubusercontent.com/u/17320086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YassWarrior", "html_url": "https://github.com/YassWarrior", "followers_url": "https://api.github.com/users/YassWarrior/followers", "following_url": "https://api.github.com/users/YassWarrior/following{/other_user}", "gists_url": "https://api.github.com/users/YassWarrior/gists{/gist_id}", "starred_url": "https://api.github.com/users/YassWarrior/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YassWarrior/subscriptions", "organizations_url": "https://api.github.com/users/YassWarrior/orgs", "repos_url": "https://api.github.com/users/YassWarrior/repos", "events_url": "https://api.github.com/users/YassWarrior/events{/privacy}", "received_events_url": "https://api.github.com/users/YassWarrior/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-06T21:31:32Z", "updated_at": "2016-03-13T14:59:31Z", "closed_at": "2016-03-13T14:59:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI have this error when I want show activities stream.\nName application : main_app\nMy template : \n\n> ...\n> {% load activity_tags %}\n>   {% activity_stream 'actor' user %}    <!-- Enlever espaces entre { et %  -->\n>   {% for action in stream %}\n>       {% display_action action %}\n>   {% endfor %}\n> ...\n\nmain_app/apps.py : \n\n> from django.apps import AppConfig\n> \n> class MainAppConfig(AppConfig):\n>   name = 'main_app'\n> \n> def ready(self):\n>       from actstream import registry\n>       registry.register(self.get_model('User'))\n\nIf `from actstream import registry` is not in def ready, I have a other error : https://github.com/justquick/django-activity-stream/issues/279\n\nAnd my settings.py :  \n\n> INSTALLED_APPS = [\n>     'django.contrib.admin',\n>     'django.contrib.auth',\n>     'django.contrib.contenttypes',\n>     'django.contrib.sessions',\n>     'django.contrib.messages',\n>     'django.contrib.staticfiles',\n>     'django.contrib.humanize',\n>     'django.contrib.sites',\n>     'bootstrapform',\n>     'main_app',\n>     'actstream',\n> ]\n> \n> SITE_ID = 1\n> \n> MIDDLEWARE_CLASSES = [\n>   ...\n\nMy signal (main_app/views.py):\n\n> def my_handler(sender, instance, created, **kwargs):\n>     action.send(instance, verb='was saved')\n>     print(\"It's send ! \")  #It's works, I see it in the terminal.\n> \n> post_save.connect(my_handler, sender=User) \n\nSo the error is : \n\n> Traceback (most recent call last):\n>   File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 149, in get_response\n>     response = self.process_exception_by_middleware(e, request)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\", line 147, in get_response\n>     response = wrapped_callback(request, _callback_args, *_callback_kwargs)\n>   File \"/home/project/main_app/views.py\", line 165, in accueil\n>     return render(request,\"main_app/accueil.html\",locals())\n>   File \"/usr/local/lib/python2.7/dist-packages/django/shortcuts.py\", line 67, in render\n>     template_name, context, request=request, using=using)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/loader.py\", line 97, in render_to_string\n>     return template.render(context, request)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/backends/django.py\", line 95, in render\n>     return self.template.render(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/base.py\", line 206, in render\n>     return self._render(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/base.py\", line 197, in _render\n>     return self.nodelist.render(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/base.py\", line 988, in render\n>     bit = node.render_annotated(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/base.py\", line 955, in render_annotated\n>     return self.render(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/loader_tags.py\", line 173, in render\n>     return compiled_parent._render(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/base.py\", line 197, in _render\n>     return self.nodelist.render(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/base.py\", line 988, in render\n>     bit = node.render_annotated(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/base.py\", line 955, in render_annotated\n>     return self.render(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/loader_tags.py\", line 69, in render\n>     result = block.nodelist.render(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/base.py\", line 988, in render\n>     bit = node.render_annotated(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/base.py\", line 955, in render_annotated\n>     return self.render(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/defaulttags.py\", line 326, in render\n>     return nodelist.render(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/base.py\", line 988, in render\n>     bit = node.render_annotated(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/base.py\", line 955, in render_annotated\n>     return self.render(context)\n>   File \"/usr/local/lib/python2.7/dist-packages/django/template/library.py\", line 201, in render\n>     output = self.func(_resolved_args, *_resolved_kwargs)\n>   File \"/home/project/actstream/templatetags/activity_tags.py\", line 198, in activity_stream\n>     context[ctxvar] = getattr(Action.objects, stream_type)(_args, *_kwargs)\n>   File \"/home/project/actstream/decorators.py\", line 22, in wrapped\n>     qs = func(manager, _args, *_kwargs)\n>   File \"/home/project/actstream/managers.py\", line 30, in actor\n>     check(obj)\n>   File \"/home/project/actstream/registry.py\", line 110, in check\n>     'to register it.' % model_class.__name__)\n> ImproperlyConfigured: The model User is not registered. Please use actstream.registry to register it.\n\nThank you\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/284", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/284/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/284/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/284", "id": 138708759, "node_id": "MDU6SXNzdWUxMzg3MDg3NTk=", "number": 284, "title": "Follow pending", "user": {"login": "baneizalfe", "id": 2325003, "node_id": "MDQ6VXNlcjIzMjUwMDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2325003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baneizalfe", "html_url": "https://github.com/baneizalfe", "followers_url": "https://api.github.com/users/baneizalfe/followers", "following_url": "https://api.github.com/users/baneizalfe/following{/other_user}", "gists_url": "https://api.github.com/users/baneizalfe/gists{/gist_id}", "starred_url": "https://api.github.com/users/baneizalfe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baneizalfe/subscriptions", "organizations_url": "https://api.github.com/users/baneizalfe/orgs", "repos_url": "https://api.github.com/users/baneizalfe/repos", "events_url": "https://api.github.com/users/baneizalfe/events{/privacy}", "received_events_url": "https://api.github.com/users/baneizalfe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-05T19:04:49Z", "updated_at": "2016-05-04T06:47:32Z", "closed_at": "2016-05-04T06:47:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to have option following pending, for case where user sets his profile as private. Also display pending requests?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/282", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/282/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/282/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/282", "id": 136816869, "node_id": "MDU6SXNzdWUxMzY4MTY4Njk=", "number": 282, "title": "Incorporate Django's message framework", "user": {"login": "avorio", "id": 649020, "node_id": "MDQ6VXNlcjY0OTAyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/649020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avorio", "html_url": "https://github.com/avorio", "followers_url": "https://api.github.com/users/avorio/followers", "following_url": "https://api.github.com/users/avorio/following{/other_user}", "gists_url": "https://api.github.com/users/avorio/gists{/gist_id}", "starred_url": "https://api.github.com/users/avorio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avorio/subscriptions", "organizations_url": "https://api.github.com/users/avorio/orgs", "repos_url": "https://api.github.com/users/avorio/repos", "events_url": "https://api.github.com/users/avorio/events{/privacy}", "received_events_url": "https://api.github.com/users/avorio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-26T21:17:17Z", "updated_at": "2016-04-28T16:38:26Z", "closed_at": "2016-03-04T10:58:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "What would be the best way to generate a Django framework message after someone follows something?\n\nDo I have to re-implement the `follow()` method? That doesn't sound very efficient.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/280", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/280/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/280/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/280", "id": 135495501, "node_id": "MDU6SXNzdWUxMzU0OTU1MDE=", "number": 280, "title": "Inconsistent values of send_action", "user": {"login": "avorio", "id": 649020, "node_id": "MDQ6VXNlcjY0OTAyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/649020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avorio", "html_url": "https://github.com/avorio", "followers_url": "https://api.github.com/users/avorio/followers", "following_url": "https://api.github.com/users/avorio/following{/other_user}", "gists_url": "https://api.github.com/users/avorio/gists{/gist_id}", "starred_url": "https://api.github.com/users/avorio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avorio/subscriptions", "organizations_url": "https://api.github.com/users/avorio/orgs", "repos_url": "https://api.github.com/users/avorio/repos", "events_url": "https://api.github.com/users/avorio/events{/privacy}", "received_events_url": "https://api.github.com/users/avorio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-22T18:06:46Z", "updated_at": "2016-03-04T10:55:30Z", "closed_at": "2016-03-04T10:55:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the reasoning behind the inconsistent values of `send_action`?\n\nHere it is `True`:\n\n``` python\ndef follow(user, obj, send_action=True, actor_only=True, **kwargs):\n```\n\nHere it is `False`:\n\n``` python\ndef unfollow(user, obj, send_action=False):\n```\n\nI'd expect to see an action after unfollowing someone/something, specially after an action was created when I followed them in the first place.\n\nMore importantly, is it possible to change these default values using `settings.py`?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/279", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/279/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/279/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/279", "id": 135058640, "node_id": "MDU6SXNzdWUxMzUwNTg2NDA=", "number": 279, "title": "Apps aren't loaded yet.", "user": {"login": "YassWarrior", "id": 17320086, "node_id": "MDQ6VXNlcjE3MzIwMDg2", "avatar_url": "https://avatars0.githubusercontent.com/u/17320086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YassWarrior", "html_url": "https://github.com/YassWarrior", "followers_url": "https://api.github.com/users/YassWarrior/followers", "following_url": "https://api.github.com/users/YassWarrior/following{/other_user}", "gists_url": "https://api.github.com/users/YassWarrior/gists{/gist_id}", "starred_url": "https://api.github.com/users/YassWarrior/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YassWarrior/subscriptions", "organizations_url": "https://api.github.com/users/YassWarrior/orgs", "repos_url": "https://api.github.com/users/YassWarrior/repos", "events_url": "https://api.github.com/users/YassWarrior/events{/privacy}", "received_events_url": "https://api.github.com/users/YassWarrior/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-02-20T10:30:05Z", "updated_at": "2018-04-25T03:22:54Z", "closed_at": "2016-05-04T06:54:33Z", "author_association": "NONE", "active_lock_reason": "spam", "body": "Hello, \n\nI try to use this app but I have a problem with the configuration.\n\nThe name of my app : main_app\n\napps.py of main_app : \n\n```\nfrom django.apps import AppConfig\nfrom actstream import registry\n\nclass MainAppConfig(AppConfig):\n    name = 'main_app'\n\ndef ready(self):\n    registry.register(self.get_model('Inscrit'))\n```\n\n**init** of main_app : \n`\ndefault_app_config = 'main_app.apps.MainAppConfig'`\n\nsettings.py [Installed_apps] :\n\n```\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.humanize',\n    'django.contrib.sites',\n    'bootstrapform',\n    'main_app',\n    'actstream',\n]\n```\n\nI have this error : \n\n```\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py\", line 350, in execute_from_command_line\n    utility.execute()\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py\", line 342, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py\", line 176, in fetch_command\n    commands = get_commands()\n  File \"/usr/local/lib/python2.7/dist-packages/django/utils/lru_cache.py\", line 100, in wrapper\n    result = user_function(*args, **kwds)\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py\", line 71, in get_commands\n    for app_config in reversed(list(apps.get_app_configs())):\n  File \"/usr/local/lib/python2.7/dist-packages/django/apps/registry.py\", line 137, in get_app_configs\n    self.check_apps_ready()\n  File \"/usr/local/lib/python2.7/dist-packages/django/apps/registry.py\", line 124, in check_apps_ready\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\ndjango.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\n```\n\nI read the #272 but it doesn't help me.. \n\nBUT when I write from `actstream import registry` inside `def ready`, it works but why ? :octocat: \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/278", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/278/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/278/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/278", "id": 131053738, "node_id": "MDU6SXNzdWUxMzEwNTM3Mzg=", "number": 278, "title": "Django creates migration for actstream after Foreign key to Action", "user": {"login": "dima-kov", "id": 8599032, "node_id": "MDQ6VXNlcjg1OTkwMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8599032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dima-kov", "html_url": "https://github.com/dima-kov", "followers_url": "https://api.github.com/users/dima-kov/followers", "following_url": "https://api.github.com/users/dima-kov/following{/other_user}", "gists_url": "https://api.github.com/users/dima-kov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dima-kov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dima-kov/subscriptions", "organizations_url": "https://api.github.com/users/dima-kov/orgs", "repos_url": "https://api.github.com/users/dima-kov/repos", "events_url": "https://api.github.com/users/dima-kov/events{/privacy}", "received_events_url": "https://api.github.com/users/dima-kov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-02-03T15:11:19Z", "updated_at": "2016-06-03T07:10:49Z", "closed_at": "2016-05-04T06:46:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! \n\nI have created own model Notification. There is foreign key to actstream  Action:\n\n```\nclass Notification(models.Model):\n    user = models.ForeignKey(User)\n    action = models.ForeignKey(Action)\n    is_read = models.BooleanField(default=False)\n\n```\n\nAnd when I run `manage.py makemigrations myapp` django creates one more migration for actstream.\nHere it is:\n\n```\n# -*- coding: utf-8 -*-\nfrom __future__ import unicode_literals\nfrom django.db import migrations, models\n\nclass Migration(migrations.Migration):\n\n    dependencies = [\n        ('actstream', '0001_initial'),\n    ]\n\n    operations = [\n        migrations.RemoveField(\n            model_name='action',\n            name='data',\n        ),\n    ]\n\n```\n\nSo what should I do?\n\nCan I migrate it? But in which way will I migrate it in deploy?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/276", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/276/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/276/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/276", "id": 128539911, "node_id": "MDU6SXNzdWUxMjg1Mzk5MTE=", "number": 276, "title": "Documentation needs a warning about correctly handling \"django.contrib.auth\" AppConfig ", "user": {"login": "techdragon", "id": 2115079, "node_id": "MDQ6VXNlcjIxMTUwNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2115079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techdragon", "html_url": "https://github.com/techdragon", "followers_url": "https://api.github.com/users/techdragon/followers", "following_url": "https://api.github.com/users/techdragon/following{/other_user}", "gists_url": "https://api.github.com/users/techdragon/gists{/gist_id}", "starred_url": "https://api.github.com/users/techdragon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techdragon/subscriptions", "organizations_url": "https://api.github.com/users/techdragon/orgs", "repos_url": "https://api.github.com/users/techdragon/repos", "events_url": "https://api.github.com/users/techdragon/events{/privacy}", "received_events_url": "https://api.github.com/users/techdragon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-25T13:43:29Z", "updated_at": "2016-05-04T06:43:40Z", "closed_at": "2016-05-04T06:43:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The AppConfig instructions in `https://github.com/justquick/django-activity-stream/blob/master/docs/source/configuration.rst` are fine for 95% of the time, and a great start. But given the usefulness of creating an AppConfig for `django.contrib.auth`'s built in user model, the documentation could instructions on how to connect the default user model to the event stream without breaking Django's permission system. I'll create a PR in a moment to suggest some new docs.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/274", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/274/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/274/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/274", "id": 127306871, "node_id": "MDU6SXNzdWUxMjczMDY4NzE=", "number": 274, "title": "Unable to register models on django 1.9", "user": {"login": "larubbio", "id": 51527, "node_id": "MDQ6VXNlcjUxNTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/51527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larubbio", "html_url": "https://github.com/larubbio", "followers_url": "https://api.github.com/users/larubbio/followers", "following_url": "https://api.github.com/users/larubbio/following{/other_user}", "gists_url": "https://api.github.com/users/larubbio/gists{/gist_id}", "starred_url": "https://api.github.com/users/larubbio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larubbio/subscriptions", "organizations_url": "https://api.github.com/users/larubbio/orgs", "repos_url": "https://api.github.com/users/larubbio/repos", "events_url": "https://api.github.com/users/larubbio/events{/privacy}", "received_events_url": "https://api.github.com/users/larubbio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-01-18T20:40:46Z", "updated_at": "2016-04-04T03:02:44Z", "closed_at": "2016-02-04T23:45:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "The example in the documentation throws the following exception in django 1.9:\n\n```\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/core/management/__init__.py\", line 350, in execute_from_command_line\n    utility.execute()\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/core/management/__init__.py\", line 342, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/core/management/__init__.py\", line 176, in fetch_command\n    commands = get_commands()\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/utils/lru_cache.py\", line 100, in wrapper\n    result = user_function(*args, **kwds)\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/core/management/__init__.py\", line 71, in get_commands\n    for app_config in reversed(list(apps.get_app_configs())):\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/apps/registry.py\", line 137, in get_app_configs\n    self.check_apps_ready()\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/apps/registry.py\", line 124, in check_apps_ready\n    raise AppRegistryNotReady(\"Apps aren't loaded yet.\")\ndjango.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.\n```\n\nI get this exception if I try to use the <1.7 example from the docs:\n\n```\nTraceback (most recent call last):\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/core/management/commands/runserver.py\", line 109, in inner_run\n    autoreload.raise_last_exception()\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/utils/autoreload.py\", line 249, in raise_last_exception\n    six.reraise(*_exception)\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/__init__.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/apps/config.py\", line 202, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/importlib/__init__.py\", line 37, in import_module\n    __import__(name)\n  File \"/Users/rob/code/abett.api/abett/api/models.py\", line 9, in <module>\n    registry.register('Friendship')\n  File \"/Users/rob/code/django-activity-stream/actstream/registry.py\", line 93, in register\n    model_class = validate(class_or_label)\n  File \"/Users/rob/code/django-activity-stream/actstream/registry.py\", line 73, in validate\n    model_class = get_model(*model_class.split('.'))\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/apps/registry.py\", line 194, in get_model\n    self.check_models_ready()\n  File \"/Users/rob/code/abett.api/env/lib/python2.7/site-packages/django/apps/registry.py\", line 131, in check_models_ready\n    raise AppRegistryNotReady(\"Models aren't loaded yet.\")\ndjango.core.exceptions.AppRegistryNotReady: Models aren't loaded yet.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/271", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/271/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/271/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/271", "id": 120133591, "node_id": "MDU6SXNzdWUxMjAxMzM1OTE=", "number": 271, "title": "How to use ajax for retrieving new posts after limited period of time?  ", "user": {"login": "jaineshp", "id": 6897951, "node_id": "MDQ6VXNlcjY4OTc5NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6897951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaineshp", "html_url": "https://github.com/jaineshp", "followers_url": "https://api.github.com/users/jaineshp/followers", "following_url": "https://api.github.com/users/jaineshp/following{/other_user}", "gists_url": "https://api.github.com/users/jaineshp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaineshp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaineshp/subscriptions", "organizations_url": "https://api.github.com/users/jaineshp/orgs", "repos_url": "https://api.github.com/users/jaineshp/repos", "events_url": "https://api.github.com/users/jaineshp/events{/privacy}", "received_events_url": "https://api.github.com/users/jaineshp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-03T10:04:40Z", "updated_at": "2016-03-05T14:32:21Z", "closed_at": "2016-03-05T14:32:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to use ajax for retrieving new posts after limited period of time?  @justquick \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/269", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/269/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/269/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/269", "id": 118828802, "node_id": "MDU6SXNzdWUxMTg4Mjg4MDI=", "number": 269, "title": "Follow not symmetrical", "user": {"login": "AmbroiseCollon", "id": 2622390, "node_id": "MDQ6VXNlcjI2MjIzOTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2622390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AmbroiseCollon", "html_url": "https://github.com/AmbroiseCollon", "followers_url": "https://api.github.com/users/AmbroiseCollon/followers", "following_url": "https://api.github.com/users/AmbroiseCollon/following{/other_user}", "gists_url": "https://api.github.com/users/AmbroiseCollon/gists{/gist_id}", "starred_url": "https://api.github.com/users/AmbroiseCollon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AmbroiseCollon/subscriptions", "organizations_url": "https://api.github.com/users/AmbroiseCollon/orgs", "repos_url": "https://api.github.com/users/AmbroiseCollon/repos", "events_url": "https://api.github.com/users/AmbroiseCollon/events{/privacy}", "received_events_url": "https://api.github.com/users/AmbroiseCollon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-25T12:43:11Z", "updated_at": "2015-11-25T16:35:24Z", "closed_at": "2015-11-25T16:35:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "`followers()` returns the expected array\n`following()` returns `[None]`\n\n```\nuser\n===> <SimpleLazyObject: <BaseUser: artlover>>\nuser_to_follow\n===> <BaseUser: artist>\nf = follow(user, user_to_follow)\nf\n===> <Follow: artlover -> artist>\nf.follow_object\n===> <BaseUser: artist>\nf.user\n===> <SimpleLazyObject: <BaseUser: artlover>>\nfollowing(user)\n===> [None]  # WHY ? \nfollowers(user_to_follow)\n===> [<BaseUser: artlover>]\n```\n\nWhat I have tried : \n- checking if urls.py are ok with my ids being UUID\n- checking that BaseUser is registered\n- checking `(Pdb) request.user.actor_actions.all().fetch_generic_relations()`. It returned `[<Action: None started following 0 minutes ago>]`\n\nNone of this worked for me.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/267", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/267/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/267/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/267", "id": 114137103, "node_id": "MDU6SXNzdWUxMTQxMzcxMDM=", "number": 267, "title": "Not compatible with Wagtail", "user": {"login": "bufke", "id": 739307, "node_id": "MDQ6VXNlcjczOTMwNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/739307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bufke", "html_url": "https://github.com/bufke", "followers_url": "https://api.github.com/users/bufke/followers", "following_url": "https://api.github.com/users/bufke/following{/other_user}", "gists_url": "https://api.github.com/users/bufke/gists{/gist_id}", "starred_url": "https://api.github.com/users/bufke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bufke/subscriptions", "organizations_url": "https://api.github.com/users/bufke/orgs", "repos_url": "https://api.github.com/users/bufke/repos", "events_url": "https://api.github.com/users/bufke/events{/privacy}", "received_events_url": "https://api.github.com/users/bufke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-29T20:18:50Z", "updated_at": "2018-11-04T05:38:19Z", "closed_at": "2018-11-04T05:38:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using this with Wagtail CMS can cause errors when using registry.register with a wagtail Page. \n\nhttps://github.com/torchbox/wagtail/issues/1852\n\nVery similar to #48\n\n*Edited - workaround wasn't really a workaround\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/265", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/265/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/265/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/265", "id": 113487910, "node_id": "MDU6SXNzdWUxMTM0ODc5MTA=", "number": 265, "title": "Multiple Database support", "user": {"login": "saurabhv1", "id": 1270053, "node_id": "MDQ6VXNlcjEyNzAwNTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1270053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saurabhv1", "html_url": "https://github.com/saurabhv1", "followers_url": "https://api.github.com/users/saurabhv1/followers", "following_url": "https://api.github.com/users/saurabhv1/following{/other_user}", "gists_url": "https://api.github.com/users/saurabhv1/gists{/gist_id}", "starred_url": "https://api.github.com/users/saurabhv1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saurabhv1/subscriptions", "organizations_url": "https://api.github.com/users/saurabhv1/orgs", "repos_url": "https://api.github.com/users/saurabhv1/repos", "events_url": "https://api.github.com/users/saurabhv1/events{/privacy}", "received_events_url": "https://api.github.com/users/saurabhv1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-27T01:47:18Z", "updated_at": "2016-01-14T15:04:11Z", "closed_at": "2016-01-14T15:04:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django-activity-stream cant be used where user-info is in one database and the actions (of which the user has to be notified) is in another database.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/264", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/264/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/264/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/264", "id": 111417793, "node_id": "MDU6SXNzdWUxMTE0MTc3OTM=", "number": 264, "title": "More usage examples in the docs ", "user": {"login": "archatas", "id": 141459, "node_id": "MDQ6VXNlcjE0MTQ1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/141459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/archatas", "html_url": "https://github.com/archatas", "followers_url": "https://api.github.com/users/archatas/followers", "following_url": "https://api.github.com/users/archatas/following{/other_user}", "gists_url": "https://api.github.com/users/archatas/gists{/gist_id}", "starred_url": "https://api.github.com/users/archatas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/archatas/subscriptions", "organizations_url": "https://api.github.com/users/archatas/orgs", "repos_url": "https://api.github.com/users/archatas/repos", "events_url": "https://api.github.com/users/archatas/events{/privacy}", "received_events_url": "https://api.github.com/users/archatas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 42764843, "node_id": "MDU6TGFiZWw0Mjc2NDg0Mw==", "url": "https://api.github.com/repos/justquick/django-activity-stream/labels/docs", "name": "docs", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-14T15:01:55Z", "updated_at": "2016-03-05T14:30:53Z", "closed_at": "2016-03-05T14:30:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I find it unclear what is the difference between **action object** and **target**. Can you please add more usage examples in the docs? About 8-10 different examples would make the documentation much better.\n\nFor example, if we have the following:\nJohn (actor) recommended (verb) \u201cThe Matrix\u201d to Tom 12 hours ago\n\nWhat is the target here? \"The Matrix\" or Tom?\nWhat is the action object? Recommendation itself, or the movie, or Tom?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/263", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/263/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/263/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/263", "id": 110070258, "node_id": "MDU6SXNzdWUxMTAwNzAyNTg=", "number": 263, "title": "Docs mention unfollow_all URL,  which doesn't exist.", "user": {"login": "5a1t", "id": 2151882, "node_id": "MDQ6VXNlcjIxNTE4ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2151882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5a1t", "html_url": "https://github.com/5a1t", "followers_url": "https://api.github.com/users/5a1t/followers", "following_url": "https://api.github.com/users/5a1t/following{/other_user}", "gists_url": "https://api.github.com/users/5a1t/gists{/gist_id}", "starred_url": "https://api.github.com/users/5a1t/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5a1t/subscriptions", "organizations_url": "https://api.github.com/users/5a1t/orgs", "repos_url": "https://api.github.com/users/5a1t/repos", "events_url": "https://api.github.com/users/5a1t/events{/privacy}", "received_events_url": "https://api.github.com/users/5a1t/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-06T18:25:51Z", "updated_at": "2016-01-14T15:08:24Z", "closed_at": "2016-01-14T15:08:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Docs here:\nhttps://django-activity-stream.readthedocs.org/en/latest/follow.html\n\nmention a URL for unfollow_all:\ncurl -X GET http://localhost:8000/activity/unfollow_all/<content_type_id>/<object_id>/?next=/blog/ # Unfollow and redirect\n\nbut this URL doesn't exist and isn't listed in urls.py.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/262", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/262/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/262/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/262/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/262", "id": 109292812, "node_id": "MDU6SXNzdWUxMDkyOTI4MTI=", "number": 262, "title": "Deadlocks on MySQL with InnoDB", "user": {"login": "todorvelichkov", "id": 2889778, "node_id": "MDQ6VXNlcjI4ODk3Nzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2889778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/todorvelichkov", "html_url": "https://github.com/todorvelichkov", "followers_url": "https://api.github.com/users/todorvelichkov/followers", "following_url": "https://api.github.com/users/todorvelichkov/following{/other_user}", "gists_url": "https://api.github.com/users/todorvelichkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/todorvelichkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/todorvelichkov/subscriptions", "organizations_url": "https://api.github.com/users/todorvelichkov/orgs", "repos_url": "https://api.github.com/users/todorvelichkov/repos", "events_url": "https://api.github.com/users/todorvelichkov/events{/privacy}", "received_events_url": "https://api.github.com/users/todorvelichkov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-01T12:50:32Z", "updated_at": "2016-05-04T06:32:28Z", "closed_at": "2016-05-04T06:32:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have a simple functionality for the users allowing them to `CREATE/DELETE` a specific model. \nWe also listen for a `post_save` signal to create a new action when a user creates a new model. \nWe do NOT listen for `pre/post delete` signals from this model, because `actstream` set up `GenericRelations` for actionable models. This force `django` to simulate `ON DELETE CASCADE` functionality for the created actions.\n\n```\ndef on_new_record(sender, instance, created, **kwargs):\n    if created:\n        action.send(instance.user, verb='swam', action_object=instance, target=instance.location)\n\npost_save.connect(on_new_record, sender=Record, dispatch_uid=\"on_new_record\")\n```\n\nWith this simple setup, when two users at the same time create and delete one of their records, we get this:\n\n```\n------------------------\nLATEST DETECTED DEADLOCK\n------------------------\n2015-10-01 00:57:02 2b716ef84700\n*** (1) TRANSACTION:\nTRANSACTION 750478918, ACTIVE 1 sec inserting\nmysql tables in use 1, locked 1\nLOCK WAIT 5 lock struct(s), heap size 1184, 3 row lock(s), undo log entries 1\nMySQL thread id 5778701, OS thread handle 0x2b7246040700, query id 57298086 some_ip dbname update\nINSERT INTO `actstream_action` (`actor_content_type_id`, `actor_object_id`, `verb`, `description`, `target_content_type_id`, `target_object_id`, `action_object_content_type_id`, `action_object_object_id`, `timestamp`, `public`, `data`) VALUES (46, '280196', 'swam', NULL, 44, '39013', 47, '5500621', '2015-09-30 20:06:18', 1, NULL)\n*** (1) WAITING FOR THIS LOCK TO BE GRANTED:\nRECORD LOCKS space id 666 page no 3352 n bits 1104 index `actstream_action_3df58830` of table `dbname`.`actstream_action` trx id 750478918 lock_mode X locks gap before rec insert intention waiting\nRecord lock, heap no 601 PHYSICAL RECORD: n_fields 2; compact format; info bits 0\n 0: len 4; hex 8000006e; asc    n;;\n 1: len 4; hex 80020eea; asc     ;;\n\n*** (2) TRANSACTION:\nTRANSACTION 750478855, ACTIVE 2 sec fetching rows\nmysql tables in use 1, locked 1\n2207 lock struct(s), heap size 243240, 406238 row lock(s), undo log entries 1\nMySQL thread id 5778693, OS thread handle 0x2b716ef84700, query id 57298015 some_ip dbname updating\nDELETE FROM `actstream_action` WHERE (`actstream_action`.`action_object_object_id` IN ('4942966') AND `actstream_action`.`action_object_content_type_id` = 47)\n*** (2) HOLDS THE LOCK(S):\nRECORD LOCKS space id 666 page no 3352 n bits 1104 index `actstream_action_3df58830` of table `dbname`.`actstream_action` trx id 750478855 lock_mode X locks gap before rec\nRecord lock, heap no 601 PHYSICAL RECORD: n_fields 2; compact format; info bits 0\n 0: len 4; hex 8000006e; asc    n;;\n 1: len 4; hex 80020eea; asc     ;;\n\n*** (2) WAITING FOR THIS LOCK TO BE GRANTED:\nRECORD LOCKS space id 666 page no 3284 n bits 192 index `PRIMARY` of table `dbname`.`actstream_action` trx id 750478855 lock_mode X waiting\nRecord lock, heap no 124 PHYSICAL RECORD: n_fields 14; compact format; info bits 0\n 0: len 4; hex 8009d63e; asc    >;;\n 1: len 6; hex 00002cbb6646; asc   , fF;;\n 2: len 7; hex fe0000013f0110; asc     ?  ;;\n 3: len 4; hex 8000002e; asc    .;;\n 4: len 6; hex 323830313936; asc 280196;;\n 5: len 4; hex 7377616d; asc swam;;\n 6: SQL NULL;\n 7: len 4; hex 8000002c; asc    ,;;\n 8: len 5; hex 3339303133; asc 39013;;\n 9: len 4; hex 8000002f; asc    /;;\n 10: len 7; hex 35353030363231; asc 5500621;;\n 11: len 5; hex 99973d4192; asc   =A ;;\n 12: len 1; hex 81; asc  ;;\n 13: SQL NULL;\n\n*** WE ROLL BACK TRANSACTION (1)\n```\n\n[AFAIK](http://stackoverflow.com/questions/2332768/how-to-avoid-mysql-deadlock-found-when-trying-to-get-lock-try-restarting-trans/2423921#2423921), if we change the delete statement to something like:\n\n```\nDELETE FROM `actstream_action` WHERE `actstream_action`.`id` IN (SELECT `actstream_action`.`id` FROM `actstream_action` WHERE `actstream_action`.`action_object_object_id` IN ('4942966') AND `actstream_action`.`action_object_content_type_id` = 47)\n```\n\nthis could possibly fix the problem. But we don't have access to this query since its automatically generated by Django, who [states](https://docs.djangoproject.com/en/1.7/ref/contrib/contenttypes/#reverse-generic-relations) that: \n\n> Note also, that if you delete an object that has a GenericRelation, any objects which have a GenericForeignKey pointing at it will be deleted as well. In the example above, this means that if a Bookmark object were deleted, any TaggedItem objects pointing at it would be deleted at the same time.\n> \n> Unlike ForeignKey, GenericForeignKey does not accept an on_delete argument to customize this behavior; if desired, you can avoid the cascade-deletion simply by not using GenericRelation, and alternate behavior can be provided via the pre_delete signal.\n\nBut the `GenericRelation` comes at the [registration level](https://github.com/justquick/django-activity-stream/blob/master/actstream/registry.py#L18) of the `acstream`. So it seems like there is not way to skip this part and manually do the desired `on_delete` behavior.\n\nAny ideas how to avoid this deadlocks? One thing we haven't try yet is to try [to repeat](http://stackoverflow.com/questions/12180637/python-django-script-crashes-on-mysql-deadlock) the transaction on failure, something like:\n\n```\ndef on_new_record(sender, instance, created, **kwargs):\n    if created:\n        try:\n            action.send(instance.user, verb='swam', action_object=instance, target=instance.location)\n        except DatabaseError:\n            # retry here\n            action.send(instance.user, verb='swam', action_object=instance, target=instance.location)\n```\n\nAnother thing which we haven't tried yet is to [lower the isolation level](http://stackoverflow.com/questions/11213481/django-db-transactions-and-deadlocks)\n\nWe use Django 1.7.x and MySQL 5.6.x\n\nAny help will be appreciated, 10x in advance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/261", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/261/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/261/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/261", "id": 108421318, "node_id": "MDU6SXNzdWUxMDg0MjEzMTg=", "number": 261, "title": "Custom User Proxy Model", "user": {"login": "lnxg33k", "id": 1170490, "node_id": "MDQ6VXNlcjExNzA0OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1170490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnxg33k", "html_url": "https://github.com/lnxg33k", "followers_url": "https://api.github.com/users/lnxg33k/followers", "following_url": "https://api.github.com/users/lnxg33k/following{/other_user}", "gists_url": "https://api.github.com/users/lnxg33k/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnxg33k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnxg33k/subscriptions", "organizations_url": "https://api.github.com/users/lnxg33k/orgs", "repos_url": "https://api.github.com/users/lnxg33k/repos", "events_url": "https://api.github.com/users/lnxg33k/events{/privacy}", "received_events_url": "https://api.github.com/users/lnxg33k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-25T23:05:00Z", "updated_at": "2016-05-04T06:38:39Z", "closed_at": "2016-05-04T06:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a custom user model as a proxy which does not inherit from AbstractUser.\nIs there anyway to register it without refactoring my model ?!\n\nCurrent User Model:\n\n``` python\nclass Stakeholder(User):\n\n    @staticmethod\n    def autocomplete_search_fields():\n        return (\"id__iexact\", \"username__icontains\",)\n\n    def __init__(self, *args, **kwargs):\n        self._meta.get_field_by_name('email')[0]._unique = True\n        super(Stakeholder, self).__init__(*args, **kwargs)\n        self._meta.get_field('email').blank = False\n\n    class Meta:\n        proxy = True\n```\n\nMy AppConfig class:\n\n``` python\nclass AppConfig(AppConfig):\n    name = 'app'\n\n    def ready(self):\n        registry.register(self.get_model('Stakeholder'))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/258", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/258/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/258/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/258", "id": 103544185, "node_id": "MDU6SXNzdWUxMDM1NDQxODU=", "number": 258, "title": "Not compatible with defer", "user": {"login": "bufke", "id": 739307, "node_id": "MDQ6VXNlcjczOTMwNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/739307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bufke", "html_url": "https://github.com/bufke", "followers_url": "https://api.github.com/users/bufke/followers", "following_url": "https://api.github.com/users/bufke/following{/other_user}", "gists_url": "https://api.github.com/users/bufke/gists{/gist_id}", "starred_url": "https://api.github.com/users/bufke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bufke/subscriptions", "organizations_url": "https://api.github.com/users/bufke/orgs", "repos_url": "https://api.github.com/users/bufke/repos", "events_url": "https://api.github.com/users/bufke/events{/privacy}", "received_events_url": "https://api.github.com/users/bufke/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 311358559, "node_id": "MDU6TGFiZWwzMTEzNTg1NTk=", "url": "https://api.github.com/repos/justquick/django-activity-stream/labels/future", "name": "future", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-27T16:12:26Z", "updated_at": "2016-05-04T06:58:59Z", "closed_at": "2016-05-04T06:58:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If a model makes use of defer, it can change the class name and lead to issues. \n\nhttps://groups.google.com/forum/#!topic/django-users/_HjWfxkx0y8\n\nEven happens in django 1.8 class based views. It was fixed for 1.9\n\nhttps://github.com/django/django/commit/86aaffa5a3510c007167d116cf4ad72b79e93f31\n\nExample stack trace\n\n```\nThe model MyModel_Deferred_bigfield is not registered. Please use actstream.registry to register it.\n\n  File \"actstream/actions.py\", line 110, in action_handler\n    check(obj)\n  File \"actstream/registry.py\", line 110, in check\n    'to register it.' % model_class.__name__)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/257", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/257/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/257/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/257", "id": 101683687, "node_id": "MDU6SXNzdWUxMDE2ODM2ODc=", "number": 257, "title": "Deprecated string view arguments in urls.py", "user": {"login": "bradford281", "id": 5522009, "node_id": "MDQ6VXNlcjU1MjIwMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5522009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bradford281", "html_url": "https://github.com/bradford281", "followers_url": "https://api.github.com/users/bradford281/followers", "following_url": "https://api.github.com/users/bradford281/following{/other_user}", "gists_url": "https://api.github.com/users/bradford281/gists{/gist_id}", "starred_url": "https://api.github.com/users/bradford281/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bradford281/subscriptions", "organizations_url": "https://api.github.com/users/bradford281/orgs", "repos_url": "https://api.github.com/users/bradford281/repos", "events_url": "https://api.github.com/users/bradford281/events{/privacy}", "received_events_url": "https://api.github.com/users/bradford281/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-18T15:29:44Z", "updated_at": "2016-03-06T02:43:17Z", "closed_at": "2016-03-06T02:43:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "RemovedInDjango110Warning: Support for string view arguments to url() is deprecated and will be removed in Django 1.10 (got user). Pass the callable instead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/256", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/256/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/256/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/256", "id": 101548137, "node_id": "MDU6SXNzdWUxMDE1NDgxMzc=", "number": 256, "title": "actor_action not returning all actions for a given actor", "user": {"login": "raphaeltm", "id": 910895, "node_id": "MDQ6VXNlcjkxMDg5NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/910895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphaeltm", "html_url": "https://github.com/raphaeltm", "followers_url": "https://api.github.com/users/raphaeltm/followers", "following_url": "https://api.github.com/users/raphaeltm/following{/other_user}", "gists_url": "https://api.github.com/users/raphaeltm/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphaeltm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphaeltm/subscriptions", "organizations_url": "https://api.github.com/users/raphaeltm/orgs", "repos_url": "https://api.github.com/users/raphaeltm/repos", "events_url": "https://api.github.com/users/raphaeltm/events{/privacy}", "received_events_url": "https://api.github.com/users/raphaeltm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-18T01:52:20Z", "updated_at": "2015-08-18T21:12:59Z", "closed_at": "2015-08-18T21:12:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the docs, `request.user.actor_action.all()` should do the following: `Generates a stream of Actions where the request.user was the actor`\n\nAt the moment, I've got this in the admin:\n![image](https://cloud.githubusercontent.com/assets/910895/9320554/4eb57be4-4510-11e5-98a1-5e0aff44b412.png)\n\nBut when I run `admin.actor_action.all()` I only get the five actions with no target:\n\n```\n>>> admin = User.objects.get(pk=1)\n>>> actions = admin.actor_actions.all()\n>>> len(actions)\n5\n>>> for ac in actions:\n...     ac\n...     \n<Action: admin completed-challenge Challenge 01 7\u00a0hours ago 25 minutes ago>\n<Action: admin completed-challenge Challenge 01 10\u00a0hours ago 3 hours, 20 minutes ago>\n<Action: admin completed-challenge Challenge 00 10\u00a0hours ago 3 hours, 32 minutes ago>\n<Action: admin completed-challenge Challenge 00 10\u00a0hours ago 3 hours, 34 minutes ago>\n<Action: admin completed-challenge Challenge 00 10\u00a0hours ago 3 hours, 34 minutes ago>\n```\n\nUnless I've misunderstood the docs, that seems wrong.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/255", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/255/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/255/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/255", "id": 98561520, "node_id": "MDU6SXNzdWU5ODU2MTUyMA==", "number": 255, "title": "How to enable \"Share\" feature?", "user": {"login": "jaineshp", "id": 6897951, "node_id": "MDQ6VXNlcjY4OTc5NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6897951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaineshp", "html_url": "https://github.com/jaineshp", "followers_url": "https://api.github.com/users/jaineshp/followers", "following_url": "https://api.github.com/users/jaineshp/following{/other_user}", "gists_url": "https://api.github.com/users/jaineshp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaineshp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaineshp/subscriptions", "organizations_url": "https://api.github.com/users/jaineshp/orgs", "repos_url": "https://api.github.com/users/jaineshp/repos", "events_url": "https://api.github.com/users/jaineshp/events{/privacy}", "received_events_url": "https://api.github.com/users/jaineshp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-01T21:06:30Z", "updated_at": "2016-03-06T02:34:35Z", "closed_at": "2016-03-06T02:34:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to implement the sharing feature? Is there any option available or I ll have to add extra fields then ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/253", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/253/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/253/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/253", "id": 97170434, "node_id": "MDU6SXNzdWU5NzE3MDQzNA==", "number": 253, "title": "column 'actstream_action.data' not found even with django-jsonfield installed", "user": {"login": "raphaeltm", "id": 910895, "node_id": "MDQ6VXNlcjkxMDg5NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/910895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raphaeltm", "html_url": "https://github.com/raphaeltm", "followers_url": "https://api.github.com/users/raphaeltm/followers", "following_url": "https://api.github.com/users/raphaeltm/following{/other_user}", "gists_url": "https://api.github.com/users/raphaeltm/gists{/gist_id}", "starred_url": "https://api.github.com/users/raphaeltm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raphaeltm/subscriptions", "organizations_url": "https://api.github.com/users/raphaeltm/orgs", "repos_url": "https://api.github.com/users/raphaeltm/repos", "events_url": "https://api.github.com/users/raphaeltm/events{/privacy}", "received_events_url": "https://api.github.com/users/raphaeltm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-07-24T23:50:35Z", "updated_at": "2015-09-22T03:45:54Z", "closed_at": "2015-09-22T03:45:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was using django-activity-stream without the extra data.  Later decided it would be necessary.\n\nI installed django-jsonfield, but I still get the following error:\n\n`OperationalError: (1054, \"Unknown column 'data' in 'field list'\")`\n\nI have the appropriate settings, in theory:\n\n```\nACTSTREAM_SETTINGS = {\n    'USE_JSONFIELD': True,\n}\n```\n\nI'm not exactly sure where to go from here\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/252", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/252/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/252/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/252", "id": 96492900, "node_id": "MDU6SXNzdWU5NjQ5MjkwMA==", "number": 252, "title": "How to get user_stream for related objects?", "user": {"login": "jaineshp", "id": 6897951, "node_id": "MDQ6VXNlcjY4OTc5NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6897951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaineshp", "html_url": "https://github.com/jaineshp", "followers_url": "https://api.github.com/users/jaineshp/followers", "following_url": "https://api.github.com/users/jaineshp/following{/other_user}", "gists_url": "https://api.github.com/users/jaineshp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaineshp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaineshp/subscriptions", "organizations_url": "https://api.github.com/users/jaineshp/orgs", "repos_url": "https://api.github.com/users/jaineshp/repos", "events_url": "https://api.github.com/users/jaineshp/events{/privacy}", "received_events_url": "https://api.github.com/users/jaineshp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-22T07:19:57Z", "updated_at": "2016-05-04T06:37:25Z", "closed_at": "2016-05-04T06:37:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have one class for question and one for the options, One question can have multiple options. How can I get user_stream for it? And how to do formatting of it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/250", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/250/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/250/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/250", "id": 94814399, "node_id": "MDU6SXNzdWU5NDgxNDM5OQ==", "number": 250, "title": "How to send feeds to multiple users?", "user": {"login": "jaineshp", "id": 6897951, "node_id": "MDQ6VXNlcjY4OTc5NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6897951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaineshp", "html_url": "https://github.com/jaineshp", "followers_url": "https://api.github.com/users/jaineshp/followers", "following_url": "https://api.github.com/users/jaineshp/following{/other_user}", "gists_url": "https://api.github.com/users/jaineshp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaineshp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaineshp/subscriptions", "organizations_url": "https://api.github.com/users/jaineshp/orgs", "repos_url": "https://api.github.com/users/jaineshp/repos", "events_url": "https://api.github.com/users/jaineshp/events{/privacy}", "received_events_url": "https://api.github.com/users/jaineshp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-13T21:20:36Z", "updated_at": "2015-07-22T07:18:11Z", "closed_at": "2015-07-22T07:18:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "while creating an action by using:\n\n```\naction.send(request.user, verb='created comment', action_object=comment, target=group)\n```\n\nHow to send the feeds to the followers of the user? Instead of using group how to send the feeds to multiple users?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/249", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/249/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/249/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/249", "id": 94587706, "node_id": "MDU6SXNzdWU5NDU4NzcwNg==", "number": 249, "title": "Follow not working", "user": {"login": "jaineshp", "id": 6897951, "node_id": "MDQ6VXNlcjY4OTc5NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6897951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaineshp", "html_url": "https://github.com/jaineshp", "followers_url": "https://api.github.com/users/jaineshp/followers", "following_url": "https://api.github.com/users/jaineshp/following{/other_user}", "gists_url": "https://api.github.com/users/jaineshp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaineshp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaineshp/subscriptions", "organizations_url": "https://api.github.com/users/jaineshp/orgs", "repos_url": "https://api.github.com/users/jaineshp/repos", "events_url": "https://api.github.com/users/jaineshp/events{/privacy}", "received_events_url": "https://api.github.com/users/jaineshp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-12T18:08:57Z", "updated_at": "2015-07-12T18:48:30Z", "closed_at": "2015-07-12T18:48:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n>>>y=User.objects.get(id=1)\n>>>z=User.objects.get(id=2)\n>>>follow(y,z)\nTraceback (most recent call last):\n  File \"<console>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/actstream/actions.py\", line 45, in follow\n    action.send(user, verb=_('started following'), target=obj, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/django/dispatch/dispatcher.py\", line 201, in send\n    response = receiver(signal=self, sender=sender, **named)\n  File \"/usr/local/lib/python2.7/dist-packages/actstream/actions.py\", line 116, in action_handler\n    newaction.save(force_insert=True)\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/base.py\", line 710, in save\n    force_update=force_update, update_fields=update_fields)\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/base.py\", line 738, in save_base\n    updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/base.py\", line 822, in _save_table\n    result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/base.py\", line 861, in _do_insert\n    using=using, raw=raw)\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/manager.py\", line 127, in     manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/query.py\", line 920, in _insert\n    return query.get_compiler(using=using).execute_sql(return_id)\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/models/sql/compiler.py\", line 974, in execute_sql\n    cursor.execute(sql, params)\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/backends/utils.py\", line 79, in execute\n    return super(CursorDebugWrapper, self).execute(sql, params)\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/utils.py\", line 97, in __exit__\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\n  File \"/usr/local/lib/python2.7/dist-packages/django/db/backends/sqlite3/base.py\", line 318, in     execute\n    return Database.Cursor.execute(self, query, params)\nOperationalError: table actstream_action has no column named data\n```\n\nAnd then when again just after this\n\n```\n>>> follow(y,z)\n<Follow: jp -> lol>\n>>> \n```\n\nWhat to do in here?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/248", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/248/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/248/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/248", "id": 89785527, "node_id": "MDU6SXNzdWU4OTc4NTUyNw==", "number": 248, "title": "Import Error when trying to use set up a custom manager", "user": {"login": "sampeka", "id": 7493006, "node_id": "MDQ6VXNlcjc0OTMwMDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7493006?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sampeka", "html_url": "https://github.com/sampeka", "followers_url": "https://api.github.com/users/sampeka/followers", "following_url": "https://api.github.com/users/sampeka/following{/other_user}", "gists_url": "https://api.github.com/users/sampeka/gists{/gist_id}", "starred_url": "https://api.github.com/users/sampeka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sampeka/subscriptions", "organizations_url": "https://api.github.com/users/sampeka/orgs", "repos_url": "https://api.github.com/users/sampeka/repos", "events_url": "https://api.github.com/users/sampeka/events{/privacy}", "received_events_url": "https://api.github.com/users/sampeka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-06-20T15:50:43Z", "updated_at": "2017-06-15T23:10:31Z", "closed_at": "2015-06-21T13:26:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've written a custom manager, but can't use it due to an import error in `settings.py`. The error is:\n\n`ImportError: Cannot import social.managers.MyActionManager try fixing ACTSTREAM_SETTINGS[MANAGER]setting.`\n\nThese are the settings:\n\n```\nACTSTREAM_SETTINGS = {\n    'MANAGER': 'social.managers.MyActionManager',\n    'FETCH_RELATIONS': True,\n    'USE_JSONFIELD': True\n}\n```\n\nAnd this is the `social.managers` file:\n\n```\nfrom datetime import datetime, timedelta\n\nfrom actstream.managers import ActionManager, stream\nfrom actstream.models import following, user_stream\n\nclass MyActionManager(ActionManager):\n\n    @stream\n    def any_followed_stream(self, user, **kwargs):\n        date_start = datetime.now() - timedelta(days=3)\n        return user_stream(user).filter(date__gte=date_start)\n```\n\nThe path is definitely correctly, so not sure what's wrong here?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/246", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/246/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/246/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/246", "id": 87901771, "node_id": "MDU6SXNzdWU4NzkwMTc3MQ==", "number": 246, "title": "action_object not being saved", "user": {"login": "realmhamdy", "id": 5938078, "node_id": "MDQ6VXNlcjU5MzgwNzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5938078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realmhamdy", "html_url": "https://github.com/realmhamdy", "followers_url": "https://api.github.com/users/realmhamdy/followers", "following_url": "https://api.github.com/users/realmhamdy/following{/other_user}", "gists_url": "https://api.github.com/users/realmhamdy/gists{/gist_id}", "starred_url": "https://api.github.com/users/realmhamdy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realmhamdy/subscriptions", "organizations_url": "https://api.github.com/users/realmhamdy/orgs", "repos_url": "https://api.github.com/users/realmhamdy/repos", "events_url": "https://api.github.com/users/realmhamdy/events{/privacy}", "received_events_url": "https://api.github.com/users/realmhamdy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-06-13T01:42:47Z", "updated_at": "2016-05-04T06:33:25Z", "closed_at": "2016-05-04T06:33:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `django-threaded-comments` app to handle the comments. When I try to create the action, all is saved except the comment instance, which is a `ThreadedComment` instance.\nCode:\n\n``` python\n@receiver(comment_was_posted, dispatch_uid=\"default_comment_posted_handler\")\ndef comment_posted_handler(sender, comment, request, **kwargs):\n    action.send(request.user, verb=\"commented\", \n                action_object=comment, target=comment.content_object,\n                comment=comment.comment)\n```\n\nIt's also notable that saving the comment as custom data as above doesn't work either.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/245", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/245/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/245/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/245", "id": 86914839, "node_id": "MDU6SXNzdWU4NjkxNDgzOQ==", "number": 245, "title": "Missing target while using actor_stream", "user": {"login": "fynjah", "id": 3481154, "node_id": "MDQ6VXNlcjM0ODExNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3481154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fynjah", "html_url": "https://github.com/fynjah", "followers_url": "https://api.github.com/users/fynjah/followers", "following_url": "https://api.github.com/users/fynjah/following{/other_user}", "gists_url": "https://api.github.com/users/fynjah/gists{/gist_id}", "starred_url": "https://api.github.com/users/fynjah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fynjah/subscriptions", "organizations_url": "https://api.github.com/users/fynjah/orgs", "repos_url": "https://api.github.com/users/fynjah/repos", "events_url": "https://api.github.com/users/fynjah/events{/privacy}", "received_events_url": "https://api.github.com/users/fynjah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 370765876, "node_id": "MDU6TGFiZWwzNzA3NjU4NzY=", "url": "https://api.github.com/repos/justquick/django-activity-stream/labels/weirdness", "name": "weirdness", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2015-06-10T10:16:10Z", "updated_at": "2020-01-07T16:38:37Z", "closed_at": "2019-04-15T01:42:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi.\nI'm expecting troubles with `actor_stream(request.user)`. \n\nfor example:\n\n```\nfrom actstream.models import actor_stream, Action\nprint actor_stream(request.user)[0].target # returns None\nprint Action.objects.all()[0].target # returns Target object\n```\n\nBUT:\n\n```\nfrom actstream.models import actor_stream, Action\nprint request.user.actor_actions.all()[0].target  # returns Target object\n```\n\nUser model - this is a custom user model, configured as described in djangoproject tutorial. \nTarget model looks like this:\n\n```\nclass Task(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey('core_auth.User', blank=True, null=True)\n    ... < more fields >\n```\n\nLet me show you:\n\n```\n>>> from actstream.models import actor_stream, Action\n>>> from core_auth.models import User\n>>> u = User.objects.get(username='fynjah')\n>>> actor_stream(u)[0].target # None\n>>> x = actor_stream(u)[0]\n>>> x\n<Action: fynjah changed status DONE 58 minutes ago>\n# BUT:\n>>> x.target_content_type\n<ContentType: Task>\n>>> x.target\n>>> x.target_object_id\nu'f08ae5ab-8c07-4929-9021-62c867f0d081'\n# AND:\n>>> u.actor_actions.all()[0].target\n<Task: wdstrm compositing>\n```\n\nWhat am i doing wrong :\\\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/244", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/244/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/244/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/244", "id": 85913980, "node_id": "MDU6SXNzdWU4NTkxMzk4MA==", "number": 244, "title": "'ascii' codec can't decode byte 0xd1 in position 6: ordinal not in range(128) when accessing admin interface", "user": {"login": "rzinurov", "id": 8040747, "node_id": "MDQ6VXNlcjgwNDA3NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/8040747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rzinurov", "html_url": "https://github.com/rzinurov", "followers_url": "https://api.github.com/users/rzinurov/followers", "following_url": "https://api.github.com/users/rzinurov/following{/other_user}", "gists_url": "https://api.github.com/users/rzinurov/gists{/gist_id}", "starred_url": "https://api.github.com/users/rzinurov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rzinurov/subscriptions", "organizations_url": "https://api.github.com/users/rzinurov/orgs", "repos_url": "https://api.github.com/users/rzinurov/repos", "events_url": "https://api.github.com/users/rzinurov/events{/privacy}", "received_events_url": "https://api.github.com/users/rzinurov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-07T16:06:23Z", "updated_at": "2015-06-19T13:12:17Z", "closed_at": "2015-06-19T13:12:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\n\nWhen I try to open activity list in Django admin interface I'm getting this error:\n\n```\n'ascii' codec can't decode byte 0xd1 in position 6: ordinal not in range(128)\n```\n\nI think this happens because I have cyrillic characters in action target field. This issue was also reproducible with `django-notifications-hq==0.6.2` which was derived from this app, but it's fixed in version 0.7.0. Please let me know if there is any temporary workaround. I'm using `django-activity-stream==0.5.1`\n\n`django-notifications-hq` issue:\nhttps://github.com/django-notifications/django-notifications/issues/63\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/243", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/243/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/243/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/243", "id": 84774926, "node_id": "MDU6SXNzdWU4NDc3NDkyNg==", "number": 243, "title": "Potential For nullable actor", "user": {"login": "jpulec", "id": 407780, "node_id": "MDQ6VXNlcjQwNzc4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/407780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpulec", "html_url": "https://github.com/jpulec", "followers_url": "https://api.github.com/users/jpulec/followers", "following_url": "https://api.github.com/users/jpulec/following{/other_user}", "gists_url": "https://api.github.com/users/jpulec/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpulec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpulec/subscriptions", "organizations_url": "https://api.github.com/users/jpulec/orgs", "repos_url": "https://api.github.com/users/jpulec/repos", "events_url": "https://api.github.com/users/jpulec/events{/privacy}", "received_events_url": "https://api.github.com/users/jpulec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-03T21:18:12Z", "updated_at": "2015-06-15T05:07:41Z", "closed_at": "2015-06-15T05:07:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm wondering if there is any sense in making `actor` a nullable field. I have a use case where I'm tracking the actions of my users, but also want to track if the same actions happened automatically.\n\nFor example, write a record whenever an actor placed an order, but also write a record whenever an order was placed automatically by one of our scheduled celery tasks.\n\nI think this breaks the JSON spec ( :sob: ), so I could understand a lot of reasons for not doing it. But I'm also wondering if anyone else has run into this use case, and how they may have solved it. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/242", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/242/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/242/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/242", "id": 84262026, "node_id": "MDU6SXNzdWU4NDI2MjAyNg==", "number": 242, "title": "TemplateSyntaxError - actor_url", "user": {"login": "harisbeha", "id": 4675295, "node_id": "MDQ6VXNlcjQ2NzUyOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4675295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harisbeha", "html_url": "https://github.com/harisbeha", "followers_url": "https://api.github.com/users/harisbeha/followers", "following_url": "https://api.github.com/users/harisbeha/following{/other_user}", "gists_url": "https://api.github.com/users/harisbeha/gists{/gist_id}", "starred_url": "https://api.github.com/users/harisbeha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harisbeha/subscriptions", "organizations_url": "https://api.github.com/users/harisbeha/orgs", "repos_url": "https://api.github.com/users/harisbeha/repos", "events_url": "https://api.github.com/users/harisbeha/events{/privacy}", "received_events_url": "https://api.github.com/users/harisbeha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-06-02T23:32:52Z", "updated_at": "2015-06-03T19:41:18Z", "closed_at": "2015-06-03T19:41:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried installing django-activity stream according to the directions. Everything is installed based on default settings. I'm currently getting the following error: \n\nTemplateSyntaxError at /activity/\nInvalid block tag: 'actor_url', expected 'elif', 'else' or 'endif'\nRequest Method: GET\nRequest URL:    mysite/activity/\nDjango Version: 1.5.5\nException Type: TemplateSyntaxError\nException Value:  \nInvalid block tag: 'actor_url', expected 'elif', 'else' or 'endif'\nException Location: /home/ubuntu/pitch/local/lib/python2.7/site-packages/django/template/base.py in invalid_block_tag, line 327\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/240", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/240/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/240/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/240", "id": 80905863, "node_id": "MDU6SXNzdWU4MDkwNTg2Mw==", "number": 240, "title": "migration error on acstream_follow", "user": {"login": "avances123", "id": 136825, "node_id": "MDQ6VXNlcjEzNjgyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/136825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avances123", "html_url": "https://github.com/avances123", "followers_url": "https://api.github.com/users/avances123/followers", "following_url": "https://api.github.com/users/avances123/following{/other_user}", "gists_url": "https://api.github.com/users/avances123/gists{/gist_id}", "starred_url": "https://api.github.com/users/avances123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avances123/subscriptions", "organizations_url": "https://api.github.com/users/avances123/orgs", "repos_url": "https://api.github.com/users/avances123/repos", "events_url": "https://api.github.com/users/avances123/events{/privacy}", "received_events_url": "https://api.github.com/users/avances123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-26T10:42:44Z", "updated_at": "2015-06-15T05:08:38Z", "closed_at": "2015-06-15T05:08:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "It tries to make a foreign key to auth.user (or default user model) before it is created.\n\nSolved with 2-step:\n\n```\npython manage.py migrate auth\npython manage.py migrate\n```\n\nBut can't run tests because of the same error in test database creation.\n\npython3.4 django 1.8 and postgresql 9.4\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/234", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/234/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/234/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/234", "id": 71609362, "node_id": "MDU6SXNzdWU3MTYwOTM2Mg==", "number": 234, "title": "django.contrib.contenttypes.generic is deprecated in Django 1.8", "user": {"login": "bradford281", "id": 5522009, "node_id": "MDQ6VXNlcjU1MjIwMDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5522009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bradford281", "html_url": "https://github.com/bradford281", "followers_url": "https://api.github.com/users/bradford281/followers", "following_url": "https://api.github.com/users/bradford281/following{/other_user}", "gists_url": "https://api.github.com/users/bradford281/gists{/gist_id}", "starred_url": "https://api.github.com/users/bradford281/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bradford281/subscriptions", "organizations_url": "https://api.github.com/users/bradford281/orgs", "repos_url": "https://api.github.com/users/bradford281/repos", "events_url": "https://api.github.com/users/bradford281/events{/privacy}", "received_events_url": "https://api.github.com/users/bradford281/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-28T14:44:14Z", "updated_at": "2015-05-03T15:13:39Z", "closed_at": "2015-05-03T15:13:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Deprecation warnings indicate the contents have been moved to the fields, forms, and admin submodules of django.contrib.contenttypes\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/232", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/232/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/232/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/232", "id": 70459875, "node_id": "MDU6SXNzdWU3MDQ1OTg3NQ==", "number": 232, "title": "How to get the custom data added to the action on custom feeds", "user": {"login": "jdcaballerov", "id": 743513, "node_id": "MDQ6VXNlcjc0MzUxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/743513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdcaballerov", "html_url": "https://github.com/jdcaballerov", "followers_url": "https://api.github.com/users/jdcaballerov/followers", "following_url": "https://api.github.com/users/jdcaballerov/following{/other_user}", "gists_url": "https://api.github.com/users/jdcaballerov/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdcaballerov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdcaballerov/subscriptions", "organizations_url": "https://api.github.com/users/jdcaballerov/orgs", "repos_url": "https://api.github.com/users/jdcaballerov/repos", "events_url": "https://api.github.com/users/jdcaballerov/events{/privacy}", "received_events_url": "https://api.github.com/users/jdcaballerov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-04-23T16:51:47Z", "updated_at": "2015-06-20T04:53:25Z", "closed_at": "2015-06-20T04:53:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nIs there any way to get the custom data (json field) added to the action on Custom Feeds ?\n\nAs far as I can get from the code one way is to alter the function \"format\" in AbstractActivityStream . I think one can easily detect if the user is using the field using the setting ACTSTREAM_SETTINGS['USE_JSONFIELD'] and thus including it.\n\nBest,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/231", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/231/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/231/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/231", "id": 70106542, "node_id": "MDU6SXNzdWU3MDEwNjU0Mg==", "number": 231, "title": "Errors", "user": {"login": "andreykko", "id": 3809676, "node_id": "MDQ6VXNlcjM4MDk2NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3809676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreykko", "html_url": "https://github.com/andreykko", "followers_url": "https://api.github.com/users/andreykko/followers", "following_url": "https://api.github.com/users/andreykko/following{/other_user}", "gists_url": "https://api.github.com/users/andreykko/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreykko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreykko/subscriptions", "organizations_url": "https://api.github.com/users/andreykko/orgs", "repos_url": "https://api.github.com/users/andreykko/repos", "events_url": "https://api.github.com/users/andreykko/events{/privacy}", "received_events_url": "https://api.github.com/users/andreykko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-22T12:01:46Z", "updated_at": "2015-05-03T15:14:24Z", "closed_at": "2015-05-03T15:14:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for library! \nBut I have some issues:\n![Error](https://pp.vk.me/c624823/v624823041/29bc2/pEN3pzzl5gE.jpg) - in admin, and I get None of Actor and etc when grab user feed. User model is registered. \nCan someone help me plz?\nProblem in admin only on python 3.4, on 2.7 admin work fine, but problem with None still exist.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/229", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/229/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/229/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/229", "id": 68137136, "node_id": "MDU6SXNzdWU2ODEzNzEzNg==", "number": 229, "title": "Ability to call <object>.any_actions, similar to .target_actions", "user": {"login": "benbacardi", "id": 882469, "node_id": "MDQ6VXNlcjg4MjQ2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/882469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benbacardi", "html_url": "https://github.com/benbacardi", "followers_url": "https://api.github.com/users/benbacardi/followers", "following_url": "https://api.github.com/users/benbacardi/following{/other_user}", "gists_url": "https://api.github.com/users/benbacardi/gists{/gist_id}", "starred_url": "https://api.github.com/users/benbacardi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benbacardi/subscriptions", "organizations_url": "https://api.github.com/users/benbacardi/orgs", "repos_url": "https://api.github.com/users/benbacardi/repos", "events_url": "https://api.github.com/users/benbacardi/events{/privacy}", "received_events_url": "https://api.github.com/users/benbacardi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-13T16:22:41Z", "updated_at": "2015-05-10T03:17:26Z", "closed_at": "2015-05-10T03:17:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Most streams provide a convenience method on the object so you don't have to import the function from `actstream.models`. However, the [any_stream](https://django-activity-stream.readthedocs.org/en/latest/streams.html#any-streams) doesn't. Could this possibly be provided?\n\n``` python\n>>> object.any_actions.all()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/228", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/228/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/228/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/228", "id": 67218202, "node_id": "MDU6SXNzdWU2NzIxODIwMg==", "number": 228, "title": "Problem when using UUID as objects Primary Keys", "user": {"login": "jdcaballerov", "id": 743513, "node_id": "MDQ6VXNlcjc0MzUxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/743513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdcaballerov", "html_url": "https://github.com/jdcaballerov", "followers_url": "https://api.github.com/users/jdcaballerov/followers", "following_url": "https://api.github.com/users/jdcaballerov/following{/other_user}", "gists_url": "https://api.github.com/users/jdcaballerov/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdcaballerov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdcaballerov/subscriptions", "organizations_url": "https://api.github.com/users/jdcaballerov/orgs", "repos_url": "https://api.github.com/users/jdcaballerov/repos", "events_url": "https://api.github.com/users/jdcaballerov/events{/privacy}", "received_events_url": "https://api.github.com/users/jdcaballerov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-08T20:56:06Z", "updated_at": "2015-05-03T15:33:38Z", "closed_at": "2015-05-03T15:33:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI think that with the new Django 1.8 which now has a built in UUID field usable as primary key there will be problems since all the urls assume integers (regex: \\d+)  for object_id.\n\nAny suggestions to start addressing the issue? I am not familiar with the codebase. I\u00b4ll be glad to help.\n\nbest,\n\nupdate: Changing the regex in the urls for object_id to (?P<object_id>[^/]+) seems to work.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/227", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/227/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/227/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/227", "id": 65678525, "node_id": "MDU6SXNzdWU2NTY3ODUyNQ==", "number": 227, "title": "Support for builtin migrations", "user": {"login": "rvianello", "id": 383098, "node_id": "MDQ6VXNlcjM4MzA5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/383098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvianello", "html_url": "https://github.com/rvianello", "followers_url": "https://api.github.com/users/rvianello/followers", "following_url": "https://api.github.com/users/rvianello/following{/other_user}", "gists_url": "https://api.github.com/users/rvianello/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvianello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvianello/subscriptions", "organizations_url": "https://api.github.com/users/rvianello/orgs", "repos_url": "https://api.github.com/users/rvianello/repos", "events_url": "https://api.github.com/users/rvianello/events{/privacy}", "received_events_url": "https://api.github.com/users/rvianello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-01T13:00:50Z", "updated_at": "2015-05-03T15:39:17Z", "closed_at": "2015-05-03T15:34:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like that the application supports South, but it doesn't support the built-in migration framework, am I correct?\n\nIs there any reason for this, or is it in the plans?\n\nThanks,\nriccardo\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/justquick/django-activity-stream/issues/224", "repository_url": "https://api.github.com/repos/justquick/django-activity-stream", "labels_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/224/comments", "events_url": "https://api.github.com/repos/justquick/django-activity-stream/issues/224/events", "html_url": "https://github.com/justquick/django-activity-stream/issues/224", "id": 62805447, "node_id": "MDU6SXNzdWU2MjgwNTQ0Nw==", "number": 224, "title": "Using actions as notification and marking as \"seen\"", "user": {"login": "ryangallen", "id": 1379681, "node_id": "MDQ6VXNlcjEzNzk2ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1379681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryangallen", "html_url": "https://github.com/ryangallen", "followers_url": "https://api.github.com/users/ryangallen/followers", "following_url": "https://api.github.com/users/ryangallen/following{/other_user}", "gists_url": "https://api.github.com/users/ryangallen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryangallen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryangallen/subscriptions", "organizations_url": "https://api.github.com/users/ryangallen/orgs", "repos_url": "https://api.github.com/users/ryangallen/repos", "events_url": "https://api.github.com/users/ryangallen/events{/privacy}", "received_events_url": "https://api.github.com/users/ryangallen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-18T21:26:16Z", "updated_at": "2015-03-19T13:21:03Z", "closed_at": "2015-03-19T13:21:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "What is the best way to show new activity to a user, mark it as \"seen\" or \"read\" to not show it again.\n\nShould there not be an \"active\" boolean on the Action model?\n", "performed_via_github_app": null, "score": 1.0}]}