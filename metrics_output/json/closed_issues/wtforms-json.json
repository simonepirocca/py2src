{"total_count": 21, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/41", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/41/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/41/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/41", "id": 88433891, "node_id": "MDU6SXNzdWU4ODQzMzg5MQ==", "number": 41, "title": "Is wtforms-json necessary?", "user": {"login": "foxx", "id": 651797, "node_id": "MDQ6VXNlcjY1MTc5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/651797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foxx", "html_url": "https://github.com/foxx", "followers_url": "https://api.github.com/users/foxx/followers", "following_url": "https://api.github.com/users/foxx/following{/other_user}", "gists_url": "https://api.github.com/users/foxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/foxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foxx/subscriptions", "organizations_url": "https://api.github.com/users/foxx/orgs", "repos_url": "https://api.github.com/users/foxx/repos", "events_url": "https://api.github.com/users/foxx/events{/privacy}", "received_events_url": "https://api.github.com/users/foxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-15T13:51:44Z", "updated_at": "2015-06-15T21:36:24Z", "closed_at": "2015-06-15T21:36:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "As a follow up to an issue raised [here](https://github.com/wtforms/wtforms/issues/198), given that the Form constructor in `2.x` now supports the `data` attributes, do we really need `wtforms-json` anymore? At the very least, should there be a notice on the README stating that this library is only required for `1.x`? Have I missed anything at all?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/38", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/38/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/38/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/38", "id": 59215190, "node_id": "MDU6SXNzdWU1OTIxNTE5MA==", "number": 38, "title": "Perform a release", "user": {"login": "noirbizarre", "id": 15725, "node_id": "MDQ6VXNlcjE1NzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/15725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noirbizarre", "html_url": "https://github.com/noirbizarre", "followers_url": "https://api.github.com/users/noirbizarre/followers", "following_url": "https://api.github.com/users/noirbizarre/following{/other_user}", "gists_url": "https://api.github.com/users/noirbizarre/gists{/gist_id}", "starred_url": "https://api.github.com/users/noirbizarre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noirbizarre/subscriptions", "organizations_url": "https://api.github.com/users/noirbizarre/orgs", "repos_url": "https://api.github.com/users/noirbizarre/repos", "events_url": "https://api.github.com/users/noirbizarre/events{/privacy}", "received_events_url": "https://api.github.com/users/noirbizarre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-02-27T10:06:51Z", "updated_at": "2015-02-28T12:06:03Z", "closed_at": "2015-02-28T12:06:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi !\n\nCould you perform a release including #37 ?\n\nThanks by advance !\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/30", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/30/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/30/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/30", "id": 40671353, "node_id": "MDU6SXNzdWU0MDY3MTM1Mw==", "number": 30, "title": "Is there a way to use unspecified json keys as form fields?", "user": {"login": "brunsgaard", "id": 815816, "node_id": "MDQ6VXNlcjgxNTgxNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/815816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunsgaard", "html_url": "https://github.com/brunsgaard", "followers_url": "https://api.github.com/users/brunsgaard/followers", "following_url": "https://api.github.com/users/brunsgaard/following{/other_user}", "gists_url": "https://api.github.com/users/brunsgaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunsgaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunsgaard/subscriptions", "organizations_url": "https://api.github.com/users/brunsgaard/orgs", "repos_url": "https://api.github.com/users/brunsgaard/repos", "events_url": "https://api.github.com/users/brunsgaard/events{/privacy}", "received_events_url": "https://api.github.com/users/brunsgaard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-20T07:48:30Z", "updated_at": "2014-08-30T08:08:27Z", "closed_at": "2014-08-30T08:08:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hay\n\nI have been wondering if there is a way - using the format below - to get kwargs from the user, but I have not been able to find a solution. Does wtform(-json) allows this structure?\n\n``` json\n{\n    \"kwargs\": {\n        \"k1\": \"v1\",\n        \"k2\": \"v2\"\n    }\n}\n```\n\nor is my only option the more \"ugly\"?\n\n`kwargs = FieldList(FormField(key_value_form))`\n\n``` json\n{\n    \"kwargs\": [\n        {\n            \"key\": \"k1\",\n            \"value\": \"v1\"\n        },\n        {\n            \"key\": \"k2\",\n            \"value\": \"v2\"\n        }\n    ]\n}\n```\n\nPlease advice :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/28", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/28/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/28/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/28", "id": 39552951, "node_id": "MDU6SXNzdWUzOTU1Mjk1MQ==", "number": 28, "title": "Monkey patch break WTForms boolean handling", "user": {"login": "peterlada", "id": 408784, "node_id": "MDQ6VXNlcjQwODc4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/408784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peterlada", "html_url": "https://github.com/peterlada", "followers_url": "https://api.github.com/users/peterlada/followers", "following_url": "https://api.github.com/users/peterlada/following{/other_user}", "gists_url": "https://api.github.com/users/peterlada/gists{/gist_id}", "starred_url": "https://api.github.com/users/peterlada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peterlada/subscriptions", "organizations_url": "https://api.github.com/users/peterlada/orgs", "repos_url": "https://api.github.com/users/peterlada/repos", "events_url": "https://api.github.com/users/peterlada/events{/privacy}", "received_events_url": "https://api.github.com/users/peterlada/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-05T19:02:39Z", "updated_at": "2014-09-21T07:19:13Z", "closed_at": "2014-09-21T07:19:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I added wtform-json to my project to handle incoming json validation with the same code we use for post data handling. I found your project after looking for ways to prevent duplication of validation code.\n\nThe issue I found is that your replacement for BooleanField.process_formdata = boolean_process_formdata breaks WTForms in a way that it no longer handles false values correctly ('false', '') should stay falsy.\n\nI'm giving you a pull-request that changes the behavior in a way that preserves the WTForm behavior, and also adds False (bool). It can be done by appending False to WTFroms.BooleanField's false_values = ('false', '')\n\nThanks for your work and let me know when it gets merged.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/27", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/27/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/27/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/27", "id": 37992669, "node_id": "MDU6SXNzdWUzNzk5MjY2OQ==", "number": 27, "title": "BooleanField default value", "user": {"login": "scorday", "id": 7922714, "node_id": "MDQ6VXNlcjc5MjI3MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/7922714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scorday", "html_url": "https://github.com/scorday", "followers_url": "https://api.github.com/users/scorday/followers", "following_url": "https://api.github.com/users/scorday/following{/other_user}", "gists_url": "https://api.github.com/users/scorday/gists{/gist_id}", "starred_url": "https://api.github.com/users/scorday/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scorday/subscriptions", "organizations_url": "https://api.github.com/users/scorday/orgs", "repos_url": "https://api.github.com/users/scorday/repos", "events_url": "https://api.github.com/users/scorday/events{/privacy}", "received_events_url": "https://api.github.com/users/scorday/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-16T15:15:06Z", "updated_at": "2014-08-30T08:02:13Z", "closed_at": "2014-08-30T08:02:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Eg., I have one=BooleanField(default=True) in my Form. When I pass data with no key 'one' to the form, I always get form.data['one']=False. Isn't it strange, is it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/25", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/25/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/25/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/25", "id": 34653766, "node_id": "MDU6SXNzdWUzNDY1Mzc2Ng==", "number": 25, "title": "How to get validation errors in json?", "user": {"login": "holms", "id": 280958, "node_id": "MDQ6VXNlcjI4MDk1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/280958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/holms", "html_url": "https://github.com/holms", "followers_url": "https://api.github.com/users/holms/followers", "following_url": "https://api.github.com/users/holms/following{/other_user}", "gists_url": "https://api.github.com/users/holms/gists{/gist_id}", "starred_url": "https://api.github.com/users/holms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/holms/subscriptions", "organizations_url": "https://api.github.com/users/holms/orgs", "repos_url": "https://api.github.com/users/holms/repos", "events_url": "https://api.github.com/users/holms/events{/privacy}", "received_events_url": "https://api.github.com/users/holms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-30T15:11:44Z", "updated_at": "2014-05-31T19:40:26Z", "closed_at": "2014-05-31T19:40:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "So when you validate your form like this:\n\n```\nform = ComposeForm.from_json(request.json)\n```\n\n`form.errors` should be a json string/dictionary right? Because now it says, that it's an object.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/20", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/20/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/20/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/20", "id": 25413885, "node_id": "MDU6SXNzdWUyNTQxMzg4NQ==", "number": 20, "title": "Need a way to ignore Required() validation for handling PATCH data", "user": {"login": "fweep", "id": 752622, "node_id": "MDQ6VXNlcjc1MjYyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/752622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fweep", "html_url": "https://github.com/fweep", "followers_url": "https://api.github.com/users/fweep/followers", "following_url": "https://api.github.com/users/fweep/following{/other_user}", "gists_url": "https://api.github.com/users/fweep/gists{/gist_id}", "starred_url": "https://api.github.com/users/fweep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fweep/subscriptions", "organizations_url": "https://api.github.com/users/fweep/orgs", "repos_url": "https://api.github.com/users/fweep/repos", "events_url": "https://api.github.com/users/fweep/events{/privacy}", "received_events_url": "https://api.github.com/users/fweep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-01-10T18:43:00Z", "updated_at": "2016-11-08T12:49:55Z", "closed_at": "2016-11-08T12:49:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is more of an enhancement request than a bug.\n\nI like using `patch_data` to handle PATCH requests with a subset of fields from the full form, but when fields are defined with a `Required()` validator, then the form won't validate. Making fields optional works well for patching, but then you lose the required-field validations if the form is also used to process POST requests for creating new objects.\n\nIt'd be nice if there were a flag to `from_json()` (or some other way) to indicate that it's ok if fields are missing, for patching purposes.\n\nI've looked around the docs and Googled a bit, and I can't figure out how to accommodate this situation, other than creating separate forms for PATCH and POST handling, which is less than ideal.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/19", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/19/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/19/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/19", "id": 24963925, "node_id": "MDU6SXNzdWUyNDk2MzkyNQ==", "number": 19, "title": "JSON integers are translated to python strings", "user": {"login": "cable-et-gaine", "id": 1956125, "node_id": "MDQ6VXNlcjE5NTYxMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1956125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cable-et-gaine", "html_url": "https://github.com/cable-et-gaine", "followers_url": "https://api.github.com/users/cable-et-gaine/followers", "following_url": "https://api.github.com/users/cable-et-gaine/following{/other_user}", "gists_url": "https://api.github.com/users/cable-et-gaine/gists{/gist_id}", "starred_url": "https://api.github.com/users/cable-et-gaine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cable-et-gaine/subscriptions", "organizations_url": "https://api.github.com/users/cable-et-gaine/orgs", "repos_url": "https://api.github.com/users/cable-et-gaine/repos", "events_url": "https://api.github.com/users/cable-et-gaine/events{/privacy}", "received_events_url": "https://api.github.com/users/cable-et-gaine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-02T13:37:47Z", "updated_at": "2014-01-02T16:45:06Z", "closed_at": "2014-01-02T16:45:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following example:\n\n<pre>\nfrom wtforms import Form\nfrom wtforms.fields import IntegerField, TextField, BooleanField\nimport wtforms_json\nwtforms_json.init()\n\nclass TestForm(Form):\n    \n    login = TextField()\n    password = TextField()\n    enabled = BooleanField()\n\ndata = {\n    \"login\": \"zorg\",\n    \"password\": 5,\n    \"enabled\": True,\n}\n\nform = TestForm.from_json(data)\n\nprint \"Raw data =\", data\nprint \"Form data =\", form.data\n\nprint form.validate()\n</pre>\n\n\ngives me this output:\n\n<pre>\nRaw data = {'login': 'zorg', 'password': 5, 'enabled': True}\nForm data = {'login': u'zorg', 'password': u'5', 'enabled': True}\nTrue\n</pre>\n\n\nSince 'password' is provided as an integer value instead of a string, I would have expected that 'from_json' would fail instead of translating 5 to '5'.\n\nIs it the expected behavior? Or I am missing something... ;-)\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/17", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/17/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/17/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/17", "id": 23495659, "node_id": "MDU6SXNzdWUyMzQ5NTY1OQ==", "number": 17, "title": "skip_unknown_keys is never passed to flatten_json", "user": {"login": "rob-b", "id": 84706, "node_id": "MDQ6VXNlcjg0NzA2", "avatar_url": "https://avatars2.githubusercontent.com/u/84706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rob-b", "html_url": "https://github.com/rob-b", "followers_url": "https://api.github.com/users/rob-b/followers", "following_url": "https://api.github.com/users/rob-b/following{/other_user}", "gists_url": "https://api.github.com/users/rob-b/gists{/gist_id}", "starred_url": "https://api.github.com/users/rob-b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rob-b/subscriptions", "organizations_url": "https://api.github.com/users/rob-b/orgs", "repos_url": "https://api.github.com/users/rob-b/repos", "events_url": "https://api.github.com/users/rob-b/events{/privacy}", "received_events_url": "https://api.github.com/users/rob-b/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-11-29T14:43:08Z", "updated_at": "2013-12-16T14:21:04Z", "closed_at": "2013-12-16T14:21:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm guessing this is related to https://github.com/kvesteri/wtforms-json/issues/10\n\nand the changeset https://github.com/kvesteri/wtforms-json/commit/255e589a7e6ac6a30ae411622c15894fdc30d831#diff-ce9bd1bee68d7afc2df0b83ca98cd5cf\n\nThe `skip_unknown_keys` arg is never passed to `flatten_json`.\nhttps://github.com/kvesteri/wtforms-json/blob/master/wtforms_json/__init__.py#L201\n\nI've inherited a project with a vendored version of wtforms-json and changing `from_json` to look like this worked for me:\n\n```\n@classmethod\ndef from_json(\n    cls, formdata=None, obj=None, prefix='', data=None, meta=None, **kwargs\n):\n    skip_unknown_keys = kwargs.get('skip_unknown_keys', True)\n    form = cls(\n        formdata=MultiDict(flatten_json(cls, formdata, skip_unknown_keys=skip_unknown_keys)) if formdata else None,\n        obj=obj,\n        prefix=prefix,\n        data=data,\n        meta=meta,\n        **kwargs\n    )\n    return form\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/15", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/15/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/15/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/15", "id": 22577780, "node_id": "MDU6SXNzdWUyMjU3Nzc4MA==", "number": 15, "title": "It's not possible to populate forms from objects.", "user": {"login": "YoYuUm", "id": 2705679, "node_id": "MDQ6VXNlcjI3MDU2Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2705679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YoYuUm", "html_url": "https://github.com/YoYuUm", "followers_url": "https://api.github.com/users/YoYuUm/followers", "following_url": "https://api.github.com/users/YoYuUm/following{/other_user}", "gists_url": "https://api.github.com/users/YoYuUm/gists{/gist_id}", "starred_url": "https://api.github.com/users/YoYuUm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YoYuUm/subscriptions", "organizations_url": "https://api.github.com/users/YoYuUm/orgs", "repos_url": "https://api.github.com/users/YoYuUm/repos", "events_url": "https://api.github.com/users/YoYuUm/events{/privacy}", "received_events_url": "https://api.github.com/users/YoYuUm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-11-13T08:47:07Z", "updated_at": "2013-12-03T08:15:39Z", "closed_at": "2013-12-03T08:15:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After the commit 20c124d77fab514ae76e82a721dae032a159cabd , if you try to populate a form using an object from the model, the returned form has all the values set as None or empty.\n\n```\npost = Post.query.get(13)\nform = PostForm(obj=post)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/14", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/14/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/14/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/14", "id": 22206044, "node_id": "MDU6SXNzdWUyMjIwNjA0NA==", "number": 14, "title": "from_json returns none when using QuerySelectField", "user": {"login": "YoYuUm", "id": 2705679, "node_id": "MDQ6VXNlcjI3MDU2Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2705679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YoYuUm", "html_url": "https://github.com/YoYuUm", "followers_url": "https://api.github.com/users/YoYuUm/followers", "following_url": "https://api.github.com/users/YoYuUm/following{/other_user}", "gists_url": "https://api.github.com/users/YoYuUm/gists{/gist_id}", "starred_url": "https://api.github.com/users/YoYuUm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YoYuUm/subscriptions", "organizations_url": "https://api.github.com/users/YoYuUm/orgs", "repos_url": "https://api.github.com/users/YoYuUm/repos", "events_url": "https://api.github.com/users/YoYuUm/events{/privacy}", "received_events_url": "https://api.github.com/users/YoYuUm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-06T16:25:05Z", "updated_at": "2013-11-12T13:21:04Z", "closed_at": "2013-11-12T13:21:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Model:\n\n```\nclass Match(db.Model, BourneMixin):\n\n    player_id = db.Column(db.BigInteger, db.ForeignKey(User.id))\n    team_id = db.Column(db.BigInteger, db.ForeignKey(Team.id))\n    team = db.relationship('Team')\n\n\ndef attributes(self):\n    return [\n            'player_id as player',\n            'team_id as team',\n        ]\n```\n\nForm:\n\n```\nclass MatchForm(ModelForm):\n    class Meta:\n        model = Match\n    team = QuerySelectField(query_factory=get_teams)\n    player = QuerySelectField(query_factory=get_users)\n```\n\nrequest.json -> {\"team\":24,\"player\":43}\n\nMatch.from_json(request.json) -> {\"team\":None,\"player\": None}\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/12", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/12/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/12/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/12", "id": 19850673, "node_id": "MDU6SXNzdWUxOTg1MDY3Mw==", "number": 12, "title": "patch_data should work with FieldList of FormField", "user": {"login": "alanhamlett", "id": 522344, "node_id": "MDQ6VXNlcjUyMjM0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/522344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhamlett", "html_url": "https://github.com/alanhamlett", "followers_url": "https://api.github.com/users/alanhamlett/followers", "following_url": "https://api.github.com/users/alanhamlett/following{/other_user}", "gists_url": "https://api.github.com/users/alanhamlett/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhamlett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhamlett/subscriptions", "organizations_url": "https://api.github.com/users/alanhamlett/orgs", "repos_url": "https://api.github.com/users/alanhamlett/repos", "events_url": "https://api.github.com/users/alanhamlett/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhamlett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-09-21T03:08:17Z", "updated_at": "2013-09-21T12:28:23Z", "closed_at": "2013-09-21T12:28:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "WTForms supports FormFields inside a FieldList:\nhttp://wtforms.readthedocs.org/en/latest/fields.html#wtforms.fields.FieldList\n\n```\nclass IMForm(Form):\n    protocol = SelectField(choices=[('aim', 'AIM'), ('msn', 'MSN')])\n    username = StringField()\n\nclass ContactForm(Form):\n    first_name  = StringField()\n    last_name   = StringField()\n    im_accounts = FieldList(FormField(IMForm))\n```\n\nWTForms-JSON should either\n- monkey patch `FieldList` instead of just `FormField`\n\nor\n- check the `unbound_field` in `def patch_data` when f is an instance of FieldList, and call `patch_data` on each item instead of calling `f.data`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/10", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/10/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/10/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/10", "id": 18506743, "node_id": "MDU6SXNzdWUxODUwNjc0Mw==", "number": 10, "title": "wtforms_json.InvalidData: Unknown field name", "user": {"login": "alanhamlett", "id": 522344, "node_id": "MDQ6VXNlcjUyMjM0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/522344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhamlett", "html_url": "https://github.com/alanhamlett", "followers_url": "https://api.github.com/users/alanhamlett/followers", "following_url": "https://api.github.com/users/alanhamlett/following{/other_user}", "gists_url": "https://api.github.com/users/alanhamlett/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhamlett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhamlett/subscriptions", "organizations_url": "https://api.github.com/users/alanhamlett/orgs", "repos_url": "https://api.github.com/users/alanhamlett/repos", "events_url": "https://api.github.com/users/alanhamlett/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhamlett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-08-24T13:53:34Z", "updated_at": "2013-11-29T14:43:08Z", "closed_at": "2013-08-30T08:30:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Getting this exception when JSON has a key which is not in the form. Previously these extra keys would be skipped without causing an exception.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/8", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/8/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/8/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/8", "id": 17224066, "node_id": "MDU6SXNzdWUxNzIyNDA2Ng==", "number": 8, "title": "Problem with SelectMultipleField", "user": {"login": "snahor", "id": 96594, "node_id": "MDQ6VXNlcjk2NTk0", "avatar_url": "https://avatars1.githubusercontent.com/u/96594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snahor", "html_url": "https://github.com/snahor", "followers_url": "https://api.github.com/users/snahor/followers", "following_url": "https://api.github.com/users/snahor/following{/other_user}", "gists_url": "https://api.github.com/users/snahor/gists{/gist_id}", "starred_url": "https://api.github.com/users/snahor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snahor/subscriptions", "organizations_url": "https://api.github.com/users/snahor/orgs", "repos_url": "https://api.github.com/users/snahor/repos", "events_url": "https://api.github.com/users/snahor/events{/privacy}", "received_events_url": "https://api.github.com/users/snahor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-25T17:24:19Z", "updated_at": "2013-07-26T12:32:16Z", "closed_at": "2013-07-26T12:32:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Am I doing something wrong?\n\n```\nclass QueryDict(dict):\n    def getlist(self, key):\n        val = self[key]\n        if not isinstance(val, list):\n            val = [val]\n        return val\n\nclass FooForm(Form):\n    items = SelectMultipleField(\n        choices=(\n            (1, 'a'),\n            (2, 'b'),\n            (3, 'c'),\n        ),\n        coerce=int\n    )\n```\n\nBefore patching:\n\n```\ndata = {'items': ['1', '3']}\nform = FooForm(QueryDict(data))\nassert form.validate()\nassert form.items.data == [1, 3]\n```\n\nEverything as usual, no AssertionError.\n\nAfter patching:\n\n```\ndata = {'items': [1, 3]}\nform = FooForm.from_json(data)\nassert form.validate()\nassert form.items.data == [1, 3]\n```\n\n`FooForm` validates, but the second assert raises an `AssertionError` becuase `form.items.data` returns an empty list.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/7", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/7/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/7/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/7", "id": 17201367, "node_id": "MDU6SXNzdWUxNzIwMTM2Nw==", "number": 7, "title": "WTForms does not accept non-string values", "user": {"login": "fredericsureau", "id": 941845, "node_id": "MDQ6VXNlcjk0MTg0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/941845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fredericsureau", "html_url": "https://github.com/fredericsureau", "followers_url": "https://api.github.com/users/fredericsureau/followers", "following_url": "https://api.github.com/users/fredericsureau/following{/other_user}", "gists_url": "https://api.github.com/users/fredericsureau/gists{/gist_id}", "starred_url": "https://api.github.com/users/fredericsureau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fredericsureau/subscriptions", "organizations_url": "https://api.github.com/users/fredericsureau/orgs", "repos_url": "https://api.github.com/users/fredericsureau/repos", "events_url": "https://api.github.com/users/fredericsureau/events{/privacy}", "received_events_url": "https://api.github.com/users/fredericsureau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-07-25T09:22:43Z", "updated_at": "2013-07-25T10:28:44Z", "closed_at": "2013-07-25T10:28:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nfrom wtforms import Form, TextField, validators\nimport wtforms_json\n\nwtforms_json.init()\n\nclass NetworkForm(Form):\n  address = TextField('Address', [validators.IPAddress()])\n  gateway = TextField('Gateway')\n  netmask = TextField('Netmask')\n\nnetwork = dict(address = 123, gateway = u'gw', netmask = u'nm')\n\nform = NetworkForm.from_json(network)\n\nprint 'form.validate()=', form.validate()\n```\n\nGives the following output :\n\n```\nform.validate()=\nTraceback (most recent call last):\n  File \"test.py\", line 15, in <module>\n    print 'form.validate()=', form.validate()\n  File \"/usr/local/lib/python2.7/dist-packages/wtforms/form.py\", line 265, in validate\n    return super(Form, self).validate(extra)\n  File \"/usr/local/lib/python2.7/dist-packages/wtforms/form.py\", line 130, in validate\n    if not field.validate(self, extra):\n  File \"/usr/local/lib/python2.7/dist-packages/wtforms/fields/core.py\", line 176, in validate\n    stop_validation = self._run_validation_chain(form, chain)\n  File \"/usr/local/lib/python2.7/dist-packages/wtforms/fields/core.py\", line 196, in _run_validation_chain\n    validator(form, self)\n  File \"/usr/local/lib/python2.7/dist-packages/wtforms/validators.py\", line 295, in __call__\n    valid = (self.ipv4 and self.check_ipv4(value)) or (self.ipv6 and self.check_ipv6(value))\n  File \"/usr/local/lib/python2.7/dist-packages/wtforms/validators.py\", line 303, in check_ipv4\n    parts = value.split('.')\nAttributeError: 'int' object has no attribute 'split'\n```\n\nThis seems to be a bug in the IPAddress validator, but I think more generally that WTForms is not ready to accept non-string values yet.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/6", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/6/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/6/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/6", "id": 16876149, "node_id": "MDU6SXNzdWUxNjg3NjE0OQ==", "number": 6, "title": "Wrong error message", "user": {"login": "snahor", "id": 96594, "node_id": "MDQ6VXNlcjk2NTk0", "avatar_url": "https://avatars1.githubusercontent.com/u/96594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snahor", "html_url": "https://github.com/snahor", "followers_url": "https://api.github.com/users/snahor/followers", "following_url": "https://api.github.com/users/snahor/following{/other_user}", "gists_url": "https://api.github.com/users/snahor/gists{/gist_id}", "starred_url": "https://api.github.com/users/snahor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snahor/subscriptions", "organizations_url": "https://api.github.com/users/snahor/orgs", "repos_url": "https://api.github.com/users/snahor/repos", "events_url": "https://api.github.com/users/snahor/events{/privacy}", "received_events_url": "https://api.github.com/users/snahor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-17T16:59:27Z", "updated_at": "2013-07-18T16:14:00Z", "closed_at": "2013-07-18T16:14:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\n>> class F(Form):\n..    g = BooleanField()\n..    h = BooleanField()\n\n>> f = F.from_json({'g': None, 'h': 'ooo'})\n>> f.validate()\nFalse\n>> f.errors\n{'h': [u'This field is required.']}\n```\n\nThe error message should be `{'h': [u'Not a valid integer value']}`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/5", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/5/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/5/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/5", "id": 12082631, "node_id": "MDU6SXNzdWUxMjA4MjYzMQ==", "number": 5, "title": "WTForms 1.0.3", "user": {"login": "gpopovic", "id": 2094147, "node_id": "MDQ6VXNlcjIwOTQxNDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2094147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpopovic", "html_url": "https://github.com/gpopovic", "followers_url": "https://api.github.com/users/gpopovic/followers", "following_url": "https://api.github.com/users/gpopovic/following{/other_user}", "gists_url": "https://api.github.com/users/gpopovic/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpopovic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpopovic/subscriptions", "organizations_url": "https://api.github.com/users/gpopovic/orgs", "repos_url": "https://api.github.com/users/gpopovic/repos", "events_url": "https://api.github.com/users/gpopovic/events{/privacy}", "received_events_url": "https://api.github.com/users/gpopovic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-03-15T21:34:24Z", "updated_at": "2013-03-15T23:02:05Z", "closed_at": "2013-03-15T23:02:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please change WTForms requirement to 1.0.3\nIt's the new version, your extension works great with it\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/4", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/4/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/4/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/4", "id": 11544615, "node_id": "MDU6SXNzdWUxMTU0NDYxNQ==", "number": 4, "title": "Error in documentation", "user": {"login": "karloskar", "id": 782033, "node_id": "MDQ6VXNlcjc4MjAzMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/782033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karloskar", "html_url": "https://github.com/karloskar", "followers_url": "https://api.github.com/users/karloskar/followers", "following_url": "https://api.github.com/users/karloskar/following{/other_user}", "gists_url": "https://api.github.com/users/karloskar/gists{/gist_id}", "starred_url": "https://api.github.com/users/karloskar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karloskar/subscriptions", "organizations_url": "https://api.github.com/users/karloskar/orgs", "repos_url": "https://api.github.com/users/karloskar/repos", "events_url": "https://api.github.com/users/karloskar/events{/privacy}", "received_events_url": "https://api.github.com/users/karloskar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-03-01T13:34:54Z", "updated_at": "2013-03-01T16:16:50Z", "closed_at": "2013-03-01T14:28:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "The \"First Example\" part of the documentation is a little peculiar.\n\nFirst there's a typo in \n\n``` python\nfrom wtforms.field import BooleanField, TextField\n```\n\nit should be (note the s)\n\n``` python\nfrom wtforms.fields import BooleanField, TextField\n```\n\nThen instantiating MyForm obviously fails since it hasn't been defined. By the look of the rest of the example it seems possible to validate models of multiple levels. Maybe something like this?\n\n``` python\nimport wtforms_json                                                                \nfrom wtforms import Form                                                           \nfrom wtforms.fields import BooleanField, TextField, FormField                      \n\nwtforms_json.init()                                                                \n\nclass LocationForm(Form):                                                          \n    name = TextField()                                                             \n    address = TextField()                                                          \n\n\nclass EventForm(Form):                                                             \n    name = TextField()                                                             \n    is_public = BooleanField()                                                     \n    location = FormField(LocationForm)                                             \n\n\njson = {                                                                           \n    'name': 'First Event',                                                         \n    'location': {'name': 'some location'},                                         \n}                                                                                  \n\nform = EventForm.from_json(json)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/3", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/3/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/3/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/3", "id": 7264809, "node_id": "MDU6SXNzdWU3MjY0ODA5", "number": 3, "title": "License?", "user": {"login": "BigBlueHat", "id": 43209, "node_id": "MDQ6VXNlcjQzMjA5", "avatar_url": "https://avatars1.githubusercontent.com/u/43209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BigBlueHat", "html_url": "https://github.com/BigBlueHat", "followers_url": "https://api.github.com/users/BigBlueHat/followers", "following_url": "https://api.github.com/users/BigBlueHat/following{/other_user}", "gists_url": "https://api.github.com/users/BigBlueHat/gists{/gist_id}", "starred_url": "https://api.github.com/users/BigBlueHat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BigBlueHat/subscriptions", "organizations_url": "https://api.github.com/users/BigBlueHat/orgs", "repos_url": "https://api.github.com/users/BigBlueHat/repos", "events_url": "https://api.github.com/users/BigBlueHat/events{/privacy}", "received_events_url": "https://api.github.com/users/BigBlueHat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-10-01T14:53:34Z", "updated_at": "2012-10-03T09:59:38Z", "closed_at": "2012-10-03T09:59:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you add a LICENSE file and/or license headers to the .py files (depending on your license choice)?\n\nIt'd also be great to see wtforms-json up on PyPi.\n\nThanks for building this!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/2", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/2/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/2/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/2", "id": 6739934, "node_id": "MDU6SXNzdWU2NzM5OTM0", "number": 2, "title": "patch_process breaks the normal functionality of WTForms", "user": {"login": "appetito", "id": 557573, "node_id": "MDQ6VXNlcjU1NzU3Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/557573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/appetito", "html_url": "https://github.com/appetito", "followers_url": "https://api.github.com/users/appetito/followers", "following_url": "https://api.github.com/users/appetito/following{/other_user}", "gists_url": "https://api.github.com/users/appetito/gists{/gist_id}", "starred_url": "https://api.github.com/users/appetito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/appetito/subscriptions", "organizations_url": "https://api.github.com/users/appetito/orgs", "repos_url": "https://api.github.com/users/appetito/repos", "events_url": "https://api.github.com/users/appetito/events{/privacy}", "received_events_url": "https://api.github.com/users/appetito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-09-09T03:39:04Z", "updated_at": "2012-10-03T09:58:32Z", "closed_at": "2012-10-03T09:58:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "after applying patch, if try to use usual form aka Form(request.POST):\n\nFile \"/....../wtforms_json.py\", line 109, in process\n    if formdata[self.name] is None:\nTypeError: 'WebobInputWrapper' object has no attribute '**getitem**'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/1", "repository_url": "https://api.github.com/repos/kvesteri/wtforms-json", "labels_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/1/comments", "events_url": "https://api.github.com/repos/kvesteri/wtforms-json/issues/1/events", "html_url": "https://github.com/kvesteri/wtforms-json/issues/1", "id": 6524598, "node_id": "MDU6SXNzdWU2NTI0NTk4", "number": 1, "title": "Add None type support for integer fields", "user": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kvesteri", "id": 398714, "node_id": "MDQ6VXNlcjM5ODcxNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/398714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kvesteri", "html_url": "https://github.com/kvesteri", "followers_url": "https://api.github.com/users/kvesteri/followers", "following_url": "https://api.github.com/users/kvesteri/following{/other_user}", "gists_url": "https://api.github.com/users/kvesteri/gists{/gist_id}", "starred_url": "https://api.github.com/users/kvesteri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kvesteri/subscriptions", "organizations_url": "https://api.github.com/users/kvesteri/orgs", "repos_url": "https://api.github.com/users/kvesteri/repos", "events_url": "https://api.github.com/users/kvesteri/events{/privacy}", "received_events_url": "https://api.github.com/users/kvesteri/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2012-08-29T11:40:56Z", "updated_at": "2012-08-29T12:53:36Z", "closed_at": "2012-08-29T12:53:36Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}]}