{"total_count": 29, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/un33k/django-ipware/issues/57", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/57/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/57/events", "html_url": "https://github.com/un33k/django-ipware/issues/57", "id": 674446156, "node_id": "MDU6SXNzdWU2NzQ0NDYxNTY=", "number": 57, "title": "[install] installation error with setuptools", "user": {"login": "atb00ker", "id": 24985760, "node_id": "MDQ6VXNlcjI0OTg1NzYw", "avatar_url": "https://avatars0.githubusercontent.com/u/24985760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atb00ker", "html_url": "https://github.com/atb00ker", "followers_url": "https://api.github.com/users/atb00ker/followers", "following_url": "https://api.github.com/users/atb00ker/following{/other_user}", "gists_url": "https://api.github.com/users/atb00ker/gists{/gist_id}", "starred_url": "https://api.github.com/users/atb00ker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atb00ker/subscriptions", "organizations_url": "https://api.github.com/users/atb00ker/orgs", "repos_url": "https://api.github.com/users/atb00ker/repos", "events_url": "https://api.github.com/users/atb00ker/events{/privacy}", "received_events_url": "https://api.github.com/users/atb00ker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-06T16:36:03Z", "updated_at": "2020-08-07T08:45:43Z", "closed_at": "2020-08-07T08:45:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "When runnning `python setup.py develop`, I am getting the following error:\r\n\r\n```\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/sandbox.py\", line 154, in save_modules\r\n    yield saved\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/sandbox.py\", line 195, in setup_context\r\n    yield\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/sandbox.py\", line 250, in run_setup\r\n    _execfile(setup_script, ns)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/sandbox.py\", line 45, in _execfile\r\n    exec(code, globals, locals)\r\n  File \"/tmp/easy_install-jvg8elii/django-ipware-3.0.0/setup.py\", line 85, in <module>\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/__init__.py\", line 165, in setup\r\n    return distutils.core.setup(**attrs)\r\n  File \"/usr/local/lib/python3.6/distutils/core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"/usr/local/lib/python3.6/distutils/dist.py\", line 955, in run_commands\r\n    self.run_command(cmd)\r\n  File \"/usr/local/lib/python3.6/distutils/dist.py\", line 974, in run_command\r\n    cmd_obj.run()\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/bdist_egg.py\", line 222, in run\r\n    os.path.join(archive_root, 'EGG-INFO'), self.zip_safe()\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/bdist_egg.py\", line 275, in zip_safe\r\n    return analyze_egg(self.bdist_dir, self.stubs)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/bdist_egg.py\", line 391, in analyze_egg\r\n    safe = scan_module(egg_dir, base, name, stubs) and safe\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/bdist_egg.py\", line 430, in scan_module\r\n    code = marshal.load(f)\r\nValueError: bad marshal data (digit out of range in long)\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 67, in <module>\r\n    'Programming Language :: Python :: 3',\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/__init__.py\", line 165, in setup\r\n    return distutils.core.setup(**attrs)\r\n  File \"/usr/local/lib/python3.6/distutils/core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"/usr/local/lib/python3.6/distutils/dist.py\", line 955, in run_commands\r\n    self.run_command(cmd)\r\n  File \"/usr/local/lib/python3.6/distutils/dist.py\", line 974, in run_command\r\n    cmd_obj.run()\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/develop.py\", line 38, in run\r\n    self.install_for_development()\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/develop.py\", line 155, in install_for_development\r\n    self.process_distribution(None, self.dist, not self.no_deps)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 759, in process_distribution\r\n    [requirement], self.local_index, self.easy_install\r\n  File \"/usr/local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 781, in resolve\r\n    replace_conflicting=replace_conflicting\r\n  File \"/usr/local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 1064, in best_match\r\n    return self.obtain(req, installer)\r\n  File \"/usr/local/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 1076, in obtain\r\n    return installer(requirement)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 686, in easy_install\r\n    return self.install_item(spec, dist.location, tmpdir, deps)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 712, in install_item\r\n    dists = self.install_eggs(spec, download, tmpdir)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 897, in install_eggs\r\n    return self.build_and_install(setup_script, setup_base)\r\n    dists = self.install_eggs(spec, download, tmpdir)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 897, in install_eggs\r\n    return self.build_and_install(setup_script, setup_base)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 1167, in build_and_install\r\n    self.run_setup(setup_script, setup_base, args)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 1151, in run_setup\r\n    run_setup(setup_script, args)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/sandbox.py\", line 253, in run_setup\r\n    raise\r\n  File \"/usr/local/lib/python3.6/contextlib.py\", line 99, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/sandbox.py\", line 195, in setup_context\r\n    yield\r\n  File \"/usr/local/lib/python3.6/contextlib.py\", line 99, in __exit__\r\n    self.gen.throw(type, value, traceback)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/sandbox.py\", line 166, in save_modules\r\n    saved_exc.resume()\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/sandbox.py\", line 141, in resume\r\n    six.reraise(type, exc, self._tb)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/_vendor/six.py\", line 685, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/sandbox.py\", line 154, in save_modules\r\n    yield saved\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/sandbox.py\", line 195, in setup_context\r\n    yield\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/sandbox.py\", line 250, in run_setup\r\n    _execfile(setup_script, ns)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/sandbox.py\", line 45, in _execfile\r\n    exec(code, globals, locals)\r\n  File \"/tmp/easy_install-jvg8elii/django-ipware-3.0.0/setup.py\", line 85, in <module>\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/__init__.py\", line 165, in setup\r\n    return distutils.core.setup(**attrs)\r\n  File \"/usr/local/lib/python3.6/distutils/core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"/usr/local/lib/python3.6/distutils/dist.py\", line 955, in run_commands\r\n    self.run_command(cmd)\r\n  File \"/usr/local/lib/python3.6/distutils/dist.py\", line 974, in run_command\r\n    cmd_obj.run()\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/bdist_egg.py\", line 222, in run\r\n    os.path.join(archive_root, 'EGG-INFO'), self.zip_safe()\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/bdist_egg.py\", line 275, in zip_safe\r\n    return analyze_egg(self.bdist_dir, self.stubs)\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/bdist_egg.py\", line 391, in analyze_egg\r\n    safe = scan_module(egg_dir, base, name, stubs) and safe\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/command/bdist_egg.py\", line 430, in scan_module\r\n    code = marshal.load(f)\r\nValueError: bad marshal data (digit out of range in long)\r\n```\r\n\r\n\r\nHowever, after adding `pip install django-ipware`, it works perfectly.\r\n\r\nCheck logs: https://travis-ci.org/github/openwisp/openwisp-radius/jobs/715471028\r\n(after adding `pip install django-ipware` before `python setup.py develop`, it works perfectly): https://travis-ci.org/github/openwisp/openwisp-radius/jobs/715559387\r\n\r\nTravis is running Python `3.6.10`, I am able to reproduce it on `3.6.11` and it doesn't happen in `3.7`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/56", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/56/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/56/events", "html_url": "https://github.com/un33k/django-ipware/issues/56", "id": 580517831, "node_id": "MDU6SXNzdWU1ODA1MTc4MzE=", "number": 56, "title": "Cannot run pytest tests after installing django-ipware", "user": {"login": "GeorgianBadita", "id": 25690485, "node_id": "MDQ6VXNlcjI1NjkwNDg1", "avatar_url": "https://avatars3.githubusercontent.com/u/25690485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeorgianBadita", "html_url": "https://github.com/GeorgianBadita", "followers_url": "https://api.github.com/users/GeorgianBadita/followers", "following_url": "https://api.github.com/users/GeorgianBadita/following{/other_user}", "gists_url": "https://api.github.com/users/GeorgianBadita/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeorgianBadita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeorgianBadita/subscriptions", "organizations_url": "https://api.github.com/users/GeorgianBadita/orgs", "repos_url": "https://api.github.com/users/GeorgianBadita/repos", "events_url": "https://api.github.com/users/GeorgianBadita/events{/privacy}", "received_events_url": "https://api.github.com/users/GeorgianBadita/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-13T10:45:14Z", "updated_at": "2020-03-17T12:03:07Z", "closed_at": "2020-03-17T12:03:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, after installing django-ipware package I cannot run pytest tests, here is a stacktrace of the error\r\n\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/main.py\", line 187, in wrap_session\r\nINTERNALERROR>     config._do_configure()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 820, in _do_configure\r\nINTERNALERROR>     self.hook.pytest_configure.call_historic(kwargs=dict(config=self))\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/hooks.py\", line 308, in call_historic\r\nINTERNALERROR>     res = self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pytest_sugar.py\", line 176, in pytest_configure\r\nINTERNALERROR>     sugar_reporter = SugarTerminalReporter(standard_reporter)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.7/site-packages/pytest_sugar.py\", line 214, in __init__\r\nINTERNALERROR>     self.writer = self._tw\r\nINTERNALERROR> AttributeError: can't set attribute\r\n\r\n\r\nPackages installed:\r\nauth0-python==3.9.1       # via -r requirements.in\r\nboto3==1.12.18            # via -r requirements.in\r\nbotocore==1.15.18         # via boto3, s3transfer\r\ncertifi==2019.11.28       # via requests\r\ncffi==1.14.0              # via cryptography\r\nchardet==3.0.4            # via requests\r\ncryptography==2.8         # via -r requirements.in, pyjwt\r\ndjango-admin-display==1.1.0  # via -r requirements.in\r\ndjango-constance[database]==2.6.0  # via -r requirements.in\r\ndjango-cors-headers==3.2.1  # via -r requirements.in\r\ndjango-filter==2.2.0      # via -r requirements.in\r\ndjango-grappelli==2.14.1  # via -r requirements.in\r\ndjango-mysql==3.3.0       # via -r requirements.in\r\ndjango-picklefield==2.1.1  # via django-constance\r\ndjango-storages==1.9.1    # via -r requirements.in\r\ndjango==2.2.7             # via -r requirements.in, django-cors-headers, django-filter, django-mysql, django-picklefield, django-storages\r\ndjangorestframework==3.10.3  # via -r requirements.in\r\ndocutils==0.15.2          # via botocore\r\nfaker==4.0.1              # via -r requirements.in\r\ngunicorn==20.0.4          # via -r requirements.in\r\nidna==2.9                 # via requests\r\njmespath==0.9.5           # via boto3, botocore\r\nmysqlclient==1.4.6        # via -r requirements.in\r\nphonenumbers==8.11.5      # via -r requirements.in\r\npillow==7.0.0             # via -r requirements.in\r\npycountry==19.8.18        # via -r requirements.in\r\npycparser==2.20           # via cffi\r\npyjwt[crypto]==1.7.1      # via -r requirements.in\r\npython-dateutil==2.8.1    # via botocore, faker\r\npytz==2019.3              # via django\r\nredis==3.4.1              # via -r requirements.in\r\nrequests==2.23.0          # via auth0-python\r\ns3transfer==0.3.3         # via boto3\r\nsix==1.14.0               # via cryptography, django-grappelli, python-dateutil\r\nsqlparse==0.3.1           # via django\r\ntext-unidecode==1.3       # via faker\r\nurllib3==1.25.8           # via botocore, requests\r\nwhitenoise==5.0.1         # via -r requirements.in\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/53", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/53/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/53/events", "html_url": "https://github.com/un33k/django-ipware/issues/53", "id": 519460019, "node_id": "MDU6SXNzdWU1MTk0NjAwMTk=", "number": 53, "title": "Document Django middleware", "user": {"login": "skorokithakis", "id": 23648, "node_id": "MDQ6VXNlcjIzNjQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/23648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skorokithakis", "html_url": "https://github.com/skorokithakis", "followers_url": "https://api.github.com/users/skorokithakis/followers", "following_url": "https://api.github.com/users/skorokithakis/following{/other_user}", "gists_url": "https://api.github.com/users/skorokithakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/skorokithakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skorokithakis/subscriptions", "organizations_url": "https://api.github.com/users/skorokithakis/orgs", "repos_url": "https://api.github.com/users/skorokithakis/repos", "events_url": "https://api.github.com/users/skorokithakis/events{/privacy}", "received_events_url": "https://api.github.com/users/skorokithakis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-07T19:15:56Z", "updated_at": "2019-11-07T22:57:35Z", "closed_at": "2019-11-07T22:57:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see in #36 that a middleware has been implemented, could this be documented? It's very useful but I didn't see it anywhere in the README.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/52", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/52/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/52/events", "html_url": "https://github.com/un33k/django-ipware/issues/52", "id": 508098645, "node_id": "MDU6SXNzdWU1MDgwOTg2NDU=", "number": 52, "title": "IPv6 address routability", "user": {"login": "Karimerto", "id": 11267952, "node_id": "MDQ6VXNlcjExMjY3OTUy", "avatar_url": "https://avatars1.githubusercontent.com/u/11267952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Karimerto", "html_url": "https://github.com/Karimerto", "followers_url": "https://api.github.com/users/Karimerto/followers", "following_url": "https://api.github.com/users/Karimerto/following{/other_user}", "gists_url": "https://api.github.com/users/Karimerto/gists{/gist_id}", "starred_url": "https://api.github.com/users/Karimerto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Karimerto/subscriptions", "organizations_url": "https://api.github.com/users/Karimerto/orgs", "repos_url": "https://api.github.com/users/Karimerto/repos", "events_url": "https://api.github.com/users/Karimerto/events{/privacy}", "received_events_url": "https://api.github.com/users/Karimerto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-16T21:04:33Z", "updated_at": "2020-07-01T02:29:15Z", "closed_at": "2020-07-01T02:29:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "All (other than specifically fc00:) IPv6 ULA addresses are incorrectly identified as globally routable. Not really a big issue, but an annoyance regardless.\r\n\r\nI would suggest adding the use of `ipaddress` or similar library for checking the actual addresses. They would have to be written in proper CIDR notation, i.e. `fc00::/7` and checked with the library's functions. As an added benefit, the list of IPs in the `defaults.py` would be somewhat shorter.\r\n\r\nI'd be happy to submit a patch if you think this is an idea you'd consider.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/49", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/49/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/49/events", "html_url": "https://github.com/un33k/django-ipware/issues/49", "id": 440464058, "node_id": "MDU6SXNzdWU0NDA0NjQwNTg=", "number": 49, "title": "Properly handle IPv4 address wrapped in IPv6.", "user": {"login": "un33k", "id": 407537, "node_id": "MDQ6VXNlcjQwNzUzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/407537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/un33k", "html_url": "https://github.com/un33k", "followers_url": "https://api.github.com/users/un33k/followers", "following_url": "https://api.github.com/users/un33k/following{/other_user}", "gists_url": "https://api.github.com/users/un33k/gists{/gist_id}", "starred_url": "https://api.github.com/users/un33k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/un33k/subscriptions", "organizations_url": "https://api.github.com/users/un33k/orgs", "repos_url": "https://api.github.com/users/un33k/repos", "events_url": "https://api.github.com/users/un33k/events{/privacy}", "received_events_url": "https://api.github.com/users/un33k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-05T16:37:25Z", "updated_at": "2019-05-23T02:19:13Z", "closed_at": "2019-05-23T02:19:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This module needs to also handle IPv4 addresses that are wrapped in IPv6.\r\n\r\nExample: `::ffff:127.0.0.1`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/45", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/45/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/45/events", "html_url": "https://github.com/un33k/django-ipware/issues/45", "id": 360537021, "node_id": "MDU6SXNzdWUzNjA1MzcwMjE=", "number": 45, "title": "Using django-ipware get_client_ip instead of get_real_ip", "user": {"login": "shadinaif", "id": 17448993, "node_id": "MDQ6VXNlcjE3NDQ4OTkz", "avatar_url": "https://avatars0.githubusercontent.com/u/17448993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shadinaif", "html_url": "https://github.com/shadinaif", "followers_url": "https://api.github.com/users/shadinaif/followers", "following_url": "https://api.github.com/users/shadinaif/following{/other_user}", "gists_url": "https://api.github.com/users/shadinaif/gists{/gist_id}", "starred_url": "https://api.github.com/users/shadinaif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shadinaif/subscriptions", "organizations_url": "https://api.github.com/users/shadinaif/orgs", "repos_url": "https://api.github.com/users/shadinaif/repos", "events_url": "https://api.github.com/users/shadinaif/events{/privacy}", "received_events_url": "https://api.github.com/users/shadinaif/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-15T12:45:33Z", "updated_at": "2018-09-16T07:14:02Z", "closed_at": "2018-09-15T13:40:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please help!\r\nAlready asked in stackoverflow: https://stackoverflow.com/questions/52162711/using-django-ipware-get-client-ip-instead-of-get-real-ip\r\n\r\nIn django-ipware version 2.1 ; old `get_real_ip` function is deprecated. When I use the new `get_client_ip` ; my test units are not showing the same results. Means that the two functions do not behave the same.\r\n\r\nThe following is an original test from django-ipware test unit (not mine)\r\n\r\n    def test_http_x_forwarded_for_multiple(self):\r\n        request = HttpRequest()\r\n        request.META = {\r\n            'HTTP_X_FORWARDED_FOR': '192.168.255.182, 10.0.0.0, 127.0.0.1, 198.84.193.157, 177.139.233.139',\r\n            'HTTP_X_REAL_IP': '177.139.233.132',\r\n            'REMOTE_ADDR': '177.139.233.133',\r\n        }\r\n        ip = get_real_ip(request)\r\n        self.assertEqual(ip, \"198.84.193.157\")\r\n\r\nThe above works fine of course, but I want to ensure that using the new `get_client_ip` will give the same results (for a system upgrade purposes). But the test is actually failing the assertion:\r\n\r\n    def test_http_x_forwarded_for_multiple(self):\r\n        request = HttpRequest()\r\n        request.META = {\r\n            'HTTP_X_FORWARDED_FOR': '192.168.255.182, 10.0.0.0, 127.0.0.1, 198.84.193.157, 177.139.233.139',\r\n            'HTTP_X_REAL_IP': '177.139.233.132',\r\n            'REMOTE_ADDR': '177.139.233.133',\r\n        }\r\n        ip, is_routable = get_client_ip(request)\r\n        self.assertEqual(ip, \"198.84.193.157\")\r\n\r\nresulting:\r\n\r\n**AssertionError: '177.139.233.132' != '198.84.193.157'**\r\n\r\nAfter digging into the code, I found that the new `get_client_ip` is not iterating inside the meta like `get_real_ip` . It checks out the left-most ip (or right-most depending on the settings) and skips to the next meta if a **Public IP** is not found\r\n\r\nMy question(s) now are:\r\nHow can I call `get_client_ip` in a way that returns the same ip returned by `get_real_ip` ? What is the logic behind changing the behavior of the function ? Should I trust the new `get_client_ip` and forget about `get_real_ip`, or keep using the deprecated `get_real_ip` and forget about the new `get_client_ip` ?????", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/44", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/44/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/44/events", "html_url": "https://github.com/un33k/django-ipware/issues/44", "id": 356412088, "node_id": "MDU6SXNzdWUzNTY0MTIwODg=", "number": 44, "title": "Unable to change settings in tests", "user": {"login": "janosroden", "id": 6108742, "node_id": "MDQ6VXNlcjYxMDg3NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6108742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janosroden", "html_url": "https://github.com/janosroden", "followers_url": "https://api.github.com/users/janosroden/followers", "following_url": "https://api.github.com/users/janosroden/following{/other_user}", "gists_url": "https://api.github.com/users/janosroden/gists{/gist_id}", "starred_url": "https://api.github.com/users/janosroden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janosroden/subscriptions", "organizations_url": "https://api.github.com/users/janosroden/orgs", "repos_url": "https://api.github.com/users/janosroden/repos", "events_url": "https://api.github.com/users/janosroden/events{/privacy}", "received_events_url": "https://api.github.com/users/janosroden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-03T08:49:57Z", "updated_at": "2018-09-03T15:42:41Z", "closed_at": "2018-09-03T15:12:49Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "In the module defaults in `IPWARE_META_PRECEDENCE_ORDER` `HTTP_X_FORWARDED_FOR` precedes `REMOTE_ADDR`. If I change the order then I should get the value of `REMOTE_ADDR` in the following test which is not the case.\r\n\r\n```python\r\nclass IPv4TestCase(TestCase):\r\n    @override_settings(IPWARE_META_PRECEDENCE_ORDER=('REMOTE_ADDR', 'HTTP_X_FORWARDED_FOR'))\r\n    def test_setting_override(self):\r\n        request = HttpRequest()\r\n        request.META = {\r\n            'HTTP_X_FORWARDED_FOR': '177.139.233.139, 198.84.193.157, 198.84.193.158',\r\n            'REMOTE_ADDR': '177.139.233.133',\r\n        }\r\n        result = get_client_ip(request)\r\n        self.assertEqual(result, (\"177.139.233.133\", True))\r\n```\r\n\r\nPR #43 fixes this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/40", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/40/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/40/events", "html_url": "https://github.com/un33k/django-ipware/issues/40", "id": 319549409, "node_id": "MDU6SXNzdWUzMTk1NDk0MDk=", "number": 40, "title": "Django 2.0 and Python 3.7 support", "user": {"login": "gabn88", "id": 7912953, "node_id": "MDQ6VXNlcjc5MTI5NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7912953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabn88", "html_url": "https://github.com/gabn88", "followers_url": "https://api.github.com/users/gabn88/followers", "following_url": "https://api.github.com/users/gabn88/following{/other_user}", "gists_url": "https://api.github.com/users/gabn88/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabn88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabn88/subscriptions", "organizations_url": "https://api.github.com/users/gabn88/orgs", "repos_url": "https://api.github.com/users/gabn88/repos", "events_url": "https://api.github.com/users/gabn88/events{/privacy}", "received_events_url": "https://api.github.com/users/gabn88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-02T13:20:07Z", "updated_at": "2018-05-02T14:11:39Z", "closed_at": "2018-05-02T14:11:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @un33k,\r\nFirst of all thanks for this package. Are there any plans to support Django 2.0?\r\nI know everybody is very busy, so just a yes/no would be sufficient.\r\nBest regards!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/39", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/39/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/39/events", "html_url": "https://github.com/un33k/django-ipware/issues/39", "id": 315623244, "node_id": "MDU6SXNzdWUzMTU2MjMyNDQ=", "number": 39, "title": "Using ipware on localhost", "user": {"login": "luanfonceca", "id": 1490875, "node_id": "MDQ6VXNlcjE0OTA4NzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1490875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luanfonceca", "html_url": "https://github.com/luanfonceca", "followers_url": "https://api.github.com/users/luanfonceca/followers", "following_url": "https://api.github.com/users/luanfonceca/following{/other_user}", "gists_url": "https://api.github.com/users/luanfonceca/gists{/gist_id}", "starred_url": "https://api.github.com/users/luanfonceca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luanfonceca/subscriptions", "organizations_url": "https://api.github.com/users/luanfonceca/orgs", "repos_url": "https://api.github.com/users/luanfonceca/repos", "events_url": "https://api.github.com/users/luanfonceca/events{/privacy}", "received_events_url": "https://api.github.com/users/luanfonceca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-18T20:05:30Z", "updated_at": "2018-04-18T21:04:11Z", "closed_at": "2018-04-18T21:04:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks, i am using it to get the `ip_address` of users on django, after that i get more info from third party sites like http://ipstack.com, etc. But when we ran it on localhost the ip returned from the `ipware` is `None`, there is any way to return my ip address on development environment?\r\n\r\nIf it return my real ip, that already should help.\r\nI'm not sure if that makes sense, i'm just trying to figure out how to use it on localhost without adding specific code just for running on localhost or using a tunnel like http://ngrok.com.\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/36", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/36/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/36/events", "html_url": "https://github.com/un33k/django-ipware/issues/36", "id": 311293107, "node_id": "MDU6SXNzdWUzMTEyOTMxMDc=", "number": 36, "title": "Add middleware for easy usage", "user": {"login": "WoLpH", "id": 270571, "node_id": "MDQ6VXNlcjI3MDU3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/270571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WoLpH", "html_url": "https://github.com/WoLpH", "followers_url": "https://api.github.com/users/WoLpH/followers", "following_url": "https://api.github.com/users/WoLpH/following{/other_user}", "gists_url": "https://api.github.com/users/WoLpH/gists{/gist_id}", "starred_url": "https://api.github.com/users/WoLpH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WoLpH/subscriptions", "organizations_url": "https://api.github.com/users/WoLpH/orgs", "repos_url": "https://api.github.com/users/WoLpH/repos", "events_url": "https://api.github.com/users/WoLpH/events{/privacy}", "received_events_url": "https://api.github.com/users/WoLpH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-04T16:02:31Z", "updated_at": "2018-04-11T13:55:33Z", "closed_at": "2018-04-11T13:37:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm aware that writing the middleware manually is just a few lines of code but it would be very useful to have a simple middleware available\r\n\r\nWithin views it's easy enough to simply import the methods but Django still needs patching to have [`INTERNAL_IPS`](https://docs.djangoproject.com/en/2.0/ref/settings/#internal-ips) work correctly", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/34", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/34/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/34/events", "html_url": "https://github.com/un33k/django-ipware/issues/34", "id": 289897235, "node_id": "MDU6SXNzdWUyODk4OTcyMzU=", "number": 34, "title": "Private IP address 100.64.0.0/10", "user": {"login": "billzhong", "id": 1644011, "node_id": "MDQ6VXNlcjE2NDQwMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1644011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billzhong", "html_url": "https://github.com/billzhong", "followers_url": "https://api.github.com/users/billzhong/followers", "following_url": "https://api.github.com/users/billzhong/following{/other_user}", "gists_url": "https://api.github.com/users/billzhong/gists{/gist_id}", "starred_url": "https://api.github.com/users/billzhong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billzhong/subscriptions", "organizations_url": "https://api.github.com/users/billzhong/orgs", "repos_url": "https://api.github.com/users/billzhong/repos", "events_url": "https://api.github.com/users/billzhong/events{/privacy}", "received_events_url": "https://api.github.com/users/billzhong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-19T08:29:36Z", "updated_at": "2018-01-19T23:10:42Z", "closed_at": "2018-01-19T23:10:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe new private address is used for garrier-grade NAT. It is been assigned by IANA.\r\nRef:\r\nhttps://en.wikipedia.org/wiki/Reserved_IP_addresses\r\nhttps://tools.ietf.org/html/rfc6598\r\n\r\nIt will be great if you can add it to default settings.\r\nThanks.\r\n\r\nBill", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/33", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/33/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/33/events", "html_url": "https://github.com/un33k/django-ipware/issues/33", "id": 286563534, "node_id": "MDU6SXNzdWUyODY1NjM1MzQ=", "number": 33, "title": "Option to configure the number of proxies", "user": {"login": "aleksihakli", "id": 2477934, "node_id": "MDQ6VXNlcjI0Nzc5MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2477934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleksihakli", "html_url": "https://github.com/aleksihakli", "followers_url": "https://api.github.com/users/aleksihakli/followers", "following_url": "https://api.github.com/users/aleksihakli/following{/other_user}", "gists_url": "https://api.github.com/users/aleksihakli/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleksihakli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleksihakli/subscriptions", "organizations_url": "https://api.github.com/users/aleksihakli/orgs", "repos_url": "https://api.github.com/users/aleksihakli/repos", "events_url": "https://api.github.com/users/aleksihakli/events{/privacy}", "received_events_url": "https://api.github.com/users/aleksihakli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-07T11:55:21Z", "updated_at": "2018-01-14T04:21:58Z", "closed_at": "2018-01-14T04:21:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I think there should be an option to configure the number of trusted proxies. The `django-axes` module switched over to this module and previously had configuration in place to allow configuring proxy count as implemented [in `django-axes` #225](https://github.com/jazzband/django-axes/pull/225) and I think it would be a nifty feature here as well.\r\n\r\nI understand that this package seems to aim more on efficiency and usability than security and filtering out noise and that resolving IPs is a best-effort case, but adding a simple check for number of proxies shouldn't be too hard, if it is deemed useful.\r\n\r\n[Here is the some ongoing discussion about this] (https://github.com/jazzband/django-axes/issues/286) for reference.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/30", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/30/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/30/events", "html_url": "https://github.com/un33k/django-ipware/issues/30", "id": 282648278, "node_id": "MDU6SXNzdWUyODI2NDgyNzg=", "number": 30, "title": "using ipware in model pre_save", "user": {"login": "anuj9196", "id": 6560085, "node_id": "MDQ6VXNlcjY1NjAwODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6560085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuj9196", "html_url": "https://github.com/anuj9196", "followers_url": "https://api.github.com/users/anuj9196/followers", "following_url": "https://api.github.com/users/anuj9196/following{/other_user}", "gists_url": "https://api.github.com/users/anuj9196/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuj9196/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuj9196/subscriptions", "organizations_url": "https://api.github.com/users/anuj9196/orgs", "repos_url": "https://api.github.com/users/anuj9196/repos", "events_url": "https://api.github.com/users/anuj9196/events{/privacy}", "received_events_url": "https://api.github.com/users/anuj9196/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-16T20:25:54Z", "updated_at": "2017-12-16T20:45:05Z", "closed_at": "2017-12-16T20:45:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a model in my project without view which creates a new associated record on `post_save` of parent model.\r\n\r\nI used\r\n\r\n```\r\nfrom django.urls import reverse\r\nfrom ipware.ip import get_real_ip\r\n\r\nclass ShortUrlVisitLogs(models.Model):\r\n     shorturl = models.ForeignKey(ShortUrl, on_delete=models.CASCADE, blank=True)\r\n     ip_address = models.CharField(max_length=225, blank=True, null=True)\r\n     visit_time = models.DateTimeField(auto_now_add=True)\r\n\r\n@receiver(pre_save, sender=ShortUrlVisitLogs)\r\ndef pre_save_short_url_visit_logs(sender, instance, *args, **kwargs):\r\n    instance.ip_address = get_real_ip(request)\r\n```\r\n\r\nSince this does not require any view. I want to use `get_real_ip(request)` in the model `pre_save` receiver as shown above.\r\n\r\nBut this is returning error\r\n```\r\nmodule 'django.http.request' has no attribute 'META'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/27", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/27/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/27/events", "html_url": "https://github.com/un33k/django-ipware/issues/27", "id": 266059266, "node_id": "MDU6SXNzdWUyNjYwNTkyNjY=", "number": 27, "title": "Improve test runner configuration", "user": {"login": "lorddaedra", "id": 26400787, "node_id": "MDQ6VXNlcjI2NDAwNzg3", "avatar_url": "https://avatars1.githubusercontent.com/u/26400787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorddaedra", "html_url": "https://github.com/lorddaedra", "followers_url": "https://api.github.com/users/lorddaedra/followers", "following_url": "https://api.github.com/users/lorddaedra/following{/other_user}", "gists_url": "https://api.github.com/users/lorddaedra/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorddaedra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorddaedra/subscriptions", "organizations_url": "https://api.github.com/users/lorddaedra/orgs", "repos_url": "https://api.github.com/users/lorddaedra/repos", "events_url": "https://api.github.com/users/lorddaedra/events{/privacy}", "received_events_url": "https://api.github.com/users/lorddaedra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-17T09:45:41Z", "updated_at": "2017-10-17T21:12:40Z", "closed_at": "2017-10-17T21:12:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have several ideas how we can improve our test configs:\r\n\r\n- Add Python 3.6 support\r\n- Remove Python 3.3 support (eol, see pep-0398)\r\n- Remove Django 1.9 support (eol, see https://www.djangoproject.com/download/, bottom of page)\r\n- Add Django 2.0b1, allow failures for now (https://docs.travis-ci.com/user/customizing-the-build/#Rows-that-are-Allowed-to-Fail)\r\n- Replace ==version to intervals like \u201cdjango>=1.11,<2.0\u201d (to get latest 1.11.x version for testing), it's good idea to always use latest bugfix versions for tests", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/26", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/26/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/26/events", "html_url": "https://github.com/un33k/django-ipware/issues/26", "id": 200267271, "node_id": "MDU6SXNzdWUyMDAyNjcyNzE=", "number": 26, "title": "Isn't it bug?", "user": {"login": "rightx2", "id": 10606994, "node_id": "MDQ6VXNlcjEwNjA2OTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/10606994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rightx2", "html_url": "https://github.com/rightx2", "followers_url": "https://api.github.com/users/rightx2/followers", "following_url": "https://api.github.com/users/rightx2/following{/other_user}", "gists_url": "https://api.github.com/users/rightx2/gists{/gist_id}", "starred_url": "https://api.github.com/users/rightx2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rightx2/subscriptions", "organizations_url": "https://api.github.com/users/rightx2/orgs", "repos_url": "https://api.github.com/users/rightx2/repos", "events_url": "https://api.github.com/users/rightx2/events{/privacy}", "received_events_url": "https://api.github.com/users/rightx2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-12T03:05:04Z", "updated_at": "2017-01-13T04:25:36Z", "closed_at": "2017-01-13T04:25:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Inside of `get_trusted_ip` function, there is a conditional statement: `len(ips) > 1`.\r\n\r\nI think that it should be `len(ips) >= 1` ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/24", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/24/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/24/events", "html_url": "https://github.com/un33k/django-ipware/issues/24", "id": 180652731, "node_id": "MDU6SXNzdWUxODA2NTI3MzE=", "number": 24, "title": "methods use the adjective \"IP\" instead of the noun \"address\"", "user": {"login": "chadmiller", "id": 287758, "node_id": "MDQ6VXNlcjI4Nzc1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/287758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chadmiller", "html_url": "https://github.com/chadmiller", "followers_url": "https://api.github.com/users/chadmiller/followers", "following_url": "https://api.github.com/users/chadmiller/following{/other_user}", "gists_url": "https://api.github.com/users/chadmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/chadmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chadmiller/subscriptions", "organizations_url": "https://api.github.com/users/chadmiller/orgs", "repos_url": "https://api.github.com/users/chadmiller/repos", "events_url": "https://api.github.com/users/chadmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/chadmiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-03T14:20:12Z", "updated_at": "2016-10-24T20:21:57Z", "closed_at": "2016-10-24T20:21:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Internet Protocol is composed of many pieces, so getting \"IP\" doesn't make much sense. Please add aliases to \"get_remote_address\".\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/22", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/22/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/22/events", "html_url": "https://github.com/un33k/django-ipware/issues/22", "id": 178954647, "node_id": "MDU6SXNzdWUxNzg5NTQ2NDc=", "number": 22, "title": "get_trusted_ip fails with right_most_proxy", "user": {"login": "felixxm", "id": 2865885, "node_id": "MDQ6VXNlcjI4NjU4ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2865885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixxm", "html_url": "https://github.com/felixxm", "followers_url": "https://api.github.com/users/felixxm/followers", "following_url": "https://api.github.com/users/felixxm/following{/other_user}", "gists_url": "https://api.github.com/users/felixxm/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixxm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixxm/subscriptions", "organizations_url": "https://api.github.com/users/felixxm/orgs", "repos_url": "https://api.github.com/users/felixxm/repos", "events_url": "https://api.github.com/users/felixxm/events{/privacy}", "received_events_url": "https://api.github.com/users/felixxm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-23T19:22:46Z", "updated_at": "2016-09-23T20:36:04Z", "closed_at": "2016-09-23T20:36:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`get_trusted_ip` fails with `right_most_proxy=True`, for example:\n\n``` python\nget_trusted_ip(request, right_most_proxy=True, trusted_proxies=['177.139.233.139'])\n```\n\n```\nTraceback (most recent call last):\nFile \"django-ipware/ipware/ip.py\", line 57, in get_trusted_ip\n    if proxy in ips[-1]:\nTypeError: 'list_reverseiterator' object is not subscriptable\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/20", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/20/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/20/events", "html_url": "https://github.com/un33k/django-ipware/issues/20", "id": 167474727, "node_id": "MDU6SXNzdWUxNjc0NzQ3Mjc=", "number": 20, "title": "Clarification of \"publicly accessible\"", "user": {"login": "DanielStevenLewis", "id": 578839, "node_id": "MDQ6VXNlcjU3ODgzOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/578839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielStevenLewis", "html_url": "https://github.com/DanielStevenLewis", "followers_url": "https://api.github.com/users/DanielStevenLewis/followers", "following_url": "https://api.github.com/users/DanielStevenLewis/following{/other_user}", "gists_url": "https://api.github.com/users/DanielStevenLewis/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielStevenLewis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielStevenLewis/subscriptions", "organizations_url": "https://api.github.com/users/DanielStevenLewis/orgs", "repos_url": "https://api.github.com/users/DanielStevenLewis/repos", "events_url": "https://api.github.com/users/DanielStevenLewis/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielStevenLewis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-25T21:52:10Z", "updated_at": "2016-08-17T11:01:39Z", "closed_at": "2016-08-17T11:01:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you please clarify what you mean by \"publicly accessible\"? For example if I have an application server running on a different physical server than my web server is running on, and the application server is only accessible from the web server, does the application server count as publicly accessible? It's not directly accessible by the public, but information from it is publicly accessible via the web server. Does it still count as a publicly accessible server for the purposes of using ipware?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/17", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/17/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/17/events", "html_url": "https://github.com/un33k/django-ipware/issues/17", "id": 133035159, "node_id": "MDU6SXNzdWUxMzMwMzUxNTk=", "number": 17, "title": "Django 1.9 support", "user": {"login": "vladir", "id": 5070775, "node_id": "MDQ6VXNlcjUwNzA3NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5070775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladir", "html_url": "https://github.com/vladir", "followers_url": "https://api.github.com/users/vladir/followers", "following_url": "https://api.github.com/users/vladir/following{/other_user}", "gists_url": "https://api.github.com/users/vladir/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladir/subscriptions", "organizations_url": "https://api.github.com/users/vladir/orgs", "repos_url": "https://api.github.com/users/vladir/repos", "events_url": "https://api.github.com/users/vladir/events{/privacy}", "received_events_url": "https://api.github.com/users/vladir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-11T17:26:49Z", "updated_at": "2016-04-16T18:25:06Z", "closed_at": "2016-04-16T18:25:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm thinking into upgrade a project that uses django-ipware very soon to Django 1.9. Is this already supported? Thanks in advance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/13", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/13/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/13/events", "html_url": "https://github.com/un33k/django-ipware/issues/13", "id": 118419339, "node_id": "MDU6SXNzdWUxMTg0MTkzMzk=", "number": 13, "title": "README mentions IPWARE_META_PRECEDENCE_LIST instead of IPWARE_META_PRECEDENCE_ORDER", "user": {"login": "HageMaster3108", "id": 6841412, "node_id": "MDQ6VXNlcjY4NDE0MTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6841412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HageMaster3108", "html_url": "https://github.com/HageMaster3108", "followers_url": "https://api.github.com/users/HageMaster3108/followers", "following_url": "https://api.github.com/users/HageMaster3108/following{/other_user}", "gists_url": "https://api.github.com/users/HageMaster3108/gists{/gist_id}", "starred_url": "https://api.github.com/users/HageMaster3108/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HageMaster3108/subscriptions", "organizations_url": "https://api.github.com/users/HageMaster3108/orgs", "repos_url": "https://api.github.com/users/HageMaster3108/repos", "events_url": "https://api.github.com/users/HageMaster3108/events{/privacy}", "received_events_url": "https://api.github.com/users/HageMaster3108/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-23T16:33:28Z", "updated_at": "2015-12-12T16:12:35Z", "closed_at": "2015-12-12T16:12:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "The README.md mentions IPWARE_META_PRECEDENCE_LIST - shouldn't this be IPWARE_META_PRECEDENCE_ORDER?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/11", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/11/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/11/events", "html_url": "https://github.com/un33k/django-ipware/issues/11", "id": 118418599, "node_id": "MDU6SXNzdWUxMTg0MTg1OTk=", "number": 11, "title": "get_ip() fails if any meta field from IPWARE_META_PRECEDENCE_LIST is None", "user": {"login": "HageMaster3108", "id": 6841412, "node_id": "MDQ6VXNlcjY4NDE0MTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6841412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HageMaster3108", "html_url": "https://github.com/HageMaster3108", "followers_url": "https://api.github.com/users/HageMaster3108/followers", "following_url": "https://api.github.com/users/HageMaster3108/following{/other_user}", "gists_url": "https://api.github.com/users/HageMaster3108/gists{/gist_id}", "starred_url": "https://api.github.com/users/HageMaster3108/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HageMaster3108/subscriptions", "organizations_url": "https://api.github.com/users/HageMaster3108/orgs", "repos_url": "https://api.github.com/users/HageMaster3108/repos", "events_url": "https://api.github.com/users/HageMaster3108/events{/privacy}", "received_events_url": "https://api.github.com/users/HageMaster3108/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-23T16:29:42Z", "updated_at": "2015-12-12T16:11:50Z", "closed_at": "2015-12-12T16:11:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nif any of the META keys in IPWARE_META_PRECEDENCE_LIST happens to be undefined/None, get_ip() fails.\n\n```\nTraceback:\nFile \"/Users/patrick/.virtualenvs/ib-cms/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  132.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/Users/patrick/.virtualenvs/ib-cms/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n  58.         return view_func(*args, **kwargs)\nFile \"/Users/patrick/Dev/ib-main/cms/views.py\" in fallback_upload_view\n  192.                 queue.client_ip = get_ip(request)\nFile \"/Users/patrick/.virtualenvs/ib-cms/lib/python2.7/site-packages/ipware/ip.py\" in get_ip\n  14.         value = request.META.get(key, '').strip()\n\n```\n\nWill send a pull request...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/10", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/10/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/10/events", "html_url": "https://github.com/un33k/django-ipware/issues/10", "id": 111645299, "node_id": "MDU6SXNzdWUxMTE2NDUyOTk=", "number": 10, "title": "Potential bug in version 1.0.0?", "user": {"login": "holyoaks", "id": 5797525, "node_id": "MDQ6VXNlcjU3OTc1MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5797525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/holyoaks", "html_url": "https://github.com/holyoaks", "followers_url": "https://api.github.com/users/holyoaks/followers", "following_url": "https://api.github.com/users/holyoaks/following{/other_user}", "gists_url": "https://api.github.com/users/holyoaks/gists{/gist_id}", "starred_url": "https://api.github.com/users/holyoaks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/holyoaks/subscriptions", "organizations_url": "https://api.github.com/users/holyoaks/orgs", "repos_url": "https://api.github.com/users/holyoaks/repos", "events_url": "https://api.github.com/users/holyoaks/events{/privacy}", "received_events_url": "https://api.github.com/users/holyoaks/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-15T15:40:08Z", "updated_at": "2016-10-13T17:51:27Z", "closed_at": "2015-10-28T20:37:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is a bug or not, especially since I've not run into this but the one time, but I figured I'd submit and see if it's something you all want to look at. I received a 500 error from my server when trying to get_real_ip. The call stack is copied below.\n\n  File \".\\sdcgis\\context_processors.py\", line 15, in login_context_processor\n    address = get_real_ip(request)\n  File \"C:\\Virtual\\Django17\\lib\\site-packages\\ipware\\ip.py\", line 36, in get_real_ip\n    return get_ip(request, real_ip_only=True, right_most_proxy=right_most_proxy)\n  File \"C:\\Virtual\\Django17\\lib\\site-packages\\ipware\\ip.py\", line 20, in get_ip\n    if ip_str and is_valid_ip(ip_str):\n  File \"C:\\Virtual\\Django17\\lib\\site-packages\\ipware\\utils.py\", line 37, in is_valid_ip\n    return is_valid_ipv4(ip_str) or is_valid_ipv6(ip_str)\n  File \"C:\\Virtual\\Django17\\lib\\site-packages\\ipware\\utils.py\", line 27, in is_valid_ipv6\n    socket.inet_pton(socket.AF_INET6, ip_str)\nAttributeError: 'module' object has no attribute 'inet_pton'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/9", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/9/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/9/events", "html_url": "https://github.com/un33k/django-ipware/issues/9", "id": 110310793, "node_id": "MDU6SXNzdWUxMTAzMTA3OTM=", "number": 9, "title": "Django 1.5 compatibility", "user": {"login": "mhb11", "id": 12384553, "node_id": "MDQ6VXNlcjEyMzg0NTUz", "avatar_url": "https://avatars3.githubusercontent.com/u/12384553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhb11", "html_url": "https://github.com/mhb11", "followers_url": "https://api.github.com/users/mhb11/followers", "following_url": "https://api.github.com/users/mhb11/following{/other_user}", "gists_url": "https://api.github.com/users/mhb11/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhb11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhb11/subscriptions", "organizations_url": "https://api.github.com/users/mhb11/orgs", "repos_url": "https://api.github.com/users/mhb11/repos", "events_url": "https://api.github.com/users/mhb11/events{/privacy}", "received_events_url": "https://api.github.com/users/mhb11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-07T20:34:57Z", "updated_at": "2015-10-07T20:46:03Z", "closed_at": "2015-10-07T20:40:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "@un33k : Hello, is this backwards compatible with Django 1.5 projects?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/8", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/8/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/8/events", "html_url": "https://github.com/un33k/django-ipware/issues/8", "id": 109967953, "node_id": "MDU6SXNzdWUxMDk5Njc5NTM=", "number": 8, "title": "Security risks of the default settings", "user": {"login": "vdboor", "id": 200303, "node_id": "MDQ6VXNlcjIwMDMwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/200303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdboor", "html_url": "https://github.com/vdboor", "followers_url": "https://api.github.com/users/vdboor/followers", "following_url": "https://api.github.com/users/vdboor/following{/other_user}", "gists_url": "https://api.github.com/users/vdboor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdboor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdboor/subscriptions", "organizations_url": "https://api.github.com/users/vdboor/orgs", "repos_url": "https://api.github.com/users/vdboor/repos", "events_url": "https://api.github.com/users/vdboor/events{/privacy}", "received_events_url": "https://api.github.com/users/vdboor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-06T09:23:17Z", "updated_at": "2015-10-07T14:07:48Z", "closed_at": "2015-10-06T17:06:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The default `IPWARE_META_PRECEDENCE_ORDER` settings cause django-ipware to check for various types of headers by default. However, not all headers may be there, or get filtered through the webserver.\n\nIn a standard setup (apache+mod_wsgi or nginx+uwsgi), only `REMOTE_ADDR` applies and needs to be read. Since there are many other headers in `IPWARE_META_PRECEDENCE_ORDER`, I could pass any of these to fake an IP address:\n- `X-Forwarded-For`\n- `Client-IP`\n- `X-Real-IP`\n- `X-Forwarded`\n- `X-Cluster-Client-IP`\n- `Forwarded-For`\n- `Forwarded`\n- `Via`\n\nI'd strongly recommend reducing `IPWARE_META_PRECEDENCE_ORDER` to just `REMOTE_ADDR` and let users configure their system explicitly when they use a forwarding http server in their setup.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/7", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/7/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/7/events", "html_url": "https://github.com/un33k/django-ipware/issues/7", "id": 87285411, "node_id": "MDU6SXNzdWU4NzI4NTQxMQ==", "number": 7, "title": "1.0.0.0/8 and 2.0.0.0/8", "user": {"login": "mknecht", "id": 77181, "node_id": "MDQ6VXNlcjc3MTgx", "avatar_url": "https://avatars3.githubusercontent.com/u/77181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mknecht", "html_url": "https://github.com/mknecht", "followers_url": "https://api.github.com/users/mknecht/followers", "following_url": "https://api.github.com/users/mknecht/following{/other_user}", "gists_url": "https://api.github.com/users/mknecht/gists{/gist_id}", "starred_url": "https://api.github.com/users/mknecht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mknecht/subscriptions", "organizations_url": "https://api.github.com/users/mknecht/orgs", "repos_url": "https://api.github.com/users/mknecht/repos", "events_url": "https://api.github.com/users/mknecht/events{/privacy}", "received_events_url": "https://api.github.com/users/mknecht/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-11T09:51:10Z", "updated_at": "2015-06-15T05:44:17Z", "closed_at": "2015-06-15T01:53:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "You list the 1.0.0.0/8 and 2.0.0.0/8 spaces as private by default. That's [not true anymore](http://en.wikipedia.org/wiki/List_of_assigned_/8_IPv4_address_blocks#List_of_assigned_.2F8_blocks_to_the_Regional_Internet_Registries) \u2014 they have been [opened up](http://arstechnica.com/business/2010/06/addresses-at-the-bottom-of-the-ipv4-barrel-not-so-pure/) for use around 2010.\n\nCurrently, we're getting errors cuz we cannot get the IP of some visitors, with 1.38\u2026 prefix. While of course I can override the setting, it'd be more convenient (and helpful for others) to drop those two ranges from the defaults list. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/6", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/6/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/6/events", "html_url": "https://github.com/un33k/django-ipware/issues/6", "id": 67935785, "node_id": "MDU6SXNzdWU2NzkzNTc4NQ==", "number": 6, "title": "Why am I seeing this ?", "user": {"login": "Sonic122", "id": 11913414, "node_id": "MDQ6VXNlcjExOTEzNDE0", "avatar_url": "https://avatars3.githubusercontent.com/u/11913414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sonic122", "html_url": "https://github.com/Sonic122", "followers_url": "https://api.github.com/users/Sonic122/followers", "following_url": "https://api.github.com/users/Sonic122/following{/other_user}", "gists_url": "https://api.github.com/users/Sonic122/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sonic122/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sonic122/subscriptions", "organizations_url": "https://api.github.com/users/Sonic122/orgs", "repos_url": "https://api.github.com/users/Sonic122/repos", "events_url": "https://api.github.com/users/Sonic122/events{/privacy}", "received_events_url": "https://api.github.com/users/Sonic122/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-12T17:14:52Z", "updated_at": "2015-06-15T00:10:15Z", "closed_at": "2015-06-15T00:10:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "![gcdu0bb-g6au85asdtjhw5vh_ez-gbqmb7hszdm-tra](https://cloud.githubusercontent.com/assets/11913414/7106639/bc142ea2-e150-11e4-885d-23e79e3d9870.jpg)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/4", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/4/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/4/events", "html_url": "https://github.com/un33k/django-ipware/issues/4", "id": 57233188, "node_id": "MDU6SXNzdWU1NzIzMzE4OA==", "number": 4, "title": "Python 3", "user": {"login": "rtubio", "id": 5666358, "node_id": "MDQ6VXNlcjU2NjYzNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5666358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtubio", "html_url": "https://github.com/rtubio", "followers_url": "https://api.github.com/users/rtubio/followers", "following_url": "https://api.github.com/users/rtubio/following{/other_user}", "gists_url": "https://api.github.com/users/rtubio/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtubio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtubio/subscriptions", "organizations_url": "https://api.github.com/users/rtubio/orgs", "repos_url": "https://api.github.com/users/rtubio/repos", "events_url": "https://api.github.com/users/rtubio/events{/privacy}", "received_events_url": "https://api.github.com/users/rtubio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-10T20:39:55Z", "updated_at": "2015-02-10T22:18:42Z", "closed_at": "2015-02-10T22:18:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this library compatible with Python 3?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/3", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/3/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/3/events", "html_url": "https://github.com/un33k/django-ipware/issues/3", "id": 39033405, "node_id": "MDU6SXNzdWUzOTAzMzQwNQ==", "number": 3, "title": "Non-public IPs don't follow precendence.", "user": {"login": "myq", "id": 1902982, "node_id": "MDQ6VXNlcjE5MDI5ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1902982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myq", "html_url": "https://github.com/myq", "followers_url": "https://api.github.com/users/myq/followers", "following_url": "https://api.github.com/users/myq/following{/other_user}", "gists_url": "https://api.github.com/users/myq/gists{/gist_id}", "starred_url": "https://api.github.com/users/myq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myq/subscriptions", "organizations_url": "https://api.github.com/users/myq/orgs", "repos_url": "https://api.github.com/users/myq/repos", "events_url": "https://api.github.com/users/myq/events{/privacy}", "received_events_url": "https://api.github.com/users/myq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-07-29T20:50:09Z", "updated_at": "2014-10-17T21:18:30Z", "closed_at": "2014-08-20T10:45:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "In ip.get_ip(), if `real_ip_only` is `False` and no public IPs are found, then the function will return the LAST non-public IP it finds, rather than the first.\n\nIs this the intended behavior?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/un33k/django-ipware/issues/1", "repository_url": "https://api.github.com/repos/un33k/django-ipware", "labels_url": "https://api.github.com/repos/un33k/django-ipware/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/un33k/django-ipware/issues/1/comments", "events_url": "https://api.github.com/repos/un33k/django-ipware/issues/1/events", "html_url": "https://github.com/un33k/django-ipware/issues/1", "id": 24444000, "node_id": "MDU6SXNzdWUyNDQ0NDAwMA==", "number": 1, "title": "Need ipv6 support to take this to the next level.", "user": {"login": "brycenesbitt", "id": 1294423, "node_id": "MDQ6VXNlcjEyOTQ0MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1294423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brycenesbitt", "html_url": "https://github.com/brycenesbitt", "followers_url": "https://api.github.com/users/brycenesbitt/followers", "following_url": "https://api.github.com/users/brycenesbitt/following{/other_user}", "gists_url": "https://api.github.com/users/brycenesbitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/brycenesbitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brycenesbitt/subscriptions", "organizations_url": "https://api.github.com/users/brycenesbitt/orgs", "repos_url": "https://api.github.com/users/brycenesbitt/repos", "events_url": "https://api.github.com/users/brycenesbitt/events{/privacy}", "received_events_url": "https://api.github.com/users/brycenesbitt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-12-17T19:25:11Z", "updated_at": "2013-12-22T18:53:02Z", "closed_at": "2013-12-22T18:53:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "The module is great, and really ought to be built into django itself.\nHowever, ipv6 support is needed to make a complete module.\n", "performed_via_github_app": null, "score": 1.0}]}