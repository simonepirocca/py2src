{"total_count": 31, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Supervisor/superlance/issues/126", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/126/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/126/events", "html_url": "https://github.com/Supervisor/superlance/issues/126", "id": 534545892, "node_id": "MDU6SXNzdWU1MzQ1NDU4OTI=", "number": 126, "title": "Please look at this question ", "user": {"login": "zhaoxinxin123", "id": 39457528, "node_id": "MDQ6VXNlcjM5NDU3NTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/39457528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhaoxinxin123", "html_url": "https://github.com/zhaoxinxin123", "followers_url": "https://api.github.com/users/zhaoxinxin123/followers", "following_url": "https://api.github.com/users/zhaoxinxin123/following{/other_user}", "gists_url": "https://api.github.com/users/zhaoxinxin123/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhaoxinxin123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhaoxinxin123/subscriptions", "organizations_url": "https://api.github.com/users/zhaoxinxin123/orgs", "repos_url": "https://api.github.com/users/zhaoxinxin123/repos", "events_url": "https://api.github.com/users/zhaoxinxin123/events{/privacy}", "received_events_url": "https://api.github.com/users/zhaoxinxin123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-08T14:00:14Z", "updated_at": "2019-12-08T18:03:53Z", "closed_at": "2019-12-08T18:03:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello:\r\n   I use supervision to monitor four projects, and superlance was used in the configuration file to monitor one of the projects and send emails when it unexpectedly exits. But now, every project that exits accidentally will send an email.Can you help me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/125", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/125/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/125/events", "html_url": "https://github.com/Supervisor/superlance/issues/125", "id": 534545788, "node_id": "MDU6SXNzdWU1MzQ1NDU3ODg=", "number": 125, "title": "Please look at this question ", "user": {"login": "zhaoxinxin123", "id": 39457528, "node_id": "MDQ6VXNlcjM5NDU3NTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/39457528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhaoxinxin123", "html_url": "https://github.com/zhaoxinxin123", "followers_url": "https://api.github.com/users/zhaoxinxin123/followers", "following_url": "https://api.github.com/users/zhaoxinxin123/following{/other_user}", "gists_url": "https://api.github.com/users/zhaoxinxin123/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhaoxinxin123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhaoxinxin123/subscriptions", "organizations_url": "https://api.github.com/users/zhaoxinxin123/orgs", "repos_url": "https://api.github.com/users/zhaoxinxin123/repos", "events_url": "https://api.github.com/users/zhaoxinxin123/events{/privacy}", "received_events_url": "https://api.github.com/users/zhaoxinxin123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-08T13:59:23Z", "updated_at": "2020-01-27T21:16:02Z", "closed_at": "2020-01-27T21:16:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello:\r\n   I use supervision to monitor four projects, and superlance was used in the configuration file to monitor one of the projects and send emails when it unexpectedly exits. But now, every project that exits accidentally will send an email.Can you help me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/124", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/124/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/124/events", "html_url": "https://github.com/Supervisor/superlance/issues/124", "id": 534126441, "node_id": "MDU6SXNzdWU1MzQxMjY0NDE=", "number": 124, "title": "Create a new release with Python 3 support", "user": {"login": "sbraz", "id": 4833332, "node_id": "MDQ6VXNlcjQ4MzMzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4833332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbraz", "html_url": "https://github.com/sbraz", "followers_url": "https://api.github.com/users/sbraz/followers", "following_url": "https://api.github.com/users/sbraz/following{/other_user}", "gists_url": "https://api.github.com/users/sbraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbraz/subscriptions", "organizations_url": "https://api.github.com/users/sbraz/orgs", "repos_url": "https://api.github.com/users/sbraz/repos", "events_url": "https://api.github.com/users/sbraz/events{/privacy}", "received_events_url": "https://api.github.com/users/sbraz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-06T16:35:19Z", "updated_at": "2019-12-08T18:03:31Z", "closed_at": "2019-12-08T18:03:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nWhile it looks like the package supports Python 3, only the git version does, none of the releases do (and there hasn't been one since 2016).\r\n\r\nCould you please release a new version?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/121", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/121/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/121/events", "html_url": "https://github.com/Supervisor/superlance/issues/121", "id": 459912511, "node_id": "MDU6SXNzdWU0NTk5MTI1MTE=", "number": 121, "title": "Doesn't seem to work", "user": {"login": "yusupprog", "id": 11705239, "node_id": "MDQ6VXNlcjExNzA1MjM5", "avatar_url": "https://avatars0.githubusercontent.com/u/11705239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yusupprog", "html_url": "https://github.com/yusupprog", "followers_url": "https://api.github.com/users/yusupprog/followers", "following_url": "https://api.github.com/users/yusupprog/following{/other_user}", "gists_url": "https://api.github.com/users/yusupprog/gists{/gist_id}", "starred_url": "https://api.github.com/users/yusupprog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yusupprog/subscriptions", "organizations_url": "https://api.github.com/users/yusupprog/orgs", "repos_url": "https://api.github.com/users/yusupprog/repos", "events_url": "https://api.github.com/users/yusupprog/events{/privacy}", "received_events_url": "https://api.github.com/users/yusupprog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-24T14:06:28Z", "updated_at": "2019-12-08T18:20:40Z", "closed_at": "2019-12-08T18:20:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "<img width=\"521\" alt=\"Screen Shot 2019-06-24 at 06 13 07\" src=\"https://user-images.githubusercontent.com/11705239/60025406-63449300-96bb-11e9-83af-c07eccbac29d.png\">\r\n<img width=\"435\" alt=\"Screen Shot 2019-06-24 at 06 13 29\" src=\"https://user-images.githubusercontent.com/11705239/60025407-63449300-96bb-11e9-800b-fa43c1ddd01a.png\">\r\n<img width=\"731\" alt=\"Screen Shot 2019-06-24 at 06 13 43\" src=\"https://user-images.githubusercontent.com/11705239/60025408-63449300-96bb-11e9-8472-c81cdbc91890.png\">\r\n\r\n\r\nHi. Can't configure memmon to restart express-server when memory limit is exceeded on Ubuntu 18", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/118", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/118/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/118/events", "html_url": "https://github.com/Supervisor/superlance/issues/118", "id": 390801727, "node_id": "MDU6SXNzdWUzOTA4MDE3Mjc=", "number": 118, "title": "python 3 installtion", "user": {"login": "vgoklani", "id": 180487, "node_id": "MDQ6VXNlcjE4MDQ4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/180487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vgoklani", "html_url": "https://github.com/vgoklani", "followers_url": "https://api.github.com/users/vgoklani/followers", "following_url": "https://api.github.com/users/vgoklani/following{/other_user}", "gists_url": "https://api.github.com/users/vgoklani/gists{/gist_id}", "starred_url": "https://api.github.com/users/vgoklani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vgoklani/subscriptions", "organizations_url": "https://api.github.com/users/vgoklani/orgs", "repos_url": "https://api.github.com/users/vgoklani/repos", "events_url": "https://api.github.com/users/vgoklani/events{/privacy}", "received_events_url": "https://api.github.com/users/vgoklani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-13T18:21:19Z", "updated_at": "2018-12-14T20:39:32Z", "closed_at": "2018-12-13T18:31:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey - thanks for maintaining this!\r\n\r\nHow do I install this under python 3? I tried pip:\r\n\r\n\tVs-Pro.local vgoklani@~ $ pip install superlance\r\n\tCollecting superlance\r\n\t  Using cached https://files.pythonhosted.org/packages/14/87/d2b4fe1f9e7f97360e75e125cc03b2216a0ce5092034f203febc3818b7da/superlance-1.0.0-py2.py3-none-any.whl\r\n\tCollecting supervisor (from superlance)\r\n\t  Using cached https://files.pythonhosted.org/packages/44/60/698e54b4a4a9b956b2d709b4b7b676119c833d811d53ee2500f1b5e96dc3/supervisor-3.3.4.tar.gz\r\n\t    Complete output from command python setup.py egg_info:\r\n\t    Supervisor requires Python 2.4 or later but does not work on any version of Python 3.  You are using version 3.7.0 (default, Jun 28 2018, 07:39:16)\r\n\t    [Clang 4.0.1 (tags/RELEASE_401/final)].  Please install using a supported version.\r\n\r\nI've been using supervisor with python3 and it's very stable :) but I need crashmail. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/114", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/114/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/114/events", "html_url": "https://github.com/Supervisor/superlance/issues/114", "id": 347254164, "node_id": "MDU6SXNzdWUzNDcyNTQxNjQ=", "number": 114, "title": "Superlance to send alerts to Slack channel", "user": {"login": "ifiok", "id": 8256305, "node_id": "MDQ6VXNlcjgyNTYzMDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/8256305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ifiok", "html_url": "https://github.com/ifiok", "followers_url": "https://api.github.com/users/ifiok/followers", "following_url": "https://api.github.com/users/ifiok/following{/other_user}", "gists_url": "https://api.github.com/users/ifiok/gists{/gist_id}", "starred_url": "https://api.github.com/users/ifiok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ifiok/subscriptions", "organizations_url": "https://api.github.com/users/ifiok/orgs", "repos_url": "https://api.github.com/users/ifiok/repos", "events_url": "https://api.github.com/users/ifiok/events{/privacy}", "received_events_url": "https://api.github.com/users/ifiok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-03T04:21:27Z", "updated_at": "2018-08-03T16:35:52Z", "closed_at": "2018-08-03T16:35:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI would like to extend this application to handle alerts to slack channels. Is that fine?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/113", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/113/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/113/events", "html_url": "https://github.com/Supervisor/superlance/issues/113", "id": 317479472, "node_id": "MDU6SXNzdWUzMTc0Nzk0NzI=", "number": 113, "title": "How to install superlance on python 3, when supervisor only supports python 2?", "user": {"login": "vgoklani", "id": 180487, "node_id": "MDQ6VXNlcjE4MDQ4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/180487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vgoklani", "html_url": "https://github.com/vgoklani", "followers_url": "https://api.github.com/users/vgoklani/followers", "following_url": "https://api.github.com/users/vgoklani/following{/other_user}", "gists_url": "https://api.github.com/users/vgoklani/gists{/gist_id}", "starred_url": "https://api.github.com/users/vgoklani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vgoklani/subscriptions", "organizations_url": "https://api.github.com/users/vgoklani/orgs", "repos_url": "https://api.github.com/users/vgoklani/repos", "events_url": "https://api.github.com/users/vgoklani/events{/privacy}", "received_events_url": "https://api.github.com/users/vgoklani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-25T05:03:35Z", "updated_at": "2018-04-25T06:05:27Z", "closed_at": "2018-04-25T06:05:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I install superlance on python3 when supervisor only supports python 2:\r\n\r\n```\r\n33fe43b4c05a root@~/src $ pip install superlance\r\nCollecting superlance\r\n  Using cached https://files.pythonhosted.org/packages/14/87/d2b4fe1f9e7f97360e75e125cc03b2216a0ce5092034f203febc3818b7da/superlance-1.0.0-py2.py3-none-any.whl\r\nCollecting supervisor (from superlance)\r\n  Using cached https://files.pythonhosted.org/packages/44/60/698e54b4a4a9b956b2d709b4b7b676119c833d811d53ee2500f1b5e96dc3/supervisor-3.3.4.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Supervisor requires Python 2.4 or later but does not work on any version of Python 3.  You are using version 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19)\r\n    [GCC 7.2.0].  Please install using a supported version.\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/110", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/110/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/110/events", "html_url": "https://github.com/Supervisor/superlance/issues/110", "id": 297531339, "node_id": "MDU6SXNzdWUyOTc1MzEzMzk=", "number": 110, "title": "httpok doesnt work if timeout is < 10", "user": {"login": "skaufman-socialflow", "id": 2882116, "node_id": "MDQ6VXNlcjI4ODIxMTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2882116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skaufman-socialflow", "html_url": "https://github.com/skaufman-socialflow", "followers_url": "https://api.github.com/users/skaufman-socialflow/followers", "following_url": "https://api.github.com/users/skaufman-socialflow/following{/other_user}", "gists_url": "https://api.github.com/users/skaufman-socialflow/gists{/gist_id}", "starred_url": "https://api.github.com/users/skaufman-socialflow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skaufman-socialflow/subscriptions", "organizations_url": "https://api.github.com/users/skaufman-socialflow/orgs", "repos_url": "https://api.github.com/users/skaufman-socialflow/repos", "events_url": "https://api.github.com/users/skaufman-socialflow/events{/privacy}", "received_events_url": "https://api.github.com/users/skaufman-socialflow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-15T17:28:50Z", "updated_at": "2018-12-19T12:52:50Z", "closed_at": "2018-02-17T19:12:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "This sounds unlikely but seems to be the case:\r\n\r\nThis commit: https://github.com/Supervisor/superlance/commit/0e6fb2d04a5eb144a2190e61745b6c915ded57e8#diff-d3d6eafafd2e31ce38ebab9e08f156eaL180\r\n\r\nchanged the logic for the retry loop. retry_time is hardcoded to 10 in httpok, so if timeout is < 10,\r\n`range(self.timeout // (self.retry_time or 1) - 1 ,  -1, -1):`\r\nbecomes\r\n`range(5 // 10 - 1 ,  -1, -1):`\r\nsimplifies to\r\n`range(-1 ,  -1, -1):` \r\nwhich will never execute because it is `[]`.\r\n\r\nI attempted to write a test case but I'm not really skilled enough to dissect the http_ok test file.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/105", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/105/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/105/events", "html_url": "https://github.com/Supervisor/superlance/issues/105", "id": 230290551, "node_id": "MDU6SXNzdWUyMzAyOTA1NTE=", "number": 105, "title": "memmon throwing 401 unauthorized when username and password used in unix_http_server", "user": {"login": "ksrvtsa", "id": 6364523, "node_id": "MDQ6VXNlcjYzNjQ1MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6364523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ksrvtsa", "html_url": "https://github.com/ksrvtsa", "followers_url": "https://api.github.com/users/ksrvtsa/followers", "following_url": "https://api.github.com/users/ksrvtsa/following{/other_user}", "gists_url": "https://api.github.com/users/ksrvtsa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ksrvtsa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ksrvtsa/subscriptions", "organizations_url": "https://api.github.com/users/ksrvtsa/orgs", "repos_url": "https://api.github.com/users/ksrvtsa/repos", "events_url": "https://api.github.com/users/ksrvtsa/events{/privacy}", "received_events_url": "https://api.github.com/users/ksrvtsa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-05-22T05:48:29Z", "updated_at": "2019-04-03T21:29:50Z", "closed_at": "2017-05-22T19:17:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "When authentication is used in the unix_http_server section and the same are credentials are used everywhere necessary like supervisorctl, memmon throws 401 unauthorized when it tries to create the ServerProxy in the main method. The supervisorctl is working fine though and the inet_http_server is also setup. What could be the issue?\r\n\r\nIt seems to expect the SUPERVISOR_USERNAME, SUPERVISOR_PASSWORD and the SUPERVISOR_SERVER_URL to be present in the env. Should we set it explicitly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/104", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/104/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/104/events", "html_url": "https://github.com/Supervisor/superlance/issues/104", "id": 227782333, "node_id": "MDU6SXNzdWUyMjc3ODIzMzM=", "number": 104, "title": "port it to python 3", "user": {"login": "juliomfreitas", "id": 1157131, "node_id": "MDQ6VXNlcjExNTcxMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1157131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juliomfreitas", "html_url": "https://github.com/juliomfreitas", "followers_url": "https://api.github.com/users/juliomfreitas/followers", "following_url": "https://api.github.com/users/juliomfreitas/following{/other_user}", "gists_url": "https://api.github.com/users/juliomfreitas/gists{/gist_id}", "starred_url": "https://api.github.com/users/juliomfreitas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juliomfreitas/subscriptions", "organizations_url": "https://api.github.com/users/juliomfreitas/orgs", "repos_url": "https://api.github.com/users/juliomfreitas/repos", "events_url": "https://api.github.com/users/juliomfreitas/events{/privacy}", "received_events_url": "https://api.github.com/users/juliomfreitas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-10T19:16:17Z", "updated_at": "2017-05-10T19:22:45Z", "closed_at": "2017-05-10T19:22:45Z", "author_association": "NONE", "active_lock_reason": null, "body": ":heart: ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/102", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/102/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/102/events", "html_url": "https://github.com/Supervisor/superlance/issues/102", "id": 203508572, "node_id": "MDU6SXNzdWUyMDM1MDg1NzI=", "number": 102, "title": "Add hooks for memmon to run a command before and after restarting a process", "user": {"login": "hvelarde", "id": 341393, "node_id": "MDQ6VXNlcjM0MTM5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/341393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hvelarde", "html_url": "https://github.com/hvelarde", "followers_url": "https://api.github.com/users/hvelarde/followers", "following_url": "https://api.github.com/users/hvelarde/following{/other_user}", "gists_url": "https://api.github.com/users/hvelarde/gists{/gist_id}", "starred_url": "https://api.github.com/users/hvelarde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hvelarde/subscriptions", "organizations_url": "https://api.github.com/users/hvelarde/orgs", "repos_url": "https://api.github.com/users/hvelarde/repos", "events_url": "https://api.github.com/users/hvelarde/events{/privacy}", "received_events_url": "https://api.github.com/users/hvelarde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-26T22:30:49Z", "updated_at": "2017-06-06T06:02:36Z", "closed_at": "2017-06-06T06:02:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have the following typical use case: Plone site with multiple instances running behind a web accelerator like Varnish, using memmon and httpok.\r\n\r\nFrom time to time, memmon will need to restart an instance because of high memory consumption; Varnish has configured backend health check probes that test if the instances are available or not, and this probes have to play very nicely with the instances because requests hitting the backend are typically slow; for instance:\r\n\r\n```\r\nprobe healthcheck {\r\n    .interval = 10s; .request = \"HEAD / HTTP/1.1\"; .timeout = 3s;\r\n}\r\n```\r\n\r\nAs restarting a Plone instance is a time consuming process (typically, around 30 seconds), Varnish will not notice the instance is down for some time and will continue sending requests; the instance then came in and will be flooded with a lot of pending requests from Varnish.\r\n\r\nThe Varnish backend then behaves erratically for some time until the instance stabilizes.\r\n\r\nWhat I would like to have? a hook to run a command before the instance is restarted and after is marked as running.\r\n\r\nThen I would be able to configure something like this:\r\n\r\n* memmon detects high memory usage\r\n* pre-hook is run: `varnishadm backend.set_health instance1 sick`\r\n* instance1 is restarted\r\n* supervisor waits and marks it as running\r\n* post-hook is run: `varnishadm backend.set_health instance1 auto`\r\n\r\nThis could be useful in other use cases also.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/99", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/99/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/99/events", "html_url": "https://github.com/Supervisor/superlance/issues/99", "id": 193159681, "node_id": "MDU6SXNzdWUxOTMxNTk2ODE=", "number": 99, "title": "how to limit email from crashmail  ", "user": {"login": "gchokeen", "id": 1717379, "node_id": "MDQ6VXNlcjE3MTczNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1717379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchokeen", "html_url": "https://github.com/gchokeen", "followers_url": "https://api.github.com/users/gchokeen/followers", "following_url": "https://api.github.com/users/gchokeen/following{/other_user}", "gists_url": "https://api.github.com/users/gchokeen/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchokeen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchokeen/subscriptions", "organizations_url": "https://api.github.com/users/gchokeen/orgs", "repos_url": "https://api.github.com/users/gchokeen/repos", "events_url": "https://api.github.com/users/gchokeen/events{/privacy}", "received_events_url": "https://api.github.com/users/gchokeen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-02T16:33:23Z", "updated_at": "2016-12-11T17:44:33Z", "closed_at": "2016-12-11T17:44:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are running many supervisor tasks. when server facing some problem. crashmail sendout email to configured email id. That's good, but sometime if not able to immediately  resolve the server issue, crashmail sends out thousands of email. So Is there any option to limit the email for specific period?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/97", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/97/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/97/events", "html_url": "https://github.com/Supervisor/superlance/issues/97", "id": 183802458, "node_id": "MDU6SXNzdWUxODM4MDI0NTg=", "number": 97, "title": "how to test crashsms", "user": {"login": "morfin", "id": 1243618, "node_id": "MDQ6VXNlcjEyNDM2MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1243618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morfin", "html_url": "https://github.com/morfin", "followers_url": "https://api.github.com/users/morfin/followers", "following_url": "https://api.github.com/users/morfin/following{/other_user}", "gists_url": "https://api.github.com/users/morfin/gists{/gist_id}", "starred_url": "https://api.github.com/users/morfin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morfin/subscriptions", "organizations_url": "https://api.github.com/users/morfin/orgs", "repos_url": "https://api.github.com/users/morfin/repos", "events_url": "https://api.github.com/users/morfin/events{/privacy}", "received_events_url": "https://api.github.com/users/morfin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-18T21:03:29Z", "updated_at": "2016-10-18T22:43:19Z", "closed_at": "2016-10-18T21:25:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI installed superlance and configured crashsms. crashsms is running:\ncrashsms                         RUNNING   pid 21683, uptime 0:10:06\n\nThis what I added in supervisord.conf:\n\n[eventlistener:crashsms]\ncommand=crashsms --toEmail=\"test@email_to_sms_gateway.com\" --subject=\"Testing\" --smtpHost=\"smtp.mailgun.org\" --userName=\"postmaster@x.com\" --password=\"xxxxxxx\" --fromEmail=\"info@x.com\"\nevents=PROCESS_STATE\n\nSo far no E-mail has been sent. How can I manually cause a PROCESS_STATE change so I can test it out ?\n\n I stopped one of my processes with: sudo supervisorctl stop worker-1000, but that didn't trigger the event.\n\nAny guidance will be appreciated. Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/96", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/96/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/96/events", "html_url": "https://github.com/Supervisor/superlance/issues/96", "id": 182376886, "node_id": "MDU6SXNzdWUxODIzNzY4ODY=", "number": 96, "title": "Allow customizing email body messages", "user": {"login": "logankp", "id": 5343074, "node_id": "MDQ6VXNlcjUzNDMwNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5343074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/logankp", "html_url": "https://github.com/logankp", "followers_url": "https://api.github.com/users/logankp/followers", "following_url": "https://api.github.com/users/logankp/following{/other_user}", "gists_url": "https://api.github.com/users/logankp/gists{/gist_id}", "starred_url": "https://api.github.com/users/logankp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/logankp/subscriptions", "organizations_url": "https://api.github.com/users/logankp/orgs", "repos_url": "https://api.github.com/users/logankp/repos", "events_url": "https://api.github.com/users/logankp/events{/privacy}", "received_events_url": "https://api.github.com/users/logankp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-11T21:17:41Z", "updated_at": "2016-10-11T22:56:53Z", "closed_at": "2016-10-11T22:56:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like the ability to customize the body of email messages that get sent from plugins like crashmail and memmon. Could a switch be added for this to those programs?\n\nI can submit a pull request if this is approved.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/94", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/94/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/94/events", "html_url": "https://github.com/Supervisor/superlance/issues/94", "id": 180255240, "node_id": "MDU6SXNzdWUxODAyNTUyNDA=", "number": 94, "title": "-n option is not supported by httpok?", "user": {"login": "DenisBY", "id": 1147703, "node_id": "MDQ6VXNlcjExNDc3MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1147703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DenisBY", "html_url": "https://github.com/DenisBY", "followers_url": "https://api.github.com/users/DenisBY/followers", "following_url": "https://api.github.com/users/DenisBY/following{/other_user}", "gists_url": "https://api.github.com/users/DenisBY/gists{/gist_id}", "starred_url": "https://api.github.com/users/DenisBY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DenisBY/subscriptions", "organizations_url": "https://api.github.com/users/DenisBY/orgs", "repos_url": "https://api.github.com/users/DenisBY/repos", "events_url": "https://api.github.com/users/DenisBY/events{/privacy}", "received_events_url": "https://api.github.com/users/DenisBY/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-30T09:05:08Z", "updated_at": "2016-09-30T09:17:23Z", "closed_at": "2016-09-30T09:17:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Despite usage help\n\n```\n-n -- optionally specify the name of the httpok process.  This name will\n      be used in the email subject to identify which httpok process\n      restarted the process.\n```\n\nit seems that httpok doesn't support this option\n\n```\n    short_args=\"hp:at:c:b:s:m:g:d:eE\"\n    long_args=[\n        \"help\",\n        \"program=\",\n        \"any\",\n        \"timeout=\",\n        \"code=\",\n        \"body=\",\n        \"sendmail_program=\",\n        \"email=\",\n        \"gcore=\",\n        \"coredir=\",\n        \"eager\",\n        \"not-eager\",\n]\n```\n\nIs it mistake or by design?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/92", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/92/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/92/events", "html_url": "https://github.com/Supervisor/superlance/issues/92", "id": 175289707, "node_id": "MDU6SXNzdWUxNzUyODk3MDc=", "number": 92, "title": "Sphinx warnings when building from a PyPI tarball", "user": {"login": "sbraz", "id": 4833332, "node_id": "MDQ6VXNlcjQ4MzMzMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4833332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbraz", "html_url": "https://github.com/sbraz", "followers_url": "https://api.github.com/users/sbraz/followers", "following_url": "https://api.github.com/users/sbraz/following{/other_user}", "gists_url": "https://api.github.com/users/sbraz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbraz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbraz/subscriptions", "organizations_url": "https://api.github.com/users/sbraz/orgs", "repos_url": "https://api.github.com/users/sbraz/repos", "events_url": "https://api.github.com/users/sbraz/events{/privacy}", "received_events_url": "https://api.github.com/users/sbraz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-06T16:17:53Z", "updated_at": "2016-09-24T14:56:13Z", "closed_at": "2016-09-24T14:56:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\nWhen I build the doc from PyPI's 0.13 tarball, I see this:\n\n```\nsuperlance-0.13/docs/index.rst:44: WARNING: toctree contains reference to nonexisting document u'development'\n```\n\nand\n\n```\ncopying static files... WARNING: html_static_path entry u'/var/tmp/portage/dev-python/superlance-0.13/work/superlance-0.13/docs/_static' does not exist\n```\n\nDo you think you could include the `development.rst` file and the `_static` directory (or just remove the relevant line from `conf.py`)?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/76", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/76/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/76/events", "html_url": "https://github.com/Supervisor/superlance/issues/76", "id": 137647134, "node_id": "MDU6SXNzdWUxMzc2NDcxMzQ=", "number": 76, "title": "Send email through smtp in superlance using crashmail", "user": {"login": "nguyenkims", "id": 3167780, "node_id": "MDQ6VXNlcjMxNjc3ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3167780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nguyenkims", "html_url": "https://github.com/nguyenkims", "followers_url": "https://api.github.com/users/nguyenkims/followers", "following_url": "https://api.github.com/users/nguyenkims/following{/other_user}", "gists_url": "https://api.github.com/users/nguyenkims/gists{/gist_id}", "starred_url": "https://api.github.com/users/nguyenkims/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nguyenkims/subscriptions", "organizations_url": "https://api.github.com/users/nguyenkims/orgs", "repos_url": "https://api.github.com/users/nguyenkims/repos", "events_url": "https://api.github.com/users/nguyenkims/events{/privacy}", "received_events_url": "https://api.github.com/users/nguyenkims/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 335714437, "node_id": "MDU6TGFiZWwzMzU3MTQ0Mzc=", "url": "https://api.github.com/repos/Supervisor/superlance/labels/question", "name": "question", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-01T18:12:21Z", "updated_at": "2016-03-03T17:26:26Z", "closed_at": "2016-03-03T17:26:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI've posted this question on stackoverflow but given there isn't a lot of questions about superlance, I decided to repost the question here.\n\nI'm trying to set up the email sending when a process changes state in [supervisord](http://supervisord.org/) by using [crashmail](https://superlance.readthedocs.org/en/latest/crashmail.html). Having no luck with the default `sendmail` program which requires quite a lot of setup, I decided to go with a small script in Python that sends email using SMTP.\n\nThis worked very well (I received indeed an email saying that the process state changes) for the first state change but stop working afterward. I have tried to change different options in `supervisord` such as `buffer_size` or `autorestart` but it has no effect.\n\nHere is the script I use to trigger the `supervisord` state changes:\n\n```\nimport time\n\nfrom datetime import datetime\n\nif __name__ == '__main__':\n    print(\">>>>> STARTING ...\", flush=True)\n    while True:\n        print(\"sleep now:\", datetime.utcnow(), flush=True)\n        time.sleep(30)\n        raise Exception(\"meo meo\")\n```\n\nThis is the script that sends email through Gmail. This one will send the `stdin`.\n\n```\n#!/usr/bin/env python\n\nimport smtplib\n\n\ndef get_server():\n    smtpserver = smtplib.SMTP('smtp.gmail.com:587')\n    smtpserver.ehlo()\n    smtpserver.starttls()\n    smtpserver.login(\"user@gmail.com\", \"password\")\n    return smtpserver\n\n\nif __name__ == '__main__':\n    import sys\n\n    data = sys.stdin.read()\n\n    s = get_server()\n    s.sendmail('from@gmail.com', ['myemail@fitle.com'], data)\n    s.quit()\n```\n\nHere is my `supervisord.conf`\n\n```\n[eventlistener:crashmail]\ncommand=crashmail -a -m myemail@gmail.com -s /home/ubuntu/mysendmail.py\nevents=PROCESS_STATE\nbuffer_size=102400\nautorestart=true\n```\n\nDoes anyone have any idea why? \nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/70", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/70/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/70/events", "html_url": "https://github.com/Supervisor/superlance/issues/70", "id": 114579841, "node_id": "MDU6SXNzdWUxMTQ1Nzk4NDE=", "number": 70, "title": "httpok restarts slow process", "user": {"login": "hvelarde", "id": 341393, "node_id": "MDQ6VXNlcjM0MTM5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/341393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hvelarde", "html_url": "https://github.com/hvelarde", "followers_url": "https://api.github.com/users/hvelarde/followers", "following_url": "https://api.github.com/users/hvelarde/following{/other_user}", "gists_url": "https://api.github.com/users/hvelarde/gists{/gist_id}", "starred_url": "https://api.github.com/users/hvelarde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hvelarde/subscriptions", "organizations_url": "https://api.github.com/users/hvelarde/orgs", "repos_url": "https://api.github.com/users/hvelarde/repos", "events_url": "https://api.github.com/users/hvelarde/events{/privacy}", "received_events_url": "https://api.github.com/users/hvelarde/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 436584489, "node_id": "MDU6TGFiZWw0MzY1ODQ0ODk=", "url": "https://api.github.com/repos/Supervisor/superlance/labels/httpok", "name": "httpok", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-02T11:52:17Z", "updated_at": "2016-09-05T21:34:50Z", "closed_at": "2016-09-05T21:34:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Plone site with 3 Zope busy instances running under Supervisord; I have memmon and httpok plugins configured but seems that sometimes httpok restarts an instance that was recently restarted by memmon.\n\nhere is a piece of my memmon stderr log:\n\n```\nChecking groups app=1610612736\nRSS of app:instance1 is 1614974976\nRestarting app:instance1           <-- restarting\nRSS of app:instance2 is 1297457152\nRSS of app:instance3 is 1477554176\nChecking groups app=1610612736\nRSS of app:instance1 is 318668800  <-- going up\nRSS of app:instance2 is 1297506304\nRSS of app:instance3 is 1477554176\nChecking groups app=1610612736\nRSS of app:instance1 is 164720640  <-- down\nRSS of app:instance2 is 1297575936\nRSS of app:instance3 is 1477672960\nChecking groups app=1610612736\nRSS of app:instance1 is 340303872  <-- going up\nRSS of app:instance2 is 1305280512\nRSS of app:instance3 is 1477713920\nChecking groups app=1610612736\nRSS of app:instance1 is 166830080  <-- down\nRSS of app:instance2 is 1318711296\nRSS of app:instance3 is 1477849088\nChecking groups app=1610612736\nRSS of app:instance1 is 337248256  <-- going up\nRSS of app:instance2 is 1325903872\nRSS of app:instance3 is 1477685248\nChecking groups app=1610612736\nRSS of app:instance1 is 432963584  <-- stabilized\nRSS of app:instance2 is 1325481984\nRSS of app:instance3 is 1477685248\nChecking groups app=1610612736\nRSS of app:instance1 is 630874112\nRSS of app:instance2 is 1325424640\nRSS of app:instance3 is 1477685248\n```\n\nas you can see, instance1 RSS goes from around 300MB to 150MB a couple of times before stabilizing; this seems to me as an indicator of httpok restarting the instance in the middle. both plugins are configured running at `TICK_60`.\n\nI solved this on the initial start by waiting 10 minutes before start using httpok; probably we need another parameter to deal with that after the process is running.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/63", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/63/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/63/events", "html_url": "https://github.com/Supervisor/superlance/issues/63", "id": 90447336, "node_id": "MDU6SXNzdWU5MDQ0NzMzNg==", "number": 63, "title": "Directory monitor for conf files", "user": {"login": "krafts", "id": 11443695, "node_id": "MDQ6VXNlcjExNDQzNjk1", "avatar_url": "https://avatars0.githubusercontent.com/u/11443695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krafts", "html_url": "https://github.com/krafts", "followers_url": "https://api.github.com/users/krafts/followers", "following_url": "https://api.github.com/users/krafts/following{/other_user}", "gists_url": "https://api.github.com/users/krafts/gists{/gist_id}", "starred_url": "https://api.github.com/users/krafts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krafts/subscriptions", "organizations_url": "https://api.github.com/users/krafts/orgs", "repos_url": "https://api.github.com/users/krafts/repos", "events_url": "https://api.github.com/users/krafts/events{/privacy}", "received_events_url": "https://api.github.com/users/krafts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-23T17:41:03Z", "updated_at": "2016-09-04T17:42:19Z", "closed_at": "2016-09-04T17:42:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Monitors a directory for file changes and sends an event. Did not see an suitable event type for this.\n\nThis will help in restarting processes after changes in the conf.d are detected for applications. More specifically this helps when processes are running within containers and the conf.d is mounted on shared volumes. So when placing files, access to processes in other containers not available due to process namespaces being insulated.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/59", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/59/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/59/events", "html_url": "https://github.com/Supervisor/superlance/issues/59", "id": 56641126, "node_id": "MDU6SXNzdWU1NjY0MTEyNg==", "number": 59, "title": "email address from file [Feature Request]", "user": {"login": "steeevieee", "id": 8607880, "node_id": "MDQ6VXNlcjg2MDc4ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8607880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steeevieee", "html_url": "https://github.com/steeevieee", "followers_url": "https://api.github.com/users/steeevieee/followers", "following_url": "https://api.github.com/users/steeevieee/following{/other_user}", "gists_url": "https://api.github.com/users/steeevieee/gists{/gist_id}", "starred_url": "https://api.github.com/users/steeevieee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steeevieee/subscriptions", "organizations_url": "https://api.github.com/users/steeevieee/orgs", "repos_url": "https://api.github.com/users/steeevieee/repos", "events_url": "https://api.github.com/users/steeevieee/events{/privacy}", "received_events_url": "https://api.github.com/users/steeevieee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-05T08:32:19Z", "updated_at": "2016-09-04T23:30:43Z", "closed_at": "2016-09-04T23:30:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have the crashmail email go to different addresses based on an on-call rota, and at the moment we have to bounce it weekly to pick up the change. It would be nice to have it read the email address from a file just before sending instead. I'm not good with Python, but something like...\n\ndef mail(self, email, subject, msg):\nif os.path.isfile(self.email) and os.access(self.email, os.R_OK):\n  with open(self.email,'r') as f:\n    body = 'To: %s\\n' % f.read()\nelse:\n  body = 'To: %s\\n' % self.email\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/55", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/55/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/55/events", "html_url": "https://github.com/Supervisor/superlance/issues/55", "id": 49015204, "node_id": "MDU6SXNzdWU0OTAxNTIwNA==", "number": 55, "title": "OS X: ERRO pool memmon event buffer overflowed, discarding event 73", "user": {"login": "gotlium", "id": 488554, "node_id": "MDQ6VXNlcjQ4ODU1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/488554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gotlium", "html_url": "https://github.com/gotlium", "followers_url": "https://api.github.com/users/gotlium/followers", "following_url": "https://api.github.com/users/gotlium/following{/other_user}", "gists_url": "https://api.github.com/users/gotlium/gists{/gist_id}", "starred_url": "https://api.github.com/users/gotlium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gotlium/subscriptions", "organizations_url": "https://api.github.com/users/gotlium/orgs", "repos_url": "https://api.github.com/users/gotlium/repos", "events_url": "https://api.github.com/users/gotlium/events{/privacy}", "received_events_url": "https://api.github.com/users/gotlium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-16T20:49:29Z", "updated_at": "2014-11-16T21:56:40Z", "closed_at": "2014-11-16T20:56:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "At start I get two messages, and after I'm got this errors:\n\n```\n2014-11-16 23:44:50,829 ERRO pool memmon event buffer overflowed, discarding event 62\n2014-11-16 23:44:55,838 ERRO pool memmon event buffer overflowed, discarding event 63\n2014-11-16 23:45:00,843 ERRO pool memmon event buffer overflowed, discarding event 64\n2014-11-16 23:45:05,849 ERRO pool memmon event buffer overflowed, discarding event 65\n2014-11-16 23:45:10,856 ERRO pool memmon event buffer overflowed, discarding event 66\n2014-11-16 23:45:15,861 ERRO pool memmon event buffer overflowed, discarding event 67\n2014-11-16 23:45:20,867 ERRO pool memmon event buffer overflowed, discarding event 68\n2014-11-16 23:45:25,874 ERRO pool memmon event buffer overflowed, discarding event 69\n2014-11-16 23:45:30,663 ERRO pool memmon event buffer overflowed, discarding event 70\n2014-11-16 23:45:35,668 ERRO pool memmon event buffer overflowed, discarding event 71\n2014-11-16 23:45:40,377 ERRO pool memmon event buffer overflowed, discarding event 72\n2014-11-16 23:45:45,418 ERRO pool memmon event buffer overflowed, discarding event 73\n```\n\nsettings:\n\n```\n[eventlistener:memmon]\ncommand=memmon -p events=1MB\nevents=TICK_5,PROCESS_STATE\nredirect_stderr=True\nstdout_logfile=/tmp/memmon.log\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/49", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/49/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/49/events", "html_url": "https://github.com/Supervisor/superlance/issues/49", "id": 42676721, "node_id": "MDU6SXNzdWU0MjY3NjcyMQ==", "number": 49, "title": "Send process output in email", "user": {"login": "dsoprea", "id": 715626, "node_id": "MDQ6VXNlcjcxNTYyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/715626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsoprea", "html_url": "https://github.com/dsoprea", "followers_url": "https://api.github.com/users/dsoprea/followers", "following_url": "https://api.github.com/users/dsoprea/following{/other_user}", "gists_url": "https://api.github.com/users/dsoprea/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsoprea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsoprea/subscriptions", "organizations_url": "https://api.github.com/users/dsoprea/orgs", "repos_url": "https://api.github.com/users/dsoprea/repos", "events_url": "https://api.github.com/users/dsoprea/events{/privacy}", "received_events_url": "https://api.github.com/users/dsoprea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-12T22:27:35Z", "updated_at": "2015-08-09T01:29:55Z", "closed_at": "2015-08-09T01:29:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this possible? It doesn't seem like it, but almost everyone could benefit from it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/47", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/47/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/47/events", "html_url": "https://github.com/Supervisor/superlance/issues/47", "id": 41649841, "node_id": "MDU6SXNzdWU0MTY0OTg0MQ==", "number": 47, "title": "Let httpok send more signals [feature request]", "user": {"login": "jean", "id": 84800, "node_id": "MDQ6VXNlcjg0ODAw", "avatar_url": "https://avatars3.githubusercontent.com/u/84800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jean", "html_url": "https://github.com/jean", "followers_url": "https://api.github.com/users/jean/followers", "following_url": "https://api.github.com/users/jean/following{/other_user}", "gists_url": "https://api.github.com/users/jean/gists{/gist_id}", "starred_url": "https://api.github.com/users/jean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jean/subscriptions", "organizations_url": "https://api.github.com/users/jean/orgs", "repos_url": "https://api.github.com/users/jean/repos", "events_url": "https://api.github.com/users/jean/events{/privacy}", "received_events_url": "https://api.github.com/users/jean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 436584489, "node_id": "MDU6TGFiZWw0MzY1ODQ0ODk=", "url": "https://api.github.com/repos/Supervisor/superlance/labels/httpok", "name": "httpok", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-01T16:09:31Z", "updated_at": "2016-09-04T23:54:15Z", "closed_at": "2016-09-04T23:52:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like `httpok` to send `SIGUSR1` before killing a Zope instance, to obtain a thread dump, so that I can figure out what was keeping the instance busy. \n\nWhat would be a good way to specify this in configuration? \nWould something like the following make sense?\n\n``` diff\ndiff --git a/superlance/httpok.py b/superlance/httpok.py\nindex 23682fc..3e7c6b1 100644\n--- a/superlance/httpok.py\n+++ b/superlance/httpok.py\n@@ -280,6 +280,8 @@ class HTTPOk:\n                         namespec, m.read()))\n             write('%s is in RUNNING state, restarting' % namespec)\n             try:\n+                for signal in self.signals:\n+                    self.rpc.supervisor.signalProcess(namespec, signal)\n                 self.rpc.supervisor.stopProcess(namespec)\n             except xmlrpclib.Fault as e:\n                 write('Failed to stop process %s: %s' % (\n```\n\nRaised at https://lists.supervisord.org/pipermail/supervisor-users/2014-September/001520.html too.\n\n(`signalProcess` is not yet in a supervisor release.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/45", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/45/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/45/events", "html_url": "https://github.com/Supervisor/superlance/issues/45", "id": 40536167, "node_id": "MDU6SXNzdWU0MDUzNjE2Nw==", "number": 45, "title": "xmlrpclib.Fault UNKNOWN_METHOD", "user": {"login": "bshi", "id": 15159, "node_id": "MDQ6VXNlcjE1MTU5", "avatar_url": "https://avatars3.githubusercontent.com/u/15159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bshi", "html_url": "https://github.com/bshi", "followers_url": "https://api.github.com/users/bshi/followers", "following_url": "https://api.github.com/users/bshi/following{/other_user}", "gists_url": "https://api.github.com/users/bshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bshi/subscriptions", "organizations_url": "https://api.github.com/users/bshi/orgs", "repos_url": "https://api.github.com/users/bshi/repos", "events_url": "https://api.github.com/users/bshi/events{/privacy}", "received_events_url": "https://api.github.com/users/bshi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-18T21:51:51Z", "updated_at": "2014-08-18T22:10:37Z", "closed_at": "2014-08-18T22:10:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using: supervisor 3.1.1, memmon latest from git\n\nThe following configuration\n\n```\n[inet_http_server]\n# Required for memmon\nport = 127.0.0.1:9001\n\n\n[supervisord]\nnodaemon=true\n\n\n# [program:appserver]\n# ...\n# ...\n\n\n# See http://superlance.readthedocs.org/en/latest/memmon.html Workaround for\n# dealing with application server memory consumption.  Restart 'appserver'\n# program (see above) when it reaches a dangerous thresshold.\n[eventlistener:memmon]\ncommand=memmon -p appserver=1400MB\nevents=TICK_60\nredirect_stderr=true\nstdout_logfile=%(ENV_AS_LOGDIR)s/mmstdout\nstderr_logfile=%(ENV_AS_LOGDIR)s/mmstderr\n```\n\ncauses memmon to fail (stack trace and stdout below)\n\n```\nChecking programs appserver=1468006400\nTraceback (most recent call last):\n  File \"/usr/local/bin/memmon\", line 9, in <module>\n    load_entry_point('superlance==0.11', 'console_scripts', 'memmon')()\n  File \"/usr/local/lib/python2.7/dist-packages/superlance/memmon.py\", line 402, in main\n    memmon.runforever()\n  File \"/usr/local/lib/python2.7/dist-packages/superlance/memmon.py\", line 147, in runforever\n    infos = self.rpc.supervisor.getAllProcessInfo()\n  File \"/usr/lib/python2.7/xmlrpclib.py\", line 1224, in __call__\n    return self.__send(self.__name, args)\n  File \"/usr/lib/python2.7/xmlrpclib.py\", line 1578, in __request\n    verbose=self.__verbose\n  File \"/usr/local/lib/python2.7/dist-packages/supervisor/xmlrpc.py\", line 475, in request\n    return u.close()\n  File \"/usr/lib/python2.7/xmlrpclib.py\", line 793, in close\n    raise Fault(**self._stack[0])\nxmlrpclib.Fault: <Fault 1: 'UNKNOWN_METHOD'>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/40", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/40/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/40/events", "html_url": "https://github.com/Supervisor/superlance/issues/40", "id": 36777653, "node_id": "MDU6SXNzdWUzNjc3NzY1Mw==", "number": 40, "title": "New release?", "user": {"login": "do3cc", "id": 147512, "node_id": "MDQ6VXNlcjE0NzUxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/147512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/do3cc", "html_url": "https://github.com/do3cc", "followers_url": "https://api.github.com/users/do3cc/followers", "following_url": "https://api.github.com/users/do3cc/following{/other_user}", "gists_url": "https://api.github.com/users/do3cc/gists{/gist_id}", "starred_url": "https://api.github.com/users/do3cc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/do3cc/subscriptions", "organizations_url": "https://api.github.com/users/do3cc/orgs", "repos_url": "https://api.github.com/users/do3cc/repos", "events_url": "https://api.github.com/users/do3cc/events{/privacy}", "received_events_url": "https://api.github.com/users/do3cc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-30T08:24:43Z", "updated_at": "2014-07-08T19:40:33Z", "closed_at": "2014-07-08T19:40:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nmaster contains a fix that would have prevented downtimes for us twice by now. Can we have a new release? I'd also be happy to do it. My pypi username is do3cc.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/29", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/29/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/29/events", "html_url": "https://github.com/Supervisor/superlance/issues/29", "id": 19664646, "node_id": "MDU6SXNzdWUxOTY2NDY0Ng==", "number": 29, "title": "*mailbatch (both crash and fatal) ", "user": {"login": "aniketd", "id": 922486, "node_id": "MDQ6VXNlcjkyMjQ4Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/922486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aniketd", "html_url": "https://github.com/aniketd", "followers_url": "https://api.github.com/users/aniketd/followers", "following_url": "https://api.github.com/users/aniketd/following{/other_user}", "gists_url": "https://api.github.com/users/aniketd/gists{/gist_id}", "starred_url": "https://api.github.com/users/aniketd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aniketd/subscriptions", "organizations_url": "https://api.github.com/users/aniketd/orgs", "repos_url": "https://api.github.com/users/aniketd/repos", "events_url": "https://api.github.com/users/aniketd/events{/privacy}", "received_events_url": "https://api.github.com/users/aniketd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-09-18T06:55:54Z", "updated_at": "2013-09-19T05:41:34Z", "closed_at": "2013-09-18T16:38:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "parse_cmd_line_options\nis somehow NOT called before\nvalidate_cmd_line_options\n\nTraceback (most recent call last):\n  File \"/usr/local/bin/fatalmailbatch\", line 9, in <module>\n    load_entry_point('superlance==0.8', 'console_scripts', 'fatalmailbatch')()\n  File \"/usr/local/lib/python2.7/dist-packages/superlance/fatalmailbatch.py\", line 74, in main\n    fatal = FatalMailBatch.create_from_cmd_line()\n  File \"/usr/local/lib/python2.7/dist-packages/superlance/process_state_email_monitor.py\", line 77, in create_from_cmd_line\n    options = cls.get_cmd_line_options()\n  File \"/usr/local/lib/python2.7/dist-packages/superlance/process_state_email_monitor.py\", line 73, in get_cmd_line_options\n    return cls.validate_cmd_line_options(cls.parse_cmd_line_options())\n  File \"/usr/local/lib/python2.7/dist-packages/superlance/process_state_email_monitor.py\", line 61, in validate_cmd_line_options\n    parser.print_help()\nNameError: global name 'parser' is not defined\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/26", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/26/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/26/events", "html_url": "https://github.com/Supervisor/superlance/issues/26", "id": 19082538, "node_id": "MDU6SXNzdWUxOTA4MjUzOA==", "number": 26, "title": "fatal error in process_state_email_monitor.py", "user": {"login": "vbjordan", "id": 1743995, "node_id": "MDQ6VXNlcjE3NDM5OTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1743995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vbjordan", "html_url": "https://github.com/vbjordan", "followers_url": "https://api.github.com/users/vbjordan/followers", "following_url": "https://api.github.com/users/vbjordan/following{/other_user}", "gists_url": "https://api.github.com/users/vbjordan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vbjordan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vbjordan/subscriptions", "organizations_url": "https://api.github.com/users/vbjordan/orgs", "repos_url": "https://api.github.com/users/vbjordan/repos", "events_url": "https://api.github.com/users/vbjordan/events{/privacy}", "received_events_url": "https://api.github.com/users/vbjordan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-06T00:24:01Z", "updated_at": "2013-09-18T16:38:49Z", "closed_at": "2013-09-06T16:47:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting the following error:\n\n```\nbash > /usr/local/bin/fatalmailbatch\nTraceback (most recent call last):\n  File \"superlance/fatalmailbatch.py\", line 78, in <module>\n    main()\n  File \"superlance/fatalmailbatch.py\", line 74, in main\n    fatal = FatalMailBatch.create_from_cmd_line()\n  File \"/usr/local/lib/python2.7/dist-packages/superlance-0.8-py2.7.egg/superlance/process_state_email_monitor.py\", line 77, in create_from_cmd_line\n    options = cls.get_cmd_line_options()\n File \"/usr/local/lib/python2.7/dist-packages/superlance-0.8-py2.7.egg/superlance/process_state_email_monitor.py\", line 73, in get_cmd_line_options\n    return cls.validate_cmd_line_options(cls.parse_cmd_line_options())\n  File \"/usr/local/lib/python2.7/dist-packages/superlance-0.8-py2.7.egg/superlance/process_state_email_monitor.py\", line 61, in validate_cmd_line_options\n    parser.print_help()\nNameError: global name 'parser' is not defined\n```\n\nfatalmailbatch, crashmailbatch & crashsms are all failing for the same reason from command line & inside supervisord. \n\nRunning python 2.7.3.\n\nGot it to run using global keyword on the parser variable, but I'm not sure how you want to resolve this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/21", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/21/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/21/events", "html_url": "https://github.com/Supervisor/superlance/issues/21", "id": 18620304, "node_id": "MDU6SXNzdWUxODYyMDMwNA==", "number": 21, "title": "memory usage of everything in process tree", "user": {"login": "rgarcia", "id": 72655, "node_id": "MDQ6VXNlcjcyNjU1", "avatar_url": "https://avatars3.githubusercontent.com/u/72655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgarcia", "html_url": "https://github.com/rgarcia", "followers_url": "https://api.github.com/users/rgarcia/followers", "following_url": "https://api.github.com/users/rgarcia/following{/other_user}", "gists_url": "https://api.github.com/users/rgarcia/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgarcia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgarcia/subscriptions", "organizations_url": "https://api.github.com/users/rgarcia/orgs", "repos_url": "https://api.github.com/users/rgarcia/repos", "events_url": "https://api.github.com/users/rgarcia/events{/privacy}", "received_events_url": "https://api.github.com/users/rgarcia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-08-27T17:02:42Z", "updated_at": "2014-08-02T23:57:50Z", "closed_at": "2014-08-02T23:57:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now memmon uses ps, which only gives you the memory usage of the top-level pid in the process tree. This isn't very accurate if you use a run script or the process being monitored spawns child processes.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/20", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/20/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/20/events", "html_url": "https://github.com/Supervisor/superlance/issues/20", "id": 17272121, "node_id": "MDU6SXNzdWUxNzI3MjEyMQ==", "number": 20, "title": "Exit 0 on `--help`", "user": {"login": "asmeurer", "id": 71486, "node_id": "MDQ6VXNlcjcxNDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asmeurer", "html_url": "https://github.com/asmeurer", "followers_url": "https://api.github.com/users/asmeurer/followers", "following_url": "https://api.github.com/users/asmeurer/following{/other_user}", "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}", "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions", "organizations_url": "https://api.github.com/users/asmeurer/orgs", "repos_url": "https://api.github.com/users/asmeurer/repos", "events_url": "https://api.github.com/users/asmeurer/events{/privacy}", "received_events_url": "https://api.github.com/users/asmeurer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-26T16:33:35Z", "updated_at": "2016-09-05T22:14:53Z", "closed_at": "2016-09-05T22:14:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "`cmd --help` should not return a non-zero exit status, for the various commands installed  by superlance. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/19", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/19/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/19/events", "html_url": "https://github.com/Supervisor/superlance/issues/19", "id": 15042515, "node_id": "MDU6SXNzdWUxNTA0MjUxNQ==", "number": 19, "title": "OSError: [Errno 12] Cannot allocate memory", "user": {"login": "andreasofthings", "id": 1290581, "node_id": "MDQ6VXNlcjEyOTA1ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1290581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreasofthings", "html_url": "https://github.com/andreasofthings", "followers_url": "https://api.github.com/users/andreasofthings/followers", "following_url": "https://api.github.com/users/andreasofthings/following{/other_user}", "gists_url": "https://api.github.com/users/andreasofthings/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreasofthings/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreasofthings/subscriptions", "organizations_url": "https://api.github.com/users/andreasofthings/orgs", "repos_url": "https://api.github.com/users/andreasofthings/repos", "events_url": "https://api.github.com/users/andreasofthings/events{/privacy}", "received_events_url": "https://api.github.com/users/andreasofthings/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-06-02T17:25:19Z", "updated_at": "2013-06-02T19:17:02Z", "closed_at": "2013-06-02T19:17:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I was looking for a method to monitor processes (and kill rogue dev processes), I came across memmon from superlance.\n\nI configured it this way:\n\n```\n[group:group]\nprograms = gunicorn,celerydb,celerycam\npriority = 10\n\n[eventlistener:memmon]\ncommand=/.../web/env/bin/memmon -p group=200MB -m <adminemail> \nevents=TICK_60\nserverurl = unix:///tmp/supervisor.sock\nenvironment=SUPERVISOR_SERVER_URL='unix:///tmp/supervisor.sock',SUPERVISOR_USERNAME=user,SUPERVISOR_PASSWORD=123\n```\n\nNow that works fine apparently, but what happens after a while is this:\n\n```\nraceback (most recent call last):\n  File \"/.../web/env/bin/memmon\", line 9, in <module>\n    load_entry_point('superlance==0.7', 'console_scripts', 'memmon')()\n  File \"/.../web/env/local/lib/python2.7/site-packages/superlance/memmon.py\", line 289, in main\n    memmon.runforever()\n  File \"/.../web/env/local/lib/python2.7/site-packages/superlance/memmon.py\", line 139, in runforever\n    data = shell(self.pscommand % pid)\n  File \"/.../web/env/local/lib/python2.7/site-packages/superlance/memmon.py\", line 80, in shell\n    return os.popen(cmd).read()\nOSError: [Errno 12] Cannot allocate memory\n```\n\nIsn't that something memmon should use as a reason to kill off the group? (Or do I get it fundamentally wrong?)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Supervisor/superlance/issues/13", "repository_url": "https://api.github.com/repos/Supervisor/superlance", "labels_url": "https://api.github.com/repos/Supervisor/superlance/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/Supervisor/superlance/issues/13/comments", "events_url": "https://api.github.com/repos/Supervisor/superlance/issues/13/events", "html_url": "https://github.com/Supervisor/superlance/issues/13", "id": 11783895, "node_id": "MDU6SXNzdWUxMTc4Mzg5NQ==", "number": 13, "title": "All crash events after the first are ignored when using redirect_stderr on a crashmail listener", "user": {"login": "timbertson", "id": 14172, "node_id": "MDQ6VXNlcjE0MTcy", "avatar_url": "https://avatars3.githubusercontent.com/u/14172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timbertson", "html_url": "https://github.com/timbertson", "followers_url": "https://api.github.com/users/timbertson/followers", "following_url": "https://api.github.com/users/timbertson/following{/other_user}", "gists_url": "https://api.github.com/users/timbertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/timbertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timbertson/subscriptions", "organizations_url": "https://api.github.com/users/timbertson/orgs", "repos_url": "https://api.github.com/users/timbertson/repos", "events_url": "https://api.github.com/users/timbertson/events{/privacy}", "received_events_url": "https://api.github.com/users/timbertson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-03-07T23:06:12Z", "updated_at": "2013-03-08T00:13:38Z", "closed_at": "2013-03-08T00:13:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a test with the following program config:\n\n```\n[program:test-crashmail]\ncommand = bash -c 'echo \"$(date): TESTING...\"; sleep 5; false'\nautostart = false\nautorestart = false\nredirect_stderr = true\nstdout_logfile = %(here)s/test-crashmail.log\nstartsecs=1\nstartretries = 0\n```\n\nI also have a crashmail listener:\n\n```\n[eventlistener:crashmail]\ncommand=crashmail -a -o '[supervisord] ' -m 'root@localhost'\nevents=PROCESS_STATE\nstdout_logfile = %(here)s/crashmail.log\nredirect_stderr = true\n```\n\nI manually started the `test-crashmail` process (via the web UI) 4 times, leaving plenty of time between each.\n\nIn the debug logs of supervisord below, you can see that crashmail prints \"unexpected exit, mailing\" - supervisor sees this as an \"UNKNOWN\" state, and it never recovers (even after the mail is sent, and it prints \"OKREADY\").\n\nNo further process state events get sent to crashmail, because it's marked as not ready to receive them.\n\n```\n2013-03-08 09:45:43,112 DEBG fd 20 closed, stopped monitoring <POutputDispatcher at 23797200 for <Subprocess at 22786488 with name test-crashmail in state RUNNING> (stdout)>\n2013-03-08 09:45:43,115 INFO exited: test-crashmail (exit status 1; not expected)\n2013-03-08 09:45:43,115 DEBG received SIGCLD indicating a child quit\n2013-03-08 09:45:43,119 DEBG event 23 sent to listener crashmail\n2013-03-08 09:45:43,120 DEBG 'crashmail' stdout output:\nunexpected exit, mailing\n\n2013-03-08 09:45:43,122 DEBG crashmail: BUSY -> UNKNOWN (bad result line 'unexpected exit, mailing')\n2013-03-08 09:45:43,123 DEBG rebuffering event 23 for pool crashmail (bufsize 0)\n\n\n2013-03-08 09:46:11,038 INFO spawned: 'test-crashmail' with pid 10052\n2013-03-08 09:46:11,059 DEBG 'test-crashmail' stdout output:\nFri Mar  8 09:46:11 EST 2013: TESTING...\n\n2013-03-08 09:46:12,061 INFO success: test-crashmail entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2013-03-08 09:46:16,062 DEBG fd 20 closed, stopped monitoring <POutputDispatcher at 23930712 for <Subprocess at 22786488 with name test-crashmail in state RUNNING> (stdout)>\n2013-03-08 09:46:16,065 INFO exited: test-crashmail (exit status 1; not expected)\n2013-03-08 09:46:16,066 DEBG received SIGCLD indicating a child quit\n2013-03-08 09:46:44,192 DEBG 'crashmail' stdout output:\nMailed:\n\nTo: root@localhost\nSubject: [supervisord] : test-crashmail crashed at 2013-03-08 09:45:43,117\n\nProcess test-crashmail in group test-crashmail exited unexpectedly (pid 10042) from state RUNNINGRESULT 2\nOKREADY\n\n\n2013-03-08 09:47:16,550 INFO spawned: 'test-crashmail' with pid 10059\n2013-03-08 09:47:16,569 DEBG 'test-crashmail' stdout output:\nFri Mar  8 09:47:16 EST 2013: TESTING...\n\n2013-03-08 09:47:17,571 INFO success: test-crashmail entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2013-03-08 09:47:21,572 DEBG fd 20 closed, stopped monitoring <POutputDispatcher at 22965856 for <Subprocess at 22786488 with name test-crashmail in state RUNNING> (stdout)>\n2013-03-08 09:47:21,574 INFO exited: test-crashmail (exit status 1; not expected)\n2013-03-08 09:47:21,575 DEBG received SIGCLD indicating a child quit\n\n2013-03-08 09:48:25,456 INFO spawned: 'test-crashmail' with pid 10063\n2013-03-08 09:48:25,472 DEBG 'test-crashmail' stdout output:\nFri Mar  8 09:48:25 EST 2013: TESTING...\n\n2013-03-08 09:48:26,475 INFO success: test-crashmail entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)\n2013-03-08 09:48:30,476 DEBG fd 21 closed, stopped monitoring <POutputDispatcher at 23740856 for <Subprocess at 22786488 with name test-crashmail in state RUNNING> (stdout)>\n2013-03-08 09:48:30,478 INFO exited: test-crashmail (exit status 1; not expected)\n2013-03-08 09:48:30,479 DEBG received SIGCLD indicating a child quit\n```\n\nAfter testing this some more, I realise that it's failing because I used `redirect_stderr` on the crashmail listener. I do this by habit for all of my own programs, since I don't want to have to track two log files. I didn't realise the listener protocol was based on stdout messages, and that redirect_stderr would break it. I guess there are a few ways around this:\n- don't support redirect_stderr for listeners (I'm assuming it's never a good idea, based on what happened here)\n- big red warning in the docs to not use `redirect_stderr` for listeners\n- allow processes to recover from \"UNKNOWN\" state once they resume printing expected messages (e.g \"OKREADY\")\n", "performed_via_github_app": null, "score": 1.0}]}