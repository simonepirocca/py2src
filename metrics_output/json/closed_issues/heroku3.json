{"total_count": 29, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/96", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/96/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/96/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/96", "id": 643832471, "node_id": "MDU6SXNzdWU2NDM4MzI0NzE=", "number": 96, "title": "How do i turn on a worker Dyno?", "user": {"login": "MuhammedKpln", "id": 17166855, "node_id": "MDQ6VXNlcjE3MTY2ODU1", "avatar_url": "https://avatars3.githubusercontent.com/u/17166855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MuhammedKpln", "html_url": "https://github.com/MuhammedKpln", "followers_url": "https://api.github.com/users/MuhammedKpln/followers", "following_url": "https://api.github.com/users/MuhammedKpln/following{/other_user}", "gists_url": "https://api.github.com/users/MuhammedKpln/gists{/gist_id}", "starred_url": "https://api.github.com/users/MuhammedKpln/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MuhammedKpln/subscriptions", "organizations_url": "https://api.github.com/users/MuhammedKpln/orgs", "repos_url": "https://api.github.com/users/MuhammedKpln/repos", "events_url": "https://api.github.com/users/MuhammedKpln/events{/privacy}", "received_events_url": "https://api.github.com/users/MuhammedKpln/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-23T13:15:04Z", "updated_at": "2020-06-24T00:09:50Z", "closed_at": "2020-06-24T00:09:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I turn this Dyno on from heroku3?\n\n![](https://i.imgur.com/KRdEhWm.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/95", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/95/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/95/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/95", "id": 603755157, "node_id": "MDU6SXNzdWU2MDM3NTUxNTc=", "number": 95, "title": "How to disable dynos on my app?", "user": {"login": "ShimmeryHirm", "id": 55350279, "node_id": "MDQ6VXNlcjU1MzUwMjc5", "avatar_url": "https://avatars2.githubusercontent.com/u/55350279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShimmeryHirm", "html_url": "https://github.com/ShimmeryHirm", "followers_url": "https://api.github.com/users/ShimmeryHirm/followers", "following_url": "https://api.github.com/users/ShimmeryHirm/following{/other_user}", "gists_url": "https://api.github.com/users/ShimmeryHirm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShimmeryHirm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShimmeryHirm/subscriptions", "organizations_url": "https://api.github.com/users/ShimmeryHirm/orgs", "repos_url": "https://api.github.com/users/ShimmeryHirm/repos", "events_url": "https://api.github.com/users/ShimmeryHirm/events{/privacy}", "received_events_url": "https://api.github.com/users/ShimmeryHirm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-21T06:55:54Z", "updated_at": "2020-04-22T10:38:35Z", "closed_at": "2020-04-22T10:38:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to disable dynos on my app?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/93", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/93/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/93/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/93", "id": 596912223, "node_id": "MDU6SXNzdWU1OTY5MTIyMjM=", "number": 93, "title": "no support for pg?", "user": {"login": "GoldenMouse", "id": 17915198, "node_id": "MDQ6VXNlcjE3OTE1MTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/17915198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoldenMouse", "html_url": "https://github.com/GoldenMouse", "followers_url": "https://api.github.com/users/GoldenMouse/followers", "following_url": "https://api.github.com/users/GoldenMouse/following{/other_user}", "gists_url": "https://api.github.com/users/GoldenMouse/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoldenMouse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoldenMouse/subscriptions", "organizations_url": "https://api.github.com/users/GoldenMouse/orgs", "repos_url": "https://api.github.com/users/GoldenMouse/repos", "events_url": "https://api.github.com/users/GoldenMouse/events{/privacy}", "received_events_url": "https://api.github.com/users/GoldenMouse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-08T22:58:46Z", "updated_at": "2020-04-09T12:09:15Z", "closed_at": "2020-04-09T04:52:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "It doesn't seem like this library supports any postgres actions. Like `heroku pg:info`. Is that correct?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/92", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/92/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/92/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/92", "id": 552828646, "node_id": "MDU6SXNzdWU1NTI4Mjg2NDY=", "number": 92, "title": "Establishing SSH shell connection to existing/running dyno ( ps:exec functionality)", "user": {"login": "grill05", "id": 56592753, "node_id": "MDQ6VXNlcjU2NTkyNzUz", "avatar_url": "https://avatars0.githubusercontent.com/u/56592753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grill05", "html_url": "https://github.com/grill05", "followers_url": "https://api.github.com/users/grill05/followers", "following_url": "https://api.github.com/users/grill05/following{/other_user}", "gists_url": "https://api.github.com/users/grill05/gists{/gist_id}", "starred_url": "https://api.github.com/users/grill05/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grill05/subscriptions", "organizations_url": "https://api.github.com/users/grill05/orgs", "repos_url": "https://api.github.com/users/grill05/repos", "events_url": "https://api.github.com/users/grill05/events{/privacy}", "received_events_url": "https://api.github.com/users/grill05/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-21T11:51:37Z", "updated_at": "2020-05-05T11:32:47Z", "closed_at": "2020-05-05T11:32:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "the nodejs CLI has a ps:exec feature, such that one can establish a shell session via ssh to a running dyno by executing\r\n\r\n`heroku ps:exec --app=<app-name> --dyno=<dyno-name>\r\n`\r\nNote that this does not create a new one-off dyno, but tunnels a ssh connection to an existing/running dyno. In this case, the dyno does not have to be a one-off dyno, and can be a web/worker type dyno as well.\r\n\r\nThe closest that I can find this functionality in this wrapper is `app.run_command() `, but that seems to create a new one-off dyno\r\n\r\nIs there a way to use this wrapper to establish an SSH (shell) connection to an existing/running dyno ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/85", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/85/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/85/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/85", "id": 517166016, "node_id": "MDU6SXNzdWU1MTcxNjYwMTY=", "number": 85, "title": "Dyno restart doesn't work", "user": {"login": "tfranchi", "id": 25180578, "node_id": "MDQ6VXNlcjI1MTgwNTc4", "avatar_url": "https://avatars1.githubusercontent.com/u/25180578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tfranchi", "html_url": "https://github.com/tfranchi", "followers_url": "https://api.github.com/users/tfranchi/followers", "following_url": "https://api.github.com/users/tfranchi/following{/other_user}", "gists_url": "https://api.github.com/users/tfranchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tfranchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tfranchi/subscriptions", "organizations_url": "https://api.github.com/users/tfranchi/orgs", "repos_url": "https://api.github.com/users/tfranchi/repos", "events_url": "https://api.github.com/users/tfranchi/events{/privacy}", "received_events_url": "https://api.github.com/users/tfranchi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-04T13:51:58Z", "updated_at": "2020-01-22T11:27:33Z", "closed_at": "2020-01-22T11:27:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nthe below Heroku API doesn't work if it is called with dyno id but works fine if it is called with dyno name. The library call this API with dyno id so this functionality doesn't work now.\r\n\r\nDELETE /apps/{app_id_or_name}/dynos/{dyno_id_or_name}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/84", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/84/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/84/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/84", "id": 510118407, "node_id": "MDU6SXNzdWU1MTAxMTg0MDc=", "number": 84, "title": "simplejson dependency is pinned to version 3.3.1", "user": {"login": "MDziwny", "id": 5984170, "node_id": "MDQ6VXNlcjU5ODQxNzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5984170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MDziwny", "html_url": "https://github.com/MDziwny", "followers_url": "https://api.github.com/users/MDziwny/followers", "following_url": "https://api.github.com/users/MDziwny/following{/other_user}", "gists_url": "https://api.github.com/users/MDziwny/gists{/gist_id}", "starred_url": "https://api.github.com/users/MDziwny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MDziwny/subscriptions", "organizations_url": "https://api.github.com/users/MDziwny/orgs", "repos_url": "https://api.github.com/users/MDziwny/repos", "events_url": "https://api.github.com/users/MDziwny/events{/privacy}", "received_events_url": "https://api.github.com/users/MDziwny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-10-21T16:55:56Z", "updated_at": "2019-11-04T13:55:49Z", "closed_at": "2019-11-04T13:55:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the version 3.4.0 of heroku3 and 1 of the requirement is simplejson which is pinned to version `simplejson==3.3.1`.\r\n\r\nIt's problematic because it conflicts with other packages using a higher version number, in my case `simplejson>=3.16.0`.\r\n\r\nWould it be possible to use `simplejson>=3.3.1,<4` ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/78", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/78/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/78/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/78", "id": 418567734, "node_id": "MDU6SXNzdWU0MTg1Njc3MzQ=", "number": 78, "title": "Problems calling run_command_on_app", "user": {"login": "bits01", "id": 10517679, "node_id": "MDQ6VXNlcjEwNTE3Njc5", "avatar_url": "https://avatars2.githubusercontent.com/u/10517679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bits01", "html_url": "https://github.com/bits01", "followers_url": "https://api.github.com/users/bits01/followers", "following_url": "https://api.github.com/users/bits01/following{/other_user}", "gists_url": "https://api.github.com/users/bits01/gists{/gist_id}", "starred_url": "https://api.github.com/users/bits01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bits01/subscriptions", "organizations_url": "https://api.github.com/users/bits01/orgs", "repos_url": "https://api.github.com/users/bits01/repos", "events_url": "https://api.github.com/users/bits01/events{/privacy}", "received_events_url": "https://api.github.com/users/bits01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-07T23:47:47Z", "updated_at": "2020-04-22T22:29:38Z", "closed_at": "2020-04-22T22:29:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "(1) Default `size=1` arg is not a valid value, it seems it needs a string `size='Standard-1X'`, etc.\r\n\r\n(2) The dyno can be very slow to start (took over 40 sec. in one test) and the Rendezvous SSL read times out. The problem seems to be this line:\r\nhttps://github.com/martyzz1/heroku3.py/blob/master/heroku3/rendezvous.py#L40\r\nCan the socket timeout be customized or turned off for `run_command_on_app`?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/74", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/74/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/74/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/74", "id": 396276313, "node_id": "MDU6SXNzdWUzOTYyNzYzMTM=", "number": 74, "title": "KeyError while calling update_appconfig()", "user": {"login": "viseshrp", "id": 11642379, "node_id": "MDQ6VXNlcjExNjQyMzc5", "avatar_url": "https://avatars1.githubusercontent.com/u/11642379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viseshrp", "html_url": "https://github.com/viseshrp", "followers_url": "https://api.github.com/users/viseshrp/followers", "following_url": "https://api.github.com/users/viseshrp/following{/other_user}", "gists_url": "https://api.github.com/users/viseshrp/gists{/gist_id}", "starred_url": "https://api.github.com/users/viseshrp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viseshrp/subscriptions", "organizations_url": "https://api.github.com/users/viseshrp/orgs", "repos_url": "https://api.github.com/users/viseshrp/repos", "events_url": "https://api.github.com/users/viseshrp/events{/privacy}", "received_events_url": "https://api.github.com/users/viseshrp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-06T17:14:07Z", "updated_at": "2019-01-18T23:53:34Z", "closed_at": "2019-01-18T23:53:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> import os\r\n>>> import heroku3\r\n>>> heroku_conn = heroku3.from_key(os.environ['HEROKU_API_KEY'])\r\n>>> updated_config = heroku_conn.update_appconfig(app_id_or_name='visesh', config={'DEBUG':'True'})\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/....../virtualenvs/pyenv/lib/python3.7/site-packages/heroku3/api.py\", line 502, in update_appconfig\r\n    return ConfigVars.new_from_dict(item, h=self)\r\n  File \"/....../virtualenvs/pyenv/lib/python3.7/site-packages/heroku3/models/configvars.py\", line 107, in new_from_dict\r\n    c = cls(d, kwargs.pop('app'), h=h, **kwargs)\r\nKeyError: 'app'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/69", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/69/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/69/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/69", "id": 368663744, "node_id": "MDU6SXNzdWUzNjg2NjM3NDQ=", "number": 69, "title": "Problems with getting output of run_command", "user": {"login": "oTree-org", "id": 5423929, "node_id": "MDQ6VXNlcjU0MjM5Mjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5423929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oTree-org", "html_url": "https://github.com/oTree-org", "followers_url": "https://api.github.com/users/oTree-org/followers", "following_url": "https://api.github.com/users/oTree-org/following{/other_user}", "gists_url": "https://api.github.com/users/oTree-org/gists{/gist_id}", "starred_url": "https://api.github.com/users/oTree-org/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oTree-org/subscriptions", "organizations_url": "https://api.github.com/users/oTree-org/orgs", "repos_url": "https://api.github.com/users/oTree-org/repos", "events_url": "https://api.github.com/users/oTree-org/events{/privacy}", "received_events_url": "https://api.github.com/users/oTree-org/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-10T13:23:21Z", "updated_at": "2018-10-10T16:22:00Z", "closed_at": "2018-10-10T16:22:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to run `run_command` and capture the output in a string. For example:\r\n\r\n```\r\noutput = app.run_command('otree resetdb --noinput')\r\nprint(output)\r\n```\r\nI want output like this, which is what I would see in my terminal if I execute the command \"heroku run\":\r\n\r\n```\r\nC:\\oTree\\tmp5 [master]> heroku run otree resetdb --noinput\r\nRunning otree resetdb --noinput on \u2b22 pure-sands-31684... up, run.2610 (Free)\r\nINFO Database engine: PostgreSQL\r\nINFO Retrieving Existing Tables...\r\nINFO Dropping Tables...\r\nINFO Creating Database 'default'...\r\nOperations to perform:\r\n  Apply all migrations: (none)\r\nSynchronizing apps without migrations:\r\n  Creating tables...\r\n    Creating table otree_chatmessage\r\n    Creating table otree_session\r\n    Creating table otree_participant\r\n    Creating table auth_permission\r\n    Creating table auth_group\r\n    Creating table auth_user\r\n    Creating table django_content_type\r\n    Creating table django_session\r\n    [...]\r\n    Running deferred SQL...\r\nRunning migrations:\r\n  No migrations to apply.\r\nINFO Created new tables and columns.\r\n```\r\n\r\nHowever, in actuality I get an error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-16-b0c13e97288e> in <module>\r\n----> 1 output = app.run_command('otree resetdb --noinput')\r\n      2 print(output)\r\n\r\nc:\\otree\\ve_manager\\lib\\site-packages\\heroku3\\models\\app.py in run_command(self, command, attach, printout, size, env)\r\n    238 \r\n    239         if attach:\r\n--> 240             output = Rendezvous(dyno.attach_url, printout).start()\r\n    241             return output, dyno\r\n    242         else:\r\n\r\nc:\\otree\\ve_manager\\lib\\site-packages\\heroku3\\rendezvous.py in start(self)\r\n     40         ssl_sock.settimeout(20)\r\n     41         ssl_sock.connect((self.hostname, self.port))\r\n---> 42         ssl_sock.write(self.secret)\r\n     43         data = ssl_sock.read()\r\n     44         if not data.startswith(\"rendezvous\"):\r\n\r\n~\\AppData\\Local\\Programs\\Python\\Python37\\lib\\ssl.py in write(self, data)\r\n    925         if self._sslobj is None:\r\n    926             raise ValueError(\"Write on closed or unwrapped SSL socket.\")\r\n--> 927         return self._sslobj.write(data)\r\n    928 \r\n    929     def getpeercert(self, binary_form=False):\r\n\r\nTypeError: a bytes-like object is required, not 'str'\r\n```\r\n\r\nMy first thought was to change the command to a byte string:\r\n\r\n```\r\noutput = app.run_command(b'otree resetdb --noinput')\r\nprint(output)\r\n```\r\nBut that gives me the opposite error:\r\n\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-21-abda4946c33d> in <module>\r\n----> 1 output = app.run_command(b'otree resetdb --noinput')\r\n      2 print(output)\r\n\r\nc:\\otree\\ve_manager\\lib\\site-packages\\heroku3\\models\\app.py in run_command(self, command, attach, printout, size, env)\r\n    230             method='POST',\r\n    231             resource=('apps', self.name, 'dynos'),\r\n--> 232             data=self._h._resource_serialize(payload)\r\n    233         )\r\n    234 \r\n\r\nc:\\otree\\ve_manager\\lib\\site-packages\\heroku3\\api.py in _resource_serialize(o)\r\n     99     def _resource_serialize(o):\r\n    100         \"\"\"Returns JSON serialization of given object.\"\"\"\r\n--> 101         return json.dumps(o)\r\n    102 \r\n    103     @staticmethod\r\n\r\n~\\AppData\\Local\\Programs\\Python\\Python37\\lib\\json\\__init__.py in dumps(obj, skipkeys, ensure_ascii, check_circular, allow_nan, cls, indent, separators, default, sort_keys, **kw)\r\n    229         cls is None and indent is None and separators is None and\r\n    230         default is None and not sort_keys and not kw):\r\n--> 231         return _default_encoder.encode(obj)\r\n    232     if cls is None:\r\n    233         cls = JSONEncoder\r\n\r\n~\\AppData\\Local\\Programs\\Python\\Python37\\lib\\json\\encoder.py in encode(self, o)\r\n    198         # exceptions aren't as detailed.  The list call should be roughly\r\n    199         # equivalent to the PySequence_Fast that ''.join() would do.\r\n--> 200         chunks = self.iterencode(o, _one_shot=True)\r\n    201         if not isinstance(chunks, (list, tuple)):\r\n    202             chunks = list(chunks)\r\n\r\n~\\AppData\\Local\\Programs\\Python\\Python37\\lib\\json\\encoder.py in iterencode(self, o, _one_shot)\r\n    256                 self.key_separator, self.item_separator, self.sort_keys,\r\n    257                 self.skipkeys, _one_shot)\r\n--> 258         return _iterencode(o, 0)\r\n    259 \r\n    260 def _make_iterencode(markers, _default, _encoder, _indent, _floatstr,\r\n\r\n~\\AppData\\Local\\Programs\\Python\\Python37\\lib\\json\\encoder.py in default(self, o)\r\n    178         \"\"\"\r\n    179         print('@@@o is', o)\r\n--> 180         raise TypeError(f'Object of type {o.__class__.__name__} '\r\n    181                         f'is not JSON serializable')\r\n    182 \r\n\r\nTypeError: Object of type bytes is not JSON serializable\r\n```\r\n\r\nI read in someone else's issue that they fixed this by passing `attach=False`, so I tried that, even though it's not clear to me why that is related. Anyway, the error is gone, but all I get is this:\r\n\r\n```\r\n<Dyno 'run.8868 - otree resetdb --noinput'>\r\n```\r\n\r\nI get the same above output even if I pass `printout=True`:\r\n\r\n```\r\noutput = app.run_command('otree resetdb --noinput', attach=False, printout=True)\r\nprint(output)\r\n```\r\n\r\nI tried copying directly a code example from the docs:\r\n\r\n```\r\noutput = app.run_command('fab -l', size=1, printout=True, env={'key': 'val'})\r\nprint(output)\r\n```\r\nI also get an error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nHTTPError                                 Traceback (most recent call last)\r\n<ipython-input-18-4c7e7f2a1781> in <module>\r\n      8 #app.run_command('fab -l', printout=True)\r\n      9 #output = app.run_command_detached('fab -l')\r\n---> 10 output = app.run_command('fab -l', size=1, printout=True, env={'key': 'val'})\r\n     11 print(output)\r\n\r\nc:\\otree\\ve_manager\\lib\\site-packages\\heroku3\\models\\app.py in run_command(self, command, attach, printout, size, env)\r\n    230             method='POST',\r\n    231             resource=('apps', self.name, 'dynos'),\r\n--> 232             data=self._h._resource_serialize(payload)\r\n    233         )\r\n    234 \r\n\r\nc:\\otree\\ve_manager\\lib\\site-packages\\heroku3\\api.py in _http_resource(self, method, resource, params, data, legacy, order_by, limit, valrange, sort)\r\n    175                                    (self._last_request_id, r.status_code, r.content.decode(\"utf-8\")))\r\n    176             http_error.response = r\r\n--> 177             raise http_error\r\n    178 \r\n    179         if r.status_code == 429:\r\n\r\nHTTPError: 59698995-8c24-4251-a70b-121f53e95a38,4df5b8fc-c03a-6ed2-05eb-1e018dc753ce,98f3f4a5-0072-bee3-b78c-c79e7ab24e1c - 422 Client Error: {\"id\":\"invalid_params\",\"message\":\"Unable to process request with specified parameters.\"}\r\n```\r\n\r\nHow can I easily get the output that I would see if running ```heroku run otree resetdb --noinput```?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/68", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/68/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/68/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/68", "id": 355191554, "node_id": "MDU6SXNzdWUzNTUxOTE1NTQ=", "number": 68, "title": "ValueError: Timeout cannot be a boolean value. It must be an int, float or None.", "user": {"login": "nitanmarcel", "id": 41646249, "node_id": "MDQ6VXNlcjQxNjQ2MjQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/41646249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitanmarcel", "html_url": "https://github.com/nitanmarcel", "followers_url": "https://api.github.com/users/nitanmarcel/followers", "following_url": "https://api.github.com/users/nitanmarcel/following{/other_user}", "gists_url": "https://api.github.com/users/nitanmarcel/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitanmarcel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitanmarcel/subscriptions", "organizations_url": "https://api.github.com/users/nitanmarcel/orgs", "repos_url": "https://api.github.com/users/nitanmarcel/repos", "events_url": "https://api.github.com/users/nitanmarcel/events{/privacy}", "received_events_url": "https://api.github.com/users/nitanmarcel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-29T14:35:53Z", "updated_at": "2018-08-29T15:09:05Z", "closed_at": "2018-08-29T15:09:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "> Hi! I'm using the next code to get the log from my heroku app:\r\n> \r\n> ```\r\n> app = heroku_conn.apps()['aurorabugsbunny']\r\n> log = app.get_log(lines=100)\r\n> ```\r\n> But I ended up with this error when I try to use the log variable:\r\n> \r\n> > File \"/app/.heroku/python/lib/python3.6/site-packages/telegram/ext/dispatcher.py\", line 279, in process_update\r\n> \r\n> 2018-08-29T14:31:38.120073+00:00 app[worker.1]:     handler.handle_update(update, self)\r\n> \r\n> 2018-08-29T14:31:38.120075+00:00 app[worker.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/telegram/ext/commandhandler.py\", line 173, in handle_update\r\n> \r\n> 2018-08-29T14:31:38.120077+00:00 app[worker.1]:     return self.callback(dispatcher.bot, update, **optional_args)\r\n> \r\n> 2018-08-29T14:31:38.120079+00:00 app[worker.1]:   File \"/app/bot/remote.py\", line 26, in remote\r\n> \r\n> 2018-08-29T14:31:38.120080+00:00 app[worker.1]:     log = app.get_log(dyno='worker.1', lines=100, source='aurorabugsbunny')\r\n> \r\n> 2018-08-29T14:31:38.120082+00:00 app[worker.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/heroku3/models/app.py\", line 467, in get_log\r\n> \r\n> 2018-08-29T14:31:38.120084+00:00 app[worker.1]:     return logger.get(timeout=timeout)\r\n> \r\n> 2018-08-29T14:31:38.120086+00:00 app[worker.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/heroku3/models/logsession.py\", line 25, in get\r\n> \r\n> 2018-08-29T14:31:38.120088+00:00 app[worker.1]:     r = requests.get(self.logplex_url, verify=False, stream=True, timeout=timeout)\r\n> \r\n> 2018-08-29T14:31:38.120090+00:00 app[worker.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/requests/api.py\", line 72, in get\r\n> \r\n> 2018-08-29T14:31:38.120091+00:00 app[worker.1]:     return request('get', url, params=params, **kwargs)\r\n> \r\n> 2018-08-29T14:31:38.120093+00:00 app[worker.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/requests/api.py\", line 58, in request\r\n> \r\n> 2018-08-29T14:31:38.120095+00:00 app[worker.1]:     return session.request(method=method, url=url, **kwargs)\r\n> \r\n> 2018-08-29T14:31:38.120096+00:00 app[worker.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/requests/sessions.py\", line 512, in request\r\n> \r\n> 2018-08-29T14:31:38.120098+00:00 app[worker.1]:     resp = self.send(prep, **send_kwargs)\r\n> \r\n> 2018-08-29T14:31:38.120100+00:00 app[worker.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/requests/sessions.py\", line 622, in send\r\n> \r\n> 2018-08-29T14:31:38.120101+00:00 app[worker.1]:     r = adapter.send(request, **kwargs)\r\n> \r\n> 2018-08-29T14:31:38.120103+00:00 app[worker.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/requests/adapters.py\", line 431, in send\r\n> \r\n> 2018-08-29T14:31:38.120105+00:00 app[worker.1]:     timeout = TimeoutSauce(connect=timeout, read=timeout)\r\n> \r\n> 2018-08-29T14:31:38.120106+00:00 app[worker.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/urllib3/util/timeout.py\", line 94, in __init__\r\n> \r\n> 2018-08-29T14:31:38.120108+00:00 app[worker.1]:     self._connect = self._validate_timeout(connect, 'connect')\r\n> \r\n> 2018-08-29T14:31:38.120110+00:00 app[worker.1]:   File \"/app/.heroku/python/lib/python3.6/site-packages/urllib3/util/timeout.py\", line 121, in _validate_timeout\r\n> \r\n> 2018-08-29T14:31:38.120111+00:00 app[worker.1]:     raise ValueError(\"Timeout cannot be a boolean value. It must \"\r\n> \r\n> 2018-08-29T14:31:38.120120+00:00 app[worker.1]: ValueError: Timeout cannot be a boolean value. It must be an int, float or None.\r\n> \r\n> ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/62", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/62/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/62/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/62", "id": 318996456, "node_id": "MDU6SXNzdWUzMTg5OTY0NTY=", "number": 62, "title": "python-dateutil version restriction causing dependency conflicts", "user": {"login": "SimKennedy", "id": 9877685, "node_id": "MDQ6VXNlcjk4Nzc2ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9877685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimKennedy", "html_url": "https://github.com/SimKennedy", "followers_url": "https://api.github.com/users/SimKennedy/followers", "following_url": "https://api.github.com/users/SimKennedy/following{/other_user}", "gists_url": "https://api.github.com/users/SimKennedy/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimKennedy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimKennedy/subscriptions", "organizations_url": "https://api.github.com/users/SimKennedy/orgs", "repos_url": "https://api.github.com/users/SimKennedy/repos", "events_url": "https://api.github.com/users/SimKennedy/events{/privacy}", "received_events_url": "https://api.github.com/users/SimKennedy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-30T18:55:26Z", "updated_at": "2018-10-14T19:33:08Z", "closed_at": "2018-10-14T19:33:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nIs there a reason heroku3 needs the exact version for python-dateutil==2.6.0?\r\nWe get an error when installing after other packages which install a later version. \r\n\r\n```\r\nerror: python-dateutil 2.7.2 is installed but python-dateutil==2.6.0 is required by set(['heroku3'])\r\n```\r\nI imagine both simplejson and python-dateutil will maintain backward compatibility, so could the _install-requires_ be changed to this?\r\n\r\n```\r\nrequired = [\r\n    'requests>=1.2.3',\r\n    'simplejson>=3.3.1',\r\n    'python-dateutil>=2.6.0',\r\n]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/57", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/57/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/57/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/57", "id": 280846421, "node_id": "MDU6SXNzdWUyODA4NDY0MjE=", "number": 57, "title": "Can't get the domain info", "user": {"login": "Alir3z4", "id": 591113, "node_id": "MDQ6VXNlcjU5MTExMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/591113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alir3z4", "html_url": "https://github.com/Alir3z4", "followers_url": "https://api.github.com/users/Alir3z4/followers", "following_url": "https://api.github.com/users/Alir3z4/following{/other_user}", "gists_url": "https://api.github.com/users/Alir3z4/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alir3z4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alir3z4/subscriptions", "organizations_url": "https://api.github.com/users/Alir3z4/orgs", "repos_url": "https://api.github.com/users/Alir3z4/repos", "events_url": "https://api.github.com/users/Alir3z4/events{/privacy}", "received_events_url": "https://api.github.com/users/Alir3z4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-10T21:25:13Z", "updated_at": "2018-01-09T13:42:57Z", "closed_at": "2018-01-09T13:42:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**heroku3.py version: v3.2.2**\r\n\r\nHow can I get the the hostname/domain info  ?\r\n\r\nAs Heroku Official Docs says https://devcenter.heroku.com/articles/platform-api-reference#domain-info the request should be constructed as:\r\n```\r\n$ curl -n https://api.heroku.com/apps/$APP_ID_OR_NAME/domains/$DOMAIN_ID_OR_HOSTNAME \\\r\n  -H \"Accept: application/vnd.heroku+json; version=3\"\r\n```\r\n\r\nOn heroku3.py I only find [App.domain](https://github.com/martyzz1/heroku3.py/blob/master/heroku3/models/app.py#L162) which accepts a `**kwargs` and even though I pass `hostname=somedomain.com` to it, it just returns the list of the domains on the app.\r\n\r\nfor instance:\r\n\r\n```python\r\n\r\nIn [9]: app.domains()\r\nOut[9]: [<domain '*.draft.gonevis.com'>, <domain 'draft.gonevis.com'>, <domain 'gonevis-draft.herokuapp.com'>]\r\n\r\n# When passing hostname\r\nIn [25]: app.domains(hostname='helooooo')\r\nOut[25]: [<domain 'helooooo'>, <domain 'helooooo'>, <domain 'helooooo'>]\r\n\r\n# When passing a valid existing domain\r\nIn [26]: app.domains(hostname='draft.gonevis.com')\r\nOut[26]: [<domain 'draft.gonevis.com'>, <domain 'draft.gonevis.com'>, <domain 'draft.gonevis.com'>]\r\n```\r\n\r\nThat behavior seems to be bug.\r\nOr am I doing something wrong ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/53", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/53/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/53/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/53", "id": 270829533, "node_id": "MDU6SXNzdWUyNzA4Mjk1MzM=", "number": 53, "title": "Wrong parameter passed to `ConfigVars.new_from_dict()` in `ConfigVars.update()`", "user": {"login": "cans", "id": 582326, "node_id": "MDQ6VXNlcjU4MjMyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/582326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cans", "html_url": "https://github.com/cans", "followers_url": "https://api.github.com/users/cans/followers", "following_url": "https://api.github.com/users/cans/following{/other_user}", "gists_url": "https://api.github.com/users/cans/gists{/gist_id}", "starred_url": "https://api.github.com/users/cans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cans/subscriptions", "organizations_url": "https://api.github.com/users/cans/orgs", "repos_url": "https://api.github.com/users/cans/repos", "events_url": "https://api.github.com/users/cans/events{/privacy}", "received_events_url": "https://api.github.com/users/cans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-02T22:35:03Z", "updated_at": "2018-01-09T13:42:40Z", "closed_at": "2018-01-09T13:42:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the method `ConfigVars.update()` a new `ConfigVars` instance is built, with the values returned by the heroku API, and returned to the user. Yet that instance is not valid as the [`h` keyword argument](https://github.com/martyzz1/heroku3.py/blob/master/heroku3/models/configvars.py#L67) receives a `ConfigVars` instance instead of the expected `Heroku` instance (passed `self` instead of `self._h`).\r\n\r\nGiven that:\r\n- this issue has not been reported before (meaning most likely no one ever used the return value of that method in its code);\r\n- this class tries very hard to look like a `dict`;\r\n- the `dict.update()` method has a semantic that mutates the dictionary state in place and returns None (as all function / method mutating built-in types do in Python);\r\n\r\nI would suggest that the API be modified as follows: the state of the `ConfigVars` instance should mutate it's internal dictionary (`self.data`) upon successful response from Heroku's API, and the method returns None.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/49", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/49/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/49/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/49", "id": 269330877, "node_id": "MDU6SXNzdWUyNjkzMzA4Nzc=", "number": 49, "title": "Missing dependency on future", "user": {"login": "cans", "id": 582326, "node_id": "MDQ6VXNlcjU4MjMyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/582326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cans", "html_url": "https://github.com/cans", "followers_url": "https://api.github.com/users/cans/followers", "following_url": "https://api.github.com/users/cans/following{/other_user}", "gists_url": "https://api.github.com/users/cans/gists{/gist_id}", "starred_url": "https://api.github.com/users/cans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cans/subscriptions", "organizations_url": "https://api.github.com/users/cans/orgs", "repos_url": "https://api.github.com/users/cans/repos", "events_url": "https://api.github.com/users/cans/events{/privacy}", "received_events_url": "https://api.github.com/users/cans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-28T16:33:24Z", "updated_at": "2018-10-14T20:00:13Z", "closed_at": "2018-10-14T20:00:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since PR #47 has been merged, heroku3 depends on the [future](https://pypi.python.org/pypi/future) package, yet the dependency is not declared in the `requirements.txt` file.\r\n\r\nInstead of pulling a new dependency, I would have used plain Python 2 and 3 compatible code. Not trying to start anything, just would like to have the most future proof code possible. The following construct works as far as I could remember.\r\n\r\n```python\r\ntry:\r\n     # raise\r\nexcept <ExceptionClass>:\r\n    raise\r\n```\r\nOutput may not be 100% similar depending on the Python version but it is way more future proof (in some Python version the stack trace may get lost).\r\n\r\n```shell\r\ncans@workstation:~/src/gitco/ansible/heroku3.py$ python3\r\nPython 3.6.3 (default, Oct  3 2017, 21:45:48) \r\n[GCC 7.2.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> try:\r\n...     raise Exception('message')\r\n... except Exception:\r\n...     raise\r\n... \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\nException: message\r\n>>> \r\n\r\ncans@workstation:~$ python3.5\r\nPython 3.5.3 (default, Jan 19 2017, 14:11:04) \r\n[GCC 6.3.0 20170118] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> try:\r\n...     raise Exception('message')\r\n... except Exception:\r\n...     raise\r\n... \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\nException: message\r\n>>> \r\n\r\ncans@workstation:~/src/gitco/ansible/heroku3.py$ python2\r\nPython 2.7.14 (default, Sep 23 2017, 22:06:14) \r\n[GCC 7.2.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> try:\r\n...     raise Exception('message')\r\n... except Exception:\r\n...     raise\r\n... \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\nException: message\r\n>>> \r\n```\r\nSorry don't have any other python version availble. Don't remember if 2.6 supports this but it [apparently should](https://docs.python.org/2.6/reference/simple_stmts.html#raise). Can provide a poor man's fix (add missing requirement) or implement the solution above. But I don't feel very confortable with that since this package includes not tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/44", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/44/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/44/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/44", "id": 255151017, "node_id": "MDU6SXNzdWUyNTUxNTEwMTc=", "number": 44, "title": "Running multiple one-off-dyno commands", "user": {"login": "yltang52", "id": 6300280, "node_id": "MDQ6VXNlcjYzMDAyODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6300280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yltang52", "html_url": "https://github.com/yltang52", "followers_url": "https://api.github.com/users/yltang52/followers", "following_url": "https://api.github.com/users/yltang52/following{/other_user}", "gists_url": "https://api.github.com/users/yltang52/gists{/gist_id}", "starred_url": "https://api.github.com/users/yltang52/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yltang52/subscriptions", "organizations_url": "https://api.github.com/users/yltang52/orgs", "repos_url": "https://api.github.com/users/yltang52/repos", "events_url": "https://api.github.com/users/yltang52/events{/privacy}", "received_events_url": "https://api.github.com/users/yltang52/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-05T03:30:44Z", "updated_at": "2018-10-31T14:52:02Z", "closed_at": "2018-10-31T14:52:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to run two (or more) consecutive jobs on one-off dynos using heroku3 as follows:\r\n\r\n    import heroku3\r\n\r\n    heroku_conn = heroku3.from_key(apiKey)\r\n    app = heroku_conn.apps()[appName]\r\n    app.run_command_detached(command1)\r\n\r\n    heroku_conn = heroku3.from_key(apiKey)\r\n    app = heroku_conn.apps()[appName]\r\n    app.run_command_detached(command2)\r\n\r\nQuestion:\r\nSupposing only one one-off dyno is allowed (for the free option) on Heroku, which of the followings would happen?\r\n\r\n    1. Run both jobs *concurrently* on the same dyno\r\n    2. Run the first one, and then the second one after the first finishes\r\n    3. Run the first one, but not the second one.\r\n    4. Overall, what's the better way of running *consecutive* jobs using one-off dynos?\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/39", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/39/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/39/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/39", "id": 237550832, "node_id": "MDU6SXNzdWUyMzc1NTA4MzI=", "number": 39, "title": "Tiny spelling", "user": {"login": "drummonds", "id": 3843291, "node_id": "MDQ6VXNlcjM4NDMyOTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3843291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drummonds", "html_url": "https://github.com/drummonds", "followers_url": "https://api.github.com/users/drummonds/followers", "following_url": "https://api.github.com/users/drummonds/following{/other_user}", "gists_url": "https://api.github.com/users/drummonds/gists{/gist_id}", "starred_url": "https://api.github.com/users/drummonds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drummonds/subscriptions", "organizations_url": "https://api.github.com/users/drummonds/orgs", "repos_url": "https://api.github.com/users/drummonds/repos", "events_url": "https://api.github.com/users/drummonds/events{/privacy}", "received_events_url": "https://api.github.com/users/drummonds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-21T14:19:44Z", "updated_at": "2018-10-14T19:24:53Z", "closed_at": "2018-10-14T19:24:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the examples replace maintence with maintenance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/37", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/37/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/37/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/37", "id": 233596054, "node_id": "MDU6SXNzdWUyMzM1OTYwNTQ=", "number": 37, "title": "create_app may throw unexpectedly", "user": {"login": "atzannes", "id": 1581907, "node_id": "MDQ6VXNlcjE1ODE5MDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1581907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atzannes", "html_url": "https://github.com/atzannes", "followers_url": "https://api.github.com/users/atzannes/followers", "following_url": "https://api.github.com/users/atzannes/following{/other_user}", "gists_url": "https://api.github.com/users/atzannes/gists{/gist_id}", "starred_url": "https://api.github.com/users/atzannes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atzannes/subscriptions", "organizations_url": "https://api.github.com/users/atzannes/orgs", "repos_url": "https://api.github.com/users/atzannes/repos", "events_url": "https://api.github.com/users/atzannes/events{/privacy}", "received_events_url": "https://api.github.com/users/atzannes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-05T13:57:20Z", "updated_at": "2017-06-06T15:09:09Z", "closed_at": "2017-06-06T15:09:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/martyzz1/heroku3.py/blob/7349e31a2255a4868b42992e604d0bcfd9006fbf/heroku3/api.py#L299 : `app = self.app(name)` may throw unexpectedly: `requests.exceptions.HTTPError: 403 Client Error: Forbidden for url: xxx`\r\n\r\nIn the except clause above, we are trying to recover from an exception when the app name requested is already in use. The problem occurs when the app name requested is in use by a different heroku user. App names are required to be unique across users, presumably because the app URL needs to be unique. In that scenario, an exception `422 Client Error: {\"id\":\"invalid_params\",\"message\":\"Name is already taken\"}` is thrown, converted into a warning and we attempt to return a reference to the app. This works if the app is owned by the same user that is trying to create the new app with the existing name, but fails otherwise, in which case, the error/exception is a bit cryptic.\r\n\r\nA solution could be:\r\n```\r\n        except HTTPError as e:\r\n            saved_exc = (sys.exc_type, sys.exc_value, sys.exc_traceback)\r\n            if \"Name is already taken\" in str(e):\r\n                try:\r\n                    app = self.app(name)\r\n                    print(\"Warning - {0:s}\".format(e))\r\n                except:\r\n                    raise saved_exc[0], saved_exc[1], saved_exc[2]\r\n            else:\r\n                raise saved_exc[0], saved_exc[1], saved_exc[2]\r\n```\r\nUsing `raise saved_exc[0], saved_exc[1], saved_exc[2]` instead of `raise e` re-raises the exception as if it had not been handled, that way the stack-trace is not modified and it likely results in it being more informative. Saving the exception values in `saved_exc` is necessary; we cannot simply use `raise` without an argument, because if the line `app = self.app(name)` raises and we subsequently use `raise` without an argument, we will re-raise that inner exception.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/36", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/36/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/36/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/36", "id": 230740869, "node_id": "MDU6SXNzdWUyMzA3NDA4Njk=", "number": 36, "title": "App.add_domain() returns unnecessary 422", "user": {"login": "mkuchen", "id": 3187660, "node_id": "MDQ6VXNlcjMxODc2NjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3187660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkuchen", "html_url": "https://github.com/mkuchen", "followers_url": "https://api.github.com/users/mkuchen/followers", "following_url": "https://api.github.com/users/mkuchen/following{/other_user}", "gists_url": "https://api.github.com/users/mkuchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkuchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkuchen/subscriptions", "organizations_url": "https://api.github.com/users/mkuchen/orgs", "repos_url": "https://api.github.com/users/mkuchen/repos", "events_url": "https://api.github.com/users/mkuchen/events{/privacy}", "received_events_url": "https://api.github.com/users/mkuchen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-23T15:04:17Z", "updated_at": "2017-05-23T18:20:35Z", "closed_at": "2017-05-23T18:20:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "This corresponds to a support ticket I've opened.\r\n\r\nUsing the latest pypi release for this package (3.3.0) I run the following:\r\n\r\n```\r\nimport heroku3\r\nfrom django.conf import settings\r\n\r\nheroku_conn = heroku3.from_key(settings.HEROKU_KEY)\r\n\r\n# returns error:\r\n# <really-long-uuid-here> 422 Client Error: {\"id\":\"invalid_params\",\"message\":\"Domain already added to this app.\"}\r\nheroku_conn.apps()['my-app'].add_domain('somedomainthatdefinitelydoesntexistonthisappyet.com')\r\n```\r\n\r\nIt would appear as though it's submitting the domain addition request twice, because the domain is added to the app as specified. So the first request adds the domain and returns a 200-level status, but the duplicate request returns 400 and raises an error within my app logic. Unfortunately I can't just catch and ignore this error because in the event an actual duplicate domain is submitted my app logic needs to handle the error gracefully.\r\n\r\nSee [App.add_domain](https://github.com/martyzz1/heroku3.py/blob/master/heroku3/models/app.py#L168)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/34", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/34/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/34/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/34", "id": 223457398, "node_id": "MDU6SXNzdWUyMjM0NTczOTg=", "number": 34, "title": "Broken error handling", "user": {"login": "siddhu208", "id": 4732523, "node_id": "MDQ6VXNlcjQ3MzI1MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4732523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siddhu208", "html_url": "https://github.com/siddhu208", "followers_url": "https://api.github.com/users/siddhu208/followers", "following_url": "https://api.github.com/users/siddhu208/following{/other_user}", "gists_url": "https://api.github.com/users/siddhu208/gists{/gist_id}", "starred_url": "https://api.github.com/users/siddhu208/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siddhu208/subscriptions", "organizations_url": "https://api.github.com/users/siddhu208/orgs", "repos_url": "https://api.github.com/users/siddhu208/repos", "events_url": "https://api.github.com/users/siddhu208/events{/privacy}", "received_events_url": "https://api.github.com/users/siddhu208/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "martyzz1", "id": 1601355, "node_id": "MDQ6VXNlcjE2MDEzNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1601355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martyzz1", "html_url": "https://github.com/martyzz1", "followers_url": "https://api.github.com/users/martyzz1/followers", "following_url": "https://api.github.com/users/martyzz1/following{/other_user}", "gists_url": "https://api.github.com/users/martyzz1/gists{/gist_id}", "starred_url": "https://api.github.com/users/martyzz1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martyzz1/subscriptions", "organizations_url": "https://api.github.com/users/martyzz1/orgs", "repos_url": "https://api.github.com/users/martyzz1/repos", "events_url": "https://api.github.com/users/martyzz1/events{/privacy}", "received_events_url": "https://api.github.com/users/martyzz1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martyzz1", "id": 1601355, "node_id": "MDQ6VXNlcjE2MDEzNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1601355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martyzz1", "html_url": "https://github.com/martyzz1", "followers_url": "https://api.github.com/users/martyzz1/followers", "following_url": "https://api.github.com/users/martyzz1/following{/other_user}", "gists_url": "https://api.github.com/users/martyzz1/gists{/gist_id}", "starred_url": "https://api.github.com/users/martyzz1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martyzz1/subscriptions", "organizations_url": "https://api.github.com/users/martyzz1/orgs", "repos_url": "https://api.github.com/users/martyzz1/repos", "events_url": "https://api.github.com/users/martyzz1/events{/privacy}", "received_events_url": "https://api.github.com/users/martyzz1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-04-21T18:13:12Z", "updated_at": "2018-10-31T14:49:49Z", "closed_at": "2018-10-31T14:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error handling is broken. For example,\r\n\r\n>>> a = heroku_conn.create_app(name='test-app-s1', organization='XXXX')\r\nTraceback (most recent call last):\r\n  File \"/private/tmp/venv3/lib/python3.6/site-packages/heroku3/api.py\", line 291, in create_app\r\n    data=self._resource_serialize(payload)\r\n  File \"/private/tmp/venv3/lib/python3.6/site-packages/heroku3/api.py\", line 177, in _http_resource\r\n    raise http_error\r\nrequests.exceptions.HTTPError: 7ec843b4-6ae3-47fa-512b-6526297d401c,fb365328-849f-5397-fe1e-2a7540ec7d7d,0659f6a0-7a06-2848-acbc-4cc0ce9c7207 - 422 Client Error: {\"id\":\"invalid_params\",\"message\":\"Name is already taken\"}\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/private/tmp/venv3/lib/python3.6/site-packages/heroku3/api.py\", line 298, in create_app\r\n    print(\"Warning - {0:s}\".format(e))\r\nTypeError: unsupported format string passed to HTTPError.__format__\r\n\r\nIn heroku3/api.py, use str(e) in print(\"Warning - {0:s}\".format(e))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/32", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/32/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/32/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/32", "id": 217025154, "node_id": "MDU6SXNzdWUyMTcwMjUxNTQ=", "number": 32, "title": "Start and top the one-off dyno", "user": {"login": "yltang52", "id": 6300280, "node_id": "MDQ6VXNlcjYzMDAyODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6300280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yltang52", "html_url": "https://github.com/yltang52", "followers_url": "https://api.github.com/users/yltang52/followers", "following_url": "https://api.github.com/users/yltang52/following{/other_user}", "gists_url": "https://api.github.com/users/yltang52/gists{/gist_id}", "starred_url": "https://api.github.com/users/yltang52/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yltang52/subscriptions", "organizations_url": "https://api.github.com/users/yltang52/orgs", "repos_url": "https://api.github.com/users/yltang52/repos", "events_url": "https://api.github.com/users/yltang52/events{/privacy}", "received_events_url": "https://api.github.com/users/yltang52/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-26T03:54:39Z", "updated_at": "2018-10-31T14:44:21Z", "closed_at": "2018-10-31T14:44:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using heroku3 to start a one-off dyno and then stop it when the job is done.\r\n\r\n    # Start a one-off dyno\r\n    apiKey = 'xxxx...'\r\n    appName = 'yyyy...'\r\n    heroku_conn = heroku3.from_key(apiKey)\r\n    app = heroku_conn.apps()[appName]\r\n    if 'run.1' in app.dynos:\r\n        print('Another one-off dyno is running.')\r\n    else:\r\n        app.run_command_detached('python -m theModuleToRun')\\\r\n\r\n    \"theModuleToRun.py\":\r\n    # Perform some job\r\n    # ...\r\n    # Stop the one-off dyno when the job is done\r\n    apiKey = 'xxxx...'\r\n    appName = 'yyyy...'\r\n    heroku_conn = heroku3.from_key(apiKey)\r\n    app = heroku_conn.apps()[appName]\r\n    if 'run.1' in app.dynos:\r\n        app.dynos['run.1'].kill()\r\n\r\nMy question:\r\nIs the code to start and stop the dyno correct? Is the name of the one-off dyno always `run.1`, given that there is only one one-off dyno running at the same time?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/29", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/29/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/29/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/29", "id": 209763286, "node_id": "MDU6SXNzdWUyMDk3NjMyODY=", "number": 29, "title": "Make new Release!!!!!! and stop forgetting and getting Sidetracked!", "user": {"login": "martyzz1", "id": 1601355, "node_id": "MDQ6VXNlcjE2MDEzNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1601355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martyzz1", "html_url": "https://github.com/martyzz1", "followers_url": "https://api.github.com/users/martyzz1/followers", "following_url": "https://api.github.com/users/martyzz1/following{/other_user}", "gists_url": "https://api.github.com/users/martyzz1/gists{/gist_id}", "starred_url": "https://api.github.com/users/martyzz1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martyzz1/subscriptions", "organizations_url": "https://api.github.com/users/martyzz1/orgs", "repos_url": "https://api.github.com/users/martyzz1/repos", "events_url": "https://api.github.com/users/martyzz1/events{/privacy}", "received_events_url": "https://api.github.com/users/martyzz1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-23T13:38:35Z", "updated_at": "2017-03-01T22:33:51Z", "closed_at": "2017-03-01T22:33:51Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Note to self......", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/28", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/28/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/28/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/28", "id": 209645514, "node_id": "MDU6SXNzdWUyMDk2NDU1MTQ=", "number": 28, "title": "Issues when listing objects + misc issues", "user": {"login": "gregsadetsky", "id": 1017304, "node_id": "MDQ6VXNlcjEwMTczMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1017304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregsadetsky", "html_url": "https://github.com/gregsadetsky", "followers_url": "https://api.github.com/users/gregsadetsky/followers", "following_url": "https://api.github.com/users/gregsadetsky/following{/other_user}", "gists_url": "https://api.github.com/users/gregsadetsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregsadetsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregsadetsky/subscriptions", "organizations_url": "https://api.github.com/users/gregsadetsky/orgs", "repos_url": "https://api.github.com/users/gregsadetsky/repos", "events_url": "https://api.github.com/users/gregsadetsky/events{/privacy}", "received_events_url": "https://api.github.com/users/gregsadetsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-23T02:33:10Z", "updated_at": "2017-02-24T23:58:54Z", "closed_at": "2017-02-24T23:58:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey there,\r\n\r\nThanks for the great wrapper! I stumbled upon a few things while using it to automate Heroku:\r\n\r\n- It would be useful if the `App` object had an `organization` object with `id` and `name` just as the API [returns](https://devcenter.heroku.com/articles/platform-api-reference#app-attributes).\r\n\r\n- When the list of addons is empty, `app.addons()` should be `False` to enable `if not app.addons()` checks. Right now, an empty addon list is evaluated as `True`.\r\n\r\n    Generally speaking, `KeyedListResource` should probably implement `__len__`\r\n\r\n- Passing `name` to `app.addons()` does not work to filter / find a specific addon -- the `name` keyword is ignored.\r\n\r\n    i.e., `app.addons(name='bleh')` will return the full list of addons\r\n\r\nThank you!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/26", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/26/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/26/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/26", "id": 200276144, "node_id": "MDU6SXNzdWUyMDAyNzYxNDQ=", "number": 26, "title": "Exception with Python 2.7.12", "user": {"login": "nickbaum", "id": 321587, "node_id": "MDQ6VXNlcjMyMTU4Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/321587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickbaum", "html_url": "https://github.com/nickbaum", "followers_url": "https://api.github.com/users/nickbaum/followers", "following_url": "https://api.github.com/users/nickbaum/following{/other_user}", "gists_url": "https://api.github.com/users/nickbaum/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickbaum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickbaum/subscriptions", "organizations_url": "https://api.github.com/users/nickbaum/orgs", "repos_url": "https://api.github.com/users/nickbaum/repos", "events_url": "https://api.github.com/users/nickbaum/events{/privacy}", "received_events_url": "https://api.github.com/users/nickbaum/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-01-12T04:30:14Z", "updated_at": "2017-03-01T22:49:55Z", "closed_at": "2017-03-01T22:35:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems like the version of RendezVous included isn't Python 2.X compatible:\r\n\r\n\"\"\"\r\nFile \"heroku3/__init__.py\", line 27, in <module>\r\n    from .core import from_key\r\n  File \"heroku3/core.py\", line 10, in <module>\r\n    from .api import Heroku\r\n  File \"heroku3/api.py\", line 13, in <module>\r\n    from .models.app import App\r\n  File \"heroku3/models/app.py\", line 2, in <module>\r\n    from ..rendezvous import Rendezvous\r\n  File \"heroku3/rendezvous.py\", line 6, in <module>\r\n    from urllib.parse import urlparse, uses_netloc\r\nImportError: No module named parse\r\n\"\"\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/21", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/21/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/21/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/21", "id": 189412290, "node_id": "MDU6SXNzdWUxODk0MTIyOTA=", "number": 21, "title": "Wrong \"python-dateutil\" version", "user": {"login": "yltang52", "id": 6300280, "node_id": "MDQ6VXNlcjYzMDAyODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6300280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yltang52", "html_url": "https://github.com/yltang52", "followers_url": "https://api.github.com/users/yltang52/followers", "following_url": "https://api.github.com/users/yltang52/following{/other_user}", "gists_url": "https://api.github.com/users/yltang52/gists{/gist_id}", "starred_url": "https://api.github.com/users/yltang52/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yltang52/subscriptions", "organizations_url": "https://api.github.com/users/yltang52/orgs", "repos_url": "https://api.github.com/users/yltang52/repos", "events_url": "https://api.github.com/users/yltang52/events{/privacy}", "received_events_url": "https://api.github.com/users/yltang52/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-15T14:52:18Z", "updated_at": "2016-11-15T16:00:04Z", "closed_at": "2016-11-15T16:00:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently `pip heroku3` will automatically install the following:\r\n\r\n    heroku3==3.2.0\r\n    python-dateutil==1.5\r\n    requests==2.12.0\r\n    simplejson==3.3.1\r\n\r\nThe latest version of `python-dateutil` is 2.6.0, and version 1.5 will cause run time errors.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/20", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/20/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/20/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/20", "id": 188688426, "node_id": "MDU6SXNzdWUxODg2ODg0MjY=", "number": 20, "title": "Detect if worker-scaling is done", "user": {"login": "yltang52", "id": 6300280, "node_id": "MDQ6VXNlcjYzMDAyODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6300280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yltang52", "html_url": "https://github.com/yltang52", "followers_url": "https://api.github.com/users/yltang52/followers", "following_url": "https://api.github.com/users/yltang52/following{/other_user}", "gists_url": "https://api.github.com/users/yltang52/gists{/gist_id}", "starred_url": "https://api.github.com/users/yltang52/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yltang52/subscriptions", "organizations_url": "https://api.github.com/users/yltang52/orgs", "repos_url": "https://api.github.com/users/yltang52/repos", "events_url": "https://api.github.com/users/yltang52/events{/privacy}", "received_events_url": "https://api.github.com/users/yltang52/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-11-11T05:33:49Z", "updated_at": "2017-03-01T22:36:16Z", "closed_at": "2017-03-01T22:36:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to scale up a worker to handle a background job, and when the job is done, scale down the worker, as follows: \r\n\r\n    apiKey = '...'\r\n    appName = '...'\r\n\r\n    # Start a worker\r\n    heroku_conn = heroku3.from_key(apiKey)\r\n    app = heroku_conn.apps()[appName]\r\n    app.process_formation()['worker'].scale(1)\r\n\r\n    # Enqueue the background job\r\n    # time.sleep(10) --> How do I know if the worker is ready?\r\n    q = Queue(connection=conn)\r\n    q.enqueue(backgroundJob)\r\n\r\nIn another file:\r\n\r\n    def backgroundJob():\r\n        # This is the background job\r\n        ...\r\n        # Turn off the worker\r\n        app.process_formation()['worker'].scale(0)\r\n\r\nMy question:  How do I know if the worker is ready? The following code doesn't seem to work:\r\n\r\n    while 'worker.1' not in app.dynos():\r\n        time.sleep(1)\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/14", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/14/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/14/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/14", "id": 130518925, "node_id": "MDU6SXNzdWUxMzA1MTg5MjU=", "number": 14, "title": "size=1 default argument for run_command_detached and run_command gives an error", "user": {"login": "baka101", "id": 7163397, "node_id": "MDQ6VXNlcjcxNjMzOTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7163397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baka101", "html_url": "https://github.com/baka101", "followers_url": "https://api.github.com/users/baka101/followers", "following_url": "https://api.github.com/users/baka101/following{/other_user}", "gists_url": "https://api.github.com/users/baka101/gists{/gist_id}", "starred_url": "https://api.github.com/users/baka101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baka101/subscriptions", "organizations_url": "https://api.github.com/users/baka101/orgs", "repos_url": "https://api.github.com/users/baka101/repos", "events_url": "https://api.github.com/users/baka101/events{/privacy}", "received_events_url": "https://api.github.com/users/baka101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-01T23:31:31Z", "updated_at": "2016-03-07T17:45:07Z", "closed_at": "2016-03-07T17:45:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "This line: \nhttps://github.com/martyzz1/heroku3.py/blob/master/heroku3/models/app.py#L214\n\nNot specifying size results in the size argument defaulting to 1, which is invalid.\n\nError from Heroku:\n422 Client Error: {\"id\":\"invalid_params\",\"message\":\"No such size as 1. Available dyno sizes are Free, Hobby, Standard-1X, Standard-2X, Performance-M and Performance-L.\"}\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/13", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/13/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/13/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/13", "id": 116996446, "node_id": "MDU6SXNzdWUxMTY5OTY0NDY=", "number": 13, "title": "Fails on Python 3.5", "user": {"login": "danpalmer", "id": 202400, "node_id": "MDQ6VXNlcjIwMjQwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/202400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danpalmer", "html_url": "https://github.com/danpalmer", "followers_url": "https://api.github.com/users/danpalmer/followers", "following_url": "https://api.github.com/users/danpalmer/following{/other_user}", "gists_url": "https://api.github.com/users/danpalmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/danpalmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danpalmer/subscriptions", "organizations_url": "https://api.github.com/users/danpalmer/orgs", "repos_url": "https://api.github.com/users/danpalmer/repos", "events_url": "https://api.github.com/users/danpalmer/events{/privacy}", "received_events_url": "https://api.github.com/users/danpalmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-11-15T15:06:26Z", "updated_at": "2016-11-15T10:47:19Z", "closed_at": "2016-11-15T10:46:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n>>> import heroku3\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \".../lib/python3.5/site-packages/heroku3/__init__.py\", line 27, in <module>\n    from .core import from_key\n  File \".../lib/python3.5/site-packages/heroku3/core.py\", line 10, in <module>\n    from .api import Heroku\n  File \".../lib/python3.5/site-packages/heroku3/api.py\", line 203\n    print \"Warning Response was chunked, Loading the next Chunk using the following next-range header returned by Heroku '{0}'. WARNING - This breaks randomly depending on your order_by name. I think it's only guarenteed to work with id's - Looks to be a Heroku problem\".format(valrange)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/12", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/12/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/12/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/12", "id": 107315550, "node_id": "MDU6SXNzdWUxMDczMTU1NTA=", "number": 12, "title": "invalid Range header for sort", "user": {"login": "keturn", "id": 83819, "node_id": "MDQ6VXNlcjgzODE5", "avatar_url": "https://avatars2.githubusercontent.com/u/83819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keturn", "html_url": "https://github.com/keturn", "followers_url": "https://api.github.com/users/keturn/followers", "following_url": "https://api.github.com/users/keturn/following{/other_user}", "gists_url": "https://api.github.com/users/keturn/gists{/gist_id}", "starred_url": "https://api.github.com/users/keturn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keturn/subscriptions", "organizations_url": "https://api.github.com/users/keturn/orgs", "repos_url": "https://api.github.com/users/keturn/repos", "events_url": "https://api.github.com/users/keturn/events{/privacy}", "received_events_url": "https://api.github.com/users/keturn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-19T06:22:13Z", "updated_at": "2015-11-15T23:23:12Z", "closed_at": "2015-11-15T23:23:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to do the \"list releases\" example in the README:\n\n``` .py\napp.releases(order_by='version', limit=10, sort='desc')\n```\n\nthe API responds with an error:\n\n``` .json\n{\n  \"message\": \"Invalid `Range` header. Please use format like `id ..; max=10, order=desc`. \", \n  \"id\": \"bad_request\"\n}\n```\n\nThe Range header in the request is:\n\n```\nversion ..; max=10; order=desc\n```\n\nsemicolon instead of a comma?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/1", "repository_url": "https://api.github.com/repos/martyzz1/heroku3.py", "labels_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/1/comments", "events_url": "https://api.github.com/repos/martyzz1/heroku3.py/issues/1/events", "html_url": "https://github.com/martyzz1/heroku3.py/issues/1", "id": 51477974, "node_id": "MDU6SXNzdWU1MTQ3Nzk3NA==", "number": 1, "title": "Update information on resources", "user": {"login": "ThisGuyCodes", "id": 450860, "node_id": "MDQ6VXNlcjQ1MDg2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/450860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThisGuyCodes", "html_url": "https://github.com/ThisGuyCodes", "followers_url": "https://api.github.com/users/ThisGuyCodes/followers", "following_url": "https://api.github.com/users/ThisGuyCodes/following{/other_user}", "gists_url": "https://api.github.com/users/ThisGuyCodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThisGuyCodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThisGuyCodes/subscriptions", "organizations_url": "https://api.github.com/users/ThisGuyCodes/orgs", "repos_url": "https://api.github.com/users/ThisGuyCodes/repos", "events_url": "https://api.github.com/users/ThisGuyCodes/events{/privacy}", "received_events_url": "https://api.github.com/users/ThisGuyCodes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "martyzz1", "id": 1601355, "node_id": "MDQ6VXNlcjE2MDEzNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1601355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martyzz1", "html_url": "https://github.com/martyzz1", "followers_url": "https://api.github.com/users/martyzz1/followers", "following_url": "https://api.github.com/users/martyzz1/following{/other_user}", "gists_url": "https://api.github.com/users/martyzz1/gists{/gist_id}", "starred_url": "https://api.github.com/users/martyzz1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martyzz1/subscriptions", "organizations_url": "https://api.github.com/users/martyzz1/orgs", "repos_url": "https://api.github.com/users/martyzz1/repos", "events_url": "https://api.github.com/users/martyzz1/events{/privacy}", "received_events_url": "https://api.github.com/users/martyzz1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "martyzz1", "id": 1601355, "node_id": "MDQ6VXNlcjE2MDEzNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1601355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martyzz1", "html_url": "https://github.com/martyzz1", "followers_url": "https://api.github.com/users/martyzz1/followers", "following_url": "https://api.github.com/users/martyzz1/following{/other_user}", "gists_url": "https://api.github.com/users/martyzz1/gists{/gist_id}", "starred_url": "https://api.github.com/users/martyzz1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martyzz1/subscriptions", "organizations_url": "https://api.github.com/users/martyzz1/orgs", "repos_url": "https://api.github.com/users/martyzz1/repos", "events_url": "https://api.github.com/users/martyzz1/events{/privacy}", "received_events_url": "https://api.github.com/users/martyzz1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2014-12-09T20:33:52Z", "updated_at": "2015-12-21T16:07:49Z", "closed_at": "2015-12-21T16:07:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before I possibly dove into a PR for this, I was wondering if there was functionality to update the information on a resource (process formation, dyno, etc), ie:\n\n``` Python\nh = heroku3.from_key(API_KEY)\napp = h.apps()[APP_NAME]\nformation = app.process_formation()\nweb = formation['web']\nprint(web.quantity)\n>>> 1\n# time passes, a sleep, or what have you\nweb.some_update_method()\nprint(web.quantity)\n>>> 3\n```\n\nbecause constantly using:\n\n``` Python\napp.process_formation()['web'].quantity\n```\n\nis just silly, I should be able to update _just_ the resource i want.\n\n---\n\nMaybe a more relevant example:\n\n``` Python\nnew_dyno = app.run_process_detached(SOME_COMMAND)\nprint new_dyno.state\n>>> u'starting'\n# Some time passes, I start other dynos, enter a sleep loop\nnew_dyno.some_update_command()\nprint new_dyno.state\n>>> u'shutdown' # I don't actually know what this status is\n```\n\nPresently, the only way I know how to do this with a dyno is to attempt a lookup on the `.dynos()` method:\n\n``` Python\nnew_dyno = app.run_process_detached(SOME_COMMAND)\nprint new_dyno.state\n>>> u'starting'\n# Time passes\ntry:\n    app.dynos()[new_dyno.id]\n    print('still running')\nexcept KeyError:\n    print('dyno stopped')\n```\n\nWhich is, again, silly. Please let me know if there's already a way to do this (I couldn't find it in the documentation), if not I'll try to find cycles to attempt this.\n", "performed_via_github_app": null, "score": 1.0}]}