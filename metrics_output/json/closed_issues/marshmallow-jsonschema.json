{"total_count": 29, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/91", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/91/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/91/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/91", "id": 489762544, "node_id": "MDU6SXNzdWU0ODk3NjI1NDQ=", "number": 91, "title": "Where is 0.7.0?", "user": {"login": "LukeMarlin", "id": 4253581, "node_id": "MDQ6VXNlcjQyNTM1ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4253581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeMarlin", "html_url": "https://github.com/LukeMarlin", "followers_url": "https://api.github.com/users/LukeMarlin/followers", "following_url": "https://api.github.com/users/LukeMarlin/following{/other_user}", "gists_url": "https://api.github.com/users/LukeMarlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeMarlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeMarlin/subscriptions", "organizations_url": "https://api.github.com/users/LukeMarlin/orgs", "repos_url": "https://api.github.com/users/LukeMarlin/repos", "events_url": "https://api.github.com/users/LukeMarlin/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeMarlin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-05T13:39:50Z", "updated_at": "2019-09-07T18:27:15Z", "closed_at": "2019-09-07T18:27:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is distributed in [pypi](https://pypi.org/project/marshmallow-jsonschema/#history), yet it's nowhere to be seen on [master](https://github.com/fuhrysteve/marshmallow-jsonschema/blob/master/setup.py).\r\n\r\nThere are a bunch of branches, none of them explicitly related to 0.7.0, so where does that pypi version come from?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/85", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/85/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/85/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/85", "id": 480836526, "node_id": "MDU6SXNzdWU0ODA4MzY1MjY=", "number": 85, "title": "UnsupportedValueError on marshmallow.fields.Number", "user": {"login": "yeralin", "id": 8620461, "node_id": "MDQ6VXNlcjg2MjA0NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8620461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yeralin", "html_url": "https://github.com/yeralin", "followers_url": "https://api.github.com/users/yeralin/followers", "following_url": "https://api.github.com/users/yeralin/following{/other_user}", "gists_url": "https://api.github.com/users/yeralin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yeralin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yeralin/subscriptions", "organizations_url": "https://api.github.com/users/yeralin/orgs", "repos_url": "https://api.github.com/users/yeralin/repos", "events_url": "https://api.github.com/users/yeralin/events{/privacy}", "received_events_url": "https://api.github.com/users/yeralin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-08-14T18:56:20Z", "updated_at": "2019-08-14T19:38:35Z", "closed_at": "2019-08-14T19:38:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Recently I noticed that `marshmallow-jsonschema` does not work with `marshmallow.fields.Number` field and raises `UnsupportedValueError`.\r\n\r\nIs there a particular reason why it does not? It works well with `marshmallow.fields.Integer`. Maybe we should just map it to `Integer`? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/84", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/84/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/84/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/84", "id": 480226945, "node_id": "MDU6SXNzdWU0ODAyMjY5NDU=", "number": 84, "title": "Incompatible with marshmallow==3.0.0rc9", "user": {"login": "LukeMarlin", "id": 4253581, "node_id": "MDQ6VXNlcjQyNTM1ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/4253581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukeMarlin", "html_url": "https://github.com/LukeMarlin", "followers_url": "https://api.github.com/users/LukeMarlin/followers", "following_url": "https://api.github.com/users/LukeMarlin/following{/other_user}", "gists_url": "https://api.github.com/users/LukeMarlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukeMarlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukeMarlin/subscriptions", "organizations_url": "https://api.github.com/users/LukeMarlin/orgs", "repos_url": "https://api.github.com/users/LukeMarlin/repos", "events_url": "https://api.github.com/users/LukeMarlin/events{/privacy}", "received_events_url": "https://api.github.com/users/LukeMarlin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-13T15:37:08Z", "updated_at": "2019-10-08T14:00:11Z", "closed_at": "2019-09-07T22:16:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`marshmallow-jsonschema` works fine with `marshmallow<=3.0.0rc8`, however, due to the removal of [marshmallow.fields.LocalDateTime](url) as noted in [the changelog](https://github.com/marshmallow-code/marshmallow/blob/8cf1fb8d95f287d626ed0f38967c90198e28b476/CHANGELOG.rst#300rc9-2019-07-31), this line now fails:\r\nhttps://github.com/fuhrysteve/marshmallow-jsonschema/blob/ee7fcaa543998b43452601767e3a6261ab84fe70/marshmallow_jsonschema/base.py#L99\r\n\r\nAs a side note, [Schema.dump() now returns data directly](https://github.com/marshmallow-code/marshmallow/blob/8cf1fb8d95f287d626ed0f38967c90198e28b476/CHANGELOG.rst#300rc9-2019-07-31), it's no longer a tuple, meaning that your examples won't work anymore after the next release\r\n\r\nI'm not sure if it's ok for me to open the issue as this is a future release, but I wanted to let you know before it happens (and it seems it's going to be soon :+1: )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/83", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/83/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/83/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/83", "id": 479759249, "node_id": "MDU6SXNzdWU0Nzk3NTkyNDk=", "number": 83, "title": "Ability to modify JSON schema property name", "user": {"login": "yeralin", "id": 8620461, "node_id": "MDQ6VXNlcjg2MjA0NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8620461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yeralin", "html_url": "https://github.com/yeralin", "followers_url": "https://api.github.com/users/yeralin/followers", "following_url": "https://api.github.com/users/yeralin/following{/other_user}", "gists_url": "https://api.github.com/users/yeralin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yeralin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yeralin/subscriptions", "organizations_url": "https://api.github.com/users/yeralin/orgs", "repos_url": "https://api.github.com/users/yeralin/repos", "events_url": "https://api.github.com/users/yeralin/events{/privacy}", "received_events_url": "https://api.github.com/users/yeralin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-12T17:20:33Z", "updated_at": "2019-10-24T14:21:32Z", "closed_at": "2019-10-24T14:21:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n \r\nI have a problem with `marshmallow-jsonschema` where during the translation it uses field names rather that schema attributes.\r\n\r\nFor example, I have a following schema:\r\n```\r\nclass ExampleSchema(Schema):\r\n    api_token = String(attribute='api-token', required=True,\r\n                       description='API token.')\r\n```\r\nIf I run `JSONSchema().dump(ExampleSchema()).data`, it will translate to:\r\n```\r\n{\r\n    \"$ref\": \"#/definitions/LoginTokenRequestSchema\",\r\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\r\n    \"definitions\": {\r\n        \"ExampleSchema\": {\r\n            \"additionalProperties\": false,\r\n            \"properties\": {\r\n                \"api_token\": {\r\n                    \"description\": \"API token.\",\r\n                    \"title\": \"api-token\",\r\n                    \"type\": \"string\"\r\n                }\r\n            },\r\n            \"required\": [\r\n                \"api_token\"\r\n            ],\r\n            \"type\": \"object\"\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAs you can see, it used the field name (`ExampleSchema.api_token`) from the schema instead of its attribute (`api-token`). `attribute='api-token'` was used for `title` in the resulting JSON schema.\r\n\r\nOriginally in the marshmallow core, `attribute` parameter is utilized for marshaling: https://marshmallow.readthedocs.io/en/2.x-line/quickstart.html#specifying-attribute-names\r\n\r\nIn my case, I'm just trying to follow PEP8 having `lower_case_with_underscores` variable names in the python code, but then in the resulting JSON schema I would want to follow `camelCase`. I was hoping to achieve that specifying `attribute` parameter.\r\n\r\nIs there some kinda parameter I could pass to JSONSchema to pick schema's attribute instead?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/79", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/79/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/79/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/79", "id": 479115210, "node_id": "MDU6SXNzdWU0NzkxMTUyMTA=", "number": 79, "title": "JSON Schema generation raises UnsupportedValueError on marshmallow.fields.* subclasses", "user": {"login": "yeralin", "id": 8620461, "node_id": "MDQ6VXNlcjg2MjA0NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8620461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yeralin", "html_url": "https://github.com/yeralin", "followers_url": "https://api.github.com/users/yeralin/followers", "following_url": "https://api.github.com/users/yeralin/following{/other_user}", "gists_url": "https://api.github.com/users/yeralin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yeralin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yeralin/subscriptions", "organizations_url": "https://api.github.com/users/yeralin/orgs", "repos_url": "https://api.github.com/users/yeralin/repos", "events_url": "https://api.github.com/users/yeralin/events{/privacy}", "received_events_url": "https://api.github.com/users/yeralin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-09T18:34:15Z", "updated_at": "2019-08-10T14:52:05Z", "closed_at": "2019-08-10T14:52:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a rather unusual problem. I have a wrapper on top of `marshmallow.fields.*` classes. Something similar to:\r\n```\r\nfrom marshmallow.fields import String\r\n\r\nclass CustomString(String):\r\n    ...\r\n```\r\nWhen I try to generate a JSON schema that contains one of those wrapped fields like `CustomString`, the generator raises `UnsupportedValueError`. After looking at the code, I noticed this line:\r\nhttps://github.com/fuhrysteve/marshmallow-jsonschema/blob/master/marshmallow_jsonschema/base.py#L158\r\n\r\nWhere my `field.__class__` resolves to `CustomString` while `mapping` contains `marshmallow.fields.String`.\r\n\r\nThat was a bummer. I wrote a quick PR for this issue that instead checks whether field's class is a subclass of one of the `marshmallow.fields.*`. \r\n\r\nFeel free to share your thoughts about it!\r\n\r\nThank you! \u2764\ufe0f \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/69", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/69/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/69/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/69", "id": 453479905, "node_id": "MDU6SXNzdWU0NTM0Nzk5MDU=", "number": 69, "title": "ModuleNotFoundError: No module named 'marshmallow.compat' with marshmallow  3.0.0rc6 installed", "user": {"login": "kato-m", "id": 13132700, "node_id": "MDQ6VXNlcjEzMTMyNzAw", "avatar_url": "https://avatars2.githubusercontent.com/u/13132700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kato-m", "html_url": "https://github.com/kato-m", "followers_url": "https://api.github.com/users/kato-m/followers", "following_url": "https://api.github.com/users/kato-m/following{/other_user}", "gists_url": "https://api.github.com/users/kato-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/kato-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kato-m/subscriptions", "organizations_url": "https://api.github.com/users/kato-m/orgs", "repos_url": "https://api.github.com/users/kato-m/repos", "events_url": "https://api.github.com/users/kato-m/events{/privacy}", "received_events_url": "https://api.github.com/users/kato-m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-06-07T12:05:52Z", "updated_at": "2019-09-18T17:54:42Z", "closed_at": "2019-06-13T14:07:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Executing the JSONSchema example \r\n\r\n```\r\nfrom marshmallow import Schema, fields\r\nfrom marshmallow_jsonschema import JSONSchema\r\nclass UserSchema(Schema):\r\n    username = fields.String()\r\n    age = fields.Integer()\r\n    birthday = fields.Date()\r\nuser_schema = UserSchema()\r\njson_schema = JSONSchema()\r\njson_schema.dump(user_schema).data\r\n```\r\n\r\nwith marshmallow  3.0.0rc6 installed yields\r\n```\r\nModuleNotFoundError: No module named 'marshmallow.compat'\r\n```\r\n\r\nAFAIS the module `marshmallow.compat` is gone with version 3.0.0. (cf. [file finder](https://github.com/marshmallow-code/marshmallow/find/3.0))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/67", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/67/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/67/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/67", "id": 363861506, "node_id": "MDU6SXNzdWUzNjM4NjE1MDY=", "number": 67, "title": "Range Validation Incorrect?", "user": {"login": "namccart", "id": 4614453, "node_id": "MDQ6VXNlcjQ2MTQ0NTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4614453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/namccart", "html_url": "https://github.com/namccart", "followers_url": "https://api.github.com/users/namccart/followers", "following_url": "https://api.github.com/users/namccart/following{/other_user}", "gists_url": "https://api.github.com/users/namccart/gists{/gist_id}", "starred_url": "https://api.github.com/users/namccart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/namccart/subscriptions", "organizations_url": "https://api.github.com/users/namccart/orgs", "repos_url": "https://api.github.com/users/namccart/repos", "events_url": "https://api.github.com/users/namccart/events{/privacy}", "received_events_url": "https://api.github.com/users/namccart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-26T05:16:23Z", "updated_at": "2019-06-17T13:40:50Z", "closed_at": "2019-06-17T13:40:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/fuhrysteve/marshmallow-jsonschema/blob/3e0891a79d586c49deb75188d9ee1728597d093b/marshmallow_jsonschema/validation.py#L96-L105\r\n\r\nAccording to\r\n[the docs](https://marshmallow.readthedocs.io/en/3.0/api_reference.html#marshmallow.validate.Range), marshmallow wants max and min to be inclusive (so exclusiveMinimum should always be False, which is the default).  Also, minimum should be set only when present in the validator rather than being set to 0.  Is there a reason this code deviates from the standards in this way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/66", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/66/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/66/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/66", "id": 353189637, "node_id": "MDU6SXNzdWUzNTMxODk2Mzc=", "number": 66, "title": "Repo is out of data with Pypi", "user": {"login": "smith-m", "id": 23284218, "node_id": "MDQ6VXNlcjIzMjg0MjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/23284218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smith-m", "html_url": "https://github.com/smith-m", "followers_url": "https://api.github.com/users/smith-m/followers", "following_url": "https://api.github.com/users/smith-m/following{/other_user}", "gists_url": "https://api.github.com/users/smith-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/smith-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smith-m/subscriptions", "organizations_url": "https://api.github.com/users/smith-m/orgs", "repos_url": "https://api.github.com/users/smith-m/repos", "events_url": "https://api.github.com/users/smith-m/events{/privacy}", "received_events_url": "https://api.github.com/users/smith-m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-23T01:53:04Z", "updated_at": "2019-06-16T16:52:38Z", "closed_at": "2019-06-16T16:52:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Current setup.py version in master is 0.4.0 - the pypi distribution is at 0.5.0. Which commit is 0.5.0 release from?\r\n\r\nhttps://pypi.org/project/marshmallow-jsonschema/\r\n\r\nI'd suggest updating master to reflect the released version", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/62", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/62/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/62/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/62", "id": 340891870, "node_id": "MDU6SXNzdWUzNDA4OTE4NzA=", "number": 62, "title": "AttributeError: 'dict' object has no attribute 'data' on on List of Nested fields", "user": {"login": "bnopne", "id": 13728888, "node_id": "MDQ6VXNlcjEzNzI4ODg4", "avatar_url": "https://avatars3.githubusercontent.com/u/13728888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnopne", "html_url": "https://github.com/bnopne", "followers_url": "https://api.github.com/users/bnopne/followers", "following_url": "https://api.github.com/users/bnopne/following{/other_user}", "gists_url": "https://api.github.com/users/bnopne/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnopne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnopne/subscriptions", "organizations_url": "https://api.github.com/users/bnopne/orgs", "repos_url": "https://api.github.com/users/bnopne/repos", "events_url": "https://api.github.com/users/bnopne/events{/privacy}", "received_events_url": "https://api.github.com/users/bnopne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-13T06:01:48Z", "updated_at": "2018-07-18T08:35:57Z", "closed_at": "2018-07-16T06:17:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get `'dict' object has no attribute 'data' ` when i try to generate JSON schema for a model which contains `List` of `Nested` fields, here is an example of broken code:\r\n```\r\n        class User(Schema):\r\n            f1 = fields.Integer()\r\n\r\n        class UserList(Schema):\r\n            f2 = fields.List(fields.Nested(User))\r\n\r\n\r\n        JSONSchema().dump(UserList())\r\n```\r\nPython 3.6.4\r\nmarshmallow==3.0.0b11\r\nmarshmallow-jsonschema==0.5.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/53", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/53/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/53/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/53", "id": 298351665, "node_id": "MDU6SXNzdWUyOTgzNTE2NjU=", "number": 53, "title": "Marshmallow-mongoenine support", "user": {"login": "macfire", "id": 1426783, "node_id": "MDQ6VXNlcjE0MjY3ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1426783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/macfire", "html_url": "https://github.com/macfire", "followers_url": "https://api.github.com/users/macfire/followers", "following_url": "https://api.github.com/users/macfire/following{/other_user}", "gists_url": "https://api.github.com/users/macfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/macfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/macfire/subscriptions", "organizations_url": "https://api.github.com/users/macfire/orgs", "repos_url": "https://api.github.com/users/macfire/repos", "events_url": "https://api.github.com/users/macfire/events{/privacy}", "received_events_url": "https://api.github.com/users/macfire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-19T17:23:31Z", "updated_at": "2019-06-17T13:47:26Z", "closed_at": "2019-06-17T13:47:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there any plans to support Marshmallow-Mongoengine ModelSchema feature, which will automatically create a base schema from a model?\r\n\r\nI've been using the convenience of Marshmallow-Mongoengine to avoid having to recreate lengthy models into schemas (DRY), but would also to like to use marshmallow-jsonschema.  \r\n\r\nThe basic errors I've receive so far are `\"unsupported field type <fields.ObjectId>\"` and `\"<fields.ReferenceField>\"`.   All works fine if I manually create the schemas.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/52", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/52/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/52/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/52", "id": 295942754, "node_id": "MDU6SXNzdWUyOTU5NDI3NTQ=", "number": 52, "title": "Marshmallow v3 Support", "user": {"login": "rhaarm", "id": 4397436, "node_id": "MDQ6VXNlcjQzOTc0MzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4397436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rhaarm", "html_url": "https://github.com/rhaarm", "followers_url": "https://api.github.com/users/rhaarm/followers", "following_url": "https://api.github.com/users/rhaarm/following{/other_user}", "gists_url": "https://api.github.com/users/rhaarm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rhaarm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rhaarm/subscriptions", "organizations_url": "https://api.github.com/users/rhaarm/orgs", "repos_url": "https://api.github.com/users/rhaarm/repos", "events_url": "https://api.github.com/users/rhaarm/events{/privacy}", "received_events_url": "https://api.github.com/users/rhaarm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-09T17:08:46Z", "updated_at": "2018-07-23T13:50:05Z", "closed_at": "2018-07-23T13:50:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found that Marshmallow 3 (pre-release) removed the .data,.error notation from the Marshall/UnMarshall classes, which is referenced in this code base.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/50", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/50/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/50/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/50", "id": 281731305, "node_id": "MDU6SXNzdWUyODE3MzEzMDU=", "number": 50, "title": "Enum ignores custom labels", "user": {"login": "stringfellow", "id": 62915, "node_id": "MDQ6VXNlcjYyOTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/62915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringfellow", "html_url": "https://github.com/stringfellow", "followers_url": "https://api.github.com/users/stringfellow/followers", "following_url": "https://api.github.com/users/stringfellow/following{/other_user}", "gists_url": "https://api.github.com/users/stringfellow/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringfellow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringfellow/subscriptions", "organizations_url": "https://api.github.com/users/stringfellow/orgs", "repos_url": "https://api.github.com/users/stringfellow/repos", "events_url": "https://api.github.com/users/stringfellow/events{/privacy}", "received_events_url": "https://api.github.com/users/stringfellow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-13T12:25:39Z", "updated_at": "2017-12-13T16:11:02Z", "closed_at": "2017-12-13T16:11:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The OneOf validator allows custom labels, these are omitted on serialisation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/48", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/48/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/48/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/48", "id": 278114016, "node_id": "MDU6SXNzdWUyNzgxMTQwMTY=", "number": 48, "title": "Only and Exclude are ignored on nested schemas", "user": {"login": "stringfellow", "id": 62915, "node_id": "MDQ6VXNlcjYyOTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/62915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringfellow", "html_url": "https://github.com/stringfellow", "followers_url": "https://api.github.com/users/stringfellow/followers", "following_url": "https://api.github.com/users/stringfellow/following{/other_user}", "gists_url": "https://api.github.com/users/stringfellow/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringfellow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringfellow/subscriptions", "organizations_url": "https://api.github.com/users/stringfellow/orgs", "repos_url": "https://api.github.com/users/stringfellow/repos", "events_url": "https://api.github.com/users/stringfellow/events{/privacy}", "received_events_url": "https://api.github.com/users/stringfellow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-30T13:08:34Z", "updated_at": "2017-12-13T16:12:11Z", "closed_at": "2017-12-13T16:12:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`only` and `exclude` are not passed through when nested is dumped", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/46", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/46/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/46/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/46", "id": 277813235, "node_id": "MDU6SXNzdWUyNzc4MTMyMzU=", "number": 46, "title": "Metadata is not serialized (only description and title are)", "user": {"login": "stringfellow", "id": 62915, "node_id": "MDQ6VXNlcjYyOTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/62915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringfellow", "html_url": "https://github.com/stringfellow", "followers_url": "https://api.github.com/users/stringfellow/followers", "following_url": "https://api.github.com/users/stringfellow/following{/other_user}", "gists_url": "https://api.github.com/users/stringfellow/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringfellow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringfellow/subscriptions", "organizations_url": "https://api.github.com/users/stringfellow/orgs", "repos_url": "https://api.github.com/users/stringfellow/repos", "events_url": "https://api.github.com/users/stringfellow/events{/privacy}", "received_events_url": "https://api.github.com/users/stringfellow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-29T16:11:27Z", "updated_at": "2017-12-13T16:14:10Z", "closed_at": "2017-12-13T16:14:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using the example from https://github.com/mozilla-services/react-jsonschema-form#multiple-choices-list -- it should be possible to set the `uniqueItems` property of a field. A simple way to allow extra metadata like this is to build on the support in Marshmallow for `kwargs` to be set in the metadata. In a previous issue, the field `kwargs` were added to the metadata (#39) but these were never serialized out. (So effectively useless except for description and title).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/42", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/42/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/42/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/42", "id": 260303076, "node_id": "MDU6SXNzdWUyNjAzMDMwNzY=", "number": 42, "title": "0.5.0 release?", "user": {"login": "stringfellow", "id": 62915, "node_id": "MDQ6VXNlcjYyOTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/62915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringfellow", "html_url": "https://github.com/stringfellow", "followers_url": "https://api.github.com/users/stringfellow/followers", "following_url": "https://api.github.com/users/stringfellow/following{/other_user}", "gists_url": "https://api.github.com/users/stringfellow/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringfellow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringfellow/subscriptions", "organizations_url": "https://api.github.com/users/stringfellow/orgs", "repos_url": "https://api.github.com/users/stringfellow/repos", "events_url": "https://api.github.com/users/stringfellow/events{/privacy}", "received_events_url": "https://api.github.com/users/stringfellow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-25T14:44:23Z", "updated_at": "2017-12-13T18:18:37Z", "closed_at": "2017-12-13T16:29:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There's some stuff in master that's not on pypi - also PR #39 has a build fail which I think is just a travis blip - could it be re-built and merged if acceptable?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/40", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/40/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/40/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/40", "id": 245598598, "node_id": "MDU6SXNzdWUyNDU1OTg1OTg=", "number": 40, "title": "schema produced for an integer field breaks react-jsonschema-form", "user": {"login": "rsyring", "id": 109467, "node_id": "MDQ6VXNlcjEwOTQ2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/109467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsyring", "html_url": "https://github.com/rsyring", "followers_url": "https://api.github.com/users/rsyring/followers", "following_url": "https://api.github.com/users/rsyring/following{/other_user}", "gists_url": "https://api.github.com/users/rsyring/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsyring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsyring/subscriptions", "organizations_url": "https://api.github.com/users/rsyring/orgs", "repos_url": "https://api.github.com/users/rsyring/repos", "events_url": "https://api.github.com/users/rsyring/events{/privacy}", "received_events_url": "https://api.github.com/users/rsyring/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-26T03:50:07Z", "updated_at": "2019-06-17T13:42:40Z", "closed_at": "2019-06-17T13:42:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've created a marshmallow schema with an integer field.  This library generates JSON schema for the field as:\r\n\r\n```\r\n    \"id\": {\r\n      \"format\": \"integer\",\r\n      \"title\": \"id\",\r\n      \"type\": \"number\"\r\n    },\r\n```\r\n\r\nWhen I feed that schema to the `Form` React component from https://github.com/mozilla-services/react-jsonschema-form, I get an error:\r\n\r\n> Error: No widget \"integer\" for type \"number\"\r\n\r\nBased on their examples and my limited reading of the JSON Schema spec, maybe the correct JSON schema should be:\r\n\r\n```\r\n    \"id\": {\r\n      \"title\": \"id\",\r\n      \"type\": \"integer\"\r\n    },\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/38", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/38/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/38/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/38", "id": 245337529, "node_id": "MDU6SXNzdWUyNDUzMzc1Mjk=", "number": 38, "title": "Metadata from field **kwargs is ignored", "user": {"login": "stringfellow", "id": 62915, "node_id": "MDQ6VXNlcjYyOTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/62915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringfellow", "html_url": "https://github.com/stringfellow", "followers_url": "https://api.github.com/users/stringfellow/followers", "following_url": "https://api.github.com/users/stringfellow/following{/other_user}", "gists_url": "https://api.github.com/users/stringfellow/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringfellow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringfellow/subscriptions", "organizations_url": "https://api.github.com/users/stringfellow/orgs", "repos_url": "https://api.github.com/users/stringfellow/repos", "events_url": "https://api.github.com/users/stringfellow/events{/privacy}", "received_events_url": "https://api.github.com/users/stringfellow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-25T09:22:45Z", "updated_at": "2017-09-27T11:17:56Z", "closed_at": "2017-09-27T11:17:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Marshmallow allows for any arbitrary kwargs to be added to the field in the `metadata` property - this is not respected for e.g. description and others (it is expected to be in a further key called `metadata` inside the `metadata` dict) - so specifying e.g. description directly on the field is not serialised out.\r\n\r\nSee: http://marshmallow.readthedocs.io/en/latest/api_reference.html?highlight=metadata#module-marshmallow.fields\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/34", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/34/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/34/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/34", "id": 243443381, "node_id": "MDU6SXNzdWUyNDM0NDMzODE=", "number": 34, "title": "Nested recursive schemas fail (infinity!)", "user": {"login": "stringfellow", "id": 62915, "node_id": "MDQ6VXNlcjYyOTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/62915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringfellow", "html_url": "https://github.com/stringfellow", "followers_url": "https://api.github.com/users/stringfellow/followers", "following_url": "https://api.github.com/users/stringfellow/following{/other_user}", "gists_url": "https://api.github.com/users/stringfellow/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringfellow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringfellow/subscriptions", "organizations_url": "https://api.github.com/users/stringfellow/orgs", "repos_url": "https://api.github.com/users/stringfellow/repos", "events_url": "https://api.github.com/users/stringfellow/events{/privacy}", "received_events_url": "https://api.github.com/users/stringfellow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-17T15:57:14Z", "updated_at": "2017-09-27T00:08:18Z", "closed_at": "2017-09-27T00:08:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is possible to self-reference a schema:\r\nhttp://marshmallow.readthedocs.io/en/latest/nesting.html#nesting-a-schema-within-itself\r\n\r\nAt the moment this causes a non-breaking recurse and a RunTime maximum recursion depth exceeded error", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/32", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/32/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/32/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/32", "id": 242730039, "node_id": "MDU6SXNzdWUyNDI3MzAwMzk=", "number": 32, "title": "Deeply nested schemas - how to construct into JSONSchema?", "user": {"login": "stringfellow", "id": 62915, "node_id": "MDQ6VXNlcjYyOTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/62915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringfellow", "html_url": "https://github.com/stringfellow", "followers_url": "https://api.github.com/users/stringfellow/followers", "following_url": "https://api.github.com/users/stringfellow/following{/other_user}", "gists_url": "https://api.github.com/users/stringfellow/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringfellow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringfellow/subscriptions", "organizations_url": "https://api.github.com/users/stringfellow/orgs", "repos_url": "https://api.github.com/users/stringfellow/repos", "events_url": "https://api.github.com/users/stringfellow/events{/privacy}", "received_events_url": "https://api.github.com/users/stringfellow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-13T14:57:58Z", "updated_at": "2020-05-07T02:38:22Z", "closed_at": "2017-09-27T00:08:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Say I have a deeply nested schema like this:\r\n\r\n```\r\n\r\nclass D(Schema):\r\n    f = fields.Int()\r\n\r\nclass C(Schema):\r\n    e = fields.Str()\r\n\r\nclass B(Schema):\r\n    c = fields.Nested(C)\r\n    d = fields.Nested(D)\r\n\r\nclass A(Schema):\r\n    b = fields.List(\r\n        fields.Nested(B)\r\n    )\r\n\r\n```\r\n\r\nHow, when serialising `A()` with `JSONSchema` do you get the full representation (ultimately for use with `brutusin-jsonforms`)? At the moment it doesn't seem to automatically construct the inner schemas with `JSONSchema` - am I missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/26", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/26/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/26/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/26", "id": 222624897, "node_id": "MDU6SXNzdWUyMjI2MjQ4OTc=", "number": 26, "title": "Respect order given by OrderedDict", "user": {"login": "gpip", "id": 17851358, "node_id": "MDQ6VXNlcjE3ODUxMzU4", "avatar_url": "https://avatars2.githubusercontent.com/u/17851358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gpip", "html_url": "https://github.com/gpip", "followers_url": "https://api.github.com/users/gpip/followers", "following_url": "https://api.github.com/users/gpip/following{/other_user}", "gists_url": "https://api.github.com/users/gpip/gists{/gist_id}", "starred_url": "https://api.github.com/users/gpip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gpip/subscriptions", "organizations_url": "https://api.github.com/users/gpip/orgs", "repos_url": "https://api.github.com/users/gpip/repos", "events_url": "https://api.github.com/users/gpip/events{/privacy}", "received_events_url": "https://api.github.com/users/gpip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-19T05:38:54Z", "updated_at": "2019-06-17T13:48:53Z", "closed_at": "2019-06-17T13:48:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using\r\n\r\n```\r\nclass Meta:\r\n    ordered = True\r\n```\r\n\r\nin schemas, the fields are already ordered. marshmallow-jsonschema always uses `sorted(...)`, discarding the order that was present.\r\n\r\nThere are some ways to go about this, do you have some preference? One way would be checking for ordered dicts before running `sorted(...)`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/23", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/23/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/23/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/23", "id": 200824924, "node_id": "MDU6SXNzdWUyMDA4MjQ5MjQ=", "number": 23, "title": "0.4.0 release?", "user": {"login": "s0undt3ch", "id": 300048, "node_id": "MDQ6VXNlcjMwMDA0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/300048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/s0undt3ch", "html_url": "https://github.com/s0undt3ch", "followers_url": "https://api.github.com/users/s0undt3ch/followers", "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}", "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}", "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions", "organizations_url": "https://api.github.com/users/s0undt3ch/orgs", "repos_url": "https://api.github.com/users/s0undt3ch/repos", "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}", "received_events_url": "https://api.github.com/users/s0undt3ch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-14T19:43:03Z", "updated_at": "2019-06-16T16:52:23Z", "closed_at": "2019-06-16T16:52:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "You made a fix about nested fields being strings which is not yet released, can we get that released?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/20", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/20/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/20/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/20", "id": 187459964, "node_id": "MDU6SXNzdWUxODc0NTk5NjQ=", "number": 20, "title": "oneOf and anyOf support?", "user": {"login": "s0undt3ch", "id": 300048, "node_id": "MDQ6VXNlcjMwMDA0OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/300048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/s0undt3ch", "html_url": "https://github.com/s0undt3ch", "followers_url": "https://api.github.com/users/s0undt3ch/followers", "following_url": "https://api.github.com/users/s0undt3ch/following{/other_user}", "gists_url": "https://api.github.com/users/s0undt3ch/gists{/gist_id}", "starred_url": "https://api.github.com/users/s0undt3ch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/s0undt3ch/subscriptions", "organizations_url": "https://api.github.com/users/s0undt3ch/orgs", "repos_url": "https://api.github.com/users/s0undt3ch/repos", "events_url": "https://api.github.com/users/s0undt3ch/events{/privacy}", "received_events_url": "https://api.github.com/users/s0undt3ch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-04T23:33:13Z", "updated_at": "2016-11-05T02:19:08Z", "closed_at": "2016-11-05T02:19:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just barely looked at the code but I didn't find mentions of oneOf and anyOf.\r\n\r\nAny plans to implement?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/18", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/18/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/18/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/18", "id": 171495998, "node_id": "MDU6SXNzdWUxNzE0OTU5OTg=", "number": 18, "title": "Don't Blindly Try to Construct Schemas", "user": {"login": "hjc", "id": 1062500, "node_id": "MDQ6VXNlcjEwNjI1MDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1062500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjc", "html_url": "https://github.com/hjc", "followers_url": "https://api.github.com/users/hjc/followers", "following_url": "https://api.github.com/users/hjc/following{/other_user}", "gists_url": "https://api.github.com/users/hjc/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjc/subscriptions", "organizations_url": "https://api.github.com/users/hjc/orgs", "repos_url": "https://api.github.com/users/hjc/repos", "events_url": "https://api.github.com/users/hjc/events{/privacy}", "received_events_url": "https://api.github.com/users/hjc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-16T19:20:36Z", "updated_at": "2019-07-13T21:03:21Z", "closed_at": "2019-07-13T21:03:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So, if you have a `Nested` field that you pass a schema you've already constructed, marshmallow-jsonschema fails with the following error:\n\n```\n  File \"~/.env/local/lib/python2.7/site-packages/marshmallow_jsonschema/base.py\", line 147, in _from_nested_schema\n    schema = cls().dump(field.nested()).data\nTypeError: 'LastAttachmentSchema' object is not callable\n```\n\nThis is what the code for that Nested field looks like:\n\n``` py\nclass ThreadPaginatedSchema(ThreadSchema):\n    \"\"\"Schema for paginated threads\"\"\"\n    last_attachments = fields.Nested(\n        LastAttachmentSchema(context={'child': True}), many=True\n    )   \n\n    class Meta(object):\n        \"\"\"Keys to remove\"\"\"\n        exclude = ('project_id',)\n```\n\nWe need to construct the schema so we can update it's context and **JUST** it's context (because setting a context of `child=True` on the parent won't work). Looking at Marshmallow's `Nested` field, they do handle this usecase. Should be as simple as adding an `isinstance` check around the line that errors.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/17", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/17/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/17/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/17", "id": 169626412, "node_id": "MDU6SXNzdWUxNjk2MjY0MTI=", "number": 17, "title": "Calling json_schema.dump(schema) with Nested throws error", "user": {"login": "waltersf", "id": 170966, "node_id": "MDQ6VXNlcjE3MDk2Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/170966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waltersf", "html_url": "https://github.com/waltersf", "followers_url": "https://api.github.com/users/waltersf/followers", "following_url": "https://api.github.com/users/waltersf/following{/other_user}", "gists_url": "https://api.github.com/users/waltersf/gists{/gist_id}", "starred_url": "https://api.github.com/users/waltersf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waltersf/subscriptions", "organizations_url": "https://api.github.com/users/waltersf/orgs", "repos_url": "https://api.github.com/users/waltersf/repos", "events_url": "https://api.github.com/users/waltersf/events{/privacy}", "received_events_url": "https://api.github.com/users/waltersf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-05T14:58:26Z", "updated_at": "2016-08-06T14:46:35Z", "closed_at": "2016-08-06T14:46:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI've declared all nested objects in a schema using string instead of class and when json_schema.dump(schema) is executed, an error `TypeError: 'str' object is not callable` is raised. \nFor example: \n\n```\nclass TaskExecuteRequestSchema(Schema):\n    \"\"\" JSON schema for executing tasks \"\"\"\n    id = fields.Integer(required=True)\n    order = fields.Integer(required=True)\n    log_level = fields.String(required=True)\n    is_start = fields.Boolean(required=True)\n    is_end = fields.Boolean(required=True)\n    operation_id = fields.Integer(required=True)\n    operation_name = fields.String(required=True)\n    next_task_id = fields.Integer()\n    input = fields.Nested('DataSourceExecuteRequestSchema',\n                          required=True)\n    output = fields.Nested('DataSourceExecuteRequestSchema',\n                           required=True)\n    parameters = fields.Nested('KeyValuePairExecuteRequestSchema',\n                               required=True,\n                               many=True)\n```\n\nIf I remove single quotes from names, it works. \nI suggest changing marshmallow_jsonschema/base.py, line 147, to test if in this line: `schema = cls().dump(field.nested()).data`, `field.nested` is callable or not. \n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/13", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/13/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/13/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/13", "id": 163813693, "node_id": "MDU6SXNzdWUxNjM4MTM2OTM=", "number": 13, "title": "Support for validators like OneOf", "user": {"login": "stringfellow", "id": 62915, "node_id": "MDQ6VXNlcjYyOTE1", "avatar_url": "https://avatars3.githubusercontent.com/u/62915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stringfellow", "html_url": "https://github.com/stringfellow", "followers_url": "https://api.github.com/users/stringfellow/followers", "following_url": "https://api.github.com/users/stringfellow/following{/other_user}", "gists_url": "https://api.github.com/users/stringfellow/gists{/gist_id}", "starred_url": "https://api.github.com/users/stringfellow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stringfellow/subscriptions", "organizations_url": "https://api.github.com/users/stringfellow/orgs", "repos_url": "https://api.github.com/users/stringfellow/repos", "events_url": "https://api.github.com/users/stringfellow/events{/privacy}", "received_events_url": "https://api.github.com/users/stringfellow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-05T09:58:57Z", "updated_at": "2016-07-12T20:56:54Z", "closed_at": "2016-07-12T20:56:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\"One of\" (or valid values lists) seem to be present in the JSONSchema spec but don't seem to be recognised by marshmallow-jsonschema\n\nExample:\n\n```\nclass TestSchema(Schema):\n    a = fields.String()\n    b = fields.Integer(default=456)\n    c = fields.List(\n        fields.Integer,\n        validate=validate.OneOf(choices=[9, 8, 7])\n    )\n\ndumped = JSONSchema().dump(TestSchema()).data\n\npp dumped\n\n{u'properties': {'a': {'title': 'a', 'type': 'string'},\n                 'b': {'default': 456,\n                       'format': 'integer',\n                       'title': 'b',\n                       'type': 'number'},\n                 'c': {'title': 'c', 'type': 'array'}},\n u'required': [],\n u'type': 'object'}\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/8", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/8/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/8/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/8", "id": 128075134, "node_id": "MDU6SXNzdWUxMjgwNzUxMzQ=", "number": 8, "title": "Handling unknown typed field.", "user": {"login": "Hardtack", "id": 415292, "node_id": "MDQ6VXNlcjQxNTI5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/415292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hardtack", "html_url": "https://github.com/Hardtack", "followers_url": "https://api.github.com/users/Hardtack/followers", "following_url": "https://api.github.com/users/Hardtack/following{/other_user}", "gists_url": "https://api.github.com/users/Hardtack/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hardtack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hardtack/subscriptions", "organizations_url": "https://api.github.com/users/Hardtack/orgs", "repos_url": "https://api.github.com/users/Hardtack/repos", "events_url": "https://api.github.com/users/Hardtack/events{/privacy}", "received_events_url": "https://api.github.com/users/Hardtack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-22T03:25:27Z", "updated_at": "2016-03-16T19:57:39Z", "closed_at": "2016-03-16T19:57:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Marshmallow provides a method to making custom field. But they don't specify output data's type.\nSo it is not able to dump them. \n\nSuppose we have custom field like following\n\n```\nclass Colour(fields.Field):\n    def _serialize(self, value, attr, obj):\n        r, g, b = value\n        r = hex(r)[2:]\n        g = hex(g)[2:]\n        b = hex(b)[2:]\n        return '#' + r + g + b\n```\n\nAnd we have schema like following.\n\n```\nclass UserSchema(Schema):\n    name = fields.String(required=True)\n    favourite_colour = Colour()\n```\n\nWe cannot assume the type of field `favourite_colour`.\n\nWe may can add type to arbitrary field by providing wrapper field.\n\n```\nclass UserSchema(Schema):\n    name = fields.String(required=True)\n    favourite_colour = StringTyped(Colour())\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/7", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/7/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/7/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/7", "id": 128068136, "node_id": "MDU6SXNzdWUxMjgwNjgxMzY=", "number": 7, "title": "Shouldn't we treat marshmallow-jsonschema as a kind of marshmallow schema?", "user": {"login": "Hardtack", "id": 415292, "node_id": "MDQ6VXNlcjQxNTI5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/415292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hardtack", "html_url": "https://github.com/Hardtack", "followers_url": "https://api.github.com/users/Hardtack/followers", "following_url": "https://api.github.com/users/Hardtack/following{/other_user}", "gists_url": "https://api.github.com/users/Hardtack/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hardtack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hardtack/subscriptions", "organizations_url": "https://api.github.com/users/Hardtack/orgs", "repos_url": "https://api.github.com/users/Hardtack/repos", "events_url": "https://api.github.com/users/Hardtack/events{/privacy}", "received_events_url": "https://api.github.com/users/Hardtack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-01-22T02:28:12Z", "updated_at": "2016-03-16T14:03:17Z", "closed_at": "2016-03-16T14:03:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Marshmallow is a object serialization library. And also, marshmallow-jsonschema serializes(dumps) a form which.\nSo, in my opinion, marshmallow-jsonschema should be made as a kind of marshmallow schema. This schema will be schema of schema.\n\nThe API would be like this\n\n```\n>>> json_schema = JSONSchema()\n>>> user_schema = UserSchema()\n>>> result = json_schema.dump(user_schema)\n>>> result.data\n{'properties': {'addresses': ...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/6", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/6/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/6/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/6", "id": 124548063, "node_id": "MDU6SXNzdWUxMjQ1NDgwNjM=", "number": 6, "title": "Should `dump_schema` be an instance method of a schema?", "user": {"login": "fuhrysteve", "id": 67489, "node_id": "MDQ6VXNlcjY3NDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/67489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuhrysteve", "html_url": "https://github.com/fuhrysteve", "followers_url": "https://api.github.com/users/fuhrysteve/followers", "following_url": "https://api.github.com/users/fuhrysteve/following{/other_user}", "gists_url": "https://api.github.com/users/fuhrysteve/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuhrysteve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuhrysteve/subscriptions", "organizations_url": "https://api.github.com/users/fuhrysteve/orgs", "repos_url": "https://api.github.com/users/fuhrysteve/repos", "events_url": "https://api.github.com/users/fuhrysteve/events{/privacy}", "received_events_url": "https://api.github.com/users/fuhrysteve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-01T15:28:04Z", "updated_at": "2016-03-01T01:19:42Z", "closed_at": "2016-03-01T01:19:42Z", "author_association": "OWNER", "active_lock_reason": null, "body": "We may want to avoid imposing a `BaseJsonSchema` (unless we use mixins, which also seem like something we should avoid unless there are compelling reasons to) since Marhmallow-sqlalchemy uses them and this library needs to be compatible with that library.\n\nHowever, I'm struggling to think of another way to inject this functionality into marshmallow without doing something funky like monkey patching.\n\nMaybe we could suggest a metaclass sort of plugin system in marshmallow?\n### Mixin style\n\n``` python\nfrom marshmallow_sqlalchemy import ModelSchema\nfrom marshmallow_jsonschema import JSONSchemaMixin\nfrom .models import Book  # some sqlalchemy model\n\nclass BookSchema(ModelSchema, JSONSchemaMixin):\n    class Meta:\n        model = Book\n\nbs = BookSchema()\nbs.jsonschema()\n```\n### Metaclass \"plugin\" style\n\n``` python\nfrom marshmallow import register_plugin  # this doesn't actually exist\nfrom marshmallow_jsonschema import JSONSchemaPlugin\nregister_plugin(JSONSchemaPlugin)\n\nfrom marshmallow_sqlalchemy import ModelSchema\nfrom .models import Book  # some sqlalchemy model\n\nclass BookSchema(ModelSchema):\n    plugins = ['jsonschema']\n    class Meta:\n        model = Book\n\nbs = BookSchema()\nbs.jsonschema()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/5", "repository_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema", "labels_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/5/comments", "events_url": "https://api.github.com/repos/fuhrysteve/marshmallow-jsonschema/issues/5/events", "html_url": "https://github.com/fuhrysteve/marshmallow-jsonschema/issues/5", "id": 124547760, "node_id": "MDU6SXNzdWUxMjQ1NDc3NjA=", "number": 5, "title": "Support marshmallow internals such as `only`", "user": {"login": "fuhrysteve", "id": 67489, "node_id": "MDQ6VXNlcjY3NDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/67489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuhrysteve", "html_url": "https://github.com/fuhrysteve", "followers_url": "https://api.github.com/users/fuhrysteve/followers", "following_url": "https://api.github.com/users/fuhrysteve/following{/other_user}", "gists_url": "https://api.github.com/users/fuhrysteve/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuhrysteve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuhrysteve/subscriptions", "organizations_url": "https://api.github.com/users/fuhrysteve/orgs", "repos_url": "https://api.github.com/users/fuhrysteve/repos", "events_url": "https://api.github.com/users/fuhrysteve/events{/privacy}", "received_events_url": "https://api.github.com/users/fuhrysteve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-01T15:16:26Z", "updated_at": "2016-03-16T14:24:46Z", "closed_at": "2016-03-16T14:24:46Z", "author_association": "OWNER", "active_lock_reason": null, "body": "If a schema was instantiated with `only`, only the fields in `only` should be serialized with the schema.\n", "performed_via_github_app": null, "score": 1.0}]}