{"total_count": 7, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/miki725/alchemy-mock/issues/26", "repository_url": "https://api.github.com/repos/miki725/alchemy-mock", "labels_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/26/comments", "events_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/26/events", "html_url": "https://github.com/miki725/alchemy-mock/issues/26", "id": 504538391, "node_id": "MDU6SXNzdWU1MDQ1MzgzOTE=", "number": 26, "title": "Need support for \"distinct\" function", "user": {"login": "sirawats", "id": 50350623, "node_id": "MDQ6VXNlcjUwMzUwNjIz", "avatar_url": "https://avatars1.githubusercontent.com/u/50350623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirawats", "html_url": "https://github.com/sirawats", "followers_url": "https://api.github.com/users/sirawats/followers", "following_url": "https://api.github.com/users/sirawats/following{/other_user}", "gists_url": "https://api.github.com/users/sirawats/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirawats/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirawats/subscriptions", "organizations_url": "https://api.github.com/users/sirawats/orgs", "repos_url": "https://api.github.com/users/sirawats/repos", "events_url": "https://api.github.com/users/sirawats/events{/privacy}", "received_events_url": "https://api.github.com/users/sirawats/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 802404950, "node_id": "MDU6TGFiZWw4MDI0MDQ5NTA=", "url": "https://api.github.com/repos/miki725/alchemy-mock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-09T09:49:46Z", "updated_at": "2019-11-05T13:19:42Z", "closed_at": "2019-11-05T13:19:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my example query and using UnifiedAlchemyMagicMock for my test\r\n\r\ndb.query(ModelA).distinct(ModelA.attr_1).group_by(ModelA.attr_2, ModelA.attr_1).filter(ModelA.attr_2 == 10).all()\r\n\r\nI can not use distinct in my query ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miki725/alchemy-mock/issues/24", "repository_url": "https://api.github.com/repos/miki725/alchemy-mock", "labels_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/24/comments", "events_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/24/events", "html_url": "https://github.com/miki725/alchemy-mock/issues/24", "id": 497167334, "node_id": "MDU6SXNzdWU0OTcxNjczMzQ=", "number": 24, "title": "UnifiedAlchemyMagicMock does not work with .label()", "user": {"login": "hozher", "id": 38280429, "node_id": "MDQ6VXNlcjM4MjgwNDI5", "avatar_url": "https://avatars1.githubusercontent.com/u/38280429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hozher", "html_url": "https://github.com/hozher", "followers_url": "https://api.github.com/users/hozher/followers", "following_url": "https://api.github.com/users/hozher/following{/other_user}", "gists_url": "https://api.github.com/users/hozher/gists{/gist_id}", "starred_url": "https://api.github.com/users/hozher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hozher/subscriptions", "organizations_url": "https://api.github.com/users/hozher/orgs", "repos_url": "https://api.github.com/users/hozher/repos", "events_url": "https://api.github.com/users/hozher/events{/privacy}", "received_events_url": "https://api.github.com/users/hozher/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 802404950, "node_id": "MDU6TGFiZWw4MDI0MDQ5NTA=", "url": "https://api.github.com/repos/miki725/alchemy-mock/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-09-23T15:23:50Z", "updated_at": "2019-09-25T17:55:03Z", "closed_at": "2019-09-25T17:55:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI have this query in my function to be tested:\r\n```python\r\nquery = session.query(\r\n            whitelist.whitelistEmailId,\r\n            whitelist.areaId,\r\n            whitelist.businessNameId,\r\n            whitelist.email,\r\n            whitelist.identificationNumber,\r\n            whitelist.isRegistered,\r\n            whitelist.serviceTypeId,\r\n            area.name.label('area'),\r\n            business.name.label('businessName'),\r\n            service.name.label('serviceType')\r\n            ).\\\r\n        join(area, whitelist.areaId == area.areaId).\\\r\n        join(business, whitelist.businessNameId == business.businessNameId).\\\r\n        join(service, whitelist.serviceTypeId == service.serviceTypeId)\r\n```\r\nI am trying to mock it out like this:\r\n```python\r\nreturn UnifiedAlchemyMagicMock(data=[\r\n        (\r\n            [mock.call.query(\r\n                WhitelistedEmail.whitelistEmailId,\r\n                WhitelistedEmail.areaId,\r\n                WhitelistedEmail.businessNameId,\r\n                WhitelistedEmail.email,\r\n                WhitelistedEmail.identificationNumber,\r\n                WhitelistedEmail.isRegistered,\r\n                WhitelistedEmail.serviceTypeId,\r\n                Area.name.label('area'),\r\n                BusinessName.name.label('businessName'),\r\n                ServiceType.name.label('serviceType')\r\n            )], Factory.get_list()\r\n        )\r\n    ])\r\n```\r\nAfter Ive added these three guys, that make use of .label()  does not work anymore.\r\n```python\r\n    Area.name.label('area'),\r\n    BusinessName.name.label('businessName'),\r\n    ServiceType.name.label('serviceType')\r\n```\r\n\r\nIs this a known issue? or might be am I doing something wrong. any clue is more than welcome.\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miki725/alchemy-mock/issues/18", "repository_url": "https://api.github.com/repos/miki725/alchemy-mock", "labels_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/18/comments", "events_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/18/events", "html_url": "https://github.com/miki725/alchemy-mock/issues/18", "id": 457854771, "node_id": "MDU6SXNzdWU0NTc4NTQ3NzE=", "number": 18, "title": "'&' filter is not working", "user": {"login": "mcauto", "id": 15080806, "node_id": "MDQ6VXNlcjE1MDgwODA2", "avatar_url": "https://avatars2.githubusercontent.com/u/15080806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcauto", "html_url": "https://github.com/mcauto", "followers_url": "https://api.github.com/users/mcauto/followers", "following_url": "https://api.github.com/users/mcauto/following{/other_user}", "gists_url": "https://api.github.com/users/mcauto/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcauto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcauto/subscriptions", "organizations_url": "https://api.github.com/users/mcauto/orgs", "repos_url": "https://api.github.com/users/mcauto/repos", "events_url": "https://api.github.com/users/mcauto/events{/privacy}", "received_events_url": "https://api.github.com/users/mcauto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-19T07:38:57Z", "updated_at": "2019-06-20T00:14:10Z", "closed_at": "2019-06-20T00:14:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I love this library! It's useful!\r\n\r\nI want to contribute this project.\r\n\r\nbut I'm not good at understand sqlalchemy and this library\r\n\r\nI have below problem.\r\n\r\ncould you help me?\r\n\r\n```python\r\n\"\"\"\r\n    in db session\r\n    [A(id = 1, user_id=\"tester\")]\r\n    [B(id = 1, a_id = 1)]\r\n\"\"\"\r\ns = UnifiedAlchemyMagicMock()\r\nfor a in A_list:\r\n    s.add(a)\r\nfor b in B_list:\r\n    s.add(b)\r\n\r\nfilter = (A.id == B.a_id) & (A.user_id == 'tester')\r\nresult = session.query(B).filter(filter).all() \r\n(pdb) result \r\n[B(id=1, a_id=1)] # good!\r\n\r\nfilter = (A.id == B.a_id) & (A.user_id == 'whoareyou')\r\nresult = session.query(B).filter(filter).all() \r\n(pdb) result\r\n[B(id=1, a_id=1)] # ?? filter is not working\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miki725/alchemy-mock/issues/15", "repository_url": "https://api.github.com/repos/miki725/alchemy-mock", "labels_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/15/comments", "events_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/15/events", "html_url": "https://github.com/miki725/alchemy-mock/issues/15", "id": 451867989, "node_id": "MDU6SXNzdWU0NTE4Njc5ODk=", "number": 15, "title": "Can I mock session.add() ?", "user": {"login": "mcauto", "id": 15080806, "node_id": "MDQ6VXNlcjE1MDgwODA2", "avatar_url": "https://avatars2.githubusercontent.com/u/15080806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcauto", "html_url": "https://github.com/mcauto", "followers_url": "https://api.github.com/users/mcauto/followers", "following_url": "https://api.github.com/users/mcauto/following{/other_user}", "gists_url": "https://api.github.com/users/mcauto/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcauto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcauto/subscriptions", "organizations_url": "https://api.github.com/users/mcauto/orgs", "repos_url": "https://api.github.com/users/mcauto/repos", "events_url": "https://api.github.com/users/mcauto/events{/privacy}", "received_events_url": "https://api.github.com/users/mcauto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-04T08:39:29Z", "updated_at": "2019-06-19T02:48:03Z", "closed_at": "2019-06-07T00:21:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I love this library!\r\n\r\nI want to mock session.add()...\r\n\r\n```python\r\n[\r\n    mock.call.add(Model_instance),\r\n    mock.call.commit()\r\n]\r\n```\r\nhelp me plz..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miki725/alchemy-mock/issues/13", "repository_url": "https://api.github.com/repos/miki725/alchemy-mock", "labels_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/13/comments", "events_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/13/events", "html_url": "https://github.com/miki725/alchemy-mock/issues/13", "id": 443500280, "node_id": "MDU6SXNzdWU0NDM1MDAyODA=", "number": 13, "title": "Issue with getting data twice.", "user": {"login": "dtracers", "id": 1933836, "node_id": "MDQ6VXNlcjE5MzM4MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1933836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtracers", "html_url": "https://github.com/dtracers", "followers_url": "https://api.github.com/users/dtracers/followers", "following_url": "https://api.github.com/users/dtracers/following{/other_user}", "gists_url": "https://api.github.com/users/dtracers/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtracers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtracers/subscriptions", "organizations_url": "https://api.github.com/users/dtracers/orgs", "repos_url": "https://api.github.com/users/dtracers/repos", "events_url": "https://api.github.com/users/dtracers/events{/privacy}", "received_events_url": "https://api.github.com/users/dtracers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-13T16:48:10Z", "updated_at": "2019-06-18T07:50:33Z", "closed_at": "2019-06-18T02:59:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have this code early on in the setup where it basically checks that a certain piece of data exists:\r\n\r\n\r\n```\r\n group_name_query = _session.query(Group).filter(Group.name == group_name)\r\n            if not _session.query(group_name_query.exists()).scalar():\r\n                group = Group(name=group_name)\r\n                _session.add(group)\r\n```\r\n\r\nAnd this works just fine but later on I go over it again this time retrieving the values:\r\n\r\n```\r\nfor group_name in groups_to_add:\r\n            value = _session.query(Group).filter(Group.name == group_name).first()\r\n            i = value.id\r\n            ids[group_name] = i\r\n            ids_to_group[i] = group_name\r\n```\r\n\r\nNo matter what I do this second time the mocked result will always be empty\r\nIs there a way to add something so that it is returned on a second match?\r\nI know in your example docs it does not return again and is empty.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miki725/alchemy-mock/issues/12", "repository_url": "https://api.github.com/repos/miki725/alchemy-mock", "labels_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/12/comments", "events_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/12/events", "html_url": "https://github.com/miki725/alchemy-mock/issues/12", "id": 443498935, "node_id": "MDU6SXNzdWU0NDM0OTg5MzU=", "number": 12, "title": "add py37 to travis", "user": {"login": "miki725", "id": 932940, "node_id": "MDQ6VXNlcjkzMjk0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/932940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miki725", "html_url": "https://github.com/miki725", "followers_url": "https://api.github.com/users/miki725/followers", "following_url": "https://api.github.com/users/miki725/following{/other_user}", "gists_url": "https://api.github.com/users/miki725/gists{/gist_id}", "starred_url": "https://api.github.com/users/miki725/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miki725/subscriptions", "organizations_url": "https://api.github.com/users/miki725/orgs", "repos_url": "https://api.github.com/users/miki725/repos", "events_url": "https://api.github.com/users/miki725/events{/privacy}", "received_events_url": "https://api.github.com/users/miki725/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-13T16:44:52Z", "updated_at": "2019-05-13T20:38:35Z", "closed_at": "2019-05-13T20:38:35Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/miki725/alchemy-mock/issues/8", "repository_url": "https://api.github.com/repos/miki725/alchemy-mock", "labels_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/8/comments", "events_url": "https://api.github.com/repos/miki725/alchemy-mock/issues/8/events", "html_url": "https://github.com/miki725/alchemy-mock/issues/8", "id": 426908044, "node_id": "MDU6SXNzdWU0MjY5MDgwNDQ=", "number": 8, "title": "Failing in Python 3.6.8", "user": {"login": "fpozzobon", "id": 12074690, "node_id": "MDQ6VXNlcjEyMDc0Njkw", "avatar_url": "https://avatars3.githubusercontent.com/u/12074690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fpozzobon", "html_url": "https://github.com/fpozzobon", "followers_url": "https://api.github.com/users/fpozzobon/followers", "following_url": "https://api.github.com/users/fpozzobon/following{/other_user}", "gists_url": "https://api.github.com/users/fpozzobon/gists{/gist_id}", "starred_url": "https://api.github.com/users/fpozzobon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fpozzobon/subscriptions", "organizations_url": "https://api.github.com/users/fpozzobon/orgs", "repos_url": "https://api.github.com/users/fpozzobon/repos", "events_url": "https://api.github.com/users/fpozzobon/events{/privacy}", "received_events_url": "https://api.github.com/users/fpozzobon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 802404948, "node_id": "MDU6TGFiZWw4MDI0MDQ5NDg=", "url": "https://api.github.com/repos/miki725/alchemy-mock/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-03-29T10:02:40Z", "updated_at": "2019-05-13T16:50:06Z", "closed_at": "2019-05-13T16:46:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am getting the following error when trying to execute in 3.6.8 : \r\n```    \r\n def __eq__(self, other):\r\n        _other = list(other)\r\n        _other[-2] = UnorderedTuple(other[-2])\r\n>       other = Call(tuple(_other), **vars(other))\r\nE       TypeError: __new__() got an unexpected keyword argument '_mock_name'\r\n\r\n../../.local/share/virtualenvs/jobsite-api-sGWrxjA3/lib/python3.6/site-packages/alchemy_mock/mocking.py:57: TypeError \r\n```\r\n", "performed_via_github_app": null, "score": 1.0}]}