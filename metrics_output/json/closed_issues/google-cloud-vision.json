{"total_count": 10, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/googleapis/python-vision/issues/34", "repository_url": "https://api.github.com/repos/googleapis/python-vision", "labels_url": "https://api.github.com/repos/googleapis/python-vision/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-vision/issues/34/comments", "events_url": "https://api.github.com/repos/googleapis/python-vision/issues/34/events", "html_url": "https://github.com/googleapis/python-vision/issues/34", "id": 664275992, "node_id": "MDU6SXNzdWU2NjQyNzU5OTI=", "number": 34, "title": "AttributeError: partially initialized module 'google.cloud.vision' has no attribute 'ImageAnnotatorClient' (most likely due to a circular import)", "user": {"login": "biographie", "id": 764003, "node_id": "MDQ6VXNlcjc2NDAwMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/764003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/biographie", "html_url": "https://github.com/biographie", "followers_url": "https://api.github.com/users/biographie/followers", "following_url": "https://api.github.com/users/biographie/following{/other_user}", "gists_url": "https://api.github.com/users/biographie/gists{/gist_id}", "starred_url": "https://api.github.com/users/biographie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/biographie/subscriptions", "organizations_url": "https://api.github.com/users/biographie/orgs", "repos_url": "https://api.github.com/users/biographie/repos", "events_url": "https://api.github.com/users/biographie/events{/privacy}", "received_events_url": "https://api.github.com/users/biographie/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814847365, "node_id": "MDU6TGFiZWwxODE0ODQ3MzY1", "url": "https://api.github.com/repos/googleapis/python-vision/labels/api:%20vision", "name": "api: vision", "color": "f42087", "default": false, "description": "Issues related to the Cloud Vision API API."}, {"id": 1814848506, "node_id": "MDU6TGFiZWwxODE0ODQ4NTA2", "url": "https://api.github.com/repos/googleapis/python-vision/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": {"login": "munkhuushmgl", "id": 45373284, "node_id": "MDQ6VXNlcjQ1MzczMjg0", "avatar_url": "https://avatars0.githubusercontent.com/u/45373284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munkhuushmgl", "html_url": "https://github.com/munkhuushmgl", "followers_url": "https://api.github.com/users/munkhuushmgl/followers", "following_url": "https://api.github.com/users/munkhuushmgl/following{/other_user}", "gists_url": "https://api.github.com/users/munkhuushmgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/munkhuushmgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munkhuushmgl/subscriptions", "organizations_url": "https://api.github.com/users/munkhuushmgl/orgs", "repos_url": "https://api.github.com/users/munkhuushmgl/repos", "events_url": "https://api.github.com/users/munkhuushmgl/events{/privacy}", "received_events_url": "https://api.github.com/users/munkhuushmgl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "munkhuushmgl", "id": 45373284, "node_id": "MDQ6VXNlcjQ1MzczMjg0", "avatar_url": "https://avatars0.githubusercontent.com/u/45373284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munkhuushmgl", "html_url": "https://github.com/munkhuushmgl", "followers_url": "https://api.github.com/users/munkhuushmgl/followers", "following_url": "https://api.github.com/users/munkhuushmgl/following{/other_user}", "gists_url": "https://api.github.com/users/munkhuushmgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/munkhuushmgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munkhuushmgl/subscriptions", "organizations_url": "https://api.github.com/users/munkhuushmgl/orgs", "repos_url": "https://api.github.com/users/munkhuushmgl/repos", "events_url": "https://api.github.com/users/munkhuushmgl/events{/privacy}", "received_events_url": "https://api.github.com/users/munkhuushmgl/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-07-23T08:00:03Z", "updated_at": "2020-08-13T21:32:55Z", "closed_at": "2020-08-13T21:32:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just installed google-cloud-vision via conda using the following command\r\nconda install google-cloud-vision\r\nand I'm Getting the above error\r\n#### Environment details\r\n\r\n  - OS type and version: \r\n  - Python version: 3.8.5\r\n  - conda version: conda install google-cloud-vision\r\n  - `google-cloud-vision` version: 0.42.0\r\n\r\n#### Steps to reproduce\r\n\r\npython x.py \r\n#### Code example\r\nx.py\r\n```python\r\nfrom google.cloud import vision\r\nclient = vision.ImageAnnotatorClient()\r\n\r\nAttributeError: module 'google.cloud.vision' has no attribute 'ImageAnnotatorClient'\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-vision/issues/31", "repository_url": "https://api.github.com/repos/googleapis/python-vision", "labels_url": "https://api.github.com/repos/googleapis/python-vision/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-vision/issues/31/comments", "events_url": "https://api.github.com/repos/googleapis/python-vision/issues/31/events", "html_url": "https://github.com/googleapis/python-vision/issues/31", "id": 646916388, "node_id": "MDU6SXNzdWU2NDY5MTYzODg=", "number": 31, "title": "ImageAnnotatorClient.text_detection retry bug!", "user": {"login": "TurnrDev", "id": 11667059, "node_id": "MDQ6VXNlcjExNjY3MDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/11667059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurnrDev", "html_url": "https://github.com/TurnrDev", "followers_url": "https://api.github.com/users/TurnrDev/followers", "following_url": "https://api.github.com/users/TurnrDev/following{/other_user}", "gists_url": "https://api.github.com/users/TurnrDev/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurnrDev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurnrDev/subscriptions", "organizations_url": "https://api.github.com/users/TurnrDev/orgs", "repos_url": "https://api.github.com/users/TurnrDev/repos", "events_url": "https://api.github.com/users/TurnrDev/events{/privacy}", "received_events_url": "https://api.github.com/users/TurnrDev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814847365, "node_id": "MDU6TGFiZWwxODE0ODQ3MzY1", "url": "https://api.github.com/repos/googleapis/python-vision/labels/api:%20vision", "name": "api: vision", "color": "f42087", "default": false, "description": "Issues related to the Cloud Vision API API."}, {"id": 1814848523, "node_id": "MDU6TGFiZWwxODE0ODQ4NTIz", "url": "https://api.github.com/repos/googleapis/python-vision/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814848416, "node_id": "MDU6TGFiZWwxODE0ODQ4NDE2", "url": "https://api.github.com/repos/googleapis/python-vision/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "munkhuushmgl", "id": 45373284, "node_id": "MDQ6VXNlcjQ1MzczMjg0", "avatar_url": "https://avatars0.githubusercontent.com/u/45373284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munkhuushmgl", "html_url": "https://github.com/munkhuushmgl", "followers_url": "https://api.github.com/users/munkhuushmgl/followers", "following_url": "https://api.github.com/users/munkhuushmgl/following{/other_user}", "gists_url": "https://api.github.com/users/munkhuushmgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/munkhuushmgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munkhuushmgl/subscriptions", "organizations_url": "https://api.github.com/users/munkhuushmgl/orgs", "repos_url": "https://api.github.com/users/munkhuushmgl/repos", "events_url": "https://api.github.com/users/munkhuushmgl/events{/privacy}", "received_events_url": "https://api.github.com/users/munkhuushmgl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "munkhuushmgl", "id": 45373284, "node_id": "MDQ6VXNlcjQ1MzczMjg0", "avatar_url": "https://avatars0.githubusercontent.com/u/45373284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munkhuushmgl", "html_url": "https://github.com/munkhuushmgl", "followers_url": "https://api.github.com/users/munkhuushmgl/followers", "following_url": "https://api.github.com/users/munkhuushmgl/following{/other_user}", "gists_url": "https://api.github.com/users/munkhuushmgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/munkhuushmgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munkhuushmgl/subscriptions", "organizations_url": "https://api.github.com/users/munkhuushmgl/orgs", "repos_url": "https://api.github.com/users/munkhuushmgl/repos", "events_url": "https://api.github.com/users/munkhuushmgl/events{/privacy}", "received_events_url": "https://api.github.com/users/munkhuushmgl/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-06-28T13:08:18Z", "updated_at": "2020-08-13T23:28:29Z", "closed_at": "2020-08-13T21:53:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for stopping by to let us know something could be better!\r\n\r\n**PLEASE READ**: If you have a support contract with Google, please create an issue in the [support console](https://cloud.google.com/support/) instead of filing on GitHub. This will ensure a timely response.\r\n\r\nPlease run down the following list and make sure you've tried the usual \"quick fixes\":\r\n\r\n  - Search the issues already opened: https://github.com/googleapis/python-vision/issues\r\n  - Search StackOverflow: https://stackoverflow.com/questions/tagged/google-cloud-platform+python\r\n\r\nIf you are still having issues, please be sure to include as much information as possible:\r\n\r\n#### Environment details\r\n\r\n  - OS type and version: Arch Linux\r\n  - Python version: 3.8.3\r\n  - pip version: 20.1.1\r\n  - `google-cloud-vision` version: 1.0.0\r\n\r\n#### Steps to reproduce\r\n\r\n  1. Try to call `ImageAnnotatorClient.text_detection(image, retry=5)\r\n  2. Get error that int object is not callable. Something somewhere is doing retry()\r\n\r\n#### Code example\r\n[See here](https://github.com/TrainerDex/PogoOCR/blob/9d02a1642773c284feec56b8573c8176d5e94aa5/PogoOCR/cloudvision.py)\r\n```python\r\nfrom google.cloud import vision\r\nfrom google.cloud.vision import types\r\nfrom google.oauth2 import service_account\r\n\r\nclass Image:\r\n\t\r\n\tdef __init__(self, service_file, image_content=None, image_uri=None):\r\n\t\tself.google = vision.ImageAnnotatorClient(credentials=service_account.Credentials.from_service_account_file(\r\n\t\t\tservice_file))\r\n\t\t\r\n\t\tself.image = types.Image()\r\n\t\tif image_content:\r\n\t\t\tself.image.content = image_content\r\n\t\telif image_uri:\r\n\t\t\tself.image.source.image_uri = image_uri\r\n\t\telse:\r\n\t\t\traise AttributeError('Please define either image_uri or image_content')\r\n\t\r\n\tdef get_text(self):\r\n\t\tprint(\"Requesting TEXT_DETECTION from Google Cloud API. This will cost us 0.0015 USD.\")\r\n\t\tresponse = self.google.text_detection(image=self.image, retry=5)\r\n\t\tself.text_found = response.text_annotations\r\n```\r\n\r\n#### Stack trace\r\n```\r\n_________ test_answer[dutch_xp-https://cdn.discordapp.com/attachments/370708840850653184/726727557453447238/Screenshot_20200628-111544_Pokmon_GO.jpg-224399847] _________\r\n\r\ntest_name = 'dutch_xp', input = 'https://cdn.discordapp.com/attachments/370708840850653184/726727557453447238/Screenshot_20200628-111544_Pokmon_GO.jpg'\r\nexpected = 224399847\r\n\r\n    @pytest.mark.parametrize(\"test_name,input,expected\", options)\r\n    def test_answer(test_name,input,expected):\r\n>       assert func(input) == expected\r\n\r\ntest_profileself_total_xp.py:27: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\ntest_profileself_total_xp.py:6: in func\r\n    foo.get_text()\r\nPogoOCR/types.py:92: in get_text\r\n    super().get_text()\r\nPogoOCR/cloudvision.py:21: in get_text\r\n    response = self.google.text_detection(image=self.image, retry=5)\r\nenv/lib/python3.8/site-packages/google/cloud/vision_helpers/decorators.py:101: in inner\r\n    response = self.annotate_image(request, retry=retry, timeout=timeout)\r\nenv/lib/python3.8/site-packages/google/cloud/vision_helpers/__init__.py:72: in annotate_image\r\n    r = self.batch_annotate_images([request], retry=retry, timeout=timeout)\r\nenv/lib/python3.8/site-packages/google/cloud/vision_v1/gapic/image_annotator_client.py:273: in batch_annotate_images\r\n    return self._inner_api_calls[\"batch_annotate_images\"](\r\nenv/lib/python3.8/site-packages/google/api_core/gapic_v1/method.py:130: in __call__\r\n    wrapped_func = _apply_decorators(self._target, [retry, timeout_])\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nfunc = <function _wrap_unary_errors.<locals>.error_remapped_callable at 0x7f12e75ee040>, decorators = <filter object at 0x7f12e75b6460>\r\n\r\n    def _apply_decorators(func, decorators):\r\n        \"\"\"Apply a list of decorators to a given function.\r\n    \r\n        ``decorators`` may contain items that are ``None`` or ``False`` which will\r\n        be ignored.\r\n        \"\"\"\r\n        decorators = filter(_is_not_none_or_false, reversed(decorators))\r\n    \r\n        for decorator in decorators:\r\n>           func = decorator(func)\r\nE           TypeError: 'int' object is not callable\r\n\r\nenv/lib/python3.8/site-packages/google/api_core/gapic_v1/method.py:45: TypeError\r\n\r\n```\r\n\r\nMaking sure to follow these steps will guarantee the quickest resolution possible.\r\n\r\nThanks!\r\n\r\n\r\nP.S Your docs are unreadable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-vision/issues/28", "repository_url": "https://api.github.com/repos/googleapis/python-vision", "labels_url": "https://api.github.com/repos/googleapis/python-vision/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-vision/issues/28/comments", "events_url": "https://api.github.com/repos/googleapis/python-vision/issues/28/events", "html_url": "https://github.com/googleapis/python-vision/issues/28", "id": 642398726, "node_id": "MDU6SXNzdWU2NDIzOTg3MjY=", "number": 28, "title": "Synthesis failed for python-vision", "user": {"login": "yoshi-automation", "id": 44816363, "node_id": "MDQ6VXNlcjQ0ODE2MzYz", "avatar_url": "https://avatars1.githubusercontent.com/u/44816363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshi-automation", "html_url": "https://github.com/yoshi-automation", "followers_url": "https://api.github.com/users/yoshi-automation/followers", "following_url": "https://api.github.com/users/yoshi-automation/following{/other_user}", "gists_url": "https://api.github.com/users/yoshi-automation/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshi-automation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshi-automation/subscriptions", "organizations_url": "https://api.github.com/users/yoshi-automation/orgs", "repos_url": "https://api.github.com/users/yoshi-automation/repos", "events_url": "https://api.github.com/users/yoshi-automation/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshi-automation/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814847365, "node_id": "MDU6TGFiZWwxODE0ODQ3MzY1", "url": "https://api.github.com/repos/googleapis/python-vision/labels/api:%20vision", "name": "api: vision", "color": "f42087", "default": false, "description": "Issues related to the Cloud Vision API API."}, {"id": 1859984778, "node_id": "MDU6TGFiZWwxODU5OTg0Nzc4", "url": "https://api.github.com/repos/googleapis/python-vision/labels/autosynth%20failure", "name": "autosynth failure", "color": "ededed", "default": false, "description": null}, {"id": 1814848547, "node_id": "MDU6TGFiZWwxODE0ODQ4NTQ3", "url": "https://api.github.com/repos/googleapis/python-vision/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": "Medium priority. Will be fixed prior to next release."}, {"id": 1814848416, "node_id": "MDU6TGFiZWwxODE0ODQ4NDE2", "url": "https://api.github.com/repos/googleapis/python-vision/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-20T15:42:49Z", "updated_at": "2020-06-25T21:54:30Z", "closed_at": "2020-06-25T21:54:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello! Autosynth couldn't regenerate python-vision. :broken_heart:\n\nHere's the output from running `synth.py`:\n\n```\nuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\n - <builtin>\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:123:1\nLoading: 0 packages loaded\nINFO: SHA256 (https://github.com/grpc/grpc-java/archive/v1.27.2.zip) = 92ffb4391f847e02e115933a761e243dd1423f3fcafdc9b7ae0327eca102d76b\nDEBUG: Rule 'io_grpc_grpc_java' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"92ffb4391f847e02e115933a761e243dd1423f3fcafdc9b7ae0327eca102d76b\"\nDEBUG: Call stack for the definition of repository 'io_grpc_grpc_java' which is a http_archive (rule definition at /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\n - <builtin>\n - /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/com_google_api_gax_java/repositories.bzl:114:5\n - /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/com_google_api_gax_java/repositories.bzl:60:5\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:138:1\nLoading: 0 packages loaded\nINFO: SHA256 (https://github.com/googleapis/gapic-generator/archive/a59457d24bd6f3c962c8e699c708121c928eedc8.zip) = 843bcf262d44f6a2c1c131844ff8ef40daf95dd3b7c95dd761656f9e010d06d7\nDEBUG: Rule 'com_google_api_codegen' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"843bcf262d44f6a2c1c131844ff8ef40daf95dd3b7c95dd761656f9e010d06d7\"\nDEBUG: Call stack for the definition of repository 'com_google_api_codegen' which is a http_archive (rule definition at /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\n - <builtin>\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:62:1\nLoading: 0 packages loaded\nINFO: SHA256 (https://github.com/googleapis/protoc-java-resource-names-plugin/archive/64dafb71ea9a385a8da89989f0b9dab925bf4610.zip) = f475903e83904dbbe3651abae8cbf57ed804960a0dadd9cbde41b746db645052\nDEBUG: Rule 'com_google_protoc_java_resource_names_plugin' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"f475903e83904dbbe3651abae8cbf57ed804960a0dadd9cbde41b746db645052\"\nDEBUG: Call stack for the definition of repository 'com_google_protoc_java_resource_names_plugin' which is a http_archive (rule definition at /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\n - <builtin>\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:155:1\nINFO: SHA256 (https://github.com/googleapis/protoc-docs-plugin/archive/b2502d56b5ec2d47e063976da773206af295362d.zip) = 765ec120bb165ae98c3bae78705d2a127e64016e59738552e909fc8b11d06338\nDEBUG: Rule 'protoc_docs_plugin' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"765ec120bb165ae98c3bae78705d2a127e64016e59738552e909fc8b11d06338\"\nDEBUG: Call stack for the definition of repository 'protoc_docs_plugin' which is a http_archive (rule definition at /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\n - <builtin>\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:179:1\nLoading: 0 packages loaded\nINFO: SHA256 (https://github.com/bazelbuild/bazel-gazelle/releases/download/v0.20.0/bazel-gazelle-v0.20.0.tar.gz) = d8c45ee70ec39a57e7a05e5027c32b1576cc7f16d9dd37135b0eddde45cf1b10\nDEBUG: Rule 'bazel_gazelle' indicated that a canonical reproducible form can be obtained by modifying arguments sha256 = \"d8c45ee70ec39a57e7a05e5027c32b1576cc7f16d9dd37135b0eddde45cf1b10\"\nDEBUG: Call stack for the definition of repository 'bazel_gazelle' which is a http_archive (rule definition at /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/bazel_tools/tools/build_defs/repo/http.bzl:296:16):\n - <builtin>\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:200:1\nAnalyzing: target //google/cloud/vision/v1:vision-v1-py (1 packages loaded, 0 targets configured)\nINFO: Call stack for the definition of repository 'go_sdk' which is a _go_download_sdk (rule definition at /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/io_bazel_rules_go/go/private/sdk.bzl:79:20):\n - <builtin>\n - /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/io_bazel_rules_go/go/private/sdk.bzl:92:5\n - /home/kbuilder/.cache/bazel/_bazel_kbuilder/a732f932c2cbeb7e37e1543f189a2a73/external/io_bazel_rules_go/go/private/sdk.bzl:260:13\n - /home/kbuilder/.cache/synthtool/googleapis/WORKSPACE:81:1\nERROR: While resolving toolchains for target @pypi_black//:black: invalid registered toolchain '@gapic_generator_python//:pyenv3_toolchain': no such package '@gapic_generator_python//': The repository '@gapic_generator_python' could not be resolved\nERROR: Analysis of target '//google/cloud/vision/v1:vision-v1-py' failed; build aborted: invalid registered toolchain '@gapic_generator_python//:pyenv3_toolchain': no such package '@gapic_generator_python//': The repository '@gapic_generator_python' could not be resolved\nINFO: Elapsed time: 6.549s\nINFO: 0 processes.\nFAILED: Build did NOT complete successfully (21 packages loaded, 22 targets configured)\nFAILED: Build did NOT complete successfully (21 packages loaded, 22 targets configured)\n\n2020-06-20 08:42:46,315 synthtool [DEBUG] > Wrote metadata to synth.metadata.\nTraceback (most recent call last):\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/tmpfs/src/github/synthtool/synthtool/__main__.py\", line 102, in <module>\n    main()\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 829, in __call__\n    return self.main(*args, **kwargs)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 782, in main\n    rv = self.invoke(ctx)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 1066, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/tmpfs/src/github/synthtool/env/lib/python3.6/site-packages/click/core.py\", line 610, in invoke\n    return callback(*args, **kwargs)\n  File \"/tmpfs/src/github/synthtool/synthtool/__main__.py\", line 94, in main\n    spec.loader.exec_module(synth_module)  # type: ignore\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\n  File \"/home/kbuilder/.cache/synthtool/python-vision/synth.py\", line 33, in <module>\n    include_protos=True\n  File \"/tmpfs/src/github/synthtool/synthtool/gcp/gapic_bazel.py\", line 46, in py_library\n    return self._generate_code(service, version, \"python\", **kwargs)\n  File \"/tmpfs/src/github/synthtool/synthtool/gcp/gapic_bazel.py\", line 180, in _generate_code\n    shell.run(bazel_run_args)\n  File \"/tmpfs/src/github/synthtool/synthtool/shell.py\", line 39, in run\n    raise exc\n  File \"/tmpfs/src/github/synthtool/synthtool/shell.py\", line 33, in run\n    encoding=\"utf-8\",\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/subprocess.py\", line 438, in run\n    output=stdout, stderr=stderr)\nsubprocess.CalledProcessError: Command '['bazel', '--max_idle_secs=60', 'build', '//google/cloud/vision/v1:vision-v1-py']' returned non-zero exit status 1.\n2020-06-20 08:42:46,358 autosynth [ERROR] > Synthesis failed\n2020-06-20 08:42:46,359 autosynth [DEBUG] > Running: git reset --hard HEAD\nHEAD is now at b33fa88 docs: added note about not supported device (#24)\n2020-06-20 08:42:46,364 autosynth [DEBUG] > Running: git checkout autosynth-self\nSwitched to branch 'autosynth-self'\n2020-06-20 08:42:46,370 autosynth [ERROR] > Command '['/tmpfs/src/github/synthtool/env/bin/python3', '-m', 'synthtool', '--metadata', 'synth.metadata', 'synth.py', '--']' returned non-zero exit status 1.\n2020-06-20 08:42:46,576 autosynth [INFO] > PR already exists: https://github.com/googleapis/python-vision/pull/27\n2020-06-20 08:42:46,576 autosynth [DEBUG] > Running: git clean -fdx\nRemoving __pycache__/\nRemoving google/__pycache__/\nTraceback (most recent call last):\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 649, in <module>\n    main()\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 506, in main\n    return _inner_main(temp_dir)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 629, in _inner_main\n    commit_count = synthesize_loop(x, multiple_prs, change_pusher, synthesizer)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 367, in synthesize_loop\n    synthesize_inner_loop(fork, synthesizer)\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 411, in synthesize_inner_loop\n    synthesizer, len(toolbox.versions) - 1\n  File \"/tmpfs/src/github/synthtool/autosynth/synth.py\", line 266, in synthesize_version_in_new_branch\n    synthesizer.synthesize(synth_log_path, self.environ)\n  File \"/tmpfs/src/github/synthtool/autosynth/synthesizer.py\", line 120, in synthesize\n    synth_proc.check_returncode()  # Raise an exception.\n  File \"/home/kbuilder/.pyenv/versions/3.6.9/lib/python3.6/subprocess.py\", line 389, in check_returncode\n    self.stderr)\nsubprocess.CalledProcessError: Command '['/tmpfs/src/github/synthtool/env/bin/python3', '-m', 'synthtool', '--metadata', 'synth.metadata', 'synth.py', '--']' returned non-zero exit status 1.\n\n```\n\nGoogle internal developers can see the full log [here](http://sponge2/results/invocations/e93a3b66-0b9d-4731-8049-5d33389af1dc/targets/github%2Fsynthtool;config=default/tests;query=python-vision;failed=false).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-vision/issues/23", "repository_url": "https://api.github.com/repos/googleapis/python-vision", "labels_url": "https://api.github.com/repos/googleapis/python-vision/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-vision/issues/23/comments", "events_url": "https://api.github.com/repos/googleapis/python-vision/issues/23/events", "html_url": "https://github.com/googleapis/python-vision/issues/23", "id": 611724997, "node_id": "MDU6SXNzdWU2MTE3MjQ5OTc=", "number": 23, "title": "google.api_core.exceptions.ServiceUnavailable: 503 Getting metadata from plugin failed with error: ('invalid_grant: Invalid JWT Signature.', '{\"error\":\"invalid_grant\",\"error_description\":\"Invalid JWT Signature.\"}')", "user": {"login": "sowmyakavali", "id": 51850438, "node_id": "MDQ6VXNlcjUxODUwNDM4", "avatar_url": "https://avatars3.githubusercontent.com/u/51850438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sowmyakavali", "html_url": "https://github.com/sowmyakavali", "followers_url": "https://api.github.com/users/sowmyakavali/followers", "following_url": "https://api.github.com/users/sowmyakavali/following{/other_user}", "gists_url": "https://api.github.com/users/sowmyakavali/gists{/gist_id}", "starred_url": "https://api.github.com/users/sowmyakavali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sowmyakavali/subscriptions", "organizations_url": "https://api.github.com/users/sowmyakavali/orgs", "repos_url": "https://api.github.com/users/sowmyakavali/repos", "events_url": "https://api.github.com/users/sowmyakavali/events{/privacy}", "received_events_url": "https://api.github.com/users/sowmyakavali/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814848640, "node_id": "MDU6TGFiZWwxODE0ODQ4NjQw", "url": "https://api.github.com/repos/googleapis/python-vision/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": "This issue needs some love."}, {"id": 1814847365, "node_id": "MDU6TGFiZWwxODE0ODQ3MzY1", "url": "https://api.github.com/repos/googleapis/python-vision/labels/api:%20vision", "name": "api: vision", "color": "f42087", "default": false, "description": "Issues related to the Cloud Vision API API."}, {"id": 1814848690, "node_id": "MDU6TGFiZWwxODE0ODQ4Njkw", "url": "https://api.github.com/repos/googleapis/python-vision/labels/triage%20me", "name": "triage me", "color": "FF69B4", "default": false, "description": "I really want to be triaged."}], "state": "closed", "locked": false, "assignee": {"login": "munkhuushmgl", "id": 45373284, "node_id": "MDQ6VXNlcjQ1MzczMjg0", "avatar_url": "https://avatars0.githubusercontent.com/u/45373284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munkhuushmgl", "html_url": "https://github.com/munkhuushmgl", "followers_url": "https://api.github.com/users/munkhuushmgl/followers", "following_url": "https://api.github.com/users/munkhuushmgl/following{/other_user}", "gists_url": "https://api.github.com/users/munkhuushmgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/munkhuushmgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munkhuushmgl/subscriptions", "organizations_url": "https://api.github.com/users/munkhuushmgl/orgs", "repos_url": "https://api.github.com/users/munkhuushmgl/repos", "events_url": "https://api.github.com/users/munkhuushmgl/events{/privacy}", "received_events_url": "https://api.github.com/users/munkhuushmgl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "munkhuushmgl", "id": 45373284, "node_id": "MDQ6VXNlcjQ1MzczMjg0", "avatar_url": "https://avatars0.githubusercontent.com/u/45373284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munkhuushmgl", "html_url": "https://github.com/munkhuushmgl", "followers_url": "https://api.github.com/users/munkhuushmgl/followers", "following_url": "https://api.github.com/users/munkhuushmgl/following{/other_user}", "gists_url": "https://api.github.com/users/munkhuushmgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/munkhuushmgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munkhuushmgl/subscriptions", "organizations_url": "https://api.github.com/users/munkhuushmgl/orgs", "repos_url": "https://api.github.com/users/munkhuushmgl/repos", "events_url": "https://api.github.com/users/munkhuushmgl/events{/privacy}", "received_events_url": "https://api.github.com/users/munkhuushmgl/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-05-04T04:08:10Z", "updated_at": "2020-05-15T21:11:30Z", "closed_at": "2020-05-15T21:11:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "google-api-core          1.17.0\r\ngoogle-auth              1.14.1\r\ngoogle-cloud-vision      1.0.0\r\npython 3.6.9\r\nand my os is ubuntu 18.04\r\ni am trying to extract text from images \r\nwhile i am running this code\r\n\r\n```\r\n`import` os, io\r\nfrom google.cloud import vision\r\nimport pandas as pd\r\nfrom google.oauth2 import service_account\r\ncredentials = service_account.Credentials. from_service_account_file('silver-catwalk-276005-0d6c98a26db3.json')\r\nclient = vision.ImageAnnotatorClient(credentials=credentials)\r\nfile_name = 'img0.jpg'  \r\nimage_path = f'/home/apiiit-rkv/Desktop/Task, I CAN/codes/{file_name}'\r\n\r\nwith io.open(image_path, 'rb') as image_file:\r\n    content = image_file.read()\r\nimage = vision.types.Image(content=content)\r\nresponse = client.text_detection(image=image)  # returns TextAnnotation\r\ndf = pd.DataFrame(columns=['locale', 'description'])\r\ntexts = response.text_annotations\r\nfor text in texts:\r\n    df = df.append(\r\n        dict(\r\n            locale=text.locale,\r\n            description=text.description\r\n        ),\r\n        ignore_index=True\r\n    )\r\nprint(df['description'][0])\r\n```\r\n\r\n\r\nit throwing this error\r\n ```\r\nTraceback (most recent call last):\r\n  File \"/home/apiiit-rkv/.local/lib/python3.6/site-packages/google/api_core/grpc_helpers.py\", line 57, in error_remapped_callable\r\n    return callable_(*args, **kwargs)\r\n  File \"/home/apiiit-rkv/.local/lib/python3.6/site-packages/grpc/_channel.py\", line 826, in __call__\r\n    return _end_unary_response_blocking(state, call, False, None)\r\n  File \"/home/apiiit-rkv/.local/lib/python3.6/site-packages/grpc/_channel.py\", line 729, in _end_unary_response_blocking\r\n    raise _InactiveRpcError(state)\r\ngrpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\r\n\tstatus = StatusCode.UNAVAILABLE\r\n\tdetails = \"Getting metadata from plugin failed with error: ('invalid_grant: Invalid JWT Signature.', '{\"error\":\"invalid_grant\",\"error_description\":\"Invalid JWT Signature.\"}')\"\r\n\tdebug_error_string = \"{\"created\":\"@1588564948.414167046\",\"description\":\"Getting metadata from plugin failed with error: ('invalid_grant: Invalid JWT Signature.', '{\"error\":\"invalid_grant\",\"error_description\":\"Invalid JWT Signature.\"}')\",\"file\":\"src/core/lib/security/credentials/plugin/plugin_credentials.cc\",\"file_line\":79,\"grpc_status\":14}\"\r\n>\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"first_project_googleVision.py\", line 30, in <module>\r\n    response = client.text_detection(image=image)  # returns TextAnnotation\r\n  File \"/home/apiiit-rkv/.local/lib/python3.6/site-packages/google/cloud/vision_helpers/decorators.py\", line 101, in inner\r\n    response = self.annotate_image(request, retry=retry, timeout=timeout)\r\n  File \"/home/apiiit-rkv/.local/lib/python3.6/site-packages/google/cloud/vision_helpers/__init__.py\", line 72, in annotate_image\r\n    r = self.batch_annotate_images([request], retry=retry, timeout=timeout)\r\n  File \"/home/apiiit-rkv/.local/lib/python3.6/site-packages/google/cloud/vision_v1/gapic/image_annotator_client.py\", line 274, in batch_annotate_images\r\n    request, retry=retry, timeout=timeout, metadata=metadata\r\n  File \"/home/apiiit-rkv/.local/lib/python3.6/site-packages/google/api_core/gapic_v1/method.py\", line 143, in __call__\r\n    return wrapped_func(*args, **kwargs)\r\n  File \"/home/apiiit-rkv/.local/lib/python3.6/site-packages/google/api_core/grpc_helpers.py\", line 59, in error_remapped_callable\r\n    six.raise_from(exceptions.from_grpc_error(exc), exc)\r\n  File \"<string>\", line 3, in raise_from\r\ngoogle.api_core.exceptions.ServiceUnavailable: 503 Getting metadata from plugin failed with error: ('invalid_grant: Invalid JWT Signature.', '{\"error\":\"invalid_grant\",\"error_description\":\"Invalid JWT Signature.\"}')\r\n```\r\n\r\nplease help me to solve this error ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-vision/issues/18", "repository_url": "https://api.github.com/repos/googleapis/python-vision", "labels_url": "https://api.github.com/repos/googleapis/python-vision/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-vision/issues/18/comments", "events_url": "https://api.github.com/repos/googleapis/python-vision/issues/18/events", "html_url": "https://github.com/googleapis/python-vision/issues/18", "id": 596947395, "node_id": "MDU6SXNzdWU1OTY5NDczOTU=", "number": 18, "title": "Please Document if indeed Raspberry Pi ARMv6 is not supported", "user": {"login": "slowrunner", "id": 8950202, "node_id": "MDQ6VXNlcjg5NTAyMDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8950202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slowrunner", "html_url": "https://github.com/slowrunner", "followers_url": "https://api.github.com/users/slowrunner/followers", "following_url": "https://api.github.com/users/slowrunner/following{/other_user}", "gists_url": "https://api.github.com/users/slowrunner/gists{/gist_id}", "starred_url": "https://api.github.com/users/slowrunner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slowrunner/subscriptions", "organizations_url": "https://api.github.com/users/slowrunner/orgs", "repos_url": "https://api.github.com/users/slowrunner/repos", "events_url": "https://api.github.com/users/slowrunner/events{/privacy}", "received_events_url": "https://api.github.com/users/slowrunner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814848640, "node_id": "MDU6TGFiZWwxODE0ODQ4NjQw", "url": "https://api.github.com/repos/googleapis/python-vision/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": "This issue needs some love."}, {"id": 1814847365, "node_id": "MDU6TGFiZWwxODE0ODQ3MzY1", "url": "https://api.github.com/repos/googleapis/python-vision/labels/api:%20vision", "name": "api: vision", "color": "f42087", "default": false, "description": "Issues related to the Cloud Vision API API."}, {"id": 1814848690, "node_id": "MDU6TGFiZWwxODE0ODQ4Njkw", "url": "https://api.github.com/repos/googleapis/python-vision/labels/triage%20me", "name": "triage me", "color": "FF69B4", "default": false, "description": "I really want to be triaged."}], "state": "closed", "locked": false, "assignee": {"login": "munkhuushmgl", "id": 45373284, "node_id": "MDQ6VXNlcjQ1MzczMjg0", "avatar_url": "https://avatars0.githubusercontent.com/u/45373284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munkhuushmgl", "html_url": "https://github.com/munkhuushmgl", "followers_url": "https://api.github.com/users/munkhuushmgl/followers", "following_url": "https://api.github.com/users/munkhuushmgl/following{/other_user}", "gists_url": "https://api.github.com/users/munkhuushmgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/munkhuushmgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munkhuushmgl/subscriptions", "organizations_url": "https://api.github.com/users/munkhuushmgl/orgs", "repos_url": "https://api.github.com/users/munkhuushmgl/repos", "events_url": "https://api.github.com/users/munkhuushmgl/events{/privacy}", "received_events_url": "https://api.github.com/users/munkhuushmgl/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "munkhuushmgl", "id": 45373284, "node_id": "MDQ6VXNlcjQ1MzczMjg0", "avatar_url": "https://avatars0.githubusercontent.com/u/45373284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/munkhuushmgl", "html_url": "https://github.com/munkhuushmgl", "followers_url": "https://api.github.com/users/munkhuushmgl/followers", "following_url": "https://api.github.com/users/munkhuushmgl/following{/other_user}", "gists_url": "https://api.github.com/users/munkhuushmgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/munkhuushmgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/munkhuushmgl/subscriptions", "organizations_url": "https://api.github.com/users/munkhuushmgl/orgs", "repos_url": "https://api.github.com/users/munkhuushmgl/repos", "events_url": "https://api.github.com/users/munkhuushmgl/events{/privacy}", "received_events_url": "https://api.github.com/users/munkhuushmgl/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-09T00:49:56Z", "updated_at": "2020-05-12T02:57:27Z", "closed_at": "2020-05-12T02:57:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have spent days trying to debug an \"illegal instruction\" on import google.cloud.vision on a RaspberryPi ARMv6, making sure everything was updated, correct versions, etc. to no avail, and cannot find a statement if or if not Raspberry Pi ARMv6 is supported anywhere on cloud.google.com developer documentation.  There are some two year old frustrated user posts on the net saying \"no longer supported\" but nothing official anywhere.  Would have been nice under the Linux/Debian tutorials and \"Getting Started\" stuff.\r\n\r\nSince lots of Raspberry Pi with PiCamera users are trying google.cloud.vision, you all could really help them avoid buying the wrong Pi.\r\n\r\nIf not supported, could you all put  \"Note: Raspberry Pi ARMv6 is not supported by google.cloud\" in the README.md for python-vision?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-vision/issues/16", "repository_url": "https://api.github.com/repos/googleapis/python-vision", "labels_url": "https://api.github.com/repos/googleapis/python-vision/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-vision/issues/16/comments", "events_url": "https://api.github.com/repos/googleapis/python-vision/issues/16/events", "html_url": "https://github.com/googleapis/python-vision/issues/16", "id": 579543838, "node_id": "MDU6SXNzdWU1Nzk1NDM4Mzg=", "number": 16, "title": "AttributeError: module 'google.cloud.vision' has no attribute 'ImageAnnotatorClient'", "user": {"login": "pamruta", "id": 26434834, "node_id": "MDQ6VXNlcjI2NDM0ODM0", "avatar_url": "https://avatars0.githubusercontent.com/u/26434834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pamruta", "html_url": "https://github.com/pamruta", "followers_url": "https://api.github.com/users/pamruta/followers", "following_url": "https://api.github.com/users/pamruta/following{/other_user}", "gists_url": "https://api.github.com/users/pamruta/gists{/gist_id}", "starred_url": "https://api.github.com/users/pamruta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pamruta/subscriptions", "organizations_url": "https://api.github.com/users/pamruta/orgs", "repos_url": "https://api.github.com/users/pamruta/repos", "events_url": "https://api.github.com/users/pamruta/events{/privacy}", "received_events_url": "https://api.github.com/users/pamruta/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814848640, "node_id": "MDU6TGFiZWwxODE0ODQ4NjQw", "url": "https://api.github.com/repos/googleapis/python-vision/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": "This issue needs some love."}, {"id": 1814847365, "node_id": "MDU6TGFiZWwxODE0ODQ3MzY1", "url": "https://api.github.com/repos/googleapis/python-vision/labels/api:%20vision", "name": "api: vision", "color": "f42087", "default": false, "description": "Issues related to the Cloud Vision API API."}, {"id": 1814848690, "node_id": "MDU6TGFiZWwxODE0ODQ4Njkw", "url": "https://api.github.com/repos/googleapis/python-vision/labels/triage%20me", "name": "triage me", "color": "FF69B4", "default": false, "description": "I really want to be triaged."}], "state": "closed", "locked": false, "assignee": {"login": "busunkim96", "id": 8822365, "node_id": "MDQ6VXNlcjg4MjIzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8822365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/busunkim96", "html_url": "https://github.com/busunkim96", "followers_url": "https://api.github.com/users/busunkim96/followers", "following_url": "https://api.github.com/users/busunkim96/following{/other_user}", "gists_url": "https://api.github.com/users/busunkim96/gists{/gist_id}", "starred_url": "https://api.github.com/users/busunkim96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/busunkim96/subscriptions", "organizations_url": "https://api.github.com/users/busunkim96/orgs", "repos_url": "https://api.github.com/users/busunkim96/repos", "events_url": "https://api.github.com/users/busunkim96/events{/privacy}", "received_events_url": "https://api.github.com/users/busunkim96/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "busunkim96", "id": 8822365, "node_id": "MDQ6VXNlcjg4MjIzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8822365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/busunkim96", "html_url": "https://github.com/busunkim96", "followers_url": "https://api.github.com/users/busunkim96/followers", "following_url": "https://api.github.com/users/busunkim96/following{/other_user}", "gists_url": "https://api.github.com/users/busunkim96/gists{/gist_id}", "starred_url": "https://api.github.com/users/busunkim96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/busunkim96/subscriptions", "organizations_url": "https://api.github.com/users/busunkim96/orgs", "repos_url": "https://api.github.com/users/busunkim96/repos", "events_url": "https://api.github.com/users/busunkim96/events{/privacy}", "received_events_url": "https://api.github.com/users/busunkim96/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-03-11T03:07:48Z", "updated_at": "2020-04-15T00:01:37Z", "closed_at": "2020-04-15T00:01:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "This script was working fine just few days ago.. Suddenly giving an error now..\r\n\r\n# import google-cloud sdk\r\nfrom google.cloud import vision\r\nclient = vision.ImageAnnotatorClient()\r\n\r\nAttributeError: module 'google.cloud.vision' has no attribute 'ImageAnnotatorClient'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-vision/issues/9", "repository_url": "https://api.github.com/repos/googleapis/python-vision", "labels_url": "https://api.github.com/repos/googleapis/python-vision/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-vision/issues/9/comments", "events_url": "https://api.github.com/repos/googleapis/python-vision/issues/9/events", "html_url": "https://github.com/googleapis/python-vision/issues/9", "id": 568303216, "node_id": "MDU6SXNzdWU1NjgzMDMyMTY=", "number": 9, "title": "Synthesis failed for python-vision", "user": {"login": "yoshi-automation", "id": 44816363, "node_id": "MDQ6VXNlcjQ0ODE2MzYz", "avatar_url": "https://avatars1.githubusercontent.com/u/44816363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshi-automation", "html_url": "https://github.com/yoshi-automation", "followers_url": "https://api.github.com/users/yoshi-automation/followers", "following_url": "https://api.github.com/users/yoshi-automation/following{/other_user}", "gists_url": "https://api.github.com/users/yoshi-automation/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshi-automation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshi-automation/subscriptions", "organizations_url": "https://api.github.com/users/yoshi-automation/orgs", "repos_url": "https://api.github.com/users/yoshi-automation/repos", "events_url": "https://api.github.com/users/yoshi-automation/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshi-automation/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814848640, "node_id": "MDU6TGFiZWwxODE0ODQ4NjQw", "url": "https://api.github.com/repos/googleapis/python-vision/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": "This issue needs some love."}, {"id": 1814847365, "node_id": "MDU6TGFiZWwxODE0ODQ3MzY1", "url": "https://api.github.com/repos/googleapis/python-vision/labels/api:%20vision", "name": "api: vision", "color": "f42087", "default": false, "description": "Issues related to the Cloud Vision API API."}, {"id": 1859984778, "node_id": "MDU6TGFiZWwxODU5OTg0Nzc4", "url": "https://api.github.com/repos/googleapis/python-vision/labels/autosynth%20failure", "name": "autosynth failure", "color": "ededed", "default": false, "description": null}, {"id": 1814848547, "node_id": "MDU6TGFiZWwxODE0ODQ4NTQ3", "url": "https://api.github.com/repos/googleapis/python-vision/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": "Medium priority. Will be fixed prior to next release."}, {"id": 1814848416, "node_id": "MDU6TGFiZWwxODE0ODQ4NDE2", "url": "https://api.github.com/repos/googleapis/python-vision/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T13:34:43Z", "updated_at": "2020-04-07T13:11:03Z", "closed_at": "2020-02-20T23:25:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello! Autosynth couldn't regenerate python-vision. :broken_heart:\n\nHere's the output from running `synth.py`:\n\n```\nCloning into 'working_repo'...\nSwitched to branch 'autosynth'\nRunning synthtool\n['/tmpfs/src/git/autosynth/env/bin/python3', '-m', 'synthtool', 'synth.py', '--']\nsynthtool > Executing /tmpfs/src/git/autosynth/working_repo/synth.py.\nOn branch autosynth\nnothing to commit, working tree clean\nHEAD detached at FETCH_HEAD\nnothing to commit, working tree clean\nsynthtool > Ensuring dependencies.\nsynthtool > Pulling artman image.\nlatest: Pulling from googleapis/artman\nDigest: sha256:6aec9c34db0e4be221cdaf6faba27bdc07cfea846808b3d3b964dfce3a9a0f9b\nStatus: Image is up to date for googleapis/artman:latest\nsynthtool > Cloning googleapis.\nsynthtool > Running generator for google/cloud/vision/artman_vision_v1.yaml.\nsynthtool > Generated code into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1.\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1/web_detection.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1/google/cloud/vision_v1/proto/web_detection.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1/image_annotator.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1/google/cloud/vision_v1/proto/image_annotator.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1/product_search.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1/google/cloud/vision_v1/proto/product_search.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1/product_search_service.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1/google/cloud/vision_v1/proto/product_search_service.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1/geometry.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1/google/cloud/vision_v1/proto/geometry.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1/text_annotation.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1/google/cloud/vision_v1/proto/text_annotation.proto\nsynthtool > Placed proto files into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1/google/cloud/vision_v1/proto.\nsynthtool > Replaced 'from __future__ import absolute_import' in google/cloud/vision_v1/__init__.py.\nsynthtool > Replaced 'image_annotator_client' in google/cloud/vision_v1/__init__.py.\nsynthtool > Replaced 'from google.cloud.vision_v1.gapic import iac' in google/cloud/vision_v1/__init__.py.\nsynthtool > Replaced 'class ImageAnnotatorClient\\\\(iac.ImageAnnotatorClient\\\\):' in google/cloud/vision_v1/__init__.py.\nsynthtool > Running generator for google/cloud/vision/artman_vision_v1p1beta1.yaml.\nsynthtool > Generated code into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p1beta1.\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p1beta1/web_detection.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p1beta1/google/cloud/vision_v1p1beta1/proto/web_detection.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p1beta1/image_annotator.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p1beta1/google/cloud/vision_v1p1beta1/proto/image_annotator.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p1beta1/geometry.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p1beta1/google/cloud/vision_v1p1beta1/proto/geometry.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p1beta1/text_annotation.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p1beta1/google/cloud/vision_v1p1beta1/proto/text_annotation.proto\nsynthtool > Placed proto files into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p1beta1/google/cloud/vision_v1p1beta1/proto.\nsynthtool > Replaced 'from __future__ import absolute_import' in google/cloud/vision_v1p1beta1/__init__.py.\nsynthtool > Replaced 'image_annotator_client' in google/cloud/vision_v1p1beta1/__init__.py.\nsynthtool > Replaced 'from google.cloud.vision_v1p1beta1.gapic import iac' in google/cloud/vision_v1p1beta1/__init__.py.\nsynthtool > Replaced 'class ImageAnnotatorClient\\\\(iac.ImageAnnotatorClient\\\\):' in google/cloud/vision_v1p1beta1/__init__.py.\nsynthtool > Running generator for google/cloud/vision/artman_vision_v1p2beta1.yaml.\nsynthtool > Generated code into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p2beta1.\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p2beta1/web_detection.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p2beta1/google/cloud/vision_v1p2beta1/proto/web_detection.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p2beta1/image_annotator.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p2beta1/google/cloud/vision_v1p2beta1/proto/image_annotator.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p2beta1/geometry.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p2beta1/google/cloud/vision_v1p2beta1/proto/geometry.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p2beta1/text_annotation.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p2beta1/google/cloud/vision_v1p2beta1/proto/text_annotation.proto\nsynthtool > Placed proto files into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p2beta1/google/cloud/vision_v1p2beta1/proto.\nsynthtool > Replaced 'from __future__ import absolute_import' in google/cloud/vision_v1p2beta1/__init__.py.\nsynthtool > Replaced 'image_annotator_client' in google/cloud/vision_v1p2beta1/__init__.py.\nsynthtool > Replaced 'from google.cloud.vision_v1p2beta1.gapic import iac' in google/cloud/vision_v1p2beta1/__init__.py.\nsynthtool > Replaced 'class ImageAnnotatorClient\\\\(iac.ImageAnnotatorClient\\\\):' in google/cloud/vision_v1p2beta1/__init__.py.\nsynthtool > Running generator for google/cloud/vision/artman_vision_v1p3beta1.yaml.\nsynthtool > Generated code into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p3beta1.\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p3beta1/web_detection.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p3beta1/google/cloud/vision_v1p3beta1/proto/web_detection.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p3beta1/image_annotator.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p3beta1/google/cloud/vision_v1p3beta1/proto/image_annotator.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p3beta1/product_search.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p3beta1/google/cloud/vision_v1p3beta1/proto/product_search.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p3beta1/product_search_service.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p3beta1/google/cloud/vision_v1p3beta1/proto/product_search_service.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p3beta1/geometry.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p3beta1/google/cloud/vision_v1p3beta1/proto/geometry.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p3beta1/text_annotation.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p3beta1/google/cloud/vision_v1p3beta1/proto/text_annotation.proto\nsynthtool > Placed proto files into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p3beta1/google/cloud/vision_v1p3beta1/proto.\nsynthtool > Replaced 'from __future__ import absolute_import' in google/cloud/vision_v1p3beta1/__init__.py.\nsynthtool > Replaced 'image_annotator_client' in google/cloud/vision_v1p3beta1/__init__.py.\nsynthtool > Replaced 'from google.cloud.vision_v1p3beta1.gapic import iac' in google/cloud/vision_v1p3beta1/__init__.py.\nsynthtool > Replaced 'class ImageAnnotatorClient\\\\(iac.ImageAnnotatorClient\\\\):' in google/cloud/vision_v1p3beta1/__init__.py.\nsynthtool > Running generator for google/cloud/vision/artman_vision_v1p4beta1.yaml.\nsynthtool > Generated code into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p4beta1.\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p4beta1/web_detection.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p4beta1/google/cloud/vision_v1p4beta1/proto/web_detection.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p4beta1/face.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p4beta1/google/cloud/vision_v1p4beta1/proto/face.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p4beta1/image_annotator.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p4beta1/google/cloud/vision_v1p4beta1/proto/image_annotator.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p4beta1/product_search.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p4beta1/google/cloud/vision_v1p4beta1/proto/product_search.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p4beta1/product_search_service.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p4beta1/google/cloud/vision_v1p4beta1/proto/product_search_service.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p4beta1/geometry.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p4beta1/google/cloud/vision_v1p4beta1/proto/geometry.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/cloud/vision/v1p4beta1/text_annotation.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p4beta1/google/cloud/vision_v1p4beta1/proto/text_annotation.proto\nsynthtool > Placed proto files into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/vision-v1p4beta1/google/cloud/vision_v1p4beta1/proto.\nsynthtool > Replaced 'from __future__ import absolute_import' in google/cloud/vision_v1p4beta1/__init__.py.\nsynthtool > Replaced 'image_annotator_client' in google/cloud/vision_v1p4beta1/__init__.py.\nsynthtool > Replaced 'from google.cloud.vision_v1p4beta1.gapic import iac' in google/cloud/vision_v1p4beta1/__init__.py.\nsynthtool > Replaced 'class ImageAnnotatorClient\\\\(iac.ImageAnnotatorClient\\\\):' in google/cloud/vision_v1p4beta1/__init__.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1p2beta1/gapic/image_annotator_client.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1p2beta1/gapic/transports/image_annotator_grpc_transport.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1p3beta1/gapic/product_search_client.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1p3beta1/gapic/image_annotator_client.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1p3beta1/gapic/transports/image_annotator_grpc_transport.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1p3beta1/gapic/transports/product_search_grpc_transport.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1/gapic/product_search_client.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1/gapic/image_annotator_client.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1/gapic/transports/image_annotator_grpc_transport.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1/gapic/transports/product_search_grpc_transport.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1p4beta1/gapic/product_search_client.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1p4beta1/gapic/image_annotator_client.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1p4beta1/gapic/transports/image_annotator_grpc_transport.py.\nsynthtool > Replaced 'import google.api_core.operations_v1' in google/cloud/vision_v1p4beta1/gapic/transports/product_search_grpc_transport.py.\n.coveragerc\n.flake8\n.github/CONTRIBUTING.md\n.github/ISSUE_TEMPLATE/bug_report.md\n.github/ISSUE_TEMPLATE/feature_request.md\n.github/ISSUE_TEMPLATE/support_request.md\n.github/PULL_REQUEST_TEMPLATE.md\n.github/release-please.yml\n.gitignore\n.kokoro/build.sh\n.kokoro/continuous/common.cfg\n.kokoro/continuous/continuous.cfg\n.kokoro/docs/common.cfg\n.kokoro/docs/docs.cfg\n.kokoro/presubmit/common.cfg\n.kokoro/presubmit/presubmit.cfg\n.kokoro/publish-docs.sh\n.kokoro/release.sh\n.kokoro/release/common.cfg\n.kokoro/release/release.cfg\n.kokoro/trampoline.sh\nCODE_OF_CONDUCT.md\nCONTRIBUTING.rst\nLICENSE\nMANIFEST.in\ndocs/_static/custom.css\ndocs/_templates/layout.html\ndocs/conf.py.j2\nnoxfile.py.j2\nrenovate.json\nsetup.cfg\nRunning session blacken\nCreating virtual environment (virtualenv) using python3.6 in .nox/blacken\npip install black==19.3b0\nError: pip is not installed into the virtualenv, it is located at /tmpfs/src/git/autosynth/env/bin/pip. Pass external=True into run() to explicitly allow this.\nSession blacken failed.\nsynthtool > Failed executing nox -s blacken:\n\nNone\nsynthtool > Wrote metadata to synth.metadata.\nTraceback (most recent call last):\n  File \"/home/kbuilder/.pyenv/versions/3.6.1/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/kbuilder/.pyenv/versions/3.6.1/lib/python3.6/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/synthtool/__main__.py\", line 102, in <module>\n    main()\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/click/core.py\", line 764, in __call__\n    return self.main(*args, **kwargs)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/click/core.py\", line 717, in main\n    rv = self.invoke(ctx)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/click/core.py\", line 956, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/click/core.py\", line 555, in invoke\n    return callback(*args, **kwargs)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/synthtool/__main__.py\", line 94, in main\n    spec.loader.exec_module(synth_module)  # type: ignore\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 205, in _call_with_frames_removed\n  File \"/tmpfs/src/git/autosynth/working_repo/synth.py\", line 87, in <module>\n    s.shell.run([\"nox\", \"-s\", \"blacken\"], hide_output=False)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/synthtool/shell.py\", line 39, in run\n    raise exc\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/synthtool/shell.py\", line 33, in run\n    encoding=\"utf-8\",\n  File \"/home/kbuilder/.pyenv/versions/3.6.1/lib/python3.6/subprocess.py\", line 418, in run\n    output=stdout, stderr=stderr)\nsubprocess.CalledProcessError: Command '['nox', '-s', 'blacken']' returned non-zero exit status 1.\n\nSynthesis failed\n\n```\n\nGoogle internal developers can see the full log [here](https://sponge/bc296324-7867-4eae-a113-8090e6bcc834).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-vision/issues/8", "repository_url": "https://api.github.com/repos/googleapis/python-vision", "labels_url": "https://api.github.com/repos/googleapis/python-vision/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-vision/issues/8/comments", "events_url": "https://api.github.com/repos/googleapis/python-vision/issues/8/events", "html_url": "https://github.com/googleapis/python-vision/issues/8", "id": 560031346, "node_id": "MDU6SXNzdWU1NjAwMzEzNDY=", "number": 8, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814847365, "node_id": "MDU6TGFiZWwxODE0ODQ3MzY1", "url": "https://api.github.com/repos/googleapis/python-vision/labels/api:%20vision", "name": "api: vision", "color": "f42087", "default": false, "description": "Issues related to the Cloud Vision API API."}, {"id": 1814848476, "node_id": "MDU6TGFiZWwxODE0ODQ4NDc2", "url": "https://api.github.com/repos/googleapis/python-vision/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-04T23:02:13Z", "updated_at": "2020-06-19T22:50:47Z", "closed_at": "2020-06-19T22:50:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #7 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-vision/issues/4", "repository_url": "https://api.github.com/repos/googleapis/python-vision", "labels_url": "https://api.github.com/repos/googleapis/python-vision/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-vision/issues/4/comments", "events_url": "https://api.github.com/repos/googleapis/python-vision/issues/4/events", "html_url": "https://github.com/googleapis/python-vision/issues/4", "id": 559280732, "node_id": "MDU6SXNzdWU1NTkyODA3MzI=", "number": 4, "title": "Vision: custom vocabulary in vision ocr (handwritten text)", "user": {"login": "prohit93", "id": 16775513, "node_id": "MDQ6VXNlcjE2Nzc1NTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/16775513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prohit93", "html_url": "https://github.com/prohit93", "followers_url": "https://api.github.com/users/prohit93/followers", "following_url": "https://api.github.com/users/prohit93/following{/other_user}", "gists_url": "https://api.github.com/users/prohit93/gists{/gist_id}", "starred_url": "https://api.github.com/users/prohit93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prohit93/subscriptions", "organizations_url": "https://api.github.com/users/prohit93/orgs", "repos_url": "https://api.github.com/users/prohit93/repos", "events_url": "https://api.github.com/users/prohit93/events{/privacy}", "received_events_url": "https://api.github.com/users/prohit93/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814847365, "node_id": "MDU6TGFiZWwxODE0ODQ3MzY1", "url": "https://api.github.com/repos/googleapis/python-vision/labels/api:%20vision", "name": "api: vision", "color": "f42087", "default": false, "description": "Issues related to the Cloud Vision API API."}, {"id": 1814848461, "node_id": "MDU6TGFiZWwxODE0ODQ4NDYx", "url": "https://api.github.com/repos/googleapis/python-vision/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": null, "assignees": [{"login": "czahedi", "id": 20363028, "node_id": "MDQ6VXNlcjIwMzYzMDI4", "avatar_url": "https://avatars3.githubusercontent.com/u/20363028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/czahedi", "html_url": "https://github.com/czahedi", "followers_url": "https://api.github.com/users/czahedi/followers", "following_url": "https://api.github.com/users/czahedi/following{/other_user}", "gists_url": "https://api.github.com/users/czahedi/gists{/gist_id}", "starred_url": "https://api.github.com/users/czahedi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/czahedi/subscriptions", "organizations_url": "https://api.github.com/users/czahedi/orgs", "repos_url": "https://api.github.com/users/czahedi/repos", "events_url": "https://api.github.com/users/czahedi/events{/privacy}", "received_events_url": "https://api.github.com/users/czahedi/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-12-06T15:05:34Z", "updated_at": "2020-02-03T20:27:45Z", "closed_at": "2020-02-03T20:27:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to pass the keywords that i  expect to be present in the image as an argument to document_text_detection. Just as you can pass the context to speech to text, it would be useful to have something like that here as well. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-vision/issues/5", "repository_url": "https://api.github.com/repos/googleapis/python-vision", "labels_url": "https://api.github.com/repos/googleapis/python-vision/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-vision/issues/5/comments", "events_url": "https://api.github.com/repos/googleapis/python-vision/issues/5/events", "html_url": "https://github.com/googleapis/python-vision/issues/5", "id": 559280796, "node_id": "MDU6SXNzdWU1NTkyODA3OTY=", "number": 5, "title": "Vision - Using Batch Offline Annotation asynchronously", "user": {"login": "Mayson12381", "id": 36240574, "node_id": "MDQ6VXNlcjM2MjQwNTc0", "avatar_url": "https://avatars1.githubusercontent.com/u/36240574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mayson12381", "html_url": "https://github.com/Mayson12381", "followers_url": "https://api.github.com/users/Mayson12381/followers", "following_url": "https://api.github.com/users/Mayson12381/following{/other_user}", "gists_url": "https://api.github.com/users/Mayson12381/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mayson12381/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mayson12381/subscriptions", "organizations_url": "https://api.github.com/users/Mayson12381/orgs", "repos_url": "https://api.github.com/users/Mayson12381/repos", "events_url": "https://api.github.com/users/Mayson12381/events{/privacy}", "received_events_url": "https://api.github.com/users/Mayson12381/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814847365, "node_id": "MDU6TGFiZWwxODE0ODQ3MzY1", "url": "https://api.github.com/repos/googleapis/python-vision/labels/api:%20vision", "name": "api: vision", "color": "f42087", "default": false, "description": "Issues related to the Cloud Vision API API."}, {"id": 1814848506, "node_id": "MDU6TGFiZWwxODE0ODQ4NTA2", "url": "https://api.github.com/repos/googleapis/python-vision/labels/type:%20question", "name": "type: question", "color": "c5def5", "default": false, "description": "Request for information or clarification. Not an issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-16T12:35:48Z", "updated_at": "2020-06-19T22:50:33Z", "closed_at": "2020-06-19T22:50:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently implementing a GCloud function applying the vision API to given images. Currently, the function is running for about 30 seconds (5 images) using the _async_batch_annotate_images_. My goal was to call the async method to leave the function early to save computing time.\r\n\r\nThis is the last part of my code,  everything works so far:\r\n\r\n```\r\n    # loop over the images and prepare them\r\n\r\n    source = {'image_uri': input_image_uri}\r\n    image = {'source': source}\r\n    type_ = enums.Feature.Type.TEXT_DETECTION\r\n    features_element = {'type': type_}\r\n    features = [features_element]\r\n    requests_element = {'image': image, 'features': features}\r\n    requests.append(requests_element)\r\n\r\ngcs_destination = {'uri': output_uri}\r\noutput_config = {'gcs_destination': gcs_destination, 'batch_size': 1}\r\n\r\nclient.async_batch_annotate_images(requests, output_config)\r\n\r\nreturn True\r\n```\r\n\r\nHow is it possible to call the async method and terminate the function right after the call to save computing time?\r\n(@tseaver  maybe you could help?)", "performed_via_github_app": null, "score": 1.0}]}