{"total_count": 8, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/xolox/python-executor/issues/17", "repository_url": "https://api.github.com/repos/xolox/python-executor", "labels_url": "https://api.github.com/repos/xolox/python-executor/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/xolox/python-executor/issues/17/comments", "events_url": "https://api.github.com/repos/xolox/python-executor/issues/17/events", "html_url": "https://github.com/xolox/python-executor/issues/17", "id": 491551118, "node_id": "MDU6SXNzdWU0OTE1NTExMTg=", "number": 17, "title": "Fail in official Debian docker image ( contains neither /etc/lsb_release nor lsb-release installed)", "user": {"login": "martin68", "id": 6174552, "node_id": "MDQ6VXNlcjYxNzQ1NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6174552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martin68", "html_url": "https://github.com/martin68", "followers_url": "https://api.github.com/users/martin68/followers", "following_url": "https://api.github.com/users/martin68/following{/other_user}", "gists_url": "https://api.github.com/users/martin68/gists{/gist_id}", "starred_url": "https://api.github.com/users/martin68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martin68/subscriptions", "organizations_url": "https://api.github.com/users/martin68/orgs", "repos_url": "https://api.github.com/users/martin68/repos", "events_url": "https://api.github.com/users/martin68/events{/privacy}", "received_events_url": "https://api.github.com/users/martin68/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-10T09:18:13Z", "updated_at": "2020-05-14T17:23:09Z", "closed_at": "2020-05-14T17:23:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Similar to issue #10 , but this time [the official Debian docker image](https://hub.docker.com/_/debian) debian:buster, (a.k.a debian:10, also debian:latest at the moment) contains neither /etc/lsb_release nor lsb-release installed. Here's the exception traceback:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/.local/lib/python2.7/site-packages/apt_mirror_updater/cli.py\", line 160, in main\r\n    callback()\r\n  File \"/home/.local/lib/python2.7/site-packages/apt_mirror_updater/cli.py\", line 179, in report_available_mirrors\r\n    have_bandwidth = any(c.bandwidth for c in updater.ranked_mirrors)\r\n  File \"/home/.local/lib/python2.7/site-packages/property_manager/__init__.py\", line 781, in __get__\r\n    value = super(custom_property, self).__get__(obj, type)\r\n  File \"/home/.local/lib/python2.7/site-packages/apt_mirror_updater/__init__.py\", line 277, in ranked_mirrors\r\n    mirrors = sorted(self.available_mirrors, key=lambda c: c.sort_key, reverse=True)\r\n  File \"/home/.local/lib/python2.7/site-packages/property_manager/__init__.py\", line 781, in __get__\r\n    value = super(custom_property, self).__get__(obj, type)\r\n  File \"/home/.local/lib/python2.7/site-packages/apt_mirror_updater/__init__.py\", line 125, in available_mirrors\r\n    if self.release_is_eol:\r\n  File \"/home/.local/lib/python2.7/site-packages/property_manager/__init__.py\", line 781, in __get__\r\n    value = super(custom_property, self).__get__(obj, type)\r\n  File \"/home/.local/lib/python2.7/site-packages/apt_mirror_updater/__init__.py\", line 341, in release_is_eol\r\n    logger.debug(\"Checking whether %s is EOL ..\", self.release)\r\n  File \"/home/.local/lib/python2.7/site-packages/property_manager/__init__.py\", line 781, in __get__\r\n    value = super(custom_property, self).__get__(obj, type)\r\n  File \"/home/.local/lib/python2.7/site-packages/apt_mirror_updater/__init__.py\", line 310, in release\r\n    return coerce_release(self.distribution_codename)\r\n  File \"/home/.local/lib/python2.7/site-packages/apt_mirror_updater/releases.py\", line 114, in coerce_release\r\n    raise ValueError(msg % value)\r\nValueError: The string u'' doesn't match a known Debian or Ubuntu release!\r\n```\r\nSo I think using  /etc/lsb_release or lsb-release is not robust nowadays, I suggest using string in /etc/apt/sources.list as my [fork](https://github.com/martin68/apt-smart) of apt-mirror-updater, please see [commit](https://github.com/martin68/apt-smart/commit/60850cc2fd062494b4f1139e6446de52e570c2d4)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/xolox/python-executor/issues/10", "repository_url": "https://api.github.com/repos/xolox/python-executor", "labels_url": "https://api.github.com/repos/xolox/python-executor/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/xolox/python-executor/issues/10/comments", "events_url": "https://api.github.com/repos/xolox/python-executor/issues/10/events", "html_url": "https://github.com/xolox/python-executor/issues/10", "id": 342258277, "node_id": "MDU6SXNzdWUzNDIyNTgyNzc=", "number": 10, "title": "use distro python module instead of lsb_release binary", "user": {"login": "FooBarQuaxx", "id": 2607178, "node_id": "MDQ6VXNlcjI2MDcxNzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2607178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FooBarQuaxx", "html_url": "https://github.com/FooBarQuaxx", "followers_url": "https://api.github.com/users/FooBarQuaxx/followers", "following_url": "https://api.github.com/users/FooBarQuaxx/following{/other_user}", "gists_url": "https://api.github.com/users/FooBarQuaxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/FooBarQuaxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FooBarQuaxx/subscriptions", "organizations_url": "https://api.github.com/users/FooBarQuaxx/orgs", "repos_url": "https://api.github.com/users/FooBarQuaxx/repos", "events_url": "https://api.github.com/users/FooBarQuaxx/events{/privacy}", "received_events_url": "https://api.github.com/users/FooBarQuaxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-18T09:55:45Z", "updated_at": "2018-10-07T19:12:55Z", "closed_at": "2018-10-07T19:07:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried to use `apt-mirror-updater` from a vanilla Ubuntu 18.04 docker image to set the fastest apt mirrors. I've encountered an error because `python-executor` relies on `lsb_release` binary to fetch the distribution codename and id. Here's the exception traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/dist-packages/apt_mirror_updater/cli.py\", line 160, in main\r\n    callback()\r\n  File \"/usr/local/lib/python2.7/dist-packages/apt_mirror_updater/__init__.py\", line 425, in change_mirror\r\n    new_mirror = self.best_mirror\r\n  File \"/usr/local/lib/python2.7/dist-packages/property_manager/__init__.py\", line 781, in __get__\r\n    value = super(custom_property, self).__get__(obj, type)\r\n  File \"/usr/local/lib/python2.7/dist-packages/apt_mirror_updater/__init__.py\", line 176, in best_mirror\r\n    if self.release_is_eol:\r\n  File \"/usr/local/lib/python2.7/dist-packages/property_manager/__init__.py\", line 781, in __get__\r\n    value = super(custom_property, self).__get__(obj, type)\r\n  File \"/usr/local/lib/python2.7/dist-packages/apt_mirror_updater/__init__.py\", line 343, in release_is_eol\r\n    if hasattr(self.backend, 'get_eol_date'):\r\n  File \"/usr/local/lib/python2.7/dist-packages/property_manager/__init__.py\", line 781, in __get__\r\n    value = super(custom_property, self).__get__(obj, type)\r\n  File \"/usr/local/lib/python2.7/dist-packages/apt_mirror_updater/__init__.py\", line 164, in backend\r\n    return sys.modules[module_path]\r\n  File \"/usr/local/lib/python2.7/dist-packages/apt_mirror_updater/__init__.py\", line 164, in backend\r\n    return sys.modules[module_path]\r\n```\r\nI've debugged the value of `self.distribution_id` and `self.distribution_codename` and both are empty.\r\n\r\nSince there's no obvious way to enforce the existence of `lsb_release` inside a python module definition, I suggest using python [distro](https://github.com/nir0s/distro) module to get that information.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/xolox/python-executor/issues/9", "repository_url": "https://api.github.com/repos/xolox/python-executor", "labels_url": "https://api.github.com/repos/xolox/python-executor/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/xolox/python-executor/issues/9/comments", "events_url": "https://api.github.com/repos/xolox/python-executor/issues/9/events", "html_url": "https://github.com/xolox/python-executor/issues/9", "id": 305222380, "node_id": "MDU6SXNzdWUzMDUyMjIzODA=", "number": 9, "title": "Python 3.7 reserved word: async", "user": {"login": "e4r7hbug", "id": 590663, "node_id": "MDQ6VXNlcjU5MDY2Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/590663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/e4r7hbug", "html_url": "https://github.com/e4r7hbug", "followers_url": "https://api.github.com/users/e4r7hbug/followers", "following_url": "https://api.github.com/users/e4r7hbug/following{/other_user}", "gists_url": "https://api.github.com/users/e4r7hbug/gists{/gist_id}", "starred_url": "https://api.github.com/users/e4r7hbug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/e4r7hbug/subscriptions", "organizations_url": "https://api.github.com/users/e4r7hbug/orgs", "repos_url": "https://api.github.com/users/e4r7hbug/repos", "events_url": "https://api.github.com/users/e4r7hbug/events{/privacy}", "received_events_url": "https://api.github.com/users/e4r7hbug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-14T16:00:16Z", "updated_at": "2018-10-07T02:14:47Z", "closed_at": "2018-10-07T02:08:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://docs.python.org/3.7/reference/lexical_analysis.html?highlight=reserved%20word#keywords\r\n\r\nI didn't see any other issues mentioning this Python 3.7 change. Something to be aware of, `async` will be reserved in Python 3.7.\r\n\r\n```python\r\n[I] (xolox.python-executor-cz6TGcXB)  xolox.python-executor-cz6TGcXB  \u2693  ~/g/xolox.python-executor  master \u2691  tox -e py37\r\nGLOB sdist-make: /home/ntangsurat/git/xolox.python-executor/setup.py\r\npy37 create: /home/ntangsurat/git/xolox.python-executor/.tox/py37\r\npy37 installdeps: -rrequirements-tests.txt\r\npy37 inst: /home/ntangsurat/git/xolox.python-executor/.tox/dist/executor-19.0.zip\r\npy37 installed: -f ~/.pypi/,coloredlogs==9.0,coverage==4.5.1,executor==19.0,fasteners==0.14.1,humanfriendly==4.8,mock==2.0.0,monotonic==1.4,pbr==3.1.1,property-manager==2.2,py==1.5.2,pytest==3.2.5,pytest-cov==2.5.1,six==1.11.0,verboselogs==1.7,virtualenv==15.1.0\r\npy37 runtests: PYTHONHASHSEED='3646219831'\r\npy37 runtests: commands[0] | py.test\r\n================================================================================ test session starts ================================================================================\r\nplatform linux -- Python 3.7.0b2, pytest-3.2.5, py-1.5.2, pluggy-0.4.0 -- /home/ntangsurat/git/xolox.python-executor/.tox/py37/bin/python3.7\r\ncachedir: .cache\r\nrootdir: /home/ntangsurat/git/xolox.python-executor, inifile: tox.ini\r\nplugins: cov-2.5.1\r\ncollected 0 items / 1 errors                                                                                                                                                         \r\n\r\n====================================================================================== ERRORS =======================================================================================\r\n________________________________________________________________________ ERROR collecting executor/tests.py _________________________________________________________________________\r\n.tox/py37/lib/python3.7/site-packages/_pytest/python.py:395: in _importtestmodule\r\n    mod = self.fspath.pyimport(ensuresyspath=importmode)\r\n.tox/py37/lib/python3.7/site-packages/py/_path/local.py:668: in pyimport\r\n    __import__(modname)\r\nE     File \"/home/ntangsurat/git/xolox.python-executor/executor/__init__.py\", line 199\r\nE       if command.async:\r\nE                      ^\r\nE   SyntaxError: invalid syntax\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n============================================================================== 1 error in 0.16 seconds ==============================================================================\r\nERROR: InvocationError: '/home/ntangsurat/git/xolox.python-executor/.tox/py37/bin/py.test'\r\n______________________________________________________________________________________ summary ______________________________________________________________________________________\r\nERROR:   py37: commands failed\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/xolox/python-executor/issues/8", "repository_url": "https://api.github.com/repos/xolox/python-executor", "labels_url": "https://api.github.com/repos/xolox/python-executor/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/xolox/python-executor/issues/8/comments", "events_url": "https://api.github.com/repos/xolox/python-executor/issues/8/events", "html_url": "https://github.com/xolox/python-executor/issues/8", "id": 294204139, "node_id": "MDU6SXNzdWUyOTQyMDQxMzk=", "number": 8, "title": "no blocking communicate pipe", "user": {"login": "arita37", "id": 18707623, "node_id": "MDQ6VXNlcjE4NzA3NjIz", "avatar_url": "https://avatars3.githubusercontent.com/u/18707623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arita37", "html_url": "https://github.com/arita37", "followers_url": "https://api.github.com/users/arita37/followers", "following_url": "https://api.github.com/users/arita37/following{/other_user}", "gists_url": "https://api.github.com/users/arita37/gists{/gist_id}", "starred_url": "https://api.github.com/users/arita37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arita37/subscriptions", "organizations_url": "https://api.github.com/users/arita37/orgs", "repos_url": "https://api.github.com/users/arita37/repos", "events_url": "https://api.github.com/users/arita37/events{/privacy}", "received_events_url": "https://api.github.com/users/arita37/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-04T15:11:53Z", "updated_at": "2020-05-13T15:31:40Z", "closed_at": "2020-05-13T15:31:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to read the output of stdout\r\nfor asynchronous procees without blocking the process ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/xolox/python-executor/issues/7", "repository_url": "https://api.github.com/repos/xolox/python-executor", "labels_url": "https://api.github.com/repos/xolox/python-executor/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/xolox/python-executor/issues/7/comments", "events_url": "https://api.github.com/repos/xolox/python-executor/issues/7/events", "html_url": "https://github.com/xolox/python-executor/issues/7", "id": 255959979, "node_id": "MDU6SXNzdWUyNTU5NTk5Nzk=", "number": 7, "title": "runtime processing of stderr from a command", "user": {"login": "tgianko", "id": 7878042, "node_id": "MDQ6VXNlcjc4NzgwNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7878042?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgianko", "html_url": "https://github.com/tgianko", "followers_url": "https://api.github.com/users/tgianko/followers", "following_url": "https://api.github.com/users/tgianko/following{/other_user}", "gists_url": "https://api.github.com/users/tgianko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgianko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgianko/subscriptions", "organizations_url": "https://api.github.com/users/tgianko/orgs", "repos_url": "https://api.github.com/users/tgianko/repos", "events_url": "https://api.github.com/users/tgianko/events{/privacy}", "received_events_url": "https://api.github.com/users/tgianko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-07T14:38:32Z", "updated_at": "2018-01-21T01:30:48Z", "closed_at": "2018-01-21T01:18:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI need to run an external command and at the same time to process the output as it is generated. \r\n\r\nIn this setting, the external command is the producer (with `async=True` and `capture_stderr=True`), and my program is the consumer. The stderr should be consumed by a function in a thread that pulls from the shared resource until the command finishes (`is_finished=True`). \r\n\r\nIn my first attempt, I passed a `StringIO` to `ExternalCommand.stderr_file`. My idea was to keep everything in memory, without external files. This does not work as `ExternalCommand` tries to get the `fileno` from the file object. `StringIO` does not support that... so exception. I looked at the code of `CachedStream` and I couldn't see an obvious reason why to retrive the fileno and file name from the file object. Wouldn't be better to keep a local copy of the file object and write on it?\r\n\r\nIn my second attempt, I thought to use a FIFO file. However, here there is another shortcoming. The built-in function `open` returns such a file object only when the producer opens the same FIFO for writing operations. Until then, the open blocks the consumer. This prevents me to pass the file object to `ExternalCommand.stderr_file`. An alternative could be `os.open` that allows to open with the flag `os.O_NONBLOCK`, but this won't work as the returned descriptor is an `int`. \r\n\r\nDo you have any idea on how to go around that? I would like to avoid to use regular files and actually I'd prefer to keep everything in memory. StringIO is actually my favorite one, but FIFO are also fine.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/xolox/python-executor/issues/5", "repository_url": "https://api.github.com/repos/xolox/python-executor", "labels_url": "https://api.github.com/repos/xolox/python-executor/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/xolox/python-executor/issues/5/comments", "events_url": "https://api.github.com/repos/xolox/python-executor/issues/5/events", "html_url": "https://github.com/xolox/python-executor/issues/5", "id": 222782867, "node_id": "MDU6SXNzdWUyMjI3ODI4Njc=", "number": 5, "title": "RemoteCommand(): 'unicode' object is not callable", "user": {"login": "sprive", "id": 7275655, "node_id": "MDQ6VXNlcjcyNzU2NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7275655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprive", "html_url": "https://github.com/sprive", "followers_url": "https://api.github.com/users/sprive/followers", "following_url": "https://api.github.com/users/sprive/following{/other_user}", "gists_url": "https://api.github.com/users/sprive/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprive/subscriptions", "organizations_url": "https://api.github.com/users/sprive/orgs", "repos_url": "https://api.github.com/users/sprive/repos", "events_url": "https://api.github.com/users/sprive/events{/privacy}", "received_events_url": "https://api.github.com/users/sprive/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-19T15:45:46Z", "updated_at": "2017-07-01T12:11:19Z", "closed_at": "2017-07-01T12:11:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm attempting to modify the example \"Running remote commands\" to utilize RSA key logins. I understood that this argument is documented under RemoteCommand()\r\n\r\n```>>> from executor.ssh.client import RemoteCommand\r\n>>> cmd = RemoteCommand('100.88.x.x', 'echo $SSH_CONNECTION', capture=True, ssh_user=\"ubuntu\", identity_file=\"/home/sprive/key.pem\")\r\n>>> cmd.start()\r\n>>> cmd.start()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: 'unicode' object is not callable\r\n```\r\n\r\nThe above happened once, and hasn't repeated, but as I'm considering this to replace my own wrappers around Paramiko, I would like to understand...\r\n\r\nI tried a second time in a new Python session:\r\n```\r\n>>> from executor.ssh.client import RemoteCommand\r\n>>> cmd = RemoteCommand('100.88.x.x', 'echo $SSH_CONNECTION', ssh_user=\"ubuntu\", identity_file=\"/home/sprive/key.pem\")\r\n>>> cmd.start()\r\n100.88.x.x 43130 100.88.y.y 22\r\nConnection to 100.88.y.y closed.\r\n>>> cmd.output()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nTypeError: 'NoneType' object is not callable\r\n>>>\r\n```\r\n\r\nSome success but connection closes before I can call output(). \r\n\r\nI've repeated above =using other commands, like 'hostname' and 'whoami', with same pattern (closes after start() ).\r\n\r\nThe environment is EC2, if that matters. From that source PC (as user sprive) I can do a Bash one-liner to SSH to ubuntu@target and get successful output:\r\n```\r\n$ ssh ubuntu@100.88.y.y -i /home/sprive/key.pem \"whoami\"\r\nubuntu\r\n```\r\n\r\nOddly, if I replace the command with 'echo $SSH_CONNECTION' I get empty output.  However the connection is actually . I can show this by changing the command to 'echo $SSH_CONNECTION; touch /tmp/xyz' then checking /tmp/xyz. I don't really think this is relevant, but since the example uses $SSH_CONNECTION as indication of success I am mentioning it.\r\n\r\nThoughts?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/xolox/python-executor/issues/2", "repository_url": "https://api.github.com/repos/xolox/python-executor", "labels_url": "https://api.github.com/repos/xolox/python-executor/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/xolox/python-executor/issues/2/comments", "events_url": "https://api.github.com/repos/xolox/python-executor/issues/2/events", "html_url": "https://github.com/xolox/python-executor/issues/2", "id": 166958835, "node_id": "MDU6SXNzdWUxNjY5NTg4MzU=", "number": 2, "title": "Control over the spinner when using concurrency", "user": {"login": "mwgamble", "id": 4494785, "node_id": "MDQ6VXNlcjQ0OTQ3ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4494785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwgamble", "html_url": "https://github.com/mwgamble", "followers_url": "https://api.github.com/users/mwgamble/followers", "following_url": "https://api.github.com/users/mwgamble/following{/other_user}", "gists_url": "https://api.github.com/users/mwgamble/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwgamble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwgamble/subscriptions", "organizations_url": "https://api.github.com/users/mwgamble/orgs", "repos_url": "https://api.github.com/users/mwgamble/repos", "events_url": "https://api.github.com/users/mwgamble/events{/privacy}", "received_events_url": "https://api.github.com/users/mwgamble/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-22T02:38:22Z", "updated_at": "2020-05-15T01:36:23Z", "closed_at": "2020-05-14T21:09:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to have some level of control over the spinner that is displayed when using concurrency. For example, I would like to be able to have it re-render the spinner only once every 1-2 seconds, rather than constantly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/xolox/python-executor/issues/1", "repository_url": "https://api.github.com/repos/xolox/python-executor", "labels_url": "https://api.github.com/repos/xolox/python-executor/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/xolox/python-executor/issues/1/comments", "events_url": "https://api.github.com/repos/xolox/python-executor/issues/1/events", "html_url": "https://github.com/xolox/python-executor/issues/1", "id": 59673225, "node_id": "MDU6SXNzdWU1OTY3MzIyNQ==", "number": 1, "title": "Environment variable can not be set", "user": {"login": "rafaelpivato", "id": 1692757, "node_id": "MDQ6VXNlcjE2OTI3NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1692757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafaelpivato", "html_url": "https://github.com/rafaelpivato", "followers_url": "https://api.github.com/users/rafaelpivato/followers", "following_url": "https://api.github.com/users/rafaelpivato/following{/other_user}", "gists_url": "https://api.github.com/users/rafaelpivato/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafaelpivato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafaelpivato/subscriptions", "organizations_url": "https://api.github.com/users/rafaelpivato/orgs", "repos_url": "https://api.github.com/users/rafaelpivato/repos", "events_url": "https://api.github.com/users/rafaelpivato/events{/privacy}", "received_events_url": "https://api.github.com/users/rafaelpivato/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-03T17:12:10Z", "updated_at": "2015-03-04T23:14:38Z", "closed_at": "2015-03-04T23:14:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you need to customize environment variable on a per-call basis of `execute`, you will need to manage that outside on the caller.\n\nAllow environment variable to be set when calling `execute` method as a named argument like in the following example:\n\n```\nfrom executor import execute\nexecute(\n    'somescript.sh',\n    env=dict(\n        CONF='/etc/someconf.ini',\n    ),\n)\n```\n", "performed_via_github_app": null, "score": 1.0}]}