{"total_count": 934, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/locustio/locust/issues/1537", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1537/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1537/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1537/events", "html_url": "https://github.com/locustio/locust/issues/1537", "id": 682951869, "node_id": "MDU6SXNzdWU2ODI5NTE4Njk=", "number": 1537, "title": " Error: No tasks defined. use the @task decorator or set the tasks property of the User ", "user": {"login": "saranyagupta05", "id": 45310966, "node_id": "MDQ6VXNlcjQ1MzEwOTY2", "avatar_url": "https://avatars3.githubusercontent.com/u/45310966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saranyagupta05", "html_url": "https://github.com/saranyagupta05", "followers_url": "https://api.github.com/users/saranyagupta05/followers", "following_url": "https://api.github.com/users/saranyagupta05/following{/other_user}", "gists_url": "https://api.github.com/users/saranyagupta05/gists{/gist_id}", "starred_url": "https://api.github.com/users/saranyagupta05/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saranyagupta05/subscriptions", "organizations_url": "https://api.github.com/users/saranyagupta05/orgs", "repos_url": "https://api.github.com/users/saranyagupta05/repos", "events_url": "https://api.github.com/users/saranyagupta05/events{/privacy}", "received_events_url": "https://api.github.com/users/saranyagupta05/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-20T17:36:57Z", "updated_at": "2020-08-21T19:51:38Z", "closed_at": "2020-08-21T19:50:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\n<!-- A clear and concise description of what the bug is -->\r\n\r\n### Expected behavior\r\n<!-- Tell us what you think should happen -->\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\n\r\n### Steps to reproduce\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\n\r\n### Environment\r\n\r\n- OS:\r\n- Python version: 3.8.2\r\n- Locust version: 1.2.1 \r\n- Locust command line that you ran: bash loadgen.sh \r\n- Locust file contents (anonymized if necessary): \r\n\r\nOn running loadgen.sh, I see this this error, \r\n```\r\n[2020-08-20 22:41:38,964] saranyagupta05-Inspiron-5370/ERROR/locust.user.task: No tasks defined. use the @task decorator or set the tasks property of the User\r\nTraceback (most recent call last):\r\n  File \"/home/saranyagupta05/anaconda3/lib/python3.8/site-packages/locust/user/task.py\", line 280, in run\r\n    self.schedule_task(self.get_next_task())\r\n  File \"/home/saranyagupta05/anaconda3/lib/python3.8/site-packages/locust/user/task.py\", line 409, in get_next_task\r\n    raise Exception(\"No tasks defined. use the @task decorator or set the tasks property of the User\")\r\nException: No tasks defined. use the @task decorator or set the tasks property of the User\r\n\r\n```\r\nThe locust file used is locust.py: \r\n```\r\n#!/usr/bin/python\r\n#\r\n# Copyright 2018 Google LLC\r\n#\r\n# Licensed under the Apache License, Version 2.0 (the \"License\");\r\n# you may not use this file except in compliance with the License.\r\n# You may obtain a copy of the License at\r\n#\r\n#      http://www.apache.org/licenses/LICENSE-2.0\r\n#\r\n# Unless required by applicable law or agreed to in writing, software\r\n# distributed under the License is distributed on an \"AS IS\" BASIS,\r\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n# See the License for the specific language governing permissions and\r\n# limitations under the License.\r\n\r\nimport random\r\nfrom locust import HttpUser, TaskSet, between\r\n\r\nproducts = [\r\n    '0PUK6V6EV0',\r\n    '1YMWWN1N4O',\r\n    '2ZYFJ3GM2N',\r\n    '66VCHSJNUP',\r\n    '6E92ZMYYFZ',\r\n    '9SIQT8TOJO',\r\n    'L9ECAV7KIM',\r\n    'LS4PSXUNUM',\r\n    'OLJCESPC7Z']\r\n\r\ndef index(l):\r\n    l.client.get(\"/\")\r\n\r\ndef setCurrency(l):\r\n    currencies = ['EUR', 'USD', 'JPY', 'CAD']\r\n    l.client.post(\"/setCurrency\",\r\n        {'currency_code': random.choice(currencies)})\r\n\r\ndef browseProduct(l):\r\n    l.client.get(\"/product/\" + random.choice(products))\r\n\r\ndef viewCart(l):\r\n    l.client.get(\"/cart\")\r\n\r\ndef addToCart(l):\r\n    product = random.choice(products)\r\n    l.client.get(\"/product/\" + product)\r\n    l.client.post(\"/cart\", {\r\n        'product_id': product,\r\n        'quantity': random.choice([1,2,3,4,5,10])})\r\n\r\ndef checkout(l):\r\n    addToCart(l)\r\n    l.client.post(\"/cart/checkout\", {\r\n        'email': 'someone@example.com',\r\n        'street_address': '1600 Amphitheatre Parkway',\r\n        'zip_code': '94043',\r\n        'city': 'Mountain View',\r\n        'state': 'CA',\r\n        'country': 'United States',\r\n        'credit_card_number': '4432-8015-6152-0454',\r\n        'credit_card_expiration_month': '1',\r\n        'credit_card_expiration_year': '2039',\r\n        'credit_card_cvv': '672',\r\n    })\r\n\r\nclass UserBehavior(TaskSet):\r\n\r\n    def on_start(self):\r\n        index(self)\r\n\r\n    tasks = {index: 1,\r\n        setCurrency: 2,\r\n        browseProduct: 10,\r\n        addToCart: 2,\r\n        viewCart: 3,\r\n        checkout: 1}\r\n\r\nclass WebsiteUser(HttpUser):\r\n    task_set = UserBehavior\r\n    wait_time = between(1, 10)\r\n```\r\nFile loadgen.sh - \r\n\r\n```\r\n#!/bin/bash\r\n#\r\n# Copyright 2018 Google LLC\r\n#\r\n# Licensed under the Apache License, Version 2.0 (the \"License\");\r\n# you may not use this file except in compliance with the License.\r\n# You may obtain a copy of the License at\r\n#\r\n#      http://www.apache.org/licenses/LICENSE-2.0\r\n#\r\n# Unless required by applicable law or agreed to in writing, software\r\n# distributed under the License is distributed on an \"AS IS\" BASIS,\r\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n# See the License for the specific language governing permissions and\r\n# limitations under the License.\r\n\r\nset -e\r\ntrap \"exit\" TERM\r\n\r\nif [[ -z \"${FRONTEND_ADDR}\" ]]; then\r\n    echo >&2 \"FRONTEND_ADDR not specified\"\r\n    exit 1\r\nfi\r\n\r\nset -x\r\n\r\n# if one request to the frontend fails, then exit\r\nSTATUSCODE=$(curl --silent --output /dev/stderr --write-out \"%{http_code}\" http://${FRONTEND_ADDR})\r\nif test $STATUSCODE -ne 200; then\r\n    echo \"Error: Could not reach frontend - Status code: ${STATUSCODE}\"\r\n    exit 1\r\nfi\r\n\r\n# else, run loadgen\r\nlocust --host=\"http://${FRONTEND_ADDR}\" --no-web -c \"${USERS:-10}\" 2>&1\r\n```\r\nI wanted logs to be generated that showed user behaviour, but instead I see a lot of wrror messages like the one mentioned above. How can this be solved? Is this an issue with locust? Thanks for the help! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1531", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1531/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1531/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1531/events", "html_url": "https://github.com/locustio/locust/issues/1531", "id": 682556562, "node_id": "MDU6SXNzdWU2ODI1NTY1NjI=", "number": 1531, "title": "ValueError: StatsEntry.use_response_times_cache must be set to True", "user": {"login": "max-rocket-internet", "id": 8859277, "node_id": "MDQ6VXNlcjg4NTkyNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8859277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-rocket-internet", "html_url": "https://github.com/max-rocket-internet", "followers_url": "https://api.github.com/users/max-rocket-internet/followers", "following_url": "https://api.github.com/users/max-rocket-internet/following{/other_user}", "gists_url": "https://api.github.com/users/max-rocket-internet/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-rocket-internet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-rocket-internet/subscriptions", "organizations_url": "https://api.github.com/users/max-rocket-internet/orgs", "repos_url": "https://api.github.com/users/max-rocket-internet/repos", "events_url": "https://api.github.com/users/max-rocket-internet/events{/privacy}", "received_events_url": "https://api.github.com/users/max-rocket-internet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-08-20T09:16:09Z", "updated_at": "2020-08-21T02:30:36Z", "closed_at": "2020-08-20T13:08:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I see this on every locust worker running `1.2`:\r\n\r\n```\r\n$ locust --worker --locustfile=main.py\r\n[2020-08-20 11:02:50,637] C02TD0F6GTDX/INFO/locust.main: Starting Locust 1.2\r\nTraceback (most recent call last):\r\n  File \"src/gevent/greenlet.py\", line 854, in gevent._gevent_cgreenlet.Greenlet.run\r\n  File \"/usr/local/lib/python3.8/site-packages/locust/stats.py\", line 766, in stats_history\r\n    'response_time_percentile_95': stats.total.get_current_response_time_percentile(0.95) or 0,\r\n  File \"/usr/local/lib/python3.8/site-packages/locust/stats.py\", line 553, in get_current_response_time_percentile\r\n    raise ValueError(\"StatsEntry.use_response_times_cache must be set to True if we should be able to calculate the _current_ response time percentile\")\r\nValueError: StatsEntry.use_response_times_cache must be set to True if we should be able to calculate the _current_ response time percentile\r\n2020-08-20T09:02:50Z <Greenlet at 0x10803f6a0: stats_history(<locust.runners.WorkerRunner object at 0x10806da60)> failed with ValueError\r\n```\r\n\r\nTried with very basic locust file, same issue:\r\n\r\n```python\r\nfrom locust import HttpUser, TaskSet, task, between\r\n\r\nclass LoadTestTask(TaskSet):\r\n    def on_start(self):\r\n        pass\r\n\r\n    @task(3)\r\n    def get_token(self):\r\n        pass\r\n\r\nclass LoadTest(HttpUser):\r\n    tasks = [LoadTestTask]\r\n    wait_time = between(0.1, 1)\r\n```\r\n\r\nAny idea @cyberw or @vstepanov-lohika-tix?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1521", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1521/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1521/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1521/events", "html_url": "https://github.com/locustio/locust/issues/1521", "id": 679553718, "node_id": "MDU6SXNzdWU2Nzk1NTM3MTg=", "number": 1521, "title": "Prefill web ui form with user count & hatch rate", "user": {"login": "cyberw", "id": 1134328, "node_id": "MDQ6VXNlcjExMzQzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1134328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyberw", "html_url": "https://github.com/cyberw", "followers_url": "https://api.github.com/users/cyberw/followers", "following_url": "https://api.github.com/users/cyberw/following{/other_user}", "gists_url": "https://api.github.com/users/cyberw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyberw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyberw/subscriptions", "organizations_url": "https://api.github.com/users/cyberw/orgs", "repos_url": "https://api.github.com/users/cyberw/repos", "events_url": "https://api.github.com/users/cyberw/events{/privacy}", "received_events_url": "https://api.github.com/users/cyberw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-15T12:08:28Z", "updated_at": "2020-08-17T14:31:50Z", "closed_at": "2020-08-17T14:31:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Instead of failing. Also ignore run time / -t. \r\n\r\nPing @max-rocket-internet ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1519", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1519/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1519/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1519/events", "html_url": "https://github.com/locustio/locust/issues/1519", "id": 679092966, "node_id": "MDU6SXNzdWU2NzkwOTI5NjY=", "number": 1519, "title": "Number of Open files issue", "user": {"login": "harsh976", "id": 29836005, "node_id": "MDQ6VXNlcjI5ODM2MDA1", "avatar_url": "https://avatars0.githubusercontent.com/u/29836005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harsh976", "html_url": "https://github.com/harsh976", "followers_url": "https://api.github.com/users/harsh976/followers", "following_url": "https://api.github.com/users/harsh976/following{/other_user}", "gists_url": "https://api.github.com/users/harsh976/gists{/gist_id}", "starred_url": "https://api.github.com/users/harsh976/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harsh976/subscriptions", "organizations_url": "https://api.github.com/users/harsh976/orgs", "repos_url": "https://api.github.com/users/harsh976/repos", "events_url": "https://api.github.com/users/harsh976/events{/privacy}", "received_events_url": "https://api.github.com/users/harsh976/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-14T11:25:20Z", "updated_at": "2020-08-15T15:25:21Z", "closed_at": "2020-08-15T15:25:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "As soon as I start my script the number of open files increases drastically\r\n\r\n(perftestvirtualenv) [jenkins@ip]$ lsof |wc -l\r\n  Before start of a program   : 4473\r\n(perftestvirtualenv) [jenkins@ip]$ lsof |wc -l\r\nAfter the start of a program 6989\r\n\r\nThe number of open files is way too high even before the script execution has been started.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1515", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1515/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1515/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1515/events", "html_url": "https://github.com/locustio/locust/issues/1515", "id": 678259750, "node_id": "MDU6SXNzdWU2NzgyNTk3NTA=", "number": 1515, "title": "This is a suggestion. In order to better use the custom client system stress test, we may need more examples", "user": {"login": "chineseluo", "id": 29504831, "node_id": "MDQ6VXNlcjI5NTA0ODMx", "avatar_url": "https://avatars1.githubusercontent.com/u/29504831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chineseluo", "html_url": "https://github.com/chineseluo", "followers_url": "https://api.github.com/users/chineseluo/followers", "following_url": "https://api.github.com/users/chineseluo/following{/other_user}", "gists_url": "https://api.github.com/users/chineseluo/gists{/gist_id}", "starred_url": "https://api.github.com/users/chineseluo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chineseluo/subscriptions", "organizations_url": "https://api.github.com/users/chineseluo/orgs", "repos_url": "https://api.github.com/users/chineseluo/repos", "events_url": "https://api.github.com/users/chineseluo/events{/privacy}", "received_events_url": "https://api.github.com/users/chineseluo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635903137, "node_id": "MDU6TGFiZWwxNjM1OTAzMTM3", "url": "https://api.github.com/repos/locustio/locust/labels/duplicate", "name": "duplicate", "color": "9cea8c", "default": true, "description": ""}, {"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-13T08:37:11Z", "updated_at": "2020-08-14T07:55:28Z", "closed_at": "2020-08-14T07:55:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you give me some examples of using other client systems? We analyze the official cases in use, but we don't understand it very well. Maybe there is too little information on the Internet. Thank you\uff01", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1514", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1514/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1514/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1514/events", "html_url": "https://github.com/locustio/locust/issues/1514", "id": 677575501, "node_id": "MDU6SXNzdWU2Nzc1NzU1MDE=", "number": 1514, "title": "Change the position of dividers in command line report", "user": {"login": "cyberw", "id": 1134328, "node_id": "MDQ6VXNlcjExMzQzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1134328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyberw", "html_url": "https://github.com/cyberw", "followers_url": "https://api.github.com/users/cyberw/followers", "following_url": "https://api.github.com/users/cyberw/following{/other_user}", "gists_url": "https://api.github.com/users/cyberw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyberw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyberw/subscriptions", "organizations_url": "https://api.github.com/users/cyberw/orgs", "repos_url": "https://api.github.com/users/cyberw/repos", "events_url": "https://api.github.com/users/cyberw/events{/privacy}", "received_events_url": "https://api.github.com/users/cyberw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-12T10:22:19Z", "updated_at": "2020-08-18T11:09:17Z", "closed_at": "2020-08-18T11:09:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently it looks like this:\r\n\r\n```\r\n Name                                                          # reqs      # fails     Avg     Min     Max  |  Median   req/s failures/s\r\n--------------------------------------------------------------------------------------------------------------------------------------------\r\n POST /1                                                          600     0(0.00%)     237     214     323  |     230    3.10    0.00\r\n POST /2                                                         1876     0(0.00%)      80      55     187  |      75    5.10    0.00\r\n...\r\n --------------------------------------------------------------------------------------------------------------------------------------------\r\n Aggregated                                                     33750   461(1.37%)    2486       3   10589  |     260  137.60    4.30\r\n```\r\n\r\nBut I think it should look like this:\r\n```\r\n Name                                                          # reqs      # fails  |   Avg     Min     Max   Median  |\u00a0 req/s failures/s\r\n--------------------------------------------------------------------------------------------------------------------------------------------\r\n POST /1                                                          600     0(0.00%)  |   237     214     323      230  |  3.10   0.00\r\n POST /2                                                         1876     0(0.00%)  |    80      55     187       75  |  5.10   0.00\r\n...\r\n --------------------------------------------------------------------------------------------------------------------------------------------\r\n Aggregated                                                     33750   461(1.37%)  |  2486       3   10589      260  | 137.60  4.30\r\n```\r\n\r\nSo the dividers will be between request counts, response times, and throughputs. Make sense @heyman ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1513", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1513/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1513/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1513/events", "html_url": "https://github.com/locustio/locust/issues/1513", "id": 676995534, "node_id": "MDU6SXNzdWU2NzY5OTU1MzQ=", "number": 1513, "title": "test_cpu_warning test is flakey", "user": {"login": "max-rocket-internet", "id": 8859277, "node_id": "MDQ6VXNlcjg4NTkyNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8859277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-rocket-internet", "html_url": "https://github.com/max-rocket-internet", "followers_url": "https://api.github.com/users/max-rocket-internet/followers", "following_url": "https://api.github.com/users/max-rocket-internet/following{/other_user}", "gists_url": "https://api.github.com/users/max-rocket-internet/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-rocket-internet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-rocket-internet/subscriptions", "organizations_url": "https://api.github.com/users/max-rocket-internet/orgs", "repos_url": "https://api.github.com/users/max-rocket-internet/repos", "events_url": "https://api.github.com/users/max-rocket-internet/events{/privacy}", "received_events_url": "https://api.github.com/users/max-rocket-internet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-11T15:56:20Z", "updated_at": "2020-08-17T22:06:28Z", "closed_at": "2020-08-14T10:27:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I see this very often when running tests locally:\r\n\r\n```\r\n___________________________ TestLocustRunner.test_cpu_warning ___________________________\r\n\r\nself = <locust.test.test_runners.TestLocustRunner testMethod=test_cpu_warning>\r\n\r\n    def test_cpu_warning(self):\r\n        _monitor_interval = runners.CPU_MONITOR_INTERVAL\r\n        runners.CPU_MONITOR_INTERVAL = 2.0\r\n        try:\r\n            class CpuUser(User):\r\n                wait_time = constant(0.001)\r\n                @task\r\n                def cpu_task(self):\r\n                    for i in range(1000000):\r\n                        _ = 3 / 2\r\n            environment = Environment(user_classes=[CpuUser])\r\n            runner = LocalRunner(environment)\r\n            self.assertFalse(runner.cpu_warning_emitted)\r\n            runner.spawn_users(1, 1, wait=False)\r\n            sleep(2.5)\r\n            runner.quit()\r\n>           self.assertTrue(runner.cpu_warning_emitted)\r\nE           AssertionError: False is not true\r\n\r\ntest/test_runners.py:121: AssertionError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1507", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1507/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1507/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1507/events", "html_url": "https://github.com/locustio/locust/issues/1507", "id": 675976146, "node_id": "MDU6SXNzdWU2NzU5NzYxNDY=", "number": 1507, "title": "How to run a single test? It would make development and debugging much faster", "user": {"login": "max-rocket-internet", "id": 8859277, "node_id": "MDQ6VXNlcjg4NTkyNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8859277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-rocket-internet", "html_url": "https://github.com/max-rocket-internet", "followers_url": "https://api.github.com/users/max-rocket-internet/followers", "following_url": "https://api.github.com/users/max-rocket-internet/following{/other_user}", "gists_url": "https://api.github.com/users/max-rocket-internet/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-rocket-internet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-rocket-internet/subscriptions", "organizations_url": "https://api.github.com/users/max-rocket-internet/orgs", "repos_url": "https://api.github.com/users/max-rocket-internet/repos", "events_url": "https://api.github.com/users/max-rocket-internet/events{/privacy}", "received_events_url": "https://api.github.com/users/max-rocket-internet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-10T08:56:26Z", "updated_at": "2020-08-11T18:00:38Z", "closed_at": "2020-08-11T14:46:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've searched repeatedly, read `tox` docs but I can't work this out. It would make development and debugging tests much easier \ud83d\ude42\r\n\r\nI think it's possible like this some how:\r\n\r\n```\r\ntox -e py38 -- test_stop_users_with_hatch_rate\r\ntox -e py38 -- locust.test.test_runners::TestMasterRunner::test_stop_users_with_hatch_rate\r\ntox -e py38 -- locust.test.test_runners.TestMasterRunner\r\ntox -e py38 test/test_runners.py::TestMasterRunner::test_stop_users_with_hatch_rate\r\n```\r\n\r\nAny idea?\r\n\r\n### Environment\r\n\r\n- OS: MacOS\r\n- Python version: 3.8\r\n- Locust version: `master`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1501", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1501/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1501/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1501/events", "html_url": "https://github.com/locustio/locust/issues/1501", "id": 672730663, "node_id": "MDU6SXNzdWU2NzI3MzA2NjM=", "number": 1501, "title": "Excessive precision of metrics in losust csv stats ", "user": {"login": "vstepanov-lohika-tix", "id": 48280294, "node_id": "MDQ6VXNlcjQ4MjgwMjk0", "avatar_url": "https://avatars2.githubusercontent.com/u/48280294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vstepanov-lohika-tix", "html_url": "https://github.com/vstepanov-lohika-tix", "followers_url": "https://api.github.com/users/vstepanov-lohika-tix/followers", "following_url": "https://api.github.com/users/vstepanov-lohika-tix/following{/other_user}", "gists_url": "https://api.github.com/users/vstepanov-lohika-tix/gists{/gist_id}", "starred_url": "https://api.github.com/users/vstepanov-lohika-tix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vstepanov-lohika-tix/subscriptions", "organizations_url": "https://api.github.com/users/vstepanov-lohika-tix/orgs", "repos_url": "https://api.github.com/users/vstepanov-lohika-tix/repos", "events_url": "https://api.github.com/users/vstepanov-lohika-tix/events{/privacy}", "received_events_url": "https://api.github.com/users/vstepanov-lohika-tix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-04T11:48:29Z", "updated_at": "2020-08-10T08:58:13Z", "closed_at": "2020-08-08T21:45:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nAfter upgrade from 0.14.4 to 1.1.1 the most of metrics in csv report became with excessive precision (> 10 digits after point) \r\nIt doesn't make sense and makes report hard readable. \r\nNot reproduced in console stats\r\n\r\n### Expected behavior\r\nPrecision for time metrics & content size should be integer number.\r\nPrecision for requests rate - float with maximum 2-3 digits after point.\r\n\r\n### Actual behavior\r\nOver 10 digits after point:\r\n![image](https://user-images.githubusercontent.com/48280294/89289212-803dea80-d65f-11ea-9a6a-55fef9f3c1d3.png)\r\n\r\n\r\n### Steps to reproduce\r\nRun any test with HTTP requests & --headless & --csv=report option and check report-stats.csv result file.\r\n\r\n### Environment\r\n\r\n- OS:\r\n- Python version: 3.7.2\r\n- Locust version: 1.1.1\r\n- Locust command line that you ran: \r\nlocust -f {locust_file_path} --headless -u {users_number} -r {hatch_rate} --run-time={run_time} --csv=results --exit-code-on-error=0\r\n- Locust file contents (anonymized if necessary): - complicated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1500", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1500/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1500/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1500/events", "html_url": "https://github.com/locustio/locust/issues/1500", "id": 672299540, "node_id": "MDU6SXNzdWU2NzIyOTk1NDA=", "number": 1500, "title": "WorkerRunner spawns heartbeat before setting worker_state", "user": {"login": "Bubba74", "id": 5572744, "node_id": "MDQ6VXNlcjU1NzI3NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5572744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bubba74", "html_url": "https://github.com/Bubba74", "followers_url": "https://api.github.com/users/Bubba74/followers", "following_url": "https://api.github.com/users/Bubba74/following{/other_user}", "gists_url": "https://api.github.com/users/Bubba74/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bubba74/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bubba74/subscriptions", "organizations_url": "https://api.github.com/users/Bubba74/orgs", "repos_url": "https://api.github.com/users/Bubba74/repos", "events_url": "https://api.github.com/users/Bubba74/events{/privacy}", "received_events_url": "https://api.github.com/users/Bubba74/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-03T19:41:09Z", "updated_at": "2020-08-04T15:16:02Z", "closed_at": "2020-08-04T15:14:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\n<!-- A clear and concise description of what the bug is -->\r\nThe WorkerRunner.heartbeat() method fails with\r\nException: WorkerRunner object does not have member 'worker_state'\r\n\r\nLooking at the WorkerRunner class: https://github.com/locustio/locust/blob/f5b89d76d6027da021a3dbf2a7816d288a5dde3d/locust/runners.py#L612-L615\r\nThe heartbeat greenlet is spawned on Line#612, while the WorkerRunner.worker_state is set on Line#615. It might have been a rare case where gevent preempted the current thread in such a short gap. But it definitely happened several times.\r\n\r\n### Suggested Fix\r\nIn the WorkerRunner class:\r\nhttps://github.com/locustio/locust/blob/f5b89d76d6027da021a3dbf2a7816d288a5dde3d/locust/runners.py#L612-L615\r\nMove Line#615 to before Line#612. This guarantees that WorkerRunner.worker_state is set for all calls to heartbeat().\r\n\r\n### Expected behavior\r\n<!-- Tell us what you think should happen -->\r\nThere should not be an exception.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\nThe exception occurs.\r\n\r\n### Steps to reproduce\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\nI'm struggling to reproduce this, but the issue seems easy enough to believe and a possible fix is super easy.\r\n\r\n### Environment\r\n\r\n- OS:\r\nLinux 4.4.0-166-generic #195-Ubuntu GNU/Linux\r\n- Python version:\r\nPython 3.6.9 (2ad108f17bdb, Apr 07 2020, 02:59:05)\r\n[PyPy 7.3.1 with GCC 7.3.1 20180303 (Red Hat 7.3.1-5)]\r\n- Locust version:\r\nlocust 1.1.1\r\n\r\n- I can't reproduce this, so I can't provide details here. But I ran a master/1worker setup, both created via library calls, not the command line.\r\n  * Locust command line that you ran:\r\n  * Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1499", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1499/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1499/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1499/events", "html_url": "https://github.com/locustio/locust/issues/1499", "id": 672171154, "node_id": "MDU6SXNzdWU2NzIxNzExNTQ=", "number": 1499, "title": "Stop load test after one iteration", "user": {"login": "Zeltserj", "id": 47822262, "node_id": "MDQ6VXNlcjQ3ODIyMjYy", "avatar_url": "https://avatars3.githubusercontent.com/u/47822262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zeltserj", "html_url": "https://github.com/Zeltserj", "followers_url": "https://api.github.com/users/Zeltserj/followers", "following_url": "https://api.github.com/users/Zeltserj/following{/other_user}", "gists_url": "https://api.github.com/users/Zeltserj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zeltserj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zeltserj/subscriptions", "organizations_url": "https://api.github.com/users/Zeltserj/orgs", "repos_url": "https://api.github.com/users/Zeltserj/repos", "events_url": "https://api.github.com/users/Zeltserj/events{/privacy}", "received_events_url": "https://api.github.com/users/Zeltserj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}, {"id": 1003994742, "node_id": "MDU6TGFiZWwxMDAzOTk0NzQy", "url": "https://api.github.com/repos/locustio/locust/labels/waiting%20on%20contributor", "name": "waiting on contributor", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-03T15:48:17Z", "updated_at": "2020-08-20T20:11:57Z", "closed_at": "2020-08-20T20:11:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI want to implement a \"load test sanity check\" so when my team commits new code it doesn't break the load testing logic.\r\nSo I have a set of simple tasks that I want one user to preform and then quit. But there is no \"quit after all tasks were done once\" feature! This sanity check will be put in a Docker image and later scaled, so it makes sense to use locust to make sure the whole pipeline works. I can only use `--run-time` but I do not want to commit to a certain runtime.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1497", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1497/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1497/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1497/events", "html_url": "https://github.com/locustio/locust/issues/1497", "id": 668929708, "node_id": "MDU6SXNzdWU2Njg5Mjk3MDg=", "number": 1497, "title": "how rps works and how to increase it", "user": {"login": "acorrea-B", "id": 63741555, "node_id": "MDQ6VXNlcjYzNzQxNTU1", "avatar_url": "https://avatars2.githubusercontent.com/u/63741555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acorrea-B", "html_url": "https://github.com/acorrea-B", "followers_url": "https://api.github.com/users/acorrea-B/followers", "following_url": "https://api.github.com/users/acorrea-B/following{/other_user}", "gists_url": "https://api.github.com/users/acorrea-B/gists{/gist_id}", "starred_url": "https://api.github.com/users/acorrea-B/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acorrea-B/subscriptions", "organizations_url": "https://api.github.com/users/acorrea-B/orgs", "repos_url": "https://api.github.com/users/acorrea-B/repos", "events_url": "https://api.github.com/users/acorrea-B/events{/privacy}", "received_events_url": "https://api.github.com/users/acorrea-B/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-30T16:20:09Z", "updated_at": "2020-07-31T09:03:00Z", "closed_at": "2020-07-31T00:52:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "we were doing some load tests to an API we put the wait time between 1 and 3 and we put Number of total users to simulate in 200 the Hatch rate from three different machines at the same time, the rps in the three machines remains between 7 and 10 which was the one with the highest value as can be seen in the attached image one of the samples, but we do not understand for sure why it happens or we would like to have more information about it thanks.\r\n![total_requests_per_second_1596065142](https://user-images.githubusercontent.com/63741555/88947510-3cf60d00-d256-11ea-8493-8101c08ffe0c.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1495", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1495/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1495/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1495/events", "html_url": "https://github.com/locustio/locust/issues/1495", "id": 666884685, "node_id": "MDU6SXNzdWU2NjY4ODQ2ODU=", "number": 1495, "title": "Locust skips class task", "user": {"login": "shallyyy", "id": 25824411, "node_id": "MDQ6VXNlcjI1ODI0NDEx", "avatar_url": "https://avatars3.githubusercontent.com/u/25824411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shallyyy", "html_url": "https://github.com/shallyyy", "followers_url": "https://api.github.com/users/shallyyy/followers", "following_url": "https://api.github.com/users/shallyyy/following{/other_user}", "gists_url": "https://api.github.com/users/shallyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/shallyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shallyyy/subscriptions", "organizations_url": "https://api.github.com/users/shallyyy/orgs", "repos_url": "https://api.github.com/users/shallyyy/repos", "events_url": "https://api.github.com/users/shallyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/shallyyy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-28T08:37:55Z", "updated_at": "2020-08-10T15:34:08Z", "closed_at": "2020-08-10T15:34:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "We've been upgrading our systems to locust 1.1.1 from a much earlier system and we can't reproduce what we had before. Our code looks similar to this:\r\n\r\n\r\n```\r\nclass IterationTaskSet(HttpUser):\r\n    wait_time = constant(1)\r\n\r\n    def on_start(self):\r\n        self.test_context = context.create_test_context(self.base_logger_name)\r\n\r\n    @task\r\n    class StuffTaskSet(SequentialTaskSet):\r\n\r\n        def on_start(self):\r\n            iteration_count = str(next(self.parent.iteration_counter)\r\n\r\n        @task\r\n        @util.fails_task_set\r\n        def create_stuff(self):\r\n            self.scenario.create_stuffr()\r\n\r\n        @task\r\n        def complete_iteration(self):\r\n            self.interrupt()\r\n\r\n    @task\r\n    def stop_locust(self):\r\n        self.environment.reached_end = True\r\n        self.environment.runner.quit()\r\n```\r\n\r\nBefore we would use the annotation @seq_task and @task(NumberOfIterations) to run StuffTaskSet however many times we needed, including the methods functions within it, and finally run Stop_locust. \r\n\r\nNow stop locust is ran before before StuffTaskSet after swapping out @seq_task\r\n\r\n- Python version: 3.7\r\n- Locust version: 1.1.1\r\n- Locust command line that you ran: locust_venv/bin/locust -f ./locust/locust.py --host=https://fake_url.com -u ${NUM} -r 1 --headless --only-summary --run-time 1h50m\r\n- Locust file contents (anonymized if necessary): see above", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1493", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1493/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1493/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1493/events", "html_url": "https://github.com/locustio/locust/issues/1493", "id": 665486872, "node_id": "MDU6SXNzdWU2NjU0ODY4NzI=", "number": 1493, "title": "The locust python instance can use max 1 cpu core on macOS", "user": {"login": "bnlcnd", "id": 35465720, "node_id": "MDQ6VXNlcjM1NDY1NzIw", "avatar_url": "https://avatars3.githubusercontent.com/u/35465720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnlcnd", "html_url": "https://github.com/bnlcnd", "followers_url": "https://api.github.com/users/bnlcnd/followers", "following_url": "https://api.github.com/users/bnlcnd/following{/other_user}", "gists_url": "https://api.github.com/users/bnlcnd/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnlcnd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnlcnd/subscriptions", "organizations_url": "https://api.github.com/users/bnlcnd/orgs", "repos_url": "https://api.github.com/users/bnlcnd/repos", "events_url": "https://api.github.com/users/bnlcnd/events{/privacy}", "received_events_url": "https://api.github.com/users/bnlcnd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-25T01:09:45Z", "updated_at": "2020-07-27T02:51:26Z", "closed_at": "2020-07-25T10:23:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nI have a simple locust file which hit an json rest endpoint. I start the load with 50 user with hatch rate 25. Then I try to keep adding users in the next run. No matter how many user I specify in the command, I can see that the CPU is only top at 100%CPU cores on my mac with 16CPU cores.\r\n\r\n### Expected behavior\r\nI expect it to take more CPU and ram when the load is increasing.\r\n\r\n### Actual behavior\r\nCPU only top at 1 full core never beyond that.\r\n\r\n### Steps to reproduce\r\nrun the locust command below with the python script at the same folder.\r\n\r\nversions of python and locust\r\n```sh\r\ndev01:~$ locust --version\r\nlocust 1.1.1\r\n\r\ndev01:~$ python3 -V\r\nPython 3.8.4\r\n\r\ndev01:~$ python -V\r\nPython 2.7.16\r\n\r\n```\r\n\r\n\r\n### Environment\r\n- OS: MacOS 10.15.6\r\n- Python version: 3.8.4\r\n- Locust version: 1.1.1\r\n- Locust command line that you ran: locust -f class-test-random-site-12month.py --host=https://report.dev.int --headless -u 500 -r 100 -t 3m --csv=result-12mon\r\n\r\n- Locust file contents (anonymized if necessary):\r\n```py\r\nimport random\r\nfrom locust import HttpUser, task, between\r\nfrom locust.contrib.fasthttp import FastHttpUser\r\n\r\nclass QuickstartUser(HttpUser):\r\n    wait_time = between(0, 0)\r\n    @task\r\n    def article_12mon(self):\r\n        # top 20 stores in test data\r\n        storeList = [7041,7011,7013,7047,7042, 7043, 7063]\r\n        # top departments excluding seasonal/garden\r\n        deptList = [27, 24, 59, 29, 25, 23]\r\n        storeId = str(random.choice(storeList))\r\n        deptId = str(random.choice(deptList))\r\n        self.client.get(\"/dashboard/store/\" + storeId + \"/departments/\" + deptId + \"/classes?filterSelection=12MON\", name=\"class-test - store: \" + storeId + \" - dept: \" + deptId)\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1488", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1488/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1488/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1488/events", "html_url": "https://github.com/locustio/locust/issues/1488", "id": 664325140, "node_id": "MDU6SXNzdWU2NjQzMjUxNDA=", "number": 1488, "title": "Allow negative hatch rate for ramping down", "user": {"login": "max-rocket-internet", "id": 8859277, "node_id": "MDQ6VXNlcjg4NTkyNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8859277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-rocket-internet", "html_url": "https://github.com/max-rocket-internet", "followers_url": "https://api.github.com/users/max-rocket-internet/followers", "following_url": "https://api.github.com/users/max-rocket-internet/following{/other_user}", "gists_url": "https://api.github.com/users/max-rocket-internet/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-rocket-internet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-rocket-internet/subscriptions", "organizations_url": "https://api.github.com/users/max-rocket-internet/orgs", "repos_url": "https://api.github.com/users/max-rocket-internet/repos", "events_url": "https://api.github.com/users/max-rocket-internet/events{/privacy}", "received_events_url": "https://api.github.com/users/max-rocket-internet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T09:24:43Z", "updated_at": "2020-08-14T13:52:37Z", "closed_at": "2020-08-14T13:52:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the solution you'd like\r\n\r\nCurrently if you edit a running test with a lower amount of users it jumps straight down to this number of users. It would be cool if we could ramp down to this new value with a negative hatch rate \ud83d\ude42\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1487", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1487/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1487/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1487/events", "html_url": "https://github.com/locustio/locust/issues/1487", "id": 663874109, "node_id": "MDU6SXNzdWU2NjM4NzQxMDk=", "number": 1487, "title": "Negative min_response_time shown in stats", "user": {"login": "max-rocket-internet", "id": 8859277, "node_id": "MDQ6VXNlcjg4NTkyNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8859277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-rocket-internet", "html_url": "https://github.com/max-rocket-internet", "followers_url": "https://api.github.com/users/max-rocket-internet/followers", "following_url": "https://api.github.com/users/max-rocket-internet/following{/other_user}", "gists_url": "https://api.github.com/users/max-rocket-internet/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-rocket-internet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-rocket-internet/subscriptions", "organizations_url": "https://api.github.com/users/max-rocket-internet/orgs", "repos_url": "https://api.github.com/users/max-rocket-internet/repos", "events_url": "https://api.github.com/users/max-rocket-internet/events{/privacy}", "received_events_url": "https://api.github.com/users/max-rocket-internet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-07-22T16:00:36Z", "updated_at": "2020-07-23T17:21:34Z", "closed_at": "2020-07-23T17:21:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nNegative value shown for `min_response_time`:\r\n\r\n![Screen Shot 2020-07-22 at 17 58 54](https://user-images.githubusercontent.com/8859277/88199373-124bf900-cc45-11ea-9186-6632cd1a0eb4.png)\r\n\r\n### Expected behavior\r\n\r\n0 or positive value.\r\n\r\n### Actual behavior\r\n\r\nNegative value shown for `min_response_time`\r\n\r\n### Steps to reproduce\r\n\r\nI have a branch local docker-compose setup to reproduce it easily. But it's just 1 worker calling nginx in another docker container.\r\n\r\n### Environment\r\n\r\n- OS: Docker\r\n- Python version: -\r\n- Locust version: current master", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1486", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1486/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1486/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1486/events", "html_url": "https://github.com/locustio/locust/issues/1486", "id": 659107275, "node_id": "MDU6SXNzdWU2NTkxMDcyNzU=", "number": 1486, "title": "when locust call teardown(), the param environment is Object, but the fire() param  **kwargs needs dict ", "user": {"login": "FANHIDE", "id": 29531967, "node_id": "MDQ6VXNlcjI5NTMxOTY3", "avatar_url": "https://avatars3.githubusercontent.com/u/29531967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FANHIDE", "html_url": "https://github.com/FANHIDE", "followers_url": "https://api.github.com/users/FANHIDE/followers", "following_url": "https://api.github.com/users/FANHIDE/following{/other_user}", "gists_url": "https://api.github.com/users/FANHIDE/gists{/gist_id}", "starred_url": "https://api.github.com/users/FANHIDE/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FANHIDE/subscriptions", "organizations_url": "https://api.github.com/users/FANHIDE/orgs", "repos_url": "https://api.github.com/users/FANHIDE/repos", "events_url": "https://api.github.com/users/FANHIDE/events{/privacy}", "received_events_url": "https://api.github.com/users/FANHIDE/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-17T10:11:56Z", "updated_at": "2020-08-10T15:34:30Z", "closed_at": "2020-08-10T15:34:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Describe the bug\r\n<!--  teardown() include -->\r\n![image](https://user-images.githubusercontent.com/29531967/87774699-78a4d600-c857-11ea-8857-f2d740fa1df6.png)\r\n![image](https://user-images.githubusercontent.com/29531967/87775049-0385d080-c858-11ea-82c8-2598ad305f82.png)\r\n![image](https://user-images.githubusercontent.com/29531967/87775380-96266f80-c858-11ea-935d-2cfbdc324077.png)\r\n\r\n### Expected behavior\r\n<!-- Tell us what you think should happen -->\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\n\r\n### Steps to reproduce\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\n\r\n### Environment\r\n\r\n- OS: mac\r\n- Python version: python 3.7\r\n- Locust version: locust v1.1.1\r\n- Locust command line that you ran: python3 locust -f locust_file/dynamice_user_credentials.py --host=*** -u 2000 --worker --master-host=***\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1485", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1485/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1485/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1485/events", "html_url": "https://github.com/locustio/locust/issues/1485", "id": 658513017, "node_id": "MDU6SXNzdWU2NTg1MTMwMTc=", "number": 1485, "title": "Resource utilization metrics based on users", "user": {"login": "endejoli", "id": 16251873, "node_id": "MDQ6VXNlcjE2MjUxODcz", "avatar_url": "https://avatars3.githubusercontent.com/u/16251873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/endejoli", "html_url": "https://github.com/endejoli", "followers_url": "https://api.github.com/users/endejoli/followers", "following_url": "https://api.github.com/users/endejoli/following{/other_user}", "gists_url": "https://api.github.com/users/endejoli/gists{/gist_id}", "starred_url": "https://api.github.com/users/endejoli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/endejoli/subscriptions", "organizations_url": "https://api.github.com/users/endejoli/orgs", "repos_url": "https://api.github.com/users/endejoli/repos", "events_url": "https://api.github.com/users/endejoli/events{/privacy}", "received_events_url": "https://api.github.com/users/endejoli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-16T19:52:46Z", "updated_at": "2020-07-24T17:29:07Z", "closed_at": "2020-07-24T17:29:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\".\r\n-->\r\n\r\n### Is your feature request related to a problem? Please describe.\r\n\r\nWe are running  locust on Kubernetes in distributed mode. We wanted to specify resource requests and limits in the Kubernetes YAML file. Multiple projects will be using the same YAML and they require a different configuration for their testing. Some projects may be testing with 1000 users, some may be testing with 100000 users etc. I am looking for some kind of chart if someone has which can give me an idea about ideal cpu/memory configuration for locust master and worker based on user counts. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1484", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1484/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1484/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1484/events", "html_url": "https://github.com/locustio/locust/issues/1484", "id": 657880613, "node_id": "MDU6SXNzdWU2NTc4ODA2MTM=", "number": 1484, "title": "using locust as a library, events.test_stop.add_listener is not work", "user": {"login": "gxy501", "id": 6625358, "node_id": "MDQ6VXNlcjY2MjUzNTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/6625358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gxy501", "html_url": "https://github.com/gxy501", "followers_url": "https://api.github.com/users/gxy501/followers", "following_url": "https://api.github.com/users/gxy501/following{/other_user}", "gists_url": "https://api.github.com/users/gxy501/gists{/gist_id}", "starred_url": "https://api.github.com/users/gxy501/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gxy501/subscriptions", "organizations_url": "https://api.github.com/users/gxy501/orgs", "repos_url": "https://api.github.com/users/gxy501/repos", "events_url": "https://api.github.com/users/gxy501/events{/privacy}", "received_events_url": "https://api.github.com/users/gxy501/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-16T06:12:32Z", "updated_at": "2020-07-16T11:57:27Z", "closed_at": "2020-07-16T11:26:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe\r\nusing locust as a library, events.test_stop.add_listener is not work\r\n\r\n\r\n### Environment\r\n\r\n- OS:\r\n- Python version: 3.8.0\r\n- Locust version: locust 1.1.1\r\n- Locust command line that you ran:\r\n- Locust file contents (anonymized if necessary):\r\n```\r\nimport gevent\r\nfrom locust import HttpUser, task, constant\r\nfrom locust.env import Environment\r\nfrom locust.stats import stats_printer\r\nfrom locust.log import setup_logging\r\nfrom locust.event import EventHook\r\nfrom locust import events\r\n\r\nsetup_logging(\"INFO\", None)\r\n\r\nmy_event = EventHook()\r\ndef on_my_event(**kw):\r\n    print('my event')\r\n\r\nmy_event.add_listener(on_my_event)\r\n\r\n@events.test_stop.add_listener\r\ndef on_test_stop(**kwargs):\r\n    print('on test stop event')\r\n\r\nclass User(HttpUser):\r\n    wait_time = constant(2)\r\n    host = \"https://www.baidu.com\"\r\n\r\n    @task\r\n    def my_task(self):\r\n        my_event.fire()\r\n        self.client.get(\"/\")\r\n\r\n# setup Environment and Runner\r\nenv = Environment(user_classes=[User])\r\nenv.create_local_runner()\r\n\r\n# start a WebUI instance\r\nenv.create_web_ui(\"0.0.0.0\", 8089)\r\n\r\n# start a greenlet that periodically outputs the current stats\r\ngevent.spawn(stats_printer(env.stats))\r\n\r\n# start the test\r\nenv.runner.start(1, hatch_rate=10)\r\n\r\n# in 60 seconds stop the runner\r\ngevent.spawn_later(10, lambda: env.runner.quit())\r\n\r\n# wait for the greenlets\r\nenv.runner.greenlet.join()\r\n\r\n# stop the web server for good measures\r\nenv.web_ui.stop()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1483", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1483/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1483/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1483/events", "html_url": "https://github.com/locustio/locust/issues/1483", "id": 657839677, "node_id": "MDU6SXNzdWU2NTc4Mzk2Nzc=", "number": 1483, "title": "Can not install locust on windows due to geventhttpclient", "user": {"login": "wyatt-z", "id": 6083180, "node_id": "MDQ6VXNlcjYwODMxODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/6083180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wyatt-z", "html_url": "https://github.com/wyatt-z", "followers_url": "https://api.github.com/users/wyatt-z/followers", "following_url": "https://api.github.com/users/wyatt-z/following{/other_user}", "gists_url": "https://api.github.com/users/wyatt-z/gists{/gist_id}", "starred_url": "https://api.github.com/users/wyatt-z/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wyatt-z/subscriptions", "organizations_url": "https://api.github.com/users/wyatt-z/orgs", "repos_url": "https://api.github.com/users/wyatt-z/repos", "events_url": "https://api.github.com/users/wyatt-z/events{/privacy}", "received_events_url": "https://api.github.com/users/wyatt-z/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-16T04:33:39Z", "updated_at": "2020-07-16T08:42:25Z", "closed_at": "2020-07-16T08:42:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\n<!-- A clear and concise description of what the bug is -->\r\nCan't install geventhttpclient, it needs Microsoft Visual C++ Build Tools. So intall locust failed.\r\nAnd Microsoft Visual C++ Build Tools is too heavy. Better avoid it if possible.\r\n### Expected behavior\r\n<!-- Tell us what you think should happen -->\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\nInstalling collected packages: geventhttpclient\r\nRunning setup.py install for geventhttpclient ... error\r\nERROR: Command errored out with exit status 1:\r\ncommand: 'c:\\python38\\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'C:\\Users\\hooply\\AppData\\Local\\Temp\\pip-install-y9_y11l_\\geventhttpclient\\setup.py'\"'\"'; file='\"'\"'C:\\Users\\hooply\\AppData\\Local\\Temp\\pip-install-y9_y11l_\\geventhttpclient\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(file);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, file, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\hooply\\AppData\\Local\\Temp\\pip-record-ajhtzswu\\install-record.txt' --single-version-externally-managed --compile --install-headers 'c:\\python38\\Include\\geventhttpclient'\r\ncwd: C:\\Users\\hooply\\AppData\\Local\\Temp\\pip-install-y9_y11l_\\geventhttpclient\r\nComplete output (28 lines):\r\nrunning install\r\nrunning build\r\nrunning build_py\r\ncreating build\r\ncreating build\\lib.win-amd64-3.8\r\ncreating build\\lib.win-amd64-3.8\\geventhttpclient\r\ncopying src\\geventhttpclient\\client.py -> build\\lib.win-amd64-3.8\\geventhttpclient\r\ncopying src\\geventhttpclient\\connectionpool.py -> build\\lib.win-amd64-3.8\\geventhttpclient\r\ncopying src\\geventhttpclient\\url.py -> build\\lib.win-amd64-3.8\\geventhttpclient\r\ncopying src\\geventhttpclient\\useragent.py -> build\\lib.win-amd64-3.8\\geventhttpclient\r\ncopying src\\geventhttpclient_init_.py -> build\\lib.win-amd64-3.8\\geventhttpclient\r\nrunning egg_info\r\nwriting src\\geventhttpclient.egg-info\\PKG-INFO\r\nwriting dependency_links to src\\geventhttpclient.egg-info\\dependency_links.txt\r\nwriting requirements to src\\geventhttpclient.egg-info\\requires.txt\r\nwriting top-level names to src\\geventhttpclient.egg-info\\top_level.txt\r\nreading manifest file 'src\\geventhttpclient.egg-info\\SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwarning: no previously-included files matching 'pycache' found anywhere in distribution\r\nwarning: no previously-included files matching '*.py[co]' found anywhere in distribution\r\nwarning: no files found matching 'CHANGELOG'\r\nwriting manifest file 'src\\geventhttpclient.egg-info\\SOURCES.txt'\r\nrunning build_ext\r\nbuilding 'geventhttpclient._parser' extension\r\nerror: Microsoft Visual C++ 14.0 is required. Get it with \"Microsoft Visual C++ Build Tools\": https://visualstudio.microsoft.com/downloads/\r\n### Steps to reproduce\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\npip install locust\r\n### Environment\r\n\r\n- OS: Windows 10-64bit\r\n- Python version: 3.8\r\n- Locust version: latest\r\n- Locust command line that you ran:\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1482", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1482/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1482/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1482/events", "html_url": "https://github.com/locustio/locust/issues/1482", "id": 656942085, "node_id": "MDU6SXNzdWU2NTY5NDIwODU=", "number": 1482, "title": "Locust1.0.3 Master is not receiving all metrics from workers", "user": {"login": "nityasantoshi", "id": 8496177, "node_id": "MDQ6VXNlcjg0OTYxNzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8496177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nityasantoshi", "html_url": "https://github.com/nityasantoshi", "followers_url": "https://api.github.com/users/nityasantoshi/followers", "following_url": "https://api.github.com/users/nityasantoshi/following{/other_user}", "gists_url": "https://api.github.com/users/nityasantoshi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nityasantoshi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nityasantoshi/subscriptions", "organizations_url": "https://api.github.com/users/nityasantoshi/orgs", "repos_url": "https://api.github.com/users/nityasantoshi/repos", "events_url": "https://api.github.com/users/nityasantoshi/events{/privacy}", "received_events_url": "https://api.github.com/users/nityasantoshi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-14T22:44:25Z", "updated_at": "2020-07-24T18:39:34Z", "closed_at": "2020-07-24T18:39:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nLocust Master is not receiving all metrics from workers.I am running my pods in openshift platform. Master Pod has below errors.But Worker is hatching all the users. When I run the same test in local, all the metrics going to master.\r\n\r\n[2020-07-14 22:42:30,404] psr-test-psr-testing-master-wa6oa-wrb4z/ERROR/locust.runners: RPCError found when receiving from client: ZMQ interrupted message\r\n[2020-07-14 22:42:30,654] psr-test-psr-testing-master-wa6oa-wrb4z/INFO/locust.runners: Reset connection to worker\r\n\r\n\r\n\r\n### Environment\r\n\r\n- OS:\r\n- Python version: 3.8\r\n- Locust version: 1.0.3\r\n- Openshift version-4.3.28", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1481", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1481/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1481/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1481/events", "html_url": "https://github.com/locustio/locust/issues/1481", "id": 656126633, "node_id": "MDU6SXNzdWU2NTYxMjY2MzM=", "number": 1481, "title": "All HttpUsers share single session", "user": {"login": "therealmitchconnors", "id": 821270, "node_id": "MDQ6VXNlcjgyMTI3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/821270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therealmitchconnors", "html_url": "https://github.com/therealmitchconnors", "followers_url": "https://api.github.com/users/therealmitchconnors/followers", "following_url": "https://api.github.com/users/therealmitchconnors/following{/other_user}", "gists_url": "https://api.github.com/users/therealmitchconnors/gists{/gist_id}", "starred_url": "https://api.github.com/users/therealmitchconnors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therealmitchconnors/subscriptions", "organizations_url": "https://api.github.com/users/therealmitchconnors/orgs", "repos_url": "https://api.github.com/users/therealmitchconnors/repos", "events_url": "https://api.github.com/users/therealmitchconnors/events{/privacy}", "received_events_url": "https://api.github.com/users/therealmitchconnors/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-13T20:43:42Z", "updated_at": "2020-07-20T18:44:12Z", "closed_at": "2020-07-20T18:42:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Note: I'm hesitant to submit this, as I'm not 100% confident in my reading of the code.  Apologies if I've got it wrong.\r\n\r\n### Describe the bug\r\nIt looks like all http users on a given instance of locust share a single http Session.\r\n\r\n### Expected behavior\r\nEach user should have their own session.\r\n\r\n### Actual behavior\r\nI haven't found a way to test this in a running environment.  It just appears problematic when reading the code.\r\n\r\n### Steps to reproduce\r\nhttps://github.com/locustio/locust/blob/e7758991e1b0616015b269d913eaaad84fdb3398/locust/clients.py#L167\r\nthe _send_request_safe_mode function uses requests.Session to send the request, which is a global instance of the Session class.  Thus, all requests sent from a single locust process will reuse this one session.  I believe the expected behavior is that each User should have their own session.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1480", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1480/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1480/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1480/events", "html_url": "https://github.com/locustio/locust/issues/1480", "id": 655913588, "node_id": "MDU6SXNzdWU2NTU5MTM1ODg=", "number": 1480, "title": "1.1.1 version is missing in Pypi", "user": {"login": "anotinelg", "id": 46445178, "node_id": "MDQ6VXNlcjQ2NDQ1MTc4", "avatar_url": "https://avatars3.githubusercontent.com/u/46445178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anotinelg", "html_url": "https://github.com/anotinelg", "followers_url": "https://api.github.com/users/anotinelg/followers", "following_url": "https://api.github.com/users/anotinelg/following{/other_user}", "gists_url": "https://api.github.com/users/anotinelg/gists{/gist_id}", "starred_url": "https://api.github.com/users/anotinelg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anotinelg/subscriptions", "organizations_url": "https://api.github.com/users/anotinelg/orgs", "repos_url": "https://api.github.com/users/anotinelg/repos", "events_url": "https://api.github.com/users/anotinelg/events{/privacy}", "received_events_url": "https://api.github.com/users/anotinelg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-13T14:51:39Z", "updated_at": "2020-07-13T22:03:22Z", "closed_at": "2020-07-13T22:03:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are you planning to add the versions 1.1.1 to Pypi?\r\nThank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1478", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1478/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1478/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1478/events", "html_url": "https://github.com/locustio/locust/issues/1478", "id": 654840237, "node_id": "MDU6SXNzdWU2NTQ4NDAyMzc=", "number": 1478, "title": "Event hooks are not working as per the documentation", "user": {"login": "WillPower3309", "id": 13266308, "node_id": "MDQ6VXNlcjEzMjY2MzA4", "avatar_url": "https://avatars2.githubusercontent.com/u/13266308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WillPower3309", "html_url": "https://github.com/WillPower3309", "followers_url": "https://api.github.com/users/WillPower3309/followers", "following_url": "https://api.github.com/users/WillPower3309/following{/other_user}", "gists_url": "https://api.github.com/users/WillPower3309/gists{/gist_id}", "starred_url": "https://api.github.com/users/WillPower3309/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WillPower3309/subscriptions", "organizations_url": "https://api.github.com/users/WillPower3309/orgs", "repos_url": "https://api.github.com/users/WillPower3309/repos", "events_url": "https://api.github.com/users/WillPower3309/events{/privacy}", "received_events_url": "https://api.github.com/users/WillPower3309/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-10T14:56:57Z", "updated_at": "2020-08-17T22:07:09Z", "closed_at": "2020-07-10T15:15:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\n<!-- A clear and concise description of what the bug is -->\r\nOn an attempt to add a listener to test_start, I am met with `module 'locust.events' has no attribute 'test_start'`\r\n\r\n### Expected behavior\r\n<!-- Tell us what you think should happen -->\r\n```\r\n@events.test_start.add_listener\r\ndef on_test_start(**kwargs):\r\n    print(\"A new test is starting\")\r\n```\r\nShould print \"a new test is starting\" when the test is ran\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\n```\r\nlocust-master_1    | [2020-07-10 14:49:00,185] 8821da7114b5/ERROR/stderr: Traceback (most recent call last):\r\nlocust-master_1    | [2020-07-10 14:49:00,185] 8821da7114b5/ERROR/stderr: File \"/usr/local/bin/locust\", line 8, in <module>\r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: \r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: sys.exit(main())\r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: \r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: File \"/usr/local/lib/python3.7/site-packages/locust/main.py\", line 420, in main\r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: \r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: docstring, locusts = load_locustfile(locustfile)\r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: \r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: File \"/usr/local/lib/python3.7/site-packages/locust/main.py\", line 389, in load_locustfile\r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: \r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: imported = __import_locustfile__(locustfile, path)\r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: \r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: File \"/usr/local/lib/python3.7/site-packages/locust/main.py\", line 365, in __import_locustfile__\r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: \r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: return  source.load_module()\r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: \r\nlocust-master_1    | [2020-07-10 14:49:00,186] 8821da7114b5/ERROR/stderr: File \"<frozen importlib._bootstrap_external>\", line 407, in _check_name_wrapper\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: File \"<frozen importlib._bootstrap_external>\", line 907, in load_module\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: File \"<frozen importlib._bootstrap_external>\", line 732, in load_module\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: File \"<frozen importlib._bootstrap>\", line 265, in _load_module_shim\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: File \"<frozen importlib._bootstrap>\", line 696, in _load\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: File \"/src/locustfile.py\", line 54, in <module>\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: \r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: @events.test_start.add_listener\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: \r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: AttributeError\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: :\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: module 'locust.events' has no attribute 'test_start'\r\nlocust-master_1    | [2020-07-10 14:49:00,187] 8821da7114b5/ERROR/stderr: \r\nproject_locust-master_1 exited with code 0\r\n```\r\n### Steps to reproduce\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\nRun the below script\r\n```\r\nfrom locust import events\r\n\r\n@events.test_start.add_listener\r\ndef on_test_start(**kwargs):\r\n    print(\"A new test is starting\")\r\n```\r\n### Environment\r\n\r\n- OS: Dockerized python 3.7\r\n- Python version: 3.7\r\n- Locust version: locustio==0.14.6\r\n- Locust command line that you ran:\r\n- Locust file contents (anonymized if necessary):\r\n```\r\nfrom locust import events\r\n\r\n@events.test_start.add_listener\r\ndef on_test_start(**kwargs):\r\n    print(\"A new test is starting\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1476", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1476/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1476/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1476/events", "html_url": "https://github.com/locustio/locust/issues/1476", "id": 654599439, "node_id": "MDU6SXNzdWU2NTQ1OTk0Mzk=", "number": 1476, "title": "[Need Help] I want build a docker-compose for run with locust old version 0.14.6", "user": {"login": "bixuiquay", "id": 43947752, "node_id": "MDQ6VXNlcjQzOTQ3NzUy", "avatar_url": "https://avatars0.githubusercontent.com/u/43947752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bixuiquay", "html_url": "https://github.com/bixuiquay", "followers_url": "https://api.github.com/users/bixuiquay/followers", "following_url": "https://api.github.com/users/bixuiquay/following{/other_user}", "gists_url": "https://api.github.com/users/bixuiquay/gists{/gist_id}", "starred_url": "https://api.github.com/users/bixuiquay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bixuiquay/subscriptions", "organizations_url": "https://api.github.com/users/bixuiquay/orgs", "repos_url": "https://api.github.com/users/bixuiquay/repos", "events_url": "https://api.github.com/users/bixuiquay/events{/privacy}", "received_events_url": "https://api.github.com/users/bixuiquay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-10T08:14:22Z", "updated_at": "2020-08-18T11:26:33Z", "closed_at": "2020-07-10T11:30:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is My code:\r\n\r\nversion: '3'\r\nservices:\r\n  locust-master:\r\n    image: locustio/locust:0.14.6\r\n    volumes:\r\n        - ./locust:/mnt/locust\r\n    ports:\r\n        - \"8089:8089\"\r\n   \r\n  locust-worker:\r\n    image: locustio/locust:0.14.6\r\n    command: \"--master-host=locust-master\"\r\n    volumes:\r\n      - ./locust:/mnt/locust\r\n    \r\nIt can't start please help me review it", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1474", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1474/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1474/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1474/events", "html_url": "https://github.com/locustio/locust/issues/1474", "id": 653372013, "node_id": "MDU6SXNzdWU2NTMzNzIwMTM=", "number": 1474, "title": "Ignores the host parameter", "user": {"login": "safwansamla", "id": 60756345, "node_id": "MDQ6VXNlcjYwNzU2MzQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/60756345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/safwansamla", "html_url": "https://github.com/safwansamla", "followers_url": "https://api.github.com/users/safwansamla/followers", "following_url": "https://api.github.com/users/safwansamla/following{/other_user}", "gists_url": "https://api.github.com/users/safwansamla/gists{/gist_id}", "starred_url": "https://api.github.com/users/safwansamla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/safwansamla/subscriptions", "organizations_url": "https://api.github.com/users/safwansamla/orgs", "repos_url": "https://api.github.com/users/safwansamla/repos", "events_url": "https://api.github.com/users/safwansamla/events{/privacy}", "received_events_url": "https://api.github.com/users/safwansamla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-08T15:03:17Z", "updated_at": "2020-07-10T18:57:24Z", "closed_at": "2020-07-10T18:57:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Locust tries to start the web interface on an invalid address and it ignores the host parameter.\r\n\r\nI tried the following command\r\n\r\nlocust --host http://127.0.0.1:8089\r\n\r\nAnd I get the following error:\r\n\r\n<hostname/INFO/locust.main: Starting web interface at http://:8089\r\n....\r\nTypeError: code() takes at least 14 arguments (13 given)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1472", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1472/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1472/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1472/events", "html_url": "https://github.com/locustio/locust/issues/1472", "id": 652698519, "node_id": "MDU6SXNzdWU2NTI2OTg1MTk=", "number": 1472, "title": "Unhandled exception:  ConnectionResetError, Connection reset by peer (FastHttpUser)", "user": {"login": "mkarlovich", "id": 3885334, "node_id": "MDQ6VXNlcjM4ODUzMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3885334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkarlovich", "html_url": "https://github.com/mkarlovich", "followers_url": "https://api.github.com/users/mkarlovich/followers", "following_url": "https://api.github.com/users/mkarlovich/following{/other_user}", "gists_url": "https://api.github.com/users/mkarlovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkarlovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkarlovich/subscriptions", "organizations_url": "https://api.github.com/users/mkarlovich/orgs", "repos_url": "https://api.github.com/users/mkarlovich/repos", "events_url": "https://api.github.com/users/mkarlovich/events{/privacy}", "received_events_url": "https://api.github.com/users/mkarlovich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-07T22:28:03Z", "updated_at": "2020-08-17T22:08:04Z", "closed_at": "2020-07-08T19:46:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\nI running a test pulling large files (some > 250mb) using the fast client, when connection gets reset (\"ConnectionResetError: [Errno 104] Connection reset by peer\") on some files it throws an unhandled exception and does not log a failure.\r\n\r\n**Exception**\r\n```\r\nAttributeError: _cached_content\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/locust/user/task.py\", line 284, in run\r\n    self.execute_next_task()\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/locust/user/task.py\", line 309, in execute_next_task\r\n    self.execute_task(self._task_queue.pop(0))\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/locust/user/task.py\", line 416, in execute_task\r\n    task(self.user)\r\n  File \"/home/mkarlovich/source/locust-plugins/examples/fast_csvreader_cip.py\", line 16, in index\r\n    self.client.get(url, headers=headers)\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/locust/contrib/fasthttp.py\", line 283, in get\r\n    return self.request(\"GET\", path, **kwargs)\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/locust/contrib/fasthttp.py\", line 238, in request\r\n    request_meta[\"content_size\"] = len(response.content or \"\")\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/geventhttpclient/useragent.py\", line 186, in content\r\n    self._cached_content = self._content()\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/locust/contrib/fasthttp.py\", line 351, in _content\r\n    return super(FastResponse, self)._content()\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/geventhttpclient/useragent.py\", line 201, in _content\r\n    ret = self._response.read()\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/geventhttpclient/response.py\", line 259, in read\r\n    data = self._sock.recv(length or self.block_size)\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/gevent/_socket3.py\", line 450, in recv\r\n    return self._sock.recv(*args)\r\nConnectionResetError: [Errno 104] Connection reset by peer\r\n```\r\n\r\n### Expected behavior\r\nIt should handle this exception and report it as a failure.\r\n\r\n### Actual behavior\r\nWorkers throw exception but no failure is recorded\r\n\r\n### Steps to reproduce\r\nI can't reproduce it except in my test environment but I have a fix that seems to work:  Add ConnectionResetError to FAILURE_EXCEPTIONS in fasthttp.py.\r\n\r\n```\r\n# List of exceptions that can be raised by geventhttpclient when sending an HTTP request, \r\n# and that should result in a Locust failure\r\nFAILURE_EXCEPTIONS = (ConnectionError, ConnectionRefusedError, ConnectionResetError, socket.error, \\\r\n                      SSLError, Timeout, HTTPConnectionClosed)\r\n```\r\n### Environment\r\n\r\nOS: Ubuntu 16.04 master and workers\r\nPython version: 3.8.2\r\nLocust version: 1.0.3\r\nLocust command line that you ran:\r\nlocust -f fast_csvreader_ex.py --master --expect-workers 10 --headless -u 100 -r 1 -t 60m --csv=test100u60m10w\r\nlocust -f fast_csvreader_ex.py --worker --master-host=10.66.11.21 & # run 5 per worker machine\r\n\r\nLocust file contents (anonymized if necessary):\r\n```\r\nfrom locust_plugins.csvreader import CSVReader\r\nfrom locust import task\r\nfrom locust.contrib.fasthttp import FastHttpUser\r\nimport traceback, logging, sys\r\nimport locust.stats\r\nlocust.stats.CSV_STATS_INTERVAL_SEC = 5\r\n\r\nid_reader = CSVReader(\"ids.csv\")\r\n\r\nclass MyUser(FastHttpUser):\r\n    @task\r\n    def index(self):\r\n        headers = { \"Authorization\": \"apikey\", \"Accept\": \"application/json\" }\r\n        feed_id, file_id = next(id_reader)\r\n        url = f'/feeds/{feed_id}/files/{file_id}'\r\n        self.client.get(url, headers=headers)\r\n        \r\n    host = 'https://my-test-sever.com'\r\n    connection_timeout = 6000.0\r\n    network_timeout = 6000.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1470", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1470/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1470/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1470/events", "html_url": "https://github.com/locustio/locust/issues/1470", "id": 651691120, "node_id": "MDU6SXNzdWU2NTE2OTExMjA=", "number": 1470, "title": "self.locust can not be found", "user": {"login": "jarvan4dev", "id": 9948677, "node_id": "MDQ6VXNlcjk5NDg2Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9948677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jarvan4dev", "html_url": "https://github.com/jarvan4dev", "followers_url": "https://api.github.com/users/jarvan4dev/followers", "following_url": "https://api.github.com/users/jarvan4dev/following{/other_user}", "gists_url": "https://api.github.com/users/jarvan4dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/jarvan4dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jarvan4dev/subscriptions", "organizations_url": "https://api.github.com/users/jarvan4dev/orgs", "repos_url": "https://api.github.com/users/jarvan4dev/repos", "events_url": "https://api.github.com/users/jarvan4dev/events{/privacy}", "received_events_url": "https://api.github.com/users/jarvan4dev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-06T17:00:41Z", "updated_at": "2020-07-06T17:17:59Z", "closed_at": "2020-07-06T17:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "version: 1.1\r\n\r\n```\r\n# coding=utf-8\r\n\r\nfrom locust import HttpUser, TaskSet, task, between\r\n\r\n\r\nclass Google(TaskSet):\r\n    @task\r\n    def index(self):\r\n        print(self.locust.ids)\r\n        self.client.get(\"/\")\r\n\r\n\r\nclass MyUser(HttpUser):\r\n    tasks = [Google]\r\n    ids = [1, 2]\r\n    wait_time = between(3, 5)\r\n    host = \"http://www.google.com\"\r\n```\r\n\r\nthen error occured:\r\n```\r\n[2020-07-07 00:57:02,586] jarvan4devMac.local/ERROR/locust.user.task: 'Google' object has no attribute 'locust'\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/locust/user/task.py\", line 284, in run\r\n    self.execute_next_task()\r\n  File \"/usr/local/lib/python3.7/site-packages/locust/user/task.py\", line 309, in execute_next_task\r\n    self.execute_task(self._task_queue.pop(0))\r\n  File \"/usr/local/lib/python3.7/site-packages/locust/user/task.py\", line 321, in execute_task\r\n    task(self)\r\n  File \"/Users/jarvan4dev/Documents/locustfile.py\", line 9, in index\r\n    print(self.locust.ids)\r\nAttributeError: 'Google' object has no attribute 'locust'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1468", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1468/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1468/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1468/events", "html_url": "https://github.com/locustio/locust/issues/1468", "id": 650902877, "node_id": "MDU6SXNzdWU2NTA5MDI4Nzc=", "number": 1468, "title": "Missing URL to download full csv history", "user": {"login": "lhupfeldt", "id": 1584329, "node_id": "MDQ6VXNlcjE1ODQzMjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1584329?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lhupfeldt", "html_url": "https://github.com/lhupfeldt", "followers_url": "https://api.github.com/users/lhupfeldt/followers", "following_url": "https://api.github.com/users/lhupfeldt/following{/other_user}", "gists_url": "https://api.github.com/users/lhupfeldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/lhupfeldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lhupfeldt/subscriptions", "organizations_url": "https://api.github.com/users/lhupfeldt/orgs", "repos_url": "https://api.github.com/users/lhupfeldt/repos", "events_url": "https://api.github.com/users/lhupfeldt/events{/privacy}", "received_events_url": "https://api.github.com/users/lhupfeldt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 2115072627, "node_id": "MDU6TGFiZWwyMTE1MDcyNjI3", "url": "https://api.github.com/repos/locustio/locust/labels/low%20prio", "name": "low prio", "color": "bbe580", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-04T14:44:32Z", "updated_at": "2020-08-18T12:20:54Z", "closed_at": "2020-08-18T12:20:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm running with csv-full-history but there is no download available for this file.\r\nI suggest adding it to the downloads page.\r\nAdding \"download all as *compression-format*\" woul be a great addition as well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1461", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1461/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1461/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1461/events", "html_url": "https://github.com/locustio/locust/issues/1461", "id": 650323240, "node_id": "MDU6SXNzdWU2NTAzMjMyNDA=", "number": 1461, "title": "--run-time flag is not respected if there is an exception in a test_stop listener", "user": {"login": "camilojimenez", "id": 7208620, "node_id": "MDQ6VXNlcjcyMDg2MjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7208620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camilojimenez", "html_url": "https://github.com/camilojimenez", "followers_url": "https://api.github.com/users/camilojimenez/followers", "following_url": "https://api.github.com/users/camilojimenez/following{/other_user}", "gists_url": "https://api.github.com/users/camilojimenez/gists{/gist_id}", "starred_url": "https://api.github.com/users/camilojimenez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camilojimenez/subscriptions", "organizations_url": "https://api.github.com/users/camilojimenez/orgs", "repos_url": "https://api.github.com/users/camilojimenez/repos", "events_url": "https://api.github.com/users/camilojimenez/events{/privacy}", "received_events_url": "https://api.github.com/users/camilojimenez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-07-03T03:48:10Z", "updated_at": "2020-07-07T19:44:27Z", "closed_at": "2020-07-07T19:44:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nOn a headless session, if there is an exception thrown from a `test_stop` listener, the run-time flag is not respected and the \r\nsession keeps running indefinitely.\r\n\r\n### Expected behavior\r\nThe session should stop even if the listeners throw exceptions.\r\n\r\n### Actual behavior\r\nThe traceback is printed, and the session keeps running.\r\n\r\n### Steps to reproduce\r\nTake, for example, the following `locustfile.py`:\r\n```\r\nfrom locust import HttpUser, events, task\r\nimport time\r\n\r\n@events.test_stop.add_listener\r\ndef on_test_stop(**kwargs):\r\n  1/0\r\n\r\nclass NOOP(HttpUser):\r\n  @task\r\n  def index_page(self):\r\n    time.sleep(10)\r\n```\r\n\r\nIf locust is run with the following command line:\r\n\r\n```locust -t1 -r1 -u10 --headless  --host http://www.google.com```\r\n\r\nyou see the exception being raised and the session continues:\r\n```\r\n[2020-07-03 03:37:18,086] instance-1/INFO/locust.main: Time limit reached. Stopping Locust.\r\nTraceback (most recent call last):\r\n  File \"src/gevent/greenlet.py\", line 854, in gevent._gevent_cgreenlet.Greenlet.run\r\n  File \"/home/camilojimenez/locust/venv/lib/python3.7/site-packages/locust/main.py\", line 231, in timelimit_stop\r\n    runner.quit()\r\n  File \"/home/camilojimenez/locust/venv/lib/python3.7/site-packages/locust/runners.py\", line 294, in quit\r\n    self.stop()\r\n  File \"/home/camilojimenez/locust/venv/lib/python3.7/site-packages/locust/runners.py\", line 340, in stop\r\n    self.environment.events.test_stop.fire(environment=self.environment)\r\n  File \"/home/camilojimenez/locust/venv/lib/python3.7/site-packages/locust/event.py\", line 33, in fire\r\n    handler(**kwargs)\r\n  File \"/home/camilojimenez/locust/locustfile.py\", line 6, in on_test_stop\r\n    1/0\r\nZeroDivisionError: division by zero\r\n2020-07-03T03:37:18Z <Greenlet at 0x7fcad134b9d8: timelimit_stop> failed with ZeroDivisionError\r\n\r\n[2020-07-03 03:37:18,091] instance-1/CRITICAL/locust.main: Unhandled exception in greenlet: <Greenlet at 0x7fcad134b9d8: timelimit_stop>\r\nTraceback (most recent call last):\r\n  File \"src/gevent/greenlet.py\", line 854, in gevent._gevent_cgreenlet.Greenlet.run\r\n  File \"/home/camilojimenez/locust/venv/lib/python3.7/site-packages/locust/main.py\", line 231, in timelimit_stop\r\n    runner.quit()\r\n  File \"/home/camilojimenez/locust/venv/lib/python3.7/site-packages/locust/runners.py\", line 294, in quit\r\n    self.stop()\r\n  File \"/home/camilojimenez/locust/venv/lib/python3.7/site-packages/locust/runners.py\", line 340, in stop\r\n    self.environment.events.test_stop.fire(environment=self.environment)\r\n  File \"/home/camilojimenez/locust/venv/lib/python3.7/site-packages/locust/event.py\", line 33, in fire\r\n    handler(**kwargs)\r\n  File \"/home/camilojimenez/locust/locustfile.py\", line 6, in on_test_stop\r\n    1/0\r\nZeroDivisionError: division by zero\r\n Name                                                          # reqs      # fails     Avg     Min     Max  |  Median   req/s failures/s\r\n--------------------------------------------------------------------------------------------------------------------------------------------\r\n--------------------------------------------------------------------------------------------------------------------------------------------\r\n Aggregated                                                         0     0(0.00%)       0       0       0  |       0    0.00    0.00\r\n```\r\n\r\n### Environment\r\n\r\n- OS: MacOS\r\n- Python version: 3.7.3 \r\n- Locust version: 1.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1460", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1460/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1460/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1460/events", "html_url": "https://github.com/locustio/locust/issues/1460", "id": 650068744, "node_id": "MDU6SXNzdWU2NTAwNjg3NDQ=", "number": 1460, "title": "FastHttpUser: Show error codes on 'Failures' page for 'BadStatusCode' exception", "user": {"login": "magupov", "id": 4011794, "node_id": "MDQ6VXNlcjQwMTE3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4011794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magupov", "html_url": "https://github.com/magupov", "followers_url": "https://api.github.com/users/magupov/followers", "following_url": "https://api.github.com/users/magupov/following{/other_user}", "gists_url": "https://api.github.com/users/magupov/gists{/gist_id}", "starred_url": "https://api.github.com/users/magupov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magupov/subscriptions", "organizations_url": "https://api.github.com/users/magupov/orgs", "repos_url": "https://api.github.com/users/magupov/repos", "events_url": "https://api.github.com/users/magupov/events{/privacy}", "received_events_url": "https://api.github.com/users/magupov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-02T16:39:29Z", "updated_at": "2020-07-06T08:13:09Z", "closed_at": "2020-07-06T08:13:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For FastHttpUser `BadStatusCode` is shown on `Failures`web page without status code which is not convenient\r\n\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/4011794/86386571-9dffe480-bc9a-11ea-96dc-3f725675dac2.png)\r\n\r\nI suggest adding status code to the view, like that:\r\n\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/4011794/86386883-0949b680-bc9b-11ea-8fe6-cf2c5cd18423.png)\r\n\r\nBasically, I have changes for that which I use locally. So I can make a PR if that feature looks good", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1459", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1459/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1459/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1459/events", "html_url": "https://github.com/locustio/locust/issues/1459", "id": 649836585, "node_id": "MDU6SXNzdWU2NDk4MzY1ODU=", "number": 1459, "title": "environment object properties does not change.", "user": {"login": "AdimUser", "id": 15202718, "node_id": "MDQ6VXNlcjE1MjAyNzE4", "avatar_url": "https://avatars3.githubusercontent.com/u/15202718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdimUser", "html_url": "https://github.com/AdimUser", "followers_url": "https://api.github.com/users/AdimUser/followers", "following_url": "https://api.github.com/users/AdimUser/following{/other_user}", "gists_url": "https://api.github.com/users/AdimUser/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdimUser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdimUser/subscriptions", "organizations_url": "https://api.github.com/users/AdimUser/orgs", "repos_url": "https://api.github.com/users/AdimUser/repos", "events_url": "https://api.github.com/users/AdimUser/events{/privacy}", "received_events_url": "https://api.github.com/users/AdimUser/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-02T10:54:52Z", "updated_at": "2020-07-02T12:52:58Z", "closed_at": "2020-07-02T12:52:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Team, \r\n\r\nI am trying to run a code during the load testing is happening(eg push aggregated data to database).\r\n\r\nI am using locust init event handler --> https://docs.locust.io/en/stable/api.html#locust.event.Events.init\r\n\r\nHere is my code:\r\n\r\n![image](https://user-images.githubusercontent.com/15202718/86350513-c50be580-bc9d-11ea-95b6-5df2836de0c3.png)\r\n\r\n\r\nBut the values is always **_None_**, It does not change to an integer when load-testing is finish, please help on this  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1458", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1458/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1458/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1458/events", "html_url": "https://github.com/locustio/locust/issues/1458", "id": 648741973, "node_id": "MDU6SXNzdWU2NDg3NDE5NzM=", "number": 1458, "title": "Distributed command line cannot run ", "user": {"login": "MarcSteven", "id": 13824297, "node_id": "MDQ6VXNlcjEzODI0Mjk3", "avatar_url": "https://avatars3.githubusercontent.com/u/13824297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcSteven", "html_url": "https://github.com/MarcSteven", "followers_url": "https://api.github.com/users/MarcSteven/followers", "following_url": "https://api.github.com/users/MarcSteven/following{/other_user}", "gists_url": "https://api.github.com/users/MarcSteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcSteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcSteven/subscriptions", "organizations_url": "https://api.github.com/users/MarcSteven/orgs", "repos_url": "https://api.github.com/users/MarcSteven/repos", "events_url": "https://api.github.com/users/MarcSteven/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcSteven/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-01T07:26:04Z", "updated_at": "2020-07-07T19:41:18Z", "closed_at": "2020-07-07T19:41:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\n<!-- A clear and concise description of what the bug is -->\r\nI use the command to run but cannot start a swarming. Please like the picture\r\n` locust -f load.py --master\r\n`[2020-07-01 16:03:38,423] Marcs-MacBook-Pro.local/ERROR/stderr: Traceback (most recent call last):\r\n[2020-07-01 16:03:38,423] Marcs-MacBook-Pro.local/ERROR/stderr: File \"/Users/user/PycharmProjects/APILoadTest/venv/bin/locust\", line 10, in <module>\r\n[2020-07-01 16:03:38,423] Marcs-MacBook-Pro.local/ERROR/stderr: \r\n[2020-07-01 16:03:38,423] Marcs-MacBook-Pro.local/ERROR/stderr: sys.exit(main())\r\n[2020-07-01 16:03:38,423] Marcs-MacBook-Pro.local/ERROR/stderr: \r\n[2020-07-01 16:03:38,423] Marcs-MacBook-Pro.local/ERROR/stderr: File \"/Users/user/PycharmProjects/APILoadTest/venv/lib/python3.8/site-packages/locust/main.py\", line 495, in main\r\n[2020-07-01 16:03:38,424] Marcs-MacBook-Pro.local/ERROR/stderr: \r\n[2020-07-01 16:03:38,424] Marcs-MacBook-Pro.local/ERROR/stderr: runners.locust_runner = MasterLocustRunner(locust_classes, options)\r\n[2020-07-01 16:03:38,424] Marcs-MacBook-Pro.local/ERROR/stderr: \r\n[2020-07-01 16:03:38,424] Marcs-MacBook-Pro.local/ERROR/stderr: File \"/Users/user/PycharmProjects/APILoadTest/venv/lib/python3.8/site-packages/locust/runners.py\", line 346, in __init__\r\n[2020-07-01 16:03:38,425] Marcs-MacBook-Pro.local/ERROR/stderr: \r\n[2020-07-01 16:03:38,425] Marcs-MacBook-Pro.local/ERROR/stderr: self.server = rpc.Server(self.master_bind_host, self.master_bind_port)\r\n[2020-07-01 16:03:38,425] Marcs-MacBook-Pro.local/ERROR/stderr: \r\n[2020-07-01 16:03:38,425] Marcs-MacBook-Pro.local/ERROR/stderr: File \"/Users/user/PycharmProjects/APILoadTest/venv/lib/python3.8/site-packages/locust/rpc/zmqrpc.py\", line 41, in __init__\r\n[2020-07-01 16:03:38,426] Marcs-MacBook-Pro.local/ERROR/stderr: \r\n[2020-07-01 16:03:38,426] Marcs-MacBook-Pro.local/ERROR/stderr: self.socket.bind(\"tcp://%s:%i\" % (host, port))\r\n[2020-07-01 16:03:38,426] Marcs-MacBook-Pro.local/ERROR/stderr: \r\n[2020-07-01 16:03:38,426] Marcs-MacBook-Pro.local/ERROR/stderr: File \"zmq/backend/cython/socket.pyx\", line 550, in zmq.backend.cython.socket.Socket.bind\r\n[2020-07-01 16:03:38,426] Marcs-MacBook-Pro.local/ERROR/stderr: File \"zmq/backend/cython/checkrc.pxd\", line 26, in zmq.backend.cython.checkrc._check_rc\r\n[2020-07-01 16:03:38,426] Marcs-MacBook-Pro.local/ERROR/stderr: zmq.error\r\n[2020-07-01 16:03:38,426] Marcs-MacBook-Pro.local/ERROR/stderr: .\r\n[2020-07-01 16:03:38,426] Marcs-MacBook-Pro.local/ERROR/stderr: ZMQError\r\n[2020-07-01 16:03:38,426] Marcs-MacBook-Pro.local/ERROR/stderr: :\r\n[2020-07-01 16:03:38,426] Marcs-MacBook-Pro.local/ERROR/stderr: Address already in use\r\n[2020-07-01 16:03:38,426] Marcs-MacBook-Pro.local/ERROR/stderr: \r\n`\r\n\r\n\r\n\r\n### Expected behavior\r\n<!-- Tell us what you think should happen -->\r\nHope it can run well \r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\nCannot start swarming even though click the button of starting a swarming, it cannot go \r\n<img width=\"1648\" alt=\"\u622a\u5c4f2020-07-01 \u4e0b\u53483 22 40\" src=\"https://user-images.githubusercontent.com/13824297/86215525-420c6180-bbaf-11ea-9ef2-c2ab7baf3d2a.png\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n### Environment\r\n\r\n- OS: Mac OS\r\n- Python version:3.8\r\n- Locust version:2.4\r\n- Locust command line that you ran: locust -f YouthBombAPI.py --slave\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1457", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1457/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1457/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1457/events", "html_url": "https://github.com/locustio/locust/issues/1457", "id": 647713893, "node_id": "MDU6SXNzdWU2NDc3MTM4OTM=", "number": 1457, "title": "Unhandled exception: stream ended at an unexpected time", "user": {"login": "mkarlovich", "id": 3885334, "node_id": "MDQ6VXNlcjM4ODUzMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3885334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkarlovich", "html_url": "https://github.com/mkarlovich", "followers_url": "https://api.github.com/users/mkarlovich/followers", "following_url": "https://api.github.com/users/mkarlovich/following{/other_user}", "gists_url": "https://api.github.com/users/mkarlovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkarlovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkarlovich/subscriptions", "organizations_url": "https://api.github.com/users/mkarlovich/orgs", "repos_url": "https://api.github.com/users/mkarlovich/repos", "events_url": "https://api.github.com/users/mkarlovich/events{/privacy}", "received_events_url": "https://api.github.com/users/mkarlovich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2020-06-29T22:31:57Z", "updated_at": "2020-07-06T15:02:54Z", "closed_at": "2020-07-04T08:40:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\nI running a test pulling large files (some > 250mb) using the fast client, when connection gets dropped (\"stream ended at an unexpected time\") on some files it throws an unhandled exception and does not log a failure. \r\n\r\n**Exception:**\r\nTraceback (most recent call last):\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/geventhttpclient/useragent.py\", line 184, in content\r\n    return self._cached_content\r\nAttributeError: _cached_content\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/locust/user/task.py\", line 284, in run\r\n    self.execute_next_task()\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/locust/user/task.py\", line 309, in execute_next_task\r\n    self.execute_task(self._task_queue.pop(0))\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/locust/user/task.py\", line 416, in execute_task\r\n    task(self.user)\r\n  File \"/home/mkarlovich/source/locust-plugins/examples/fast_csvreader_ex.py\", line 17, in index\r\n    self.client.get(url, headers=headers)\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/locust/contrib/fasthttp.py\", line 272, in get\r\n    return self.request(\"GET\", path, **kwargs)\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/locust/contrib/fasthttp.py\", line 237, in request\r\n    request_meta[\"content_size\"] = len(response.content or \"\")\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/geventhttpclient/useragent.py\", line 186, in content\r\n    self._cached_content = self._content()\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/locust/contrib/fasthttp.py\", line 340, in _content\r\n    return super(FastResponse, self)._content()\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/geventhttpclient/useragent.py\", line 201, in _content\r\n    ret = self._response.read()\r\n  File \"/home/mkarlovich/.pyenv/versions/3.8.2/lib/python3.8/site-packages/geventhttpclient/response.py\", line 260, in read\r\n    self.feed(data)\r\n_parser.HTTPParseError: ('stream ended at an unexpected time', 11)\r\n\r\n### Expected behavior\r\nIt should handle this exception and report it as a failure.\r\n\r\n### Actual behavior\r\nWorkers throw exception but no failure is recorded\r\n\r\n### Steps to reproduce\r\nI can't reproduce it except under load, code is using script below which constructs file download urls from csv file.\r\n\r\n### Environment\r\n- OS: Ubuntu 16.04 master and workers\r\n- Python version: 3.8.2\r\n- Locust version: 1.0.3\r\n- Locust command line that you ran: \r\n\r\nlocust -f fast_csvreader_ex.py --master --expect-workers 10 --headless -u 100 -r 1 -t 60m --csv=test100u60m10w \r\nlocust -f fast_csvreader_ex.py --worker --master-host=10.66.11.21 & # run 5 per worker machine\r\n- Locust file contents (anonymized if necessary):\r\n```\r\nfrom locust_plugins.csvreader import CSVReader\r\nfrom locust import task\r\nfrom locust.contrib.fasthttp import FastHttpUser\r\nimport traceback, logging, sys\r\nimport locust.stats\r\nlocust.stats.CSV_STATS_INTERVAL_SEC = 5\r\n\r\nid_reader = CSVReader(\"ids.csv\")\r\n\r\nclass MyUser(FastHttpUser):\r\n    @task\r\n    def index(self):\r\n        headers = { \"Authorization\": \"apikey\", \"Accept\": \"application/json\" }\r\n        feed_id, file_id = next(id_reader)\r\n        url = f'/feeds/{feed_id}/files/{file_id}'\r\n        self.client.get(url, headers=headers)\r\n        \r\n    host = 'https://my-test-sever.com'\r\n    connection_timeout = 6000.0\r\n    network_timeout = 6000.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1456", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1456/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1456/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1456/events", "html_url": "https://github.com/locustio/locust/issues/1456", "id": 647557839, "node_id": "MDU6SXNzdWU2NDc1NTc4Mzk=", "number": 1456, "title": "Change master/slave naming convention or offer an alternative", "user": {"login": "anthonymonforte", "id": 32207192, "node_id": "MDQ6VXNlcjMyMjA3MTky", "avatar_url": "https://avatars1.githubusercontent.com/u/32207192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthonymonforte", "html_url": "https://github.com/anthonymonforte", "followers_url": "https://api.github.com/users/anthonymonforte/followers", "following_url": "https://api.github.com/users/anthonymonforte/following{/other_user}", "gists_url": "https://api.github.com/users/anthonymonforte/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthonymonforte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthonymonforte/subscriptions", "organizations_url": "https://api.github.com/users/anthonymonforte/orgs", "repos_url": "https://api.github.com/users/anthonymonforte/repos", "events_url": "https://api.github.com/users/anthonymonforte/events{/privacy}", "received_events_url": "https://api.github.com/users/anthonymonforte/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-29T17:50:34Z", "updated_at": "2020-07-07T19:55:09Z", "closed_at": "2020-06-29T17:55:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\".\r\n-->\r\n\r\n### Is your feature request related to a problem? Please describe.\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\nWe can be more inclusive and offer an alternative to the master/slave naming convention\r\n\r\n### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen -->\r\nOutright replacing this convention is preferable but understandably disruptive.  Providing an alternative would be a great start such that the master/slave convention still works but the new convention is the default and/or works alongside the old convention. \r\n\r\n### Describe alternatives you've considered\r\n<!-- A clear and concise description of any alternative solutions or features you've considered -->\r\n**Hive/Drone** is an alternative convention that would fit nicely with this project.\r\n\r\n_Other suggestions:_\r\n- Leader/Follower\r\n- Leader/Worker\r\n- Primary/Secondary\r\n- Main/Secondary\r\n\r\n\r\n### Additional context\r\n<!-- Add any other context or screenshots about the feature request here -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1455", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1455/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1455/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1455/events", "html_url": "https://github.com/locustio/locust/issues/1455", "id": 646818509, "node_id": "MDU6SXNzdWU2NDY4MTg1MDk=", "number": 1455, "title": "master/slave terminology is inappropriate and unnecessary", "user": {"login": "reglash", "id": 60038454, "node_id": "MDQ6VXNlcjYwMDM4NDU0", "avatar_url": "https://avatars0.githubusercontent.com/u/60038454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reglash", "html_url": "https://github.com/reglash", "followers_url": "https://api.github.com/users/reglash/followers", "following_url": "https://api.github.com/users/reglash/following{/other_user}", "gists_url": "https://api.github.com/users/reglash/gists{/gist_id}", "starred_url": "https://api.github.com/users/reglash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reglash/subscriptions", "organizations_url": "https://api.github.com/users/reglash/orgs", "repos_url": "https://api.github.com/users/reglash/repos", "events_url": "https://api.github.com/users/reglash/events{/privacy}", "received_events_url": "https://api.github.com/users/reglash/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-28T02:31:27Z", "updated_at": "2020-06-28T06:37:09Z", "closed_at": "2020-06-28T06:35:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- The terminology of master/slave is inappropriate. Other groups have made the effort to replace that with less controversial terms (eg https://tools.ietf.org/id/draft-knodel-terminology-00.html and http://wg20.criticalcodestudies.com/index.php?p=/discussion/59/master-slave-replication-in-mysql).\r\n\r\nIt is not a bug in the technical sense but surely in the social sense.\r\n\r\nIf folks want to diver deeper into this question: https://www.researchgate.net/publication/236752849_Broken_Metaphor_The_Master-Slave_Analogy_in_Technical_Literature\r\n-->\r\n\r\n### Expected behavior\r\n<!-- Inoffensive terms like  primary/secondary, mother/daughter, captain/sailor, boss/worker, wizard/hobbit, and so on -->\r\n\r\n### Actual behavior\r\n<!--  A good example of just how bad that looks can be found here:\r\nhttps://github.com/locustio/locust/issues/724-->\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1452", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1452/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1452/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1452/events", "html_url": "https://github.com/locustio/locust/issues/1452", "id": 645392140, "node_id": "MDU6SXNzdWU2NDUzOTIxNDA=", "number": 1452, "title": "Allow grouping of endpoints", "user": {"login": "m3taphysics", "id": 296469, "node_id": "MDQ6VXNlcjI5NjQ2OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/296469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m3taphysics", "html_url": "https://github.com/m3taphysics", "followers_url": "https://api.github.com/users/m3taphysics/followers", "following_url": "https://api.github.com/users/m3taphysics/following{/other_user}", "gists_url": "https://api.github.com/users/m3taphysics/gists{/gist_id}", "starred_url": "https://api.github.com/users/m3taphysics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m3taphysics/subscriptions", "organizations_url": "https://api.github.com/users/m3taphysics/orgs", "repos_url": "https://api.github.com/users/m3taphysics/repos", "events_url": "https://api.github.com/users/m3taphysics/events{/privacy}", "received_events_url": "https://api.github.com/users/m3taphysics/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-25T09:23:40Z", "updated_at": "2020-06-29T06:57:37Z", "closed_at": "2020-06-25T09:26:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\".\r\n-->\r\n\r\nWhen hitting endpoints with a specific parameter i.e. /endpoint/to/user-1234 each request is separated in the UI and statistics even though they are hitting the same endpoint.\r\n\r\nIt would be more useful to group these requests. This may already be possible but I have not seen anything in the documentation. Thank you for a great tool.\r\n\r\n![image](https://user-images.githubusercontent.com/296469/85692954-bb96e200-b6cd-11ea-9a7c-d0f60664799e.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1451", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1451/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1451/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1451/events", "html_url": "https://github.com/locustio/locust/issues/1451", "id": 644908096, "node_id": "MDU6SXNzdWU2NDQ5MDgwOTY=", "number": 1451, "title": "Can't extend docker image with pip3 install <any-package>", "user": {"login": "lhenry7", "id": 23659032, "node_id": "MDQ6VXNlcjIzNjU5MDMy", "avatar_url": "https://avatars3.githubusercontent.com/u/23659032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lhenry7", "html_url": "https://github.com/lhenry7", "followers_url": "https://api.github.com/users/lhenry7/followers", "following_url": "https://api.github.com/users/lhenry7/following{/other_user}", "gists_url": "https://api.github.com/users/lhenry7/gists{/gist_id}", "starred_url": "https://api.github.com/users/lhenry7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lhenry7/subscriptions", "organizations_url": "https://api.github.com/users/lhenry7/orgs", "repos_url": "https://api.github.com/users/lhenry7/repos", "events_url": "https://api.github.com/users/lhenry7/events{/privacy}", "received_events_url": "https://api.github.com/users/lhenry7/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-24T20:07:03Z", "updated_at": "2020-06-25T16:45:25Z", "closed_at": "2020-06-25T16:45:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "See https://github.com/pypa/pypi-support/issues/467\r\n\r\n<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\npip3 install does not work, see linked issue and gist\r\n\r\n### Expected behavior\r\n<!-- Tell us what you think should happen -->\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\n\r\n### Steps to reproduce\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\n\r\n### Environment\r\n\r\n- OS:\r\n- Python version:\r\n- Locust version:\r\n- Locust command line that you ran:\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1447", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1447/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1447/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1447/events", "html_url": "https://github.com/locustio/locust/issues/1447", "id": 643749354, "node_id": "MDU6SXNzdWU2NDM3NDkzNTQ=", "number": 1447, "title": " Unhandled `UnicodeDecodeError` exception if response with status 400 and request contains binary payload (for FastHttpUser)", "user": {"login": "magupov", "id": 4011794, "node_id": "MDQ6VXNlcjQwMTE3OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4011794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magupov", "html_url": "https://github.com/magupov", "followers_url": "https://api.github.com/users/magupov/followers", "following_url": "https://api.github.com/users/magupov/following{/other_user}", "gists_url": "https://api.github.com/users/magupov/gists{/gist_id}", "starred_url": "https://api.github.com/users/magupov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magupov/subscriptions", "organizations_url": "https://api.github.com/users/magupov/orgs", "repos_url": "https://api.github.com/users/magupov/repos", "events_url": "https://api.github.com/users/magupov/events{/privacy}", "received_events_url": "https://api.github.com/users/magupov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-06-23T11:08:18Z", "updated_at": "2020-07-02T13:26:13Z", "closed_at": "2020-07-02T13:26:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Bug\r\nI get an unhandled `UnicodeDecodeError` exception if the response has an invalid status code and the request contains binary payload (for FastHttpUser)\r\n\r\n### Expected behavior\r\n`UnicodeDecodeError` shouldn't be raised in case of non-utf-8 characters in the payload  \r\n\r\n### Actual behavior\r\nThat is a stack trace: \r\n```\r\n[2020-06-23 09:14:15,612] 7ab43366d074/ERROR/locust.user.task: 'utf-8' codec can't decode byte 0x95 in position 41: invalid start byte\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/geventhttpclient/useragent.py\", line 360, in urlopen\r\n    self._verify_status(resp.status_code, url=req.url)\r\n  File \"/usr/local/lib/python3.8/site-packages/geventhttpclient/useragent.py\", line 302, in _verify_status\r\n    raise BadStatusCode(url, code=status_code)\r\ngeventhttpclient.useragent.BadStatusCode: URL http://url/endpoint: code=400\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/locust/user/task.py\", line 284, in run\r\n    self.execute_next_task()\r\n  File \"/usr/local/lib/python3.8/site-packages/locust/user/task.py\", line 309, in execute_next_task\r\n    self.execute_task(self._task_queue.pop(0))\r\n  File \"/usr/local/lib/python3.8/site-packages/locust/user/task.py\", line 416, in execute_task\r\n    task(self.user)\r\n  File \"/app/stress_tests/locustfile.py\", line 95, in test_endpoint\r\n    result = self.client.make_request()\r\n  File \"/app/tests/base_client.py\", line 77, in make_request\r\n    return self.client.request(**kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/locust/contrib/fasthttp.py\", line 227, in request\r\n    response = self._send_request_safe_mode(method, url, payload=data, headers=headers, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/locust/contrib/fasthttp.py\", line 159, in _send_request_safe_mode\r\n    return self.client.urlopen(url, method=method, **kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/geventhttpclient/useragent.py\", line 366, in urlopen\r\n    e.http_log = self._conversation_str(req.url, resp, payload=req.payload)\r\n  File \"/usr/local/lib/python3.8/site-packages/geventhttpclient/useragent.py\", line 424, in _conversation_str\r\n    ret += payload.decode('utf-8') + '\\n\\n'\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x95 in position 41: invalid start byte\r\n```\r\n\r\n### Steps to reproduce\r\nBasically that's a known issue: an attempt to decode the fully binary string fails with `UnicodeDecodeError`. It might be reproduced even without locust, just try to decode any binary string:\r\n```\r\nIn [1]: import secrets                                                                                                                                                                                        \r\nIn [2]: binary_str = secrets.token_bytes(32)                                                                                                                                                                  \r\nIn [3]: binary_str.decode('utf-8')                                                                                                                                                                            \r\n---------------------------------------------------------------------------\r\nUnicodeDecodeError                        Traceback (most recent call last)\r\n<ipython-input-3-11a2204405d4> in <module>\r\n----> 1 binary_str.decode('utf-8')\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xb7 in position 2: invalid start byte\r\n```\r\n\r\n### Environment\r\n\r\n- OS: Ubuntu 20.04\r\n- Python version: 3.8\r\n- Locust version: 1.0.2\r\n- Locust command line that you ran: `locust`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1445", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1445/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1445/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1445/events", "html_url": "https://github.com/locustio/locust/issues/1445", "id": 643074422, "node_id": "MDU6SXNzdWU2NDMwNzQ0MjI=", "number": 1445, "title": "Add line explanation to chart pictures", "user": {"login": "pavelsaman", "id": 24702416, "node_id": "MDQ6VXNlcjI0NzAyNDE2", "avatar_url": "https://avatars3.githubusercontent.com/u/24702416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavelsaman", "html_url": "https://github.com/pavelsaman", "followers_url": "https://api.github.com/users/pavelsaman/followers", "following_url": "https://api.github.com/users/pavelsaman/following{/other_user}", "gists_url": "https://api.github.com/users/pavelsaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavelsaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavelsaman/subscriptions", "organizations_url": "https://api.github.com/users/pavelsaman/orgs", "repos_url": "https://api.github.com/users/pavelsaman/repos", "events_url": "https://api.github.com/users/pavelsaman/events{/privacy}", "received_events_url": "https://api.github.com/users/pavelsaman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 2115072627, "node_id": "MDU6TGFiZWwyMTE1MDcyNjI3", "url": "https://api.github.com/repos/locustio/locust/labels/low%20prio", "name": "low prio", "color": "bbe580", "default": false, "description": ""}, {"id": 1635901882, "node_id": "MDU6TGFiZWwxNjM1OTAxODgy", "url": "https://api.github.com/repos/locustio/locust/labels/wontfix", "name": "wontfix", "color": "ddcccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-22T13:31:13Z", "updated_at": "2020-07-07T19:49:09Z", "closed_at": "2020-07-07T19:49:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running tests with the UI, I can see what each line in charts means when I hover above it with a mouse:\r\n\r\n![image](https://user-images.githubusercontent.com/24702416/85292883-da626200-b49c-11ea-9f08-ce4d13f525d4.png)\r\n\r\nWhen I download the picture(s), I get this:\r\n\r\n![image](https://user-images.githubusercontent.com/24702416/85292962-f534d680-b49c-11ea-98dd-c7cbe57c7490.png)\r\n\r\nBy just looking at it with not knowing the previous context, it's difficult to tell what line means what. I'd expect there's an explanation somewhere, e.g.:\r\n\r\n![image](https://user-images.githubusercontent.com/24702416/85293179-4775f780-b49d-11ea-9fed-6c062075ecde.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1444", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1444/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1444/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1444/events", "html_url": "https://github.com/locustio/locust/issues/1444", "id": 643009857, "node_id": "MDU6SXNzdWU2NDMwMDk4NTc=", "number": 1444, "title": "Custom path for csv reports", "user": {"login": "pavelsaman", "id": 24702416, "node_id": "MDQ6VXNlcjI0NzAyNDE2", "avatar_url": "https://avatars3.githubusercontent.com/u/24702416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavelsaman", "html_url": "https://github.com/pavelsaman", "followers_url": "https://api.github.com/users/pavelsaman/followers", "following_url": "https://api.github.com/users/pavelsaman/following{/other_user}", "gists_url": "https://api.github.com/users/pavelsaman/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavelsaman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavelsaman/subscriptions", "organizations_url": "https://api.github.com/users/pavelsaman/orgs", "repos_url": "https://api.github.com/users/pavelsaman/repos", "events_url": "https://api.github.com/users/pavelsaman/events{/privacy}", "received_events_url": "https://api.github.com/users/pavelsaman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}, {"id": 2115072627, "node_id": "MDU6TGFiZWwyMTE1MDcyNjI3", "url": "https://api.github.com/repos/locustio/locust/labels/low%20prio", "name": "low prio", "color": "bbe580", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-22T12:00:06Z", "updated_at": "2020-06-24T22:31:28Z", "closed_at": "2020-06-24T22:31:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Locust allows for saving csv reports. However, after reading page related to [Configuration](https://docs.locust.io/en/stable/configuration.html), it seems it will always save them to the current directory where `$ locust` command is run from.\r\n\r\nI'd like to keep reports separated, e.g. save them into `Results/` directory in my project dir. For that, I'd need to have a command such as `--outputdir` available in locust that allows me to define a custom path where all the csv reports will be saved into.\r\n\r\nWhen running load tests with the UI, I can of course click and save the reports as I wish, but when I run locust without the UI, such an option would become useful.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1441", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1441/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1441/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1441/events", "html_url": "https://github.com/locustio/locust/issues/1441", "id": 641966030, "node_id": "MDU6SXNzdWU2NDE5NjYwMzA=", "number": 1441, "title": "Add a /health endpoint for the worker", "user": {"login": "bat79a", "id": 10594983, "node_id": "MDQ6VXNlcjEwNTk0OTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/10594983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bat79a", "html_url": "https://github.com/bat79a", "followers_url": "https://api.github.com/users/bat79a/followers", "following_url": "https://api.github.com/users/bat79a/following{/other_user}", "gists_url": "https://api.github.com/users/bat79a/gists{/gist_id}", "starred_url": "https://api.github.com/users/bat79a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bat79a/subscriptions", "organizations_url": "https://api.github.com/users/bat79a/orgs", "repos_url": "https://api.github.com/users/bat79a/repos", "events_url": "https://api.github.com/users/bat79a/events{/privacy}", "received_events_url": "https://api.github.com/users/bat79a/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901882, "node_id": "MDU6TGFiZWwxNjM1OTAxODgy", "url": "https://api.github.com/repos/locustio/locust/labels/wontfix", "name": "wontfix", "color": "ddcccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-19T13:23:24Z", "updated_at": "2020-06-24T16:33:13Z", "closed_at": "2020-06-24T16:32:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Is your feature request related to a problem? Please describe.\r\nCan we have a health endpoint on the worker (and why not the master) because my provider is restarting the worker (locust.io in docker) if we do not indicate a response on /root.\r\n\r\n### Describe the solution you'd like\r\nThe solution is that the worker, and may be the master, has an /health endpoint or respond on /root.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1440", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1440/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1440/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1440/events", "html_url": "https://github.com/locustio/locust/issues/1440", "id": 641283452, "node_id": "MDU6SXNzdWU2NDEyODM0NTI=", "number": 1440, "title": "Charts are twice as high as they need to", "user": {"login": "benallard", "id": 178188, "node_id": "MDQ6VXNlcjE3ODE4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/178188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benallard", "html_url": "https://github.com/benallard", "followers_url": "https://api.github.com/users/benallard/followers", "following_url": "https://api.github.com/users/benallard/following{/other_user}", "gists_url": "https://api.github.com/users/benallard/gists{/gist_id}", "starred_url": "https://api.github.com/users/benallard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benallard/subscriptions", "organizations_url": "https://api.github.com/users/benallard/orgs", "repos_url": "https://api.github.com/users/benallard/repos", "events_url": "https://api.github.com/users/benallard/events{/privacy}", "received_events_url": "https://api.github.com/users/benallard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-18T15:03:18Z", "updated_at": "2020-06-22T07:03:32Z", "closed_at": "2020-06-22T07:03:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the bug\r\nThe top half of the Charts is always empty. The automatic scaling seems to be a bit off.\r\n\r\n### Expected behavior\r\nThe data takes up (almost) the whole height of the Charts.\r\n\r\n### Actual behavior\r\n![image](https://user-images.githubusercontent.com/178188/85037281-6e72b780-b185-11ea-92b5-f05b18cb58cf.png)\r\n\r\n\r\n### Steps to reproduce\r\nStart it, wait a bit.\r\n\r\n### Environment\r\n\r\n- Locust version: 1.0.3\r\n- Firefox latest", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1439", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1439/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1439/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1439/events", "html_url": "https://github.com/locustio/locust/issues/1439", "id": 641023974, "node_id": "MDU6SXNzdWU2NDEwMjM5NzQ=", "number": 1439, "title": "django\u4e2d\u7684views\u8c03\u7528 \u811a\u672c\u4e2d\u7684\u51fd\u6570\u65f6\uff0c\u62a5\u9519\uff0c\u53c2\u8003\u7f51\u4e0a\u5efa\u8bae\u4fee\u6539monkey.patch_all(thread=False)\uff0c\u62a5\u9519\u8be6\u60c5\u5982\u4e0b When views in Django calls the function in the script, an error is reported. Please refer to the online suggestions for modification monkey.patch_ All (thread = false), the details of error reporting are as follows", "user": {"login": "lixiaolong41", "id": 35594214, "node_id": "MDQ6VXNlcjM1NTk0MjE0", "avatar_url": "https://avatars3.githubusercontent.com/u/35594214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lixiaolong41", "html_url": "https://github.com/lixiaolong41", "followers_url": "https://api.github.com/users/lixiaolong41/followers", "following_url": "https://api.github.com/users/lixiaolong41/following{/other_user}", "gists_url": "https://api.github.com/users/lixiaolong41/gists{/gist_id}", "starred_url": "https://api.github.com/users/lixiaolong41/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lixiaolong41/subscriptions", "organizations_url": "https://api.github.com/users/lixiaolong41/orgs", "repos_url": "https://api.github.com/users/lixiaolong41/repos", "events_url": "https://api.github.com/users/lixiaolong41/events{/privacy}", "received_events_url": "https://api.github.com/users/lixiaolong41/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-18T08:43:13Z", "updated_at": "2020-06-20T20:28:12Z", "closed_at": "2020-06-20T20:28:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "- OS: centos7\r\n- Python version: 3.6.5\r\n- Locust version:1.0.3\r\n- Locust file contents (anonymized if necessary):\r\n\r\n@task\r\ndef my_task(self):\r\n    self.client.get(\"/\")\r\n\r\n@task\r\ndef task_404(self):\r\n    self.client.get(\"/non-existing-path\")\r\n\r\ndef main(press):\r\n    print(\"xxxxxxxxxx\")\r\n    # id = press.if_id\r\n    print(press)\r\n    user_dict = dict(wait_time=between(1, 3), host=\"https://docs.locust.io\", my_task=my_task, task_404=task_404)\r\n    # setup Environment and Runner\r\n    Users = type('Users', (HttpUser,), user_dict)\r\n    env = Environment(user_classes=[Users])\r\n    env.create_local_runner()\r\n\r\n    # start a WebUI instance\r\n    env.create_web_ui(port=8081)\r\n\r\n    # start a greenlet that periodically outputs the current stats\r\n    gevent.spawn(stats_printer(env.stats))\r\n\r\n    # start the test\r\n    env.runner.start(1, hatch_rate=10)\r\n    gevent.spawn_later(60, lambda: env.runner.quit())\r\n    env.runner.greenlet.join()\r\n    env.web_ui.stop()\r\n\r\nThe above is the content of script file.\r\n\r\ndjango:\r\nfrom .pressure import main\r\ndef press_run(request):\r\n    if request.method == 'POST':\r\n        thread_task = threading.Thread(target=main, args=(press,))\r\n        thread_task.start()\r\n        return HttpResponseRedirect(\"/pressure/case_list\")\r\n\r\n\r\n\r\nBefore modifying site-packages/locust/__init__.py  monkey.patch_all(thread=False)\uff1aerror\uff1a\r\nRuntimeError: cannot release un-acquired lock\r\nand\r\nMonkeyPatchWarning: Monkey-patching ssl after ssl has already been imported may lead to errors, including RecursionError on Python 3.6. It may also silently lead to incorrect behaviour on Python 3.7. Please monkey-patch earlier. See https://github.com/gevent/gevent/issues/1016. Modules that had direct imports (NOT patched): ['aiohttp.client_exceptions (/root/anaconda3/envs/safe/lib/python3.6/site-packages/aiohttp/client_exceptions.py)', 'aiohttp.client (/root/anaconda3/envs/safe/lib/python3.6/site-packages/aiohttp/client.py)', 'aiohttp.client_reqrep (/root/anaconda3/envs/safe/lib/python3.6/site-packages/aiohttp/client_reqrep.py)', 'urllib3.util (/root/anaconda3/envs/safe/lib/python3.6/site-packages/urllib3/util/__init__.py)', 'aiohttp.web_runner (/root/anaconda3/envs/safe/lib/python3.6/site-packages/aiohttp/web_runner.py)', 'aiohttp.web (/root/anaconda3/envs/safe/lib/python3.6/site-packages/aiohttp/web.py)', 'urllib3.util.ssl_ (/root/anaconda3/envs/safe/lib/python3.6/site-packages/urllib3/util/ssl_.py)', 'aiohttp.connector (/root/anaconda3/envs/safe/lib/python3.6/site-packages/aiohttp/connector.py)', 'aiohttp.worker (/root/anaconda3/envs/safe/lib/python3.6/site-packages/aiohttp/worker.py)']. \r\n  _monkey.patch_all()\r\n\r\n\r\nAfter modifying site-packages/locust/__init__.py  error\uff1agreenlet.error: cannot switch to a different thread and\r\nmaximum recursion depth exceeded while calling a Python object and locust no data\r\n\r\nWhen Django is not used\uff1abusiness as usual", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1438", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1438/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1438/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1438/events", "html_url": "https://github.com/locustio/locust/issues/1438", "id": 640971302, "node_id": "MDU6SXNzdWU2NDA5NzEzMDI=", "number": 1438, "title": "Module object is not callable in locust 0.13.0", "user": {"login": "Fatahir", "id": 33696029, "node_id": "MDQ6VXNlcjMzNjk2MDI5", "avatar_url": "https://avatars0.githubusercontent.com/u/33696029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fatahir", "html_url": "https://github.com/Fatahir", "followers_url": "https://api.github.com/users/Fatahir/followers", "following_url": "https://api.github.com/users/Fatahir/following{/other_user}", "gists_url": "https://api.github.com/users/Fatahir/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fatahir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fatahir/subscriptions", "organizations_url": "https://api.github.com/users/Fatahir/orgs", "repos_url": "https://api.github.com/users/Fatahir/repos", "events_url": "https://api.github.com/users/Fatahir/events{/privacy}", "received_events_url": "https://api.github.com/users/Fatahir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-18T07:20:35Z", "updated_at": "2020-06-29T06:57:58Z", "closed_at": "2020-06-18T13:45:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "when i run ``` locust -f /Desktop/locust_file.py ``` following error occurs\r\n```\r\n[2020-06-18 12:09:27,858] fatima/INFO/locust.main: Starting web monitor at *:8089\r\n[2020-06-18 12:09:27,858] fatima/ERROR/stderr: Traceback (most recent call last):\r\n[2020-06-18 12:09:27,858] fatima/ERROR/stderr: File \"/home/fatima/.local/bin/locust\", line 11, in <module>\r\n[2020-06-18 12:09:27,858] fatima/ERROR/stderr: \r\n[2020-06-18 12:09:27,858] fatima/ERROR/stderr: sys.exit(main())\r\n[2020-06-18 12:09:27,858] fatima/ERROR/stderr: File \"/home/fatima/.local/lib/python2.7/site-packages/locust/main.py\", line 525, in main\r\n[2020-06-18 12:09:27,858] fatima/ERROR/stderr: \r\n[2020-06-18 12:09:27,858] fatima/ERROR/stderr: gevent.signal(signal.SIGTERM, sig_term_handler)\r\n[2020-06-18 12:09:27,859] fatima/ERROR/stderr: TypeError\r\n[2020-06-18 12:09:27,859] fatima/ERROR/stderr: :\r\n[2020-06-18 12:09:27,859] fatima/ERROR/stderr: 'module' object is not callable\r\n[2020-06-18 12:09:27,859] fatima/ERROR/stderr: \r\n\r\n```\r\ni am using **python** version :**3.7**\r\n**locust 0.13.0**\r\nand here is the code \r\n```\r\nimport random\r\nfrom locust import HttpLocust, TaskSet, between\r\n\r\nproducts = [\r\n    '0PUK6V6EV0',\r\n    '1YMWWN1N4O',\r\n    '2ZYFJ3GM2N',\r\n    '66VCHSJNUP',\r\n    '6E92ZMYYFZ',\r\n    '9SIQT8TOJO',\r\n    'L9ECAV7KIM',\r\n    'LS4PSXUNUM',\r\n    'OLJCESPC7Z']\r\n\r\ndef index(l):\r\n    l.client.get(\"/\")\r\n\r\ndef setCurrency(l):\r\n    currencies = ['EUR', 'USD', 'JPY', 'CAD']\r\n    l.client.post(\"/setCurrency\",\r\n        {'currency_code': random.choice(currencies)})\r\n\r\ndef browseProduct(l):\r\n    l.client.get(\"/product/\" + random.choice(products))\r\n\r\nclass UserBehavior(TaskSet):\r\n\r\n    def on_start(self):\r\n        index(self)\r\n\r\n    tasks = {index: 1,\r\n        setCurrency: 2,\r\n        browseProduct: 10,\r\n        }\r\n\r\nclass WebsiteUser(HttpLocust):\r\n    task_set = UserBehavior\r\n    wait_time = between(1, 10)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1437", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1437/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1437/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1437/events", "html_url": "https://github.com/locustio/locust/issues/1437", "id": 640767695, "node_id": "MDU6SXNzdWU2NDA3Njc2OTU=", "number": 1437, "title": "Consider changing the master/slave terminology", "user": {"login": "tortila", "id": 5598055, "node_id": "MDQ6VXNlcjU1OTgwNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5598055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tortila", "html_url": "https://github.com/tortila", "followers_url": "https://api.github.com/users/tortila/followers", "following_url": "https://api.github.com/users/tortila/following{/other_user}", "gists_url": "https://api.github.com/users/tortila/gists{/gist_id}", "starred_url": "https://api.github.com/users/tortila/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tortila/subscriptions", "organizations_url": "https://api.github.com/users/tortila/orgs", "repos_url": "https://api.github.com/users/tortila/repos", "events_url": "https://api.github.com/users/tortila/events{/privacy}", "received_events_url": "https://api.github.com/users/tortila/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-17T21:57:30Z", "updated_at": "2020-06-25T04:52:04Z", "closed_at": "2020-06-17T22:04:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\".\r\n-->\r\n\r\n### Is your feature request related to a problem? Please describe.\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\nThe distributed mode of Locust [refers to its nodes as \"master\" and \"slaves\"](https://docs.locust.io/en/stable/running-locust-distributed.html). This terminology, still widely used in different areas in technology, originates from the practice of slavery.\r\n\r\n### Describe the solution you'd like\r\nIt's possible to express the same notion using equally or even more precise terms that don't casually refer to slavery. Please consider using an alternative terminology, e.g. controller/worker, main/secondary or similar.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1436", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1436/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1436/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1436/events", "html_url": "https://github.com/locustio/locust/issues/1436", "id": 640576354, "node_id": "MDU6SXNzdWU2NDA1NzYzNTQ=", "number": 1436, "title": "High Loadgen CPU Usage in Distributed Mode with 1 Master & 10 Worker Configuration", "user": {"login": "pankaj-kaushik", "id": 34515887, "node_id": "MDQ6VXNlcjM0NTE1ODg3", "avatar_url": "https://avatars3.githubusercontent.com/u/34515887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pankaj-kaushik", "html_url": "https://github.com/pankaj-kaushik", "followers_url": "https://api.github.com/users/pankaj-kaushik/followers", "following_url": "https://api.github.com/users/pankaj-kaushik/following{/other_user}", "gists_url": "https://api.github.com/users/pankaj-kaushik/gists{/gist_id}", "starred_url": "https://api.github.com/users/pankaj-kaushik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pankaj-kaushik/subscriptions", "organizations_url": "https://api.github.com/users/pankaj-kaushik/orgs", "repos_url": "https://api.github.com/users/pankaj-kaushik/repos", "events_url": "https://api.github.com/users/pankaj-kaushik/events{/privacy}", "received_events_url": "https://api.github.com/users/pankaj-kaushik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-17T16:24:11Z", "updated_at": "2020-07-01T07:12:27Z", "closed_at": "2020-06-17T16:58:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nIn distributed mode, loadgen CPU is reaching beyond 90%\r\n\r\n### Expected behavior\r\n1. CPU Utilization should not reach high.\r\n\r\n### Actual behavior\r\nI am running locust in distributed mode with 1 master and 10 worker nodes.\r\n\r\n**Note:** \r\n1. My objective is to do spike testing with locust in order to check crash point for my webserver.\r\n2. Also i observed, total number of request is far more higher than the number of user.\r\n\r\nH/W Configuration Used: 4vCPU and 8 GB RAM\r\nCloud Used: AWS EC2\r\n\r\n### Steps to reproduce\r\n1. Create one master and 10 Workers AWS ec2 instance\r\n2. In UI : Total User = 200000, Hatch Rate = 1000\r\n\r\n### Environment\r\n\r\n- OS: AWS AMI Linux 2\r\n- Python version: 3.7.7\r\n- Locust version: 1.0.3\r\n- Locust command line that you ran: locust -f locustfile.py --master & locust -f locustfile.py --worker --master=<ip>\r\n- Locust file contents (anonymized if necessary):\r\n<img width=\"960\" alt=\"locust-high-cpu\" src=\"https://user-images.githubusercontent.com/34515887/84923592-08ceee80-b0e5-11ea-95c8-c401e48a3fca.png\">\r\n<img width=\"960\" alt=\"locust-high-cpu-2\" src=\"https://user-images.githubusercontent.com/34515887/84923623-0f5d6600-b0e5-11ea-8cd9-398ae790dd79.png\">\r\n\r\n**Locust File Contents Mentioned Below**\r\n\r\nimport random\r\nfrom locust import HttpUser, task, between\r\nfrom locust.contrib.fasthttp import FastHttpUser\r\n\r\nclass QuickstartUser(FastHttpUser):\r\n    wait_time = between(1, 2)\r\n\r\n    @task\r\n    def index_page(self):\r\n        self.client.get(\"/\")\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1433", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1433/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1433/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1433/events", "html_url": "https://github.com/locustio/locust/issues/1433", "id": 639894261, "node_id": "MDU6SXNzdWU2Mzk4OTQyNjE=", "number": 1433, "title": "Number of http request is greater than number of user given in UI", "user": {"login": "pankaj-kaushik", "id": 34515887, "node_id": "MDQ6VXNlcjM0NTE1ODg3", "avatar_url": "https://avatars3.githubusercontent.com/u/34515887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pankaj-kaushik", "html_url": "https://github.com/pankaj-kaushik", "followers_url": "https://api.github.com/users/pankaj-kaushik/followers", "following_url": "https://api.github.com/users/pankaj-kaushik/following{/other_user}", "gists_url": "https://api.github.com/users/pankaj-kaushik/gists{/gist_id}", "starred_url": "https://api.github.com/users/pankaj-kaushik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pankaj-kaushik/subscriptions", "organizations_url": "https://api.github.com/users/pankaj-kaushik/orgs", "repos_url": "https://api.github.com/users/pankaj-kaushik/repos", "events_url": "https://api.github.com/users/pankaj-kaushik/events{/privacy}", "received_events_url": "https://api.github.com/users/pankaj-kaushik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-16T18:43:19Z", "updated_at": "2020-06-17T13:11:06Z", "closed_at": "2020-06-16T20:07:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIn locust statistics, i can see that aggregated HTTP request is more than the number of user provided in UI.\r\n\r\nIdeally http request should be equal to number of user entered in UI.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1432", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1432/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1432/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1432/events", "html_url": "https://github.com/locustio/locust/issues/1432", "id": 639644935, "node_id": "MDU6SXNzdWU2Mzk2NDQ5MzU=", "number": 1432, "title": "Support for completely custom load pattern / shape", "user": {"login": "max-rocket-internet", "id": 8859277, "node_id": "MDQ6VXNlcjg4NTkyNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8859277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-rocket-internet", "html_url": "https://github.com/max-rocket-internet", "followers_url": "https://api.github.com/users/max-rocket-internet/followers", "following_url": "https://api.github.com/users/max-rocket-internet/following{/other_user}", "gists_url": "https://api.github.com/users/max-rocket-internet/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-rocket-internet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-rocket-internet/subscriptions", "organizations_url": "https://api.github.com/users/max-rocket-internet/orgs", "repos_url": "https://api.github.com/users/max-rocket-internet/repos", "events_url": "https://api.github.com/users/max-rocket-internet/events{/privacy}", "received_events_url": "https://api.github.com/users/max-rocket-internet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 2115072627, "node_id": "MDU6TGFiZWwyMTE1MDcyNjI3", "url": "https://api.github.com/repos/locustio/locust/labels/low%20prio", "name": "low prio", "color": "bbe580", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2020-06-16T12:59:48Z", "updated_at": "2020-08-17T12:08:50Z", "closed_at": "2020-08-17T12:08:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Describe the solution you'd like\r\n\r\nTo be able to programmatically control the user and hatch rate over a period of time. This would allow us to scale up and down and generate spikes which allows more accurate representation of real world load.\r\n\r\nWe can generate this easily:\r\n\r\n![Screen Shot 2020-06-15 at 13 05 52](https://user-images.githubusercontent.com/8859277/84650671-0021c100-af09-11ea-974f-9061c09a7468.png)\r\n\r\nBut not this:\r\n\r\n![Screen Shot 2020-06-15 at 13 07 49](https://user-images.githubusercontent.com/8859277/84650838-4545f300-af09-11ea-8ec8-bcb27a47a08e.png)\r\n\r\nAnd not this either:\r\n\r\n![Screen Shot 2020-06-16 at 14 10 03](https://user-images.githubusercontent.com/8859277/84772362-1f891e80-afdb-11ea-82e4-b306b57c46dc.png)\r\n\r\n### Describe alternatives you've considered\r\n\r\nI tried something quite hacky but it's not good enough:\r\n\r\n```python\r\n\r\ndef traffic_spike(spike_after, spike_length, normal_wait_time):\r\n    def wait_time_func(self):\r\n        if not hasattr(self,\"_traffic_spike_start\"):\r\n            self._traffic_spike_start = time()\r\n            return normal_wait_time\r\n        else:\r\n            run_time = time() - self._traffic_spike_start\r\n            if run_time > (spike_after + spike_length) or run_time < spike_after:\r\n                return normal_wait_time\r\n            else:\r\n                return 0\r\n\r\n    return wait_time_func\r\n\r\nclass QuickstartUser(HttpUser):\r\n    wait_time = traffic_spike(600, 300, 1)\r\n\r\n    @task\r\n    def index_page(self):\r\n        self.client.get(\"/hello\")\r\n        self.client.get(\"/world\")\r\n```\r\n\r\nAlso I know we could implement this outside of locust and call the locust API but it's not ideal.\r\n\r\n### Additional context\r\n\r\nk6 has something called [stages](https://k6.io/docs/getting-started/running-k6#stages-ramping-up-down-vus) that looks great:\r\n\r\n```javascript\r\nexport let options = {\r\n  stages: [\r\n    { duration: '30s', target: 20 },\r\n    { duration: '1m30s', target: 10 },\r\n    { duration: '20s', target: 0 },\r\n  ],\r\n};\r\n```\r\n\r\nIt would be great to see something like this in locust. Perhaps it could look like this:\r\n\r\n```python\r\nfrom locust import User, TaskSet, between, LoadShape\r\n\r\n\r\nclass LoadWithSpike(LoadShape):\r\n    stages = [\r\n        {'duration': 3600, 'users' 1000, 'hatch': 5},\r\n        {'duration': 300, 'users' 5000, 'hatch': 50},\r\n        {'duration': 1800, 'users' 1000, 'hatch': -50}\r\n    ]\r\n\r\n\r\nclass MyUser(HttpUser):\r\n    wait_time = between(1, 3)\r\n\r\n    @task(2)\r\n    def index(self):\r\n        self.client.get(\"/\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1431", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1431/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1431/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1431/events", "html_url": "https://github.com/locustio/locust/issues/1431", "id": 639182918, "node_id": "MDU6SXNzdWU2MzkxODI5MTg=", "number": 1431, "title": "Can the event hooks for requests include a status code?", "user": {"login": "Midnighter", "id": 135653, "node_id": "MDQ6VXNlcjEzNTY1Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/135653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Midnighter", "html_url": "https://github.com/Midnighter", "followers_url": "https://api.github.com/users/Midnighter/followers", "following_url": "https://api.github.com/users/Midnighter/following{/other_user}", "gists_url": "https://api.github.com/users/Midnighter/gists{/gist_id}", "starred_url": "https://api.github.com/users/Midnighter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Midnighter/subscriptions", "organizations_url": "https://api.github.com/users/Midnighter/orgs", "repos_url": "https://api.github.com/users/Midnighter/repos", "events_url": "https://api.github.com/users/Midnighter/events{/privacy}", "received_events_url": "https://api.github.com/users/Midnighter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901882, "node_id": "MDU6TGFiZWwxNjM1OTAxODgy", "url": "https://api.github.com/repos/locustio/locust/labels/wontfix", "name": "wontfix", "color": "ddcccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-15T21:33:45Z", "updated_at": "2020-06-17T10:56:10Z", "closed_at": "2020-06-17T10:56:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Is your feature request related to a problem? Please describe.\r\n\r\nIt would be nice to not only be able to distinguish successful and failed requests but get slightly more information. I saw the request for the entire response and headers in #1413 and saw that you don't want that since it would be HTTP-specific. However, I was wondering if the same holds true for a status code, since that also applies to FTP and websockets at least. Maybe I am missing something, though.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1430", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1430/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1430/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1430/events", "html_url": "https://github.com/locustio/locust/issues/1430", "id": 639179830, "node_id": "MDU6SXNzdWU2MzkxNzk4MzA=", "number": 1430, "title": "The median shows different values than the 50 percentile", "user": {"login": "Midnighter", "id": 135653, "node_id": "MDQ6VXNlcjEzNTY1Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/135653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Midnighter", "html_url": "https://github.com/Midnighter", "followers_url": "https://api.github.com/users/Midnighter/followers", "following_url": "https://api.github.com/users/Midnighter/following{/other_user}", "gists_url": "https://api.github.com/users/Midnighter/gists{/gist_id}", "starred_url": "https://api.github.com/users/Midnighter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Midnighter/subscriptions", "organizations_url": "https://api.github.com/users/Midnighter/orgs", "repos_url": "https://api.github.com/users/Midnighter/repos", "events_url": "https://api.github.com/users/Midnighter/events{/privacy}", "received_events_url": "https://api.github.com/users/Midnighter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-15T21:29:27Z", "updated_at": "2020-06-17T12:23:03Z", "closed_at": "2020-06-17T11:51:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\n\r\nI ran a Locust test with full stats enabled, [you can see the results table here](https://github.com/Midnighter/starlette-delay/blob/19c815c51c925a504b4181c075ca2513e9fd998d/data/delay_stats_history.csv), and was surprised by the fact that the \"Total Median Response Time\" and the 50 percentile show different values.\r\n\r\nI noticed a few issues around the median related to rounding, for example, #565 but from what I could gather it should equally apply to the 50%.\r\n\r\n### Expected behavior\r\n\r\nThe 50 percentile, aka Q2, should be the same as the median.\r\n\r\n### Actual behavior\r\n\r\n[Please take a look at the stats history outcome.](https://github.com/Midnighter/starlette-delay/blob/19c815c51c925a504b4181c075ca2513e9fd998d/data/delay_stats_history.csv)\r\n\r\n### Steps to reproduce\r\n\r\nYou could clone my repository and run it at that commit to reproduce. Everything is dockerized. If you need something more minimal, I'll see what I can do.\r\n\r\n### Environment\r\n\r\n- OS: Docker Image\r\n- Python version: 3.8\r\n- Locust version: 1.0.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1429", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1429/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1429/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1429/events", "html_url": "https://github.com/locustio/locust/issues/1429", "id": 638900153, "node_id": "MDU6SXNzdWU2Mzg5MDAxNTM=", "number": 1429, "title": "Support Needed- How to clear cache after a test run or close the session", "user": {"login": "Dhams-1", "id": 60965197, "node_id": "MDQ6VXNlcjYwOTY1MTk3", "avatar_url": "https://avatars0.githubusercontent.com/u/60965197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dhams-1", "html_url": "https://github.com/Dhams-1", "followers_url": "https://api.github.com/users/Dhams-1/followers", "following_url": "https://api.github.com/users/Dhams-1/following{/other_user}", "gists_url": "https://api.github.com/users/Dhams-1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dhams-1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dhams-1/subscriptions", "organizations_url": "https://api.github.com/users/Dhams-1/orgs", "repos_url": "https://api.github.com/users/Dhams-1/repos", "events_url": "https://api.github.com/users/Dhams-1/events{/privacy}", "received_events_url": "https://api.github.com/users/Dhams-1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-15T14:29:25Z", "updated_at": "2020-06-15T22:23:58Z", "closed_at": "2020-06-15T22:23:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "HI,\r\nI am new to Locust. I have a question. I am performing a post action with a locust test and that returns me a response time  Max  value as 50 seconds and Average value as 10 seconds. When i run the same test again i get the response time for Max, Min and Average as 10 seconds.  I somehow feel that it is happening because of caching or because the session is not closed and i am not sure how to solve the same. it would be really helpful if some one can support me here. Here is the sample post request code.\r\n\r\n @task\r\n    def sample_task(self):\r\n        res3 = self.client.post(\"/ur/to/post\",\r\n                                headers=request_headers,\r\n                                data=sample_data,\r\n                                cookies=cookies_input)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1427", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1427/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1427/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1427/events", "html_url": "https://github.com/locustio/locust/issues/1427", "id": 638558849, "node_id": "MDU6SXNzdWU2Mzg1NTg4NDk=", "number": 1427, "title": "Call the runners.locust_runner.stop() function, sometimes it can be stopped, sometimes it cannot be stopped, and it stays within Time limit reached. Stopping Locust. or on_stop", "user": {"login": "sunshine122230", "id": 22783923, "node_id": "MDQ6VXNlcjIyNzgzOTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/22783923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunshine122230", "html_url": "https://github.com/sunshine122230", "followers_url": "https://api.github.com/users/sunshine122230/followers", "following_url": "https://api.github.com/users/sunshine122230/following{/other_user}", "gists_url": "https://api.github.com/users/sunshine122230/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunshine122230/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunshine122230/subscriptions", "organizations_url": "https://api.github.com/users/sunshine122230/orgs", "repos_url": "https://api.github.com/users/sunshine122230/repos", "events_url": "https://api.github.com/users/sunshine122230/events{/privacy}", "received_events_url": "https://api.github.com/users/sunshine122230/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-15T05:37:10Z", "updated_at": "2020-06-15T06:48:33Z", "closed_at": "2020-06-15T06:48:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\n<!-- A clear and concise description of what the bug is -->\r\n\r\n### Expected behavior\r\n<!-- Tell us what you think should happen -->\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\n\r\n### Steps to reproduce\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\n\r\n### Environment\r\n\r\n- OS:\r\n- Python version:\r\n- Locust version:\r\n- Locust command line that you ran:\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1425", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1425/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1425/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1425/events", "html_url": "https://github.com/locustio/locust/issues/1425", "id": 637760759, "node_id": "MDU6SXNzdWU2Mzc3NjA3NTk=", "number": 1425, "title": "Running locust with docker breaks pip install for some packages", "user": {"login": "Olamyy", "id": 14059714, "node_id": "MDQ6VXNlcjE0MDU5NzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/14059714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Olamyy", "html_url": "https://github.com/Olamyy", "followers_url": "https://api.github.com/users/Olamyy/followers", "following_url": "https://api.github.com/users/Olamyy/following{/other_user}", "gists_url": "https://api.github.com/users/Olamyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Olamyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Olamyy/subscriptions", "organizations_url": "https://api.github.com/users/Olamyy/orgs", "repos_url": "https://api.github.com/users/Olamyy/repos", "events_url": "https://api.github.com/users/Olamyy/events{/privacy}", "received_events_url": "https://api.github.com/users/Olamyy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-12T13:44:57Z", "updated_at": "2020-06-17T12:40:04Z", "closed_at": "2020-06-12T20:01:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\nWhen running locust in docker, it breaks the installation of some packages. For now, I've noticed the issue comes up with pandas, numpy and scipy. \r\nI believe this issue is more suited to locust because when I build the locust docker manually, all the packages install successfully.\r\n<!-- A clear and concise description of what the bug is -->\r\n\r\n### Expected behavior\r\npip install should run without any error.\r\n<!-- Tell us what you think should happen -->\r\n\r\n### Actual behavior\r\n![image](https://user-images.githubusercontent.com/14059714/84508891-471e7500-acc3-11ea-9c5c-99615f14766b.png)\r\n![image](https://user-images.githubusercontent.com/14059714/84508920-50a7dd00-acc3-11ea-92ac-4d3ed82a418b.png)\r\n\r\n![image](https://user-images.githubusercontent.com/14059714/84508905-4ab1fc00-acc3-11ea-8cfc-54af7d15d4d7.png)\r\n\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\n\r\n### Steps to reproduce\r\nVery simple dockerfile\r\n```Dockerfile\r\nFROM locustio/locust\r\n\r\nCOPY requirements.txt /tmp/custom-requirements.txt\r\n\r\nRUN pip3 install --upgrade -r /tmp/custom-requirements.txt\r\n\r\nCOPY locust-scripts /locust-scripts\r\n```\r\nContent of requirements.txt\r\n```\r\nboto3~=1.12.39\r\nsagemaker~=1.55.3\r\npandas\r\njinja2~=2.11.2\r\nconnexion>=1.1.4\r\nswagger-ui-bundle\r\nflask>=1.0.2\r\nrequests\r\n```\r\n\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\n\r\n### Environment\r\n\r\n- OS: Mac OS\r\n- Python version: 3.8\r\n- Locust version: 1.0.2\r\n- Locust command line that you ran:\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1424", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1424/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1424/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1424/events", "html_url": "https://github.com/locustio/locust/issues/1424", "id": 637743527, "node_id": "MDU6SXNzdWU2Mzc3NDM1Mjc=", "number": 1424, "title": "Master-host IP is not overrided by environment variable.", "user": {"login": "bat79a", "id": 10594983, "node_id": "MDQ6VXNlcjEwNTk0OTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/10594983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bat79a", "html_url": "https://github.com/bat79a", "followers_url": "https://api.github.com/users/bat79a/followers", "following_url": "https://api.github.com/users/bat79a/following{/other_user}", "gists_url": "https://api.github.com/users/bat79a/gists{/gist_id}", "starred_url": "https://api.github.com/users/bat79a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bat79a/subscriptions", "organizations_url": "https://api.github.com/users/bat79a/orgs", "repos_url": "https://api.github.com/users/bat79a/repos", "events_url": "https://api.github.com/users/bat79a/events{/privacy}", "received_events_url": "https://api.github.com/users/bat79a/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-06-12T13:17:13Z", "updated_at": "2020-06-18T12:35:42Z", "closed_at": "2020-06-15T08:06:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "#899 # Describe the bug\r\n<!-- A clear and concise description of what the bug is -->\r\nWhen you try to override the --master-host ip with an environnement variable (k8s configMap) the ip is not use by the worker. \r\n\r\nI have try this two variables without any effect :\r\n- LOCUST_MASTER_HOST\r\n- MASTER_HOST\r\n\r\n### Expected behavior\r\n<!-- Tell us what you think should happen -->\r\nThe worker will use the environment variable and the master will see this worker.\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\n- If I use the command worker --master-host=my_ip the master can see my worker.\r\n- If I try to set the --master-host with my environment variable, the master can't see my worker.\r\n\r\n### Steps to reproduce\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\n\r\n### Environment\r\n\r\n- OS: Docker/K8S with environment variable in a ConfigMap\r\n- Python version: 3.6.1\r\n- Locust version: 1.0.3\r\n- Locust command line that you ran: [\"locust\", \"-f\", \"locustfile.py\", \"--worker\"]\r\n- Locust file contents (anonymized if necessary): /", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1422", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1422/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1422/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1422/events", "html_url": "https://github.com/locustio/locust/issues/1422", "id": 637036921, "node_id": "MDU6SXNzdWU2MzcwMzY5MjE=", "number": 1422, "title": "ZMQ Error when running locust in distributed mode", "user": {"login": "Olamyy", "id": 14059714, "node_id": "MDQ6VXNlcjE0MDU5NzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/14059714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Olamyy", "html_url": "https://github.com/Olamyy", "followers_url": "https://api.github.com/users/Olamyy/followers", "following_url": "https://api.github.com/users/Olamyy/following{/other_user}", "gists_url": "https://api.github.com/users/Olamyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Olamyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Olamyy/subscriptions", "organizations_url": "https://api.github.com/users/Olamyy/orgs", "repos_url": "https://api.github.com/users/Olamyy/repos", "events_url": "https://api.github.com/users/Olamyy/events{/privacy}", "received_events_url": "https://api.github.com/users/Olamyy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}, {"id": 1003994742, "node_id": "MDU6TGFiZWwxMDAzOTk0NzQy", "url": "https://api.github.com/repos/locustio/locust/labels/waiting%20on%20contributor", "name": "waiting on contributor", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-06-11T13:54:59Z", "updated_at": "2020-06-30T13:37:54Z", "closed_at": "2020-06-30T13:37:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\nI have a simple locust setup with a master and 50  slave workers. Everything seems fine but whenever the workers start loading, I get a ZMQError. I'm not sure if this is something I'm doing wrong on my end or from locust. \r\n![image](https://user-images.githubusercontent.com/14059714/84392410-a2d0fb80-abfa-11ea-8f6d-2108b0166457.png)\r\n\r\n### Expected behavior\r\nWorkers should be loaded without any error.\r\n\r\n### Actual behavior\r\n![image](https://user-images.githubusercontent.com/14059714/84392443-acf2fa00-abfa-11ea-9db2-af17a268dd34.png)\r\n\r\n### Steps to reproduce\r\n```bash\r\n# master\r\nlocust -f locustfile.py --master\r\n```\r\n\r\n```python\r\n# workers\r\nimport subprocesses\r\nprocesses = []\r\nfor _ in range(50):\r\n    print('Starting worker : {worker_id}')\r\n    s = subprocess.Popen([\r\n        'locust', '--loglevel', 'debug', '--worker', '-f', \"locust-scripts/simple.py\",\r\n        '--master-host', \"127.0.0.1\", '--host', None\r\n    ])\r\n    processes.append(s)\r\n\r\nfor s in processes:\r\n    s.communicate()\r\n```\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\n\r\n### Environment\r\n\r\n- OS: Mac OS\r\n- Python version: 3.8\r\n- Locust version: 1.0.2\r\n- Locust command line that you ran: locust\r\n- Locust file contents (anonymized if necessary):\r\n\r\n```\r\nclass SimpleBehavior(TaskSet):\r\n\r\n    @task\r\n    def index(self):\r\n        self.client.get('/')\r\n\r\n\r\nclass MyLocust(HttpLocust):\r\n    task_set = SimpleBehavior\r\n    min_wait = 0\r\n    max_wait = 0\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1421", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1421/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1421/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1421/events", "html_url": "https://github.com/locustio/locust/issues/1421", "id": 636717201, "node_id": "MDU6SXNzdWU2MzY3MTcyMDE=", "number": 1421, "title": "Two test_stop events triggered when --run-time expires", "user": {"login": "lolwhitaker", "id": 15690490, "node_id": "MDQ6VXNlcjE1NjkwNDkw", "avatar_url": "https://avatars2.githubusercontent.com/u/15690490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lolwhitaker", "html_url": "https://github.com/lolwhitaker", "followers_url": "https://api.github.com/users/lolwhitaker/followers", "following_url": "https://api.github.com/users/lolwhitaker/following{/other_user}", "gists_url": "https://api.github.com/users/lolwhitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/lolwhitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lolwhitaker/subscriptions", "organizations_url": "https://api.github.com/users/lolwhitaker/orgs", "repos_url": "https://api.github.com/users/lolwhitaker/repos", "events_url": "https://api.github.com/users/lolwhitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/lolwhitaker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-11T04:58:36Z", "updated_at": "2020-06-23T15:26:04Z", "closed_at": "2020-06-23T15:26:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\non_stop event triggers twice when running with --run-time option.\r\n\r\n### Expected behavior\r\nWhile stop() is invoked twice, once for the run-time expiration and again when the last worker quits, I would expect only one on_stop event to trigger.\r\n\r\nCurrent workaround is to handle the first invocation and ignore the second, but it would be helpful to have a single event which indicates test completion so that actions like publishing test results can be performed without considering the possibility of it firing twice.\r\n\r\n### Actual behavior\r\nThe stop() method is invoked twice, once for the run-time expiration and again when the last worker quits.  Both invocations trigger the on_stop listener.  Without any context for these events included code must be written to ensure that any actions in the listener are only performed once.\r\n\r\n### Steps to reproduce\r\n1. Add on_stop listener to master script and log a message when it fires.\r\n\t\ti.e. `test is stopping`\r\n1. Launch a distributed headless load test using the `--run-time` flag\r\n1. Let the test complete cleanly and reach the run-time expiration\r\n1. Review the logging and notice that the on_stop message is logged twice\r\n\r\nRunning a test with `--run-time 3600`, here is the log output seen:\r\n```\r\n[2020-06-10 23:15:31,170] master-i0fcb20ff0d09d6000/INFO/root: Waiting for workers to be ready, 0 of 5 connected\r\n[2020-06-10 23:15:31,594] master-i0fcb20ff0d09d6000/INFO/locust.runners: Client 'worker-i0d546ad7c75f6145e_5cc723077cf6ee606ddd2cd2c78d3202' reported as ready. Currently 1 clients ready to swarm.\r\n[2020-06-10 23:15:31,595] master-i0fcb20ff0d09d6000/WARNING/locust.runners: Worker worker-i0d546ad7c75f6145e_5cc723077cf6ee606ddd2cd2c78d3202 exceeded cpu threshold (will only log this once per worker)\r\n[2020-06-10 23:15:31,596] master-i0fcb20ff0d09d6000/INFO/locust.runners: Client 'worker-i0b60627624f3c09a2_7c42adfd2885822af33a87ad70c6e1e2' reported as ready. Currently 2 clients ready to swarm.\r\n[2020-06-10 23:15:31,596] master-i0fcb20ff0d09d6000/WARNING/locust.runners: Worker worker-i0b60627624f3c09a2_7c42adfd2885822af33a87ad70c6e1e2 exceeded cpu threshold (will only log this once per worker)\r\n[2020-06-10 23:15:31,682] master-i0fcb20ff0d09d6000/INFO/locust.runners: Client 'worker-i067df301bf38422b1_3f58f5805cb10bbdf1287f2529576980' reported as ready. Currently 3 clients ready to swarm.\r\n[2020-06-10 23:15:31,684] master-i0fcb20ff0d09d6000/WARNING/locust.runners: Worker worker-i067df301bf38422b1_3f58f5805cb10bbdf1287f2529576980 exceeded cpu threshold (will only log this once per worker)\r\n[2020-06-10 23:15:31,687] master-i0fcb20ff0d09d6000/INFO/locust.runners: Client 'worker-i01af57f1c1e685003_c07c6aeb08912f27c5c5740a59200196' reported as ready. Currently 4 clients ready to swarm.\r\n[2020-06-10 23:15:31,687] master-i0fcb20ff0d09d6000/WARNING/locust.runners: Worker worker-i01af57f1c1e685003_c07c6aeb08912f27c5c5740a59200196 exceeded cpu threshold (will only log this once per worker)\r\n[2020-06-10 23:15:31,692] master-i0fcb20ff0d09d6000/INFO/locust.runners: Client 'worker-i05ba8e9d6e9d3f051_22b221cf0d4a4caa191f3bc92c01eee6' reported as ready. Currently 5 clients ready to swarm.\r\n[2020-06-10 23:15:31,693] master-i0fcb20ff0d09d6000/WARNING/locust.runners: Worker worker-i05ba8e9d6e9d3f051_22b221cf0d4a4caa191f3bc92c01eee6 exceeded cpu threshold (will only log this once per worker)\r\n[2020-06-10 23:15:32,171] master-i0fcb20ff0d09d6000/INFO/locust.runners: Sending hatch jobs of 10 users and 2.00 hatch rate to 5 ready clients\r\n[2020-06-10 23:15:32,171] master-i0fcb20ff0d09d6000/INFO/locust.main: Run time limit set to 3600 seconds\r\n[2020-06-10 23:15:32,172] master-i0fcb20ff0d09d6000/INFO/locust.main: Starting Locust 1.0.3\r\n[2020-06-11 00:15:32,171] master-i0fcb20ff0d09d6000/INFO/locust.main: Time limit reached. Stopping Locust.\r\n[2020-06-11 00:15:32,171] master-i0fcb20ff0d09d6000/INFO/root: test is stopping\r\n[2020-06-11 00:15:32,174] master-i0fcb20ff0d09d6000/INFO/locust.runners: Client 'worker-i0b60627624f3c09a2_7c42adfd2885822af33a87ad70c6e1e2' quit. Currently 0 clients connected.\r\n[2020-06-11 00:15:32,177] master-i0fcb20ff0d09d6000/INFO/locust.runners: Client 'worker-i067df301bf38422b1_3f58f5805cb10bbdf1287f2529576980' quit. Currently 0 clients connected.\r\n[2020-06-11 00:15:32,178] master-i0fcb20ff0d09d6000/INFO/locust.runners: Client 'worker-i05ba8e9d6e9d3f051_22b221cf0d4a4caa191f3bc92c01eee6' quit. Currently 0 clients connected.\r\n[2020-06-11 00:15:32,183] master-i0fcb20ff0d09d6000/INFO/locust.runners: Client 'worker-i01af57f1c1e685003_c07c6aeb08912f27c5c5740a59200196' quit. Currently 0 clients connected.\r\n[2020-06-11 00:15:32,194] master-i0fcb20ff0d09d6000/INFO/locust.runners: Client 'worker-i0d546ad7c75f6145e_5cc723077cf6ee606ddd2cd2c78d3202' quit. Currently 0 clients connected.\r\n[2020-06-11 00:15:32,194] master-i0fcb20ff0d09d6000/INFO/locust.runners: The last worker quit, stopping test.\r\n[2020-06-11 00:15:32,194] master-i0fcb20ff0d09d6000/INFO/root: test is stopping\r\n[2020-06-11 00:15:32,673] master-i0fcb20ff0d09d6000/INFO/locust.main: Running teardowns...\r\n[2020-06-11 00:15:33,174] master-i0fcb20ff0d09d6000/INFO/locust.main: Shutting down (exit code 0), bye.\r\n[2020-06-11 00:15:33,174] master-i0fcb20ff0d09d6000/INFO/locust.main: Cleaning up runner...\r\n```\r\n\r\n### Environment\r\n\r\n- OS: Ubuntu 16.04\r\n- Python version: 3.6.8\r\n- Locust version: 1.0.3\r\n- Locust command line that you ran: \r\n\r\n```\r\npython3 -m locust -f bin/locust_dummy_script.py  --headless --master --logfile locust.log -u 10 -r 2 --master-bind-host 127.0.0.1 --master-bind-port 5557 --web-host 127.0.0.1 --web-port 8089 --run-time 3600 --expect-workers 5\r\n```\r\n- Locust file contents (anonymized if necessary):\r\n\t```\r\n\t$ cat locust_dummy_script.py \r\n\t# coding: utf8\r\n\tfrom locust import User, TaskSet, task, events\r\n\timport logging\r\n\r\n\timport locust.stats\r\n\tlocust.stats.CSV_STATS_INTERVAL_SEC = 30 # default is 2 seconds\r\n\r\n\t@events.test_stop.add_listener\r\n\tdef on_test_stop(**kw):\r\n\t    logging.info(\"test is stopping\")\r\n\r\n\tclass MyTaskSet(TaskSet):\r\n\t    @task(20)\r\n\t    def hello(self):\r\n\t        pass\r\n\tclass Dummy(User):\r\n\t    tasks = [MyTaskSet]\r\n\t```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1420", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1420/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1420/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1420/events", "html_url": "https://github.com/locustio/locust/issues/1420", "id": 636385693, "node_id": "MDU6SXNzdWU2MzYzODU2OTM=", "number": 1420, "title": "Unable to avoid user session persistence after first run - HttpUser", "user": {"login": "vazkarvishal", "id": 13076513, "node_id": "MDQ6VXNlcjEzMDc2NTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/13076513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vazkarvishal", "html_url": "https://github.com/vazkarvishal", "followers_url": "https://api.github.com/users/vazkarvishal/followers", "following_url": "https://api.github.com/users/vazkarvishal/following{/other_user}", "gists_url": "https://api.github.com/users/vazkarvishal/gists{/gist_id}", "starred_url": "https://api.github.com/users/vazkarvishal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vazkarvishal/subscriptions", "organizations_url": "https://api.github.com/users/vazkarvishal/orgs", "repos_url": "https://api.github.com/users/vazkarvishal/repos", "events_url": "https://api.github.com/users/vazkarvishal/events{/privacy}", "received_events_url": "https://api.github.com/users/vazkarvishal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-10T16:24:14Z", "updated_at": "2020-06-10T17:17:20Z", "closed_at": "2020-06-10T17:17:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Guys,\r\n\r\nI am using the latest version of Locust along with the HttpUser class in combination with TaskSets to make some nested API calls. However, after my spawned user completes the journey, I want all the cookies and ideally the session to be terminated and spawn a fresh user. I can't seem to find an easy way of doing this at the moment. \r\n\r\nCurrently, once the user is spawned for the first time, the journey passes fine. However, when the same spawned user runs the journey again, it fails because the session remembers the previous runs cookies and header data.\r\n\r\nexample code:\r\n```\r\nclass WebUser(HttpUser):\r\n\r\n    wait_time = between(1, 5)\r\n    host = \"https://someUrl\"\r\n\r\n    tasks = {UserBehaviour: 1}\r\n\r\nclass UserBehaviour(SequentialTaskSet):\r\n\r\n    @task\r\n        def getPlatformSessionId(self):\r\n            print(\"====STARTING====\")\r\n\r\n            with self.client.get(\"/auth\", catch_response=True) as response:\r\n            if response.cookies:\r\n                print(\"===== CLEAN Session ID=====   \" +\r\n                      print(response.cookies[\"Session\"])\r\n                print(\"====ENDING====\")\r\n```\r\n\r\nWhen I run the above code for the first time it works fine. However when the same user re-runs the HttpSession I get the following error because the cookie expected is persisted in the users session and a new cookie with a re-generated ID is not returned.\r\n\r\n```\r\n====STARTING====\r\n[2020-06-10 17:02:39,640] VishalVazkars-MacBook-Pro.local/ERROR/locust.user.task: \"name='Session', domain=None, path=None\"\r\nTraceback (most recent call last):\r\n  File \"/Users/vishalvazkar/Work/Playground/learning-locust/locust_venv/lib/python3.7/site-packages/locust/user/task.py\", line 284, in run\r\n    self.execute_next_task()\r\n  File \"/Users/vishalvazkar/Work/Playground/learning-locust/locust_venv/lib/python3.7/site-packages/locust/user/task.py\", line 309, in execute_next_task\r\n    self.execute_task(self._task_queue.pop(0))\r\n  File \"/Users/vishalvazkar/Work/Playground/learning-locust/locust_venv/lib/python3.7/site-packages/locust/user/task.py\", line 416, in execute_task\r\n    task(self.user)\r\n  File \"/Users/vishalvazkar/Work/Playground/learning-locust/locust_test/vodafone/main.py\", line 52, in getPlatformSessionId\r\n    get_decoded_id('platformSessionId\":\"(.*)\",', response.cookies[\"Session\"]))\r\n  File \"/Users/vishalvazkar/Work/Playground/learning-locust/locust_venv/lib/python3.7/site-packages/requests/cookies.py\", line 328, in __getitem__\r\n    return self._find_no_duplicates(name)\r\n  File \"/Users/vishalvazkar/Work/Playground/learning-locust/locust_venv/lib/python3.7/site-packages/requests/cookies.py\", line 399, in _find_no_duplicates\r\n    raise KeyError('name=%r, domain=%r, path=%r' % (name, domain, path))\r\nKeyError: \"name='Session', domain=None, path=None\"\r\n```\r\n\r\nAny help is appreciated!\r\nThanks,\r\nVish", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1419", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1419/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1419/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1419/events", "html_url": "https://github.com/locustio/locust/issues/1419", "id": 635328268, "node_id": "MDU6SXNzdWU2MzUzMjgyNjg=", "number": 1419, "title": "Old locust releases no longer available on pypi", "user": {"login": "KrystianOcado", "id": 52703631, "node_id": "MDQ6VXNlcjUyNzAzNjMx", "avatar_url": "https://avatars3.githubusercontent.com/u/52703631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KrystianOcado", "html_url": "https://github.com/KrystianOcado", "followers_url": "https://api.github.com/users/KrystianOcado/followers", "following_url": "https://api.github.com/users/KrystianOcado/following{/other_user}", "gists_url": "https://api.github.com/users/KrystianOcado/gists{/gist_id}", "starred_url": "https://api.github.com/users/KrystianOcado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KrystianOcado/subscriptions", "organizations_url": "https://api.github.com/users/KrystianOcado/orgs", "repos_url": "https://api.github.com/users/KrystianOcado/repos", "events_url": "https://api.github.com/users/KrystianOcado/events{/privacy}", "received_events_url": "https://api.github.com/users/KrystianOcado/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-09T10:56:45Z", "updated_at": "2020-06-09T13:35:39Z", "closed_at": "2020-06-09T13:11:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nIt seems that someone removed old locust releases (<1.0) from pypi:\r\n\r\nhttps://pypi.org/project/locust/#history\r\n\r\nWas this intentional? Can you revert this? We are still using previous locust and updating to 1.X is not so simple.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1418", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1418/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1418/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1418/events", "html_url": "https://github.com/locustio/locust/issues/1418", "id": 634784941, "node_id": "MDU6SXNzdWU2MzQ3ODQ5NDE=", "number": 1418, "title": "Locust Installation error on Ubuntu 16.04 and Debian Stretch", "user": {"login": "darkwizard242", "id": 40025815, "node_id": "MDQ6VXNlcjQwMDI1ODE1", "avatar_url": "https://avatars3.githubusercontent.com/u/40025815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darkwizard242", "html_url": "https://github.com/darkwizard242", "followers_url": "https://api.github.com/users/darkwizard242/followers", "following_url": "https://api.github.com/users/darkwizard242/following{/other_user}", "gists_url": "https://api.github.com/users/darkwizard242/gists{/gist_id}", "starred_url": "https://api.github.com/users/darkwizard242/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darkwizard242/subscriptions", "organizations_url": "https://api.github.com/users/darkwizard242/orgs", "repos_url": "https://api.github.com/users/darkwizard242/repos", "events_url": "https://api.github.com/users/darkwizard242/events{/privacy}", "received_events_url": "https://api.github.com/users/darkwizard242/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-08T16:59:31Z", "updated_at": "2020-06-09T16:28:58Z", "closed_at": "2020-06-09T00:01:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nAs far as I understand, Locust package has moved from _**locustio**_ to [locust](https://pypi.org/project/locust/). I was developing an Ansible role to install locust on a few of Debian family operating systems such as the following:\r\n\r\n- Ubuntu 20.04\r\n- Ubuntu 18.04\r\n- Ubuntu 16.04\r\n- Debian Buster\r\n- Debian Stretch\r\n\r\nUsing python3's pip, locust is successfully installed on **Ubuntu 20.04**, **Ubuntu 18.04** and **Debian Buster**. However, it attempts to install **locustio** along with **locust** and errors out on **Ubuntu 16.04** and **Debian Stretch**.\r\n\r\n### Expected behavior\r\nClean installation on Ubuntu 16.04 and Debian Stretch.\r\n\r\n### Actual behavior\r\nOutputs below error (running locally within a docker container of ubuntu 16.04):\r\n```shell\r\n$ python3 -m pip install locust\r\nCollecting locust\r\n  Downloading locust-0.0.tar.gz (833 bytes)\r\nCollecting locustio\r\n  Downloading locustio-0.999.tar.gz (267 kB)\r\n     |################################| 267 kB 2.5 MB/s \r\nBuilding wheels for collected packages: locust, locustio\r\n  Building wheel for locust (setup.py) ... done\r\n  Created wheel for locust: filename=locust-0.0-py3-none-any.whl size=1042 sha256=f16b8e06507985e6c7922338e7ab884a279416f6ba98370cfb6e7931d3b41ffe\r\n  Stored in directory: /root/.cache/pip/wheels/fa/78/82/0d758e038e682fad3d3ece52a4724f9cb2822693ab6f504589\r\n  Building wheel for locustio (setup.py) ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /usr/bin/python3 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-v2zs_a7d/locustio/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-v2zs_a7d/locustio/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /tmp/pip-wheel-pyaprmw9\r\n       cwd: /tmp/pip-install-v2zs_a7d/locustio/\r\n  Complete output (89 lines):\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib\r\n  creating build/lib/locust\r\n  copying locust/exception.py -> build/lib/locust\r\n  copying locust/runners.py -> build/lib/locust\r\n  copying locust/__init__.py -> build/lib/locust\r\n  copying locust/main.py -> build/lib/locust\r\n  copying locust/__main__.py -> build/lib/locust\r\n  copying locust/log.py -> build/lib/locust\r\n  copying locust/stats.py -> build/lib/locust\r\n  copying locust/event.py -> build/lib/locust\r\n  copying locust/argument_parser.py -> build/lib/locust\r\n  copying locust/env.py -> build/lib/locust\r\n  copying locust/clients.py -> build/lib/locust\r\n  copying locust/web.py -> build/lib/locust\r\n  creating build/lib/locust/test\r\n  copying locust/test/test_client.py -> build/lib/locust/test\r\n  copying locust/test/mock_locustfile.py -> build/lib/locust/test\r\n  copying locust/test/test_runners.py -> build/lib/locust/test\r\n  copying locust/test/test_fasthttp.py -> build/lib/locust/test\r\n  copying locust/test/test_wait_time.py -> build/lib/locust/test\r\n  copying locust/test/test_parser.py -> build/lib/locust/test\r\n  copying locust/test/__init__.py -> build/lib/locust/test\r\n  copying locust/test/testcases.py -> build/lib/locust/test\r\n  copying locust/test/test_zmqrpc.py -> build/lib/locust/test\r\n  copying locust/test/test_old_wait_api.py -> build/lib/locust/test\r\n  copying locust/test/test_web.py -> build/lib/locust/test\r\n  copying locust/test/mock_logging.py -> build/lib/locust/test\r\n  copying locust/test/test_util.py -> build/lib/locust/test\r\n  copying locust/test/test_taskratio.py -> build/lib/locust/test\r\n  copying locust/test/test_stats.py -> build/lib/locust/test\r\n  copying locust/test/test_log.py -> build/lib/locust/test\r\n  copying locust/test/test_tags.py -> build/lib/locust/test\r\n  copying locust/test/test_locust_class.py -> build/lib/locust/test\r\n  copying locust/test/test_sequential_taskset.py -> build/lib/locust/test\r\n  copying locust/test/test_main.py -> build/lib/locust/test\r\n  copying locust/test/util.py -> build/lib/locust/test\r\n  creating build/lib/locust/rpc\r\n  copying locust/rpc/protocol.py -> build/lib/locust/rpc\r\n  copying locust/rpc/zmqrpc.py -> build/lib/locust/rpc\r\n  copying locust/rpc/__init__.py -> build/lib/locust/rpc\r\n  creating build/lib/locust/util\r\n  copying locust/util/deprecation.py -> build/lib/locust/util\r\n  copying locust/util/exception_handler.py -> build/lib/locust/util\r\n  copying locust/util/cache.py -> build/lib/locust/util\r\n  copying locust/util/rounding.py -> build/lib/locust/util\r\n  copying locust/util/__init__.py -> build/lib/locust/util\r\n  copying locust/util/timespan.py -> build/lib/locust/util\r\n  creating build/lib/locust/user\r\n  copying locust/user/inspectuser.py -> build/lib/locust/user\r\n  copying locust/user/__init__.py -> build/lib/locust/user\r\n  copying locust/user/task.py -> build/lib/locust/user\r\n  copying locust/user/users.py -> build/lib/locust/user\r\n  copying locust/user/sequential_taskset.py -> build/lib/locust/user\r\n  copying locust/user/wait_time.py -> build/lib/locust/user\r\n  creating build/lib/locust/contrib\r\n  copying locust/contrib/fasthttp.py -> build/lib/locust/contrib\r\n  copying locust/contrib/__init__.py -> build/lib/locust/contrib\r\n  running egg_info\r\n  writing top-level names to locustio.egg-info/top_level.txt\r\n  writing locustio.egg-info/PKG-INFO\r\n  writing dependency_links to locustio.egg-info/dependency_links.txt\r\n  writing entry points to locustio.egg-info/entry_points.txt\r\n  reading manifest file 'locustio.egg-info/SOURCES.txt'\r\n  reading manifest template 'MANIFEST.in'\r\n  writing manifest file 'locustio.egg-info/SOURCES.txt'\r\n  creating build/lib/locust/static\r\n  copying locust/static/chart.js -> build/lib/locust/static\r\n  copying locust/static/echarts.common.min.js -> build/lib/locust/static\r\n  copying locust/static/jquery-1.11.3.min.js -> build/lib/locust/static\r\n  copying locust/static/jquery.jqote2.min.js -> build/lib/locust/static\r\n  copying locust/static/jquery.tools.min.js -> build/lib/locust/static\r\n  copying locust/static/locust.js -> build/lib/locust/static\r\n  copying locust/static/style.css -> build/lib/locust/static\r\n  copying locust/static/vintage.js -> build/lib/locust/static\r\n  creating build/lib/locust/static/img\r\n  copying locust/static/img/favicon.ico -> build/lib/locust/static/img\r\n  copying locust/static/img/logo.png -> build/lib/locust/static/img\r\n  copying locust/static/img/top_bg.png -> build/lib/locust/static/img\r\n  creating build/lib/locust/templates\r\n  copying locust/templates/index.html -> build/lib/locust/templates\r\n  installing to build/bdist.linux-x86_64/wheel\r\n  running install\r\n  \r\n  **** Locust package has moved from 'locustio' to 'locust'. Please update your reference (or pin your version to 0.14.6 if you dont want to update to 1.0) ****\r\n  \r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for locustio\r\n  Running setup.py clean for locustio\r\nSuccessfully built locust\r\nFailed to build locustio\r\nInstalling collected packages: locustio, locust\r\n    Running setup.py install for locustio ... error\r\n    ERROR: Command errored out with exit status 1:\r\n     command: /usr/bin/python3 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-v2zs_a7d/locustio/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-v2zs_a7d/locustio/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-bzfj941a/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.5/locustio\r\n         cwd: /tmp/pip-install-v2zs_a7d/locustio/\r\n    Complete output (4 lines):\r\n    running install\r\n    \r\n    **** Locust package has moved from 'locustio' to 'locust'. Please update your reference (or pin your version to 0.14.6 if you dont want to update to 1.0) ****\r\n    \r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: /usr/bin/python3 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-install-v2zs_a7d/locustio/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-install-v2zs_a7d/locustio/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-bzfj941a/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.5/locustio Check the logs for full command output.\r\n```\r\n\r\n### Steps to reproduce\r\nInstall locust on an ubuntu 16.04 or debian stretch docker image.\r\n\r\nOR try following:\r\n\r\n```shell\r\ndocker run -it darkwizard242/ansible:ubuntu-16.04 /bin/bash -c 'python3 -m pip install locust' \r\n```\r\n\r\n```shell\r\ndocker run -it darkwizard242/ansible:debian-stretch /bin/bash -c 'python3 -m pip install locust' \r\n```\r\n\r\n### Environment\r\n\r\n- OS: Ubuntu 16.04 & Debian Stretch\r\n- Python version: 3.5.2 (ubuntu 16.04) and 3.5.3 (debian-stretch)\r\n- Locust version: Default (as failure at installation process with certain operating systems)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1417", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1417/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1417/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1417/events", "html_url": "https://github.com/locustio/locust/issues/1417", "id": 634397400, "node_id": "MDU6SXNzdWU2MzQzOTc0MDA=", "number": 1417, "title": "locust doesn't escape the double quotes in the csv output ", "user": {"login": "tobeczm", "id": 8512109, "node_id": "MDQ6VXNlcjg1MTIxMDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/8512109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobeczm", "html_url": "https://github.com/tobeczm", "followers_url": "https://api.github.com/users/tobeczm/followers", "following_url": "https://api.github.com/users/tobeczm/following{/other_user}", "gists_url": "https://api.github.com/users/tobeczm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobeczm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobeczm/subscriptions", "organizations_url": "https://api.github.com/users/tobeczm/orgs", "repos_url": "https://api.github.com/users/tobeczm/repos", "events_url": "https://api.github.com/users/tobeczm/events{/privacy}", "received_events_url": "https://api.github.com/users/tobeczm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-08T08:58:31Z", "updated_at": "2020-06-16T13:34:26Z", "closed_at": "2020-06-16T13:34:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\n```\r\n    @task(1)\r\n    def get(self, size):\r\n        self.client.get(\"/cash/{}\".format(size), name='{\"scenario\":\"get cashes\",\"path\":\"/cash/[amount]\",\"arguments\":[{\"size\":1}]}'))\r\n\r\n```\r\n\r\n\r\n\r\n### Expected behavior\r\nthe quotes should be escaped as below:\r\n```\r\n\"Type\",\"Name\",...\r\n\"GET\",\"{\"\"scenario\"\": \"\"get cashes\"\", \"\"path\"\": \"\"/cash/[amount]\"\", \"\"arguments\"\": [{\"\"size\"\": 1}]}\", ...\r\n```\r\n\r\n### Actual behavior\r\nin the csv output is looks as below, the quotes are not escaped.\r\n\r\n```\r\n\"Type\",\"Name\",...\r\n\"GET\",\"{\"scenario\": \"get cashes\", \"path\": \"/cash/[amount]\", \"arguments\": [{\"size\": 1}]}\", ...\r\n```\r\n\r\n### Steps to reproduce\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\n\r\n### Environment\r\n\r\n- OS:\r\n- Python version:3.8\r\n- Locust version: 1.0.2\r\n- Locust command line that you ran:\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1416", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1416/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1416/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1416/events", "html_url": "https://github.com/locustio/locust/issues/1416", "id": 632531859, "node_id": "MDU6SXNzdWU2MzI1MzE4NTk=", "number": 1416, "title": "Locust Improvements for recording, reporting and inputs.", "user": {"login": "ludo550", "id": 33823327, "node_id": "MDQ6VXNlcjMzODIzMzI3", "avatar_url": "https://avatars2.githubusercontent.com/u/33823327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ludo550", "html_url": "https://github.com/ludo550", "followers_url": "https://api.github.com/users/ludo550/followers", "following_url": "https://api.github.com/users/ludo550/following{/other_user}", "gists_url": "https://api.github.com/users/ludo550/gists{/gist_id}", "starred_url": "https://api.github.com/users/ludo550/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ludo550/subscriptions", "organizations_url": "https://api.github.com/users/ludo550/orgs", "repos_url": "https://api.github.com/users/ludo550/repos", "events_url": "https://api.github.com/users/ludo550/events{/privacy}", "received_events_url": "https://api.github.com/users/ludo550/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901882, "node_id": "MDU6TGFiZWwxNjM1OTAxODgy", "url": "https://api.github.com/repos/locustio/locust/labels/wontfix", "name": "wontfix", "color": "ddcccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-06T15:27:10Z", "updated_at": "2020-06-29T06:58:35Z", "closed_at": "2020-06-07T19:36:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Improvement\r\n\r\n Currently we do not support recording data from the test and get a detailed report at the end. Hence, we need a report file that is generated at the end of the test. That has all the recorded data like the average response time at a particular time from the test with the charts.\r\n\r\n### Potential suggestion for a solution\r\n\r\nThe reason I request this feature because its something that can take this tool to the next level. And can be very handy to identify issues in the app. I have made some integrations for this which work and I can share an example if needed but its specific to my organization. It also has feature for web Ui where we can provide the total number of requests at which point locust sends a stop message to all the slaves\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1412", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1412/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1412/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1412/events", "html_url": "https://github.com/locustio/locust/issues/1412", "id": 631255990, "node_id": "MDU6SXNzdWU2MzEyNTU5OTA=", "number": 1412, "title": "Is there any way to set source request ip of Locust", "user": {"login": "wenger66", "id": 11221205, "node_id": "MDQ6VXNlcjExMjIxMjA1", "avatar_url": "https://avatars3.githubusercontent.com/u/11221205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wenger66", "html_url": "https://github.com/wenger66", "followers_url": "https://api.github.com/users/wenger66/followers", "following_url": "https://api.github.com/users/wenger66/following{/other_user}", "gists_url": "https://api.github.com/users/wenger66/gists{/gist_id}", "starred_url": "https://api.github.com/users/wenger66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wenger66/subscriptions", "organizations_url": "https://api.github.com/users/wenger66/orgs", "repos_url": "https://api.github.com/users/wenger66/repos", "events_url": "https://api.github.com/users/wenger66/events{/privacy}", "received_events_url": "https://api.github.com/users/wenger66/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-05T02:01:32Z", "updated_at": "2020-06-06T17:15:31Z", "closed_at": "2020-06-06T17:15:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\".\r\n-->\r\n\r\n### Is your feature request related to a problem? Please describe.\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\nThe virtual machine which run locust has multiple network cards\r\nIs there any way to set source request ip of Locust?\r\n\r\n### Describe the solution you'd like\r\n<!-- A clear and concise description of what you want to happen -->\r\nhttps://docs.locust.io/en/stable/configuration.html#command-line-options\r\ncommand-line has parameter to set source request ip?\r\n\r\n### Describe alternatives you've considered\r\n<!-- A clear and concise description of any alternative solutions or features you've considered -->\r\n\r\n### Additional context\r\n<!-- Add any other context or screenshots about the feature request here -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1410", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1410/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1410/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1410/events", "html_url": "https://github.com/locustio/locust/issues/1410", "id": 630197076, "node_id": "MDU6SXNzdWU2MzAxOTcwNzY=", "number": 1410, "title": "locustio 1.0.2 PyPI release", "user": {"login": "jheld", "id": 828813, "node_id": "MDQ6VXNlcjgyODgxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/828813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jheld", "html_url": "https://github.com/jheld", "followers_url": "https://api.github.com/users/jheld/followers", "following_url": "https://api.github.com/users/jheld/following{/other_user}", "gists_url": "https://api.github.com/users/jheld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jheld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jheld/subscriptions", "organizations_url": "https://api.github.com/users/jheld/orgs", "repos_url": "https://api.github.com/users/jheld/repos", "events_url": "https://api.github.com/users/jheld/events{/privacy}", "received_events_url": "https://api.github.com/users/jheld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901882, "node_id": "MDU6TGFiZWwxNjM1OTAxODgy", "url": "https://api.github.com/repos/locustio/locust/labels/wontfix", "name": "wontfix", "color": "ddcccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-03T17:45:49Z", "updated_at": "2020-06-04T06:56:25Z", "closed_at": "2020-06-04T06:56:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any blocking reason why the 1.0.2 locustio release is not on PyPI? We're on `1.0b2`, and would love to upgrade.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1408", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1408/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1408/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1408/events", "html_url": "https://github.com/locustio/locust/issues/1408", "id": 629558843, "node_id": "MDU6SXNzdWU2Mjk1NTg4NDM=", "number": 1408, "title": "Ability to run test_start on workers.", "user": {"login": "Zooce", "id": 5490155, "node_id": "MDQ6VXNlcjU0OTAxNTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5490155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zooce", "html_url": "https://github.com/Zooce", "followers_url": "https://api.github.com/users/Zooce/followers", "following_url": "https://api.github.com/users/Zooce/following{/other_user}", "gists_url": "https://api.github.com/users/Zooce/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zooce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zooce/subscriptions", "organizations_url": "https://api.github.com/users/Zooce/orgs", "repos_url": "https://api.github.com/users/Zooce/repos", "events_url": "https://api.github.com/users/Zooce/events{/privacy}", "received_events_url": "https://api.github.com/users/Zooce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-02T22:35:26Z", "updated_at": "2020-06-06T08:27:17Z", "closed_at": "2020-06-06T08:27:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Is your feature request related to a problem? Please describe.\r\nI have a load test where some setup is needed, but I really only need to do it once to set some global variables, that all spawned users to use.\r\n\r\nPreviously this was done with the `HttpLocust.setup` method. Unfortunately, now there is the `test_start` functionality which only runs on the master.\r\n\r\n### Describe the solution you'd like\r\nAllow the `test_start` functionality to run on workers.\r\n\r\n### Describe alternatives you've considered\r\nI can use the `HttpUser.on_start` method, but it results in ever single user that is spawned making a request (part of the work that I have to do in the setup), and it's not ideal.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1407", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1407/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1407/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1407/events", "html_url": "https://github.com/locustio/locust/issues/1407", "id": 628565102, "node_id": "MDU6SXNzdWU2Mjg1NjUxMDI=", "number": 1407, "title": "workers do not terminate tasks when master exits ", "user": {"login": "chrishare08", "id": 58052919, "node_id": "MDQ6VXNlcjU4MDUyOTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/58052919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrishare08", "html_url": "https://github.com/chrishare08", "followers_url": "https://api.github.com/users/chrishare08/followers", "following_url": "https://api.github.com/users/chrishare08/following{/other_user}", "gists_url": "https://api.github.com/users/chrishare08/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrishare08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrishare08/subscriptions", "organizations_url": "https://api.github.com/users/chrishare08/orgs", "repos_url": "https://api.github.com/users/chrishare08/repos", "events_url": "https://api.github.com/users/chrishare08/events{/privacy}", "received_events_url": "https://api.github.com/users/chrishare08/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}, {"id": 1003994742, "node_id": "MDU6TGFiZWwxMDAzOTk0NzQy", "url": "https://api.github.com/repos/locustio/locust/labels/waiting%20on%20contributor", "name": "waiting on contributor", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-01T16:19:58Z", "updated_at": "2020-06-20T20:29:49Z", "closed_at": "2020-06-20T20:29:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n### workers do not terminate tasks when master exits \r\nWhen executing a task sequence and the worker terminates after run-time has elapsed, the workers keep running even after stop-timeout has passed.\r\n\r\n### Expected behavior\r\nWhen the master reaches the run-time limit, is should signal the workers to stop new tasks and apply the stop-timeout to their pending tasks and eventually the workers and master should exist when the stop-timeout has been reached.\r\n\r\n### Actual behavior\r\nRunning the command on the master:\r\n\r\n```\r\nlocust --loglevel=DEBUG --headless -u 250 --run-time=10m --stop-timeout=600 --host platform --logfile=debug.log -r 1 --csv test-csv --master --expect-workers=2\r\n```\r\n\r\nand running the command\r\n\r\n```\r\nlocust --worker --master-host=locust-master --master-port=5557 --loglevel=DEBUG --logfile=debug.log \r\n```\r\n\r\nresults in the master terminating when run-time has reached, but the workers continue to execute until killed.\r\n\r\n### Steps to reproduce\r\nExecute those two commands \r\n\r\n### Environment\r\n\r\n- OS: Linux\r\n- Python version: 3.7.6\r\n- Locust version: 1.0.2\r\n- Locust command line that you ran: see above\r\n- Locust file contents (anonymized if necessary):\r\n\r\n```\r\nimport os\r\nimport sys\r\nimport re\r\nimport csv\r\nimport json\r\nimport logging\r\nimport time\r\nfrom datetime import datetime\r\nimport socket\r\nfrom random import *\r\nfrom locust import HttpUser, TaskSet, between, SequentialTaskSet, task, events\r\n\r\n# Global variale defintion\r\niterationCounter = 0        # how many iterations have we done\r\nmaxIterations = 0           # maximum number of iterations\r\ncredentials_file = \"credentials.txt\"\r\n# list to store the available credentials in.  We will use this to randomly select a user\r\ncredentials = []\r\n# the node name\r\nnode = socket.getaddrinfo(socket.gethostname(), 0,\r\n                          flags=socket.AI_CANONNAME)[0][3]\r\n# define the results file\r\nnow = datetime.now().strftime(\"%m%d%Y%H%M%S\")\r\niteration_csv = f\"{now}-{node.replace('.','-')}-results.csv\"\r\n\r\niteration_fh = None         # file handle for the iteration.csv file\r\niteration_writer = None     # CSV writer object\r\nis_worker = True            # this is set to false if this is the master\r\nwrote_header = False        # true once the header is written\r\niteration_csv_fields = 0    # how many fields in the results file\r\n\r\nhttp_status_codes = {\r\n    \"100\": \"Continue\",\r\n    \"101\": \"Switching Protocols\",\r\n    \"200\": \"OK\",\r\n    \"201\":  \"Created\",\r\n    \"202\": \"Accepted\",\r\n    \"203\": \"Non-Authoritative Information\",\r\n    \"204\": \"No Content\",\r\n    \"205\": \"Reset Content\",\r\n    \"206\": \"Partial Content\",\r\n    \"300\": \"Multiple Choices\",\r\n    \"301\": \"Moved Permanently\",\r\n    \"302\": \"Found\",\r\n    \"303\": \"See Other\",\r\n    \"304\": \"Not Modified\",\r\n    \"305\": \"Use Proxy\",\r\n    \"307\": \"Temporary Redirect\",\r\n    \"400\": \"Bad Request\",\r\n    \"401\": \"Unauthorized\",\r\n    \"402\": \"Payment Required\",\r\n    \"403\": \"Forbidden\",\r\n    \"404\": \"Not Found\",\r\n    \"405\": \"Method Not Allowed\",\r\n    \"406\": \"Not Acceptable\",\r\n    \"407\": \"Proxy Authentication Required\",\r\n    \"408\": \"Request Timeout\",\r\n    \"409\": \"Conflict\",\r\n    \"410\": \"Gone\",\r\n    \"411\": \"Length Required\",\r\n    \"412\": \"Precondition Failed\",\r\n    \"413\": \"Payload Too Large\",\r\n    \"414\": \"URI Too Long\",\r\n    \"415\": \"Unsupported Media Type\",\r\n    \"416\": \"Range Not Satisfiable\",\r\n    \"417\": \"Expectation Failed\",\r\n    \"426\": \"Upgrade Required\",\r\n    \"500\": \"Internal Server Error\",\r\n    \"501\": \"Not Implemented\",\r\n    \"502\": \"Bad Gateway\",\r\n    \"503\": \"Service Unavailable\",\r\n    \"504\": \"Gateway Timeout\",\r\n    \"505\": \"HTTP Version Not Supported\"\r\n}\r\n\r\n\r\ndef get_company(**kwargs):\r\n    \"\"\"\r\n    params: \r\n\r\n    company = kwargs.get('Company', None)\r\n\r\n    connection_object = kwargs.get('Connection', None)\r\n\r\n    returns: \r\n\r\n    dict with company endpoint details on success\r\n\r\n    None on failure\r\n    \"\"\"\r\n    __me__ = \"get_company\"\r\n\r\n    # get the parameter data\r\n    company = kwargs.get('Company', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    task_name = kwargs.get('TaskName', \"Undefined\")\r\n\r\n    # no company provided in the parameters\r\n    if company is None:\r\n        logging.critical(\r\n            f\"{__me__}: Iteration[{iterationCounter}] no company provided.\")\r\n        return None\r\n    # no connection object provided in the parameters\r\n    if connection_object is None:\r\n        logging.critical(\r\n            f\"{__me__}: Iteration[{iterationCounter}] no connection object provided.\")\r\n        return None\r\n\r\n    # set the endpoint URL\r\n    endpoint = f\"https://api.DOMAIN/v1/customerconfiguration?name={company}\"\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] Company: {company} URL: {endpoint}\")\r\n\r\n    # connect to the endpoint\r\n    with connection_object.client.get(endpoint, name=task_name, catch_response=True) as response:\r\n        if response.content is None:\r\n            # the response body is empty so set it as an error and return\r\n            response.failure(\r\n                f\"Recevied no data from {endpoint} Status={str(response.status_code)}\")\r\n            return None\r\n        # retrieve the JSON response body\r\n        msg = json.loads(response.content.decode('utf-8'))\r\n        logging.debug(\r\n            f\"{__me__}: Iteration[{iterationCounter}] response = {msg}\")\r\n\r\n        # set the task name for the locust reporting\r\n        if task_name in msg:\r\n            response.locust_request_meta['name'] = task_name\r\n\r\n        if response.status_code == 200:\r\n            # we got a successful response\r\n            if msg is None:\r\n                # if there is no response body, mark this as a failure\r\n                response.failure(\r\n                    f\"Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Iteration[{iterationCounter}] Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n            else:\r\n                # we have a valid response body so mark it as success and return the JSON response\r\n                response.success()\r\n                return msg\r\n        else:\r\n            # we got a non 200 status code, so this is a failure.\r\n            response.failure(\r\n                f\"Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n            logging.error(\r\n                f\"{__me__}: Iteration[{iterationCounter}] Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n\r\n        return None\r\n\r\n\r\ndef do_user_sign_in(**kwargs):\r\n    \"\"\"\r\n    do_user_sign_in(**kwargs) - log in to the Fieldcast platform\r\n\r\n    params:\r\n\r\n    endpoint = kwargs.get('endpoint',None)\r\n\r\n    authId = kwargs.get('auth',None)\r\n\r\n    app = kwargs.get('app', None)\r\n\r\n    connection_object = kwargs.get('Connection', None)\r\n\r\n    returns: \r\n\r\n    on success, dict  with authentication details\r\n\r\n    on failure, returns None\r\n    \"\"\"\r\n    # set up local variables\r\n    __me__ = \"do_user_sign_in\"\r\n\r\n    # retrieve the function paraneters\r\n    endpoint = kwargs.get('Endpoint', None)\r\n    authId = kwargs.get('Auth', None)\r\n    app = kwargs.get('App', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    task_name = kwargs.get('TaskName', \"Undefined\")\r\n    user_name = kwargs.get('UserName', None)\r\n    password = kwargs.get('Password', None)\r\n\r\n    if endpoint is None:\r\n        logging.critical(f\"{__me__}: Parameter error: endpoint not specified\")\r\n        return None\r\n    if authId is None:\r\n        logging.critical(\r\n            f\"{__me__}: Parameter error: authorizationId not specified\")\r\n        return None\r\n    if app is None:\r\n        logging.critical(\r\n            f\"{__me__}: Parameter error: applicationId not specified\")\r\n        return None\r\n    if connection_object is None:\r\n        logging.critical(\r\n            f\"{__me__}: Parameter error: connection_object not specified\")\r\n        return None\r\n\r\n    #\r\n    # User sign in\r\n    #\r\n    if endpoint.rfind('/') < 0:\r\n        # endpoint doesn't end with a /\r\n        actual_url = endpoint+'/api/login'\r\n    else:\r\n        # endpoint ends with a /\r\n        actual_url = endpoint+'api/login'\r\n\r\n    headers = {\"user-agent\": \"locust\",\r\n               \"Authorization\": authId,\r\n               \"Content-Type\": \"application/json\",\r\n               \"Host\": endpoint.replace(\"https://\", \"\").replace(\"/\", \"\")}\r\n    data = {\"applicationId\": app,\r\n            \"loginId\": user_name,\r\n            \"password\": password,\r\n            \"device\": \"locust-load-test\",\r\n            \"metaData\": {\r\n                \"device\": {\r\n                    \"description\": \"Python\",\r\n                    \"type\": \"BROWSER\",\r\n                    \"name\": \"locust-load-test\"\r\n                }\r\n            }\r\n            }\r\n\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] Iteration[{iterationCounter}] POST headers = {headers}\")\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] Iteration[{iterationCounter}] POST body = {data}\")\r\n\r\n    try:\r\n        with connection_object.client.post(actual_url, headers=headers, json=data, name=task_name, catch_response=True) as response:\r\n            # response = requests.post(url, headers=headers, json=data)\r\n            msg = json.loads(response.content.decode('utf-8'))\r\n            logging.debug(\r\n                f\"{__me__}: Iteration[{iterationCounter}] Iteration[{iterationCounter}] response = {msg}\")\r\n\r\n            if task_name in msg:\r\n                response.locust_request_meta['name'] = task_name\r\n\r\n            if response.status_code <= 200:\r\n                if msg is None:\r\n                    response.failure(\r\n                        f\"Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                    logging.error(\r\n                        f\"{__me__}: Iteration[{iterationCounter}] Iteration[{iterationCounter}] Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                else:\r\n                    response.success()\r\n                    return msg\r\n            elif response.status_code == 400:\r\n                response.failure(\r\n                    f\"Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n            elif response.status_code == 404:\r\n                response.failure(\r\n                    f\"Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n    except Exception as e:\r\n        logging.error(\r\n            f\"{__me__}: Iteration[{iterationCounter}] data={data} error={str(e)}\")\r\n\r\n    if response.content is not None:\r\n        return json.loads(response.content.decode('utf-8'))\r\n    else:\r\n        return None\r\n\r\n\r\ndef get_current_user(**kwargs):\r\n    \"\"\"\r\n    params: \r\n    endpoint = kwargs.get('Endpoint',None)\r\n    authId = kwargs.get('Auth',None)\r\n    userid = kwargs.get('Userid', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    returns: dict with user details\r\n    \"\"\"\r\n    __me__ = \"get_current_user\"\r\n\r\n    endpoint = kwargs.get('Endpoint', None)\r\n    authId = kwargs.get('Auth', None)\r\n    userid = kwargs.get('Userid', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    task_name = kwargs.get('TaskName', \"Undefined\")\r\n\r\n    if endpoint is None:\r\n        raise AttributeError(\"Parameter error: endpoint not specified\")\r\n    if authId is None:\r\n        raise AttributeError(\"Parameter error: authId not specified\")\r\n    if userid is None:\r\n        raise AttributeError(\"Parameter error: userid not specified\")\r\n    if connection_object is None:\r\n        raise AttributeError(\r\n            \"Parameter error: connection_object not specified\")\r\n\r\n    host = re.sub('\\.co.*$', '.co', endpoint)\r\n    headers = {\"user-agent\": \"python-probe-v1.0\",\r\n               \"Authorization\": authId,\r\n               \"Content-Type\": \"application/json\",\r\n               \"Host\": host.replace(\"https://\", \"\")\r\n               }\r\n    data = {\r\n    }\r\n\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST headers = {headers}\")\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST body = {data}\")\r\n\r\n    try:\r\n        with connection_object.client.post(endpoint, headers=headers, json=data, name=task_name, catch_response=True) as response:\r\n            # response = requests.post(url, headers=headers, json=data)\r\n            msg = json.loads(response.content.decode('utf-8'))\r\n            logging.debug(\r\n                f\"{__me__}: Iteration[{iterationCounter}] response = {msg}\")\r\n            if task_name in msg:\r\n                response.locust_request_meta['name'] = task_name\r\n\r\n            if response.status_code <= 200:\r\n                if msg is None:\r\n                    response.failure(\r\n                        f\"Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                    logging.error(\r\n                        f\"{__me__}: Iteration[{iterationCounter}] Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                else:\r\n                    response.success()\r\n                    return msg\r\n            elif response.status_code == 400:\r\n                response.failure(\r\n                    f\"Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n            elif response.status_code == 404:\r\n                response.failure(\r\n                    f\"Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n    except Exception as e:\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] [ERROR]: {e}\")\r\n        logging.error(\r\n            f\"{__me__}: Iteration[{iterationCounter}] headers={headers}\")\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] data={data}\")\r\n\r\n\r\ndef get_latest_privacy_policy(**kwargs):\r\n    \"\"\"\r\n    params: \r\n    endpoint = kwargs.get('Endpoint',None)\r\n    authId = kwargs.get('Auth',None)\r\n    userid = kwargs.get('Userid', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    returns: dict with user details\r\n    \"\"\"\r\n    __me__ = \"get_latest_privacy_policy\"\r\n\r\n    endpoint = kwargs.get('Endpoint', None)\r\n    authId = kwargs.get('Auth', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    task_name = kwargs.get('TaskName', \"Undefined\")\r\n\r\n    if endpoint is None:\r\n        raise AttributeError(\"Parameter error: endpoint not specified\")\r\n    if authId is None:\r\n        raise AttributeError(\"Parameter error: authId not specified\")\r\n    if connection_object is None:\r\n        raise AttributeError(\r\n            \"Parameter error: connection_object not specified\")\r\n\r\n    host = re.sub('\\.co.*$', '.co', endpoint)\r\n    headers = {\"user-agent\": \"python-probe-v1.0\",\r\n               \"Authorization\": authId,\r\n               \"Content-Type\": \"application/json\",\r\n               \"Host\": host.replace(\"https://\", \"\")\r\n               }\r\n    data = {\r\n    }\r\n\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST headers = {headers}\")\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST body = {data}\")\r\n\r\n    try:\r\n        with connection_object.client.post(endpoint, headers=headers, json=data, name=task_name, catch_response=True) as response:\r\n            # response = requests.post(url, headers=headers, json=data)\r\n            msg = json.loads(response.content.decode('utf-8'))\r\n            logging.debug(\r\n                f\"{__me__}: Iteration[{iterationCounter}] response = {msg}\")\r\n            if task_name in msg:\r\n                response.locust_request_meta['name'] = task_name\r\n\r\n            if response.status_code <= 200:\r\n                if msg is None:\r\n                    response.failure(\r\n                        f\"Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                    logging.error(\r\n                        f\"{__me__}: Iteration[{iterationCounter}] Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                else:\r\n                    response.success()\r\n                    return msg\r\n            elif response.status_code == 400:\r\n                response.failure(\r\n                    f\"Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n            elif response.status_code == 404:\r\n                response.failure(\r\n                    f\"Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n    except Exception as e:\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] [ERROR]: {e}\")\r\n        logging.error(\r\n            f\"{__me__}: Iteration[{iterationCounter}] headers={headers}\")\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] data={data}\")\r\n\r\n\r\ndef do_upsert_eula(**kwargs):\r\n    \"\"\"\r\n    params: \r\n    endpoint = kwargs.get('Endpoint',None)\r\n    authId = kwargs.get('Auth',None)\r\n    userid = kwargs.get('Userid', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    returns: dict with user details\r\n    \"\"\"\r\n    __me__ = \"do_upsert_eula\"\r\n\r\n    endpoint = kwargs.get('Endpoint', None)\r\n    authId = kwargs.get('Auth', None)\r\n    userid = kwargs.get('Userid', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    task_name = kwargs.get('TaskName', \"Undefined\")\r\n\r\n    if endpoint is None:\r\n        raise AttributeError(\"Parameter error: endpoint not specified\")\r\n    if authId is None:\r\n        raise AttributeError(\"Parameter error: authId not specified\")\r\n    if userid is None:\r\n        raise AttributeError(\"Parameter error: userid not specified\")\r\n    if connection_object is None:\r\n        raise AttributeError(\r\n            \"Parameter error: connection_object not specified\")\r\n\r\n    host = re.sub('\\.co.*$', '.co', endpoint)\r\n    headers = {\"user-agent\": \"python-probe-v1.0\",\r\n               \"Authorization\": authId,\r\n               \"Content-Type\": \"application/json\",\r\n               \"Host\": host.replace(\"https://\", \"\")\r\n               }\r\n    data = {\r\n    }\r\n\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST headers = {headers}\")\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST body = {data}\")\r\n\r\n    try:\r\n        with connection_object.client.post(endpoint, headers=headers, json=data, name=task_name, catch_response=True) as response:\r\n            msg = json.loads(response.content.decode('utf-8'))\r\n            logging.debug(\r\n                f\"{__me__}: Iteration[{iterationCounter}] response = {msg}\")\r\n            if task_name in msg:\r\n                response.locust_request_meta['name'] = task_name\r\n\r\n            if response.status_code <= 200:\r\n                if msg is None:\r\n                    response.failure(\r\n                        f\"Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                    logging.error(\r\n                        f\"{__me__}: Iteration[{iterationCounter}] Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                else:\r\n                    response.success()\r\n                    return msg\r\n            if response.status_code == 400:\r\n                response.failure(\"Got unexpected response code: \" +\r\n                                 str(response.status_code) + \" Error: \" + str(msg))\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n            elif response.status_code == 404:\r\n                response.failure(\"Got unexpected response code: \" +\r\n                                 str(response.status_code) + \" Error: \" + str(msg))\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n    except Exception as e:\r\n        response.failure(f\"Error on connect: {e}\")\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] [ERROR]: {e}\")\r\n        logging.error(\r\n            f\"{__me__}: Iteration[{iterationCounter}] headers={headers}\")\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] data={data}\")\r\n\r\n    logging.error(\r\n        f\"{__me__}: Iteration[{iterationCounter}] status={response.status_code}\")\r\n    if response.status_code <= 200:\r\n        content = response.content\r\n        if content is None:\r\n            response.failure(f\"Recevied no data [{str(response.status_code)}]\")\r\n            return None\r\n        else:\r\n            content = json.loads(content.decode('utf-8'))\r\n        return content\r\n\r\n\r\ndef do_upsert_device(**kwargs):\r\n    \"\"\"\r\n    params: \r\n    endpoint = kwargs.get('Endpoint',None)\r\n    authId = kwargs.get('Auth',None)\r\n    userid = kwargs.get('Userid', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    returns: dict with user details\r\n    \"\"\"\r\n    __me__ = \"do_upsert_device\"\r\n\r\n    endpoint = kwargs.get('Endpoint', None)\r\n    authId = kwargs.get('Auth', None)\r\n    userid = kwargs.get('Userid', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    email = kwargs.get('Email', None)\r\n    first_name = kwargs.get('FirstName', None)\r\n    last_name = kwargs.get('LastName', None)\r\n    task_name = kwargs.get('TaskName', \"Undefined\")\r\n\r\n    if endpoint is None:\r\n        raise AttributeError(\"Parameter error: endpoint not specified\")\r\n    if authId is None:\r\n        raise AttributeError(\"Parameter error: authId not specified\")\r\n    if userid is None:\r\n        raise AttributeError(\"Parameter error: userid not specified\")\r\n    if connection_object is None:\r\n        raise AttributeError(\r\n            \"Parameter error: connection_object not specified\")\r\n\r\n    host = re.sub('\\.co.*$', '.co', endpoint)\r\n    headers = {\"user-agent\": \"python-probe-v1.0\",\r\n               \"Authorization\": authId,\r\n               \"Content-Type\": \"application/json\",\r\n               \"Host\": host.replace(\"https://\", \"\")\r\n               }\r\n    data = {\r\n    }\r\n\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST headers = {headers}\")\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST body = {data}\")\r\n\r\n    try:\r\n        with connection_object.client.post(endpoint, headers=headers, json=data, name=task_name, catch_response=True) as response:\r\n            msg = json.loads(response.content.decode('utf-8'))\r\n            logging.debug(\r\n                f\"{__me__}: Iteration[{iterationCounter}] response = {msg}\")\r\n            if task_name in msg:\r\n                response.locust_request_meta['name'] = task_name\r\n\r\n            if response.status_code <= 200:\r\n                if msg is None:\r\n                    response.failure(\r\n                        f\"Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                    logging.error(\r\n                        f\"{__me__}: Iteration[{iterationCounter}] Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                else:\r\n                    response.success()\r\n                    return msg\r\n            elif response.status_code == 400:\r\n                response.failure(\"Got unexpected response code: \" +\r\n                                 str(response.status_code) + \" Error: \" + str(msg))\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n            elif response.status_code == 404:\r\n                response.failure(\"Got unexpected response code: \" +\r\n                                 str(response.status_code) + \" Error: \" + str(msg))\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n    except Exception as e:\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] [ERROR]: {e}\")\r\n        logging.error(\r\n            f\"{__me__}: Iteration[{iterationCounter}] headers={headers}\")\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] data={data}\")\r\n\r\n\r\ndef get_podcast_list(**kwargs):\r\n\r\n    __me__ = \"get_podcast_list\"\r\n    endpoint = kwargs.get('endpoint', None)\r\n    authId = kwargs.get('auth', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    task_name = kwargs.get('TaskName', \"Undefined\")\r\n\r\n    if endpoint is None:\r\n        logging.critical(\r\n            f\"{__me__}: Iteration[{iterationCounter}] Parameter error: endpoint not specified\")\r\n        return None\r\n    if authId is None:\r\n        logging.critical(\r\n            f\"{__me__}: Iteration[{iterationCounter}] Parameter error: authorizationId not specified\")\r\n        return None\r\n\r\n    url = endpoint\r\n    host = re.sub('\\.co.*$', '.co', url)\r\n    headers = {\"user-agent\": \"python-probe-v1.0\",\r\n               \"Authorization\": authId,\r\n               \"Content-Type\": \"application/json\",\r\n               \"Host\": host.replace(\"https://\", \"\")\r\n               }\r\n    data = {\r\n    }\r\n\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST headers = {headers}\")\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST body = {data}\")\r\n\r\n    try:\r\n        with connection_object.client.post(endpoint, headers=headers, json=data, name=task_name, catch_response=True) as response:\r\n            msg = json.loads(response.content.decode('utf-8'))\r\n            msg = msg['data']\r\n            logging.debug(\r\n                f\"{__me__}: Iteration[{iterationCounter}] response = {msg}\")\r\n\r\n            if task_name in msg:\r\n                response.locust_request_meta['name'] = task_name\r\n\r\n            if response.status_code <= 200:\r\n                if msg is None:\r\n                    response.failure(\r\n                        f\"Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                    logging.error(\r\n                        f\"{__me__}: Iteration[{iterationCounter}] Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                else:\r\n                    response.success()\r\n                    return msg\r\n            elif response.status_code == 400:\r\n                response.failure(\"Got unexpected response code: \" +\r\n                                 str(response.status_code) + \" Error: \" + str(msg))\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n            elif response.status_code == 404:\r\n                response.failure(\"Got unexpected response code: \" +\r\n                                 str(response.status_code) + \" Error: \" + str(msg))\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n    except Exception as e:\r\n        response.failure(f\"Endpoint connection failure: {endpoint}: {e}\")\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] [ERROR]: {e}\")\r\n        logging.error(\r\n            f\"{__me__}: Iteration[{iterationCounter}] headers={headers}\")\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] data={data}\")\r\n\r\n\r\ndef get_episodes_from_podcast(**kwargs):\r\n    \"\"\" params: endpoint: url to send request to\r\n        authId: bearer token\r\n        podcast: podcast id\r\n    \"\"\"\r\n    __me__ = \"get_episodes_from_podcast\"\r\n    endpoint = kwargs.get('endpoint', None)\r\n    authId = kwargs.get('auth', None)\r\n    podcast_id = kwargs.get('podcast', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    task_name = kwargs.get('TaskName', \"Undefined\")\r\n\r\n    if endpoint is None:\r\n        logging.critical(\"Parameter error: endpoint not specified\")\r\n        return None\r\n    if authId is None:\r\n        logging.critical(\"Parameter error: authorizationId not specified\")\r\n        return None\r\n    if podcast_id is None:\r\n        logging.critical(\"Parameter error: podcast not specified\")\r\n        return None\r\n\r\n    host = re.sub('\\.co.*$', '.co', endpoint)\r\n    headers = {\"user-agent\": \"python-probe-v1.0\",\r\n               \"Authorization\": authId,\r\n               \"Content-Type\": \"application/json\",\r\n               \"Host\": host.replace(\"https://\", \"\")\r\n               }\r\n    data = {\r\n        \"operationName\": \"ListEpisodesForPodcastOrderByNumber\",\r\n        \"variables\": {\r\n            \"episodePodcastId\": podcast_id,\r\n            \"offset\": 0\r\n        },\r\n    }\r\n\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST headers = {headers}\")\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST body = {data}\")\r\n\r\n    try:\r\n        with connection_object.client.post(endpoint, headers=headers, json=data, name=task_name, catch_response=True) as response:\r\n            msg = json.loads(response.content.decode('utf-8'))\r\n            msg = msg['data']\r\n            logging.debug(\r\n                f\"{__me__}: Iteration[{iterationCounter}] response = {msg}\")\r\n            if task_name in msg:\r\n                response.locust_request_meta['name'] = task_name\r\n\r\n            if response.status_code <= 200:\r\n                if msg is None:\r\n                    response.failure(\r\n                        f\"Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                    logging.error(\r\n                        f\"{__me__}: Iteration[{iterationCounter}] Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                else:\r\n                    response.success()\r\n                    return msg\r\n            elif response.status_code == 400:\r\n                response.failure(\"Got unexpected response code: \" +\r\n                                 str(response.status_code) + \" Error: \" + str(msg))\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n            elif response.status_code == 404:\r\n                response.failure(\"Got unexpected response code: \" +\r\n                                 str(response.status_code) + \" Error: \" + str(msg))\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n    except Exception as e:\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] [ERROR]: {e}\")\r\n        logging.error(\r\n            f\"{__me__}: Iteration[{iterationCounter}] headers={headers}\")\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] data={data}\")\r\n\r\n\r\ndef get_episode_by_id(**kwargs):\r\n    \"\"\" params: endpoint: url to send request to\r\n        authId: bearer token\r\n        podcast: podcast id\r\n    \"\"\"\r\n    __me__ = \"get_episodes_from_podcast\"\r\n    endpoint = kwargs.get('endpoint', None)\r\n    authId = kwargs.get('auth', None)\r\n    podcast_id = kwargs.get('podcast', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    task_name = kwargs.get('TaskName', \"Undefined\")\r\n\r\n    if endpoint is None:\r\n        logging.critical(\"Parameter error: endpoint not specified\")\r\n        return None\r\n    if authId is None:\r\n        logging.critical(\"Parameter error: authorizationId not specified\")\r\n        return None\r\n    if podcast_id is None:\r\n        logging.critical(\"Parameter error: podcast not specified\")\r\n        return None\r\n\r\n    host = re.sub('\\.co.*$', '.co', endpoint)\r\n    headers = {\"user-agent\": \"python-probe-v1.0\",\r\n               \"Authorization\": authId,\r\n               \"Content-Type\": \"application/json\",\r\n               \"Host\": host.replace(\"https://\", \"\")\r\n               }\r\n    data = {\r\n        \"operationName\": \"ListEpisodesForPodcastOrderByNumber\",\r\n        \"variables\": {\r\n            \"episodePodcastId\": podcast_id,\r\n            \"offset\": 0\r\n        },\r\n    }\r\n\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST headers = {headers}\")\r\n    logging.debug(\r\n        f\"{__me__}: Iteration[{iterationCounter}] POST body = {data}\")\r\n\r\n    try:\r\n        with connection_object.client.post(endpoint, headers=headers, json=data, name=task_name, catch_response=True) as response:\r\n            msg = json.loads(response.content.decode('utf-8'))\r\n            msg = msg['data']\r\n            logging.debug(\r\n                f\"{__me__}: Iteration[{iterationCounter}] response = {msg}\")\r\n            if task_name in msg:\r\n                response.locust_request_meta['name'] = task_name\r\n\r\n            if response.status_code <= 200:\r\n                if msg is None:\r\n                    response.failure(\r\n                        f\"Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                    logging.error(\r\n                        f\"{__me__}: Iteration[{iterationCounter}] Recevied no data [{str(response.status_code)}] Content: {str(msg)}\")\r\n                else:\r\n                    response.success()\r\n                    return msg\r\n            elif response.status_code == 400:\r\n                response.failure(\"Got unexpected response code: \" +\r\n                                 str(response.status_code) + \" Error: \" + str(msg))\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n            elif response.status_code == 404:\r\n                response.failure(\"Got unexpected response code: \" +\r\n                                 str(response.status_code) + \" Error: \" + str(msg))\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}] Error: {str(msg)}\")\r\n                return None\r\n    except Exception as e:\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] [ERROR]: {e}\")\r\n        logging.error(\r\n            f\"{__me__}: Iteration[{iterationCounter}] headers={headers}\")\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] data={data}\")\r\n\r\n\r\ndef get_episode_mp3(**kwargs):\r\n    \"\"\" params: endpoint: url to send request to\r\n        authId: bearer token\r\n        episode: path to the audio object\r\n    \"\"\"\r\n    __me__ = \"get_episode_mp3\"\r\n\r\n    endpoint = kwargs.get('endpoint', None)\r\n    authId = kwargs.get('auth', None)\r\n    episode_path = kwargs.get('episode', None)\r\n    episode_id = kwargs.get('episode_id', None)\r\n    token = kwargs.get('token', None)\r\n    connection_object = kwargs.get('Connection', None)\r\n    task_name = kwargs.get('TaskName', \"Undefined\")\r\n\r\n    if endpoint is None:\r\n        logging.critical(\"Parameter error: endpoint not specified\")\r\n        return None\r\n    if authId is None:\r\n        logging.critical(\"Parameter error: authorizationId not specified\")\r\n        return None\r\n    if episode_path is None:\r\n        logging.critical(\"Parameter error: episode not specified\")\r\n        return None\r\n    if episode_id is None:\r\n        logging.critical(\"Parameter error: episode_id not specified\")\r\n        return None\r\n\r\n    host = re.sub('\\.co.*$', '.co', endpoint)\r\n    headers = {\"user-agent\": \"python-probe-v1.0\",\r\n               \"Authorization\": authId,\r\n               \"Connection\": \"Keep-Alive\",\r\n               \"Content-Type\": \"audio/mpeg\",\r\n               \"Accept-Encoding\": \"gzip, deflate\",\r\n               \"Host\": host.replace(\"https://\", \"\")\r\n               }\r\n\r\n    target = f\"{endpoint}{episode_path}?apiVersion=1&type=episode&episodeId={episode_id}&role=ROLE&jwt={token}\"\r\n    logging.debug(f\"{__me__}: Iteration[{iterationCounter}] {target}\")\r\n\r\n    try:\r\n        with connection_object.client.get(target, headers=headers, name=task_name, stream=True, catch_response=True) as response:\r\n\r\n            logging.debug(\r\n                f\"{__me__}: Iteration[{iterationCounter}] length of content is {len(response.content)}\")\r\n            response.locust_request_meta['name'] = task_name\r\n\r\n            if response.status_code <= 200:\r\n                if len(response.content) <= 0:\r\n                    response.failure(\r\n                        f\"Recevied no data [{str(response.status_code)}]\")\r\n                    logging.error(\r\n                        f\"{__me__}: Iteration[{iterationCounter}] Recevied no data [{str(response.status_code)}] Endpoint: {endpoint} Episode Id: {episode_id} Episode Path: {episode_path} \")\r\n                else:\r\n                    logging.debug(\r\n                        f\"{__me__}: Iteration[{iterationCounter}] Recevied {len(response.content)}\")\r\n                    response.success()\r\n            else:\r\n                response.failure(\r\n                    f\"Got unexpected response code: [{str(response.status_code)}={http_status_codes[str(response.status_code)]}] Endpoint: {endpoint} Episode Path: {episode_path} Episode Id: {episode_id}\")\r\n                logging.error(\r\n                    f\"{__me__}: Iteration[{iterationCounter}] Got unexpected response code: [{str(response.status_code)}={http_status_codes[str(response.status_code)]}] Target: {target}\")\r\n                return None\r\n    except Exception as e:\r\n        logging.error(\r\n            f\"{__me__}: Iteration[{iterationCounter}] [ERROR]: {e} retrieving {target}\")\r\n        logging.error(\r\n            f\"{__me__}: Iteration[{iterationCounter}] headers={headers}\")\r\n        logging.error(f\"{__me__}: Iteration[{iterationCounter}] data={target}\")\r\n    finally:\r\n        response = \"\"\r\n\r\n    return None\r\n\r\n\r\ndef error406(**kwargs):\r\n    \"\"\"\r\n    error406(**kwargs) - use  a fake endpoint to generate a 406 error from the ALB\r\n\r\n    Success is a  406 status code.\r\n    Failure is a non-406 status code\r\n\r\n    params: error406(Connection=connection_object, TaskName=string)\r\n\r\n    returns: None\r\n    \"\"\"\r\n    __me__ = \"error406\"\r\n\r\n    connection_object = kwargs.get('Connection', None)\r\n    task_name = kwargs.get('TaskName', \"Undefined\")\r\n\r\n    if connection_object is None:\r\n        logging.critical(\r\n            f\"{__me__}: Iteration[{iterationCounter}] no  connection supplied.\")\r\n        return None\r\n\r\n    endpoint = f\"https://query.DOMAIN/test\"\r\n    with connection_object.client.get(endpoint, name=task_name, catch_response=True) as response:\r\n        response.locust_request_meta['name'] = task_name\r\n\r\n        if response.status_code == 406:\r\n            response.success()\r\n        else:\r\n            response.failure(\r\n                f\"{__me__}: Got unexpected response code: [{str(response.status_code)}={http_status_codes[str(response.status_code)]}]\")\r\n\r\n    return None\r\n\r\n\r\ndef choose_user():\r\n    \"\"\"\r\n    choose_user() - randomly select a user from the global credentials list\r\n\r\n    params: none\r\n\r\n    returns: user_name, password\r\n    \"\"\"\r\n    # global credential list\r\n    global credentials\r\n\r\n    # if the global credentials list is empty, load it\r\n    if not credentials:\r\n        load_credentials()\r\n\r\n    # randomly select a user from the credentials list\r\n    selected_user = randrange(0, len(credentials), 1)\r\n    # log the selected user information\r\n    logging.debug(\r\n        f\"choose_user: random {selected_user} = {credentials[selected_user]}\")\r\n    # split the value into a username and password\r\n    user_name, password = credentials[selected_user].split(',')\r\n    # return the user_name and password to the caller\r\n    return user_name, password\r\n\r\n\r\ndef open_csv():\r\n    \"\"\"\r\n    open_csv(): open the iteration_csv file and create the CSV writer object\r\n\r\n    params: none\r\n\r\n    returs: none (sets value of two global variables)\r\n    \"\"\"\r\n    global iteration_fh\r\n    global iteration_writer\r\n\r\n    if wrote_header is True:\r\n        logging.debug(\"open_csv: opening in append mode\")\r\n        iteration_fh = open(iteration_csv, 'a')\r\n    else:\r\n        logging.debug(\"open_csv: opening in write mode\")\r\n        iteration_fh = open(iteration_csv, 'w')\r\n\r\n    iteration_writer = csv.writer(iteration_fh)\r\n\r\n    return None\r\n\r\n\r\ndef write_csv(**kwargs):\r\n    \"\"\"\r\n    write_csv(Data=list) - writes list to CSV file using CSV writer object\r\n\r\n    params: list item to write to CSV\r\n\r\n    returns: number of bytes written\r\n    \"\"\"\r\n    data = kwargs.get('Data', None)\r\n\r\n    if data is not None:\r\n        if iteration_fh is None:\r\n            logging.debug(\"write_csv: no file handle\")\r\n            open_csv()\r\n        iteration_writer.writerow(data)\r\n        logging.debug(f\"write_csv: wrote {str(sys.getsizeof(data))} bytes\")\r\n\r\n    return str(sys.getsizeof(data))\r\n\r\n\r\ndef write_csv_header(**kwargs):\r\n    \"\"\"\r\n    write_csv_header(**kwargs): write the CSV file header\r\n\r\n    params: none\r\n\r\n    returns: None sets global variable wrote_header and iteration_csv_fields\r\n    \"\"\"\r\n    global wrote_header             # sets to True before return\r\n    global iteration_csv_fields     # number of fields in the output\r\n\r\n    if wrote_header is True:\r\n        # If we have written the header already, return\r\n        return None\r\n\r\n    # define list to write to the CSV file.  This is defined to\r\n    # match the order the tasks are called.  Changing the order of the\r\n    # tasks will require the headers to be adjusted.\r\n    iteration_pass = []\r\n    iteration_pass.append(\"Hostname\")\r\n    iteration_pass.append(\"Email Address\")\r\n    iteration_pass.append(\"Iteration\")\r\n    iteration_pass.append(\"Company Configuration\")\r\n    iteration_pass.append(\"User Sign In\")\r\n    iteration_pass.append(\"Get Current User Details\")\r\n    iteration_pass.append(\"Get Latest Privacy Policy\")\r\n    iteration_pass.append(\"Upsert EULA\")\r\n    iteration_pass.append(\"Upsert Device\")\r\n    iteration_pass.append(\"Get/Select Podcast\")\r\n    iteration_pass.append(\"Get/Select Episode\")\r\n    iteration_pass.append(\"Get Audio File\")\r\n    iteration_pass.append(\"Total Time\")\r\n\r\n    # set the value of the global variable iteration_csv_fields\r\n    iteration_csv_fields = len(iteration_pass)\r\n    # write the header to the CSV\r\n    write_csv(Data=iteration_pass)\r\n    # set the wrote_header flag\r\n    wrote_header = True\r\n\r\n    return None\r\n\r\n\r\ndef load_credentials():\r\n    \"\"\"\r\n    load_credentials - load credentials file into a list\r\n\r\n    credentials file is defined as a global varable\r\n\r\n    credentials list is a global variable\r\n\r\n    params: none\r\n\r\n    returns: number of credentials loaded\r\n    \"\"\"\r\n    global credentials      # global list storing the credentials\r\n\r\n    logging.debug(f\"load_credentials: loading credentials data into list\")\r\n    with open(credentials_file) as f:\r\n        credentials = f.read().splitlines()\r\n\r\n    return len(credentials)\r\n\r\n\r\n@events.test_start.add_listener\r\ndef on_test_start(**kwargs):\r\n\r\n    global maxIterations\r\n    global iterationCounter\r\n    global credentials\r\n    global node\r\n\r\n    #iteration_pass = []\r\n    # print(\"on_test_start\")\r\n    iterationCounter = 0\r\n    envMaxIterations = os.getenv(\"MAX_ITERATIONS\")\r\n    if envMaxIterations is None:\r\n        maxIterations = 0\r\n        logging.warning(\r\n            f\"maxIterations is not defined in the environment.  Ignoring iteration count.\")\r\n    else:\r\n        maxIterations = int(envMaxIterations)\r\n        logging.info(f\"maxIterations is set to {maxIterations}\")\r\n\r\n    # Check to see if the CSV writer open is defined.  If not, configure it\r\n    if iteration_fh is None:\r\n        open_csv()\r\n        write_csv_header()\r\n        is_worker = False\r\n\r\n    # Prepare the credentials\r\n    load_credentials()\r\n\r\n\r\n@events.test_stop.add_listener\r\ndef on_test_stop(**kwargs):\r\n\r\n    logging.info(\"done\")\r\n    if iteration_fh is not None:\r\n        iteration_fh.close()\r\n    sys.exit(0)\r\n\r\n\r\ndef add_blanks(**kwargs):\r\n    \"\"\"\r\n    add_blanks (**kwargs): add additional fields to the provided list\r\n\r\n    params: Data=list, Length=target list length\r\n\r\n    returns: list with added empty items\r\n    \"\"\"\r\n    data = kwargs.get('Data', None)\r\n    length = kwargs.get('Length', None)\r\n\r\n    if data is None:\r\n        logging.error(\"add_blanks: no data passed in to process\")\r\n        return data\r\n\r\n    while len(data) <= length:\r\n        data.append(\"\")\r\n\r\n    return data\r\n\r\n\r\nclass UserBehavior(SequentialTaskSet):\r\n\r\n    iteration_pass = []\r\n    iteration_start = 0.0\r\n    user_name = \"\"\r\n    password = \"\"\r\n    config = {}\r\n    auth_token = \"\"\r\n    user_id = \"\"\r\n    auth_details = {}\r\n    selected_podcast_id = 0\r\n    selected_episode_id = 0\r\n\r\n    def on_start(self):\r\n\r\n        global iterationCounter\r\n\r\n        if is_worker is True:\r\n            if iteration_fh is None:\r\n                logging.debug(\r\n                    \"on_start: worker task: no CSV file handle.  opening file\")\r\n                open_csv()\r\n                write_csv_header()\r\n\r\n        if not credentials:\r\n            load_credentials()\r\n\r\n        self.iteration_start = time.time()\r\n        iterationCounter = iterationCounter + 1\r\n        self.iteration_pass = []\r\n        #print(f\"on_start: IterationCount = {iterationCounter}\")\r\n        self.user_name, self.password = choose_user()\r\n        self.iteration_pass.append(node)\r\n        self.iteration_pass.append(self.user_name)\r\n        self.iteration_pass.append(iterationCounter)\r\n        # print(self.iteration_pass)\r\n        # print(\r\n        #     f\"on_start: iteration_detail list is {str(sys.getsizeof(iteration_detail))} bytes\")\r\n\r\n    def on_stop(self):\r\n        \"\"\"\r\n        on_stop - execute steps when the user task is stopped\r\n\r\n        params: None\r\n\r\n        returns: none\r\n        \"\"\"\r\n        # global iteration_detail\r\n        global iteration_fh\r\n\r\n        # print(\"on_stop)\")\r\n        # take the current interaction data and add it to the entire set\r\n        end_time = time.time()\r\n        iteration_time = end_time - self.iteration_start\r\n        print(\r\n            f\"start = {self.iteration_start} end = {end_time} diff = {end_time - self.iteration_start}\")\r\n        logging.info(\r\n            f\"on_stop: Iteration[{iterationCounter}] total time is {iteration_time:.2f}s {iteration_time*1000:.2f}ms  (includes random wait time)\")\r\n        if len(self.iteration_pass) < iteration_csv_fields:\r\n            self.iteration_pass = add_blanks(\r\n                Data=self.iteration_pass, Length=iteration_csv_fields - 1)\r\n\r\n        self.iteration_pass.append(iteration_time*1000)\r\n        # iteration_detail.append(self.iteration_pass)\r\n        if iteration_fh is None:\r\n            logging.debug(\r\n                \"on_stop: worker task: no CSV file handle.  opening file\")\r\n            open_csv()\r\n            write_csv_header()\r\n        write_csv(Data=self.iteration_pass)\r\n        if is_worker is True:\r\n            logging.debug(\"on_stop: worker task complete: closing CSV file\")\r\n            iteration_fh.close()\r\n            iteration_fh = None\r\n\r\n        # logging.debug(\r\n        #     f\"on_stop: iteration_detail list is {str(sys.getsizeof(iteration_detail))} bytes\")\r\n        #print(f\"stop: {self.iteration_pass}\")\r\n\r\n    @task()\r\n    def task1(self):\r\n        #global config\r\n\r\n        stime = time.time()\r\n        self.config = get_company(Connection=self, Company=\"LoadTest\",\r\n                                  TaskName=\"Task 1: Company Configuration\")\r\n\r\n        end_time = time.time()\r\n        iteration_time = end_time - stime\r\n\r\n        if self.config is None:\r\n            iteration_time = -1\r\n            self.iteration_pass.append(iteration_time)\r\n            logging.error(\r\n            f\"Company Configuration: Iteration[{iterationCounter}] returned no company configuration information.  skipping user.\")\r\n            self.interrupt()\r\n        else:\r\n            logging.info(\r\n                f\"Company Configuration: Iteration[{iterationCounter}] time is {iteration_time:.2f}s {iteration_time*1000:.2f}ms\")\r\n            # Add the time in milliseconds\r\n            self.iteration_pass.append(iteration_time*1000)\r\n\r\n    @task()\r\n    def task2(self):\r\n\r\n        # global auth_token\r\n        # global user_id\r\n        # global auth_details\r\n\r\n        stime = time.time()\r\n        response = do_user_sign_in(Connection=self, Endpoint=self.config['authEndpoint'],\r\n                                   Auth=self.config[\"authorizationId\"],\r\n                                   App=self.config[\"applicationId\"],\r\n                                   TaskName=\"Task 2: User Sign In\",\r\n                                   UserName=self.user_name,\r\n                                   Password=self.password)\r\n\r\n        if response is None:\r\n            self.auth_token = None\r\n        else:\r\n            self.auth_token = response['token']\r\n            self.user_id = response['user']['id']\r\n            self.auth_details = response\r\n\r\n        end_time = time.time()\r\n        iteration_time = end_time - stime\r\n        logging.info(\r\n            f\"User Sign In: Iteration[{iterationCounter}] time is {iteration_time:.2f}s {iteration_time*1000:.2f}ms\")\r\n        # Add the time in milliseconds\r\n        self.iteration_pass.append(iteration_time * 1000)\r\n\r\n    @task()\r\n    def task3(self):\r\n        if self.auth_token is not None:\r\n            stime = time.time()\r\n            response = get_current_user(Connection=self, Endpoint=self.config['apiEndpoint'],\r\n                                        Auth=f\"Bearer {self.auth_token}\",\r\n                                        Userid=self.user_id,\r\n                                        TaskName=\"Task 3: Get Current User Details\")\r\n            logging.debug(\r\n                f\"Iteration[{iterationCounter}] user details: {response}\")\r\n            end_time = time.time()\r\n            iteration_time = end_time - stime\r\n            logging.info(\r\n                f\"Get Current User Details: Iteration[{iterationCounter}] time is {iteration_time:.2f}s {iteration_time*1000:.2f}ms\")\r\n            # Add the time in milliseconds\r\n            self.iteration_pass.append(iteration_time * 1000)\r\n        else:\r\n            logging.error(\r\n                \"Task3: Iteration[{iterationCounter}] [ERROR] no auth_token\")\r\n\r\n    @task()\r\n    def task4(self):\r\n        if self.auth_token is not None:\r\n            stime = time.time()\r\n            response = get_latest_privacy_policy(Connection=self,\r\n                                                 Endpoint=self.config['apiEndpoint'],\r\n                                                 Auth=f\"Bearer {self.auth_token}\",\r\n                                                 TaskName=\"Task 4: Get Latest Privacy Policy\")\r\n            logging.debug(\r\n                f\"Iteration[{iterationCounter}] lastest privacy policy: {response}\")\r\n            end_time = time.time()\r\n            iteration_time = end_time - stime\r\n            logging.info(\r\n                f\"Get Latest Privacy Policy: Iteration[{iterationCounter}] time is {iteration_time:.2f}s {iteration_time*1000:.2f}ms\")\r\n            # Add the time in milliseconds\r\n            self.iteration_pass.append(iteration_time * 1000)\r\n        else:\r\n            logging.error(\r\n                \"Task4: Iteration[{iterationCounter}] [ERROR] no auth_token\")\r\n\r\n    @task()\r\n    def task5(self):\r\n        if self.auth_token is not None:\r\n            stime = time.time()\r\n            response = do_upsert_eula(Connection=self, Endpoint=self.config['apiEndpoint'],\r\n                                      Auth=f\"Bearer {self.auth_token}\",\r\n                                      Userid=self.user_id,\r\n                                      TaskName=\"Task 5: Upsert EULA\")\r\n            if response is not None:\r\n                logging.debug(\r\n                    f\"Upsert EULA: Iteration[{iterationCounter}] upsert_eula: {response}\")\r\n            else:\r\n                logging.error(\r\n                    f\"Upsert EULA: Iteration[{iterationCounter}] upsert_eula: no data from endpoint.\")\r\n\r\n            end_time = time.time()\r\n            iteration_time = end_time - stime\r\n            self.iteration_pass.append(iteration_time * 1000)\r\n            logging.info(\r\n                f\"Upsert EULA: Iteration[{iterationCounter}] time is {iteration_time:.2f}s {iteration_time*1000:.2f}ms\")\r\n        else:\r\n            logging.error(\r\n                \"Upsert EULA: Iteration[{iterationCounter}] [ERROR] no auth_token\")\r\n\r\n    @task()\r\n    def task6(self):\r\n        if self.auth_token is not None:\r\n            stime = time.time()\r\n            response = do_upsert_device(Connection=self, Endpoint=self.config['apiEndpoint'],\r\n                                        Auth=f\"Bearer {self.auth_token}\",\r\n                                        Userid=self.user_id,\r\n                                        Email=self.auth_details['user']['email'],\r\n                                        FirstName=self.auth_details['user']['firstName'],\r\n                                        LastName=self.auth_details['user']['lastName'],\r\n                                        TaskName=\"Task 6: Upsert Device Details\")\r\n\r\n            logging.debug(\r\n                f\"Upsert Device: Iteration[{iterationCounter}] upsert_device: {response}\")\r\n            end_time = time.time()\r\n            iteration_time = end_time - stime\r\n            self.iteration_pass.append(iteration_time * 1000)\r\n            logging.info(\r\n                f\"Upsert Device: Iteration[{iterationCounter}] time is {iteration_time:.2f}s {iteration_time*1000:.2f}ms\")\r\n        else:\r\n            logging.error(\r\n                \"Upsert Device: Iteration[{iterationCounter}] [ERROR] no auth_token\")\r\n\r\n    @task()\r\n    def task7(self):\r\n\r\n        #global selected_podcast_id\r\n        stime = time.time()\r\n        response = get_podcast_list(Connection=self, endpoint=self.config['apiEndpoint'],\r\n                                    auth=f\"Bearer {self.auth_token}\",\r\n                                    TaskName=\"Task 7: Get Podcast List\")\r\n\r\n        if response is not None:\r\n            podcast_list = response['Podcasts']\r\n            selected_podcast = randrange(0, len(podcast_list), 1)\r\n            logging.debug(\r\n                f\"Iteration[{iterationCounter}] Selected podcast: {selected_podcast} of possible {len(podcast_list)}\")\r\n            logging.debug(\r\n                f\"Iteration[{iterationCounter}] Selected podcast details: {podcast_list[selected_podcast]}\")\r\n            self.selected_podcast_id = podcast_list[selected_podcast]['id']\r\n            logging.debug(\r\n                f\"Iteration[{iterationCounter}] Selected podcast id: {self.selected_podcast_id}\")\r\n        else:\r\n            logging.error(\r\n                f\"Iteration[{iterationCounter}] Podcast list is empty.\")\r\n\r\n        end_time = time.time()\r\n        iteration_time = end_time - stime\r\n        self.iteration_pass.append(iteration_time * 1000)\r\n        logging.info(\r\n            f\"Get/Select Podcast: Iteration[{iterationCounter}] time is {iteration_time:.2f}s {iteration_time*1000:.2f}ms\")\r\n\r\n    @task()\r\n    def task8(self):\r\n\r\n        #global selected_episode_id\r\n        #global selected_episode_object\r\n\r\n        stime = time.time()\r\n\r\n        response = get_episodes_from_podcast(Connection=self, endpoint=self.config['apiEndpoint'],\r\n                                             auth=f\"Bearer {self.auth_token}\",\r\n                                             podcast=self.selected_podcast_id,\r\n                                             TaskName=\"Task 8: Get Episodes for Podcast\")\r\n        # Select a random episode\r\n\r\n        if response is not None:\r\n            episode_list = response['Episodes']\r\n            selected_episode = randrange(0, len(episode_list), 1)\r\n            self.selected_episode_id = episode_list[selected_episode]['id']\r\n            logging.debug(\r\n                f\"Iteration[{iterationCounter}] Selected episode: {selected_episode} of possible {len(episode_list)}\")\r\n            logging.debug(\r\n                f\"Iteration[{iterationCounter}] Selected episode details: {episode_list[selected_episode]}\")\r\n            self.selected_episode_object = episode_list[selected_episode]['objectPath']\r\n            logging.debug(\r\n                f\"Iteration[{iterationCounter}] selected episode id = {self.selected_episode_id}\")\r\n            logging.debug(\r\n                f\"Iteration[{iterationCounter}] selected episode object = {self.selected_episode_object}\")\r\n        else:\r\n            logging.error(\r\n                f\"Iteration[{iterationCounter}] selected_podcast_id is None.\")\r\n\r\n        end_time = time.time()\r\n        iteration_time = end_time - stime\r\n        self.iteration_pass.append(iteration_time * 1000)\r\n        logging.info(\r\n            f\"Get/Select Episode: Iteration[{iterationCounter}] time is {iteration_time:.2f}s {iteration_time*1000:.2f}ms\")\r\n\r\n    @task()\r\n    def task9(self):\r\n\r\n        if self.selected_episode_id is None:\r\n            logging.error(\r\n                f\"Iteration[{iterationCounter}] selected_episode_id is None.\")\r\n            return\r\n\r\n        stime = time.time()\r\n        get_episode_mp3(Connection=self, endpoint=self.config['cdnUrl'],\r\n                        auth=f\"Bearer {self.auth_token}\",\r\n                        token=self.auth_token,\r\n                        episode=self.selected_episode_object,\r\n                        episode_id=self.selected_episode_id,\r\n                        TaskName=\"Task 9: Get Episode Audio File\")\r\n        end_time = time.time()\r\n        iteration_time = end_time - stime\r\n        self.iteration_pass.append(iteration_time * 1000)\r\n        logging.info(\r\n            f\"Download Episode Audio: Iteration[{iterationCounter}] time is {iteration_time:.2f}s {iteration_time*1000:.2f}ms\")\r\n\r\n    # @task()\r\n    # def task10(self):\r\n    #     get_additional_content(Connection=self, endpoint=config['cdnUrl'],\r\n    #                         auth=f\"Bearer {auth_token}\",\r\n    #                         token=auth_token,\r\n    #                         episode=selected_episode_object,\r\n    #                         episode_id=selected_episode_id,\r\n    #                     TaskName=\"Task 10: Get Additional Content\")\r\n\r\n    @task()\r\n    def task99(self):\r\n        \"\"\"\r\n        task99 - check maximum iterations and interrupt the user\r\n        \"\"\"\r\n\r\n        if maxIterations > 0:\r\n            if iterationCounter > maxIterations:\r\n                logging.info(\r\n                    f\"Reached threshold: {iterationCounter}/{maxIterations}\")\r\n                self.on_stop(self)\r\n                #raise StopLocust()\r\n\r\n        self.interrupt()\r\n\r\n    # ---- END OF TASKS -----\r\n\r\n\r\nclass User(HttpUser):\r\n    tasks = [UserBehavior]\r\n    wait_time = between(1, 5)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1406", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1406/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1406/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1406/events", "html_url": "https://github.com/locustio/locust/issues/1406", "id": 628550479, "node_id": "MDU6SXNzdWU2Mjg1NTA0Nzk=", "number": 1406, "title": "CSV results do not match calculated response times", "user": {"login": "chrishare08", "id": 58052919, "node_id": "MDQ6VXNlcjU4MDUyOTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/58052919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrishare08", "html_url": "https://github.com/chrishare08", "followers_url": "https://api.github.com/users/chrishare08/followers", "following_url": "https://api.github.com/users/chrishare08/following{/other_user}", "gists_url": "https://api.github.com/users/chrishare08/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrishare08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrishare08/subscriptions", "organizations_url": "https://api.github.com/users/chrishare08/orgs", "repos_url": "https://api.github.com/users/chrishare08/repos", "events_url": "https://api.github.com/users/chrishare08/events{/privacy}", "received_events_url": "https://api.github.com/users/chrishare08/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-01T15:59:51Z", "updated_at": "2020-06-02T13:50:13Z", "closed_at": "2020-06-02T13:41:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### CSV results do not match calculated response times\r\nIn my load test I have a task sequence which reports data in the aggregate view.  The results look like\r\n```\r\n Name         # reqs   # fails      Avg     Min     Max  |  Median   req/s failures/s\r\n-------------------------------------------------------------------------------------\r\n GET Task 1:  4355     0(0.00%)      69      41     837  |      60    8.70    0.00\r\n POST Task 2: 4331     0(0.00%)      91      41    1312  |      94    8.90    0.00\r\n POST Task 3: 4302     0(0.00%)      62      18     653  |      70    8.40    0.00\r\n POST Task 4: 4278     0(0.00%)      51      14     563  |      66    8.90    0.00\r\n POST Task 5: 4253     0(0.00%)      60      15     687  |      74    9.70    0.00\r\n POST Task 6: 4226     0(0.00%)      63      24     723  |      76    9.80    0.00\r\n POST Task 7: 4198     0(0.00%)      55      17     553  |      69    9.60    0.00\r\n POST Task 8: 4171     0(0.00%)      59      21     714  |      72    9.10    0.00\r\n GET Task 9:  4136     0(0.00%)     347     106    1566  |     290    9.10    0.00\r\n-------------------------------------------------------------------------------------\r\n Aggregated  38250     0(0.00%)      94      14    1566  |      70   82.20    0.00\r\n```\r\n\r\nTask 9 downloads a file.  \r\n\r\nIn my code I execute:\r\n```\r\n        stime = time.time()\r\n        get_episode_mp3(Connection=self, endpoint=self.config['cdnUrl'],\r\n                        auth=f\"Bearer {self.auth_token}\",\r\n                        token=self.auth_token,\r\n                        episode=self.selected_episode_object,\r\n                        episode_id=self.selected_episode_id,\r\n                        TaskName=\"Task 9: Get Episode Audio File\")\r\n        end_time = time.time()\r\n        iteration_time = end_time - stime\r\n        self.iteration_pass.append(iteration_time * 1000)\r\n```\r\n\r\nwhich calls\r\n\r\n```\r\nwith connection_object.client.get(target, headers=headers, name=task_name, stream=True, catch_response=True) as response:\r\n```\r\n\r\nThe problem is the difference in the time objects is not consistent with the calculated difference in the to calls to ```time.time()```. \r\n\r\nWhen i look at the data written to my log file (```iteration_time```), the values are very different.  The data above yields a max of 174135.23 ms, an average of 10143.89 ms, a median of 594.50 ms, and a min of 411.09 ms.  \r\n\r\nI should point out this data is from two worker nodes and teh aggregate statistics are reported on the master.  \r\n### Expected behavior\r\nThe aggregated statistics should reflect the actual response times from the workers.\r\n\r\n### Actual behavior\r\nI guess I explained that above.\r\n\r\n### Environment\r\n\r\n- OS: Linux\r\n- Python version: 3.7.6\r\n- Locust version: 1.0.2\r\n- Locust command line that you ran: \r\nOn the master: locust --loglevel=DEBUG --headless -u 250 --run-time=10m --stop-timeout=600 --host platform --logfile=debug.log -r 1 --csv test-csv --master --expect-workers=2\r\n\r\nOn the slave: locust --worker --master-host=locust-master --master-port=5557 --loglevel=DEBUG --logfile=debug.log \r\n\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1405", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1405/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1405/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1405/events", "html_url": "https://github.com/locustio/locust/issues/1405", "id": 628274132, "node_id": "MDU6SXNzdWU2MjgyNzQxMzI=", "number": 1405, "title": "rename \"hatch rate\" to \"spawn rate\"", "user": {"login": "cyberw", "id": 1134328, "node_id": "MDQ6VXNlcjExMzQzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1134328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyberw", "html_url": "https://github.com/cyberw", "followers_url": "https://api.github.com/users/cyberw/followers", "following_url": "https://api.github.com/users/cyberw/following{/other_user}", "gists_url": "https://api.github.com/users/cyberw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyberw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyberw/subscriptions", "organizations_url": "https://api.github.com/users/cyberw/orgs", "repos_url": "https://api.github.com/users/cyberw/repos", "events_url": "https://api.github.com/users/cyberw/events{/privacy}", "received_events_url": "https://api.github.com/users/cyberw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-01T09:07:37Z", "updated_at": "2020-08-18T10:16:44Z", "closed_at": "2020-08-18T10:16:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "More standard terminology, plus the word \"hatching\" doesnt make sense any more, now that Locust classes are called User classes. If approved, I can make a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1402", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1402/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1402/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1402/events", "html_url": "https://github.com/locustio/locust/issues/1402", "id": 627164453, "node_id": "MDU6SXNzdWU2MjcxNjQ0NTM=", "number": 1402, "title": "how to assign wait time for particular task", "user": {"login": "kevalRPansuriya", "id": 37825293, "node_id": "MDQ6VXNlcjM3ODI1Mjkz", "avatar_url": "https://avatars0.githubusercontent.com/u/37825293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevalRPansuriya", "html_url": "https://github.com/kevalRPansuriya", "followers_url": "https://api.github.com/users/kevalRPansuriya/followers", "following_url": "https://api.github.com/users/kevalRPansuriya/following{/other_user}", "gists_url": "https://api.github.com/users/kevalRPansuriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevalRPansuriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevalRPansuriya/subscriptions", "organizations_url": "https://api.github.com/users/kevalRPansuriya/orgs", "repos_url": "https://api.github.com/users/kevalRPansuriya/repos", "events_url": "https://api.github.com/users/kevalRPansuriya/events{/privacy}", "received_events_url": "https://api.github.com/users/kevalRPansuriya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-29T10:24:44Z", "updated_at": "2020-06-01T06:32:18Z", "closed_at": "2020-05-30T17:02:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n### Describe the bug\r\ncan I assign wait time for a particular task \r\nI have two tasks and want to run one every 1 second and two every 30 seconds\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1401", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1401/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1401/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1401/events", "html_url": "https://github.com/locustio/locust/issues/1401", "id": 627071820, "node_id": "MDU6SXNzdWU2MjcwNzE4MjA=", "number": 1401, "title": "Locust run is not working somehow because of libraries \"src/gevent/greenlet.py\", line 854, in gevent._greenlet.Greenlet.run", "user": {"login": "johnnashautomation", "id": 66111402, "node_id": "MDQ6VXNlcjY2MTExNDAy", "avatar_url": "https://avatars3.githubusercontent.com/u/66111402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnnashautomation", "html_url": "https://github.com/johnnashautomation", "followers_url": "https://api.github.com/users/johnnashautomation/followers", "following_url": "https://api.github.com/users/johnnashautomation/following{/other_user}", "gists_url": "https://api.github.com/users/johnnashautomation/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnnashautomation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnnashautomation/subscriptions", "organizations_url": "https://api.github.com/users/johnnashautomation/orgs", "repos_url": "https://api.github.com/users/johnnashautomation/repos", "events_url": "https://api.github.com/users/johnnashautomation/events{/privacy}", "received_events_url": "https://api.github.com/users/johnnashautomation/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-05-29T07:49:32Z", "updated_at": "2020-06-01T09:11:11Z", "closed_at": "2020-05-30T18:21:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "### After install some libraries which I don't remember, locust starts to giving me the Connection Refused Error\r\n\r\n![image](https://user-images.githubusercontent.com/66111402/83234695-641e5880-a199-11ea-85ab-7d07c8afdbfc.png)\r\n\r\nI tried a lot of different versions of below libs but no luck\r\nGreenlet 0.4.13\r\nGevent 1.3.5\r\ngeventhttpclient 1.4.2\r\nrequests 2.23.0\r\n\r\nIt was working fine before but now it's suddenly crash\r\n\r\n### Environment\r\n\r\n- OS:\r\n- Python version: Python 3.7.7\r\n- Locust version: locust 0.14.6 (I don't want to use new version yet)\r\n- Locust command line that you ran:", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1399", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1399/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1399/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1399/events", "html_url": "https://github.com/locustio/locust/issues/1399", "id": 626134755, "node_id": "MDU6SXNzdWU2MjYxMzQ3NTU=", "number": 1399, "title": "Inconsistencies in latencies reported by locust and %D apache custom log directive", "user": {"login": "vsag96", "id": 39757522, "node_id": "MDQ6VXNlcjM5NzU3NTIy", "avatar_url": "https://avatars2.githubusercontent.com/u/39757522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsag96", "html_url": "https://github.com/vsag96", "followers_url": "https://api.github.com/users/vsag96/followers", "following_url": "https://api.github.com/users/vsag96/following{/other_user}", "gists_url": "https://api.github.com/users/vsag96/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsag96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsag96/subscriptions", "organizations_url": "https://api.github.com/users/vsag96/orgs", "repos_url": "https://api.github.com/users/vsag96/repos", "events_url": "https://api.github.com/users/vsag96/events{/privacy}", "received_events_url": "https://api.github.com/users/vsag96/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-28T00:57:46Z", "updated_at": "2020-06-05T08:32:54Z", "closed_at": "2020-05-28T22:40:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\nI have an apache server, which reports the time when it was done servicing a request in microseconds. I have a script which calculates the maximum time taken to service a request. \r\n\r\nNote:When apache says the time taken to service a request, what it means is when the last byte of the response was received at the TCP stack of the client(This is the one that makes the most sense to me).\r\n\r\nI ran locust on localhost(same machine as the server) and over a network. \r\n\r\n## Localhost Locust and Apache times\r\n```\r\n50%    66%     75%     80%   90%    95%    98%    99%  99.9% 99.99%   100%\r\n810   1100   1300   1500   2200   5100   7000   8100  10000  10000  10000\r\n720    990   1200   1300   1800   3600   7700   8300  10000  10000  10000\r\n740   1000   1200   1400   1800   3700   7800   8400   9300  10000  10000\r\n```\r\n\r\nApache Max request completion time: 4103224(in Micro second so 4 seconds????)\r\n\r\n\r\n## Over Network Locust and Apache times\r\n\r\n\r\n```\r\nPercentage of the requests completed within given times\r\n50%    66%     75%     80%   90%    95%    98%    99%  99.9% 99.99%   100%  \r\n1300   1800   2200   2400   4700   8600  12000  14000  18000  18000  18000\r\n1000   1400   1800   2000   2700   6400  13000  14000  20000  20000  20000\r\n1100   1600   1800   2100   2700   3300   7900  11000  14000  14000  14000\r\n```\r\n\r\nApache Max request completion time: 11466549(in Micro second so 11 seconds????) \r\n\r\n### Expected behavior\r\nTime reported by apache should be less than or equal to the time reported by the 100th percentile latency of locust.\r\n\r\n### Actual behavior\r\nLocust reports latencies less than that of apache. This should be impossible, at least in my mind.\r\n\r\n### Steps to reproduce\r\nI do nothing special on the apache side. I just made a few modifications to the default configuration. If you guys want I'll send the apache config and the script I used to calculate apache bandwidth.\r\n\r\n### Environment\r\n\r\n- OS: Ubuntu 18.04\r\n- Python version: 3.6.9\r\n- Locust version:1.0.2\r\n- Locust command line that you ran: locust --headless -u 100 -r 1  -H http://x.x.x.x -f locust_tests/generate_workload.py -t 120s\r\n- Locust file contents (anonymized if necessary):\r\nhttps://gist.github.com/vsag96/6fadfd674175a3d326f4ca7be1e66685", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1397", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1397/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1397/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1397/events", "html_url": "https://github.com/locustio/locust/issues/1397", "id": 625535415, "node_id": "MDU6SXNzdWU2MjU1MzU0MTU=", "number": 1397, "title": "Debian 9 - Python 3.7 installed Locust but is not available to use", "user": {"login": "prassaschr", "id": 1406055, "node_id": "MDQ6VXNlcjE0MDYwNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1406055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prassaschr", "html_url": "https://github.com/prassaschr", "followers_url": "https://api.github.com/users/prassaschr/followers", "following_url": "https://api.github.com/users/prassaschr/following{/other_user}", "gists_url": "https://api.github.com/users/prassaschr/gists{/gist_id}", "starred_url": "https://api.github.com/users/prassaschr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prassaschr/subscriptions", "organizations_url": "https://api.github.com/users/prassaschr/orgs", "repos_url": "https://api.github.com/users/prassaschr/repos", "events_url": "https://api.github.com/users/prassaschr/events{/privacy}", "received_events_url": "https://api.github.com/users/prassaschr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1993314533, "node_id": "MDU6TGFiZWwxOTkzMzE0NTMz", "url": "https://api.github.com/repos/locustio/locust/labels/cantfix", "name": "cantfix", "color": "dddddd", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-27T09:31:10Z", "updated_at": "2020-05-27T14:49:11Z", "closed_at": "2020-05-27T14:48:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nInstalled Locust with \"pip3 install locust\"\r\n\r\n\"The script locust is installed in '/home/debian/.local/bin' which is not on PATH.\r\n  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\r\nSuccessfully installed ConfigArgParse-1.2.3 Flask-BasicAuth-0.2.0 Jinja2-2.11.2 MarkupSafe-1.1.1 Werkzeug-1.0.1 certifi-2020.4.5.1 chardet-3.0.4 click-7.1.2 flask-1.1.2 gevent-20.5.1 geventhttpclient-1.4.2 greenlet-0.4.15 idna-2.9 itsdangerous-1.1.0 locust-1.0.2 msgpack-1.0.0 psutil-5.7.0 pyzmq-19.0.1 requests-2.23.0 six-1.15.0 urllib3-1.25.9 zope.event-4.4 zope.interface-5.1.0\r\nYou are using pip version 19.0.3, however version 20.2b1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\"\r\n\r\n\r\n### Expected behavior\r\nlocust --help\r\n\r\n\r\n### Actual behavior\r\n-bash: locust: command not found\r\n\r\n### Environment\r\n\r\n- OS: Debian GNU/Linux 9.12 (stretch)\r\n- Python version: 3.7.3\r\n- Locust version: Latest (I think....)\r\n- Locust command line that you ran: locust or locust --help or any\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1394", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1394/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1394/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1394/events", "html_url": "https://github.com/locustio/locust/issues/1394", "id": 624087816, "node_id": "MDU6SXNzdWU2MjQwODc4MTY=", "number": 1394, "title": "Update flask version", "user": {"login": "cyberw", "id": 1134328, "node_id": "MDQ6VXNlcjExMzQzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1134328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyberw", "html_url": "https://github.com/cyberw", "followers_url": "https://api.github.com/users/cyberw/followers", "following_url": "https://api.github.com/users/cyberw/following{/other_user}", "gists_url": "https://api.github.com/users/cyberw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyberw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyberw/subscriptions", "organizations_url": "https://api.github.com/users/cyberw/orgs", "repos_url": "https://api.github.com/users/cyberw/repos", "events_url": "https://api.github.com/users/cyberw/events{/privacy}", "received_events_url": "https://api.github.com/users/cyberw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-25T06:53:41Z", "updated_at": "2020-05-25T15:29:22Z", "closed_at": "2020-05-25T15:29:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Our minimum required flask version is too old (saw at least one person having an issue https://stackoverflow.com/questions/61969924/typeerror-when-i-run-a-locustfile-py)\r\n\r\nhttps://flask.palletsprojects.com/en/1.1.x/changelog/#version-0-12-5 is a minimum, but we should probably go to 1.x right away.\r\n\r\nI can do the PR", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1393", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1393/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1393/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1393/events", "html_url": "https://github.com/locustio/locust/issues/1393", "id": 623708906, "node_id": "MDU6SXNzdWU2MjM3MDg5MDY=", "number": 1393, "title": "stop-timeout option is not working. Tests are stopped immediately after configured run time.", "user": {"login": "rohithkumar31", "id": 5706807, "node_id": "MDQ6VXNlcjU3MDY4MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5706807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohithkumar31", "html_url": "https://github.com/rohithkumar31", "followers_url": "https://api.github.com/users/rohithkumar31/followers", "following_url": "https://api.github.com/users/rohithkumar31/following{/other_user}", "gists_url": "https://api.github.com/users/rohithkumar31/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohithkumar31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohithkumar31/subscriptions", "organizations_url": "https://api.github.com/users/rohithkumar31/orgs", "repos_url": "https://api.github.com/users/rohithkumar31/repos", "events_url": "https://api.github.com/users/rohithkumar31/events{/privacy}", "received_events_url": "https://api.github.com/users/rohithkumar31/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}, {"id": 1003994742, "node_id": "MDU6TGFiZWwxMDAzOTk0NzQy", "url": "https://api.github.com/repos/locustio/locust/labels/waiting%20on%20contributor", "name": "waiting on contributor", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-23T17:49:35Z", "updated_at": "2020-05-30T18:21:44Z", "closed_at": "2020-05-30T18:21:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\nTried running locust test with runtime '6 hours' and stop time '10 hours' in seconds. I needed extra stop time because I had to do s3 cleanup as part of my test. But the locust runner stops immediately after 6 hours. The stop time is not considered.\r\n\r\n### Expected behavior\r\nThe stop time should be respected and the currently running tasks should be allowed continue to completion\r\n\r\n### Actual behavior\r\nTest is abruptly killed after configured runtime\r\n\r\n### Steps to reproduce\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\n1. Created a locust test \r\n2. Triggered the test for 6 hours with options (-t 6h -s 36000 )\r\n### Environment\r\n\r\n- OS: Ubuntu\r\n- Python version: 3.8\r\n- Locust version: 1.0.1\r\n- Locust command line that you ran: locust -f locustfile.py -u 100 -r 1 -t 6h -s 36000", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1391", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1391/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1391/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1391/events", "html_url": "https://github.com/locustio/locust/issues/1391", "id": 623221692, "node_id": "MDU6SXNzdWU2MjMyMjE2OTI=", "number": 1391, "title": "Search is broken on readthedocs", "user": {"login": "cyberw", "id": 1134328, "node_id": "MDQ6VXNlcjExMzQzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1134328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyberw", "html_url": "https://github.com/cyberw", "followers_url": "https://api.github.com/users/cyberw/followers", "following_url": "https://api.github.com/users/cyberw/following{/other_user}", "gists_url": "https://api.github.com/users/cyberw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyberw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyberw/subscriptions", "organizations_url": "https://api.github.com/users/cyberw/orgs", "repos_url": "https://api.github.com/users/cyberw/repos", "events_url": "https://api.github.com/users/cyberw/events{/privacy}", "received_events_url": "https://api.github.com/users/cyberw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 77651414, "node_id": "MDU6TGFiZWw3NzY1MTQxNA==", "url": "https://api.github.com/repos/locustio/locust/labels/documentation", "name": "documentation", "color": "207de5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-22T13:51:24Z", "updated_at": "2020-06-01T07:49:02Z", "closed_at": "2020-06-01T07:49:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Clicking search does nothing at all. I want to fix it but dont have the time right now :-/\r\n\r\nProbably related to the sphinx-search feature.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1390", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1390/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1390/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1390/events", "html_url": "https://github.com/locustio/locust/issues/1390", "id": 623094622, "node_id": "MDU6SXNzdWU2MjMwOTQ2MjI=", "number": 1390, "title": "OSError: [Errno 98] Address already in use in locust", "user": {"login": "kevalRPansuriya", "id": 37825293, "node_id": "MDQ6VXNlcjM3ODI1Mjkz", "avatar_url": "https://avatars0.githubusercontent.com/u/37825293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevalRPansuriya", "html_url": "https://github.com/kevalRPansuriya", "followers_url": "https://api.github.com/users/kevalRPansuriya/followers", "following_url": "https://api.github.com/users/kevalRPansuriya/following{/other_user}", "gists_url": "https://api.github.com/users/kevalRPansuriya/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevalRPansuriya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevalRPansuriya/subscriptions", "organizations_url": "https://api.github.com/users/kevalRPansuriya/orgs", "repos_url": "https://api.github.com/users/kevalRPansuriya/repos", "events_url": "https://api.github.com/users/kevalRPansuriya/events{/privacy}", "received_events_url": "https://api.github.com/users/kevalRPansuriya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-22T09:55:23Z", "updated_at": "2020-05-22T10:50:52Z", "closed_at": "2020-05-22T10:28:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Describe the bug\r\nI am running MQTT bases application and I am running client script which is connecting to the cloud\r\nI want to simulate how many devices a cloud can handle I am using AWS ec2 instance to run locust script each device use 3 socket connection\r\nI am running 14100 devices script each one is using 3 socket connection \r\ntotal socket connection open during this test is 42224\r\n\r\ncommand : ss -s\r\nresult:\r\nTotal: 42404 (kernel 0)\r\nTCP:   42225 (estab 42222, closed 0, orphaned 0, synrecv 0, timewait 0/0), ports 0\r\n\r\nTransport Total     IP        IPv6\r\n*\t  0         -         -        \r\nRAW\t  1         0         1        \r\nUDP\t  2         2         0        \r\nTCP\t  42225     42224     1        \r\nINET\t  42228     42226     2        \r\nFRAG\t  0         0         0 \r\n\r\n\r\n### Expected behavior\r\nscript should run without error OSError: [Errno 98] Address already in use in locust\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\n\r\n### Steps to reproduce\r\nrun any application that open more than 40k socket connection. \r\n\r\n### Environment\r\n\r\n- OS: Ubuntu 18.04.4 LTS\r\n- Python version: Python 3.6.9  [GCC 8.4.0] on Linux\r\n- Locust version:locust 0.14.6\r\n- Locust command line that you ran:\r\nnohup env instance=0 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=300 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=600 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=900 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=1200 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=1500 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=1800 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=2100 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=2400 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=2700 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=3000 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=3300 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=3600 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=3900 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=4200 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=4500 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=4800 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=5100 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=5400 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=5700 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=6000 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=6300 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=6600 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=6900 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=7200 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=7500 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=7800 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=8100 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=8400 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=8700 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=9000 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=9300 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=9600 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=9900 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=10200 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=10500 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=10800 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=11100 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=11400 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=11700 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=12000 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=12300 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=12600 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=12900 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=13200 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=13500 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=13800 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\nnohup env instance=14100 locust -f locust_2.0_device_service.py --no-web -H \"\" -r 10 -c 300 &\r\n\r\n\r\n\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1389", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1389/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1389/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1389/events", "html_url": "https://github.com/locustio/locust/issues/1389", "id": 623078508, "node_id": "MDU6SXNzdWU2MjMwNzg1MDg=", "number": 1389, "title": "Using deprecated classes cause a crash", "user": {"login": "akaihola", "id": 13725, "node_id": "MDQ6VXNlcjEzNzI1", "avatar_url": "https://avatars3.githubusercontent.com/u/13725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akaihola", "html_url": "https://github.com/akaihola", "followers_url": "https://api.github.com/users/akaihola/followers", "following_url": "https://api.github.com/users/akaihola/following{/other_user}", "gists_url": "https://api.github.com/users/akaihola/gists{/gist_id}", "starred_url": "https://api.github.com/users/akaihola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akaihola/subscriptions", "organizations_url": "https://api.github.com/users/akaihola/orgs", "repos_url": "https://api.github.com/users/akaihola/repos", "events_url": "https://api.github.com/users/akaihola/events{/privacy}", "received_events_url": "https://api.github.com/users/akaihola/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-22T09:26:05Z", "updated_at": "2020-05-25T14:41:33Z", "closed_at": "2020-05-22T11:28:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\nWhen using a deprecated old name for a class which has been renamed, locust crashes.\r\n\r\n### Expected behavior\r\nA deprecation warning should be displayed instead, and the original behavior still executed. The user should still have the option to either crash on, notify about or silently ignore usages of deprecated functionality.\r\n\r\nFor instance, this should by default still work and log a deprecation warning:\r\n```python\r\nclass MyLocust(HttpLocust):\r\n    ...\r\n```\r\n\r\nThis should be implemented using `warnings.warn('<message>', DeprecationWarning)` as shown in Python documentation.\r\n\r\n### Actual behavior\r\nLocust raises a `DeprecationWarning` exception.\r\n\r\n### Steps to reproduce\r\n```python\r\n$ python\r\n>>> from locust import HttpLocust\r\n>>> class X(HttpLocust): ...\r\n... \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"locust/util/deprecation.py\", line 23, in __new__\r\n    raise DeprecationWarning(deprecation_message)\r\nDeprecationWarning: The HttpLocust class has been renamed to HttpUser in version 1.0. For more info see: https://docs.locust.io/en/latest/changelog.html#changelog-1-0\r\n```\r\n\r\n### Environment\r\n\r\n- OS: Fedora 30\r\n- Python version: 3.7\r\n- Locust version: 1.0.1\r\n\r\nSee also:\r\n- [Software deprecation](https://en.wikipedia.org/wiki/Deprecation#Software_deprecation) on Wikipedia\r\n- [warnings](https://docs.python.org/3/library/warnings.html) \u2013 Warning control in Python documentation", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1387", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1387/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1387/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1387/events", "html_url": "https://github.com/locustio/locust/issues/1387", "id": 621405800, "node_id": "MDU6SXNzdWU2MjE0MDU4MDA=", "number": 1387, "title": "'Module' object is not callable", "user": {"login": "MarcSteven", "id": 13824297, "node_id": "MDQ6VXNlcjEzODI0Mjk3", "avatar_url": "https://avatars3.githubusercontent.com/u/13824297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcSteven", "html_url": "https://github.com/MarcSteven", "followers_url": "https://api.github.com/users/MarcSteven/followers", "following_url": "https://api.github.com/users/MarcSteven/following{/other_user}", "gists_url": "https://api.github.com/users/MarcSteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcSteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcSteven/subscriptions", "organizations_url": "https://api.github.com/users/MarcSteven/orgs", "repos_url": "https://api.github.com/users/MarcSteven/repos", "events_url": "https://api.github.com/users/MarcSteven/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcSteven/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-20T02:13:04Z", "updated_at": "2020-07-02T20:43:13Z", "closed_at": "2020-07-02T20:43:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n### Describe the bug\r\nWhen I executed the command line order, it showed the error 'Module' object is not callable'\r\n\r\n`locust --host='hostname' --locustfile locustfile.py`\r\n### Expected behavior\r\n<!-- Tell us what you think should happen -->\r\nRun successfully\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\nIt failed and displayed the error -Module object is not callable\r\n\r\n### Steps to reproduce\r\n\r\n\r\n### Environment\r\n\r\n- OS:Mac OS 10.15.4\r\n- Python version:3.8.2\r\n- Locust version:0.14.6\r\n- Locust command line that you ran:\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1386", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1386/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1386/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1386/events", "html_url": "https://github.com/locustio/locust/issues/1386", "id": 621262401, "node_id": "MDU6SXNzdWU2MjEyNjI0MDE=", "number": 1386, "title": "run locust 1.0.1 directly from .py file", "user": {"login": "ecc256", "id": 15874603, "node_id": "MDQ6VXNlcjE1ODc0NjAz", "avatar_url": "https://avatars0.githubusercontent.com/u/15874603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecc256", "html_url": "https://github.com/ecc256", "followers_url": "https://api.github.com/users/ecc256/followers", "following_url": "https://api.github.com/users/ecc256/following{/other_user}", "gists_url": "https://api.github.com/users/ecc256/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecc256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecc256/subscriptions", "organizations_url": "https://api.github.com/users/ecc256/orgs", "repos_url": "https://api.github.com/users/ecc256/repos", "events_url": "https://api.github.com/users/ecc256/events{/privacy}", "received_events_url": "https://api.github.com/users/ecc256/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901882, "node_id": "MDU6TGFiZWwxNjM1OTAxODgy", "url": "https://api.github.com/repos/locustio/locust/labels/wontfix", "name": "wontfix", "color": "ddcccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-05-19T20:26:02Z", "updated_at": "2020-05-22T11:30:05Z", "closed_at": "2020-05-22T11:30:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Anyway I run locust 1.0.1 directly from .py file?\r\n**test.py**\r\n```\r\nclass MainTaskSet(TaskSet):\r\n\t@task\r\n\t...\r\n\r\nclass WebsiteUser(FastHttpUser):\r\n\ttasks = [MainTaskSet]\r\n\r\nif __name__ == '__main__':\r\n\tfrom locust.main import main\r\n\tmain()\r\n```\r\n\r\nIt used to work, but with 1.0.1 I got:\r\n**./test.py**\r\n_Could not find any locustfile! Ensure file ends in '.py' and see --help for available options._\r\n\r\nOne way is to set env. var with current file name in `if __name__ == '__main__'` block.\r\nAnother is to run it as [library](https://docs.locust.io/en/stable/use-as-lib.html).\r\n\r\nIs there is an easier way to do it?\r\nIt\u2019s somewhat related to run/debug from locustfile from vscode also...\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1385", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1385/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1385/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1385/events", "html_url": "https://github.com/locustio/locust/issues/1385", "id": 620948321, "node_id": "MDU6SXNzdWU2MjA5NDgzMjE=", "number": 1385, "title": "Got \"unknown user exception\" when use --step-load and --step-clients", "user": {"login": "yunfan", "id": 438913, "node_id": "MDQ6VXNlcjQzODkxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/438913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yunfan", "html_url": "https://github.com/yunfan", "followers_url": "https://api.github.com/users/yunfan/followers", "following_url": "https://api.github.com/users/yunfan/following{/other_user}", "gists_url": "https://api.github.com/users/yunfan/gists{/gist_id}", "starred_url": "https://api.github.com/users/yunfan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yunfan/subscriptions", "organizations_url": "https://api.github.com/users/yunfan/orgs", "repos_url": "https://api.github.com/users/yunfan/repos", "events_url": "https://api.github.com/users/yunfan/events{/privacy}", "received_events_url": "https://api.github.com/users/yunfan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 77651414, "node_id": "MDU6TGFiZWw3NzY1MTQxNA==", "url": "https://api.github.com/repos/locustio/locust/labels/documentation", "name": "documentation", "color": "207de5", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-19T12:47:10Z", "updated_at": "2020-05-19T13:39:54Z", "closed_at": "2020-05-19T13:29:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Describe the bug\r\n\r\ni was using the typical step-load mode copy from the document\r\n\r\n```\r\nlocust --headless -u 1000 -r 100 --run-time 30m --step-load --step-clients 10 --step-time 20m\r\n```\r\n\r\nand got a \"unknown user exception like the follow\r\n\r\n```\r\n[2020-05-19 20:41:59,569] brix/ERROR/locust.main: Unknown User(s): 10\r\n```\r\n\r\n### Environment\r\n\r\n- OS: ubuntu 20.04 x86_64\r\n- Python version: 3.8.2\r\n- Locust version: 1.0.1\r\n- Locust command line that you ran: `locust --headless -u 1000 -r 100 --run-time 30m --step-load --step-clients 10 --step-time 20m`\r\n- Locust file contents (anonymized if necessary): ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1383", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1383/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1383/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1383/events", "html_url": "https://github.com/locustio/locust/issues/1383", "id": 620730105, "node_id": "MDU6SXNzdWU2MjA3MzAxMDU=", "number": 1383, "title": "Can we distribute the Locust each task over each Locust slave", "user": {"login": "wasimansari661", "id": 50865054, "node_id": "MDQ6VXNlcjUwODY1MDU0", "avatar_url": "https://avatars1.githubusercontent.com/u/50865054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wasimansari661", "html_url": "https://github.com/wasimansari661", "followers_url": "https://api.github.com/users/wasimansari661/followers", "following_url": "https://api.github.com/users/wasimansari661/following{/other_user}", "gists_url": "https://api.github.com/users/wasimansari661/gists{/gist_id}", "starred_url": "https://api.github.com/users/wasimansari661/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wasimansari661/subscriptions", "organizations_url": "https://api.github.com/users/wasimansari661/orgs", "repos_url": "https://api.github.com/users/wasimansari661/repos", "events_url": "https://api.github.com/users/wasimansari661/events{/privacy}", "received_events_url": "https://api.github.com/users/wasimansari661/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-19T07:01:29Z", "updated_at": "2020-06-06T08:55:01Z", "closed_at": "2020-06-06T08:55:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using Locust as distributed with OpenShift.\r\n\r\nWe are working on a performance test with simulation of multiple devices.\r\nWe would like to have a task for each device and run that task from a specific Locust slave pod.\r\nSimilarly we will have multiple task for multiple devices on multiple specific Locust slave pod.\r\n\r\nCan we have a mechanism in Locust to distribute the specific task on the Locust Slave Pod.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1382", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1382/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1382/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1382/events", "html_url": "https://github.com/locustio/locust/issues/1382", "id": 620470605, "node_id": "MDU6SXNzdWU2MjA0NzA2MDU=", "number": 1382, "title": "Listens on IPv6 only, not IPv4...", "user": {"login": "ecc256", "id": 15874603, "node_id": "MDQ6VXNlcjE1ODc0NjAz", "avatar_url": "https://avatars0.githubusercontent.com/u/15874603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecc256", "html_url": "https://github.com/ecc256", "followers_url": "https://api.github.com/users/ecc256/followers", "following_url": "https://api.github.com/users/ecc256/following{/other_user}", "gists_url": "https://api.github.com/users/ecc256/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecc256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecc256/subscriptions", "organizations_url": "https://api.github.com/users/ecc256/orgs", "repos_url": "https://api.github.com/users/ecc256/repos", "events_url": "https://api.github.com/users/ecc256/events{/privacy}", "received_events_url": "https://api.github.com/users/ecc256/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T20:02:42Z", "updated_at": "2020-05-18T20:47:13Z", "closed_at": "2020-05-18T20:06:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ubuntu 18.04 + Locust 1.0.1\r\nMultiple NICs\r\nListens on IPv6 only, not IPv4\r\n\r\n**locust.conf**\r\n```step-load\r\nweb-port=8081\r\nonly-summary\r\nreset-stats\r\nhost=http://localhost\r\n```\r\n\r\n\r\n_[2020-05-18 19:54:57,743] ubuntu/INFO/locust.main: Starting web monitor at http://:8081\r\n[2020-05-18 19:54:57,752] ubuntu/INFO/locust.main: Starting Locust 1.0.1_\r\n\r\nfrom another console:\r\n**root@ubuntu:~# netstat -tulnp | grep 8081**\r\n_tcp6       0      0 :::8081                 :::*                    LISTEN      28492/python_   \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1381", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1381/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1381/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1381/events", "html_url": "https://github.com/locustio/locust/issues/1381", "id": 620461445, "node_id": "MDU6SXNzdWU2MjA0NjE0NDU=", "number": 1381, "title": "Configuration File command line argument", "user": {"login": "ecc256", "id": 15874603, "node_id": "MDQ6VXNlcjE1ODc0NjAz", "avatar_url": "https://avatars0.githubusercontent.com/u/15874603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecc256", "html_url": "https://github.com/ecc256", "followers_url": "https://api.github.com/users/ecc256/followers", "following_url": "https://api.github.com/users/ecc256/following{/other_user}", "gists_url": "https://api.github.com/users/ecc256/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecc256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecc256/subscriptions", "organizations_url": "https://api.github.com/users/ecc256/orgs", "repos_url": "https://api.github.com/users/ecc256/repos", "events_url": "https://api.github.com/users/ecc256/events{/privacy}", "received_events_url": "https://api.github.com/users/ecc256/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 77651414, "node_id": "MDU6TGFiZWw3NzY1MTQxNA==", "url": "https://api.github.com/repos/locustio/locust/labels/documentation", "name": "documentation", "color": "207de5", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}, {"id": 538798664, "node_id": "MDU6TGFiZWw1Mzg3OTg2NjQ=", "url": "https://api.github.com/repos/locustio/locust/labels/needs%20reproducing", "name": "needs reproducing", "color": "f9d0c4", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-05-18T19:46:02Z", "updated_at": "2020-06-05T08:34:43Z", "closed_at": "2020-06-04T15:13:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ubuntu 18.04 + Locust 1.0.1\r\n[Configuration File](https://docs.locust.io/en/latest/configuration.html#configuration-file)\r\n\r\nwith 2 config files in current folder:\r\n`locust.conf`\r\n`master.conf`\r\n\r\n`locust --config=master.conf`\r\nalways use `locust.conf`, not `master.conf`\r\n\r\nNot sure if it\u2019s by design...?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1379", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1379/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1379/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1379/events", "html_url": "https://github.com/locustio/locust/issues/1379", "id": 619896954, "node_id": "MDU6SXNzdWU2MTk4OTY5NTQ=", "number": 1379, "title": "SequentialTaskSet is broken when using local class members (headless mode)", "user": {"login": "efology", "id": 16097165, "node_id": "MDQ6VXNlcjE2MDk3MTY1", "avatar_url": "https://avatars3.githubusercontent.com/u/16097165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/efology", "html_url": "https://github.com/efology", "followers_url": "https://api.github.com/users/efology/followers", "following_url": "https://api.github.com/users/efology/following{/other_user}", "gists_url": "https://api.github.com/users/efology/gists{/gist_id}", "starred_url": "https://api.github.com/users/efology/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/efology/subscriptions", "organizations_url": "https://api.github.com/users/efology/orgs", "repos_url": "https://api.github.com/users/efology/repos", "events_url": "https://api.github.com/users/efology/events{/privacy}", "received_events_url": "https://api.github.com/users/efology/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-18T04:22:06Z", "updated_at": "2020-05-18T11:57:20Z", "closed_at": "2020-05-18T11:57:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\nTrying to execute a SequentialTaskSet in headless mode, store result's from first task, and use it in second task\r\n\r\n### Expected behavior\r\nExecute first task, retrieve json, store it as dict in SequentialTaskSet object, execute second task and access the variable.\r\n\r\n### Actual behavior\r\nExecute first task, json is retrieved, stored. In second task upon trying to access the stored data, I get following exceptions:\r\n1.) AttributeError: 'dict' object has no attribute '_state'\r\n2.) AttributeError: 'dict' object has no attribute 'environment'\r\n\r\n### Steps to reproduce\r\nStart provided mockserver.py (flask) on localhost:5000, then run provided locust file (sequence_test.py) with command lines specified\r\n\r\n\r\n\r\n### Environment\r\n\r\n- OS: \r\nUbuntu 18.04.4 LTS running in WSL\r\n Linux PSALA059 4.4.0-18990-Microsoft #1-Microsoft Sat Sep 21 17:04:00 PST 2019 x86_64 x86_64 x86_64 GNU/Linux\r\n- Python version:\r\n3.6.9\r\n- Locust version:\r\nlocust 1.0.1\r\n- Locust command line that you ran:\r\nrun master locust:\r\n` locust -f sequence_test.py --host=http://localhost:5000 --master --expect-workers=1 --headless -u 1 -r 1 -t 1h`\r\n\r\nrun worker locust:\r\n`locust -f sequence_test.py --worker --master-host=127.0.0.1 --host=http://localhost:5000`\r\n\r\n- Locust file contents (anonymized if necessary):\r\n[locust-1.0.1-sequence-bug.zip](https://github.com/locustio/locust/files/4641968/locust-1.0.1-sequence-bug.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1376", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1376/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1376/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1376/events", "html_url": "https://github.com/locustio/locust/issues/1376", "id": 619212832, "node_id": "MDU6SXNzdWU2MTkyMTI4MzI=", "number": 1376, "title": "dynamic credentials examples refers to HttpUser which doesn't exist in module locust", "user": {"login": "chrishare08", "id": 58052919, "node_id": "MDQ6VXNlcjU4MDUyOTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/58052919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrishare08", "html_url": "https://github.com/chrishare08", "followers_url": "https://api.github.com/users/chrishare08/followers", "following_url": "https://api.github.com/users/chrishare08/following{/other_user}", "gists_url": "https://api.github.com/users/chrishare08/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrishare08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrishare08/subscriptions", "organizations_url": "https://api.github.com/users/chrishare08/orgs", "repos_url": "https://api.github.com/users/chrishare08/repos", "events_url": "https://api.github.com/users/chrishare08/events{/privacy}", "received_events_url": "https://api.github.com/users/chrishare08/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T20:04:57Z", "updated_at": "2020-05-16T20:17:27Z", "closed_at": "2020-05-16T20:16:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Describe the bug\r\nThe [dynamic credentials example](https://github.com/locustio/locust/blob/master/examples/dynamice_user_credentials.py), attempts to import HttpUser.  locust 0.14.4 doesn't not contain this class.  the error generated is:\r\n\r\n```\r\ncannot import name 'HttpUser' from 'locust' (/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/locustio-0.14.4-py3.8.egg/locust/__init__.py)\r\n```\r\n\r\n### Expected behavior\r\nThe example should be functional (even it results in an error against a target) since it is supposed to be a usable example.\r\n\r\n### Actual behavior\r\nAttempting to use this as an example yields an import error on Python 3.8\r\n\r\n### Steps to reproduce\r\n1. Copy the contents of the example into a locustfile.\r\n2. run locust.\r\n3. See this result:\r\n\r\n```\r\n[2020-05-15 20:01:02,692] fieldcast/ERROR/stderr: from locust import HttpUser, TaskSet, task, between\r\n[2020-05-15 20:01:02,692] fieldcast/ERROR/stderr: \r\n[2020-05-15 20:01:02,692] fieldcast/ERROR/stderr: ImportError\r\n[2020-05-15 20:01:02,692] fieldcast/ERROR/stderr: :\r\n[2020-05-15 20:01:02,692] fieldcast/ERROR/stderr: cannot import name 'HttpUser' from 'locust' (/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/locustio-0.14.4-py3.8.egg/locust/__init__.py)\r\n[2020-05-15 20:01:02,692] fieldcast/ERROR/stderr: \r\n```\r\n\r\n\r\n### Environment\r\n\r\n- OS: macOS 10.15.4 Catalina\r\n- Python version: 3.8\r\n- Locust version: 0.14.4\r\n- Locust command line that you ran: locust\r\n- Locust file contents (anonymized if necessary):\r\nsee the file at https://github.com/locustio/locust/blob/master/examples/dynamice_user_credentials.py\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1374", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1374/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1374/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1374/events", "html_url": "https://github.com/locustio/locust/issues/1374", "id": 618539396, "node_id": "MDU6SXNzdWU2MTg1MzkzOTY=", "number": 1374, "title": "Test app for locust", "user": {"login": "anuj-ssharma", "id": 4954262, "node_id": "MDQ6VXNlcjQ5NTQyNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4954262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anuj-ssharma", "html_url": "https://github.com/anuj-ssharma", "followers_url": "https://api.github.com/users/anuj-ssharma/followers", "following_url": "https://api.github.com/users/anuj-ssharma/following{/other_user}", "gists_url": "https://api.github.com/users/anuj-ssharma/gists{/gist_id}", "starred_url": "https://api.github.com/users/anuj-ssharma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anuj-ssharma/subscriptions", "organizations_url": "https://api.github.com/users/anuj-ssharma/orgs", "repos_url": "https://api.github.com/users/anuj-ssharma/repos", "events_url": "https://api.github.com/users/anuj-ssharma/events{/privacy}", "received_events_url": "https://api.github.com/users/anuj-ssharma/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}, {"id": 1003994742, "node_id": "MDU6TGFiZWwxMDAzOTk0NzQy", "url": "https://api.github.com/repos/locustio/locust/labels/waiting%20on%20contributor", "name": "waiting on contributor", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-14T21:13:37Z", "updated_at": "2020-06-30T13:35:52Z", "closed_at": "2020-06-30T13:35:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Created this based on the slack conversation [here](https://locustio.slack.com/archives/C3NUJ61DJ/p1588631693276000)\r\n\r\nThe request is to create a test app that can be used by new users to experiment and play around with locust. In addition to the documentation, this can potentially increase the level of understanding even further. \r\n\r\nThe test app could be a simple flask app mimicking a real-world API like weather etc to make it a bit more realistic to work with. However, this is something to think about. \r\n\r\nMost new users might not check out the locust repo on their local so it wouldn't make sense to bundle it up with the existing repo. Alternatively, a separate PyPi package would be easier to install and consume i.e. `pip install locust-testapp` (or something similar). \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1372", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1372/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1372/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1372/events", "html_url": "https://github.com/locustio/locust/issues/1372", "id": 617371014, "node_id": "MDU6SXNzdWU2MTczNzEwMTQ=", "number": 1372, "title": "OOM error with master/slaves setup", "user": {"login": "mparent", "id": 2796349, "node_id": "MDQ6VXNlcjI3OTYzNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2796349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mparent", "html_url": "https://github.com/mparent", "followers_url": "https://api.github.com/users/mparent/followers", "following_url": "https://api.github.com/users/mparent/following{/other_user}", "gists_url": "https://api.github.com/users/mparent/gists{/gist_id}", "starred_url": "https://api.github.com/users/mparent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mparent/subscriptions", "organizations_url": "https://api.github.com/users/mparent/orgs", "repos_url": "https://api.github.com/users/mparent/repos", "events_url": "https://api.github.com/users/mparent/events{/privacy}", "received_events_url": "https://api.github.com/users/mparent/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}, {"id": 1003994742, "node_id": "MDU6TGFiZWwxMDAzOTk0NzQy", "url": "https://api.github.com/repos/locustio/locust/labels/waiting%20on%20contributor", "name": "waiting on contributor", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-05-13T11:30:07Z", "updated_at": "2020-06-28T18:52:31Z", "closed_at": "2020-06-28T18:52:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi !\r\n \r\n### Describe the bug\r\nAn out of memory error occurs with ZeroMQ trying to allocate a crazy amount of memory in decoded_allocator, sometime up to several petabytes. This might very well be a ZeroMQ bug : \r\n` OUT OF MEMORY (bundled\\zeromq\\src\\decoder_allocators.cpp:89)`\r\n \r\nI added some logs and recompiled pyzmq to check what's going on. Upon further investigation, _max_counters seems to take a crazy value at some point. See [zmq_logs.txt](https://github.com/locustio/locust/files/4618065/zmq_logs.txt)\r\nAs you can see, allocator instance 0x0000016A9270F700 is constructed with _max_counters=249, but before crash its value has changed to 1557249601288, which causes a malloc of several terabytes.\r\n \r\n \r\n### Steps to reproduce\r\nSorry, I couldn't find a surefire way to reproduce this one. It seems kind of random. It sometime happens before the test is even started, sometime when the test is stopped. Sometime it doesn't happen at all. It does seem to happen more often when stopping a test in the web UI. Simply run the ps1 attached and do some stuff in the web UI.\r\n \r\n### Environment\r\n \r\n- OS: Windows 10.0.18362.778\r\n- Python version: 3.6\r\n- Locust version: 0.14.6\r\n- Locust files : [test_locust.zip](https://github.com/locustio/locust/files/4618016/test_locust.zip)\r\n \r\nI managed to repro the bug on two computers : my work computer and my personal computer. Both are on Windows 10/Python 3.6 that comes with VS2017, but my personal computer has a pristine python environent, just ran pip install locustio.\r\n\r\nAm I doing something I'm not supposed to ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1371", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1371/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1371/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1371/events", "html_url": "https://github.com/locustio/locust/issues/1371", "id": 617179371, "node_id": "MDU6SXNzdWU2MTcxNzkzNzE=", "number": 1371, "title": "GET instead of POST when using --no-web", "user": {"login": "FinnStutzenstein", "id": 8439581, "node_id": "MDQ6VXNlcjg0Mzk1ODE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8439581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FinnStutzenstein", "html_url": "https://github.com/FinnStutzenstein", "followers_url": "https://api.github.com/users/FinnStutzenstein/followers", "following_url": "https://api.github.com/users/FinnStutzenstein/following{/other_user}", "gists_url": "https://api.github.com/users/FinnStutzenstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/FinnStutzenstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FinnStutzenstein/subscriptions", "organizations_url": "https://api.github.com/users/FinnStutzenstein/orgs", "repos_url": "https://api.github.com/users/FinnStutzenstein/repos", "events_url": "https://api.github.com/users/FinnStutzenstein/events{/privacy}", "received_events_url": "https://api.github.com/users/FinnStutzenstein/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-13T06:29:04Z", "updated_at": "2020-05-15T15:21:38Z", "closed_at": "2020-05-13T06:39:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nI have a small script that do post requests to test logins. When using the web gui it works fine (great tool btw!) and sends post requests with the right payload. If I try to execute this via `--no-web` and giving the same parameters (`-c`,`-r`, `--host`) as in the web, the server logs get requests instead of post requests.\r\n\r\nHere is the script:\r\n```\r\nfrom locust import HttpLocust, TaskSet, between, task\r\nfrom requests.exceptions import ConnectionError\r\n\r\nUSERS = list(range(1,5000))[::-1]\r\n\r\nclass UserBehavior(TaskSet):\r\n    def __init__(self, *args, **kwargs):\r\n        self.id = USERS.pop()\r\n        self.logged_in = False\r\n        super().__init__(*args, **kwargs)\r\n\r\n    @task()\r\n    def login(self):\r\n        if self.logged_in:\r\n            return\r\n\r\n        name = f\"<not here ;)>{self.id}\"\r\n        print(f\"login {name}\")\r\n        data = {\"username\": name, \"password\": name}\r\n        with self.client.post(\"/apps/users/login/\", data, catch_response=True) as res:\r\n            try:\r\n                if res.ok:\r\n                    whoami = res.json()\r\n                    if whoami[\"user\"] is None:\r\n                        res.failure(\"Was not logged in\")\r\n                    else:\r\n                        self.present = whoami[\"user\"][\"is_present\"]\r\n                        self.logged_in = True\r\n                        res.success()\r\n                else:\r\n                    res.failure(f\"not ok: {res.status_code}\")\r\n            except ConnectionError:\r\n                res.failure(\"ConnectionError\")\r\n\r\n    def on_stop(self):\r\n        USERS.append(self.id)\r\n\r\nclass WebsiteUser(HttpLocust):\r\n    task_set = UserBehavior\r\n    wait_time = between(1, 5)\r\n```\r\nIt logs in every user just once nd uses a different user id per user. The rest shoul be basic i guess.\r\n\r\n### Expected behavior\r\nTo issue post requests on the cli\r\n\r\n### Environment\r\n\r\n- OS: debina buster\r\n- Python version: python 3.7\r\n- Locust version: 0.14.6\r\n- Locust command line that you ran: `locust -f login.py` vs. `locust -f login.py --no-web -c 20 -r 20 --host \"https://the-host-here.org\"\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1369", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1369/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1369/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1369/events", "html_url": "https://github.com/locustio/locust/issues/1369", "id": 616277222, "node_id": "MDU6SXNzdWU2MTYyNzcyMjI=", "number": 1369, "title": "FastHttpLocust + SNI", "user": {"login": "ecc256", "id": 15874603, "node_id": "MDQ6VXNlcjE1ODc0NjAz", "avatar_url": "https://avatars0.githubusercontent.com/u/15874603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecc256", "html_url": "https://github.com/ecc256", "followers_url": "https://api.github.com/users/ecc256/followers", "following_url": "https://api.github.com/users/ecc256/following{/other_user}", "gists_url": "https://api.github.com/users/ecc256/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecc256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecc256/subscriptions", "organizations_url": "https://api.github.com/users/ecc256/orgs", "repos_url": "https://api.github.com/users/ecc256/repos", "events_url": "https://api.github.com/users/ecc256/events{/privacy}", "received_events_url": "https://api.github.com/users/ecc256/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-05-12T00:43:07Z", "updated_at": "2020-05-18T19:36:28Z", "closed_at": "2020-05-18T19:36:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting weird issue with **FastHttpLocust** again.\r\nIt works fine from client.\r\nBut server (OpenResty) has **SNI** based bindings and show tons of errors like\r\n_... failed to get SNI ..._ \r\nand falls back to default certificate. :(\r\n\r\nSame exact code works fine with **HttpLocust**.\r\nDon\u2019t know how to help somebody to reproduce\u2026\r\n\r\nAm I missing something (simple?) with **FastHttpLocust**?\r\nAFAIR, it\u2019s up to the https client to send **SNI** or not, right?\r\n\r\n```\r\nurl = f'{https}://{host}{url}'\r\nheaders = {\r\n\t'Host': host,\r\n}\r\nself.client.get(url, name=url, headers=headers)\r\n```\r\n\r\n```\r\n(locust382) ubuntu@...:~$ conda list\r\n# packages in environment at /home/ubuntu/anaconda3/envs/locust382:\r\n#\r\n# Name                    Version                   Build  Channel\r\n_libgcc_mutex             0.1                        main  \r\nca-certificates           2020.1.1                      0  \r\ncertifi                   2020.4.5.1               py38_0  \r\nchardet                   3.0.4                    pypi_0    pypi\r\nclick                     7.1.1                    pypi_0    pypi\r\nconfigargparse            1.2.1                    pypi_0    pypi\r\nflask                     1.1.2                    pypi_0    pypi\r\nflask-basicauth           0.2.0                    pypi_0    pypi\r\ngevent                    1.5.0                    pypi_0    pypi\r\ngeventhttpclient-wheels   1.3.1.dev3               pypi_0    pypi\r\ngreenlet                  0.4.15                   pypi_0    pypi\r\nidna                      2.9                      pypi_0    pypi\r\nitsdangerous              1.1.0                    pypi_0    pypi\r\njinja2                    2.11.2                   pypi_0    pypi\r\nld_impl_linux-64          2.33.1               h53a641e_7  \r\nlibedit                   3.1.20181209         hc058e9b_0  \r\nlibffi                    3.2.1                hd88cf55_4  \r\nlibgcc-ng                 9.1.0                hdf63c60_0  \r\nlibstdcxx-ng              9.1.0                hdf63c60_0  \r\nlocustio                  1.0.0                     dev_0    <develop>\r\nmarkupsafe                1.1.1                    pypi_0    pypi\r\nmsgpack                   1.0.0                    pypi_0    pypi\r\nncurses                   6.2                  he6710b0_0  \r\nopenssl                   1.1.1g               h7b6447c_0  \r\npip                       20.0.2                   py38_1  \r\npsutil                    5.7.0                    pypi_0    pypi\r\npython                    3.8.2                hcf32534_0  \r\npyzmq                     19.0.0                   pypi_0    pypi\r\nreadline                  8.0                  h7b6447c_0  \r\nrequests                  2.23.0                   pypi_0    pypi\r\nsetuptools                46.1.3                   py38_0  \r\nsix                       1.14.0                   pypi_0    pypi\r\nsqlite                    3.31.1               h62c20be_1  \r\ntk                        8.6.8                hbc83047_0  \r\nurllib3                   1.25.9                   pypi_0    pypi\r\nwerkzeug                  1.0.1                    pypi_0    pypi\r\nwheel                     0.34.2                   py38_0  \r\nxz                        5.2.5                h7b6447c_0  \r\nzlib                      1.2.11               h7b6447c_3  \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1368", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1368/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1368/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1368/events", "html_url": "https://github.com/locustio/locust/issues/1368", "id": 614709484, "node_id": "MDU6SXNzdWU2MTQ3MDk0ODQ=", "number": 1368, "title": "We should check limits (ulimit) and warn if they are too low", "user": {"login": "cyberw", "id": 1134328, "node_id": "MDQ6VXNlcjExMzQzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1134328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyberw", "html_url": "https://github.com/cyberw", "followers_url": "https://api.github.com/users/cyberw/followers", "following_url": "https://api.github.com/users/cyberw/following{/other_user}", "gists_url": "https://api.github.com/users/cyberw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyberw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyberw/subscriptions", "organizations_url": "https://api.github.com/users/cyberw/orgs", "repos_url": "https://api.github.com/users/cyberw/repos", "events_url": "https://api.github.com/users/cyberw/events{/privacy}", "received_events_url": "https://api.github.com/users/cyberw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-08T12:22:06Z", "updated_at": "2020-05-22T06:59:06Z", "closed_at": "2020-05-22T06:59:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Occasionally people file tickets/SO issues that seem to relate to this:\r\n\r\nhttps://github.com/locustio/locust/issues/496\r\n\r\nhttps://stackoverflow.com/questions/61633170/locust-error-nodename-nor-servname-provided-or-not-known/61651507?noredirect=1#comment109058148_61651507\r\n\r\nWe could add something like this:\r\n```\r\nif resource.getrlimit(resource.RLIMIT_NOFILE)[0] < 10000:\r\n    logger.warning(\"System open file limit setting is not high enough for load testing. See https://docs.locust.io/en/stable/installation.html#increasing-maximum-number-of-open-files-limit for more info.\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1367", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1367/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1367/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1367/events", "html_url": "https://github.com/locustio/locust/issues/1367", "id": 614605930, "node_id": "MDU6SXNzdWU2MTQ2MDU5MzA=", "number": 1367, "title": "ModuleNotFoundError in Python 3.8.2 OSX 10.15.2", "user": {"login": "MarcSteven", "id": 13824297, "node_id": "MDQ6VXNlcjEzODI0Mjk3", "avatar_url": "https://avatars3.githubusercontent.com/u/13824297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcSteven", "html_url": "https://github.com/MarcSteven", "followers_url": "https://api.github.com/users/MarcSteven/followers", "following_url": "https://api.github.com/users/MarcSteven/following{/other_user}", "gists_url": "https://api.github.com/users/MarcSteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcSteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcSteven/subscriptions", "organizations_url": "https://api.github.com/users/MarcSteven/orgs", "repos_url": "https://api.github.com/users/MarcSteven/repos", "events_url": "https://api.github.com/users/MarcSteven/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcSteven/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-08T08:51:20Z", "updated_at": "2020-05-08T09:30:17Z", "closed_at": "2020-05-08T09:27:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\n<!-- A clear and concise description of what the bug is -->\r\nmodule not found error even though I had installed it \r\n### Expected behavior\r\n<!-- Tell us what you think should happen -->\r\nit is ok\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\nbut it is still existing , cannot work well\r\n### Steps to reproduce\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\n\r\n### Environment\r\n\r\n- OS:\r\n- Python version:\r\n- Locust version:\r\n- Locust command line that you ran:\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1364", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1364/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1364/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1364/events", "html_url": "https://github.com/locustio/locust/issues/1364", "id": 613753764, "node_id": "MDU6SXNzdWU2MTM3NTM3NjQ=", "number": 1364, "title": "installation is successful but it's not available", "user": {"login": "MarcSteven", "id": 13824297, "node_id": "MDQ6VXNlcjEzODI0Mjk3", "avatar_url": "https://avatars3.githubusercontent.com/u/13824297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcSteven", "html_url": "https://github.com/MarcSteven", "followers_url": "https://api.github.com/users/MarcSteven/followers", "following_url": "https://api.github.com/users/MarcSteven/following{/other_user}", "gists_url": "https://api.github.com/users/MarcSteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcSteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcSteven/subscriptions", "organizations_url": "https://api.github.com/users/MarcSteven/orgs", "repos_url": "https://api.github.com/users/MarcSteven/repos", "events_url": "https://api.github.com/users/MarcSteven/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcSteven/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}, {"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-07T03:52:32Z", "updated_at": "2020-06-06T08:26:05Z", "closed_at": "2020-06-06T08:26:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\nI installed it successfully but now it's still not available .\r\n### Expected behavior\r\nI hope it's available now \r\n### Actual behavior\r\nit's not available at present.\r\n### Steps to reproduce\r\nstep1:\r\n`pip3 install locust\r\n`\r\nstep2:\r\n\r\n`locust --help`\r\n\r\n\r\n\r\n### Environment\r\n\r\n- OS:10.15.2\r\n- Python version:3.6.8\r\n- Locust version:0.0.0(when I installed it and then it showed the version is equal to 0.0.0)\r\n- Locust command line that you ran:\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1363", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1363/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1363/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1363/events", "html_url": "https://github.com/locustio/locust/issues/1363", "id": 612162839, "node_id": "MDU6SXNzdWU2MTIxNjI4Mzk=", "number": 1363, "title": "Ability to exclude response time of failed requests from time based metrics", "user": {"login": "vstepanov-lohika-tix", "id": 48280294, "node_id": "MDQ6VXNlcjQ4MjgwMjk0", "avatar_url": "https://avatars2.githubusercontent.com/u/48280294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vstepanov-lohika-tix", "html_url": "https://github.com/vstepanov-lohika-tix", "followers_url": "https://api.github.com/users/vstepanov-lohika-tix/followers", "following_url": "https://api.github.com/users/vstepanov-lohika-tix/following{/other_user}", "gists_url": "https://api.github.com/users/vstepanov-lohika-tix/gists{/gist_id}", "starred_url": "https://api.github.com/users/vstepanov-lohika-tix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vstepanov-lohika-tix/subscriptions", "organizations_url": "https://api.github.com/users/vstepanov-lohika-tix/orgs", "repos_url": "https://api.github.com/users/vstepanov-lohika-tix/repos", "events_url": "https://api.github.com/users/vstepanov-lohika-tix/events{/privacy}", "received_events_url": "https://api.github.com/users/vstepanov-lohika-tix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901882, "node_id": "MDU6TGFiZWwxNjM1OTAxODgy", "url": "https://api.github.com/repos/locustio/locust/labels/wontfix", "name": "wontfix", "color": "ddcccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-04T20:56:07Z", "updated_at": "2020-06-06T08:58:21Z", "closed_at": "2020-06-06T08:58:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Is your feature request related to a problem? Please describe.\r\nCurrently Locust stats for time based metrics (ART, median, percentiles) include response times from all requests, including failed.\r\nFrom my experience, In most cases it much affects metrics for successful requests and can make it completely incorrect.\r\n\r\n**Examples:**\r\n1) 100 successful requests with ART 1000 ms + 20 failed requests with 503 error (Service Temporary Unavailable) and fast response time 5 ms\r\nIn this case ART in report will be \"improved\" by failed requests (~830 ms vs actual 1000), and the more failed requests in test, the better result will be in results.\r\n2) 100 successful requests with ART 1000 ms, and 5 failed requests with 504 Server error in 60 seconds (because of proxy gateway issues)\r\nIn this case, successful results will be much worsened by failures - (3.8 sec vs actual 1 sec)\r\n\r\n### Describe the solution you'd like\r\nIn order to keep old behavior by default and not break compatibility, there might be additional command line argument, like _--exclude-failed-response-time_ or _--exclude-failures_  \r\nWith using this parameter, response times from failed requests must be excluded for calculation of time based metrics.\r\nThe number of failures and failures rate shouldn't be affected.\r\n\r\n_StatsEntry_ class should be extended with response_times_success & response_times_failures fields, that should be used with calculation functions in case of using exclude failures parameter.\r\n\r\nFunctions/properties  to be refactored (at least):\r\n_calculate_response_time_percentile_\r\n_avg_response_time_\r\n_median_response_time_\r\n_log_response_time_\r\n\r\n\r\n### Describe alternatives you've considered\r\nAny additions and suggestions are welcomed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1360", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1360/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1360/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1360/events", "html_url": "https://github.com/locustio/locust/issues/1360", "id": 610015805, "node_id": "MDU6SXNzdWU2MTAwMTU4MDU=", "number": 1360, "title": "FastHttpUser doesn't use the SNI TLS extension", "user": {"login": "gileri", "id": 493438, "node_id": "MDQ6VXNlcjQ5MzQzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/493438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gileri", "html_url": "https://github.com/gileri", "followers_url": "https://api.github.com/users/gileri/followers", "following_url": "https://api.github.com/users/gileri/following{/other_user}", "gists_url": "https://api.github.com/users/gileri/gists{/gist_id}", "starred_url": "https://api.github.com/users/gileri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gileri/subscriptions", "organizations_url": "https://api.github.com/users/gileri/orgs", "repos_url": "https://api.github.com/users/gileri/repos", "events_url": "https://api.github.com/users/gileri/events{/privacy}", "received_events_url": "https://api.github.com/users/gileri/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 149062, "node_id": "MDU6TGFiZWwxNDkwNjI=", "url": "https://api.github.com/repos/locustio/locust/labels/bug", "name": "bug", "color": "e10c02", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-30T13:49:04Z", "updated_at": "2020-05-04T20:34:24Z", "closed_at": "2020-05-04T20:02:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Describe the bug\r\nSome web server/reverse proxy require the client to announce which hostname it wants to connect to. It's done via the [Server Name Indication](https://en.wikipedia.org/wiki/Server_Name_Indication) TLS extension. This allow sharing the same public IP between multiple hostnames. locust.io for example uses Cloudflare, which requires SNI in this setup.\r\n\r\nUnlike `HttpUser`, `FastHttpUser` doesn't send the SNI extension, making all TLS connection to SNI-requiring servers fail.\r\n\r\nUsers are [warned](https://github.com/locustio/locust/blob/de53ef8cf7941dd67f83405ea0012b9ee323a905/docs/increase-performance.rst) that `FastHttpUser` doesn't necessarily implement the same feature set as `HttpUser`, but `geventhttpclient`, used by `FastHttpUser` [does support SNI](https://github.com/gwik/geventhttpclient/pull/109) in the included version.\r\n\r\n### Expected behavior\r\nThe FastHttpUser client send the SNI extension as `host`, and the TLS connection succeed.\r\n\r\n### Actual behavior\r\nThe following error is obtained and every TLS connection \r\n`SSLError(1, '[SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:1108)')`\r\n\r\nIt can confirmed by capturing the TLS Client Hello network packet.\r\n\r\n### Steps to reproduce\r\n`locustfile.py` : \r\n```python\r\nfrom locust import task, between\r\nfrom locust.contrib.fasthttp import FastHttpUser\r\n\r\nclass ApiUser(FastHttpUser):\r\n    wait_time = between(1.0, 8.0)\r\n\r\n    @task(1)\r\n    def index(self):\r\n        self.client.get(\"/\")\r\n```\r\nExecute\r\n`% locust -H 'https://locust.io' --headless`\r\n\r\n### Environment\r\n\r\n- OS: Archlinux up to date as of 2020-04-30\r\n- Python version: 3.8.2\r\n- Locust version: git master @5cad1cb5921ff84298d357e0a5ba42bdc0390acc\r\n- Locust command line that you ran: `locust -H 'https://locust.io' --headless`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1357", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1357/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1357/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1357/events", "html_url": "https://github.com/locustio/locust/issues/1357", "id": 609672507, "node_id": "MDU6SXNzdWU2MDk2NzI1MDc=", "number": 1357, "title": "custom_xmlrpc_client seems broken", "user": {"login": "BenjaminHuang", "id": 1283888, "node_id": "MDQ6VXNlcjEyODM4ODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1283888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenjaminHuang", "html_url": "https://github.com/BenjaminHuang", "followers_url": "https://api.github.com/users/BenjaminHuang/followers", "following_url": "https://api.github.com/users/BenjaminHuang/following{/other_user}", "gists_url": "https://api.github.com/users/BenjaminHuang/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenjaminHuang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenjaminHuang/subscriptions", "organizations_url": "https://api.github.com/users/BenjaminHuang/orgs", "repos_url": "https://api.github.com/users/BenjaminHuang/repos", "events_url": "https://api.github.com/users/BenjaminHuang/events{/privacy}", "received_events_url": "https://api.github.com/users/BenjaminHuang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T07:38:12Z", "updated_at": "2020-04-30T09:15:11Z", "closed_at": "2020-04-30T09:15:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\". Do not immediately post your issue here after posting to SO, wait for an answer there instead.\r\n\r\nUse this form only for reporting actual bugs in locust. Be mindful that the developers of locust are unpaid volunteers, so make sure you have tried everything you can think of before filing a bug :) \r\n-->\r\n\r\n### Describe the bug\r\ncustom_xmlrpc_client is broken\r\n\r\n### Expected behavior\r\nit's should be running after launching command locust -f xmlrpc_locustfile.py\r\n\r\n### Actual behavior\r\n<!-- Tell us what happens instead. Include screenshots if this an issue with the GUI. -->\r\ncannot import name 'User' from 'locust'\r\n\r\n### Steps to reproduce\r\n<!-- Please provide a minimal reproducible code example (https://stackoverflow.com/help/minimal-reproducible-example) --> \r\nchange to examples/custom_xmlrpc_client directory and run  locust -f xmlrpc_locustfile.py\r\n### Environment\r\n\r\n- OS: Ubuntu 16.04\r\n- Python version: 3.8.0\r\n- Locust version: 0.14.6\r\n- Locust command line that you ran:  locust -f xmlrpc_locustfile.py\r\n- Locust file contents (anonymized if necessary):", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1356", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1356/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1356/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1356/events", "html_url": "https://github.com/locustio/locust/issues/1356", "id": 608916585, "node_id": "MDU6SXNzdWU2MDg5MTY1ODU=", "number": 1356, "title": "Cluster mode: Upload the locustfile.py via the web interface or the command line...", "user": {"login": "matrixise", "id": 38737, "node_id": "MDQ6VXNlcjM4NzM3", "avatar_url": "https://avatars2.githubusercontent.com/u/38737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matrixise", "html_url": "https://github.com/matrixise", "followers_url": "https://api.github.com/users/matrixise/followers", "following_url": "https://api.github.com/users/matrixise/following{/other_user}", "gists_url": "https://api.github.com/users/matrixise/gists{/gist_id}", "starred_url": "https://api.github.com/users/matrixise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matrixise/subscriptions", "organizations_url": "https://api.github.com/users/matrixise/orgs", "repos_url": "https://api.github.com/users/matrixise/repos", "events_url": "https://api.github.com/users/matrixise/events{/privacy}", "received_events_url": "https://api.github.com/users/matrixise/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}, {"id": 1635901882, "node_id": "MDU6TGFiZWwxNjM1OTAxODgy", "url": "https://api.github.com/repos/locustio/locust/labels/wontfix", "name": "wontfix", "color": "ddcccc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-29T09:40:51Z", "updated_at": "2020-06-06T08:50:21Z", "closed_at": "2020-06-06T08:50:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- \r\nIf you have a general question about how to use Locust, please check Stack Overflow first https://stackoverflow.com/questions/tagged/locust\r\n\r\nYou can also ask new questions on SO, https://stackoverflow.com/questions/ask just remember to tag your question with \"locust\".\r\n-->\r\n\r\n### Is your feature request related to a problem? Please describe.\r\nI use a cluster of 5 nodes for some tests, but when I need to update my test, I have to upload the new locustfile (via Ansible for my case).\r\nPropose a web interface for the upload of a new file.\r\n\r\n### Describe the solution you'd like\r\nJust upload the file via an API (if `--no-web`) or the web interface.\r\n<!-- A clear and concise description of what you want to happen -->\r\n\r\n### Describe alternatives you've considered\r\nI use Ansible for the upload on my nodes.\r\n<!-- A clear and concise description of any alternative solutions or features you've considered -->\r\n\r\n### Additional context\r\n<!-- Add any other context or screenshots about the feature request here -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1351", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1351/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1351/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1351/events", "html_url": "https://github.com/locustio/locust/issues/1351", "id": 605291808, "node_id": "MDU6SXNzdWU2MDUyOTE4MDg=", "number": 1351, "title": "Retrieving response time on Master while execution is going on through custom code in no-web mode", "user": {"login": "kiranbhadale", "id": 56867267, "node_id": "MDQ6VXNlcjU2ODY3MjY3", "avatar_url": "https://avatars0.githubusercontent.com/u/56867267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiranbhadale", "html_url": "https://github.com/kiranbhadale", "followers_url": "https://api.github.com/users/kiranbhadale/followers", "following_url": "https://api.github.com/users/kiranbhadale/following{/other_user}", "gists_url": "https://api.github.com/users/kiranbhadale/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiranbhadale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiranbhadale/subscriptions", "organizations_url": "https://api.github.com/users/kiranbhadale/orgs", "repos_url": "https://api.github.com/users/kiranbhadale/repos", "events_url": "https://api.github.com/users/kiranbhadale/events{/privacy}", "received_events_url": "https://api.github.com/users/kiranbhadale/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 351376238, "node_id": "MDU6TGFiZWwzNTEzNzYyMzg=", "url": "https://api.github.com/repos/locustio/locust/labels/question", "name": "question", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-23T07:02:42Z", "updated_at": "2020-04-29T15:26:09Z", "closed_at": "2020-04-29T15:26:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does Locust has any function which can be used to read the request statistics on Master node in distributed mode while the execution is in progress. I want to read live stats and store them into a DB. I don't want to use the csv that gets generated at the end of the execution.\r\nNote: The test will be in no-web mode.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1350", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1350/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1350/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1350/events", "html_url": "https://github.com/locustio/locust/issues/1350", "id": 604959281, "node_id": "MDU6SXNzdWU2MDQ5NTkyODE=", "number": 1350, "title": "Docs correction request", "user": {"login": "ecc256", "id": 15874603, "node_id": "MDQ6VXNlcjE1ODc0NjAz", "avatar_url": "https://avatars0.githubusercontent.com/u/15874603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecc256", "html_url": "https://github.com/ecc256", "followers_url": "https://api.github.com/users/ecc256/followers", "following_url": "https://api.github.com/users/ecc256/following{/other_user}", "gists_url": "https://api.github.com/users/ecc256/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecc256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecc256/subscriptions", "organizations_url": "https://api.github.com/users/ecc256/orgs", "repos_url": "https://api.github.com/users/ecc256/repos", "events_url": "https://api.github.com/users/ecc256/events{/privacy}", "received_events_url": "https://api.github.com/users/ecc256/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-04-22T18:10:01Z", "updated_at": "2020-04-23T16:40:03Z", "closed_at": "2020-04-23T13:09:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "[stable](https://docs.locust.io/en/stable/writing-a-locustfile.html#manually-controlling-if-a-request-should-be-considered-successful-or-a-failure\r\n) / [latest](https://docs.locust.io/en/latest/writing-a-locustfile.html#manually-controlling-if-a-request-should-be-considered-successful-or-a-failure\r\n)\r\n`with self.client.get` won't work with `FastHttpLocust`:\r\n```\r\n**FastHttpLocust** doesn't support **with** interface:\r\nAttributeError: __enter___\r\n```\r\n\r\nI'm referring to this code fragment:\r\n```\r\nwith self.client.get(\"/\", catch_response=True) as response:\r\n    if response.content != b\"Success\":\r\n        response.failure(\"Got wrong response\")\r\n```\r\n\r\nI'm pretty sure, I submitted an it a while ago, but cannot find it...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1349", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1349/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1349/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1349/events", "html_url": "https://github.com/locustio/locust/issues/1349", "id": 604930802, "node_id": "MDU6SXNzdWU2MDQ5MzA4MDI=", "number": 1349, "title": "\"Order of events\" clarification", "user": {"login": "ecc256", "id": 15874603, "node_id": "MDQ6VXNlcjE1ODc0NjAz", "avatar_url": "https://avatars0.githubusercontent.com/u/15874603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecc256", "html_url": "https://github.com/ecc256", "followers_url": "https://api.github.com/users/ecc256/followers", "following_url": "https://api.github.com/users/ecc256/following{/other_user}", "gists_url": "https://api.github.com/users/ecc256/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecc256/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecc256/subscriptions", "organizations_url": "https://api.github.com/users/ecc256/orgs", "repos_url": "https://api.github.com/users/ecc256/repos", "events_url": "https://api.github.com/users/ecc256/events{/privacy}", "received_events_url": "https://api.github.com/users/ecc256/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 750591189, "node_id": "MDU6TGFiZWw3NTA1OTExODk=", "url": "https://api.github.com/repos/locustio/locust/labels/feature%20request", "name": "feature request", "color": "fef2c0", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-22T17:24:59Z", "updated_at": "2020-04-22T20:28:14Z", "closed_at": "2020-04-22T17:54:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Guys,\r\nQuestion / clarification about [Locust setup (once)](https://docs.locust.io/en/stable/writing-a-locustfile.html#order-of-events)\r\nIndeed, it\u2019s called once only, for very 1st HttpLocust **instance**.\r\n\r\nI've set an **instance** attribute in `setup(self)` is **instance** method.\r\nConsequently, only 1st HttpLocust **instance** has the attribute set.\r\nAll others HttpLocust **instances** won\u2019t have the attribute and throw an exception on access.\r\n\r\nNaturally, setting **class** attribute instead will take care of it.\r\n\r\nA thought:\r\nSince Locust setup() is called once only, should it be **class** method, not **instance** one?\r\nWould be nice to add Locust on_start (once per locust) **instance** method too, seems a bit more logical to me...\r\n\r\nAbove applies to TaskSet too:\r\nTaskSet setup (once) - should be **class** method, not **instance**\r\nTaskSet on_start (once per locust) - is **instance** method\r\n\r\nNot complaining or anything, just want to throw an idea!\r\nThanks\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/locustio/locust/issues/1348", "repository_url": "https://api.github.com/repos/locustio/locust", "labels_url": "https://api.github.com/repos/locustio/locust/issues/1348/labels{/name}", "comments_url": "https://api.github.com/repos/locustio/locust/issues/1348/comments", "events_url": "https://api.github.com/repos/locustio/locust/issues/1348/events", "html_url": "https://github.com/locustio/locust/issues/1348", "id": 604478077, "node_id": "MDU6SXNzdWU2MDQ0NzgwNzc=", "number": 1348, "title": "Response time stats not available on terminal in no-web mode", "user": {"login": "kiranbhadale", "id": 56867267, "node_id": "MDQ6VXNlcjU2ODY3MjY3", "avatar_url": "https://avatars0.githubusercontent.com/u/56867267?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiranbhadale", "html_url": "https://github.com/kiranbhadale", "followers_url": "https://api.github.com/users/kiranbhadale/followers", "following_url": "https://api.github.com/users/kiranbhadale/following{/other_user}", "gists_url": "https://api.github.com/users/kiranbhadale/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiranbhadale/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiranbhadale/subscriptions", "organizations_url": "https://api.github.com/users/kiranbhadale/orgs", "repos_url": "https://api.github.com/users/kiranbhadale/repos", "events_url": "https://api.github.com/users/kiranbhadale/events{/privacy}", "received_events_url": "https://api.github.com/users/kiranbhadale/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635901340, "node_id": "MDU6TGFiZWwxNjM1OTAxMzQw", "url": "https://api.github.com/repos/locustio/locust/labels/invalid", "name": "invalid", "color": "ff9999", "default": true, "description": ""}, {"id": 1003994742, "node_id": "MDU6TGFiZWwxMDAzOTk0NzQy", "url": "https://api.github.com/repos/locustio/locust/labels/waiting%20on%20contributor", "name": "waiting on contributor", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-22T05:56:34Z", "updated_at": "2020-04-23T13:54:05Z", "closed_at": "2020-04-23T13:54:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running my locust test in no-web, master slave mode. I'm using 0mq to sync the input data between master and slave and a thread is spawned explicitly on the master machine. When the test is executed, I don't get to see the response time stats on the terminal and looks like the 0mq thread is blocking it. After commenting the 0mq code, I was able to see the stats. Also, the \"-t\" argument doesn't work when the 0mq thread is spawned. The test goes on and on, forever.\r\nAdditionally, when I run the same configuration in UI mode, I don't see live stats on the locust's UI and I'm also unable to stop the test using the stop button. I have to go to terminal and press Ctr+C to terminate the test.\r\n\r\nAbout the 0mq thread, it has a while condition which is always TRUE, so that the thread doesn't terminate during the test to avoid data transfer issue between master and slave.\r\n\r\nCan someone help here to fix the issue. Locust version: 0.12.2", "performed_via_github_app": null, "score": 1.0}]}