{"total_count": 310, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/699", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/699/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/699/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/699", "id": 488309984, "node_id": "MDU6SXNzdWU0ODgzMDk5ODQ=", "number": 699, "title": "flask-restless-transaction", "user": {"login": "leonardovsilva", "id": 3792091, "node_id": "MDQ6VXNlcjM3OTIwOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3792091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonardovsilva", "html_url": "https://github.com/leonardovsilva", "followers_url": "https://api.github.com/users/leonardovsilva/followers", "following_url": "https://api.github.com/users/leonardovsilva/following{/other_user}", "gists_url": "https://api.github.com/users/leonardovsilva/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonardovsilva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonardovsilva/subscriptions", "organizations_url": "https://api.github.com/users/leonardovsilva/orgs", "repos_url": "https://api.github.com/users/leonardovsilva/repos", "events_url": "https://api.github.com/users/leonardovsilva/events{/privacy}", "received_events_url": "https://api.github.com/users/leonardovsilva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-02T20:22:53Z", "updated_at": "2019-09-03T01:49:06Z", "closed_at": "2019-09-03T01:49:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/leonardovsilva/flask-restless-transaction\r\n\r\n\r\nCreate a class to generate transactions in the database. sqlalchemy_continuum required", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/680", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/680/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/680/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/680/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/680", "id": 294304475, "node_id": "MDU6SXNzdWUyOTQzMDQ0NzU=", "number": 680, "title": "Forward a POST request to a GET endpoint", "user": {"login": "Marius-Stroe", "id": 1177774, "node_id": "MDQ6VXNlcjExNzc3NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1177774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Marius-Stroe", "html_url": "https://github.com/Marius-Stroe", "followers_url": "https://api.github.com/users/Marius-Stroe/followers", "following_url": "https://api.github.com/users/Marius-Stroe/following{/other_user}", "gists_url": "https://api.github.com/users/Marius-Stroe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Marius-Stroe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Marius-Stroe/subscriptions", "organizations_url": "https://api.github.com/users/Marius-Stroe/orgs", "repos_url": "https://api.github.com/users/Marius-Stroe/repos", "events_url": "https://api.github.com/users/Marius-Stroe/events{/privacy}", "received_events_url": "https://api.github.com/users/Marius-Stroe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-05T08:10:08Z", "updated_at": "2018-02-24T18:45:17Z", "closed_at": "2018-02-24T18:45:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm using `Flask-Restless==1.0.0b1` with `Flask-SQLAlchemy`. What I like about it is that it provides `JSON API 1.0` formatting out of the box.\r\n\r\n<img width=\"514\" alt=\"screen shot 2018-02-04 at 11 54 05 pm\" src=\"https://user-images.githubusercontent.com/1177774/35793493-b7ce19f2-0a06-11e8-8c73-8a780a812f48.png\">\r\n\r\nMy setup is the following:\r\n   - I have a `/v1/search` that takes `POST` requests of multiple types\r\n   - for each request to `/v1/search` I need to call a 3rd party. So I'm taking the request's `JSON` and passing it through a `flask-marshmallow` for validation, make the 3rd party call, and save a bunch of results with `Flask-SQLAlchemy`.\r\n   - ideally, now I'd build a complex filtering `flask-restless` query and forward it to a model's endpoint. That way, I'd be getting the `JSON API 1.0` formatting for free.\r\n\r\nIt would be something like the below. But the problem is that `redirect` doesn't seem to work with a REST api.\r\n\r\n```\r\nfrom flask import redirect\r\n\r\n@app.route('/v1/search', methods=['POST'])\r\n    def search():\r\n        // do stuff\r\n        return redirect('/v1/<some_model>', 'filter[objects]={...}')\r\n```\r\n\r\n Is it possible to do this kind of redirection? Thank you\r\n\r\nPS: You may be asking why I don't query the `<some_model>` directly and return the results. It's because I don't get the uniform `JSON API 1.0` formatting. I could use `marshmallow-jsonapi` and `marshmallow-sqlalchemy`, but look https://github.com/marshmallow-code/marshmallow-jsonapi/issues/3 it's a lot more work and not really known how they work together with `flask-restless`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/668", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/668/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/668/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/668", "id": 272125223, "node_id": "MDU6SXNzdWUyNzIxMjUyMjM=", "number": 668, "title": "[1.0.0b1] Multiple endpoints for one model overrides randomly", "user": {"login": "lennartblom", "id": 4670057, "node_id": "MDQ6VXNlcjQ2NzAwNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4670057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lennartblom", "html_url": "https://github.com/lennartblom", "followers_url": "https://api.github.com/users/lennartblom/followers", "following_url": "https://api.github.com/users/lennartblom/following{/other_user}", "gists_url": "https://api.github.com/users/lennartblom/gists{/gist_id}", "starred_url": "https://api.github.com/users/lennartblom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lennartblom/subscriptions", "organizations_url": "https://api.github.com/users/lennartblom/orgs", "repos_url": "https://api.github.com/users/lennartblom/repos", "events_url": "https://api.github.com/users/lennartblom/events{/privacy}", "received_events_url": "https://api.github.com/users/lennartblom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-08T09:13:03Z", "updated_at": "2019-11-24T08:59:57Z", "closed_at": "2019-11-24T08:59:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Currently I have the given scenario:**\r\nI have one complexe model, which I want to publish on a suitable url endpoint.This works like a charm! Thanks for that!\r\n\r\nGiven the complexity of the model and the use case that I need only one attribute of the model sometimes, I defined a new url endpoint for the retrievement of just the attribute (with help of the only=[\u201dattribute_name\"])\r\n\r\n**Route for the overall model**\r\n\r\n```\r\napi_manater.create_api(\r\n    model=entities.User,\r\n    methods=['GET', 'POST', 'PATCH'],\r\n    primary_key=\"id\",\r\n    collection_name=\"users\",\r\n)\r\n```\r\n\r\n\r\n**Route for the one attribute only model**\r\n\r\n\r\n\r\n```\r\napi_manater.create_api(\r\n    model=entities.User,\r\n    methods=['GET'],\r\n    primary_key=\"id\",\r\n    collection_name=\"user_email_validations\"\r\n    only=[\u201demail_validated\"]\r\n)\r\n```\r\n\r\n\r\n\r\nSo after this the results of endpoints \"localhost/api/users\" and localhost/api/user_email_validations\" randomly switch from either all attributes or just the defined email_validated.\r\n\r\nIs the usage with multiple endpoints for one SQLAlchemy model not wanted? Or did I miss something?\r\n\r\nThank in advance and thanks for the package anyway!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/661", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/661/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/661/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/661/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/661", "id": 250256686, "node_id": "MDU6SXNzdWUyNTAyNTY2ODY=", "number": 661, "title": "Issues concerning nested resource", "user": {"login": "lennartblom", "id": 4670057, "node_id": "MDQ6VXNlcjQ2NzAwNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4670057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lennartblom", "html_url": "https://github.com/lennartblom", "followers_url": "https://api.github.com/users/lennartblom/followers", "following_url": "https://api.github.com/users/lennartblom/following{/other_user}", "gists_url": "https://api.github.com/users/lennartblom/gists{/gist_id}", "starred_url": "https://api.github.com/users/lennartblom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lennartblom/subscriptions", "organizations_url": "https://api.github.com/users/lennartblom/orgs", "repos_url": "https://api.github.com/users/lennartblom/repos", "events_url": "https://api.github.com/users/lennartblom/events{/privacy}", "received_events_url": "https://api.github.com/users/lennartblom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-15T08:46:40Z", "updated_at": "2017-11-16T08:11:03Z", "closed_at": "2017-11-08T08:59:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there!\r\nFirst of all, thank you for providing such a great tool for creating a sqlalchemy based REST database service so easy!\r\n\r\nUnfortunately I have a major issues concerning the methods of nested resource via GET, DELETE and PATCH.\r\n\r\n# The setup\r\n\r\n```python\r\n\r\nclass User(db.Model, _SleepTrackerEntity):\r\n    \"\"\" User \"\"\"\r\n    id = db.PrimaryKey()\r\n    mobile_devices: BaseQuery = db.one_to_many(\"MobileDevice\", lazy=\"dynamic\")\r\n\r\nclass MobileDevice(db.Model):\r\n    \"\"\" Mobile device \"\"\"\r\n    id = db.PrimaryKey()\r\n    name = db.Column(db.String(128))\r\n    user = db.many_to_one(\"User\")\r\n    user_id = db.ForeignKeyId(\"User\", schema=\"public\", nullable=False)\r\n\r\n```\r\n\r\n## Users\r\n```\r\n\r\n--------------------------------\r\n| id | name                                 \r\n--------------------------------\r\n| 1 | Paul \r\n--------------------------------\r\n| 2 | Sarah\r\n--------------------------------\r\n\r\n```\r\n\r\n## Mobile Devices\r\n```\r\n\r\n-----------------------------------\r\n| id | name | user_id\r\n-----------------------------------\r\n| 1 | Paul's Dev Samsung | 1\r\n-----------------------------------\r\n| 2 | Paul's Dev Windows phone | 1\r\n-----------------------------------\r\n| 3 | Sarah's Dev Samsung | 2\r\n-----------------------------------\r\n\r\n```\r\n\r\n# The Issues\r\n\r\n## GET\r\nWhen I try to retrieve nested elements I get all devices and get not 404 in case the device does not fit to the user. \r\n\r\nGET /api/users/1/mobile_devices/1 <-- Returns valid Mobile Device of Paul\r\nGET /api/users/1/mobile_devices/1 <-- Returns valid Mobile Device of Sarah (that's should not be returned)\r\n\r\n## DELETE\r\nWhen I try to delete a nested element I get an integrityError with the following details in the application console:\r\n\r\n```\r\nsqlalchemy.exc.IntegrityError: (psycopg2.IntegrityError) null value in column \"user_id\" violates not-null constraint\r\nDETAIL:  Failing row contains (3, Sarah's Dev Samsung, None).\r\n [SQL: 'UPDATE public.mobile_device SET user_id=%(user_id)s WHERE public.mobile_device.id = %(public_mobile_device_id)s'] [parameters: {'user_id': None, 'public_mobile_device_id': 18}]\r\n127.0.0.1 - - [15/Aug/2017 10:03:39] \"DELETE /api/users/1/mobile_devices/3 HTTP/1.1\" 400 -\r\n```\r\n\r\n## PATCH\r\nWhen I do a PATCH method on a nested entity/resource I get the following message, no matter if the nested entity/resource is hold by the identified user or not.\r\n\r\n### Client\r\n```\r\n{\r\n    \"message\": \"Model does not have field 'name'\"\r\n}\r\n```\r\n\r\n### Server\r\n```\r\n127.0.0.1 - - [15/Aug/2017 10:42:28] \"PATCH /api/users/1/mobile_devices/3 HTTP/1.1\" 400 -\r\n```\r\n\r\nAny idea what I am doing wrong?\r\n\r\nThank you very much in advance! I really appreciate your work!\r\n\r\nKind regards from Germany,\r\nLennart Blom", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/657", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/657/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/657/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/657", "id": 241550436, "node_id": "MDU6SXNzdWUyNDE1NTA0MzY=", "number": 657, "title": "custom serializer doesn't work on collections", "user": {"login": "tumluliu", "id": 1563792, "node_id": "MDQ6VXNlcjE1NjM3OTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1563792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tumluliu", "html_url": "https://github.com/tumluliu", "followers_url": "https://api.github.com/users/tumluliu/followers", "following_url": "https://api.github.com/users/tumluliu/following{/other_user}", "gists_url": "https://api.github.com/users/tumluliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tumluliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tumluliu/subscriptions", "organizations_url": "https://api.github.com/users/tumluliu/orgs", "repos_url": "https://api.github.com/users/tumluliu/repos", "events_url": "https://api.github.com/users/tumluliu/events{/privacy}", "received_events_url": "https://api.github.com/users/tumluliu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-09T19:29:14Z", "updated_at": "2017-07-11T09:14:31Z", "closed_at": "2017-07-11T09:14:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found that the custom serializer doesn't work on collections API endpoint, while it works well on single item endpoints. I am using 0.17 of flask_restless.\r\n\r\nIn my case, when access https://luliu.me/tracks/api/v1/trackinfo/2, I can get \r\n```\r\n{\r\n  \"2D length\": 172031.0, \r\n  \"3D length\": 172182.0, \r\n  \"Downhill\": 1862.1, \r\n  \"End lat\": 49.5396, \r\n  \"End lon\": 8.64872, \r\n  \"Ended at\": \"2006-09-17 01:56:55\", \r\n  \"GPX ID\": 110, \r\n  \"ID\": 2, \r\n  \"Max speed\": 0.0, \r\n  \"Moving time\": \"0:00:03\", \r\n  \"Points\": 4187, \r\n  \"Segments\": 1, \r\n  \"Start lat\": 49.5394, \r\n  \"Start lon\": 8.64866, \r\n  \"Started at\": \"2006-09-17 01:56:52\", \r\n  \"Stopped time\": \"None\", \r\n  \"Uphill\": 1862.1\r\n}\r\n```\r\nas expected, which means the serializer works. But when I access https://luliu.me/tracks/api/v1/trackinfo, I got such errors: \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask/app.py\", line 1997, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask/app.py\", line 1985, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask/app.py\", line 1540, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask/app.py\", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask/app.py\", line 1612, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask/app.py\", line 1598, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask_restless/views.py\", line 157, in decorator\r\n    return func(*args, **kw)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/mimerender.py\", line 265, in wrapper\r\n    content = renderer(**result)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask_restless/views.py\", line 303, in jsonpify\r\n    response = jsonify(*args, **kw)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask_restless/views.py\", line 219, in jsonify\r\n    response = _jsonify(*args, **kw)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask/json.py\", line 263, in jsonify\r\n    (dumps(data, indent=indent, separators=separators), '\\n'),\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask/json.py\", line 123, in dumps\r\n    rv = _json.dumps(obj, **kwargs)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/json/__init__.py\", line 250, in dumps\r\n    sort_keys=sort_keys, **kw).encode(obj)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/json/encoder.py\", line 209, in encode\r\n    chunks = list(chunks)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/json/encoder.py\", line 434, in _iterencode\r\n    for chunk in _iterencode_dict(o, _current_indent_level):\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/json/encoder.py\", line 408, in _iterencode_dict\r\n    for chunk in chunks:\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/json/encoder.py\", line 332, in _iterencode_list\r\n    for chunk in chunks:\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/json/encoder.py\", line 408, in _iterencode_dict\r\n    for chunk in chunks:\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/json/encoder.py\", line 442, in _iterencode\r\n    o = _default(o)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/site-packages/flask/json.py\", line 80, in default\r\n    return _json.JSONEncoder.default(self, o)\r\n  File \"/usr/local/var/pyenv/versions/2.7.10/lib/python2.7/json/encoder.py\", line 184, in default\r\n    raise TypeError(repr(o) + \" is not JSON serializable\")\r\nTypeError: datetime.timedelta(0, 3) is not JSON serializable\r\n```\r\nThat means that there is a column of INTERVAL(postgresql) type can not be serialized with default serializer. That's a very ridiculous error because I provide the custom serializer when creating the API: \r\n\r\n```\r\napp = Flask(__name__)\r\ncors = CORS(app)\r\nmanager = flask_restless.APIManager(app, session=Session)\r\n\r\nmanager.create_api(\r\n\u00a0  TrackInfo,\r\n\u00a0  methods=['GET'],\r\n\u00a0  results_per_page=10,\r\n\u00a0  max_results_per_page=50,\r\n\u00a0  serializer=trackinfo_serializer)\r\n```\r\n\r\nwhere the `trackinfo_serializer` is defined as:\r\n\r\n```\r\ndef trackinfo_serializer(instance):\r\n    ti_dict = {}\r\n    ti_dict['ID']           = instance.ogc_fid\r\n    ti_dict['GPX ID']       = instance.gpx_id\r\n    ti_dict['Segments']     = instance.segments\r\n    ti_dict['2D length']    = instance.length_2d\r\n    ti_dict['3D length']    = instance.length_3d\r\n    ti_dict['Moving time']  = str(instance.moving_time)\r\n    ti_dict['Stopped time'] = str(instance.stopped_time)\r\n    ti_dict['Max speed']    = instance.max_speed\r\n    ti_dict['Uphill']       = instance.uphill\r\n    ti_dict['Downhill']     = instance.downhill\r\n    ti_dict['Started at']   = str(instance.started)\r\n    ti_dict['Ended at']     = str(instance.ended)\r\n    ti_dict['Points']       = instance.points\r\n    ti_dict['Start lon']    = instance.start_lon\r\n    ti_dict['Start lat']    = instance.start_lat\r\n    ti_dict['End lon']      = instance.end_lon\r\n    ti_dict['End lat']      = instance.end_lat\r\n    logger.debug(\"Serialized trackinfo: %s\", ti_dict)\r\n    return ti_dict\r\n```\r\n\r\nThe full source codes are quite simple and available in the https://github.com/tumluliu/tracks-rest-api repo. I am wondering if there is anything changed w.r.t the custom serialization in the latest version of flask_restless. I noticed that there is a new `serializer_class` introduced, but I don't think the `serialize_many` function is for this case. Thanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/653", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/653/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/653/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/653", "id": 238108956, "node_id": "MDU6SXNzdWUyMzgxMDg5NTY=", "number": 653, "title": "Sorting", "user": {"login": "bilguun", "id": 1038607, "node_id": "MDQ6VXNlcjEwMzg2MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1038607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bilguun", "html_url": "https://github.com/bilguun", "followers_url": "https://api.github.com/users/bilguun/followers", "following_url": "https://api.github.com/users/bilguun/following{/other_user}", "gists_url": "https://api.github.com/users/bilguun/gists{/gist_id}", "starred_url": "https://api.github.com/users/bilguun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bilguun/subscriptions", "organizations_url": "https://api.github.com/users/bilguun/orgs", "repos_url": "https://api.github.com/users/bilguun/repos", "events_url": "https://api.github.com/users/bilguun/events{/privacy}", "received_events_url": "https://api.github.com/users/bilguun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-23T10:53:34Z", "updated_at": "2017-07-24T09:02:58Z", "closed_at": "2017-07-24T09:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a question about sorting.\r\nI tried to use preprocessors as mentioned in the documentation but no luck.\r\n\r\n```\r\ndef fetch_preprocessor(filters=None, sort=None, group_by=None, single=None,\r\n                       **kw):\r\n    ....\r\n           \r\npreprocessors = {  'GET_MANY': [fetch_preprocessor] }\r\n\r\nmanager.create_api(Host, \r\n    results_per_page=10,\r\n    methods=['GET', 'POST', 'PUT', 'DELETE'], \r\n     preprocessors=preprocessors)\r\n\r\n```\r\n\r\nand called GET http://127.0.0.1:5000/api/host?sort=name but I can't access the field name atleast.\r\n\r\nBut I'm unable to access the sort argument from the request.\r\n\r\nI'd appreciate a lot if you could help me out with this issue.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/650", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/650/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/650/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/650/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/650", "id": 220096232, "node_id": "MDU6SXNzdWUyMjAwOTYyMzI=", "number": 650, "title": "lasttest version don`t support subdomain", "user": {"login": "LiGuangTian", "id": 20620983, "node_id": "MDQ6VXNlcjIwNjIwOTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/20620983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LiGuangTian", "html_url": "https://github.com/LiGuangTian", "followers_url": "https://api.github.com/users/LiGuangTian/followers", "following_url": "https://api.github.com/users/LiGuangTian/following{/other_user}", "gists_url": "https://api.github.com/users/LiGuangTian/gists{/gist_id}", "starred_url": "https://api.github.com/users/LiGuangTian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LiGuangTian/subscriptions", "organizations_url": "https://api.github.com/users/LiGuangTian/orgs", "repos_url": "https://api.github.com/users/LiGuangTian/repos", "events_url": "https://api.github.com/users/LiGuangTian/events{/privacy}", "received_events_url": "https://api.github.com/users/LiGuangTian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-07T03:10:04Z", "updated_at": "2017-04-11T03:45:14Z", "closed_at": "2017-04-11T03:32:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/648", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/648/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/648/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/648/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/648", "id": 217493434, "node_id": "MDU6SXNzdWUyMTc0OTM0MzQ=", "number": 648, "title": "empty data[] when using pagination", "user": {"login": "tzimme", "id": 16401082, "node_id": "MDQ6VXNlcjE2NDAxMDgy", "avatar_url": "https://avatars1.githubusercontent.com/u/16401082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tzimme", "html_url": "https://github.com/tzimme", "followers_url": "https://api.github.com/users/tzimme/followers", "following_url": "https://api.github.com/users/tzimme/following{/other_user}", "gists_url": "https://api.github.com/users/tzimme/gists{/gist_id}", "starred_url": "https://api.github.com/users/tzimme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tzimme/subscriptions", "organizations_url": "https://api.github.com/users/tzimme/orgs", "repos_url": "https://api.github.com/users/tzimme/repos", "events_url": "https://api.github.com/users/tzimme/events{/privacy}", "received_events_url": "https://api.github.com/users/tzimme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-28T09:06:12Z", "updated_at": "2017-03-28T10:50:43Z", "closed_at": "2017-03-28T10:50:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/644", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/644/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/644/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/644", "id": 214265140, "node_id": "MDU6SXNzdWUyMTQyNjUxNDA=", "number": 644, "title": "create_api_blueprint throwing strange errors", "user": {"login": "Datamance", "id": 8699411, "node_id": "MDQ6VXNlcjg2OTk0MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8699411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Datamance", "html_url": "https://github.com/Datamance", "followers_url": "https://api.github.com/users/Datamance/followers", "following_url": "https://api.github.com/users/Datamance/following{/other_user}", "gists_url": "https://api.github.com/users/Datamance/gists{/gist_id}", "starred_url": "https://api.github.com/users/Datamance/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Datamance/subscriptions", "organizations_url": "https://api.github.com/users/Datamance/orgs", "repos_url": "https://api.github.com/users/Datamance/repos", "events_url": "https://api.github.com/users/Datamance/events{/privacy}", "received_events_url": "https://api.github.com/users/Datamance/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-15T02:35:27Z", "updated_at": "2017-03-15T04:02:31Z", "closed_at": "2017-03-15T04:02:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nSo this code:\r\n\r\n`\r\nnps_bp = api_manager.create_api_blueprint(\r\n        NetPromoterScore,\r\n        url_prefix='/api/v1',\r\n        methods=['POST'],\r\n        collection_name='nps',\r\n        preprocessors={\r\n          'POST': [nps_entry_preprocessor]\r\n        }\r\n    )\r\n`\r\n\r\nDefinitely shouldn't throw this error:\r\n`TypeError: create_api_blueprint() takes at least 3 arguments (6 given)`\r\n\r\nAny idea what could be going on here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/629", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/629/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/629/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/629", "id": 203825970, "node_id": "MDU6SXNzdWUyMDM4MjU5NzA=", "number": 629, "title": "pip install Flask-Restless installs 0.17, and v1b doesn't install flask_sqlalchemy dependency", "user": {"login": "zbrook", "id": 6266473, "node_id": "MDQ6VXNlcjYyNjY0NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6266473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zbrook", "html_url": "https://github.com/zbrook", "followers_url": "https://api.github.com/users/zbrook/followers", "following_url": "https://api.github.com/users/zbrook/following{/other_user}", "gists_url": "https://api.github.com/users/zbrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/zbrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zbrook/subscriptions", "organizations_url": "https://api.github.com/users/zbrook/orgs", "repos_url": "https://api.github.com/users/zbrook/repos", "events_url": "https://api.github.com/users/zbrook/events{/privacy}", "received_events_url": "https://api.github.com/users/zbrook/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 886200, "node_id": "MDU6TGFiZWw4ODYyMDA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/documentation", "name": "documentation", "color": "444444", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-28T19:28:36Z", "updated_at": "2017-02-18T01:37:04Z", "closed_at": "2017-02-18T01:37:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "NB: this is easily worked around by forcing pip to install the more recent version of Flask-Restless, and then installing flask-sqlalchemy via pip afterward.\r\n\r\nNot sure whether to say the documentation at readthedocs or the default version via pip is in error.\r\n\r\nUsed pip 9.0.1 with Python 3.4. I use pyenv, but reproduced on a machine with just python 2.7 installed and no pyenv.\r\n\r\nhttp://flask-restless.readthedocs.io/en/stable/installation.html advises to install via pip, and the rest of the documentation assume beta v1, but pip installs 0.17.\r\n\r\nhttps://pypi.python.org/pypi/Flask-Restless/ also refers to beta v1.\r\n\r\n```\r\n$ pip --version\r\npip 9.0.1\r\n```\r\n\r\n```\r\n$ pip show flask_restless \r\nName: Flask-Restless \r\nVersion: 0.17.0\r\n```\r\n\r\n`pip install -I flask_restless==1.0.0b1` worked, but still doesn't [install dependency flask-sqlalchemy as advertised](http://flask-restless.readthedocs.io/en/stable/installation.html).\r\n\r\n```\r\n$ pip freeze  \r\nclick==6.7\r\nFlask==0.12\r\nFlask-Restless==1.0.0b1\r\nitsdangerous==0.24\r\nJinja2==2.9.5\r\nMarkupSafe==0.23\r\nmimerender==0.6.0\r\npython-dateutil==2.6.0\r\npython-mimeparse==1.6.0\r\nsix==1.10.0\r\nSQLAlchemy==1.1.5\r\nWerkzeug==0.11.15\r\n```\r\n\r\nP.S. Great project -- thank you for creating it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/628", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/628/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/628/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/628", "id": 201871771, "node_id": "MDU6SXNzdWUyMDE4NzE3NzE=", "number": 628, "title": "String formatting Error flask_restless.search.SearchParameters.__repr__", "user": {"login": "kannor", "id": 2254113, "node_id": "MDQ6VXNlcjIyNTQxMTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2254113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kannor", "html_url": "https://github.com/kannor", "followers_url": "https://api.github.com/users/kannor/followers", "following_url": "https://api.github.com/users/kannor/following{/other_user}", "gists_url": "https://api.github.com/users/kannor/gists{/gist_id}", "starred_url": "https://api.github.com/users/kannor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kannor/subscriptions", "organizations_url": "https://api.github.com/users/kannor/orgs", "repos_url": "https://api.github.com/users/kannor/repos", "events_url": "https://api.github.com/users/kannor/events{/privacy}", "received_events_url": "https://api.github.com/users/kannor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485861, "node_id": "MDU6TGFiZWw0ODU4NjE=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-19T14:15:23Z", "updated_at": "2017-01-27T00:55:55Z", "closed_at": "2017-01-27T00:55:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "`junction` arg  [here](https://github.com/jfinkels/flask-restless/blob/0.17.0/flask_restless/search.py#L294)   value was passed [here](https://github.com/jfinkels/flask-restless/blob/0.17.0/flask_restless/search.py#L295)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/624", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/624/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/624/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/624/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/624", "id": 199157834, "node_id": "MDU6SXNzdWUxOTkxNTc4MzQ=", "number": 624, "title": "the 'type' field name may conflict with SA", "user": {"login": "tarekziade", "id": 250019, "node_id": "MDQ6VXNlcjI1MDAxOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/250019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tarekziade", "html_url": "https://github.com/tarekziade", "followers_url": "https://api.github.com/users/tarekziade/followers", "following_url": "https://api.github.com/users/tarekziade/following{/other_user}", "gists_url": "https://api.github.com/users/tarekziade/gists{/gist_id}", "starred_url": "https://api.github.com/users/tarekziade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tarekziade/subscriptions", "organizations_url": "https://api.github.com/users/tarekziade/orgs", "repos_url": "https://api.github.com/users/tarekziade/repos", "events_url": "https://api.github.com/users/tarekziade/events{/privacy}", "received_events_url": "https://api.github.com/users/tarekziade/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485862, "node_id": "MDU6TGFiZWw0ODU4NjI=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-06T09:35:48Z", "updated_at": "2017-01-09T16:22:54Z", "closed_at": "2017-01-09T16:22:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reading the code at https://github.com/jfinkels/flask-restless/blob/master/flask_restless/views/resources.py#L689\r\n\r\nThis assumes a SA mapping does not have a column named 'type' which I think it's possible.\r\nThat would mean it would be impossible to update that field via a PATCH call.\r\n\r\nWouldn't it be safe to use a custom prefix to avoid name conflicts ? or move out of the 'data' mapping when the client sends data", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/615", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/615/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/615/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/615", "id": 195887375, "node_id": "MDU6SXNzdWUxOTU4ODczNzU=", "number": 615, "title": "Adding a separate blueprint that requests data from the same app not working", "user": {"login": "christabor", "id": 410839, "node_id": "MDQ6VXNlcjQxMDgzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/410839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christabor", "html_url": "https://github.com/christabor", "followers_url": "https://api.github.com/users/christabor/followers", "following_url": "https://api.github.com/users/christabor/following{/other_user}", "gists_url": "https://api.github.com/users/christabor/gists{/gist_id}", "starred_url": "https://api.github.com/users/christabor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christabor/subscriptions", "organizations_url": "https://api.github.com/users/christabor/orgs", "repos_url": "https://api.github.com/users/christabor/repos", "events_url": "https://api.github.com/users/christabor/events{/privacy}", "received_events_url": "https://api.github.com/users/christabor/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485861, "node_id": "MDU6TGFiZWw0ODU4NjE=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-15T19:03:48Z", "updated_at": "2016-12-27T18:10:22Z", "closed_at": "2016-12-27T18:10:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "When setting up an api, if you register a separate blueprint on the app, where one of that blueprints' routes makes standard requests to the resources (say, for a web UI on the same app), the endpoint itself will basically lag and time out, which requires a restart of the server (and the url never works).\r\n\r\nThis is probably not an optimal use of the tool, but I figured I'd mention it anyway. A simple workaround is to use two different apps, that can be run in the same source, which I've done successfully, but I wanted to bring it up in case there is some underlying issue with any db transactions.\r\n\r\nAn example:\r\n\r\n*app.py*\r\n\r\n```python\r\n\"\"\"My app.\"\"\"\r\n\r\nfrom flask import Flask\r\nfrom flask_restless import APIManager\r\n\r\nimport models\r\nfrom ui import ui as ui_bp\r\n\r\nDB_URI = 'MYDBURI'\r\n\r\n\r\ndef create_app(db, uri):\r\n    \"\"\"Create app.\"\"\"\r\n    app = Flask('myapp')\r\n    app.config.update(\r\n        SECRET_KEY='foo',\r\n        DEBUG=True,\r\n        SQLALCHEMY_TRACK_MODIFICATIONS=False,\r\n        SQLALCHEMY_DATABASE_URI=uri,\r\n        SQLALCHEMY_ECHO=True,\r\n    )\r\n    db.init_app(app)\r\n    app.register_blueprint(ui_bp)\r\n    app.app_context().push()\r\n    return app\r\n\r\n\r\napp = create_app(models.db, DB_URI)\r\nmanager = APIManager(app, session=models.db.session)\r\n\r\napi_options = dict(\r\n    methods=['GET', 'POST', 'PATCH', 'DELETE'],\r\n    results_per_page=100,\r\n)\r\nmanager.create_api(models.Team, **api_options)\r\nmanager.create_api(models.User, **api_options)\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(port=5000)\r\n```\r\n\r\n*ui.py*\r\n\r\n```python\r\n\"\"\"UI front-end routes.\"\"\"\r\n\r\nimport json\r\n\r\nfrom flask import (\r\n    Blueprint,\r\n)\r\nimport requests\r\n\r\nui = Blueprint(\r\n    'ui',\r\n    __name__,\r\n    template_folder='templates',\r\n    static_folder='static',\r\n    url_prefix='/ui'\r\n)\r\njson_headers = {'Content-type': 'application/json'}\r\n\r\n\r\n@ui.route('/')\r\ndef ui_index():\r\n    \"\"\"Page.\"\"\"\r\n    data = dict()\r\n    data = requests.get(\r\n        'http://127.0.0.1:5000/api/user/1',\r\n        headers=json_headers,\r\n    ).json()\r\n    kwargs = dict(data=data)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/595", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/595/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/595/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/595", "id": 182086286, "node_id": "MDU6SXNzdWUxODIwODYyODY=", "number": 595, "title": "Possible to EXTRACT(MONTH from birthday)?", "user": {"login": "joshuapowell", "id": 569351, "node_id": "MDQ6VXNlcjU2OTM1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/569351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshuapowell", "html_url": "https://github.com/joshuapowell", "followers_url": "https://api.github.com/users/joshuapowell/followers", "following_url": "https://api.github.com/users/joshuapowell/following{/other_user}", "gists_url": "https://api.github.com/users/joshuapowell/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshuapowell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshuapowell/subscriptions", "organizations_url": "https://api.github.com/users/joshuapowell/orgs", "repos_url": "https://api.github.com/users/joshuapowell/repos", "events_url": "https://api.github.com/users/joshuapowell/events{/privacy}", "received_events_url": "https://api.github.com/users/joshuapowell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-10T18:47:40Z", "updated_at": "2016-10-20T13:19:41Z", "closed_at": "2016-10-20T13:18:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Question: Is it possible to pass Flask-Restless functions like `EXTRACT(MONTH from birthday)` as filter `name`?\n\nThis works:\n\n```\n{\"filters\":[{\"name\":\"birth_date\",\"op\":\"eq\",\"val\":\"2010-10-01\"}]}\n```\n\nThis gives me a \"400: Unable to construct query\", because of course my model doesn't have \"\"EXTRACT(MONTH from birth_date)\" as a field name:\n\n```\n{\"filters\":[{\"name\":\"EXTRACT(MONTH from birth_date)\",\"op\":\"eq\",\"val\":\"10\"}]}\n```\n\nThis gives me a \"400: Unable to construct query\":\n\n```\n{\"filters\":[{\"name\":\"MONTH(birth_date)\",\"op\":\"eq\",\"val\":\"10\"}]}\n```\n\nThis gives me a \"400: DataError invalid...\"\n\n```\n{\"filters\":[{\"name\":\"birth_date\",\"op\":\"eq\",\"val\":\"October\"}]}\n```\n\nThis gives me a \"400: Programming Error operator does not exist\":\n\n```\n{\"filters\":[{\"name\":\"birth_date\",\"op\":\"eq\",\"val\":10}]}\n```\n\nI just was hoping it was possible to do through using the Postgres function. If I need to write a `preprocessor` for this, then no big deal.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/594", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/594/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/594/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/594/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/594", "id": 182060281, "node_id": "MDU6SXNzdWUxODIwNjAyODE=", "number": 594, "title": "Using python27 with future results in TypeError: Cannot mix str and non-str arguments", "user": {"login": "roemhildtg", "id": 5471079, "node_id": "MDQ6VXNlcjU0NzEwNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5471079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roemhildtg", "html_url": "https://github.com/roemhildtg", "followers_url": "https://api.github.com/users/roemhildtg/followers", "following_url": "https://api.github.com/users/roemhildtg/following{/other_user}", "gists_url": "https://api.github.com/users/roemhildtg/gists{/gist_id}", "starred_url": "https://api.github.com/users/roemhildtg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roemhildtg/subscriptions", "organizations_url": "https://api.github.com/users/roemhildtg/orgs", "repos_url": "https://api.github.com/users/roemhildtg/repos", "events_url": "https://api.github.com/users/roemhildtg/events{/privacy}", "received_events_url": "https://api.github.com/users/roemhildtg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-10-10T16:37:51Z", "updated_at": "2016-10-20T14:30:02Z", "closed_at": "2016-10-20T14:30:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://cloud.githubusercontent.com/assets/5471079/19243633/ee978dba-8edd-11e6-9b28-c1a5cd62ceed.png)\n\nI've written some code in python 3 but decided to revert back to using python 27 for compatibility with some other libraries, and to increase compatibility with the code I've written am using the future library. \n\nI'm not too certain what the cause is but it looks like we're [passing a Unicode and a String](https://github.com/jfinkels/flask-restless/blob/master/flask_restless/serialization/serializers.py#L382) to urllib which apparently is a problem in the future library.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/593", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/593/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/593/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/593", "id": 181619568, "node_id": "MDU6SXNzdWUxODE2MTk1Njg=", "number": 593, "title": "Status 400: Unable to decode data", "user": {"login": "tzimme", "id": 16401082, "node_id": "MDQ6VXNlcjE2NDAxMDgy", "avatar_url": "https://avatars1.githubusercontent.com/u/16401082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tzimme", "html_url": "https://github.com/tzimme", "followers_url": "https://api.github.com/users/tzimme/followers", "following_url": "https://api.github.com/users/tzimme/following{/other_user}", "gists_url": "https://api.github.com/users/tzimme/gists{/gist_id}", "starred_url": "https://api.github.com/users/tzimme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tzimme/subscriptions", "organizations_url": "https://api.github.com/users/tzimme/orgs", "repos_url": "https://api.github.com/users/tzimme/repos", "events_url": "https://api.github.com/users/tzimme/events{/privacy}", "received_events_url": "https://api.github.com/users/tzimme/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485861, "node_id": "MDU6TGFiZWw0ODU4NjE=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-07T09:11:50Z", "updated_at": "2016-10-31T01:53:14Z", "closed_at": "2016-10-31T01:53:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\ni'm trying to send the json I got from the api back via PATCH, but I get  a status 400: \"Unable to decode data\"\n\n```\ncurl -i -X PATCH -H \"Accept:application/vnd.api+json\" http://localhost:5000/api/user/1 -H \"Content-Type: application/vnd.api+json, application/json\" -d /tmp/1\nHTTP/1.0 400 BAD REQUEST\nContent-Type: application/vnd.api+json\nVary: Accept\nContent-Type: application/vnd.api+json\nContent-Length: 281\nServer: Werkzeug/0.11.11 Python/3.5.2+\nDate: Fri, 07 Oct 2016 09:06:09 GMT\n\n{\n  \"errors\": [\n    {\n      \"code\": null, \n      \"detail\": \"Unable to decode data\", \n      \"id\": null, \n      \"links\": null, \n      \"meta\": null, \n      \"source\": null, \n      \"status\": 400, \n      \"title\": null\n    }\n  ], \n  \"jsonapi\": {\n    \"version\": \"1.0\"\n  }, \n  \"meta\": {}\n}\n```\n\n`\n\n> ERROR in base [/home/tzimme/.local/lib/python3.5/site-packages/flask_restless/views/base.py:726]:\n> ## Expecting value: line 1 column 1 (char 0)\n> \n> Traceback (most recent call last):\n>   File \"/home/tzimme/.local/lib/python3.5/site-packages/flask_restless/views/resources.py\", line 572, in patch\n>     data = json.loads(request.get_data()) or {}\n>   File \"/home/tzimme/.local/lib/python3.5/site-packages/flask/json.py\", line 149, in loads\n>     return _json.loads(s, **kwargs)\n>   File \"/usr/lib/python3/dist-packages/simplejson/__init__.py\", line 533, in loads\n>     return cls(encoding=encoding, **kw).decode(s)\n>   File \"/usr/lib/python3/dist-packages/simplejson/decoder.py\", line 370, in decode\n>     obj, end = self.raw_decode(s)\n>   File \"/usr/lib/python3/dist-packages/simplejson/decoder.py\", line 400, in raw_decode\n>     return self.scan_once(s, idx=_w(s, idx).end())\n> simplejson.scanner.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/589", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/589/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/589/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/589", "id": 178602788, "node_id": "MDU6SXNzdWUxNzg2MDI3ODg=", "number": 589, "title": "How to include related columns in apimanager", "user": {"login": "tzimme", "id": 16401082, "node_id": "MDQ6VXNlcjE2NDAxMDgy", "avatar_url": "https://avatars1.githubusercontent.com/u/16401082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tzimme", "html_url": "https://github.com/tzimme", "followers_url": "https://api.github.com/users/tzimme/followers", "following_url": "https://api.github.com/users/tzimme/following{/other_user}", "gists_url": "https://api.github.com/users/tzimme/gists{/gist_id}", "starred_url": "https://api.github.com/users/tzimme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tzimme/subscriptions", "organizations_url": "https://api.github.com/users/tzimme/orgs", "repos_url": "https://api.github.com/users/tzimme/repos", "events_url": "https://api.github.com/users/tzimme/events{/privacy}", "received_events_url": "https://api.github.com/users/tzimme/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485862, "node_id": "MDU6TGFiZWw0ODU4NjI=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-22T12:57:02Z", "updated_at": "2016-10-06T02:35:55Z", "closed_at": "2016-10-06T02:35:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nbefore updating to flask-restless 1.0.0b1, i could just add columns form a related table to the api-response by adding \"include_columns=['column_from_related_table']\" to create_api()\n\nNow the relation is included by default, but only type and id are shown.\n\nHow can i add additional columns from a relation to create_api()?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/583", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/583/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/583/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/583/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/583", "id": 177450234, "node_id": "MDU6SXNzdWUxNzc0NTAyMzQ=", "number": 583, "title": "BetterJSONEncoder in tests is not simplejson", "user": {"login": "Natureshadow", "id": 212972, "node_id": "MDQ6VXNlcjIxMjk3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/212972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Natureshadow", "html_url": "https://github.com/Natureshadow", "followers_url": "https://api.github.com/users/Natureshadow/followers", "following_url": "https://api.github.com/users/Natureshadow/following{/other_user}", "gists_url": "https://api.github.com/users/Natureshadow/gists{/gist_id}", "starred_url": "https://api.github.com/users/Natureshadow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Natureshadow/subscriptions", "organizations_url": "https://api.github.com/users/Natureshadow/orgs", "repos_url": "https://api.github.com/users/Natureshadow/repos", "events_url": "https://api.github.com/users/Natureshadow/events{/privacy}", "received_events_url": "https://api.github.com/users/Natureshadow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-09-16T15:12:55Z", "updated_at": "2016-10-06T02:23:03Z", "closed_at": "2016-10-06T02:23:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The test suites fail because the JSONEncoder that is extended to BetterJSONEncoder in tests/helpers.py is not from simplejson, whereas the JSONEncoder used by Flask is.\n\nChanging \"from json import JSONEncoder to\" \"from simplejson import JSONEncoder\" (and probably explicitly depending on simplejson) solves the issue.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/582", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/582/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/582/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/582", "id": 177336001, "node_id": "MDU6SXNzdWUxNzczMzYwMDE=", "number": 582, "title": "Get hound working so we don't need to run flake8 tests in Travis", "user": {"login": "jfinkels", "id": 121755, "node_id": "MDQ6VXNlcjEyMTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/121755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkels", "html_url": "https://github.com/jfinkels", "followers_url": "https://api.github.com/users/jfinkels/followers", "following_url": "https://api.github.com/users/jfinkels/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkels/subscriptions", "organizations_url": "https://api.github.com/users/jfinkels/orgs", "repos_url": "https://api.github.com/users/jfinkels/repos", "events_url": "https://api.github.com/users/jfinkels/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-16T03:00:20Z", "updated_at": "2016-10-06T03:43:29Z", "closed_at": "2016-10-06T03:43:29Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/579", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/579/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/579/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/579/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/579", "id": 176201159, "node_id": "MDU6SXNzdWUxNzYyMDExNTk=", "number": 579, "title": "Accept arbitrary queries", "user": {"login": "mwhite", "id": 344026, "node_id": "MDQ6VXNlcjM0NDAyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/344026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwhite", "html_url": "https://github.com/mwhite", "followers_url": "https://api.github.com/users/mwhite/followers", "following_url": "https://api.github.com/users/mwhite/following{/other_user}", "gists_url": "https://api.github.com/users/mwhite/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwhite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwhite/subscriptions", "organizations_url": "https://api.github.com/users/mwhite/orgs", "repos_url": "https://api.github.com/users/mwhite/repos", "events_url": "https://api.github.com/users/mwhite/events{/privacy}", "received_events_url": "https://api.github.com/users/mwhite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-10T20:29:52Z", "updated_at": "2016-09-10T21:50:30Z", "closed_at": "2016-09-10T21:50:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Define a straightforward mapping between JSON and the SQLAlchemy expression language, and a function for formatting an arbitrary query result, so that arbitrary queries can be executed against the REST API.\n\nPreferably, a JSON equivalent for SQLAlchemy Query methods (e.g. `join()`, `add_columns()`) could also be made.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/578", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/578/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/578/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/578/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/578", "id": 175966882, "node_id": "MDU6SXNzdWUxNzU5NjY4ODI=", "number": 578, "title": "Loading model for chained AssociationProxy", "user": {"login": "Natureshadow", "id": 212972, "node_id": "MDQ6VXNlcjIxMjk3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/212972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Natureshadow", "html_url": "https://github.com/Natureshadow", "followers_url": "https://api.github.com/users/Natureshadow/followers", "following_url": "https://api.github.com/users/Natureshadow/following{/other_user}", "gists_url": "https://api.github.com/users/Natureshadow/gists{/gist_id}", "starred_url": "https://api.github.com/users/Natureshadow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Natureshadow/subscriptions", "organizations_url": "https://api.github.com/users/Natureshadow/orgs", "repos_url": "https://api.github.com/users/Natureshadow/repos", "events_url": "https://api.github.com/users/Natureshadow/events{/privacy}", "received_events_url": "https://api.github.com/users/Natureshadow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485861, "node_id": "MDU6TGFiZWw0ODU4NjE=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-09T09:30:22Z", "updated_at": "2016-09-09T13:41:11Z", "closed_at": "2016-09-09T13:41:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a model that uses chained associaiton proxies, like in this example: http://docs.sqlalchemy.org/en/latest/orm/extensions/associationproxy.html#composite-association-proxies\n\nRestless fails to detect the remote model because `get_related_association_proxy_model` blindly assumes the remote is a plain property.\n\nUnwrapping it recursively should do the trick:\n\n```\n    def get_related_association_proxy_model(attr):\n        if isinstance(attr.remote_attr, AssociationProxy):\n            prop = attr.remote_attr.property\n            for attribute in ('mapper', 'parent'):\n                if hasattr(prop, attribute):\n                    return getattr(prop, attribute).class_\n            return None\n        else:\n            return get_related_association_proxy_model(attr.remote_attr)\n```\n\nI monkey patched this code from within my applicaiton, and it seems to work. It still cannot discover arbitrary remote models, but at least it does not fail with an exception and works in some cases.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/575", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/575/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/575/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/575/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/575", "id": 175404352, "node_id": "MDU6SXNzdWUxNzU0MDQzNTI=", "number": 575, "title": "Upload Flask-Restless-1.0.0b1.tar.gz to pypi.python.org", "user": {"login": "daniellawrence", "id": 814463, "node_id": "MDQ6VXNlcjgxNDQ2Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/814463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniellawrence", "html_url": "https://github.com/daniellawrence", "followers_url": "https://api.github.com/users/daniellawrence/followers", "following_url": "https://api.github.com/users/daniellawrence/following{/other_user}", "gists_url": "https://api.github.com/users/daniellawrence/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniellawrence/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniellawrence/subscriptions", "organizations_url": "https://api.github.com/users/daniellawrence/orgs", "repos_url": "https://api.github.com/users/daniellawrence/repos", "events_url": "https://api.github.com/users/daniellawrence/events{/privacy}", "received_events_url": "https://api.github.com/users/daniellawrence/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-07T03:23:59Z", "updated_at": "2016-09-11T16:37:42Z", "closed_at": "2016-09-11T16:37:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey @jfinkels ,\n\n  Thanks for putting all of this together so far, its been a massive time saver :)\n\n  Can you please upload the JSONAPI branch 1.0.0b1 to https://pypi.python.org/simple/flask-restless/\n  This will let me upload this to an internal pypi.\n\nCheers,\n\nDaniel\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/572", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/572/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/572/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/572/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/572", "id": 172351304, "node_id": "MDU6SXNzdWUxNzIzNTEzMDQ=", "number": 572, "title": "How to set apimanager's charset", "user": {"login": "jkgeekJack", "id": 15207717, "node_id": "MDQ6VXNlcjE1MjA3NzE3", "avatar_url": "https://avatars2.githubusercontent.com/u/15207717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkgeekJack", "html_url": "https://github.com/jkgeekJack", "followers_url": "https://api.github.com/users/jkgeekJack/followers", "following_url": "https://api.github.com/users/jkgeekJack/following{/other_user}", "gists_url": "https://api.github.com/users/jkgeekJack/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkgeekJack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkgeekJack/subscriptions", "organizations_url": "https://api.github.com/users/jkgeekJack/orgs", "repos_url": "https://api.github.com/users/jkgeekJack/repos", "events_url": "https://api.github.com/users/jkgeekJack/events{/privacy}", "received_events_url": "https://api.github.com/users/jkgeekJack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-22T00:39:56Z", "updated_at": "2016-08-23T13:19:26Z", "closed_at": "2016-08-23T13:19:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Chinese  in the databse is right form,but output in the browser is ascll code like '\\u6492'.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/571", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/571/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/571/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/571/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/571", "id": 171904866, "node_id": "MDU6SXNzdWUxNzE5MDQ4NjY=", "number": 571, "title": "init_app doesn't set the app attribute", "user": {"login": "stephane", "id": 1815, "node_id": "MDQ6VXNlcjE4MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephane", "html_url": "https://github.com/stephane", "followers_url": "https://api.github.com/users/stephane/followers", "following_url": "https://api.github.com/users/stephane/following{/other_user}", "gists_url": "https://api.github.com/users/stephane/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephane/subscriptions", "organizations_url": "https://api.github.com/users/stephane/orgs", "repos_url": "https://api.github.com/users/stephane/repos", "events_url": "https://api.github.com/users/stephane/events{/privacy}", "received_events_url": "https://api.github.com/users/stephane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-18T13:46:31Z", "updated_at": "2016-09-12T13:43:26Z", "closed_at": "2016-09-12T13:43:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems weird to me `APIManager.init_app` doesn't set the app:\n\nhttps://github.com/jfinkels/flask-restless/blob/master/flask_restless/manager.py#L325\n\nIn my app, I start by registering all the extensions this way:\n\n```\n# database doesn't import the app...\nfrom .database import db\ndb.init_app(app)\n```\n\nthen I'm able to register all my blueprints but with Flask-Restless I need to call `api_manager.init_app` at the very end (after the calls to `create_api`) to effectively register all the blueprints.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/566", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/566/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/566/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/566/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/566", "id": 170204265, "node_id": "MDU6SXNzdWUxNzAyMDQyNjU=", "number": 566, "title": "Python 2.6 support", "user": {"login": "vrajmohan", "id": 2066204, "node_id": "MDQ6VXNlcjIwNjYyMDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2066204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrajmohan", "html_url": "https://github.com/vrajmohan", "followers_url": "https://api.github.com/users/vrajmohan/followers", "following_url": "https://api.github.com/users/vrajmohan/following{/other_user}", "gists_url": "https://api.github.com/users/vrajmohan/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrajmohan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrajmohan/subscriptions", "organizations_url": "https://api.github.com/users/vrajmohan/orgs", "repos_url": "https://api.github.com/users/vrajmohan/repos", "events_url": "https://api.github.com/users/vrajmohan/events{/privacy}", "received_events_url": "https://api.github.com/users/vrajmohan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-09T15:58:11Z", "updated_at": "2016-08-15T04:19:03Z", "closed_at": "2016-08-15T04:19:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Travis builds are failing with:\n\n```\nDownloading SAValidation-0.4.0.tar.gz\n\n    Complete output from command python setup.py egg_info:\n\n    Traceback (most recent call last):\n\n      File \"<string>\", line 1, in <module>\n\n      File \"/tmp/pip-build-tC6x8w/savalidation/setup.py\", line 53, in <module>\n\n        '1.2' if sys.version_info.major == 2 else '1.3.0a1',\n\n    AttributeError: 'tuple' object has no attribute 'major'\n```\n\n`sqlalchemy-validation` is tested only with Python 2.7 and higher - https://github.com/blazelibs/sqlalchemy-validation/blob/master/tox.ini#L2.\n\nAlso, Python 2.6 has been officially retired - https://www.python.org/download/releases/2.6.9/.\n\nShouldn't we cease testing with Python 2.6?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/564", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/564/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/564/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/564", "id": 169774310, "node_id": "MDU6SXNzdWUxNjk3NzQzMTA=", "number": 564, "title": "quickstart.py no response", "user": {"login": "kirkins", "id": 9503662, "node_id": "MDQ6VXNlcjk1MDM2NjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/9503662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirkins", "html_url": "https://github.com/kirkins", "followers_url": "https://api.github.com/users/kirkins/followers", "following_url": "https://api.github.com/users/kirkins/following{/other_user}", "gists_url": "https://api.github.com/users/kirkins/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirkins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirkins/subscriptions", "organizations_url": "https://api.github.com/users/kirkins/orgs", "repos_url": "https://api.github.com/users/kirkins/repos", "events_url": "https://api.github.com/users/kirkins/events{/privacy}", "received_events_url": "https://api.github.com/users/kirkins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-07T01:11:20Z", "updated_at": "2016-09-16T03:05:42Z", "closed_at": "2016-09-16T03:05:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have quickstart.py running with no errors but requests just hang forever.\n\nWhen I run the curl.sh file it gets stuck at \"Making an initial GET request\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/562", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/562/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/562/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/562/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/562", "id": 166843049, "node_id": "MDU6SXNzdWUxNjY4NDMwNDk=", "number": 562, "title": "Sorting and filtering on hybrid properties fails", "user": {"login": "roemhildtg", "id": 5471079, "node_id": "MDQ6VXNlcjU0NzEwNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5471079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roemhildtg", "html_url": "https://github.com/roemhildtg", "followers_url": "https://api.github.com/users/roemhildtg/followers", "following_url": "https://api.github.com/users/roemhildtg/following{/other_user}", "gists_url": "https://api.github.com/users/roemhildtg/gists{/gist_id}", "starred_url": "https://api.github.com/users/roemhildtg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roemhildtg/subscriptions", "organizations_url": "https://api.github.com/users/roemhildtg/orgs", "repos_url": "https://api.github.com/users/roemhildtg/repos", "events_url": "https://api.github.com/users/roemhildtg/events{/privacy}", "received_events_url": "https://api.github.com/users/roemhildtg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485861, "node_id": "MDU6TGFiZWw0ODU4NjE=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-07-21T15:07:32Z", "updated_at": "2017-10-24T05:07:53Z", "closed_at": "2016-12-26T21:32:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using flask_restless-1.0.0b2 and it seems that if I define a hybrid property like \n\n``` python\n    @hybrid_property\n    def is_complete(self):\n        \"\"\"\n        when all features are completed, this workorder should be completed\n        \"\"\"\n        for f in self.features:\n            if f.feature_status == 'Open':\n                return 'No'\n        return 'Yes'\n\n    @is_complete.expression\n    def is_complete(cls):\n        return select([Workorder_Feature.feature_status]).\\\n                where(Workorder_Feature.workorder_id==cls.id)\n```\n\nAnd I pass parameters like this: \n\n```\nsort:is_complete\n```\n\nor \n\n```\nfilter[objects]:[{\"name\":\"is_complete\",\"op\":\"like\",\"val\":\"%No%\"}]\n```\n\nIt throws errors in `flask_restless\\search\\operators.py`  on line 98 https://github.com/jfinkels/flask-restless/blob/master/flask_restless/search/operators.py#L98:\n`'Select' has no attribute 'like'` \n\nand in flask_restless\\search\\drivers.py on line 121 https://github.com/jfinkels/flask-restless/blob/master/flask_restless/search/drivers.py#L121:\n`Select object has no attribute 'asc'`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/559", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/559/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/559/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/559", "id": 164698551, "node_id": "MDU6SXNzdWUxNjQ2OTg1NTE=", "number": 559, "title": "Deserializer throws away fields named `type` and `links`", "user": {"login": "raiskila", "id": 351598, "node_id": "MDQ6VXNlcjM1MTU5OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/351598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raiskila", "html_url": "https://github.com/raiskila", "followers_url": "https://api.github.com/users/raiskila/followers", "following_url": "https://api.github.com/users/raiskila/following{/other_user}", "gists_url": "https://api.github.com/users/raiskila/gists{/gist_id}", "starred_url": "https://api.github.com/users/raiskila/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raiskila/subscriptions", "organizations_url": "https://api.github.com/users/raiskila/orgs", "repos_url": "https://api.github.com/users/raiskila/repos", "events_url": "https://api.github.com/users/raiskila/events{/privacy}", "received_events_url": "https://api.github.com/users/raiskila/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-07-10T04:22:38Z", "updated_at": "2016-08-16T04:02:54Z", "closed_at": "2016-08-16T04:02:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "If my SQLAlchemy models have a field called `type`, and I pass a value for it in the `attributes` hash in a JSON API request, the `strings_to_datetimes` function inside `helpers.py` throws it away prior to updating the SQLAlchemy model object.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/553", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/553/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/553/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/553/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/553", "id": 162749327, "node_id": "MDU6SXNzdWUxNjI3NDkzMjc=", "number": 553, "title": "Filter objects are not URL encoded in links on GET requests", "user": {"login": "tanj", "id": 90219, "node_id": "MDQ6VXNlcjkwMjE5", "avatar_url": "https://avatars0.githubusercontent.com/u/90219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanj", "html_url": "https://github.com/tanj", "followers_url": "https://api.github.com/users/tanj/followers", "following_url": "https://api.github.com/users/tanj/following{/other_user}", "gists_url": "https://api.github.com/users/tanj/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanj/subscriptions", "organizations_url": "https://api.github.com/users/tanj/orgs", "repos_url": "https://api.github.com/users/tanj/repos", "events_url": "https://api.github.com/users/tanj/events{/privacy}", "received_events_url": "https://api.github.com/users/tanj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-28T18:06:24Z", "updated_at": "2017-02-18T01:43:34Z", "closed_at": "2017-02-18T01:43:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I seem to have discovered a bug in how the filter urls are handled.\n\nFrom the docs:\n\n```\ncurl \\\n  -G \\\n  -H \"Accept: application/vnd.api+json\" \\\n  -d \"filter[objects]=[{\\\"name\\\":\\\"name\\\",\\\"op\\\":\\\"like\\\",\\\"val\\\":\\\"%y%\\\"}]\" \\\n  http://127.0.0.1:5000/api/person\n```\n\nthis will actually fail with a 400 error. If you change the option `-d` to `--data-urlencode` it will work. However the returned json pagination links will fail because the filter will be included in a non-encoded format in those links.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/552", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/552/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/552/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/552", "id": 162432952, "node_id": "MDU6SXNzdWUxNjI0MzI5NTI=", "number": 552, "title": "Model required to have `id` column", "user": {"login": "tanj", "id": 90219, "node_id": "MDQ6VXNlcjkwMjE5", "avatar_url": "https://avatars0.githubusercontent.com/u/90219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tanj", "html_url": "https://github.com/tanj", "followers_url": "https://api.github.com/users/tanj/followers", "following_url": "https://api.github.com/users/tanj/following{/other_user}", "gists_url": "https://api.github.com/users/tanj/gists{/gist_id}", "starred_url": "https://api.github.com/users/tanj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tanj/subscriptions", "organizations_url": "https://api.github.com/users/tanj/orgs", "repos_url": "https://api.github.com/users/tanj/repos", "events_url": "https://api.github.com/users/tanj/events{/privacy}", "received_events_url": "https://api.github.com/users/tanj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485859, "node_id": "MDU6TGFiZWw0ODU4NTk=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-27T11:44:11Z", "updated_at": "2016-07-05T13:21:04Z", "closed_at": "2016-07-05T13:21:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the quick start:\n\n```\n# Create your Flask-SQLALchemy models as usual but with the following two\n# (reasonable) restrictions:\n#   1. They must have a primary key column of type sqlalchemy.Integer or\n#      type sqlalchemy.Unicode\n```\n\nWhen trying to run my model which follows the layout below I would raise IllegalArgumentError when the code hit [manager.py:line 598](https://github.com/jfinkels/flask-restless/blob/master/flask_restless/manager.py#L598).\n\n```\nclass TCustomer(db.Model):\n    __tablename__ = 'tCustomer'\n\n    ixCustomer = db.Column(db.Integer, primary_key=True)\n    sCustomer = db.Column(db.Unicode(255))\n    sLogoPath = db.Column(db.Unicode(255))\n\nclass TJob(db.Model):\n    __tablename__ = 'tJob'\n\n    ixJob = db.Column(db.Integer, primary_key=True)\n    ixCustomer = db.Column(db.Integer, db.ForeignKey('tCustomer.ixCustomer'), nullable=False)\n    sJobNumber = db.Column(db.Unicode(10))\n    dtDate = db.Column(db.Date)\n```\n\nI commented out that check and then hit an error in the serializer that also threw an error. I changed that code as well and was able to get the module to work for me. https://github.com/tanj/flask-restless/commit/a0880befbbacf49efc59cd7ecea02e6a944c2f75\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/551", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/551/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/551/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/551", "id": 161730878, "node_id": "MDU6SXNzdWUxNjE3MzA4Nzg=", "number": 551, "title": "Select Columns on a GET request", "user": {"login": "talatbaig", "id": 606544, "node_id": "MDQ6VXNlcjYwNjU0NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/606544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/talatbaig", "html_url": "https://github.com/talatbaig", "followers_url": "https://api.github.com/users/talatbaig/followers", "following_url": "https://api.github.com/users/talatbaig/following{/other_user}", "gists_url": "https://api.github.com/users/talatbaig/gists{/gist_id}", "starred_url": "https://api.github.com/users/talatbaig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/talatbaig/subscriptions", "organizations_url": "https://api.github.com/users/talatbaig/orgs", "repos_url": "https://api.github.com/users/talatbaig/repos", "events_url": "https://api.github.com/users/talatbaig/events{/privacy}", "received_events_url": "https://api.github.com/users/talatbaig/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485862, "node_id": "MDU6TGFiZWw0ODU4NjI=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-22T16:41:08Z", "updated_at": "2016-06-23T09:46:31Z", "closed_at": "2016-06-22T18:20:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI wanted to ask if there was any way to select particular columns when making a GET request. \nI know there is an include_columns option but what would be nice is if I could specify particular columns from include_columns in my request and only get those back.\n\nKind regards\nT\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/550", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/550/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/550/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/550", "id": 161141037, "node_id": "MDU6SXNzdWUxNjExNDEwMzc=", "number": 550, "title": "How to set the alias for my model columns and methods?", "user": {"login": "thrbowl", "id": 1860809, "node_id": "MDQ6VXNlcjE4NjA4MDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1860809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thrbowl", "html_url": "https://github.com/thrbowl", "followers_url": "https://api.github.com/users/thrbowl/followers", "following_url": "https://api.github.com/users/thrbowl/following{/other_user}", "gists_url": "https://api.github.com/users/thrbowl/gists{/gist_id}", "starred_url": "https://api.github.com/users/thrbowl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thrbowl/subscriptions", "organizations_url": "https://api.github.com/users/thrbowl/orgs", "repos_url": "https://api.github.com/users/thrbowl/repos", "events_url": "https://api.github.com/users/thrbowl/events{/privacy}", "received_events_url": "https://api.github.com/users/thrbowl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-20T08:25:22Z", "updated_at": "2016-10-06T02:37:52Z", "closed_at": "2016-10-06T02:37:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does flask-restless support the feature now?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/548", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/548/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/548/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/548/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/548", "id": 160566982, "node_id": "MDU6SXNzdWUxNjA1NjY5ODI=", "number": 548, "title": "Flask-Restless rejects requests with Accept: */*", "user": {"login": "jfinkels", "id": 121755, "node_id": "MDQ6VXNlcjEyMTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/121755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkels", "html_url": "https://github.com/jfinkels", "followers_url": "https://api.github.com/users/jfinkels/followers", "following_url": "https://api.github.com/users/jfinkels/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkels/subscriptions", "organizations_url": "https://api.github.com/users/jfinkels/orgs", "repos_url": "https://api.github.com/users/jfinkels/repos", "events_url": "https://api.github.com/users/jfinkels/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-16T02:54:22Z", "updated_at": "2016-10-06T02:27:57Z", "closed_at": "2016-10-06T02:27:57Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Flask-Restless should allow requests with `Accept: */*`, since [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.1) suggests that _/_ represents any media type.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/547", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/547/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/547/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/547", "id": 159743535, "node_id": "MDU6SXNzdWUxNTk3NDM1MzU=", "number": 547, "title": "[1.0.0b] GET request errors without disabling headers", "user": {"login": "2Cubed", "id": 12002323, "node_id": "MDQ6VXNlcjEyMDAyMzIz", "avatar_url": "https://avatars1.githubusercontent.com/u/12002323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/2Cubed", "html_url": "https://github.com/2Cubed", "followers_url": "https://api.github.com/users/2Cubed/followers", "following_url": "https://api.github.com/users/2Cubed/following{/other_user}", "gists_url": "https://api.github.com/users/2Cubed/gists{/gist_id}", "starred_url": "https://api.github.com/users/2Cubed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/2Cubed/subscriptions", "organizations_url": "https://api.github.com/users/2Cubed/orgs", "repos_url": "https://api.github.com/users/2Cubed/repos", "events_url": "https://api.github.com/users/2Cubed/events{/privacy}", "received_events_url": "https://api.github.com/users/2Cubed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-10T23:52:12Z", "updated_at": "2016-06-16T06:08:15Z", "closed_at": "2016-06-16T03:00:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the [quickstart example](https://github.com/jfinkels/flask-restless/blob/master/examples/quickstart.py) with v1.1.0b, I am unable to get data without explicitly disabling headers in my request. (I get a 406 otherwise.)\n\nThe following attempts, which I would expect to work, receive 406 errors.\n\n``` python\nfrom requests import get\nget(\"http://localhost:5000/api/person\").json()\n```\n\n``` bash\ncurl http://localhost:5000/api/person\n```\n\nThese, however, will work, retrieving the correct content.\n\n``` python\nfrom requests import get\nget(\"http://localhost:5000/api/person\", headers=False).json()\n```\n\n``` python\nfrom requests import get\nget(\"http://localhost:5000/api/person\", headers='').json()\n```\n\n``` python\nfrom requests import get\nget(\"http://localhost:5000/api/person\", headers=()).json()\n```\n\n``` python\nfrom requests import get\nget(\"http://localhost:5000/api/person\", headers=[]).json()\n```\n\nAlthough these will not, returning a 406 error.\n\n``` python\nfrom requests import get\nget(\"http://localhost:5000/api/person\", headers=None).json()\n```\n\n``` python\nfrom requests import get\nget(\"http://localhost:5000/api/person\", headers={}).json()\n```\n\nFinally, the 406 error is given as follows, with `code`, `id`, `links`, `meta`, `source`, and `title` set to `null` rather than the values they should be, as outlined in [the JSON API specifications](http://jsonapi.org/format/#errors).\n\n``` json\n{\n  \"errors\": [\n    {\n      \"code\": null, \n      \"detail\": \"Accept header, if specified, must be the JSON API media type: application/vnd.api+json\", \n      \"id\": null, \n      \"links\": null, \n      \"meta\": null, \n      \"source\": null, \n      \"status\": 406, \n      \"title\": null\n    }\n  ], \n  \"jsonapi\": {\n    \"version\": \"1.0\"\n  }, \n  \"meta\": {}\n}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/541", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/541/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/541/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/541", "id": 158064332, "node_id": "MDU6SXNzdWUxNTgwNjQzMzI=", "number": 541, "title": "[1.0.0b1] Post requests result in MissingData (Error 400)", "user": {"login": "cryarchy", "id": 7136550, "node_id": "MDQ6VXNlcjcxMzY1NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7136550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cryarchy", "html_url": "https://github.com/cryarchy", "followers_url": "https://api.github.com/users/cryarchy/followers", "following_url": "https://api.github.com/users/cryarchy/following{/other_user}", "gists_url": "https://api.github.com/users/cryarchy/gists{/gist_id}", "starred_url": "https://api.github.com/users/cryarchy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cryarchy/subscriptions", "organizations_url": "https://api.github.com/users/cryarchy/orgs", "repos_url": "https://api.github.com/users/cryarchy/repos", "events_url": "https://api.github.com/users/cryarchy/events{/privacy}", "received_events_url": "https://api.github.com/users/cryarchy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485861, "node_id": "MDU6TGFiZWw0ODU4NjE=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-02T05:49:09Z", "updated_at": "2016-06-06T02:51:50Z", "closed_at": "2016-06-02T06:38:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following code:\n\n``` python\n>>> import requests\n>>> data = {u\"username\":u\"cryarchy\", u\"password\":u\"Pass1234\", u\"email\":u\"email@domain.com\"}\n>>> url = \"http://localhost:5000/api/account\"\n>>> headers = {\"Content-Type\":\"application/vnd.api+json\", \"Accept\":\"application/vnd.api+json\"}\n>>> import json\n>>> r = requests.post(url, data=json.dumps(data), headers=headers)\n```\n\nafter the request, the flask-debug console displays the following:\n\n```\n127.0.0.1 - - [02/Jun/2016 08:33:03] \"POST /api/account HTTP/1.1\" 400 -\n{u'username': u'cryarchy', u'password': u'Pass1234', u'email': u'email@domain.com'}\n--------------------------------------------------------------------------------\nERROR in base [/home/user/tizy/MyFlask/e2-papers/venv/local/lib/python2.7/site-packages/flask_restless/views/base.py:726]:\n\n--------------------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/user/tizy/MyFlask/e2-papers/venv/local/lib/python2.7/site-packages/flask_restless/views/resources.py\", line 385, in post\n    instance = self.deserialize(data)\n  File \"/home/user/tizy/MyFlask/e2-papers/venv/local/lib/python2.7/site-packages/flask_restless/serialization.py\", line 693, in __call__\n    raise MissingData\nMissingData\n127.0.0.1 - - [02/Jun/2016 08:33:11] \"POST /api/account HTTP/1.1\" 400 -\n```\n\nThe data is getting printed on the debug window because I have the following **POST** preprocessor:\n\n``` python\ndef post_vars_init(data=None):\n    if (not data):\n        raise ProcessingException(description=\"No data\", code=500)\n    print(data)\n```\n\n**NB:** I get the same results when I make the POST request from Angular2 post\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/540", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/540/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/540/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/540", "id": 157422715, "node_id": "MDU6SXNzdWUxNTc0MjI3MTU=", "number": 540, "title": "[1.0.01b] primary_key argument in create_api_blueprint()", "user": {"login": "yhosun", "id": 6580184, "node_id": "MDQ6VXNlcjY1ODAxODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6580184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yhosun", "html_url": "https://github.com/yhosun", "followers_url": "https://api.github.com/users/yhosun/followers", "following_url": "https://api.github.com/users/yhosun/following{/other_user}", "gists_url": "https://api.github.com/users/yhosun/gists{/gist_id}", "starred_url": "https://api.github.com/users/yhosun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yhosun/subscriptions", "organizations_url": "https://api.github.com/users/yhosun/orgs", "repos_url": "https://api.github.com/users/yhosun/repos", "events_url": "https://api.github.com/users/yhosun/events{/privacy}", "received_events_url": "https://api.github.com/users/yhosun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-05-30T02:49:09Z", "updated_at": "2016-09-16T03:01:53Z", "closed_at": "2016-09-16T03:01:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "In 1.0.01b, even if `primary_key` argument is provided, `create_api_blueprint()` throws:\n\n```\nflask_restless.manager.IllegalArgumentError: Provided model must have an `id` attribute\n```\n\nI think this validation also needs to consider the value of `primary_key`:\nhttps://github.com/jfinkels/flask-restless/blob/master/flask_restless/manager.py#L597-L599\n\n---\n\nI also have a question:\nhttp://flask-restless.readthedocs.io/en/1.0.0b1/basicusage.html?highlight=sqlalchemy.Integer\n\n> each model must have a primary key column named id of type sqlalchemy.Integer or type sqlalchemy.Unicode.\n\nDo you also support a primary key column of  **sqlalchemy.BigInteger**?  In 0.17.0, I did not notice any issue with it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/539", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/539/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/539/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/539", "id": 157324616, "node_id": "MDU6SXNzdWUxNTczMjQ2MTY=", "number": 539, "title": "GET_SINGLE preprocessor instance_id is Boolean instead of an Integer", "user": {"login": "cryarchy", "id": 7136550, "node_id": "MDQ6VXNlcjcxMzY1NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7136550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cryarchy", "html_url": "https://github.com/cryarchy", "followers_url": "https://api.github.com/users/cryarchy/followers", "following_url": "https://api.github.com/users/cryarchy/following{/other_user}", "gists_url": "https://api.github.com/users/cryarchy/gists{/gist_id}", "starred_url": "https://api.github.com/users/cryarchy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cryarchy/subscriptions", "organizations_url": "https://api.github.com/users/cryarchy/orgs", "repos_url": "https://api.github.com/users/cryarchy/repos", "events_url": "https://api.github.com/users/cryarchy/events{/privacy}", "received_events_url": "https://api.github.com/users/cryarchy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-28T06:52:27Z", "updated_at": "2016-10-06T02:41:43Z", "closed_at": "2016-10-06T02:41:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Flask-Restless==0.17.0 and I receive a _Boolean instance_id_ to my **GET_SINGLE** preprocessors. i.e; when I visit an example URL `http://localhost:5000/api/account/3` the preprocessor function:\n\n``` python\ndef get_show_id(instance_id=None, **kwargs):\n    print (instance_id)\n```\n\nprints out `True`. Also, all **GET_SINGLE** URLs point to the same single record in my database.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/538", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/538/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/538/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/538", "id": 156908743, "node_id": "MDU6SXNzdWUxNTY5MDg3NDM=", "number": 538, "title": "documentation out of date?", "user": {"login": "stgarf", "id": 1694002, "node_id": "MDQ6VXNlcjE2OTQwMDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1694002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stgarf", "html_url": "https://github.com/stgarf", "followers_url": "https://api.github.com/users/stgarf/followers", "following_url": "https://api.github.com/users/stgarf/following{/other_user}", "gists_url": "https://api.github.com/users/stgarf/gists{/gist_id}", "starred_url": "https://api.github.com/users/stgarf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stgarf/subscriptions", "organizations_url": "https://api.github.com/users/stgarf/orgs", "repos_url": "https://api.github.com/users/stgarf/repos", "events_url": "https://api.github.com/users/stgarf/events{/privacy}", "received_events_url": "https://api.github.com/users/stgarf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485862, "node_id": "MDU6TGFiZWw0ODU4NjI=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-26T05:51:03Z", "updated_at": "2016-08-10T09:20:30Z", "closed_at": "2016-08-10T09:20:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like the documentation is out of date with the latest flask-restless.\n\nIs there currently a way to change accept and content-type from requiring application/vdi.api+json to anything else?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/537", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/537/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/537/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/537", "id": 156893384, "node_id": "MDU6SXNzdWUxNTY4OTMzODQ=", "number": 537, "title": "Is it possible to make a same API to return different columns?", "user": {"login": "yhosun", "id": 6580184, "node_id": "MDQ6VXNlcjY1ODAxODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6580184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yhosun", "html_url": "https://github.com/yhosun", "followers_url": "https://api.github.com/users/yhosun/followers", "following_url": "https://api.github.com/users/yhosun/following{/other_user}", "gists_url": "https://api.github.com/users/yhosun/gists{/gist_id}", "starred_url": "https://api.github.com/users/yhosun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yhosun/subscriptions", "organizations_url": "https://api.github.com/users/yhosun/orgs", "repos_url": "https://api.github.com/users/yhosun/repos", "events_url": "https://api.github.com/users/yhosun/events{/privacy}", "received_events_url": "https://api.github.com/users/yhosun/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485862, "node_id": "MDU6TGFiZWw0ODU4NjI=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 485863, "node_id": "MDU6TGFiZWw0ODU4NjM=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-26T02:58:43Z", "updated_at": "2016-10-06T02:44:20Z", "closed_at": "2016-10-06T02:44:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nThis is a question (or maybe, it could be enhancement) , and please, feel free to let me know if you prefer a question to be posted to a different forum like StackOverflow.\n\nIs there any way to make a same API to return different sets of columns?\n\nFor example, in the doc,\n\n``` python\nclass Person(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.Unicode, unique=True)\n    birth_date = db.Column(db.Date)\n    computers = db.relationship('Computer')\n```\n\nIn a UI page displaying a number of people, I would like to fetch and display only `name` while I want to display all columns / relationship in a UI page showing only a few people.\n\nI can create two sets of APIs with different `include_columns` and `url_prefix`.  But, I was wondering if there is a way to make one set of API handle it like passing a parameter `https://myhost.com/pserson/?q=some_query&view=detail` or `https://myhost.com/pserson/?q=some_query&view=list`.  `view=detail` is to return all columns and `view=list` is to return the `name` column.\n\nThank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/534", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/534/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/534/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/534", "id": 155118861, "node_id": "MDU6SXNzdWUxNTUxMTg4NjE=", "number": 534, "title": "Unclear error message when giving resource ID as integer instead of string", "user": {"login": "eualin", "id": 3636537, "node_id": "MDQ6VXNlcjM2MzY1Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3636537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eualin", "html_url": "https://github.com/eualin", "followers_url": "https://api.github.com/users/eualin/followers", "following_url": "https://api.github.com/users/eualin/following{/other_user}", "gists_url": "https://api.github.com/users/eualin/gists{/gist_id}", "starred_url": "https://api.github.com/users/eualin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eualin/subscriptions", "organizations_url": "https://api.github.com/users/eualin/orgs", "repos_url": "https://api.github.com/users/eualin/repos", "events_url": "https://api.github.com/users/eualin/events{/privacy}", "received_events_url": "https://api.github.com/users/eualin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 377404252, "node_id": "MDU6TGFiZWwzNzc0MDQyNTI=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/easy", "name": "easy", "color": "d93f0b", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-16T20:50:28Z", "updated_at": "2016-10-29T00:53:01Z", "closed_at": "2016-10-29T00:53:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting the following response error while trying to update a table with PATCH:\n\n```\n{u'errors': [{u'status': 409, u'code': None, u'links': None, u'title': None, u'detail': u'ID must be 1, not 1', u'source': None, u'meta': None, u'id': None}], u'meta': {}, u'jsonapi': {u'version': u'1.0'}}\n```\n\nHere is the SQLAlchemy class:\n\n```\nclass Stat(postgres.Model):\n\n    __tablename__ = 'stats'\n\n    def __init__(self,\n        res,\n        met,\n        cou\n    ):\n        self.res = res\n        self.met = met\n        self.cou = cou\n\n    id = postgres.Column(postgres.Integer , primary_key=True , autoincrement=True)\n    res = postgres.Column(postgres.Enum('h' , 'd' , name='stat_res_enum') , nullable=False , unique=False)\n    met = postgres.Column(postgres.Enum('u_s' , 'o_t' , name='sta_met_enum') , nullable=False , unique=False)\n    cou = postgres.Column(postgres.BigInteger , nullable=False , unique=False)\n```\n\nInitially, the table is empty:\n\n```\nresponse = requests.get(url=\"http://127.0.0.1/api/stats\",headers={'Accept': 'application/vnd.api+json'})\nresponse.json()\n```\n\nThe response is:\n\n```\n{u'meta': {u'total': 0}, u'data': [], u'jsonapi': {u'version': u'1.0'}, u'links': {u'prev': u'http://127.0.0.1/api/stats?page[number]=0&page[size]=10', u'self': u'/api/stats', u'next': u'http://127.0.0.1/api/stats?page[number]=2&page[size]=10', u'last': u'http://127.0.0.1/api/stats?page[number]=0&page[size]=10', u'first': u'http://127.0.0.1/api/stats?page[number]=1&page[size]=10'}}\n```\n\nFirst, let's insert some data:\n\n```\ndata = {\n    'data':{\n        'type':'stats',\n        'attributes':{\n            \"res\":u\"h\",\n            \"met\":u\"u_s\",\n            \"cou\":1\n        }\n    }\n}\nresponse = requests.post(url=\"http://127.0.0.1/api/stats\",data=json.dumps(data),headers={'Content-Type': 'application/vnd.api+json', 'Accept': 'application/vnd.api+json'})\nresponse.json()\n```\n\nThe response is:\n\n```\n{u'data': {u'attributes': {u'met': u'u_s', u'cou': 1, u'res': u'h'}, u'type': u'stats', u'id': u'1', u'links': {u'self': u'http://127.0.0.1/api/stats/1'}}, u'jsonapi': {u'version': u'1.0'}}\n```\n\nThen, let's update them:\n\n```\ndata = {\n    'data':{\n        \"type\":'stats',\n        \"id\":1,\n        'attributes':{\n            \"cou\":3\n        }\n    }\n}\nresponse = requests.patch(url=\"http://127.0.0.1/api/stats/1\",data=json.dumps(data),headers={'Accept' : 'application/vnd.api+json' , 'Content-Type' : 'application/vnd.api+json'})\nresponse.json()\n```\n\nThe response is:\n\n```\n{u'errors': [{u'status': 409, u'code': None, u'links': None, u'title': None, u'detail': u'ID must be 1, not 1', u'source': None, u'meta': None, u'id': None}], u'meta': {}, u'jsonapi': {u'version': u'1.0'}}\n```\n\nI have also tried to cast the value of \"id\" variable to String:\n\n```\ndata = {\n    'data':{\n        \"type\":'stats',\n        \"id\":\"1\",\n        'attributes':{\n            \"cou\":3\n        }\n    }\n}\nresponse = requests.patch(url=\"http://127.0.0.1/api/stats/1\",data=json.dumps(data),headers={'Accept' : 'application/vnd.api+json' , 'Content-Type' : 'application/vnd.api+json'})\nresponse.json()\n```\n\nBut then I got the following error:\n\n```\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/eualin/.bin/anaconda2/lib/python2.7/site-packages/requests/models.py\", line 808, in json\n    return complexjson.loads(self.text, **kwargs)\n  File \"/home/eualin/.bin/anaconda2/lib/python2.7/json/__init__.py\", line 339, in loads\n    return _default_decoder.decode(s)\n  File \"/home/eualin/.bin/anaconda2/lib/python2.7/json/decoder.py\", line 364, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n  File \"/home/eualin/.bin/anaconda2/lib/python2.7/json/decoder.py\", line 382, in raw_decode\n    raise ValueError(\"No JSON object could be decoded\")\nValueError: No JSON object could be decoded\n```\n\nIs this a bug or what?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/530", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/530/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/530/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/530", "id": 152923335, "node_id": "MDU6SXNzdWUxNTI5MjMzMzU=", "number": 530, "title": "Rewrite search module with better object-oriented idioms", "user": {"login": "jfinkels", "id": 121755, "node_id": "MDQ6VXNlcjEyMTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/121755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkels", "html_url": "https://github.com/jfinkels", "followers_url": "https://api.github.com/users/jfinkels/followers", "following_url": "https://api.github.com/users/jfinkels/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkels/subscriptions", "organizations_url": "https://api.github.com/users/jfinkels/orgs", "repos_url": "https://api.github.com/users/jfinkels/repos", "events_url": "https://api.github.com/users/jfinkels/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-04T03:41:00Z", "updated_at": "2016-05-10T19:02:30Z", "closed_at": "2016-05-10T19:02:30Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Each operator should have its own class and each class should be in charge of generating a SQLAlchemy expression. Each type of filter (conjunction, disjunction, negation, atomic) should have its own class and should be in charge of generating the SQLAlchemy expression it represents. In other words, move the functionality of `create_operation` and `create_filter` into instance methods of `Operator` and `Filter` classes.\n\nThis may be of interest to @kopf.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/524", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/524/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/524/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/524", "id": 152699662, "node_id": "MDU6SXNzdWUxNTI2OTk2NjI=", "number": 524, "title": "Break up documentation on fetching resources", "user": {"login": "jfinkels", "id": 121755, "node_id": "MDQ6VXNlcjEyMTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/121755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkels", "html_url": "https://github.com/jfinkels", "followers_url": "https://api.github.com/users/jfinkels/followers", "following_url": "https://api.github.com/users/jfinkels/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkels/subscriptions", "organizations_url": "https://api.github.com/users/jfinkels/orgs", "repos_url": "https://api.github.com/users/jfinkels/repos", "events_url": "https://api.github.com/users/jfinkels/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 886200, "node_id": "MDU6TGFiZWw4ODYyMDA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/documentation", "name": "documentation", "color": "444444", "default": true, "description": null}, {"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-03T04:58:14Z", "updated_at": "2016-05-03T06:12:02Z", "closed_at": "2016-05-03T06:12:02Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The documentation in `docs/fetching.rst` is too long. Break it up into multiple files and add a TOC tree to the original.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/522", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/522/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/522/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/522", "id": 152457024, "node_id": "MDU6SXNzdWUxNTI0NTcwMjQ=", "number": 522, "title": "Review and rewrite helper functions", "user": {"login": "jfinkels", "id": 121755, "node_id": "MDQ6VXNlcjEyMTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/121755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkels", "html_url": "https://github.com/jfinkels", "followers_url": "https://api.github.com/users/jfinkels/followers", "following_url": "https://api.github.com/users/jfinkels/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkels/subscriptions", "organizations_url": "https://api.github.com/users/jfinkels/orgs", "repos_url": "https://api.github.com/users/jfinkels/repos", "events_url": "https://api.github.com/users/jfinkels/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-01T21:46:47Z", "updated_at": "2016-05-05T06:21:42Z", "closed_at": "2016-05-05T06:21:42Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The helper functions in `helpers.py` were never very well-designed. I believe much of the functionality is actually captured by functions built-in to SQLAlchemy, but I just never knew about them. For example, there is a [method for accessing primary keys](http://docs.sqlalchemy.org/en/latest/orm/mapping_api.html#sqlalchemy.orm.mapper.Mapper.primary_key_from_instance) for a given instance that could be used in place of `primary_key_values`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/515", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/515/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/515/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/515", "id": 148092960, "node_id": "MDU6SXNzdWUxNDgwOTI5NjA=", "number": 515, "title": "combine filter and function evaluation", "user": {"login": "FrankMN", "id": 11390679, "node_id": "MDQ6VXNlcjExMzkwNjc5", "avatar_url": "https://avatars0.githubusercontent.com/u/11390679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrankMN", "html_url": "https://github.com/FrankMN", "followers_url": "https://api.github.com/users/FrankMN/followers", "following_url": "https://api.github.com/users/FrankMN/following{/other_user}", "gists_url": "https://api.github.com/users/FrankMN/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrankMN/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrankMN/subscriptions", "organizations_url": "https://api.github.com/users/FrankMN/orgs", "repos_url": "https://api.github.com/users/FrankMN/repos", "events_url": "https://api.github.com/users/FrankMN/events{/privacy}", "received_events_url": "https://api.github.com/users/FrankMN/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485859, "node_id": "MDU6TGFiZWw0ODU4NTk=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-13T15:10:59Z", "updated_at": "2016-04-27T07:55:56Z", "closed_at": "2016-04-27T07:55:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to use filter together with a function evaluation, which is like:\n`evaluated = session.query(*processed).filter_by(**filter).one()`\nWhile it seems no such feature yet. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/508", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/508/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/508/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/508", "id": 144154630, "node_id": "MDU6SXNzdWUxNDQxNTQ2MzA=", "number": 508, "title": "Adding a pre-commit processor?", "user": {"login": "elektito", "id": 28643, "node_id": "MDQ6VXNlcjI4NjQz", "avatar_url": "https://avatars1.githubusercontent.com/u/28643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elektito", "html_url": "https://github.com/elektito", "followers_url": "https://api.github.com/users/elektito/followers", "following_url": "https://api.github.com/users/elektito/following{/other_user}", "gists_url": "https://api.github.com/users/elektito/gists{/gist_id}", "starred_url": "https://api.github.com/users/elektito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elektito/subscriptions", "organizations_url": "https://api.github.com/users/elektito/orgs", "repos_url": "https://api.github.com/users/elektito/repos", "events_url": "https://api.github.com/users/elektito/events{/privacy}", "received_events_url": "https://api.github.com/users/elektito/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-29T04:42:07Z", "updated_at": "2016-06-09T02:25:39Z", "closed_at": "2016-06-09T02:25:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe there is a case to be made for a adding \"pre-commit processors\"; that is, one or more callbacks which are called after insertion to/deletion from the database but before the transaction is actually committed. \n\nHere's the use case I have in mind. An object is posted. We insert it into database so that an `id` is assigned to it and then send it on to a another application (or database), one that needs the `id` pre-assigned, for verification. This application might signal a verification failure and we might need to rollback the transaction at this point.\n\nWe can't do this with the \"postprocessors\" we have right now because those are called after the transaction is committed. There are two ways to implement this, I believe. One is to call the postprocessors before the transaction is committed, and rollback the transaction if a `ProcessingException` is raised. The other is to add a new category of processors. We might call these `precommitprocessors` or something and they are called just before the transaction is committed and give the user a chance to cancel everything.\n\nI personally suggest the first solution as it seems natural to me that when a `ProcessingException` is raised the user expects everything to be canceled.\n\nIf this is something that has chance of being accepted (whether the first solution is chosen or the second), I'm willing to write the patch myself and send a pull request.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/507", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/507/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/507/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/507", "id": 143936250, "node_id": "MDU6SXNzdWUxNDM5MzYyNTA=", "number": 507, "title": "For same model create multiple blueprints with different url_prefixes", "user": {"login": "mayuroks", "id": 2307810, "node_id": "MDQ6VXNlcjIzMDc4MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2307810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mayuroks", "html_url": "https://github.com/mayuroks", "followers_url": "https://api.github.com/users/mayuroks/followers", "following_url": "https://api.github.com/users/mayuroks/following{/other_user}", "gists_url": "https://api.github.com/users/mayuroks/gists{/gist_id}", "starred_url": "https://api.github.com/users/mayuroks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mayuroks/subscriptions", "organizations_url": "https://api.github.com/users/mayuroks/orgs", "repos_url": "https://api.github.com/users/mayuroks/repos", "events_url": "https://api.github.com/users/mayuroks/events{/privacy}", "received_events_url": "https://api.github.com/users/mayuroks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-28T09:26:23Z", "updated_at": "2016-04-04T21:05:22Z", "closed_at": "2016-04-04T21:05:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a model called Users, I want to create two blueprints for same model\n\n``` python\nusers_v1= manager.create_api_blueprint(\n    Users,\n    methods=['GET', 'POST', 'DELETE', 'PATCH'],\n    url_prefix=\"/api_v1\",\n    collection_name=\"users\",\n)\n\nusers_v2 = manager.create_api_blueprint(\n    Users,\n    methods=['GET', 'POST', 'DELETE', 'PATCH'],\n    url_prefix=\"/api_v2\",\n    collection_name=\"users\",\n)\n\n# Later on\napp.register_blueprint(users_v1)\napp.register_blueprint(users_v2)\n```\n\nWhen I run my app I get this error\n\n``` bash\nAssertionError: A blueprint's name collision occurred between <flask.blueprints.Blueprint object at 0x41a5fd0> and <flask.blueprints.Blueprint object at 0x41a5ed0>.  Both share the same nam\ne \"usersapi0\".  Blueprints that are created on the fly need unique names.\n```\n\n**How to get around it ?**\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/505", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/505/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/505/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/505", "id": 142929474, "node_id": "MDU6SXNzdWUxNDI5Mjk0NzQ=", "number": 505, "title": "Flask Restless + Angular - $http PUT - 400 Bad Request", "user": {"login": "fergvick", "id": 13355832, "node_id": "MDQ6VXNlcjEzMzU1ODMy", "avatar_url": "https://avatars3.githubusercontent.com/u/13355832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fergvick", "html_url": "https://github.com/fergvick", "followers_url": "https://api.github.com/users/fergvick/followers", "following_url": "https://api.github.com/users/fergvick/following{/other_user}", "gists_url": "https://api.github.com/users/fergvick/gists{/gist_id}", "starred_url": "https://api.github.com/users/fergvick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fergvick/subscriptions", "organizations_url": "https://api.github.com/users/fergvick/orgs", "repos_url": "https://api.github.com/users/fergvick/repos", "events_url": "https://api.github.com/users/fergvick/events{/privacy}", "received_events_url": "https://api.github.com/users/fergvick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-23T11:04:35Z", "updated_at": "2016-03-23T13:12:25Z", "closed_at": "2016-03-23T13:12:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting a 400 Bad Request when trying to update the database with a PUT request through Angular's $http method (GET request returns without issues). The server is not logging an error. \nPostman returns;\n\n```\n<title>400 Bad Request</title>\n<h1>Bad Request</h1>\n<p>CSRF token missing or incorrect.</p>\n```\n\nHow does Flask-Restless handle CSRF tokens and ultimately how can I overcome this problem (I have checked that the information being submitted doesn't go out of the range of the database model).\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/504", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/504/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/504/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/504", "id": 141520212, "node_id": "MDU6SXNzdWUxNDE1MjAyMTI=", "number": 504, "title": "One-to-many relationships on the same table", "user": {"login": "synaufal", "id": 3159614, "node_id": "MDQ6VXNlcjMxNTk2MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3159614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/synaufal", "html_url": "https://github.com/synaufal", "followers_url": "https://api.github.com/users/synaufal/followers", "following_url": "https://api.github.com/users/synaufal/following{/other_user}", "gists_url": "https://api.github.com/users/synaufal/gists{/gist_id}", "starred_url": "https://api.github.com/users/synaufal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/synaufal/subscriptions", "organizations_url": "https://api.github.com/users/synaufal/orgs", "repos_url": "https://api.github.com/users/synaufal/repos", "events_url": "https://api.github.com/users/synaufal/events{/privacy}", "received_events_url": "https://api.github.com/users/synaufal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-17T09:00:59Z", "updated_at": "2016-03-17T12:00:37Z", "closed_at": "2016-03-17T12:00:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working on one-to-many relationship and I create one table which has two column with same foreign key. For example, table Person and table Daughter. When I am requesting:\n`GET /api/person/1/relationships/daughter HTTP/1.1`\nIt returns all Person, rather than all Daughter of Person 1. Do you have any idea?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/499", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/499/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/499/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/499", "id": 140028492, "node_id": "MDU6SXNzdWUxNDAwMjg0OTI=", "number": 499, "title": "Deserializers should expect a complete JSON document, not just the object under the 'data' key", "user": {"login": "jfinkels", "id": 121755, "node_id": "MDQ6VXNlcjEyMTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/121755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkels", "html_url": "https://github.com/jfinkels", "followers_url": "https://api.github.com/users/jfinkels/followers", "following_url": "https://api.github.com/users/jfinkels/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkels/subscriptions", "organizations_url": "https://api.github.com/users/jfinkels/orgs", "repos_url": "https://api.github.com/users/jfinkels/repos", "events_url": "https://api.github.com/users/jfinkels/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-10T22:32:09Z", "updated_at": "2016-04-28T05:17:32Z", "closed_at": "2016-04-28T05:17:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This will allow us to use, for example, the [marshmallow-jsonapi](https://marshmallow-jsonapi.readthedocs.org/en/latest/index.html) deserializer. It also is a little bit more standards-friendly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/495", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/495/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/495/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/495", "id": 136826470, "node_id": "MDU6SXNzdWUxMzY4MjY0NzA=", "number": 495, "title": "Best way to select 'distinct' values from a model field", "user": {"login": "roemhildtg", "id": 5471079, "node_id": "MDQ6VXNlcjU0NzEwNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5471079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roemhildtg", "html_url": "https://github.com/roemhildtg", "followers_url": "https://api.github.com/users/roemhildtg/followers", "following_url": "https://api.github.com/users/roemhildtg/following{/other_user}", "gists_url": "https://api.github.com/users/roemhildtg/gists{/gist_id}", "starred_url": "https://api.github.com/users/roemhildtg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roemhildtg/subscriptions", "organizations_url": "https://api.github.com/users/roemhildtg/orgs", "repos_url": "https://api.github.com/users/roemhildtg/repos", "events_url": "https://api.github.com/users/roemhildtg/events{/privacy}", "received_events_url": "https://api.github.com/users/roemhildtg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485862, "node_id": "MDU6TGFiZWw0ODU4NjI=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-26T21:59:19Z", "updated_at": "2016-03-07T02:29:28Z", "closed_at": "2016-03-07T02:29:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I create custom function on a sqlalchemy model and return a set of values to flask restless so that a GET request can access that set of values in a JSON response?\n\nUltimitely what I would like to do is have a custom function on a model, that returns distinct values for a field argument.\n\n```\nclass MyModel(db.Model):\n    #...model fields\n    def get_unique_values(self, fieldname):\n        #returns an array of unique values for a given field\n        #['val1', 'val2' ] \n        return db.session.query(getattr(self, field)).distinct().all()\n```\n\nHas anyone accomplished something like this with flask-restless?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/492", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/492/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/492/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/492", "id": 136257022, "node_id": "MDU6SXNzdWUxMzYyNTcwMjI=", "number": 492, "title": "Flask-Restless doesn't follow JSON API filtering recommendation", "user": {"login": "synaufal", "id": 3159614, "node_id": "MDQ6VXNlcjMxNTk2MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3159614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/synaufal", "html_url": "https://github.com/synaufal", "followers_url": "https://api.github.com/users/synaufal/followers", "following_url": "https://api.github.com/users/synaufal/following{/other_user}", "gists_url": "https://api.github.com/users/synaufal/gists{/gist_id}", "starred_url": "https://api.github.com/users/synaufal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/synaufal/subscriptions", "organizations_url": "https://api.github.com/users/synaufal/orgs", "repos_url": "https://api.github.com/users/synaufal/repos", "events_url": "https://api.github.com/users/synaufal/events{/privacy}", "received_events_url": "https://api.github.com/users/synaufal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-02-25T02:34:12Z", "updated_at": "2016-05-03T05:27:45Z", "closed_at": "2016-05-03T05:27:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the filtering format from [JSON API recommendations](http://jsonapi.org/recommendations/#filtering) like this:\n\n```\n?filter[author]=12\n```\n\nBut in flask-restless the format is\n\n```\n?filter[objects]=[{\"name\":\"author\",\"op\":\"eq\",\"val\":12}]\n```\n\nHow can flask-restless compromise this difference?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/488", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/488/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/488/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/488", "id": 134186749, "node_id": "MDU6SXNzdWUxMzQxODY3NDk=", "number": 488, "title": "Allow arbitrary negations in filter objects", "user": {"login": "jfinkels", "id": 121755, "node_id": "MDQ6VXNlcjEyMTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/121755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkels", "html_url": "https://github.com/jfinkels", "followers_url": "https://api.github.com/users/jfinkels/followers", "following_url": "https://api.github.com/users/jfinkels/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkels/subscriptions", "organizations_url": "https://api.github.com/users/jfinkels/orgs", "repos_url": "https://api.github.com/users/jfinkels/repos", "events_url": "https://api.github.com/users/jfinkels/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-17T05:51:33Z", "updated_at": "2016-04-29T05:41:43Z", "closed_at": "2016-04-29T05:41:43Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Allow filters like\n\n```\n{'not': {'name': 'author', 'op': 'has', 'val': {'name': 'age', 'op': 'lt', 'val': 40}}}\n```\n\nand more generally\n\n```\n{'not': <filter object>}\n```\n\nThis would fix issue #481 (and supercede pull request #482).\n\nThis would require\n1. adding a `NegationFilter`, similar to the `ConjunctionFilter` and `DisjunctionFilter` objects,\n2. adding a note in the documentation,\n3. adding a unit test, preferably one for negating simple filter objects, and one for negating relationship filters.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/486", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/486/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/486/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/486", "id": 133145720, "node_id": "MDU6SXNzdWUxMzMxNDU3MjA=", "number": 486, "title": "400 - Bad Request / Unable to decode data", "user": {"login": "feoh", "id": 330070, "node_id": "MDQ6VXNlcjMzMDA3MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/330070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feoh", "html_url": "https://github.com/feoh", "followers_url": "https://api.github.com/users/feoh/followers", "following_url": "https://api.github.com/users/feoh/following{/other_user}", "gists_url": "https://api.github.com/users/feoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/feoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feoh/subscriptions", "organizations_url": "https://api.github.com/users/feoh/orgs", "repos_url": "https://api.github.com/users/feoh/repos", "events_url": "https://api.github.com/users/feoh/events{/privacy}", "received_events_url": "https://api.github.com/users/feoh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-12T02:59:41Z", "updated_at": "2016-02-19T11:22:32Z", "closed_at": "2016-02-19T11:22:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Folks. I'm in a frustrating fix with flask-restless. I created a quick little starter API to get my feet wet, and it WORKED! I was able to GET and PUT requests, but then when I tried to run it again the next day, I started seeing the following exception on the server side:\n\n```\n--------------------------------------------------------------------------------\nERROR in views [/Users/cpatti/anaconda/lib/python3.5/site-packages/flask_restless/views.py:1437]:\n400: Bad Request\n--------------------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/cpatti/anaconda/lib/python3.5/site-packages/flask/wrappers.py\", line 140, in get_json\n    rv = json.loads(data)\n  File \"/Users/cpatti/anaconda/lib/python3.5/site-packages/flask/json.py\", line 149, in loads\n    return _json.loads(s, **kwargs)\n  File \"/Users/cpatti/anaconda/lib/python3.5/json/__init__.py\", line 332, in loads\n    return cls(**kw).decode(s)\n  File \"/Users/cpatti/anaconda/lib/python3.5/json/decoder.py\", line 342, in decode\n    raise JSONDecodeError(\"Extra data\", s, end)\njson.decoder.JSONDecodeError: Extra data: line 5 column 1 (char 33)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/cpatti/anaconda/lib/python3.5/site-packages/flask_restless/views.py\", line 1435, in post\n    data = request.get_json() or {}\n  File \"/Users/cpatti/anaconda/lib/python3.5/site-packages/flask/wrappers.py\", line 145, in get_json\n    rv = self.on_json_loading_failed(e)\n  File \"/Users/cpatti/anaconda/lib/python3.5/site-packages/flask/wrappers.py\", line 162, in on_json_loading_failed\n    raise BadRequest()\nwerkzeug.exceptions.BadRequest: 400: Bad Request\n127.0.0.1 - - [11/Feb/2016 21:47:54] \"POST /api/tracked_item HTTP/1.1\" 400 -\n```\n\nHere is the client request POST:\n\n```\nPOST http://0.0.0.0:8907/api/tracked_item\nContent-Type: application/json\nAccept: application/json\n{\n\"description\": \"confidence\"\n}\n```\n\nAnd the response I get on the client is:\n\n```\n{\n  \"message\": \"Unable to decode data\"\n}\n// POST http://0.0.0.0:8907/api/tracked_item\n// HTTP/1.0 400 BAD REQUEST\n// Content-Type: application/json\n// Content-Length: 40\n// Vary: Accept\n// Content-Type: application/json\n// Server: Werkzeug/0.11.2 Python/3.5.1\n// Date: Fri, 12 Feb 2016 02:58:27 GMT\n// Request duration: 0.110875s\n```\n\nMy code is at https://github.com/feoh/clickerws/blob/master/clicker-ws.py\n\nI sincerely appreciate any clues!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/485", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/485/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/485/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/485", "id": 133025147, "node_id": "MDU6SXNzdWUxMzMwMjUxNDc=", "number": 485, "title": "documentation versioning", "user": {"login": "deanmalmgren", "id": 255672, "node_id": "MDQ6VXNlcjI1NTY3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/255672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deanmalmgren", "html_url": "https://github.com/deanmalmgren", "followers_url": "https://api.github.com/users/deanmalmgren/followers", "following_url": "https://api.github.com/users/deanmalmgren/following{/other_user}", "gists_url": "https://api.github.com/users/deanmalmgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/deanmalmgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deanmalmgren/subscriptions", "organizations_url": "https://api.github.com/users/deanmalmgren/orgs", "repos_url": "https://api.github.com/users/deanmalmgren/repos", "events_url": "https://api.github.com/users/deanmalmgren/events{/privacy}", "received_events_url": "https://api.github.com/users/deanmalmgren/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 886200, "node_id": "MDU6TGFiZWw4ODYyMDA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/documentation", "name": "documentation", "color": "444444", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-11T16:45:46Z", "updated_at": "2016-02-12T15:28:46Z", "closed_at": "2016-02-12T08:35:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've really been enjoying my first use of Flask-Restless, but I ran into [a problem](http://stackoverflow.com/questions/35331040/unable-to-trigger-flask-restless-postprocessor) trying to implement a `postprocessor` using Flask-Restless 0.17.0. It turns out that, in my googling of \"flask restless postprocessor\", I landed on the `latest` release of the Flask-Restless documentation, which appears to be based on a pre-release version of the docs and was not what I installed with `pip install Flask-Restless`. It might be better to configure readthedocs to have the `stable` release be the default documentation version when navigating to http://flask-restless.readthedocs.org/\n\nIt would also be helpful to have all Flask-Restless versions available.\n\nI'm not sure if this has something to do with the [github <-> readthedocs web hooks](http://read-the-docs.readthedocs.org/en/latest/webhooks.html) or configuration on readthedocs itself, but I thought I'd bring this to your attention so others can more easily use this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/483", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/483/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/483/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/483", "id": 131724371, "node_id": "MDU6SXNzdWUxMzE3MjQzNzE=", "number": 483, "title": "GET request after POST doesn't include new object", "user": {"login": "roemhildtg", "id": 5471079, "node_id": "MDQ6VXNlcjU0NzEwNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5471079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roemhildtg", "html_url": "https://github.com/roemhildtg", "followers_url": "https://api.github.com/users/roemhildtg/followers", "following_url": "https://api.github.com/users/roemhildtg/following{/other_user}", "gists_url": "https://api.github.com/users/roemhildtg/gists{/gist_id}", "starred_url": "https://api.github.com/users/roemhildtg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roemhildtg/subscriptions", "organizations_url": "https://api.github.com/users/roemhildtg/orgs", "repos_url": "https://api.github.com/users/roemhildtg/repos", "events_url": "https://api.github.com/users/roemhildtg/events{/privacy}", "received_events_url": "https://api.github.com/users/roemhildtg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-05T18:52:32Z", "updated_at": "2016-02-10T19:17:38Z", "closed_at": "2016-02-10T19:17:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running into a recurring issue, although it doesn't occur consistently.\n\nAfter adding a new object via a POST request, the response includes the new id for the object.\nFor example: POST /api/my_table\n\n```\n{ \"name\": \"John\" }\n```\n\nreturns\n\n```\n{\"id\": 55, \"name\": \"John\"}\n```\n\nThen immediately after making the POST request, the GET request does not include the new object. \n\nThe issue doesn't always occur though, making it difficult to troubleshoot. Sometimes the GET request will load all of the results including the new object.\n- I'm running python 2.7.10 with flask-restless 0.17.0 on Windows 7 x64. \n- I'm using PostgreSQL with SQLAlchemy for my database. \n\nAny suggestions would be greatly appreciated.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/481", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/481/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/481/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/481", "id": 131526729, "node_id": "MDU6SXNzdWUxMzE1MjY3Mjk=", "number": 481, "title": "No support for \"not_any\"", "user": {"login": "tahoe", "id": 377709, "node_id": "MDQ6VXNlcjM3NzcwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/377709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tahoe", "html_url": "https://github.com/tahoe", "followers_url": "https://api.github.com/users/tahoe/followers", "following_url": "https://api.github.com/users/tahoe/following{/other_user}", "gists_url": "https://api.github.com/users/tahoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/tahoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tahoe/subscriptions", "organizations_url": "https://api.github.com/users/tahoe/orgs", "repos_url": "https://api.github.com/users/tahoe/repos", "events_url": "https://api.github.com/users/tahoe/events{/privacy}", "received_events_url": "https://api.github.com/users/tahoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-05T01:26:52Z", "updated_at": "2016-04-29T05:41:26Z", "closed_at": "2016-04-29T05:41:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been trying to figure out how to do a negative \"any\" search and couldn't find a way.\nSo I added one line to search.py\n`\n'not_any': lambda f, a, fn: ~f.any(_sub_operator(f, a, fn)),\n`\n\nand voila! it works. Any chance we can add this in? pretty dang simple update.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/480", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/480/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/480/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/480", "id": 131317823, "node_id": "MDU6SXNzdWUxMzEzMTc4MjM=", "number": 480, "title": "Tests for association proxies are failing", "user": {"login": "jfinkels", "id": 121755, "node_id": "MDQ6VXNlcjEyMTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/121755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkels", "html_url": "https://github.com/jfinkels", "followers_url": "https://api.github.com/users/jfinkels/followers", "following_url": "https://api.github.com/users/jfinkels/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkels/subscriptions", "organizations_url": "https://api.github.com/users/jfinkels/orgs", "repos_url": "https://api.github.com/users/jfinkels/repos", "events_url": "https://api.github.com/users/jfinkels/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-04T11:22:33Z", "updated_at": "2017-02-28T00:29:28Z", "closed_at": "2017-02-28T00:29:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I cannot figure out how to implement and/or test many-to-many relationships via association proxies. I could really use the help of someone with more knowledge. I won't be able to release version 1.0.0 without these changes.\n\nStart with, for example, `TestAssociationProxy` in `tests/test_fetching.py`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/479", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/479/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/479/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/479", "id": 131281450, "node_id": "MDU6SXNzdWUxMzEyODE0NTA=", "number": 479, "title": "Headers appear twice in response to the client", "user": {"login": "jfinkels", "id": 121755, "node_id": "MDQ6VXNlcjEyMTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/121755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkels", "html_url": "https://github.com/jfinkels", "followers_url": "https://api.github.com/users/jfinkels/followers", "following_url": "https://api.github.com/users/jfinkels/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkels/subscriptions", "organizations_url": "https://api.github.com/users/jfinkels/orgs", "repos_url": "https://api.github.com/users/jfinkels/repos", "events_url": "https://api.github.com/users/jfinkels/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-02-04T08:53:50Z", "updated_at": "2016-10-30T19:15:14Z", "closed_at": "2016-10-30T19:15:14Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Some headers seem to appear twice when receiving a response from Flask-Restless.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/478", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/478/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/478/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/478", "id": 131276787, "node_id": "MDU6SXNzdWUxMzEyNzY3ODc=", "number": 478, "title": "Support the JSON API JSON Patch extension", "user": {"login": "jfinkels", "id": 121755, "node_id": "MDQ6VXNlcjEyMTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/121755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkels", "html_url": "https://github.com/jfinkels", "followers_url": "https://api.github.com/users/jfinkels/followers", "following_url": "https://api.github.com/users/jfinkels/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkels/subscriptions", "organizations_url": "https://api.github.com/users/jfinkels/orgs", "repos_url": "https://api.github.com/users/jfinkels/repos", "events_url": "https://api.github.com/users/jfinkels/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-04T08:25:30Z", "updated_at": "2016-06-09T02:29:26Z", "closed_at": "2016-06-09T02:29:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "http://jsonapi.org/extensions/jsonpatch/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/477", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/477/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/477/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/477", "id": 131276594, "node_id": "MDU6SXNzdWUxMzEyNzY1OTQ=", "number": 477, "title": "Support the JSON API Bulk extension", "user": {"login": "jfinkels", "id": 121755, "node_id": "MDQ6VXNlcjEyMTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/121755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkels", "html_url": "https://github.com/jfinkels", "followers_url": "https://api.github.com/users/jfinkels/followers", "following_url": "https://api.github.com/users/jfinkels/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkels/subscriptions", "organizations_url": "https://api.github.com/users/jfinkels/orgs", "repos_url": "https://api.github.com/users/jfinkels/repos", "events_url": "https://api.github.com/users/jfinkels/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-04T08:23:57Z", "updated_at": "2016-06-09T02:29:58Z", "closed_at": "2016-06-09T02:29:58Z", "author_association": "OWNER", "active_lock_reason": null, "body": "http://jsonapi.org/extensions/bulk/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/476", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/476/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/476/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/476", "id": 129815775, "node_id": "MDU6SXNzdWUxMjk4MTU3NzU=", "number": 476, "title": "Overridden primary key not respected in links", "user": {"login": "kopf", "id": 1115852, "node_id": "MDQ6VXNlcjExMTU4NTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1115852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kopf", "html_url": "https://github.com/kopf", "followers_url": "https://api.github.com/users/kopf/followers", "following_url": "https://api.github.com/users/kopf/following{/other_user}", "gists_url": "https://api.github.com/users/kopf/gists{/gist_id}", "starred_url": "https://api.github.com/users/kopf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kopf/subscriptions", "organizations_url": "https://api.github.com/users/kopf/orgs", "repos_url": "https://api.github.com/users/kopf/repos", "events_url": "https://api.github.com/users/kopf/events{/privacy}", "received_events_url": "https://api.github.com/users/kopf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-29T16:28:49Z", "updated_at": "2016-03-17T04:51:57Z", "closed_at": "2016-03-17T04:51:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On 1.0.0-dev (826c9d49c3d4a95f04c4ababd2b89f2045e59eee), when a `primary_key` is overridden for a certain API, this isn't respected by the response from a related API in the `links` section. e.g.:\n\n`create_api(model.Tenant, primary_key='_uuid')`\n\n```\n        \"tenant_user_maps\": {\n          \"data\": [],\n          \"links\": {\n            \"related\": \"http://localhost:8888/api/v1/tenants/2/tenant_user_maps\",\n            \"self\": \"http://localhost:8888/api/v1/tenants/2/relationships/tenant_user_maps\"\n          }\n        },\n```\n\nThe `/tenants/2/` in the links should really look something like `/tenants/uuid-string-here-etc/`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/475", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/475/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/475/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/475", "id": 129814265, "node_id": "MDU6SXNzdWUxMjk4MTQyNjU=", "number": 475, "title": "Incorrect serializer used when querying relationship", "user": {"login": "kopf", "id": 1115852, "node_id": "MDQ6VXNlcjExMTU4NTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1115852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kopf", "html_url": "https://github.com/kopf", "followers_url": "https://api.github.com/users/kopf/followers", "following_url": "https://api.github.com/users/kopf/following{/other_user}", "gists_url": "https://api.github.com/users/kopf/gists{/gist_id}", "starred_url": "https://api.github.com/users/kopf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kopf/subscriptions", "organizations_url": "https://api.github.com/users/kopf/orgs", "repos_url": "https://api.github.com/users/kopf/repos", "events_url": "https://api.github.com/users/kopf/events{/privacy}", "received_events_url": "https://api.github.com/users/kopf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-29T16:24:18Z", "updated_at": "2016-02-26T15:47:36Z", "closed_at": "2016-02-26T15:47:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\non 1.0.0-dev (`826c9d49c3d4a95f04c4ababd2b89f2045e59eee`), when querying a model that has a relationship, e.g. `http://localhost:8888/api/v1/users/1/posts`, and the `users` API has a specific serializer specified in its `create_api` call, this serializer will be used, even though we're requesting posts from the API, not users.\n\nApart from this, and one other issue, 1.0.0 looks very exciting indeed! Thanks for your hard work!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/474", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/474/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/474/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/474", "id": 128041465, "node_id": "MDU6SXNzdWUxMjgwNDE0NjU=", "number": 474, "title": "Include license files in pypi tarballs", "user": {"login": "AdamWill", "id": 916551, "node_id": "MDQ6VXNlcjkxNjU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/916551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamWill", "html_url": "https://github.com/AdamWill", "followers_url": "https://api.github.com/users/AdamWill/followers", "following_url": "https://api.github.com/users/AdamWill/following{/other_user}", "gists_url": "https://api.github.com/users/AdamWill/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamWill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamWill/subscriptions", "organizations_url": "https://api.github.com/users/AdamWill/orgs", "repos_url": "https://api.github.com/users/AdamWill/repos", "events_url": "https://api.github.com/users/AdamWill/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamWill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-21T22:58:47Z", "updated_at": "2016-02-04T08:08:10Z", "closed_at": "2016-02-04T08:08:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, there. The two license files - LICENSE.AGPL and LICENSE.BSD - are not included in the pypi tarballs for flask-restless. Per the Fedora licensing guidelines:\n\nhttps://fedoraproject.org/wiki/Packaging:LicensingGuidelines\n\nand similar guidelines for other distributions (e.g. Debian), it is a really good idea to include the license with the software. This is particularly the case for the BSD license, as one of the conditions of the BSD license is that it be included with distributions of the software - \"Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\" - so it's rather difficult when the canonical distribution of the source does _not_ contain the license.\n\nIf they could be included in the tarballs it'd be a help to distributions and other downstreams. Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/472", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/472/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/472/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/472", "id": 126728407, "node_id": "MDU6SXNzdWUxMjY3Mjg0MDc=", "number": 472, "title": "Multipatching is not working on queries that are returned by search criteria", "user": {"login": "pikamar", "id": 14360648, "node_id": "MDQ6VXNlcjE0MzYwNjQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/14360648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pikamar", "html_url": "https://github.com/pikamar", "followers_url": "https://api.github.com/users/pikamar/followers", "following_url": "https://api.github.com/users/pikamar/following{/other_user}", "gists_url": "https://api.github.com/users/pikamar/gists{/gist_id}", "starred_url": "https://api.github.com/users/pikamar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pikamar/subscriptions", "organizations_url": "https://api.github.com/users/pikamar/orgs", "repos_url": "https://api.github.com/users/pikamar/repos", "events_url": "https://api.github.com/users/pikamar/events{/privacy}", "received_events_url": "https://api.github.com/users/pikamar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 485863, "node_id": "MDU6TGFiZWw0ODU4NjM=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-14T19:22:46Z", "updated_at": "2016-02-04T08:24:52Z", "closed_at": "2016-02-04T08:24:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "My data in database:\n{\n    \"num_results\": 7,\n    \"objects\": [\n        {\n            \"birth_date\": \"1990-01-22\",\n            \"id\": 3,\n            \"name\": \"Sasa\"\n        },\n        {\n            \"birth_date\": \"1990-01-22\",\n            \"id\": 4,\n            \"name\": \"Peter 2\"\n        },\n        {\n            \"birth_date\": \"1990-01-22\",\n            \"id\": 5,\n            \"name\": \"Dacia\"\n        },\n        {\n            \"birth_date\": \"1990-01-22\",\n            \"id\": 6,\n            \"name\": \"Roma\"\n        },\n        {\n            \"birth_date\": \"1990-01-22\",\n            \"id\": 7,\n            \"name\": \"Lenta\"\n        },\n        {\n            \"birth_date\": \"1990-01-22\",\n            \"id\": 8,\n            \"name\": \"Peter 101\"\n        },\n        {\n            \"birth_date\": \"1990-01-22\",\n            \"id\": 9,\n            \"name\": \"\u0136\u0113rpis\"\n        }\n    ],\n    \"page\": 1,\n    \"total_pages\": 1\n}\n\nI wanted to update(PUT) birth_date value to \"22/01/1990\" for name that starts with P%, but as a result update was done for all 7 records. Expected result was 2 updated entries.\n\nFrom flask documentation:\nhttps://flask-restless.readthedocs.org/en/latest/customizing.html#allowmany\n\"... If search parameters are provided via the q query parameter as described in Making search queries, only those instances matching the search will be patched. ...\"\n\nScreenshot from Postman:\n![image](https://cloud.githubusercontent.com/assets/14360648/12334932/4b8e41ba-bb05-11e5-85d1-3980c4e464f3.png)\n\nDid not tried for DELETE.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/471", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/471/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/471/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/471", "id": 124581913, "node_id": "MDU6SXNzdWUxMjQ1ODE5MTM=", "number": 471, "title": "when get a not exist relationship table records, return the records", "user": {"login": "kevinxuv", "id": 4512444, "node_id": "MDQ6VXNlcjQ1MTI0NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4512444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinxuv", "html_url": "https://github.com/kevinxuv", "followers_url": "https://api.github.com/users/kevinxuv/followers", "following_url": "https://api.github.com/users/kevinxuv/following{/other_user}", "gists_url": "https://api.github.com/users/kevinxuv/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinxuv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinxuv/subscriptions", "organizations_url": "https://api.github.com/users/kevinxuv/orgs", "repos_url": "https://api.github.com/users/kevinxuv/repos", "events_url": "https://api.github.com/users/kevinxuv/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinxuv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-02T09:11:02Z", "updated_at": "2016-01-04T08:02:18Z", "closed_at": "2016-01-04T08:02:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "pre-condition:\ntable a to table b is one-to-many relationship\ntable a id 1 is not related table b id 2\nobserved result: when I GET /api/tablea/1/tableb/2, it return 200, and the response is the same as /tableb/2\nexpected result: 400\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/469", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/469/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/469/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/469/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/469", "id": 120367846, "node_id": "MDU6SXNzdWUxMjAzNjc4NDY=", "number": 469, "title": "LIKE Filter doesn't work properly for particular values like %ac% and %de%", "user": {"login": "hussaintamboli", "id": 2324958, "node_id": "MDQ6VXNlcjIzMjQ5NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2324958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hussaintamboli", "html_url": "https://github.com/hussaintamboli", "followers_url": "https://api.github.com/users/hussaintamboli/followers", "following_url": "https://api.github.com/users/hussaintamboli/following{/other_user}", "gists_url": "https://api.github.com/users/hussaintamboli/gists{/gist_id}", "starred_url": "https://api.github.com/users/hussaintamboli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hussaintamboli/subscriptions", "organizations_url": "https://api.github.com/users/hussaintamboli/orgs", "repos_url": "https://api.github.com/users/hussaintamboli/repos", "events_url": "https://api.github.com/users/hussaintamboli/events{/privacy}", "received_events_url": "https://api.github.com/users/hussaintamboli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485861, "node_id": "MDU6TGFiZWw0ODU4NjE=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-04T09:52:50Z", "updated_at": "2016-02-04T08:36:49Z", "closed_at": "2016-02-04T08:36:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have rows in my table having account as title. But when I use below filter, It doesn't search it\n\n```\n{\n    \"filters\": [\n        {\"name\":\"title\",\"op\":\"like\",\"val\":\"%account%\"}\n    ]\n}\n```\n\nThe value that is searched in the SELECT query is `'\\xef\\xbf\\xbdcount%'`\n\nAnd when I search some other string using the same filter\n\n```\n{\n    \"filters\": [\n        {\"name\":\"title\",\"op\":\"like\",\"val\":\"%customer%\"}\n    ]\n}\n```\n\nI see the correct value being searched. viz `'customer'`\n\nIt also doesn't work for %designer%.\n\nI don't understand what is going on.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/467", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/467/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/467/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/467/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/467", "id": 113083331, "node_id": "MDU6SXNzdWUxMTMwODMzMzE=", "number": 467, "title": "How to bulk update using patch ?", "user": {"login": "mayuroks", "id": 2307810, "node_id": "MDQ6VXNlcjIzMDc4MTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2307810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mayuroks", "html_url": "https://github.com/mayuroks", "followers_url": "https://api.github.com/users/mayuroks/followers", "following_url": "https://api.github.com/users/mayuroks/following{/other_user}", "gists_url": "https://api.github.com/users/mayuroks/gists{/gist_id}", "starred_url": "https://api.github.com/users/mayuroks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mayuroks/subscriptions", "organizations_url": "https://api.github.com/users/mayuroks/orgs", "repos_url": "https://api.github.com/users/mayuroks/repos", "events_url": "https://api.github.com/users/mayuroks/events{/privacy}", "received_events_url": "https://api.github.com/users/mayuroks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 485863, "node_id": "MDU6TGFiZWw0ODU4NjM=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-23T19:18:06Z", "updated_at": "2016-02-04T08:41:25Z", "closed_at": "2016-02-04T08:41:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi I am **looking for bulk patch example.**\n1) I am using flask-restless\n2) in create_api, I have **done allow_patch_many=True**\n3) methods=['GET', 'POST', 'DELETE', 'PATCH']\n\nI have a simple **model**\n\n``` python\nclass Job(db.Model):\n    __tablename__ = \"jobs\"\n    id = db.Column(db.Integer, primary_key=True, autoincrement=True)\n    name = db.Column(db.Text)\n    interval = db.Column(db.Integer)\n    func = db.Column(db.LargeBinary)\n    next_runtime = db.Column(db.DateTime)\n```\n\nBut when I **try to send a patch request like below, I get 500 error**\n\n``` python\nfrom request import patch\nimport json\n\ndata = [{'id':1, 'name': 'wow'}, {'id':2, 'name': 'hey'}]\nres = patch(url='http://127.0.0.1:5000/api/jobs', data=json.dumps(data))\nres.status_code  => 500\n```\n\n**I have multiple objects of same model.**\nI just want an example of bulk updating those objects at once.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/466", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/466/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/466/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/466", "id": 111896650, "node_id": "MDU6SXNzdWUxMTE4OTY2NTA=", "number": 466, "title": "How to delete \"message\" field when ProcessingException is raisen", "user": {"login": "aguirrel", "id": 697379, "node_id": "MDQ6VXNlcjY5NzM3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/697379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aguirrel", "html_url": "https://github.com/aguirrel", "followers_url": "https://api.github.com/users/aguirrel/followers", "following_url": "https://api.github.com/users/aguirrel/following{/other_user}", "gists_url": "https://api.github.com/users/aguirrel/gists{/gist_id}", "starred_url": "https://api.github.com/users/aguirrel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aguirrel/subscriptions", "organizations_url": "https://api.github.com/users/aguirrel/orgs", "repos_url": "https://api.github.com/users/aguirrel/repos", "events_url": "https://api.github.com/users/aguirrel/events{/privacy}", "received_events_url": "https://api.github.com/users/aguirrel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-16T19:33:37Z", "updated_at": "2015-10-19T13:47:30Z", "closed_at": "2015-10-19T13:47:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nThanks a lot for this amazing component! :)\n\nI'm trying to use redis as cache, like Issue #99, I'm using ProcessingException as was suggested and get some code from https://gist.github.com/mmautner/cd60fdd45934e5aa494d.\n\nMy problem is, the first time response is:\n\n<pre>\n{\n    \"num_results\": 0,\n    \"objects\": [],\n    \"page\": 1,\n    \"total_pages\": 0\n}\n</pre>\n\n\nSecond time (cached and raising exception) I get the following response:\n\n<pre>\n{\n    \"message\": {\n        \"num_results\": 0,\n        \"objects\": [],\n        \"page\": 1,\n        \"total_pages\": 0\n    }\n}\n</pre>\n\n\nHow could I avoid this new \"message\"?\n\nIs there some better solution to this not involving raising an exception?\n\nThanks a lot!\n\nBest regards,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/464", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/464/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/464/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/464", "id": 107115452, "node_id": "MDU6SXNzdWUxMDcxMTU0NTI=", "number": 464, "title": "GET_MANY operations don't respect the serializer option", "user": {"login": "spight-zz", "id": 1857915, "node_id": "MDQ6VXNlcjE4NTc5MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1857915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spight-zz", "html_url": "https://github.com/spight-zz", "followers_url": "https://api.github.com/users/spight-zz/followers", "following_url": "https://api.github.com/users/spight-zz/following{/other_user}", "gists_url": "https://api.github.com/users/spight-zz/gists{/gist_id}", "starred_url": "https://api.github.com/users/spight-zz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spight-zz/subscriptions", "organizations_url": "https://api.github.com/users/spight-zz/orgs", "repos_url": "https://api.github.com/users/spight-zz/repos", "events_url": "https://api.github.com/users/spight-zz/events{/privacy}", "received_events_url": "https://api.github.com/users/spight-zz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-18T02:07:33Z", "updated_at": "2015-09-18T20:13:08Z", "closed_at": "2015-09-18T20:13:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "As far as I can tell, GET_MANY operations don't respect the serializer function. Is this by design, or did it slip through the cracks?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/463", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/463/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/463/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/463", "id": 103235144, "node_id": "MDU6SXNzdWUxMDMyMzUxNDQ=", "number": 463, "title": "db.Interval claims to be supported but isn't", "user": {"login": "drmclean", "id": 8614203, "node_id": "MDQ6VXNlcjg2MTQyMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8614203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drmclean", "html_url": "https://github.com/drmclean", "followers_url": "https://api.github.com/users/drmclean/followers", "following_url": "https://api.github.com/users/drmclean/following{/other_user}", "gists_url": "https://api.github.com/users/drmclean/gists{/gist_id}", "starred_url": "https://api.github.com/users/drmclean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drmclean/subscriptions", "organizations_url": "https://api.github.com/users/drmclean/orgs", "repos_url": "https://api.github.com/users/drmclean/repos", "events_url": "https://api.github.com/users/drmclean/events{/privacy}", "received_events_url": "https://api.github.com/users/drmclean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-26T10:44:15Z", "updated_at": "2016-02-04T08:57:14Z", "closed_at": "2016-02-04T08:57:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "using db.Interval to specify a time interval is in the docs here: http://flask-restless.readthedocs.org/en/latest/requestformat.html\n\nhowever when defining a table with db.Interval and representing the interval as an integer number of seconds flask-restless throws a JSON error when attempting to return this value. \n\nThat is: I can successfully POST an Interval into the database but Flask throws \nTypeError: datetime.timedelta(1, 53600) is not JSON serializable when it attempts to construct the response to the post. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/461", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/461/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/461/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/461", "id": 101326450, "node_id": "MDU6SXNzdWUxMDEzMjY0NTA=", "number": 461, "title": "Request postprocessors does not triggerred on composite model", "user": {"login": "YosephHaryanto", "id": 1665453, "node_id": "MDQ6VXNlcjE2NjU0NTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1665453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YosephHaryanto", "html_url": "https://github.com/YosephHaryanto", "followers_url": "https://api.github.com/users/YosephHaryanto/followers", "following_url": "https://api.github.com/users/YosephHaryanto/following{/other_user}", "gists_url": "https://api.github.com/users/YosephHaryanto/gists{/gist_id}", "starred_url": "https://api.github.com/users/YosephHaryanto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YosephHaryanto/subscriptions", "organizations_url": "https://api.github.com/users/YosephHaryanto/orgs", "repos_url": "https://api.github.com/users/YosephHaryanto/repos", "events_url": "https://api.github.com/users/YosephHaryanto/events{/privacy}", "received_events_url": "https://api.github.com/users/YosephHaryanto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-17T02:43:43Z", "updated_at": "2016-02-04T09:02:33Z", "closed_at": "2016-02-04T09:02:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\n\nI'm trying to make a GET_MANY postprocessors for endpoints. The postprocessors works for endpoints like `building` works fine, but for endpoints like `building/{id}/rooms` , somehow the postprocessor does not triggrered. Anything that I might missed or should notice for this problem, or flask-restless does not support this yet? Thank you.\n\nCode to create the api\n\n``` python\nmanager.create_api(Buildings,\n                   url_prefix='/api/v1',\n                   methods=['GET', 'POST', 'PATCH', 'DELETE'],\n                   postprocessors={\n                        'GET_MANY': [default_serializer]\n                   })\n\nmanager.create_api(Rooms,\n                   url_prefix='/api/v1',\n                   methods=['GET'],\n                   postprocessors={\n                        'GET_MANY': [default_serializer]\n                   })\n\n```\n\nCode on the models\n\n``` python\n\nclass Buildings(BaseModel):\n    __table_name__ = 'buildings'\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n    rooms = relationship('Rooms', backref='buildings')\n\nclass Rooms(BaseModel):\n    __table_name__ = 'rooms'\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n    id_building = Column(Integer, ForeignKey(\"buildings.id\"))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/460", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/460/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/460/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/460", "id": 101010963, "node_id": "MDU6SXNzdWUxMDEwMTA5NjM=", "number": 460, "title": "custom serializer/deserializer", "user": {"login": "jklapuch", "id": 9129066, "node_id": "MDQ6VXNlcjkxMjkwNjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/9129066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jklapuch", "html_url": "https://github.com/jklapuch", "followers_url": "https://api.github.com/users/jklapuch/followers", "following_url": "https://api.github.com/users/jklapuch/following{/other_user}", "gists_url": "https://api.github.com/users/jklapuch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jklapuch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jklapuch/subscriptions", "organizations_url": "https://api.github.com/users/jklapuch/orgs", "repos_url": "https://api.github.com/users/jklapuch/repos", "events_url": "https://api.github.com/users/jklapuch/events{/privacy}", "received_events_url": "https://api.github.com/users/jklapuch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-14T13:30:12Z", "updated_at": "2016-02-04T08:48:09Z", "closed_at": "2016-02-04T08:48:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why not custom serializer/deserializer used for GET_MANY requests? Response always contains all attributes of the model.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/458", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/458/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/458/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/458", "id": 100320708, "node_id": "MDU6SXNzdWUxMDAzMjA3MDg=", "number": 458, "title": "PATCH returning 404 - but still makes the change", "user": {"login": "erikwilliamson", "id": 227050, "node_id": "MDQ6VXNlcjIyNzA1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/227050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikwilliamson", "html_url": "https://github.com/erikwilliamson", "followers_url": "https://api.github.com/users/erikwilliamson/followers", "following_url": "https://api.github.com/users/erikwilliamson/following{/other_user}", "gists_url": "https://api.github.com/users/erikwilliamson/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikwilliamson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikwilliamson/subscriptions", "organizations_url": "https://api.github.com/users/erikwilliamson/orgs", "repos_url": "https://api.github.com/users/erikwilliamson/repos", "events_url": "https://api.github.com/users/erikwilliamson/events{/privacy}", "received_events_url": "https://api.github.com/users/erikwilliamson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-11T14:09:49Z", "updated_at": "2016-02-04T08:45:17Z", "closed_at": "2016-02-04T08:45:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm using Flask-Restless 0.16.0 - this only happens when using the primary_key='some_field' parameter in the create_api() method. Always returns a 404 even thought the change gets made. I can post sample code but it's pretty easy to replicate.\n\nNo issue when patching a field other than that which is named in primary_key.\n\nI can work around the issue by adding the following around views.py line 1521:\n\n``` python\nif patchmany:\n    # ...\nelse:\n    if self.primary_key in data:\n        instid = data[self.primary_key]\n    result = self._instid_to_dict(instid)\n    # ...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/456", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/456/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/456/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/456", "id": 95312738, "node_id": "MDU6SXNzdWU5NTMxMjczOA==", "number": 456, "title": "Exclude relations in collections", "user": {"login": "samtux", "id": 545152, "node_id": "MDQ6VXNlcjU0NTE1Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/545152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samtux", "html_url": "https://github.com/samtux", "followers_url": "https://api.github.com/users/samtux/followers", "following_url": "https://api.github.com/users/samtux/following{/other_user}", "gists_url": "https://api.github.com/users/samtux/gists{/gist_id}", "starred_url": "https://api.github.com/users/samtux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samtux/subscriptions", "organizations_url": "https://api.github.com/users/samtux/orgs", "repos_url": "https://api.github.com/users/samtux/repos", "events_url": "https://api.github.com/users/samtux/events{/privacy}", "received_events_url": "https://api.github.com/users/samtux/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 485863, "node_id": "MDU6TGFiZWw0ODU4NjM=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-15T23:39:18Z", "updated_at": "2016-02-04T09:06:40Z", "closed_at": "2016-02-04T09:06:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I have the following response of a particular element:\n\n```\n/api/formularios/1108\n```\n\n``` json\n{\n  \"codigoformulario\": \"126PM04-PR82-F-A1\",\n  \"grupo\": {\n    \"idgrupotrabajo\": 540544,\n    \"nombre\": \"AGUAS SUBT\"\n  },\n  \"idformulario\": 1108,\n  \"idgrupotrabajo\": 540544,\n  \"nombreformulario\": \"Identificacion Terceros\"\n}\n```\n\nHowever when I deploy the relationship of \"preguntas\" delivered the collection of \"respuesta\" that is excluded in the \"Preguntas\" API configuration:\n\n```\n/api/formularios/1108/preguntas\n```\n\n``` json\n{\n  \"num_results\": 59,\n  \"objects\": [\n    {\n      \"formulario\": {\n        \"codigoformulario\": \"126PM04-PR82-F-A1\",\n        \"idformulario\": 1108,\n        \"idgrupotrabajo\": 540544,\n        \"nombreformulario\": \"Identificacion Terceros\"\n      },\n      \"idformulario\": 1108,\n      \"idpregunta\": 80135,\n      \"pregunta\": \"Correo Electronico\",\n      \"respuestas\": [ {...}, {...}]\n....\n```\n\nHere the API configuration of \"Preguntas\" excluding the relationship \"respuestas\":\n\n``` Python\npreguntas_api = manager.create_api_blueprint(Pregunta, methods=['GET'], collection_name='preguntas', results_per_page=10, exclude_columns=[\"respuestas\"])\n```\n\nHow I can exclude relations with two levels deep collections?, such as /api/formularios/1108/preguntas.\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/455", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/455/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/455/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/455", "id": 95272770, "node_id": "MDU6SXNzdWU5NTI3Mjc3MA==", "number": 455, "title": "Missing type check on \"toremove\" in _remove_from_relation in views.py", "user": {"login": "dan-compton", "id": 12177003, "node_id": "MDQ6VXNlcjEyMTc3MDAz", "avatar_url": "https://avatars0.githubusercontent.com/u/12177003?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dan-compton", "html_url": "https://github.com/dan-compton", "followers_url": "https://api.github.com/users/dan-compton/followers", "following_url": "https://api.github.com/users/dan-compton/following{/other_user}", "gists_url": "https://api.github.com/users/dan-compton/gists{/gist_id}", "starred_url": "https://api.github.com/users/dan-compton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dan-compton/subscriptions", "organizations_url": "https://api.github.com/users/dan-compton/orgs", "repos_url": "https://api.github.com/users/dan-compton/repos", "events_url": "https://api.github.com/users/dan-compton/events{/privacy}", "received_events_url": "https://api.github.com/users/dan-compton/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-15T19:35:53Z", "updated_at": "2016-02-04T09:08:50Z", "closed_at": "2016-02-04T09:08:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's the same type check that goes on _add_to_relation which takes care of the case in which add (toremove in this case) is a single dictionary rather than a list.  Simply wraps the dict in a list.\n\nhttps://github.com/jfinkels/flask-restless/pull/454\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/453", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/453/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/453/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/453", "id": 95210728, "node_id": "MDU6SXNzdWU5NTIxMDcyOA==", "number": 453, "title": "AttributeError: type object 'my_table' has no attribute '__tablename__'", "user": {"login": "romain-dartigues", "id": 393859, "node_id": "MDQ6VXNlcjM5Mzg1OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/393859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romain-dartigues", "html_url": "https://github.com/romain-dartigues", "followers_url": "https://api.github.com/users/romain-dartigues/followers", "following_url": "https://api.github.com/users/romain-dartigues/following{/other_user}", "gists_url": "https://api.github.com/users/romain-dartigues/gists{/gist_id}", "starred_url": "https://api.github.com/users/romain-dartigues/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romain-dartigues/subscriptions", "organizations_url": "https://api.github.com/users/romain-dartigues/orgs", "repos_url": "https://api.github.com/users/romain-dartigues/repos", "events_url": "https://api.github.com/users/romain-dartigues/events{/privacy}", "received_events_url": "https://api.github.com/users/romain-dartigues/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-15T14:33:24Z", "updated_at": "2018-05-30T17:47:17Z", "closed_at": "2016-02-04T10:51:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am trying to use flask-restless with [SQLAlchemy automap](http://docs.sqlalchemy.org/en/rel_1_0/orm/extensions/automap.html) in something in the lines of:\n\n``` python\n# in my config.py\nSQLALCHEMY_BINDS = {\n        'foo': 'mysql://user:pass@host/database_name?charset_latin1',\n        # ...\n}\n\n# somewhere in my flask application\nimport sqlalchemy.ext.automap\n\nBase = sqlalchemy.ext.automap.automap_base()\n\nimport flask.ext.sqlalchemy\nSQLA = flask.ext.sqlalchemy.SQLAlchemy()\nengine = SQLA.get_engine(application, 'foo')\n\nimport sqlalchemy.orm\nSession = sqlalchemy.orm.sessionmaker(autocommit=False, autoflush=False, bind=engine)\nmysession = sqlalchemy.orm.scoped_session(Session)\n\nBase.prepare(engine, reflect=True)\n\nimport flask.ext.restless\nmanager = flask.ext.restless.APIManager(application, session=mysession)\n\nfor table in Base.classes:\n        # the following fail with the error:\n        # AttributeError: type object 'my_table_name' has no attribute '__tablename__'\n        manager.create_api(table, url_prefix='/prefix/foo')\n        # the workaround is:\n        blueprint = manager.create_api_blueprint(table, collection_name=table.__name__)\n        application.register_blueprint(blueprint, url_prefix='/prefix/foo')\n```\n\nI have no idea if it's somehow related to #382.\n\nLibraries versions:\n\n```\nFlask==0.10.1\nFlask-Restless==0.17.0\nFlask-SQLAlchemy==2.0\n```\n\nRegards.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/451", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/451/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/451/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/451", "id": 92802234, "node_id": "MDU6SXNzdWU5MjgwMjIzNA==", "number": 451, "title": "How to call session.remove() \"on request end\" for SQLAlchemy", "user": {"login": "hussaintamboli", "id": 2324958, "node_id": "MDQ6VXNlcjIzMjQ5NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2324958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hussaintamboli", "html_url": "https://github.com/hussaintamboli", "followers_url": "https://api.github.com/users/hussaintamboli/followers", "following_url": "https://api.github.com/users/hussaintamboli/following{/other_user}", "gists_url": "https://api.github.com/users/hussaintamboli/gists{/gist_id}", "starred_url": "https://api.github.com/users/hussaintamboli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hussaintamboli/subscriptions", "organizations_url": "https://api.github.com/users/hussaintamboli/orgs", "repos_url": "https://api.github.com/users/hussaintamboli/repos", "events_url": "https://api.github.com/users/hussaintamboli/events{/privacy}", "received_events_url": "https://api.github.com/users/hussaintamboli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-03T06:18:23Z", "updated_at": "2015-10-05T11:04:32Z", "closed_at": "2015-10-05T05:15:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI use `sqlalchemy` and `flask-restless` for creating an API. I guess the transactions are not properly being committed because I just noticed that.\n- Db changes taking some time even though I am doing commit()\n- The num_results for a GET request are sometimes random. e.g. I have 10 rows in my country table. When I hit /country API, I get 10, 9, 10, 8 results. Something's wrong here.\n\nPreviously, I was using `flask-sqlalchemy` and I didn't have these issues.\n\nWhile reading sqlalchemy documentation, I found this post called [using thread local scope with web applications](http://docs.sqlalchemy.org/en/rel_1_0/orm/contextual.html#using-thread-local-scope-with-web-applications). It says and I quote\n\n> the process of integrating the Session with the web application has exactly two requirements:\n> 1. Create a single scoped_session registry when the web application first starts, ensuring that this object is accessible by the rest of the application.\n> 2. Ensure that scoped_session.remove() is called when the web request ends, usually by integrating with the web framework\u2019s event system to establish an \u201con request end\u201d event.\n\nI guess `flask-sqlalchemy` was doing this somehow. How do I do this with my existing setup\n\nSnippet from existing setup:\n\n```\n# ... snip of model.py ...\n\nModel = declarative_base()\nengine = create_engine('mysql://root:root123@localhost/mydb?charset=utf8', convert_unicode=True, echo=True)\nSession = orm.sessionmaker(autocommit=False, autoflush=True, bind=engine)\nmysession = orm.scoped_session(Session)\nModel.metadata.bind = engine\n\nclass Country(Model):\n\n    __tablename__ = 'country'\n\n    id = Column(Integer, primary_key=True)\n    name = Column(String(150), nullable=False, unique=True)\n    created_on = Column(DateTime, default=_get_date_time)\n    modified_on = Column(TIMESTAMP, onupdate=_get_date_time, nullable=False,      server_default=text(\"CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\"))\n    is_deleted = Column(mysql.TINYINT, nullable=False, default=0, server_default=text(\"0\")\n\n# .... snip of api.y ....\n# API is created using flask-restless and sqlalchemy\nmanager = flask.ext.restless.APIManager(app, session=mysession)\nmanager.create_api(Country, methods=['GET', 'POST'], url_prefix='/api/v1')\n```\n\nPlease help me out.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/449", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/449/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/449/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/449", "id": 92555522, "node_id": "MDU6SXNzdWU5MjU1NTUyMg==", "number": 449, "title": "Session should be rolled back on SQLAlchemyError", "user": {"login": "hussaintamboli", "id": 2324958, "node_id": "MDQ6VXNlcjIzMjQ5NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2324958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hussaintamboli", "html_url": "https://github.com/hussaintamboli", "followers_url": "https://api.github.com/users/hussaintamboli/followers", "following_url": "https://api.github.com/users/hussaintamboli/following{/other_user}", "gists_url": "https://api.github.com/users/hussaintamboli/gists{/gist_id}", "starred_url": "https://api.github.com/users/hussaintamboli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hussaintamboli/subscriptions", "organizations_url": "https://api.github.com/users/hussaintamboli/orgs", "repos_url": "https://api.github.com/users/hussaintamboli/repos", "events_url": "https://api.github.com/users/hussaintamboli/events{/privacy}", "received_events_url": "https://api.github.com/users/hussaintamboli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-02T05:49:33Z", "updated_at": "2016-02-04T09:48:59Z", "closed_at": "2016-02-04T08:18:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Yesterday, I came across a really painful issue.\n\nI use flask-restless and SQLAlchemy for my API. I got **Internal server error** due to `OperationalError` exception in one of my APIs. It was because one of the required column was not passed to the POST request. After that, for all the subsequent requests I started getting another Internal server error due to `InvalidRequestError` exception.\n\n```\nInvalidRequestError: This Session's transaction has been rolled back due to a previous exception during flush. To begin a new transaction with this Session, first issue Session.rollback() .... \n```\n\nAfter a long search I found that a `rollback()` [needs to be issued](http://docs.sqlalchemy.org/en/rel_0_8/faq.html#this-session-s-transaction-has-been-rolled-back-due-to-a-previous-exception-during-flush-or-similar) when an error occurs in `commit()`. But in this case the commit and rollback is not in my hands but restful's. \n\nSo I started looking where and when the rollback is being issued in restless and found [these lines](https://github.com/jfinkels/flask-restless/blob/master/flask_restless/views.py#L190-L192) in `views.py`\n\n```\n190 # TODO should `sqlalchemy.exc.InvalidRequestError`s also be caught?\n191 except (DataError, IntegrityError, ProgrammingError) as exception:\n192   session.rollback()\n```\n\nNote that `OperationalError` is not handled as a rollback case.\n\nSo as a FIX to my issue I modified the `views.py` and put `OperationalError` in it. Then I thought, to be on safer side why not issue the rollback on `SQLAlchemyError` (**SQLAlchemy base exception class**)\n\nI have created a pull request with my fix. \n\nPlease let me know your thoughts on this\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/448", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/448/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/448/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/448", "id": 91714020, "node_id": "MDU6SXNzdWU5MTcxNDAyMA==", "number": 448, "title": "Issues in flask-restless due to sqlalchemy.db.Boolean", "user": {"login": "hussaintamboli", "id": 2324958, "node_id": "MDQ6VXNlcjIzMjQ5NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2324958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hussaintamboli", "html_url": "https://github.com/hussaintamboli", "followers_url": "https://api.github.com/users/hussaintamboli/followers", "following_url": "https://api.github.com/users/hussaintamboli/following{/other_user}", "gists_url": "https://api.github.com/users/hussaintamboli/gists{/gist_id}", "starred_url": "https://api.github.com/users/hussaintamboli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hussaintamboli/subscriptions", "organizations_url": "https://api.github.com/users/hussaintamboli/orgs", "repos_url": "https://api.github.com/users/hussaintamboli/repos", "events_url": "https://api.github.com/users/hussaintamboli/events{/privacy}", "received_events_url": "https://api.github.com/users/hussaintamboli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-29T06:36:50Z", "updated_at": "2016-02-04T09:14:28Z", "closed_at": "2016-02-04T09:14:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://stackoverflow.com/questions/31108566/issues-in-flask-restless-due-to-sqlalchemy-db-boolean\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/447", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/447/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/447/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/447", "id": 89463590, "node_id": "MDU6SXNzdWU4OTQ2MzU5MA==", "number": 447, "title": "Flask restless - A search filter for a relationship.property != val in case of one-to-many relationship", "user": {"login": "hussaintamboli", "id": 2324958, "node_id": "MDQ6VXNlcjIzMjQ5NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2324958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hussaintamboli", "html_url": "https://github.com/hussaintamboli", "followers_url": "https://api.github.com/users/hussaintamboli/followers", "following_url": "https://api.github.com/users/hussaintamboli/following{/other_user}", "gists_url": "https://api.github.com/users/hussaintamboli/gists{/gist_id}", "starred_url": "https://api.github.com/users/hussaintamboli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hussaintamboli/subscriptions", "organizations_url": "https://api.github.com/users/hussaintamboli/orgs", "repos_url": "https://api.github.com/users/hussaintamboli/repos", "events_url": "https://api.github.com/users/hussaintamboli/events{/privacy}", "received_events_url": "https://api.github.com/users/hussaintamboli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-19T04:34:05Z", "updated_at": "2016-02-04T09:21:07Z", "closed_at": "2016-02-04T09:21:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nCan anyone help me out on this one -- http://stackoverflow.com/questions/30868718/flask-restless-a-search-filter-for-a-relationship-property-val-in-case-of-o\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/445", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/445/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/445/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/445", "id": 81369397, "node_id": "MDU6SXNzdWU4MTM2OTM5Nw==", "number": 445, "title": "Bug (?): Filter validation", "user": {"login": "drmclean", "id": 8614203, "node_id": "MDQ6VXNlcjg2MTQyMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8614203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drmclean", "html_url": "https://github.com/drmclean", "followers_url": "https://api.github.com/users/drmclean/followers", "following_url": "https://api.github.com/users/drmclean/following{/other_user}", "gists_url": "https://api.github.com/users/drmclean/gists{/gist_id}", "starred_url": "https://api.github.com/users/drmclean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drmclean/subscriptions", "organizations_url": "https://api.github.com/users/drmclean/orgs", "repos_url": "https://api.github.com/users/drmclean/repos", "events_url": "https://api.github.com/users/drmclean/events{/privacy}", "received_events_url": "https://api.github.com/users/drmclean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-27T09:35:06Z", "updated_at": "2016-02-16T02:39:05Z", "closed_at": "2016-02-16T02:39:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When attemping to filter a resource using a column that doesn't exist server returns error 500 rather than a useful message. \n\nexample:\n\nRESOURCES\n\n```\n class AnomalyType(db.Model):\n        id                  = db.Column(db.Integer, primary_key=True)\n        name                = db.Column(db.String(32))\n        version             = db.Column(db.Integer)\n        description         = db.Column(db.String(1024))\n        metrics             = db.Column(db.String(1024))\n        version_comment     = db.Column(db.String(1024))\n        min_gap_length      = db.Column(db.Integer)\n        min_duration        = db.Column(db.Integer)\n        min_data_points     = db.Column(db.Integer)\n        gap_anomaly         = db.Column(db.Boolean)\n        serial_number       = db.Column(db.String)\n\n# Relationships\n        anomalies           = db.relationship('Anomaly',backref=db.backref('anomaly_type',lazy='joined'),lazy='dynamic')\n\n# META DATA\n        created_at          = db.Column(db.DateTime)\n        modified_at         = db.Column(db.DateTime)\n        created_by          = db.Column(db.String(64))\n```\n\nQUERY    \n\n```\nurl = 'http://<myurl>/v1/anomaly_types'\n\nfilters = [dict(name='status', op='eq', val='live')]\nparams = dict(q=json.dumps(dict(filters=filters)))\n\nr = requests.get(url=url, params=params, headers=headers)\nprint r.status_code\nprint r.text\n```\n\nRESPONSE\n\n```\n    500\n    <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n    <title>500 Internal Server Error</title>\n    <h1>Internal Server Error</h1>\n    <p>The server encountered an internal error and was unable to complete your request.  Either the     server is overloaded or there is an error in the application.</p>\n```\n\nERROR ON SERVER\n\n```\nERROR:app:Exception on /v1/anomaly_types [GET]\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1817, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1477, in full_dispatch_request\n      rv = self.handle_user_exception(e)\n  File \"/usr/local/lib/python2.7/dist-packages/flask_cors/__init__.py\", line 279, in wrapped_function\n     return cors_after_request(app.make_response(f(*args, **kwargs)))\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1381, in handle_user_exception\n     reraise(exc_type, exc_value, tb)\n  File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1475, in full_dispatch_request\n     rv = self.dispatch_request()\n   File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1461, in dispatch_request\n    (**req.view_args)\n   File \"/usr/local/lib/python2.7/dist-packages/flask_restless/views.py\", line 157, in decorator\n     return func(*args, **kw)\n   File \"/usr/local/lib/python2.7/dist-packages/mimerender.py\", line 229, in wrapper\n     result = target(*args, **kwargs)\n   File \"/usr/local/lib/python2.7/dist-packages/flask/views.py\", line 84, in view\n     return self.dispatch_request(*args, **kwargs)\n   File \"/usr/local/lib/python2.7/dist-packages/flask/views.py\", line 149, in dispatch_request\n     return meth(*args, **kwargs)\n   File \"/usr/local/lib/python2.7/dist-packages/flask_restless/views.py\", line 189, in wrapped\n     return func(*args, **kw)\n   File \"/usr/local/lib/python2.7/dist-packages/flask_restless/views.py\", line 1239, in get\n     return self._search()\n   File \"/usr/local/lib/python2.7/dist-packages/flask_restless/views.py\", line 1164, in _search\n     result = strings_to_dates(query_model, to_convert)\n   File \"/usr/local/lib/python2.7/dist-packages/flask_restless/helpers.py\", line 563, in strings_to_dates\n     if is_date_field(model, fieldname) and value is not None:\n   File \"/usr/local/lib/python2.7/dist-packages/flask_restless/helpers.py\", line 185, in is_date_field\n     fieldtype = get_field_type(model, fieldname)\n   File \"/usr/local/lib/python2.7/dist-packages/flask_restless/helpers.py\", line 163, in get_field_type\n     field = getattr(model, fieldname)\n\n AttributeError: type object 'AnomalyType' has no attribute 'status'\n```\n\nPerhaps a check before filtering to confirm that the filters are real columns before proceeding and a return such as:\n\nresponse.status_code : 400\nresponse.text : {\"error\" : \"<X> is not a validate column to filter\"}\n\nfor example?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/444", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/444/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/444/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/444", "id": 80978632, "node_id": "MDU6SXNzdWU4MDk3ODYzMg==", "number": 444, "title": "flask_sqlalchemy throws 'Application not registered on db'", "user": {"login": "chfw", "id": 4280312, "node_id": "MDQ6VXNlcjQyODAzMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4280312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chfw", "html_url": "https://github.com/chfw", "followers_url": "https://api.github.com/users/chfw/followers", "following_url": "https://api.github.com/users/chfw/following{/other_user}", "gists_url": "https://api.github.com/users/chfw/gists{/gist_id}", "starred_url": "https://api.github.com/users/chfw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chfw/subscriptions", "organizations_url": "https://api.github.com/users/chfw/orgs", "repos_url": "https://api.github.com/users/chfw/repos", "events_url": "https://api.github.com/users/chfw/events{/privacy}", "received_events_url": "https://api.github.com/users/chfw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-05-26T14:10:27Z", "updated_at": "2015-07-21T08:37:16Z", "closed_at": "2015-07-21T08:37:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all\n\nI believe there are good reasons for the extra check  here:\n\nhttps://github.com/jfinkels/flask-restless/blob/b736d286e924781d2c81067330e2ddb201b1f85c/flask_restless/manager.py#L565\n\nbut I don't think it is placed in the right place. My application works well with any versions between 0.12.0 and 0.16.0 but it failed to start up if v0.17.0 is installed. And if I comment out line 565, my application starts OK. \n\nPlease relocate the check after application is registered.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/441", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/441/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/441/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/441", "id": 77939061, "node_id": "MDU6SXNzdWU3NzkzOTA2MQ==", "number": 441, "title": "flask-restless validation_exceptions not working for few column in flask-sqlalchemy models", "user": {"login": "hussaintamboli", "id": 2324958, "node_id": "MDQ6VXNlcjIzMjQ5NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2324958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hussaintamboli", "html_url": "https://github.com/hussaintamboli", "followers_url": "https://api.github.com/users/hussaintamboli/followers", "following_url": "https://api.github.com/users/hussaintamboli/following{/other_user}", "gists_url": "https://api.github.com/users/hussaintamboli/gists{/gist_id}", "starred_url": "https://api.github.com/users/hussaintamboli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hussaintamboli/subscriptions", "organizations_url": "https://api.github.com/users/hussaintamboli/orgs", "repos_url": "https://api.github.com/users/hussaintamboli/repos", "events_url": "https://api.github.com/users/hussaintamboli/events{/privacy}", "received_events_url": "https://api.github.com/users/hussaintamboli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-19T05:19:47Z", "updated_at": "2015-06-19T04:32:52Z", "closed_at": "2015-06-19T04:32:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nCan anyone please help me out on this? http://stackoverflow.com/questions/30300508/flask-restless-validation-exceptions-not-working-for-few-column-in-flask-sqlalch\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/440", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/440/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/440/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/440", "id": 76814557, "node_id": "MDU6SXNzdWU3NjgxNDU1Nw==", "number": 440, "title": "Separate serializers for different endpoints", "user": {"login": "TehMillhouse", "id": 796437, "node_id": "MDQ6VXNlcjc5NjQzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/796437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TehMillhouse", "html_url": "https://github.com/TehMillhouse", "followers_url": "https://api.github.com/users/TehMillhouse/followers", "following_url": "https://api.github.com/users/TehMillhouse/following{/other_user}", "gists_url": "https://api.github.com/users/TehMillhouse/gists{/gist_id}", "starred_url": "https://api.github.com/users/TehMillhouse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TehMillhouse/subscriptions", "organizations_url": "https://api.github.com/users/TehMillhouse/orgs", "repos_url": "https://api.github.com/users/TehMillhouse/repos", "events_url": "https://api.github.com/users/TehMillhouse/events{/privacy}", "received_events_url": "https://api.github.com/users/TehMillhouse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485860, "node_id": "MDU6TGFiZWw0ODU4NjA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-15T18:31:54Z", "updated_at": "2016-02-26T15:47:17Z", "closed_at": "2016-02-26T15:47:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, serializers just flat out don't work for anything but vanilla `GET` requests (see #413, #422). A pattern seen relatively often in the wild for REST interfaces is to provide only a listing of objects for the `GET_MANY` endpoint and only serializing all fields of an object for the `GET_SINGLE` endpoint.  \ni.e., something like `GET /api/orders` would return:\n\n``` json\n{\n  \"num_results\": 2,\n  \"objects\": [\n    {\n      \"id\": 1\n    },\n    {\n      \"id\": 2\n    }\n  ],\n  \"page\": 1,\n  \"total_pages\": 1\n}\n```\n\nWhile `GET /api/orders/1` would return:\n\n``` json\n{\n  \"id\": 1,\n  \"name\": \"Customer McBuy\",\n  \"item_ids\": [\n    13,\n    52,\n    7\n  ]\n}\n```\n\nIt would be very nice to be able to do this with Flask-ReSTless without taking a huge performance hit, however the current custom serializer support is very limited. My proposition is:  \nintroduce a new keyword parameter to `create_api` called `serializers` which works just like `pre`/`postprocessors`: a dict which specifies for every version of every endpoint which serializer is to be used. (optionally deprecate the current `serializer` argument (as it's broken) or use it as fallback for endpoints not specified in `serializers`)\n\nThis would take care of #413 and #422 and incidentally scratch my own itch :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/439", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/439/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/439/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/439", "id": 75851891, "node_id": "MDU6SXNzdWU3NTg1MTg5MQ==", "number": 439, "title": "order_by on related model filters out rows with NULL relationship", "user": {"login": "madvas", "id": 3857155, "node_id": "MDQ6VXNlcjM4NTcxNTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3857155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madvas", "html_url": "https://github.com/madvas", "followers_url": "https://api.github.com/users/madvas/followers", "following_url": "https://api.github.com/users/madvas/following{/other_user}", "gists_url": "https://api.github.com/users/madvas/gists{/gist_id}", "starred_url": "https://api.github.com/users/madvas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madvas/subscriptions", "organizations_url": "https://api.github.com/users/madvas/orgs", "repos_url": "https://api.github.com/users/madvas/repos", "events_url": "https://api.github.com/users/madvas/events{/privacy}", "received_events_url": "https://api.github.com/users/madvas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-13T05:24:08Z", "updated_at": "2016-02-04T10:46:06Z", "closed_at": "2016-02-04T10:46:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I make `order_by` as `<relationname>__<fieldname>` , it doesn't send back rows, which has NULL relationship to `<relationname>` table. Is this desired behaviour? \n\nI think it should return those rows at the beginning or end of result list.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/437", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/437/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/437/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/437", "id": 74520254, "node_id": "MDU6SXNzdWU3NDUyMDI1NA==", "number": 437, "title": "Filter on relationships: AttributeError: 'unicode' object has no attribute '_sa_instance_state'", "user": {"login": "alibozorgkhan", "id": 1771669, "node_id": "MDQ6VXNlcjE3NzE2Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1771669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alibozorgkhan", "html_url": "https://github.com/alibozorgkhan", "followers_url": "https://api.github.com/users/alibozorgkhan/followers", "following_url": "https://api.github.com/users/alibozorgkhan/following{/other_user}", "gists_url": "https://api.github.com/users/alibozorgkhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/alibozorgkhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alibozorgkhan/subscriptions", "organizations_url": "https://api.github.com/users/alibozorgkhan/orgs", "repos_url": "https://api.github.com/users/alibozorgkhan/repos", "events_url": "https://api.github.com/users/alibozorgkhan/events{/privacy}", "received_events_url": "https://api.github.com/users/alibozorgkhan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 485863, "node_id": "MDU6TGFiZWw0ODU4NjM=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-08T22:42:56Z", "updated_at": "2016-02-16T02:23:43Z", "closed_at": "2016-02-16T02:23:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to call an API using the following parameters:\n\n```\n{\"filters\":[{\"name\":\"job__company_id\",\"op\":\"eq\",\"value\":\"123\"}]}\n```\n\nIn this case, when I get to `_create_operation`, I have the following variables:\n\n```\nmodel: jobModel\nfieldname: 'company_id'\noperator: 'eq'\nargument: '123'\nrelation: 'job'\n```\n\nOn https://github.com/jfinkels/flask-restless/blob/master/flask_restless/search.py#L400, field will be `jobModel.job` as relationship is not `None`. Then on https://github.com/jfinkels/flask-restless/blob/master/flask_restless/search.py#L410, `jobModel.job` and `123` are passed to opfunc which doesn't seem right. Because `jobModel.job.company_id` needs to be `123` not `jobModel.job`.\n\nOn the other hand, I get `AttributeError: 'unicode' object has no attribute '_sa_instance_state'` error from `opfunc` call. Is there something I'm missing here or it is a bug?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/435", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/435/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/435/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/435", "id": 73209624, "node_id": "MDU6SXNzdWU3MzIwOTYyNA==", "number": 435, "title": "It is not possible to use 'or' and 'and' when comparing attribute of a relation ", "user": {"login": "qria", "id": 4233072, "node_id": "MDQ6VXNlcjQyMzMwNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4233072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qria", "html_url": "https://github.com/qria", "followers_url": "https://api.github.com/users/qria/followers", "following_url": "https://api.github.com/users/qria/following{/other_user}", "gists_url": "https://api.github.com/users/qria/gists{/gist_id}", "starred_url": "https://api.github.com/users/qria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qria/subscriptions", "organizations_url": "https://api.github.com/users/qria/orgs", "repos_url": "https://api.github.com/users/qria/repos", "events_url": "https://api.github.com/users/qria/events{/privacy}", "received_events_url": "https://api.github.com/users/qria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-05T05:04:32Z", "updated_at": "2016-05-10T19:06:23Z", "closed_at": "2016-05-10T19:01:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not very familiar with SQL and SQLalchemy so I might be confused about something or might be asking something impossible.\n\nSay, table 'content' and 'date' has one to many relationship and I want to load all contents which contains date(time) in a specific date(time) range. But, 'any' operator does not support multiple options, and using 'and' outside of 'any' operator does not work since it will mean a different query. \n\nOne possible syntax might be :  \n\n```\nhttp://127.0.0.1:5000/api/content?q={\"filters\":[\n    {\"name\":\"date_list\",\"op\":\"any\",\"val\":\n        {\"and\":[\n            {\"name\":\"date\",\"op\":\">=\",\"val\":\"2015-05-10\"},\n            {\"name\":\"date\",\"op\":\"<\",\"val\":\"2015-05-11\"}\n            ]\n        }\n    }\n]}\n```\n\nOn a side note, does anyone know an alternative implementation of how I can achieve this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/434", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/434/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/434/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/434", "id": 72818441, "node_id": "MDU6SXNzdWU3MjgxODQ0MQ==", "number": 434, "title": "order_by together with results_per_page will only order the visible page", "user": {"login": "jwanglof", "id": 1097378, "node_id": "MDQ6VXNlcjEwOTczNzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1097378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwanglof", "html_url": "https://github.com/jwanglof", "followers_url": "https://api.github.com/users/jwanglof/followers", "following_url": "https://api.github.com/users/jwanglof/following{/other_user}", "gists_url": "https://api.github.com/users/jwanglof/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwanglof/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwanglof/subscriptions", "organizations_url": "https://api.github.com/users/jwanglof/orgs", "repos_url": "https://api.github.com/users/jwanglof/repos", "events_url": "https://api.github.com/users/jwanglof/events{/privacy}", "received_events_url": "https://api.github.com/users/jwanglof/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-03T15:13:33Z", "updated_at": "2016-02-04T10:55:54Z", "closed_at": "2016-02-04T10:55:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a fairly large database that I want to paginate and also be able to order by some values. I've noticed that when using results_per_page (in my case 20) the order_by will only affect the page that is viewed. Is it designed like this?\n\nI would like that the order_by doesn't care about results_per_page but orders the query, and then just send back the amount set on results_per_page.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/433", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/433/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/433/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/433", "id": 72467878, "node_id": "MDU6SXNzdWU3MjQ2Nzg3OA==", "number": 433, "title": "API routes 404 behind everything but Flask Development Server", "user": {"login": "frankV", "id": 503796, "node_id": "MDQ6VXNlcjUwMzc5Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/503796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frankV", "html_url": "https://github.com/frankV", "followers_url": "https://api.github.com/users/frankV/followers", "following_url": "https://api.github.com/users/frankV/following{/other_user}", "gists_url": "https://api.github.com/users/frankV/gists{/gist_id}", "starred_url": "https://api.github.com/users/frankV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frankV/subscriptions", "organizations_url": "https://api.github.com/users/frankV/orgs", "repos_url": "https://api.github.com/users/frankV/repos", "events_url": "https://api.github.com/users/frankV/events{/privacy}", "received_events_url": "https://api.github.com/users/frankV/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-01T16:26:22Z", "updated_at": "2019-07-11T19:06:56Z", "closed_at": "2016-02-04T09:18:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't figure this out, and I've tried it with both gunicorn and uwsgi!\n\nIf I run the app with the flask development server (and this happens both locally and deployed), the routes registered by apiManager are fine, but if I use anything else (e.g.: gunicorn or uwsgi) they 404?\n\nI found that the headers of the request are different between the two cases:\n\n```\n# gunicorn\n$ curl http://localhost:8000/api/v1/products -i -H 'Accept: application/json'\nHTTP/1.1 404 NOT FOUND\nServer: gunicorn/19.3.0\nDate: Fri, 01 May 2015 03:12:18 GMT\nConnection: close\nContent-Type: application/json\nContent-Length: 87\n\n\n# flask dev server\n$ curl http://localhost:8000/api/v1/products -i -H 'Accept: application/json'\nHTTP/1.0 200 OK\nContent-Type: application/json\nContent-Length: 3854\nLink: <http://hydra.local:8000/api/v1/products?page=1&results_per_page=10>; rel=\"last\"\nLink: <http://hydra.local:8000/api/v1/products?page=1&results_per_page=10>; rel=\"last\"\nVary: Accept\nContent-Type: application/json\nServer: Werkzeug/0.9.6 Python/2.7.6\nDate: Fri, 01 May 2015 03:10:45 GMT\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/432", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/432/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/432/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/432", "id": 71872310, "node_id": "MDU6SXNzdWU3MTg3MjMxMA==", "number": 432, "title": "Errors when ordering by multiple fields of a model in SQLAlchemy 1.0.2", "user": {"login": "elvismacak", "id": 5038564, "node_id": "MDQ6VXNlcjUwMzg1NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5038564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elvismacak", "html_url": "https://github.com/elvismacak", "followers_url": "https://api.github.com/users/elvismacak/followers", "following_url": "https://api.github.com/users/elvismacak/following{/other_user}", "gists_url": "https://api.github.com/users/elvismacak/gists{/gist_id}", "starred_url": "https://api.github.com/users/elvismacak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elvismacak/subscriptions", "organizations_url": "https://api.github.com/users/elvismacak/orgs", "repos_url": "https://api.github.com/users/elvismacak/repos", "events_url": "https://api.github.com/users/elvismacak/events{/privacy}", "received_events_url": "https://api.github.com/users/elvismacak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-29T13:17:37Z", "updated_at": "2016-03-16T16:08:59Z", "closed_at": "2016-03-16T16:08:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "when using sqlalchemy 1.0.2 as described in requirements, it cause lots of bug.\n\nthe following code runs ok in sqlalchemy 0.9.8, but error in 1.0.2\n\n<pre>\nsession.query(Computer).join(Person).order_by('person.age').order_by('person.name').count()\nsession.query(Computer).join(Person).order_by('person.age').join(Person).order_by('person.name').count()\n</pre>\n\n\nas my commit https://github.com/jfinkels/flask-restless/commit/9b06b9573c8742d448442787421fd36e126f307c, i check it before join to fix the multiple join error, but meet other bugs(also caused by the sqlalchemy 1.0.2).\n\nfinally, i rollback the sqlalchemy to 0.9.8, but it's still an import bug.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/430", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/430/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/430/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/430", "id": 70130788, "node_id": "MDU6SXNzdWU3MDEzMDc4OA==", "number": 430, "title": "Specifying url_prefix on top level", "user": {"login": "hussaintamboli", "id": 2324958, "node_id": "MDQ6VXNlcjIzMjQ5NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2324958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hussaintamboli", "html_url": "https://github.com/hussaintamboli", "followers_url": "https://api.github.com/users/hussaintamboli/followers", "following_url": "https://api.github.com/users/hussaintamboli/following{/other_user}", "gists_url": "https://api.github.com/users/hussaintamboli/gists{/gist_id}", "starred_url": "https://api.github.com/users/hussaintamboli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hussaintamboli/subscriptions", "organizations_url": "https://api.github.com/users/hussaintamboli/orgs", "repos_url": "https://api.github.com/users/hussaintamboli/repos", "events_url": "https://api.github.com/users/hussaintamboli/events{/privacy}", "received_events_url": "https://api.github.com/users/hussaintamboli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-22T13:47:39Z", "updated_at": "2015-06-22T09:00:10Z", "closed_at": "2015-06-22T09:00:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to avoid repetition of specifying url_prefix in each API that I create\n\n```\ne.g.\nmanager = flask.ext.restless.APIManager(app, flask_sqlalchemy_db=models.db)\nmanager.create_api(models.Teacher, methods=['GET', 'POST'], url_prefix='/api/v1')\nmanager.create_api(models.Student, methods=['GET', 'POST'], url_prefix='/api/v1')\n```\n\nIs there any way of providing `url_prefix` at the top? I didn't see it in `help(APIManager)`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/427", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/427/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/427/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/427/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/427", "id": 68385153, "node_id": "MDU6SXNzdWU2ODM4NTE1Mw==", "number": 427, "title": "Is there any way to make GET request using a querystring and POST request with post params", "user": {"login": "hussaintamboli", "id": 2324958, "node_id": "MDQ6VXNlcjIzMjQ5NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2324958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hussaintamboli", "html_url": "https://github.com/hussaintamboli", "followers_url": "https://api.github.com/users/hussaintamboli/followers", "following_url": "https://api.github.com/users/hussaintamboli/following{/other_user}", "gists_url": "https://api.github.com/users/hussaintamboli/gists{/gist_id}", "starred_url": "https://api.github.com/users/hussaintamboli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hussaintamboli/subscriptions", "organizations_url": "https://api.github.com/users/hussaintamboli/orgs", "repos_url": "https://api.github.com/users/hussaintamboli/repos", "events_url": "https://api.github.com/users/hussaintamboli/events{/privacy}", "received_events_url": "https://api.github.com/users/hussaintamboli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485862, "node_id": "MDU6TGFiZWw0ODU4NjI=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-14T13:59:10Z", "updated_at": "2016-02-04T11:03:50Z", "closed_at": "2016-02-04T11:03:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have went through the HTTP methods specified here http://flask-restless.readthedocs.org/en/latest/customizing.html\n\nFor a GET request I didn't see any way of making below request\n\n```\nhttp://127.0.0.1:5000/api/user?name=hussain&username=hussain_tamboli\n```\n\nWith a `querystring` (sic)\n\nThe way of using `q=<json>` seem a little tedious during the integration.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/426", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/426/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/426/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/426", "id": 67823934, "node_id": "MDU6SXNzdWU2NzgyMzkzNA==", "number": 426, "title": "Use url_prefix argument to Flask.register_blueprint() instead of handling it ourselves", "user": {"login": "jfinkels", "id": 121755, "node_id": "MDQ6VXNlcjEyMTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/121755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfinkels", "html_url": "https://github.com/jfinkels", "followers_url": "https://api.github.com/users/jfinkels/followers", "following_url": "https://api.github.com/users/jfinkels/following{/other_user}", "gists_url": "https://api.github.com/users/jfinkels/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfinkels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfinkels/subscriptions", "organizations_url": "https://api.github.com/users/jfinkels/orgs", "repos_url": "https://api.github.com/users/jfinkels/repos", "events_url": "https://api.github.com/users/jfinkels/events{/privacy}", "received_events_url": "https://api.github.com/users/jfinkels/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-11T19:30:19Z", "updated_at": "2016-10-31T00:51:48Z", "closed_at": "2016-10-31T00:51:48Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/423", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/423/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/423/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/423", "id": 64517941, "node_id": "MDU6SXNzdWU2NDUxNzk0MQ==", "number": 423, "title": "Convert datetime in complex query", "user": {"login": "livestalker", "id": 349484, "node_id": "MDQ6VXNlcjM0OTQ4NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/349484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/livestalker", "html_url": "https://github.com/livestalker", "followers_url": "https://api.github.com/users/livestalker/followers", "following_url": "https://api.github.com/users/livestalker/following{/other_user}", "gists_url": "https://api.github.com/users/livestalker/gists{/gist_id}", "starred_url": "https://api.github.com/users/livestalker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/livestalker/subscriptions", "organizations_url": "https://api.github.com/users/livestalker/orgs", "repos_url": "https://api.github.com/users/livestalker/repos", "events_url": "https://api.github.com/users/livestalker/events{/privacy}", "received_events_url": "https://api.github.com/users/livestalker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-26T12:47:58Z", "updated_at": "2016-02-13T17:53:33Z", "closed_at": "2016-02-13T17:53:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` json\nq = {\"filters\": [{\"name\": \"stop_time\", \"op\": \">=\", \"val\": \"current_date\"}]}\n```\n\nWork fine, and code:\n\n``` python\n # resolve date-strings as required by the model\nfor param in search_params.get('filters', list()):\n    if 'name' in param and 'val' in param:\n        query_model = self.model\n        query_field = param['name']\n...\ntry:\n    result = strings_to_dates(query_model, to_convert)\n```\n\nconvert JSON datetime to datetime.\nBut when I try complex query, JSON datetime dose not converted to python datetime.\nExample of complex query:\n\n``` json\n{\"filters\":[{\"or\":[{\"and\":[{\"name\":\"stop_time\",\"op\":\"is_null\"},{\"name\":\"start_time\",\"op\":\"<=\",\"val\":\"2015-03-26 15:45:09\"}]},{\"and\":[{\"name\":\"stop_time\",\"op\":\">=\",\"val\":\"2015-03-26 15:45:09\"},{\"name\":\"start_time\",\"op\":\"<=\",\"val\":\"2015-03-26 15:45:09\"}]}]}]}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/422", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/422/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/422/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/422", "id": 64156977, "node_id": "MDU6SXNzdWU2NDE1Njk3Nw==", "number": 422, "title": "Custom serialization on root path", "user": {"login": "Amnesthesia", "id": 3265008, "node_id": "MDQ6VXNlcjMyNjUwMDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3265008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amnesthesia", "html_url": "https://github.com/Amnesthesia", "followers_url": "https://api.github.com/users/Amnesthesia/followers", "following_url": "https://api.github.com/users/Amnesthesia/following{/other_user}", "gists_url": "https://api.github.com/users/Amnesthesia/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amnesthesia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amnesthesia/subscriptions", "organizations_url": "https://api.github.com/users/Amnesthesia/orgs", "repos_url": "https://api.github.com/users/Amnesthesia/repos", "events_url": "https://api.github.com/users/Amnesthesia/events{/privacy}", "received_events_url": "https://api.github.com/users/Amnesthesia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-25T02:53:47Z", "updated_at": "2016-02-04T11:06:42Z", "closed_at": "2016-02-04T11:06:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've added custom serializers using the `serializer=` keyword in create_api, and it works fine for single resources. How do I make this work for calls that return many objects?\n\n`/api/myresources/1` works fine\n`/api/myresources` does not trigger any serializer at all\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/419", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/419/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/419/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/419", "id": 60109028, "node_id": "MDU6SXNzdWU2MDEwOTAyOA==", "number": 419, "title": "Flask throws ERROR<500> if Accept headers are badly formatted.", "user": {"login": "drmclean", "id": 8614203, "node_id": "MDQ6VXNlcjg2MTQyMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8614203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drmclean", "html_url": "https://github.com/drmclean", "followers_url": "https://api.github.com/users/drmclean/followers", "following_url": "https://api.github.com/users/drmclean/following{/other_user}", "gists_url": "https://api.github.com/users/drmclean/gists{/gist_id}", "starred_url": "https://api.github.com/users/drmclean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drmclean/subscriptions", "organizations_url": "https://api.github.com/users/drmclean/orgs", "repos_url": "https://api.github.com/users/drmclean/repos", "events_url": "https://api.github.com/users/drmclean/events{/privacy}", "received_events_url": "https://api.github.com/users/drmclean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-06T14:35:12Z", "updated_at": "2016-02-04T11:15:56Z", "closed_at": "2016-02-04T11:15:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "recently had a problem where Flask would return Error <500> to POST requests from a certain source. \nI eventually tracked down the error as the fact that the source was added an Accept Header that was badly formatted. \n\nThe header would look like this:\n\n```\n-H 'Accept: application/json; text/javascript'\n```\n\nChanging to \n\n```\n-H 'Accept: application/json, text/javascript'\n```\n\nor\n    -H 'Accept: application/json'\nor \n    -H 'Accept: text/javascript' \n\nprevents the error. \n\nIt would be nice if Flask returned a helpful message such as \"incorrect format of Accept header\" etc. etc.\nrather than Error<500>\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/418", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/418/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/418/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/418", "id": 60090557, "node_id": "MDU6SXNzdWU2MDA5MDU1Nw==", "number": 418, "title": "Flask-restless + Flask-cors doesn't appear to function correctly. ", "user": {"login": "drmclean", "id": 8614203, "node_id": "MDQ6VXNlcjg2MTQyMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8614203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drmclean", "html_url": "https://github.com/drmclean", "followers_url": "https://api.github.com/users/drmclean/followers", "following_url": "https://api.github.com/users/drmclean/following{/other_user}", "gists_url": "https://api.github.com/users/drmclean/gists{/gist_id}", "starred_url": "https://api.github.com/users/drmclean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drmclean/subscriptions", "organizations_url": "https://api.github.com/users/drmclean/orgs", "repos_url": "https://api.github.com/users/drmclean/repos", "events_url": "https://api.github.com/users/drmclean/events{/privacy}", "received_events_url": "https://api.github.com/users/drmclean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485861, "node_id": "MDU6TGFiZWw0ODU4NjE=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-06T11:28:30Z", "updated_at": "2016-02-04T11:17:05Z", "closed_at": "2015-03-06T14:31:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an api written with flask-restless. Everything works great when sending and receiving requests using python requests however the front-end system is using AngularJS which requires that the CORS be enabled. So I've dutifully include Flask-cors\n\nA POST request from the AngularJS now causes an error in the system as follows:\n\n```\n'ERROR:app:Exception on /v1/product_notes [POST]\n   File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1817, in wsgi_app\n     response = self.full_dispatch_request()\n\n   File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1477, in full_dispatch_request\n      rv = self.handle_user_exception(e)     \n\n    File \"/usr/local/lib/python2.7/dist-packages/flask_cors/__init__.py\", line 279, in wrapped_function\n      return cors_after_request(app.make_response(f(*args, **kwargs)))\n\n    File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1381, in handle_user_exception\n reraise(exc_type, exc_value, tb)\n\n    File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1475, in full_dispatch_request\n      rv = self.dispatch_request()\n\n    File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1461, in dispatch_request\n      return self.view_functions[rule.endpoint](**req.view_args)\n\n    File \"/usr/local/lib/python2.7/dist-packages/flask_restless/views.py\", line 139, in decorator\n      return func(*args, **kw)\n\n    File \"/usr/local/lib/python2.7/dist-packages/mimerender.py\", line 204, in wrapper\n      mime = _best_mime(supported, accept_header)\n\n    File \"/usr/local/lib/python2.7/dist-packages/mimerender.py\", line 86, in _best_mime\n      return mimeparse.best_match(supported, accept_string)\n\n    File \"/usr/local/lib/python2.7/dist-packages/mimeparse.py\", line 153, in best_match\n      parsed_header = [parse_media_range(r) for r in split_header]\n\n    File \"/usr/local/lib/python2.7/dist-packages/mimeparse.py\", line 67, in parse_media_range\n      (type, subtype, params) = parse_mime_type(range)\n\n    File \"/usr/local/lib/python2.7/dist-packages/mimeparse.py\", line 41, in parse_mime_type\n      for param in parts[1:]\n\n  ValueError: dictionary update sequence element #0 has length 1; 2 is requirede system as follows: '\n```\n\nThe requests are identical in content but from AngularJS throws an error and from Python returns correctly. It appears that F-R is not playing nicely with Flask-Cors but I'm not clear on whether this is a problem in the Cors extension or with Restless. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/416", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/416/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/416/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/416", "id": 59912166, "node_id": "MDU6SXNzdWU1OTkxMjE2Ng==", "number": 416, "title": "Using multiple APIManager instances no longer works", "user": {"login": "da4089", "id": 860066, "node_id": "MDQ6VXNlcjg2MDA2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/860066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da4089", "html_url": "https://github.com/da4089", "followers_url": "https://api.github.com/users/da4089/followers", "following_url": "https://api.github.com/users/da4089/following{/other_user}", "gists_url": "https://api.github.com/users/da4089/gists{/gist_id}", "starred_url": "https://api.github.com/users/da4089/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da4089/subscriptions", "organizations_url": "https://api.github.com/users/da4089/orgs", "repos_url": "https://api.github.com/users/da4089/repos", "events_url": "https://api.github.com/users/da4089/events{/privacy}", "received_events_url": "https://api.github.com/users/da4089/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-05T06:39:39Z", "updated_at": "2016-02-04T11:05:30Z", "closed_at": "2016-02-04T11:05:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my code, I use two APIManagers, as way of running a standard pre-processor for one set of APIs, but not for another:\n\n```\nmanager = APIManager(\n    flask_app,\n    flask_sqlalchemy_db=db,\n    session=session,\n    preprocessors=dict(GET_MANY=[check_access],\n                       GET_SINGLE=[check_access],\n                       POST=[check_access],\n                       PATCH=[check_access],\n                       DELETE=[check_access]))\n\ninsecure_manager = APIManager(\n    flask_app,\n    flask_sqlalchemy_db=db,\n    session=session)\n```\n\nThis works nicely in 0.15, but no longer works in 0.17.\n\nNot sure if this was intentional in the recent refactoring: if it was, is there a better way that I should do something like this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/415", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/415/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/415/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/415", "id": 59838868, "node_id": "MDU6SXNzdWU1OTgzODg2OA==", "number": 415, "title": "Wildcard search does not match beginning of string", "user": {"login": "mozey", "id": 152196, "node_id": "MDQ6VXNlcjE1MjE5Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/152196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mozey", "html_url": "https://github.com/mozey", "followers_url": "https://api.github.com/users/mozey/followers", "following_url": "https://api.github.com/users/mozey/following{/other_user}", "gists_url": "https://api.github.com/users/mozey/gists{/gist_id}", "starred_url": "https://api.github.com/users/mozey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mozey/subscriptions", "organizations_url": "https://api.github.com/users/mozey/orgs", "repos_url": "https://api.github.com/users/mozey/repos", "events_url": "https://api.github.com/users/mozey/events{/privacy}", "received_events_url": "https://api.github.com/users/mozey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 886200, "node_id": "MDU6TGFiZWw4ODYyMDA=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/documentation", "name": "documentation", "color": "444444", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-03-04T18:23:10Z", "updated_at": "2015-03-05T06:31:00Z", "closed_at": "2015-03-05T06:31:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following SQL query, it gives me back one database row:\n\n```\nselect * from task where description like '%Something%';\n```\n\nI would expect the following query to produce the same, but I get zero results:\n\n```\napi/task?q={\"filters\":[{\"name\":\"description\",\"op\":\"like\",\"val\":\"%Something%\"}]}\n```\n\nWhen I search for \"Something%\", I do get back the same row as the SQL query.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jfinkels/flask-restless/issues/414", "repository_url": "https://api.github.com/repos/jfinkels/flask-restless", "labels_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/414/comments", "events_url": "https://api.github.com/repos/jfinkels/flask-restless/issues/414/events", "html_url": "https://github.com/jfinkels/flask-restless/issues/414", "id": 59833890, "node_id": "MDU6SXNzdWU1OTgzMzg5MA==", "number": 414, "title": "Getting attribute by ID is empty even if object exists on table", "user": {"login": "scooterman", "id": 266045, "node_id": "MDQ6VXNlcjI2NjA0NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/266045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scooterman", "html_url": "https://github.com/scooterman", "followers_url": "https://api.github.com/users/scooterman/followers", "following_url": "https://api.github.com/users/scooterman/following{/other_user}", "gists_url": "https://api.github.com/users/scooterman/gists{/gist_id}", "starred_url": "https://api.github.com/users/scooterman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scooterman/subscriptions", "organizations_url": "https://api.github.com/users/scooterman/orgs", "repos_url": "https://api.github.com/users/scooterman/repos", "events_url": "https://api.github.com/users/scooterman/events{/privacy}", "received_events_url": "https://api.github.com/users/scooterman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 485858, "node_id": "MDU6TGFiZWw0ODU4NTg=", "url": "https://api.github.com/repos/jfinkels/flask-restless/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-04T17:44:46Z", "updated_at": "2015-04-06T18:01:06Z", "closed_at": "2015-04-06T18:01:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "This bug appears on 0.16.0+ (inclusive)\n\n``` python\nclass Role(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.Unicode(64), unique=True)\n    role_type = db.Column(db.Enum('ADMIN', 'USER', 'EXTENSION'), nullable=False, default='USER')\n    allowed_extensions = db.relationship('RoleExtension', cascade='all, delete, delete-orphan')\n    permissions = db.Column(db.Integer, default=0)\n\nclass RoleExtension(db.Model):\n    pattern = db.Column(db.String(80), index=True, primary_key=True)\n    role_id = db.Column(db.Integer, db.ForeignKey('role.id'), primary_key=True)\n    role = db.relationship('Role', single_parent=True)\n```\n\ncalling <ur>/api/role/2 on versions prior 0.16:\n\n[base.py:912 -     _execute_context() ] SELECT role.id AS role_id, role.name AS role_name, role.role_type AS role_role_type, role.permissions AS role_permissions\nFROM role\nWHERE role.id = %s\n LIMIT %s\n[base.py:915 -     _execute_context() ]('2', 1)\n\non versions after 0.16:\n\n[base.py:912 -     _execute_context() ] SELECT role.id AS role_id, role.name AS role_name, role.role_type AS role_role_type, role.permissions AS role_permissions\nFROM role\nWHERE role.id = 1\n LIMIT %s\n[base.py:915 -     _execute_context() ](1,)\n\nSeems that flask-restless is completely ignoring the id from the request.\n", "performed_via_github_app": null, "score": 1.0}]}