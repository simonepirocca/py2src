{"total_count": 427, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/892", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/892/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/892/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/892/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/892", "id": 683406116, "node_id": "MDU6SXNzdWU2ODM0MDYxMTY=", "number": 892, "title": "\"'float' object is not iterable\" while parsing list arguments from json in GET request", "user": {"login": "samaranin", "id": 7209295, "node_id": "MDQ6VXNlcjcyMDkyOTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7209295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samaranin", "html_url": "https://github.com/samaranin", "followers_url": "https://api.github.com/users/samaranin/followers", "following_url": "https://api.github.com/users/samaranin/following{/other_user}", "gists_url": "https://api.github.com/users/samaranin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samaranin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samaranin/subscriptions", "organizations_url": "https://api.github.com/users/samaranin/orgs", "repos_url": "https://api.github.com/users/samaranin/repos", "events_url": "https://api.github.com/users/samaranin/events{/privacy}", "received_events_url": "https://api.github.com/users/samaranin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-21T08:51:37Z", "updated_at": "2020-08-25T13:48:55Z", "closed_at": "2020-08-25T13:48:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've got a problem while sending JSON data with a list in it using GET request.\r\nI have a JSON like\r\n```json\r\n{\r\n    \"dataset\": [0.5, 0.5]\r\n}\r\n```\r\nAnd when I am trying to parse it from the request using reqparse.RequestParser I am getting an error \r\n```\r\n'float' object is not iterable\r\n```\r\nIt works fine when arg type is str or int or float, but for the list, there is trouble with this.\r\n\r\nSome code below.\r\nI've made a helper method to setup a request parameters parsing\r\n```python\r\ndef parse_arguments(arguments):\r\n    \"\"\"\r\n    Method to parse request arguments\r\n    :param arguments: list of arguments to parse\r\n    :return: list of parsed arguments\r\n    \"\"\"\r\n    # create arguments parser and add arguments\r\n    parser = reqparse.RequestParser(bundle_errors=True)\r\n    for arg in arguments:\r\n        parser.add_argument(arg.get('name', None), type=arg.get('type', None),\r\n                            help=arg.get('help', \"\"), location=ARGS_LOCATIONS_LIST,\r\n                            required=arg.get('required', False), action=arg.get('action', None))\r\n    # hack to get json from get request\r\n    try:\r\n        _ = request.get_json(force=True)\r\n    except HTTPException:\r\n        print(\"No json found in this request. Trying to parse args from values\")\r\n\r\n    # parsing argument for request\r\n    return parser.parse_args()\r\n```\r\nAnd parameters for the request setup looks like this\r\n```python\r\n# list of arguments for the request\r\narguments = [\r\n   {\"name\": \"dataset\", \"type\": list, \"help\": \"dataset must be list\", \"required\": True, \"action\": \"append\"}\r\n]\r\n# parsing arguments\r\nargs = parse_arguments(arguments)\r\n```\r\nAnd with the code above, I get an error.\r\nI've made a workaround to fix this problem for me, but I think it should not work like this.\r\n```python\r\ndef parse_arguments(arguments):\r\n    \"\"\"\r\n    Method to parse request arguments\r\n    :param arguments: list of arguments to parse\r\n    :return: list of parsed arguments\r\n    \"\"\"\r\n    # create arguments parser and add arguments\r\n    parser = reqparse.RequestParser(bundle_errors=True)\r\n    for arg in arguments:\r\n        parser.add_argument(arg.get('name', None), type=arg.get('type', None),\r\n                            help=arg.get('help', \"\"), location=ARGS_LOCATIONS_LIST,\r\n                            required=arg.get('required', False), action=arg.get('action', None))\r\n    # hack to get json from get request\r\n    try:\r\n        json_values = request.get_json(force=True)  # getting values from request json directly\r\n        parser_values = parser.parse_args()  # parsing values from request using reqparse\r\n\r\n        for key, value in parser_values.items():\r\n            # if we have type error while parsing arguments - replace it from json\r\n            if isinstance(parser_values[key], TypeError):\r\n                parser_values[key] = json_values.get(key, None)\r\n\r\n        return parser_values\r\n    except HTTPException:\r\n        print(\"No json found in this request. Trying to parse args from values\")\r\n\r\n    # parsing argument for request\r\n    return parser.parse_args()\r\n```\r\nSo the question is: am I doing something wrong or this is a bug?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/891", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/891/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/891/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/891/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/891", "id": 679014021, "node_id": "MDU6SXNzdWU2NzkwMTQwMjE=", "number": 891, "title": "How flask restful specify the ssl_context ?", "user": {"login": "max-yue", "id": 13486398, "node_id": "MDQ6VXNlcjEzNDg2Mzk4", "avatar_url": "https://avatars3.githubusercontent.com/u/13486398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-yue", "html_url": "https://github.com/max-yue", "followers_url": "https://api.github.com/users/max-yue/followers", "following_url": "https://api.github.com/users/max-yue/following{/other_user}", "gists_url": "https://api.github.com/users/max-yue/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-yue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-yue/subscriptions", "organizations_url": "https://api.github.com/users/max-yue/orgs", "repos_url": "https://api.github.com/users/max-yue/repos", "events_url": "https://api.github.com/users/max-yue/events{/privacy}", "received_events_url": "https://api.github.com/users/max-yue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-14T09:01:27Z", "updated_at": "2020-08-14T19:06:52Z", "closed_at": "2020-08-14T19:06:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nfrom flask import Flask    \r\napp = Flask(__name__)    \r\napp.run('0.0.0.0', debug=True, port=8100, ssl_context=('your_path/XXXX.pem', 'your_path/XXXX.key')) \r\n\r\n\r\nHow flask restful specify the ssl_context ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/889", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/889/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/889/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/889/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/889", "id": 661699940, "node_id": "MDU6SXNzdWU2NjE2OTk5NDA=", "number": 889, "title": "Invalid custom exception inherited from Exception", "user": {"login": "gamdwk", "id": 46856538, "node_id": "MDQ6VXNlcjQ2ODU2NTM4", "avatar_url": "https://avatars0.githubusercontent.com/u/46856538?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gamdwk", "html_url": "https://github.com/gamdwk", "followers_url": "https://api.github.com/users/gamdwk/followers", "following_url": "https://api.github.com/users/gamdwk/following{/other_user}", "gists_url": "https://api.github.com/users/gamdwk/gists{/gist_id}", "starred_url": "https://api.github.com/users/gamdwk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gamdwk/subscriptions", "organizations_url": "https://api.github.com/users/gamdwk/orgs", "repos_url": "https://api.github.com/users/gamdwk/repos", "events_url": "https://api.github.com/users/gamdwk/events{/privacy}", "received_events_url": "https://api.github.com/users/gamdwk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-20T11:17:29Z", "updated_at": "2020-07-21T13:55:52Z", "closed_at": "2020-07-21T13:55:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "flask_restful\\__init__.py  line327\r\n` error_cls_name = type(e).__name__`\r\n` if error_cls_name in self.errors:` \r\n ` custom_data = self.errors.get(error_cls_name, {})`  \r\n`    code = custom_data.get('status', 500)` \r\n`    data.update(custom_data)`\r\n\r\nType(Exception()) is \"Exception\", but type(Exception).__name__ is \"type\". Sometimes the exception handling in some libraries is \"raise Exception\" but not \"raise Exception()\". This makes it necessary for us to use \"try\" \"except\". This design makes it useless to pass in errors during initialization.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/887", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/887/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/887/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/887/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/887", "id": 640484962, "node_id": "MDU6SXNzdWU2NDA0ODQ5NjI=", "number": 887, "title": "add_resource not working after init_app", "user": {"login": "2Eagle2", "id": 8529463, "node_id": "MDQ6VXNlcjg1Mjk0NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8529463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/2Eagle2", "html_url": "https://github.com/2Eagle2", "followers_url": "https://api.github.com/users/2Eagle2/followers", "following_url": "https://api.github.com/users/2Eagle2/following{/other_user}", "gists_url": "https://api.github.com/users/2Eagle2/gists{/gist_id}", "starred_url": "https://api.github.com/users/2Eagle2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/2Eagle2/subscriptions", "organizations_url": "https://api.github.com/users/2Eagle2/orgs", "repos_url": "https://api.github.com/users/2Eagle2/repos", "events_url": "https://api.github.com/users/2Eagle2/events{/privacy}", "received_events_url": "https://api.github.com/users/2Eagle2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-17T14:23:20Z", "updated_at": "2020-06-18T20:41:35Z", "closed_at": "2020-06-18T20:41:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "in the following code\r\n```\r\napi = Api()\r\napi.add_resource(Res1)\r\napi.init_app(app)\r\napi.add_resource(Res2)\r\n```\r\n\r\nresource Res2 is not added to api (init_app does not set self.app in Api)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/886", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/886/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/886/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/886/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/886", "id": 615378025, "node_id": "MDU6SXNzdWU2MTUzNzgwMjU=", "number": 886, "title": "Optional/categorical variable request parser", "user": {"login": "yavalvas", "id": 5677598, "node_id": "MDQ6VXNlcjU2Nzc1OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5677598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yavalvas", "html_url": "https://github.com/yavalvas", "followers_url": "https://api.github.com/users/yavalvas/followers", "following_url": "https://api.github.com/users/yavalvas/following{/other_user}", "gists_url": "https://api.github.com/users/yavalvas/gists{/gist_id}", "starred_url": "https://api.github.com/users/yavalvas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yavalvas/subscriptions", "organizations_url": "https://api.github.com/users/yavalvas/orgs", "repos_url": "https://api.github.com/users/yavalvas/repos", "events_url": "https://api.github.com/users/yavalvas/events{/privacy}", "received_events_url": "https://api.github.com/users/yavalvas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-10T12:07:02Z", "updated_at": "2020-05-10T12:08:42Z", "closed_at": "2020-05-10T12:08:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use RequestParser to parse and validate parameters but I don't see an ability to define categories,\r\ne.g. I would like to validate if my parameter is in a set of categories represented by strings {\"category_1\", ..., \"category_n\"}.\r\nCan it be defined e.g. by the following way:\r\n\r\n```python\r\ninput_arguments_parser = reqparse.RequestParser()\r\ninput_arguments_parser.add_argument(\r\n    'categorical_input_param',\r\n    type=str,\r\n    default='category_1',\r\n    required=True,\r\n    options=frozenset({'category_1', 'category_2'}))\r\n```\r\n\r\nand be validated accordingly with 'options' parameter?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/884", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/884/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/884/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/884/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/884", "id": 597312757, "node_id": "MDU6SXNzdWU1OTczMTI3NTc=", "number": 884, "title": "TypeError [ERR_HTTP_INVALID_HEADER_VALUE]: Invalid value \"undefined\" for header \"client\"", "user": {"login": "DawitAbay", "id": 46979460, "node_id": "MDQ6VXNlcjQ2OTc5NDYw", "avatar_url": "https://avatars2.githubusercontent.com/u/46979460?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DawitAbay", "html_url": "https://github.com/DawitAbay", "followers_url": "https://api.github.com/users/DawitAbay/followers", "following_url": "https://api.github.com/users/DawitAbay/following{/other_user}", "gists_url": "https://api.github.com/users/DawitAbay/gists{/gist_id}", "starred_url": "https://api.github.com/users/DawitAbay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DawitAbay/subscriptions", "organizations_url": "https://api.github.com/users/DawitAbay/orgs", "repos_url": "https://api.github.com/users/DawitAbay/repos", "events_url": "https://api.github.com/users/DawitAbay/events{/privacy}", "received_events_url": "https://api.github.com/users/DawitAbay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-09T14:14:17Z", "updated_at": "2020-04-09T14:56:37Z", "closed_at": "2020-04-09T14:56:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I keep getting this error massage I am not sure what to do?\r\n\r\n`TypeError [ERR_HTTP_INVALID_HEADER_VALUE]: Invalid value \"undefined\" for header \"client\"\r\n    at ClientRequest.setHeader (_http_outgoing.js:473:3)\r\n    at new ClientRequest (_http_client.js:194:14)\r\n    at Object.request (https.js:281:10)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/882", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/882/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/882/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/882/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/882", "id": 595986749, "node_id": "MDU6SXNzdWU1OTU5ODY3NDk=", "number": 882, "title": "Question wrt maintenance?", "user": {"login": "curlup", "id": 338607, "node_id": "MDQ6VXNlcjMzODYwNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/338607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/curlup", "html_url": "https://github.com/curlup", "followers_url": "https://api.github.com/users/curlup/followers", "following_url": "https://api.github.com/users/curlup/following{/other_user}", "gists_url": "https://api.github.com/users/curlup/gists{/gist_id}", "starred_url": "https://api.github.com/users/curlup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/curlup/subscriptions", "organizations_url": "https://api.github.com/users/curlup/orgs", "repos_url": "https://api.github.com/users/curlup/repos", "events_url": "https://api.github.com/users/curlup/events{/privacy}", "received_events_url": "https://api.github.com/users/curlup/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-07T16:11:28Z", "updated_at": "2020-04-08T14:11:24Z", "closed_at": "2020-04-08T14:11:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "We like your software and are considering using it for our open-source system, thank you for writing it!\r\n\r\nIs this software thought to be actively maintained or something? Is it that there's only one person behind it? Is michiganlabs involved in any way? \r\n\r\nAny insights will be helpful.\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/881", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/881/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/881/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/881/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/881", "id": 595522294, "node_id": "MDU6SXNzdWU1OTU1MjIyOTQ=", "number": 881, "title": "ModuleNotFoundError ", "user": {"login": "washedgram", "id": 40040030, "node_id": "MDQ6VXNlcjQwMDQwMDMw", "avatar_url": "https://avatars1.githubusercontent.com/u/40040030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/washedgram", "html_url": "https://github.com/washedgram", "followers_url": "https://api.github.com/users/washedgram/followers", "following_url": "https://api.github.com/users/washedgram/following{/other_user}", "gists_url": "https://api.github.com/users/washedgram/gists{/gist_id}", "starred_url": "https://api.github.com/users/washedgram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/washedgram/subscriptions", "organizations_url": "https://api.github.com/users/washedgram/orgs", "repos_url": "https://api.github.com/users/washedgram/repos", "events_url": "https://api.github.com/users/washedgram/events{/privacy}", "received_events_url": "https://api.github.com/users/washedgram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-07T01:11:49Z", "updated_at": "2020-04-07T23:55:06Z", "closed_at": "2020-04-07T23:55:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can't seem to get past this error when trying to run my .py file : \r\n```\r\nsegment_logging_1  |     from flask_restful import Resource, Api, reqparse\r\nsegment_logging_1  | ModuleNotFoundError: No module named 'flask_restful'\r\n```\r\nI'm importing it like this:\r\n```\r\nfrom flask import Flask \r\nfrom flask_restful import Resource, Api, reqparse\r\n```\r\nBoth Flask and Flask-RESTful are installed and in my PATH. I have only had errors with flask-restful and have not been able to find anyone who has gotten a straight answer as to why this might be  happening. Running pip freeze gives me this:\r\n```\r\n# Editable install with no version control (Flask-RESTful==0.3.6)\r\n```\r\nI see that someone else had a similar issue but they were using an anaconda python distribution and the steps they said they took to fix it don't seem to apply here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/880", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/880/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/880/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/880/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/880", "id": 591787141, "node_id": "MDU6SXNzdWU1OTE3ODcxNDE=", "number": 880, "title": "fields.Url is ignoring the attribute parameter", "user": {"login": "spookey", "id": 1112380, "node_id": "MDQ6VXNlcjExMTIzODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1112380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spookey", "html_url": "https://github.com/spookey", "followers_url": "https://api.github.com/users/spookey/followers", "following_url": "https://api.github.com/users/spookey/following{/other_user}", "gists_url": "https://api.github.com/users/spookey/gists{/gist_id}", "starred_url": "https://api.github.com/users/spookey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spookey/subscriptions", "organizations_url": "https://api.github.com/users/spookey/orgs", "repos_url": "https://api.github.com/users/spookey/repos", "events_url": "https://api.github.com/users/spookey/events{/privacy}", "received_events_url": "https://api.github.com/users/spookey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-01T09:57:21Z", "updated_at": "2020-04-01T13:08:52Z", "closed_at": "2020-04-01T13:08:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "So, recently I stumbled across this behavior, it seems the ``attribute`` parameter is ignored for ``fields.Url``.\r\nI have written some short example:\r\n\r\n```py\r\nfrom flask import Flask\r\nfrom flask_restful import Api, Resource, fields, marshal_with\r\n\r\napp = Flask(__name__)\r\napi = Api(app)\r\n\r\n\r\n@app.route('/<string:stuff>')\r\ndef index(stuff):\r\n    return f'stuff is {stuff}'\r\n\r\n\r\n@api.resource('/api')\r\nclass Demo(Resource):\r\n\r\n    @marshal_with({\r\n        'url_flat': fields.Url(endpoint='index'),\r\n        'url_deep': fields.Url(endpoint='index', attribute='deep'),\r\n    })\r\n    def get(self):\r\n        return {\r\n            'stuff': 'wrong',\r\n            'deep': {\r\n                'stuff': 'correct',\r\n            },\r\n        }\r\n```\r\n\r\nA get request to ``/api`` now returns this:\r\n```json\r\n{\"url_flat\": \"/wrong\", \"url_deep\": \"/wrong\"}\r\n```\r\n\r\nReading the documentation as far as I understand it, it should instead return this:\r\n```json\r\n{\"url_flat\": \"/wrong\", \"url_deep\": \"/correct\"}\r\n```\r\n\r\nThis behavior makes it difficult to link onto related objects from my database.\r\nOr am I missing something?\r\n\r\nThanks for your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/872", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/872/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/872/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/872/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/872", "id": 575952059, "node_id": "MDU6SXNzdWU1NzU5NTIwNTk=", "number": 872, "title": "How can I get the Token from Headers", "user": {"login": "WRAllen", "id": 25947700, "node_id": "MDQ6VXNlcjI1OTQ3NzAw", "avatar_url": "https://avatars0.githubusercontent.com/u/25947700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WRAllen", "html_url": "https://github.com/WRAllen", "followers_url": "https://api.github.com/users/WRAllen/followers", "following_url": "https://api.github.com/users/WRAllen/following{/other_user}", "gists_url": "https://api.github.com/users/WRAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/WRAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WRAllen/subscriptions", "organizations_url": "https://api.github.com/users/WRAllen/orgs", "repos_url": "https://api.github.com/users/WRAllen/repos", "events_url": "https://api.github.com/users/WRAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/WRAllen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-05T02:35:23Z", "updated_at": "2020-03-05T19:58:59Z", "closed_at": "2020-03-05T19:58:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "as the title, I want to get the Token which is in the request headers\u3002\r\nand I know\r\n```python\r\n# this can get Token from RequestParser\r\nparser = reqparse.RequestParser()\r\nparser.add_argument(\"Token\")\r\n```\r\nbut how to get Token from Headers?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/867", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/867/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/867/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/867/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/867", "id": 567655999, "node_id": "MDU6SXNzdWU1Njc2NTU5OTk=", "number": 867, "title": "'NoneType' object is not subscriptable", "user": {"login": "smoolya17", "id": 20811167, "node_id": "MDQ6VXNlcjIwODExMTY3", "avatar_url": "https://avatars3.githubusercontent.com/u/20811167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoolya17", "html_url": "https://github.com/smoolya17", "followers_url": "https://api.github.com/users/smoolya17/followers", "following_url": "https://api.github.com/users/smoolya17/following{/other_user}", "gists_url": "https://api.github.com/users/smoolya17/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoolya17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoolya17/subscriptions", "organizations_url": "https://api.github.com/users/smoolya17/orgs", "repos_url": "https://api.github.com/users/smoolya17/repos", "events_url": "https://api.github.com/users/smoolya17/events{/privacy}", "received_events_url": "https://api.github.com/users/smoolya17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-19T15:59:08Z", "updated_at": "2020-02-19T16:25:59Z", "closed_at": "2020-02-19T16:25:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am new to flask-restful & trying to post a request\r\n\r\n    def post(self):\r\n        req_json = request.get_json()\r\n        doc_id = req_json['docid']\r\n\r\nMy post data is as:\r\n\r\n`curl http://localhost:5000/ -d \"{    \"labels\": {        \"predictSensorData\": \"XPo\",        \"predictFailure\": \"Camera_Output\"    },    \"docid\": \"<key>\"}\" -X POST`\r\n\r\nI get the following error:\r\n\r\n```\r\n doc_id = req_json['docid']\r\nTypeError: 'NoneType' object is not subscriptable\r\n```\r\nHow do I solve this error?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/866", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/866/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/866/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/866/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/866", "id": 567435966, "node_id": "MDU6SXNzdWU1Njc0MzU5NjY=", "number": 866, "title": "Test case using flask_restful always returns a 405 error", "user": {"login": "davidwynter", "id": 3639277, "node_id": "MDQ6VXNlcjM2MzkyNzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3639277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidwynter", "html_url": "https://github.com/davidwynter", "followers_url": "https://api.github.com/users/davidwynter/followers", "following_url": "https://api.github.com/users/davidwynter/following{/other_user}", "gists_url": "https://api.github.com/users/davidwynter/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidwynter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidwynter/subscriptions", "organizations_url": "https://api.github.com/users/davidwynter/orgs", "repos_url": "https://api.github.com/users/davidwynter/repos", "events_url": "https://api.github.com/users/davidwynter/events{/privacy}", "received_events_url": "https://api.github.com/users/davidwynter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-19T09:36:54Z", "updated_at": "2020-02-19T16:29:26Z", "closed_at": "2020-02-19T16:24:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have test cases for all my flask_restful supported API calls. But all return 405 errors. \r\n\r\nHere is my (simplified) App code\r\n\r\n```\r\napp = Flask(__name__, static_folder='ui', static_url_path='')\r\n\r\ndef create_app():\r\n    handler = logging.StreamHandler(sys.stdout)\r\n    logger = logging.getLogger('webapp')\r\n    logger.setLevel(logging.INFO)\r\n    logger.addHandler(handler)\r\n\r\n    WSGIRequestHandler.protocol_version = \"HTTP/1.1\"\r\n    app.config['CORS_HEADERS'] = 'Content-Type'\r\n\r\n    CORS(app, origins=['http://127.0.0.1', 'http://localhost:3000', 'http://localhost:3000/api'],\r\n     allow_headers=[\"Content-Type\", \"Authorization\",\r\n                    \"Access-Control-Allow-Credentials\",\r\n                    \"Access-Control-Allow-Headers\",\r\n                    \"Access-Control-Allow-Origin\"], supports_credentials=True)\r\n\r\n    logging.basicConfig(level=logging.DEBUG)\r\n\r\n    app.config['SECRET_KEY'] = '...'\r\n    app.config['JWT_ACCESS_LIFESPAN'] = {'hours': 24}\r\n    app.config['JWT_REFRESH_LIFESPAN'] = {'days': 30}\r\n\r\n    jwt = JWTManager(app)\r\n\r\n    api = Api(app)\r\n\r\n    api.add_resource(resources.Login, '/api/login', methods=['POST'])\r\n\r\nif __name__ == '__main__':\r\n    app = create_app()\r\n    serve(app, host='0.0.0.0', port=5000)\r\n```\r\nHere is the content of resources.Login simplified):\r\n\r\n```\r\nclass Login(Resource):\r\n    def post(self):\r\n        logger.info(sys.version)\r\n        parser = reqparse.RequestParser()\r\n        parser.add_argument('email', help='This field cannot be blank', required=True)\r\n        parser.add_argument('password', help='This field cannot be blank', required=True)\r\n        data = parser.parse_args()\r\n        email = data['email']\r\n        password = data['password']\r\n\r\n        return {\r\n              'message': 'Logged in as {}'.format(email),\r\n              'access_token': 'access_token',\r\n              'refresh_token':' refresh_token',\r\n              'requires_totp': 'totp',\r\n              'registered': 'reg',\r\n              'demo': 'demo'\r\n        }\r\n```\r\n\r\nThe Login class works fine in it's full form outside unit testing\r\n\r\nHere is my testcase:\r\n\r\n```\r\ndef test_get_screen(self):\r\n    app.testing = True\r\n    client = app.test_client()\r\n    login_data = dict(\r\n        email='tester@example.co.uk',\r\n        password='...'\r\n    )\r\n\r\n    # Login with test user to get jwt token\r\n    res = client.post('/api/login', data=login_data)\r\n\r\n    self.assertTrue(res.response_status == 200)\r\n```\r\n\r\nIn the TestCase setUp I used the api/login to collect the jwt token before using it in each of my test cases. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/864", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/864/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/864/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/864/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/864", "id": 562148479, "node_id": "MDU6SXNzdWU1NjIxNDg0Nzk=", "number": 864, "title": "Fix simple typo: seperate -> separate", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-09T09:26:54Z", "updated_at": "2020-02-09T20:08:26Z", "closed_at": "2020-02-09T20:08:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in docs/fields.rst.\nShould read `separate` rather than `seperate`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/860", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/860/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/860/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/860/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/860", "id": 561523138, "node_id": "MDU6SXNzdWU1NjE1MjMxMzg=", "number": 860, "title": "Problem with import cached_property", "user": {"login": "Cheban1996", "id": 11075696, "node_id": "MDQ6VXNlcjExMDc1Njk2", "avatar_url": "https://avatars0.githubusercontent.com/u/11075696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cheban1996", "html_url": "https://github.com/Cheban1996", "followers_url": "https://api.github.com/users/Cheban1996/followers", "following_url": "https://api.github.com/users/Cheban1996/following{/other_user}", "gists_url": "https://api.github.com/users/Cheban1996/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cheban1996/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cheban1996/subscriptions", "organizations_url": "https://api.github.com/users/Cheban1996/orgs", "repos_url": "https://api.github.com/users/Cheban1996/repos", "events_url": "https://api.github.com/users/Cheban1996/events{/privacy}", "received_events_url": "https://api.github.com/users/Cheban1996/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-07T09:36:57Z", "updated_at": "2020-02-07T11:46:37Z", "closed_at": "2020-02-07T11:46:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, gues. I have trable with next problem from import\r\n\r\n```\r\nfrom . import fields, reqparse, apidoc, inputs, cors\r\n  File \"/usr/lib/python3.7/site-packages/flask_restplus/fields.py\", line 13, in <module>\r\n    from werkzeug import cached_property\r\nImportError: cannot import name 'cached_property' from 'werkzeug' (/usr/lib/python3.7/site-packages/werkzeug/__init__.py)\r\n```\r\nVesion flask==1.1.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/858", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/858/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/858/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/858/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/858", "id": 560865669, "node_id": "MDU6SXNzdWU1NjA4NjU2Njk=", "number": 858, "title": "Make a release", "user": {"login": "m-aciek", "id": 9288014, "node_id": "MDQ6VXNlcjkyODgwMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9288014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-aciek", "html_url": "https://github.com/m-aciek", "followers_url": "https://api.github.com/users/m-aciek/followers", "following_url": "https://api.github.com/users/m-aciek/following{/other_user}", "gists_url": "https://api.github.com/users/m-aciek/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-aciek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-aciek/subscriptions", "organizations_url": "https://api.github.com/users/m-aciek/orgs", "repos_url": "https://api.github.com/users/m-aciek/repos", "events_url": "https://api.github.com/users/m-aciek/events{/privacy}", "received_events_url": "https://api.github.com/users/m-aciek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-06T08:55:59Z", "updated_at": "2020-02-06T13:49:12Z", "closed_at": "2020-02-06T13:49:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "#835 fix is on master, but not in 0.3.7 release.\r\n\r\nCould you consider releasing 0.3.8 before 1.0.0 (#250) with this fix only?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/857", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/857/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/857/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/857/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/857", "id": 558696020, "node_id": "MDU6SXNzdWU1NTg2OTYwMjA=", "number": 857, "title": "How can I marshal a comma-separated DB field into a fields.List?", "user": {"login": "caffeinatedMike", "id": 22151742, "node_id": "MDQ6VXNlcjIyMTUxNzQy", "avatar_url": "https://avatars1.githubusercontent.com/u/22151742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caffeinatedMike", "html_url": "https://github.com/caffeinatedMike", "followers_url": "https://api.github.com/users/caffeinatedMike/followers", "following_url": "https://api.github.com/users/caffeinatedMike/following{/other_user}", "gists_url": "https://api.github.com/users/caffeinatedMike/gists{/gist_id}", "starred_url": "https://api.github.com/users/caffeinatedMike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caffeinatedMike/subscriptions", "organizations_url": "https://api.github.com/users/caffeinatedMike/orgs", "repos_url": "https://api.github.com/users/caffeinatedMike/repos", "events_url": "https://api.github.com/users/caffeinatedMike/events{/privacy}", "received_events_url": "https://api.github.com/users/caffeinatedMike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-02T13:22:43Z", "updated_at": "2020-02-03T14:47:30Z", "closed_at": "2020-02-03T14:47:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a field in an inherited database, let's call it `tags`, that stores comma-separated values. I want to marshal this field into a list by splitting the value by a comma. \n\nSo, if the DB field holds the value:  \n```a,b,c,d,e```  \nI want to marshal that value into:  \n```python3  \n{\n    \"tags\": [\n        \"a\",\n        \"b\",\n        \"c\",\n        \"d\",\n        \"e\"\n    ]\n}\n```\n\nHow could I accomplish this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/854", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/854/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/854/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/854/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/854", "id": 546818569, "node_id": "MDU6SXNzdWU1NDY4MTg1Njk=", "number": 854, "title": "Decorator cors.crossdomain cant't work with marshal_with when returning a list of object", "user": {"login": "lixianwen", "id": 28818807, "node_id": "MDQ6VXNlcjI4ODE4ODA3", "avatar_url": "https://avatars3.githubusercontent.com/u/28818807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lixianwen", "html_url": "https://github.com/lixianwen", "followers_url": "https://api.github.com/users/lixianwen/followers", "following_url": "https://api.github.com/users/lixianwen/following{/other_user}", "gists_url": "https://api.github.com/users/lixianwen/gists{/gist_id}", "starred_url": "https://api.github.com/users/lixianwen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lixianwen/subscriptions", "organizations_url": "https://api.github.com/users/lixianwen/orgs", "repos_url": "https://api.github.com/users/lixianwen/repos", "events_url": "https://api.github.com/users/lixianwen/events{/privacy}", "received_events_url": "https://api.github.com/users/lixianwen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-08T12:01:08Z", "updated_at": "2020-04-14T07:30:40Z", "closed_at": "2020-04-14T07:30:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, as the title say, decorator @cors.crossdomain cant't work with @marshal_with when returning a list of object.\r\n\r\nFlask             1.1.1     \r\nFlask-RESTful     0.3.7 \r\n\r\nHere is my snippet as follow\r\n```\r\n(env) [root@localhost ~]# cat api.py \r\n#!/usr/bin/env python\r\n\r\nfrom flask import Flask\r\nfrom flask_restful import Resource, Api\r\nfrom flask_restful import reqparse\r\nfrom flask_restful import fields, marshal_with\r\nfrom flask_restful.utils import cors\r\n\r\napp = Flask(__name__)\r\napi_bp = Blueprint('api', __name__)\r\napi = Api(api_bp)\r\n\r\nres = {'name': fields.String}\r\n\r\n\r\nclass TestDetail(Resource):\r\n#    decorators = [marshal_with(res), cors.crossdomain(origin='*')]\r\n\r\n    @cors.crossdomain(origin='*')\r\n    @marshal_with(res)\r\n    def post(self):\r\n        print(self.__class__.__name__)\r\n        args = parser.parse_args()\r\n        return [{'id': '5e008e1dbb69f22e8277ccae',\r\n                   'name': 'local_minion',\r\n                   'mid': 'local_minion',\r\n                   'used': [30011],\r\n                   'cap': 15}]\r\n\r\n\r\napi.add_resource(TestDetail, '/test')\r\napp.register_blueprint(api_bp)\r\n\r\nparser = reqparse.RequestParser()\r\nparser.add_argument('name')\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(host='0.0.0.0', port=5000, debug=True)\r\n```\r\n\r\nWhen I use marshal_with decorator or didn't use them both, it works well. \r\n\r\nFor making a cors request, I use cors module from flask_restful.utils. It works well even combine with  @marshal_with when return a dict. But when returning a list of object, an exception raised\r\n```\r\n192.168.86.128 - - [08/Jan/2020 19:28:00] \"POST /test HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/root/env/lib/python3.6/site-packages/flask/app.py\", line 2463, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/root/env/lib/python3.6/site-packages/flask/app.py\", line 2449, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/root/env/lib/python3.6/site-packages/flask_restful/__init__.py\", line 269, in error_router\r\n    return original_handler(e)\r\n  File \"/root/env/lib/python3.6/site-packages/flask/app.py\", line 1866, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/root/env/lib/python3.6/site-packages/flask/_compat.py\", line 38, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/root/env/lib/python3.6/site-packages/flask/app.py\", line 2446, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/root/env/lib/python3.6/site-packages/flask/app.py\", line 1951, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/root/env/lib/python3.6/site-packages/flask_restful/__init__.py\", line 269, in error_router\r\n    return original_handler(e)\r\n  File \"/root/env/lib/python3.6/site-packages/flask/app.py\", line 1820, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/root/env/lib/python3.6/site-packages/flask/_compat.py\", line 38, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/root/env/lib/python3.6/site-packages/flask/app.py\", line 1949, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/root/env/lib/python3.6/site-packages/flask/app.py\", line 1935, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/root/env/lib/python3.6/site-packages/flask_restful/__init__.py\", line 458, in wrapper\r\n    resp = resource(*args, **kwargs)\r\n  File \"/root/env/lib/python3.6/site-packages/flask/views.py\", line 89, in view\r\n    return self.dispatch_request(*args, **kwargs)\r\n  File \"/root/env/lib/python3.6/site-packages/flask_restful/__init__.py\", line 573, in dispatch_request\r\n    resp = meth(*args, **kwargs)\r\n  File \"/root/env/lib/python3.6/site-packages/flask_restful/utils/cors.py\", line 35, in wrapped_function\r\n    resp = make_response(f(*args, **kwargs))\r\n  File \"/root/env/lib/python3.6/site-packages/flask/helpers.py\", line 223, in make_response\r\n    return current_app.make_response(args)\r\n  File \"/root/env/lib/python3.6/site-packages/flask/app.py\", line 2130, in make_response\r\n    \" {rv.__class__.__name__}.\".format(rv=rv)\r\nTypeError: The view function did not return a valid response. The return type must be a string, dict, tuple, Response instance, or WSGI callable, but it was a list.\r\n```\r\n\r\nA view decorated by marshal_with would return a OrderedDict, @marshal_with would work first and @cors.crossdomain wraps it later.(Am i wrong?)\r\n\r\nBeside, it that a bad idea by wrap a method directly in Flask? But I seen the flask restful [document](https://flask-restful.readthedocs.io/en/latest/fields.html) show this way.\r\n\r\nFinally, refer this [pull request](https://github.com/flask-restful/flask-restful/pull/131), I found an Imperfect way to fix this issue, that is, add the decorator in a list to the relevant parameter in the Api instance, which also mean than all router can open for a cors request.\r\n\r\nAm I missing something ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/853", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/853/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/853/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/853/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/853", "id": 540899345, "node_id": "MDU6SXNzdWU1NDA4OTkzNDU=", "number": 853, "title": "No routes registered for resources", "user": {"login": "zgoda", "id": 141999, "node_id": "MDQ6VXNlcjE0MTk5OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/141999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zgoda", "html_url": "https://github.com/zgoda", "followers_url": "https://api.github.com/users/zgoda/followers", "following_url": "https://api.github.com/users/zgoda/following{/other_user}", "gists_url": "https://api.github.com/users/zgoda/gists{/gist_id}", "starred_url": "https://api.github.com/users/zgoda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zgoda/subscriptions", "organizations_url": "https://api.github.com/users/zgoda/orgs", "repos_url": "https://api.github.com/users/zgoda/repos", "events_url": "https://api.github.com/users/zgoda/events{/privacy}", "received_events_url": "https://api.github.com/users/zgoda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-20T09:50:40Z", "updated_at": "2019-12-20T23:09:10Z", "closed_at": "2019-12-20T18:37:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Flask-RESTFul does not register routes for resources, resulting in 404 on any resource path.\r\n\r\nhttps://github.com/zgoda/issues/tree/master/flask-restful/no-routes-registered\r\n\r\npython3.8 on linux x64\r\n\r\n```shell\r\n$ pip list\r\nPackage       Version Location                                                      \r\n------------- ------- --------------------------------------------------------------\r\naniso8601     8.0.0   \r\nClick         7.0     \r\nFlask         1.1.1   \r\nFlask-RESTful 0.3.7   \r\nitsdangerous  1.1.0   \r\nJinja2        2.10.3  \r\nMarkupSafe    1.1.1   \r\npip           19.3.1  \r\npkg-resources 0.0.0   \r\npony          0.7.11  \r\npython-dotenv 0.10.3  \r\npytz          2019.3  \r\nsetuptools    39.0.1  \r\nsix           1.13.0  \r\ntodos         1.0.0   /home/jarek/work/issues/flask-restful/no-routes-registered/src\r\nWerkzeug      0.16.0  \r\nwheel         0.33.6\r\n```\r\n\r\nThe code registers resource under path `/todos` and then:\r\n\r\n```shell\r\n$ frt routes\r\nEndpoint  Methods  Rule\r\n--------  -------  -----------------------\r\nindex     GET      /\r\nstatic    GET      /static/<path:filename>\r\n```\r\n\r\nAm I doing anything wrong? The exact same application structure (factory, resources, models, extension registration, etc) works fine with Flask-RESTPlus, fails with Flask-RESTFul.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/851", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/851/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/851/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/851/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/851", "id": 534751322, "node_id": "MDU6SXNzdWU1MzQ3NTEzMjI=", "number": 851, "title": "importing the ABCs deprecated", "user": {"login": "gdoumenc", "id": 3594196, "node_id": "MDQ6VXNlcjM1OTQxOTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3594196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdoumenc", "html_url": "https://github.com/gdoumenc", "followers_url": "https://api.github.com/users/gdoumenc/followers", "following_url": "https://api.github.com/users/gdoumenc/following{/other_user}", "gists_url": "https://api.github.com/users/gdoumenc/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdoumenc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdoumenc/subscriptions", "organizations_url": "https://api.github.com/users/gdoumenc/orgs", "repos_url": "https://api.github.com/users/gdoumenc/repos", "events_url": "https://api.github.com/users/gdoumenc/events{/privacy}", "received_events_url": "https://api.github.com/users/gdoumenc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-09T07:46:10Z", "updated_at": "2019-12-10T13:45:40Z", "closed_at": "2019-12-10T13:45:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "=============================== warnings summary ===============================\r\n/home/studiogdo/.local/share/virtualenvs/coworks-C8kiIu6_/lib/python3.7/site-packages/flask_restful/__init__.py:17\r\n  /home/studiogdo/.local/share/virtualenvs/coworks-C8kiIu6_/lib/python3.7/site-packages/flask_restful/__init__.py:17: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n    from collections import Mapping\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/849", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/849/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/849/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/849/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/849", "id": 527771189, "node_id": "MDU6SXNzdWU1Mjc3NzExODk=", "number": 849, "title": "[Suggestion] : Replace json with simplejson for Decimal serializing", "user": {"login": "gwasserfall", "id": 17541336, "node_id": "MDQ6VXNlcjE3NTQxMzM2", "avatar_url": "https://avatars1.githubusercontent.com/u/17541336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwasserfall", "html_url": "https://github.com/gwasserfall", "followers_url": "https://api.github.com/users/gwasserfall/followers", "following_url": "https://api.github.com/users/gwasserfall/following{/other_user}", "gists_url": "https://api.github.com/users/gwasserfall/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwasserfall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwasserfall/subscriptions", "organizations_url": "https://api.github.com/users/gwasserfall/orgs", "repos_url": "https://api.github.com/users/gwasserfall/repos", "events_url": "https://api.github.com/users/gwasserfall/events{/privacy}", "received_events_url": "https://api.github.com/users/gwasserfall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-24T22:53:04Z", "updated_at": "2020-03-26T14:39:26Z", "closed_at": "2020-03-26T14:39:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "When serializing a Decimal object obtained from a mysql query, the following exception is thrown\r\n```\r\nTypeError: Object of type Decimal is not JSON serializable\r\n```\r\nReplacing json with simplejson in **flask_restful/representations/json.py**:4 fixes the issue. I haven't found anyone else with the same issue so may not be very important. And also requires another dependancy\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/845", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/845/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/845/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/845/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/845", "id": 518741141, "node_id": "MDU6SXNzdWU1MTg3NDExNDE=", "number": 845, "title": "reqparse: Add method to add multiple arguments", "user": {"login": "alonme", "id": 25847554, "node_id": "MDQ6VXNlcjI1ODQ3NTU0", "avatar_url": "https://avatars0.githubusercontent.com/u/25847554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alonme", "html_url": "https://github.com/alonme", "followers_url": "https://api.github.com/users/alonme/followers", "following_url": "https://api.github.com/users/alonme/following{/other_user}", "gists_url": "https://api.github.com/users/alonme/gists{/gist_id}", "starred_url": "https://api.github.com/users/alonme/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alonme/subscriptions", "organizations_url": "https://api.github.com/users/alonme/orgs", "repos_url": "https://api.github.com/users/alonme/repos", "events_url": "https://api.github.com/users/alonme/events{/privacy}", "received_events_url": "https://api.github.com/users/alonme/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-06T20:45:56Z", "updated_at": "2019-11-07T06:14:27Z", "closed_at": "2019-11-07T03:57:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the `add_argument` method can accept only one argument.\r\n\r\nI have a use case where different endpoints use the same arguments, so i created `Argument` objects and i want to reuse them.\r\n\r\nAdding an 'add_arguments' method would simplify this, as i would be able to add my many arguments using one function call.\r\n\r\nWill happily implement.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/841", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/841/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/841/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/841/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/841", "id": 516648838, "node_id": "MDU6SXNzdWU1MTY2NDg4Mzg=", "number": 841, "title": "render_template only returns a string", "user": {"login": "joegasewicz", "id": 28711247, "node_id": "MDQ6VXNlcjI4NzExMjQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/28711247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joegasewicz", "html_url": "https://github.com/joegasewicz", "followers_url": "https://api.github.com/users/joegasewicz/followers", "following_url": "https://api.github.com/users/joegasewicz/following{/other_user}", "gists_url": "https://api.github.com/users/joegasewicz/gists{/gist_id}", "starred_url": "https://api.github.com/users/joegasewicz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joegasewicz/subscriptions", "organizations_url": "https://api.github.com/users/joegasewicz/orgs", "repos_url": "https://api.github.com/users/joegasewicz/repos", "events_url": "https://api.github.com/users/joegasewicz/events{/privacy}", "received_events_url": "https://api.github.com/users/joegasewicz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-02T16:33:46Z", "updated_at": "2019-11-04T23:59:49Z", "closed_at": "2019-11-04T14:35:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to return  Flask's `render_template` but it only returns a plain string. \r\nWould it be possible to return the expected HTML content as this is the expected outcome from a Flask application, it could help dev's new to the Flask API / Flask-Restful API...? Or perhaps we could log a warning to the console to  update `representations` ..?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/840", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/840/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/840/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/840/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/840", "id": 516605848, "node_id": "MDU6SXNzdWU1MTY2MDU4NDg=", "number": 840, "title": "Plan to change the `argument parsing` section in doc to remove `reqparser`?", "user": {"login": "liuzheng1990", "id": 32575445, "node_id": "MDQ6VXNlcjMyNTc1NDQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/32575445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liuzheng1990", "html_url": "https://github.com/liuzheng1990", "followers_url": "https://api.github.com/users/liuzheng1990/followers", "following_url": "https://api.github.com/users/liuzheng1990/following{/other_user}", "gists_url": "https://api.github.com/users/liuzheng1990/gists{/gist_id}", "starred_url": "https://api.github.com/users/liuzheng1990/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liuzheng1990/subscriptions", "organizations_url": "https://api.github.com/users/liuzheng1990/orgs", "repos_url": "https://api.github.com/users/liuzheng1990/repos", "events_url": "https://api.github.com/users/liuzheng1990/events{/privacy}", "received_events_url": "https://api.github.com/users/liuzheng1990/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-02T14:10:13Z", "updated_at": "2019-11-04T14:37:11Z", "closed_at": "2019-11-04T14:37:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "When reading the Quickstart documentation, it seems users were encouraged to use `reqparser` for dealing with request arguments. However, when I clicked into the `reqparser` section, it mentioned that this module is going to be deprecated soon. I wonder what's then encouraged to be used to do argument parsing? I know that we can use marshmallow on top of Flask's `request` object, but is there any plan to demonstrate the paradigm way to do it in the documentation? I think if we are going to deprecate `reqparser`, we should provide the alternative in `quickstart` to help the beginners. Thanks@", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/837", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/837/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/837/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/837/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/837", "id": 512911544, "node_id": "MDU6SXNzdWU1MTI5MTE1NDQ=", "number": 837, "title": "How to handle POST request with `Content-Type: application/jwt`?", "user": {"login": "bertdida", "id": 38489033, "node_id": "MDQ6VXNlcjM4NDg5MDMz", "avatar_url": "https://avatars2.githubusercontent.com/u/38489033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bertdida", "html_url": "https://github.com/bertdida", "followers_url": "https://api.github.com/users/bertdida/followers", "following_url": "https://api.github.com/users/bertdida/following{/other_user}", "gists_url": "https://api.github.com/users/bertdida/gists{/gist_id}", "starred_url": "https://api.github.com/users/bertdida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bertdida/subscriptions", "organizations_url": "https://api.github.com/users/bertdida/orgs", "repos_url": "https://api.github.com/users/bertdida/repos", "events_url": "https://api.github.com/users/bertdida/events{/privacy}", "received_events_url": "https://api.github.com/users/bertdida/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-27T02:42:35Z", "updated_at": "2019-10-31T19:59:25Z", "closed_at": "2019-10-31T19:59:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I access the value using `reqparse`, if the request's header has  `Content-Type: application/jwt`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/832", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/832/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/832/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/832/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/832", "id": 507768873, "node_id": "MDU6SXNzdWU1MDc3Njg4NzM=", "number": 832, "title": " DeprecationWarning", "user": {"login": "gkshindia", "id": 25399360, "node_id": "MDQ6VXNlcjI1Mzk5MzYw", "avatar_url": "https://avatars2.githubusercontent.com/u/25399360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkshindia", "html_url": "https://github.com/gkshindia", "followers_url": "https://api.github.com/users/gkshindia/followers", "following_url": "https://api.github.com/users/gkshindia/following{/other_user}", "gists_url": "https://api.github.com/users/gkshindia/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkshindia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkshindia/subscriptions", "organizations_url": "https://api.github.com/users/gkshindia/orgs", "repos_url": "https://api.github.com/users/gkshindia/repos", "events_url": "https://api.github.com/users/gkshindia/events{/privacy}", "received_events_url": "https://api.github.com/users/gkshindia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-16T10:43:25Z", "updated_at": "2020-02-12T13:18:36Z", "closed_at": "2019-11-27T20:58:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "![DeprecationWarning](https://user-images.githubusercontent.com/25399360/66912031-66c7a580-f02f-11e9-9015-d151b009fcfa.png)\r\n\r\nWhen I ran pytest, received the above warning.\r\n**Fix** :\r\nI replaced `from collections import Mapping` to `from collections.abc import Mapping` \r\nand ran the pytest again, the warning was gone.\r\n\r\nPlease note..\r\nThank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/831", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/831/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/831/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/831/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/831", "id": 507721173, "node_id": "MDU6SXNzdWU1MDc3MjExNzM=", "number": 831, "title": "Describing nested dictionaries followed by dynamic keys for marshal_with", "user": {"login": "KietnaQuTak", "id": 15672157, "node_id": "MDQ6VXNlcjE1NjcyMTU3", "avatar_url": "https://avatars1.githubusercontent.com/u/15672157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KietnaQuTak", "html_url": "https://github.com/KietnaQuTak", "followers_url": "https://api.github.com/users/KietnaQuTak/followers", "following_url": "https://api.github.com/users/KietnaQuTak/following{/other_user}", "gists_url": "https://api.github.com/users/KietnaQuTak/gists{/gist_id}", "starred_url": "https://api.github.com/users/KietnaQuTak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KietnaQuTak/subscriptions", "organizations_url": "https://api.github.com/users/KietnaQuTak/orgs", "repos_url": "https://api.github.com/users/KietnaQuTak/repos", "events_url": "https://api.github.com/users/KietnaQuTak/events{/privacy}", "received_events_url": "https://api.github.com/users/KietnaQuTak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-16T09:13:53Z", "updated_at": "2019-10-17T09:53:12Z", "closed_at": "2019-10-16T15:11:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I may not understand examples I have found regarding describing model of dictionary with different names as keys cause I have no idea how to describe bellow model properly:\r\n```\r\n{\r\n\t\"number\": 123,\r\n\t\"docs\": {\r\n\t\t\"number_1\": {\r\n\t\t\t\"creator\": \"some@email.pl\",\r\n\t\t\t\"subject\": \"document subject\",\r\n\t\t\t\"filename\": \"document filename\",\r\n\t\t\t\"date\": \"2019-10-16 07:04:50.371130\",\r\n\t\t\t\"author\": \"author name\",\r\n\t\t\t\"r1\": \"recipient 1 name\",\r\n\t\t\t\"r2\": \"recipient 2 name\",\r\n\t\t\t\"r3\": \"recipient 3 name\",\r\n\t\t\t\"sent\": true\r\n\t\t}\r\n\t\t\"number_2\": {\r\n\t\t\t\"creator\": \"some@email.pl\",\r\n\t\t\t\"subject\": \"document subject\",\r\n\t\t\t\"filename\": \"document filename\",\r\n\t\t\t\"date\": \"2019-10-15 07:04:50.371130\",\r\n\t\t\t\"author\": \"author name\",\r\n\t\t\t\"r1\": \"recipient 1 name\",\r\n\t\t\t\"r2\": \"recipient 2 name\",\r\n\t\t\t\"r3\": \"recipient 3 name\",\r\n\t\t\t\"sent\": true\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nIn \"docs\" I'm planning to change into simple list of objects but for the moment I would like to describe model in which \"docs\" is a dictionary of smaller dictionaries indicated by keys {\"number_1\": MODEL_DOC, \"number_2\": MODEL_DOC}. I was trying to achieve it as bellow but I have now idea how to describe \"(document_number)\" to indicate that there could be many different document dictionaries followed by document numbers as key (strings).\r\n\r\n```\r\nMODEL_DOC = api.model('Document', {\r\n\tCREATOR: fields.String(description='Creator e-mail.'),\r\n\tSUBJECT: fields.String(description='Subject.'),\r\n\tFILENAME: fields.String(description='Filename.'),\r\n\tDATE: fields.DateTime(description='Generation date.'),\r\n\tAUTHOR: fields.String(description='Author name.'),\r\n\tR1: fields.String(description='1st recipient name.'),\r\n\tR2: fields.String(description='2nd recipient name.'),\r\n\tR3: fields.String(description='3rd recipient name.'),\r\n\tSENT: fields.Boolean(description='Sent status.')\r\n})\r\nMODEL_DOCS = api.model('Documents', {\r\n\t'(document number)': fields.Nested(MODEL_DOC)\r\n})\r\n\r\nMODEL_DOWNLOAD_RESPONSE = api.model('Document Download Response', {\r\n\tNUMBER: fields.Integer(description='Document number.'),\r\n\tDOCS: fields.Nested(MODEL_DOCS, description='Dictionary with documents number as key and document data as value.')\r\n})\r\n```\r\n\r\nBest regards\r\nKietna Qu'Tak", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/825", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/825/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/825/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/825/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/825", "id": 471523567, "node_id": "MDU6SXNzdWU0NzE1MjM1Njc=", "number": 825, "title": "flask.abort in Flask-RESTful==0.3.7 is not work but in 0.3.6 is not work", "user": {"login": "wangxue666666", "id": 31881655, "node_id": "MDQ6VXNlcjMxODgxNjU1", "avatar_url": "https://avatars3.githubusercontent.com/u/31881655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wangxue666666", "html_url": "https://github.com/wangxue666666", "followers_url": "https://api.github.com/users/wangxue666666/followers", "following_url": "https://api.github.com/users/wangxue666666/following{/other_user}", "gists_url": "https://api.github.com/users/wangxue666666/gists{/gist_id}", "starred_url": "https://api.github.com/users/wangxue666666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wangxue666666/subscriptions", "organizations_url": "https://api.github.com/users/wangxue666666/orgs", "repos_url": "https://api.github.com/users/wangxue666666/repos", "events_url": "https://api.github.com/users/wangxue666666/events{/privacy}", "received_events_url": "https://api.github.com/users/wangxue666666/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-23T07:13:00Z", "updated_at": "2019-07-25T01:21:01Z", "closed_at": "2019-07-25T01:21:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example\uff1a\r\n   `abort(jsonify(dict(code=code, msg=get_code_msg(code))))` is not work in 0.3.7,\r\n`abort(404)` is work. if i modify my version to 0.3.6 is ok. Why this problem and what should I do?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/824", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/824/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/824/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/824/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/824", "id": 463256358, "node_id": "MDU6SXNzdWU0NjMyNTYzNTg=", "number": 824, "title": "Double HTTP request", "user": {"login": "gabrielgambarra", "id": 33934389, "node_id": "MDQ6VXNlcjMzOTM0Mzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/33934389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabrielgambarra", "html_url": "https://github.com/gabrielgambarra", "followers_url": "https://api.github.com/users/gabrielgambarra/followers", "following_url": "https://api.github.com/users/gabrielgambarra/following{/other_user}", "gists_url": "https://api.github.com/users/gabrielgambarra/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabrielgambarra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabrielgambarra/subscriptions", "organizations_url": "https://api.github.com/users/gabrielgambarra/orgs", "repos_url": "https://api.github.com/users/gabrielgambarra/repos", "events_url": "https://api.github.com/users/gabrielgambarra/events{/privacy}", "received_events_url": "https://api.github.com/users/gabrielgambarra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-02T14:18:39Z", "updated_at": "2019-07-08T14:21:13Z", "closed_at": "2019-07-08T14:21:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got a problem with my API. When I run the server and make some request, I notice it makes a double HTTP request: the first request is always 'OPTIONS' and then comes the request I want (POST or GET).\r\n\r\nHere an example of what console shows me when I make a login:\r\n\r\n`127.0.0.1 - - [02/Jul/2019 10:12:18] \"OPTIONS /auth HTTP/1.1\" 200 -\r\nINFO:werkzeug:127.0.0.1 - - [02/Jul/2019 10:12:18] \"OPTIONS /auth HTTP/1.1\" 200 -\r\n127.0.0.1 - - [02/Jul/2019 10:12:18] \"POST /auth HTTP/1.1\" 200 -\r\nINFO:werkzeug:127.0.0.1 - - [02/Jul/2019 10:12:18] \"POST /auth HTTP/1.1\" 200 -`\r\n\r\nMore informations: I'm using Angular 7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/823", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/823/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/823/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/823/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/823", "id": 460280743, "node_id": "MDU6SXNzdWU0NjAyODA3NDM=", "number": 823, "title": "Problem with marshaller in python 3 ", "user": {"login": "vbt95", "id": 40431796, "node_id": "MDQ6VXNlcjQwNDMxNzk2", "avatar_url": "https://avatars0.githubusercontent.com/u/40431796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vbt95", "html_url": "https://github.com/vbt95", "followers_url": "https://api.github.com/users/vbt95/followers", "following_url": "https://api.github.com/users/vbt95/following{/other_user}", "gists_url": "https://api.github.com/users/vbt95/gists{/gist_id}", "starred_url": "https://api.github.com/users/vbt95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vbt95/subscriptions", "organizations_url": "https://api.github.com/users/vbt95/orgs", "repos_url": "https://api.github.com/users/vbt95/repos", "events_url": "https://api.github.com/users/vbt95/events{/privacy}", "received_events_url": "https://api.github.com/users/vbt95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-25T08:22:30Z", "updated_at": "2019-06-25T09:18:53Z", "closed_at": "2019-06-25T09:18:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "So in our existing code which is written in python 2.7 we have a dict object on which we use marshal.\r\n\r\nIn flask-restful fields file we have a function is_indexable_but_not_string which checks whether there is strip and __iter__ attr in the object.\r\n\r\nRefer https://medium.com/@kevowahome/python-2-vs-3-hasattr-behaviour-f1bed48b068\r\n\r\nIn python 2 hasattr handled the keyerror as there is no strip attribute in dict everything was working fine. But now in python 3 behaviour of hasattr is changed.\r\nFor python 3 has marshal support for dict been removed by flask-restful? In such case what is the recommended way which i should use.\r\nIn case of no the above function needs to be fixed to handle the change in hasattr of python 3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/822", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/822/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/822/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/822/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/822", "id": 457191495, "node_id": "MDU6SXNzdWU0NTcxOTE0OTU=", "number": 822, "title": "Add option to sort `fields.List` when presented with a set", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-17T23:24:47Z", "updated_at": "2019-06-18T12:43:54Z", "closed_at": "2019-06-18T12:43:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the code produces the following:\r\n\r\nhttps://github.com/flask-restful/flask-restful/blob/f6921bbcc3a392cd92a1381357b5efa069cc55ea/flask_restful/fields.py#L181-L183\r\n\r\nwhich has undefined ordering\r\n\r\n----\r\n\r\nProposal:\r\n\r\n- introduce a `sort` keyword-only argument to `fields.List`, defaulting to `False`\r\n- (note, it must default to `False` even for sets as you could potentially be marshalling unsortable data)\r\n\r\n----\r\n\r\nWorkaround\r\n\r\n```python\r\nclass SortedList(fields.List):\r\n    def format(self, value):\r\n        return super(SortedList, self).format(sorted(value))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/821", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/821/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/821/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/821/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/821", "id": 454036323, "node_id": "MDU6SXNzdWU0NTQwMzYzMjM=", "number": 821, "title": "flask-rbac feature ready?", "user": {"login": "chienjchienj", "id": 605097, "node_id": "MDQ6VXNlcjYwNTA5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/605097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chienjchienj", "html_url": "https://github.com/chienjchienj", "followers_url": "https://api.github.com/users/chienjchienj/followers", "following_url": "https://api.github.com/users/chienjchienj/following{/other_user}", "gists_url": "https://api.github.com/users/chienjchienj/gists{/gist_id}", "starred_url": "https://api.github.com/users/chienjchienj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chienjchienj/subscriptions", "organizations_url": "https://api.github.com/users/chienjchienj/orgs", "repos_url": "https://api.github.com/users/chienjchienj/repos", "events_url": "https://api.github.com/users/chienjchienj/events{/privacy}", "received_events_url": "https://api.github.com/users/chienjchienj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-10T07:32:49Z", "updated_at": "2019-06-11T00:54:18Z", "closed_at": "2019-06-10T13:27:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is flask-restful support flask-rbac feature?\r\n\r\nlike following decorator for HelloWorld class\r\n\r\n```\r\nfrom flask_rbac import RBAC\r\nfrom flask import Flask\r\nfrom flask_restful import Resource, Api\r\n\r\napp = Flask(__name__)\r\napi = Api(app)\r\nrbac = RBAC()\r\nrbac.init_app(app)\r\n\r\n@rbac.allow('myUser')\r\nclass HelloWorld(Resource):\r\n    def get(self):\r\n        return {'hello': 'world'}\r\n\r\napi.add_resource(HelloWorld, '/')\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/820", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/820/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/820/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/820/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/820", "id": 451920796, "node_id": "MDU6SXNzdWU0NTE5MjA3OTY=", "number": 820, "title": "swagger-ui base path is not configurable", "user": {"login": "mtovmassian", "id": 9588015, "node_id": "MDQ6VXNlcjk1ODgwMTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9588015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mtovmassian", "html_url": "https://github.com/mtovmassian", "followers_url": "https://api.github.com/users/mtovmassian/followers", "following_url": "https://api.github.com/users/mtovmassian/following{/other_user}", "gists_url": "https://api.github.com/users/mtovmassian/gists{/gist_id}", "starred_url": "https://api.github.com/users/mtovmassian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mtovmassian/subscriptions", "organizations_url": "https://api.github.com/users/mtovmassian/orgs", "repos_url": "https://api.github.com/users/mtovmassian/repos", "events_url": "https://api.github.com/users/mtovmassian/events{/privacy}", "received_events_url": "https://api.github.com/users/mtovmassian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-04T10:34:43Z", "updated_at": "2020-07-31T21:00:25Z", "closed_at": "2019-06-04T11:43:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "As explained in this [post](https://stackoverflow.com/questions/54837636/how-to-set-base-url-for-swagger-with-flask-restplus), the swagger client is always served behind the server root url _/swagger-ui_. \r\nSo when the flask-restplus server is placed behind a proxy the paths of the swagger-ui dependencies are not resolved in a good way and you need to manage a reverse proxy mechanism to fix the issue.\r\n\r\nIt should be useful to bring more configurability to the swagger client. In the same way it is integrated in the Express framework ([swagger-ui-express](https://www.npmjs.com/package/swagger-ui-express)), where you have a _setup()_ method that manage _host_ and _basePath_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/818", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/818/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/818/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/818/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/818", "id": 445314268, "node_id": "MDU6SXNzdWU0NDUzMTQyNjg=", "number": 818, "title": "reqparse can't pass empty list as a param", "user": {"login": "yejialin", "id": 11832179, "node_id": "MDQ6VXNlcjExODMyMTc5", "avatar_url": "https://avatars2.githubusercontent.com/u/11832179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yejialin", "html_url": "https://github.com/yejialin", "followers_url": "https://api.github.com/users/yejialin/followers", "following_url": "https://api.github.com/users/yejialin/following{/other_user}", "gists_url": "https://api.github.com/users/yejialin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yejialin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yejialin/subscriptions", "organizations_url": "https://api.github.com/users/yejialin/orgs", "repos_url": "https://api.github.com/users/yejialin/repos", "events_url": "https://api.github.com/users/yejialin/events{/privacy}", "received_events_url": "https://api.github.com/users/yejialin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-17T07:59:43Z", "updated_at": "2019-05-17T11:48:35Z", "closed_at": "2019-05-17T11:48:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "for example, i have code like this.\r\n```\r\nrp = reqparse.RequestParser()\r\nrp.add_argument(\"books\", type=str, location=\"json\", action=\"append\")\r\n```\r\nif i pass body  **{\"books\": []}**  in request,\r\ni got parsed args  **{\"books\": None}**\r\n\r\nthen i read the source code in flask_restful reqparse.py\r\n```\r\nClass Argument(object):\r\n    ......\r\n    def parse(self, request, bundle_errors=False):\r\n        ....\r\n        ....\r\n        if not results and self.required:\r\n            if isinstance(self.location, six.string_types):\r\n                error_msg = u\"Missing required parameter in {0}\".format(\r\n                    _friendly_location.get(self.location, self.location)\r\n                )\r\n            else:\r\n                friendly_locations = [_friendly_location.get(loc, loc)\r\n                                      for loc in self.location]\r\n                error_msg = u\"Missing required parameter in {0}\".format(\r\n                    ' or '.join(friendly_locations)\r\n                )\r\n            if current_app.config.get(\"BUNDLE_ERRORS\", False) or bundle_errors:\r\n                return self.handle_validation_error(ValueError(error_msg), bundle_errors)\r\n            self.handle_validation_error(ValueError(error_msg), bundle_errors)\r\n\r\n        if not results:\r\n            if callable(self.default):\r\n                return self.default(), _not_found\r\n            else:\r\n                return self.default, _not_found\r\n\r\n        if self.action == 'append':\r\n            return results, _found\r\n\r\n```\r\ni think if i pass empty list, it should will reach  if self.action == 'append' \r\nbut i will get into\r\n ```\r\n        if not results:\r\n            if callable(self.default):\r\n                return self.default(), _not_found\r\n            else:\r\n                return self.default, _not_found\r\n```\r\nand return None, _not_found(False)\r\ni think maybe the if condition maybe is if result is not None? is this a bug?\r\n\r\nthanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/816", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/816/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/816/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/816/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/816", "id": 437969920, "node_id": "MDU6SXNzdWU0Mzc5Njk5MjA=", "number": 816, "title": "reqparse: Passing a URL as a data parameter in POST - gets truncated", "user": {"login": "pliablepixels", "id": 4116654, "node_id": "MDQ6VXNlcjQxMTY2NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4116654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pliablepixels", "html_url": "https://github.com/pliablepixels", "followers_url": "https://api.github.com/users/pliablepixels/followers", "following_url": "https://api.github.com/users/pliablepixels/following{/other_user}", "gists_url": "https://api.github.com/users/pliablepixels/gists{/gist_id}", "starred_url": "https://api.github.com/users/pliablepixels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pliablepixels/subscriptions", "organizations_url": "https://api.github.com/users/pliablepixels/orgs", "repos_url": "https://api.github.com/users/pliablepixels/repos", "events_url": "https://api.github.com/users/pliablepixels/events{/privacy}", "received_events_url": "https://api.github.com/users/pliablepixels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-27T18:14:38Z", "updated_at": "2019-04-27T18:28:42Z", "closed_at": "2019-04-27T18:28:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for this excellent library.\r\n\r\nI am trying to send the following CURL command to the server (which uses reqparse to parse the arguments)\r\n```\r\ncurl -XPOST  \"http://localhost:5000/api/v1/detect/object?delete=false\"\r\n -d \"url=https://someserver/?mode=jpeg&user=user&pass=pass\" \r\n-H \"Authorization: Bearer ${ACCESS_TOKEN}\"\r\n```\r\n\r\nOn the server side, I've specified url as:\r\n`  parser.add_argument('url', default=False)`\r\n\r\nThe problem I am facing is that on the server side, \r\n`args['url']` reports `https://someserver/?mode=jpeg`. In other words, it's truncating everything after the first ampersand.\r\n\r\nHow does one go about receiving the full URL? Given commands are often sent from the command line, I can't expect them to be URL encoded at client side. \r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/815", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/815/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/815/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/815/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/815", "id": 437499568, "node_id": "MDU6SXNzdWU0Mzc0OTk1Njg=", "number": 815, "title": "How can I send a post Api from Flask server to Laravel server?", "user": {"login": "PhatBK", "id": 22172199, "node_id": "MDQ6VXNlcjIyMTcyMTk5", "avatar_url": "https://avatars1.githubusercontent.com/u/22172199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhatBK", "html_url": "https://github.com/PhatBK", "followers_url": "https://api.github.com/users/PhatBK/followers", "following_url": "https://api.github.com/users/PhatBK/following{/other_user}", "gists_url": "https://api.github.com/users/PhatBK/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhatBK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhatBK/subscriptions", "organizations_url": "https://api.github.com/users/PhatBK/orgs", "repos_url": "https://api.github.com/users/PhatBK/repos", "events_url": "https://api.github.com/users/PhatBK/events{/privacy}", "received_events_url": "https://api.github.com/users/PhatBK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-26T05:00:40Z", "updated_at": "2019-04-29T09:11:45Z", "closed_at": "2019-04-26T17:53:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/812", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/812/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/812/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/812/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/812", "id": 435782136, "node_id": "MDU6SXNzdWU0MzU3ODIxMzY=", "number": 812, "title": "Can you add a function in \"class Api\" like this", "user": {"login": "jianghaibo12138", "id": 17843033, "node_id": "MDQ6VXNlcjE3ODQzMDMz", "avatar_url": "https://avatars1.githubusercontent.com/u/17843033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jianghaibo12138", "html_url": "https://github.com/jianghaibo12138", "followers_url": "https://api.github.com/users/jianghaibo12138/followers", "following_url": "https://api.github.com/users/jianghaibo12138/following{/other_user}", "gists_url": "https://api.github.com/users/jianghaibo12138/gists{/gist_id}", "starred_url": "https://api.github.com/users/jianghaibo12138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jianghaibo12138/subscriptions", "organizations_url": "https://api.github.com/users/jianghaibo12138/orgs", "repos_url": "https://api.github.com/users/jianghaibo12138/repos", "events_url": "https://api.github.com/users/jianghaibo12138/events{/privacy}", "received_events_url": "https://api.github.com/users/jianghaibo12138/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-22T16:05:49Z", "updated_at": "2019-04-22T17:07:42Z", "closed_at": "2019-04-22T17:07:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "url_parterns = [\r\n    (HelloWorld, \"hello\")\r\n]\r\n\r\napi.add_bulk_resource(url_parterns)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/808", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/808/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/808/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/808/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/808", "id": 433052999, "node_id": "MDU6SXNzdWU0MzMwNTI5OTk=", "number": 808, "title": "Complex get parsing", "user": {"login": "rohit-conn", "id": 10296138, "node_id": "MDQ6VXNlcjEwMjk2MTM4", "avatar_url": "https://avatars1.githubusercontent.com/u/10296138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohit-conn", "html_url": "https://github.com/rohit-conn", "followers_url": "https://api.github.com/users/rohit-conn/followers", "following_url": "https://api.github.com/users/rohit-conn/following{/other_user}", "gists_url": "https://api.github.com/users/rohit-conn/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohit-conn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohit-conn/subscriptions", "organizations_url": "https://api.github.com/users/rohit-conn/orgs", "repos_url": "https://api.github.com/users/rohit-conn/repos", "events_url": "https://api.github.com/users/rohit-conn/events{/privacy}", "received_events_url": "https://api.github.com/users/rohit-conn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-15T00:31:40Z", "updated_at": "2019-04-15T12:21:52Z", "closed_at": "2019-04-15T12:21:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an endpoint\r\n`/search?name={config_name}&data.{key}={value}`\r\nHere data is a json object with multiple key value pairs.\r\nI want to use add_argument to parse `data.{key}`. Is it possible via regex in parser.add_argument.\r\nOr is there any other work around for this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/807", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/807/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/807/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/807/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/807", "id": 431275870, "node_id": "MDU6SXNzdWU0MzEyNzU4NzA=", "number": 807, "title": "request parser action='append' not support list of dict", "user": {"login": "heyhpython", "id": 36200210, "node_id": "MDQ6VXNlcjM2MjAwMjEw", "avatar_url": "https://avatars2.githubusercontent.com/u/36200210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heyhpython", "html_url": "https://github.com/heyhpython", "followers_url": "https://api.github.com/users/heyhpython/followers", "following_url": "https://api.github.com/users/heyhpython/following{/other_user}", "gists_url": "https://api.github.com/users/heyhpython/gists{/gist_id}", "starred_url": "https://api.github.com/users/heyhpython/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heyhpython/subscriptions", "organizations_url": "https://api.github.com/users/heyhpython/orgs", "repos_url": "https://api.github.com/users/heyhpython/repos", "events_url": "https://api.github.com/users/heyhpython/events{/privacy}", "received_events_url": "https://api.github.com/users/heyhpython/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-10T02:32:43Z", "updated_at": "2019-04-10T17:33:30Z", "closed_at": "2019-04-10T17:33:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I want to post this data to the server\r\n{\r\n\t\"files\":{\"oid\":\"test1\", \"file_type\":1, \"uri\":\"././\"},\r\n\t\"files\":{\"oid\":\"test2\", \"file_type\":2, \"uri\":\".1/.1/\"}\r\n}\r\nmy parser is :\r\n    parser = RequestParser()\r\n    parser.add_argument('files', type=dict, action='append', help='', location='json', required=True)\r\nand I only get \r\n{'files': [{'oid': 'test2', 'file_type': 2, 'uri': '.1/.1/'}]}\r\n\r\nso is there any way to solve this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/806", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/806/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/806/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/806/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/806", "id": 427685139, "node_id": "MDU6SXNzdWU0Mjc2ODUxMzk=", "number": 806, "title": "How to get a different error code when using add_resource.", "user": {"login": "rohit-conn", "id": 10296138, "node_id": "MDQ6VXNlcjEwMjk2MTM4", "avatar_url": "https://avatars1.githubusercontent.com/u/10296138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rohit-conn", "html_url": "https://github.com/rohit-conn", "followers_url": "https://api.github.com/users/rohit-conn/followers", "following_url": "https://api.github.com/users/rohit-conn/following{/other_user}", "gists_url": "https://api.github.com/users/rohit-conn/gists{/gist_id}", "starred_url": "https://api.github.com/users/rohit-conn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rohit-conn/subscriptions", "organizations_url": "https://api.github.com/users/rohit-conn/orgs", "repos_url": "https://api.github.com/users/rohit-conn/repos", "events_url": "https://api.github.com/users/rohit-conn/events{/privacy}", "received_events_url": "https://api.github.com/users/rohit-conn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-01T12:46:36Z", "updated_at": "2019-04-01T21:02:53Z", "closed_at": "2019-04-01T21:02:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently I have simple app with no database connectivity.\r\n`api.add_resource(<someClass>,'/<path>/<int:num>')`\r\n\r\nHere by default if I pass a string for the num value I get a 404.\r\nHow do I change this behavior to get my own custom error code. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/803", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/803/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/803/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/803/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/803", "id": 420820166, "node_id": "MDU6SXNzdWU0MjA4MjAxNjY=", "number": 803, "title": "Failed test case when combined with flask-jwt-extended", "user": {"login": "itsjef", "id": 1902587, "node_id": "MDQ6VXNlcjE5MDI1ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1902587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsjef", "html_url": "https://github.com/itsjef", "followers_url": "https://api.github.com/users/itsjef/followers", "following_url": "https://api.github.com/users/itsjef/following{/other_user}", "gists_url": "https://api.github.com/users/itsjef/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsjef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsjef/subscriptions", "organizations_url": "https://api.github.com/users/itsjef/orgs", "repos_url": "https://api.github.com/users/itsjef/repos", "events_url": "https://api.github.com/users/itsjef/events{/privacy}", "received_events_url": "https://api.github.com/users/itsjef/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-14T03:53:41Z", "updated_at": "2019-03-14T14:41:45Z", "closed_at": "2019-03-14T14:41:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am having good luck with Flask-Restful so far, but when I tried to combine your package with Flask-JWT-Extended, I ran into the issue of failed test cases.\r\n\r\nHere is a simplified test case to demonstrate the problem:\r\n\r\n**Test cases:**\r\n\r\n```python\r\n# test_flask.py (TESS PASSED)\r\nimport pytest\r\nfrom flask import Flask, jsonify\r\nfrom flask_jwt_extended import JWTManager, jwt_required\r\n\r\n\r\n@pytest.fixture(scope=\"function\")\r\ndef app():\r\n    app = Flask(__name__)\r\n    app.config[\"JWT_SECRET_KEY\"] = \"foobarbaz\"\r\n    JWTManager(app)\r\n\r\n    @app.route(\"/protected\", methods=[\"GET\"])\r\n    @jwt_required\r\n    def access_protected():\r\n        return jsonify(foo=\"bar\")\r\n\r\n    return app\r\n\r\n\r\ndef test_missing_headers(app):\r\n    test_client = app.test_client()\r\n\r\n    response = test_client.get(\"/protected\", headers=None)\r\n    assert response.status_code == 401\r\n    assert response.get_json() == {\"msg\": \"Missing Authorization Header\"}\r\n```\r\n\r\n```python\r\n# test_flask_restful.py (TEST ERROR)\r\nimport pytest\r\nfrom flask import Flask, jsonify\r\nfrom flask_restful import Resource, Api\r\nfrom flask_jwt_extended import JWTManager, jwt_required\r\n\r\n\r\n@pytest.fixture(scope=\"function\")\r\ndef app():\r\n    app = Flask(__name__)\r\n\r\n    app.config[\"JWT_SECRET_KEY\"] = \"foobarbaz\"\r\n    JWTManager(app)\r\n\r\n    api = Api(app)\r\n\r\n    class ProtectedResource(Resource):\r\n        method_decorators = [jwt_required]\r\n\r\n        def get(self):\r\n            return jsonify(foo=\"bar\")\r\n\r\n    api.add_resource(ProtectedResource, \"/protected\")\r\n\r\n    return app\r\n\r\n\r\ndef test_missing_headers(app):\r\n    test_client = app.test_client()\r\n\r\n    response = test_client.get(\"/protected\", headers=None)\r\n    assert response.status_code == 401\r\n    assert response.get_json() == {\"msg\": \"Missing Authorization Header\"}\r\n```\r\n\r\n**Result:**\r\n```\r\n================================================ test session starts =================================================\r\nplatform linux -- Python 3.6.7, pytest-4.3.1, py-1.8.0, pluggy-0.9.0\r\nrootdir: /tmp/test-x, inifile:\r\ncollected 2 items                                                                                                    \r\n\r\ntest-flask.py .                                                                                                [ 50%]\r\ntest-flask-restful.py F                                                                                        [100%]\r\n\r\n====================================================== FAILURES ======================================================\r\n________________________________________________ test_missing_headers ________________________________________________\r\n\r\napp = <Flask 'test-flask-restful'>\r\n\r\n    def test_missing_headers(app):\r\n        test_client = app.test_client()\r\n    \r\n        response = test_client.get(\"/protected\", headers=None)\r\n>       assert response.status_code == 401\r\nE       assert 500 == 401\r\nE        +  where 500 = <Response streamed [500 INTERNAL SERVER ERROR]>.status_code\r\n\r\ntest-flask-restful.py:31: AssertionError\r\n------------------------------------------------- Captured log call --------------------------------------------------\r\napp.py                    1761 ERROR    Exception on /protected [GET]\r\nTraceback (most recent call last):\r\n  File \"/tmp/test-x/venv/lib/python3.6/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/tmp/test-x/venv/lib/python3.6/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/tmp/test-x/venv/lib/python3.6/site-packages/flask_restful/__init__.py\", line 458, in wrapper\r\n    resp = resource(*args, **kwargs)\r\n  File \"/tmp/test-x/venv/lib/python3.6/site-packages/flask/views.py\", line 88, in view\r\n    return self.dispatch_request(*args, **kwargs)\r\n  File \"/tmp/test-x/venv/lib/python3.6/site-packages/flask_restful/__init__.py\", line 573, in dispatch_request\r\n    resp = meth(*args, **kwargs)\r\n  File \"/tmp/test-x/venv/lib/python3.6/site-packages/flask_jwt_extended/view_decorators.py\", line 103, in wrapper\r\n    verify_jwt_in_request()\r\n  File \"/tmp/test-x/venv/lib/python3.6/site-packages/flask_jwt_extended/view_decorators.py\", line 32, in verify_jwt_in_request                                                                                                              \r\n    jwt_data = _decode_jwt_from_request(request_type='access')\r\n  File \"/tmp/test-x/venv/lib/python3.6/site-packages/flask_jwt_extended/view_decorators.py\", line 291, in _decode_jwt_from_request                                                                                                          \r\n    raise NoAuthorizationError(errors[0])\r\nflask_jwt_extended.exceptions.NoAuthorizationError: Missing Authorization Header\r\n========================================= 1 failed, 1 passed in 0.20 seconds =========================================\r\n```\r\n\r\nNoted that everything stills works perfectly if I make API calls to the server.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/801", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/801/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/801/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/801/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/801", "id": 416000427, "node_id": "MDU6SXNzdWU0MTYwMDA0Mjc=", "number": 801, "title": "Support multi-process multi-threading?", "user": {"login": "Jie-Yuan", "id": 20265321, "node_id": "MDQ6VXNlcjIwMjY1MzIx", "avatar_url": "https://avatars2.githubusercontent.com/u/20265321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jie-Yuan", "html_url": "https://github.com/Jie-Yuan", "followers_url": "https://api.github.com/users/Jie-Yuan/followers", "following_url": "https://api.github.com/users/Jie-Yuan/following{/other_user}", "gists_url": "https://api.github.com/users/Jie-Yuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jie-Yuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jie-Yuan/subscriptions", "organizations_url": "https://api.github.com/users/Jie-Yuan/orgs", "repos_url": "https://api.github.com/users/Jie-Yuan/repos", "events_url": "https://api.github.com/users/Jie-Yuan/events{/privacy}", "received_events_url": "https://api.github.com/users/Jie-Yuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-01T08:51:27Z", "updated_at": "2019-03-01T13:38:28Z", "closed_at": "2019-03-01T13:38:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Support multi-process multi-threading?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/799", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/799/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/799/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/799/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/799", "id": 413802408, "node_id": "MDU6SXNzdWU0MTM4MDI0MDg=", "number": 799, "title": "DELETE handle not getting JWT tokens", "user": {"login": "mbrucher", "id": 321752, "node_id": "MDQ6VXNlcjMyMTc1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/321752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrucher", "html_url": "https://github.com/mbrucher", "followers_url": "https://api.github.com/users/mbrucher/followers", "following_url": "https://api.github.com/users/mbrucher/following{/other_user}", "gists_url": "https://api.github.com/users/mbrucher/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrucher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrucher/subscriptions", "organizations_url": "https://api.github.com/users/mbrucher/orgs", "repos_url": "https://api.github.com/users/mbrucher/repos", "events_url": "https://api.github.com/users/mbrucher/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrucher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-24T09:40:32Z", "updated_at": "2019-02-24T15:20:17Z", "closed_at": "2019-02-24T15:18:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think this is more relevant here than on the JWT extended issue tracker.\r\n\r\nI have a ressource that have a get and delete handle protected with @jwt_required:\r\n\r\n> class User(Resource):\r\n>   @jwt_required\r\n>   def get(self, username=None):\r\n>     r = jsonify({\"user\": False})\r\n>     return r\r\n> \r\n>   @jwt_required\r\n>   def delete(self, username=None):\r\n>     print(\"delete\")\r\n\r\nBut if I call both of them with the same valid cookies, I get an error on DELETE:\r\n\r\n> r = requests.delete(backend_server + \"/get/John+Doe\", cookies=cookies)\r\n> r.json()\r\n> {'msg': 'Missing CSRF token in headers'}\r\n> r = requests.get(backend_server + \"/get/John+Doe\", cookies=cookies)\r\n> r.json()\r\n> {'user': 'False'}\r\n\r\nI don't really understand why the cookies would pass \"get\", but not \"delete\"?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/793", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/793/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/793/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/793/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/793", "id": 396354082, "node_id": "MDU6SXNzdWUzOTYzNTQwODI=", "number": 793, "title": "reqparse should throw type exception instead of converting and it is confusing to me", "user": {"login": "ruoshui1314", "id": 18414978, "node_id": "MDQ6VXNlcjE4NDE0OTc4", "avatar_url": "https://avatars3.githubusercontent.com/u/18414978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruoshui1314", "html_url": "https://github.com/ruoshui1314", "followers_url": "https://api.github.com/users/ruoshui1314/followers", "following_url": "https://api.github.com/users/ruoshui1314/following{/other_user}", "gists_url": "https://api.github.com/users/ruoshui1314/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruoshui1314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruoshui1314/subscriptions", "organizations_url": "https://api.github.com/users/ruoshui1314/orgs", "repos_url": "https://api.github.com/users/ruoshui1314/repos", "events_url": "https://api.github.com/users/ruoshui1314/events{/privacy}", "received_events_url": "https://api.github.com/users/ruoshui1314/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-07T05:37:00Z", "updated_at": "2019-01-08T02:23:40Z", "closed_at": "2019-01-08T02:23:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi:\r\n    i find a confusing situation like this:\r\n```\r\nfrom flask import Flask\r\nfrom flask_restful import Resource, Api, reqparse\r\n\r\napp = Flask(__name__)\r\napi = Api(app)\r\n\r\nparser = reqparse.RequestParser()\r\nparser.add_argument('rate', type=str, required=True, location='json')\r\n\r\nclass HelloWorld(Resource):\r\n    def post(self):\r\n        args = parser.parse_args()\r\n        print(args['rate'])\r\n        return {'hello': 'world'}\r\n\r\napi.add_resource(HelloWorld, '/')\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```\r\n\r\nwhen i send:\r\ncurl -X POST -H \"Content-type: application/json\" -d '{\"rate\": 111}' http://127.0.0.1:5000/\r\nthe result to expect is type mismatch.but to return:\r\n```\r\n{\r\n    \"hello\": \"world\"\r\n}\r\n\r\n```\r\n\r\nI'd like to know why to design like this? The type seems to be useless.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/791", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/791/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/791/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/791/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/791", "id": 392250896, "node_id": "MDU6SXNzdWUzOTIyNTA4OTY=", "number": 791, "title": "Api.handle_error not working with abort called with Response.", "user": {"login": "johniez", "id": 5204901, "node_id": "MDQ6VXNlcjUyMDQ5MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5204901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johniez", "html_url": "https://github.com/johniez", "followers_url": "https://api.github.com/users/johniez/followers", "following_url": "https://api.github.com/users/johniez/following{/other_user}", "gists_url": "https://api.github.com/users/johniez/gists{/gist_id}", "starred_url": "https://api.github.com/users/johniez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johniez/subscriptions", "organizations_url": "https://api.github.com/users/johniez/orgs", "repos_url": "https://api.github.com/users/johniez/repos", "events_url": "https://api.github.com/users/johniez/events{/privacy}", "received_events_url": "https://api.github.com/users/johniez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16228189, "node_id": "MDU6TGFiZWwxNjIyODE4OQ==", "url": "https://api.github.com/repos/flask-restful/flask-restful/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-18T17:04:43Z", "updated_at": "2019-05-05T18:21:50Z", "closed_at": "2019-05-05T18:21:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version 0.3.7 and this fix: ff64cdbef03aa2ce108a7dc06ca336035ec68b70 changes behavior of `abort(Response(\"something\", code))` where code != 200.\r\n\r\nThere is a simple code, which was returning HTTP 403 with flask-restful 0.3.6. Now it returns HTTP 200, which it should not.\r\n\r\n```python\r\n#!/usr/bin/env python3\r\nfrom flask import Flask, abort, make_response\r\nfrom flask_restful import Api, Resource\r\n\r\napp = Flask(__name__)\r\napi = Api(app)\r\n\r\n\r\n@api.resource('/forbid')\r\nclass ForbiddenAll(Resource):\r\n    def get(self):\r\n        abort(make_response(\"{}\", 403))\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(host='0.0.0.0', debug=False)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/789", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/789/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/789/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/789/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/789", "id": 386310655, "node_id": "MDU6SXNzdWUzODYzMTA2NTU=", "number": 789, "title": "Using errorhandler prevents future requests from processing", "user": {"login": "sajohn2", "id": 8323044, "node_id": "MDQ6VXNlcjgzMjMwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/8323044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sajohn2", "html_url": "https://github.com/sajohn2", "followers_url": "https://api.github.com/users/sajohn2/followers", "following_url": "https://api.github.com/users/sajohn2/following{/other_user}", "gists_url": "https://api.github.com/users/sajohn2/gists{/gist_id}", "starred_url": "https://api.github.com/users/sajohn2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sajohn2/subscriptions", "organizations_url": "https://api.github.com/users/sajohn2/orgs", "repos_url": "https://api.github.com/users/sajohn2/repos", "events_url": "https://api.github.com/users/sajohn2/events{/privacy}", "received_events_url": "https://api.github.com/users/sajohn2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-30T19:01:39Z", "updated_at": "2018-11-30T19:27:18Z", "closed_at": "2018-11-30T19:27:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code causes the server to stop handling requests after the exception is triggered. To reproduce: (1) issue a request with any basic auth info, (2) issue a request with no basic auth info to trigger errorhandler, (3) issue a request with any basic auth info, which will not be processed.\r\n\r\n```python\r\nfrom flask import Flask, jsonify, request\r\nfrom flask_restful import Api, Resource\r\n\r\n\r\napp = Flask(__name__)\r\napi = Api(app)\r\n\r\n\r\n@app.errorhandler(Exception)\r\ndef handle_error(ex):\r\n    return jsonify({\r\n        \"error\": type(ex).__name__,\r\n        \"message\": str(ex)\r\n    }), 500\r\n\r\n\r\nclass DefaultResource(Resource):\r\n    def get(self):\r\n        auth = request.authorization\r\n        if not auth:\r\n            raise Exception(\"No auth info\")\r\n        return {\"message\": \"ok\"}\r\n\r\n\r\napi.add_resource(DefaultResource, '/')\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(host='127.0.0.1', port=8080, threaded=False, debug=True)\r\n```\r\n\r\nPython environment information (Python 3.6.6):\r\n```text\r\naniso8601==4.0.1\r\nClick==7.0\r\nFlask==1.0.2\r\nFlask-RESTful==0.3.6\r\nitsdangerous==1.1.0\r\nJinja2==2.10\r\nMarkupSafe==1.1.0\r\npytz==2018.7\r\nsix==1.11.0\r\nWerkzeug==0.14.1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/788", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/788/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/788/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/788/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/788", "id": 385744518, "node_id": "MDU6SXNzdWUzODU3NDQ1MTg=", "number": 788, "title": "ValueError: could not convert string to float: 'favicon.ico'", "user": {"login": "Jie-Yuan", "id": 20265321, "node_id": "MDQ6VXNlcjIwMjY1MzIx", "avatar_url": "https://avatars2.githubusercontent.com/u/20265321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jie-Yuan", "html_url": "https://github.com/Jie-Yuan", "followers_url": "https://api.github.com/users/Jie-Yuan/followers", "following_url": "https://api.github.com/users/Jie-Yuan/following{/other_user}", "gists_url": "https://api.github.com/users/Jie-Yuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jie-Yuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jie-Yuan/subscriptions", "organizations_url": "https://api.github.com/users/Jie-Yuan/orgs", "repos_url": "https://api.github.com/users/Jie-Yuan/repos", "events_url": "https://api.github.com/users/Jie-Yuan/events{/privacy}", "received_events_url": "https://api.github.com/users/Jie-Yuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-29T13:48:11Z", "updated_at": "2018-11-29T15:30:56Z", "closed_at": "2018-11-29T15:30:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/20265321/49226011-7262ab80-f420-11e8-9673-e94583f97e56.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/786", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/786/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/786/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/786/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/786", "id": 381400404, "node_id": "MDU6SXNzdWUzODE0MDA0MDQ=", "number": 786, "title": "add IP detection in reqparse.RequestParser()", "user": {"login": "Mon-ius", "id": 25671258, "node_id": "MDQ6VXNlcjI1NjcxMjU4", "avatar_url": "https://avatars2.githubusercontent.com/u/25671258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mon-ius", "html_url": "https://github.com/Mon-ius", "followers_url": "https://api.github.com/users/Mon-ius/followers", "following_url": "https://api.github.com/users/Mon-ius/following{/other_user}", "gists_url": "https://api.github.com/users/Mon-ius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mon-ius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mon-ius/subscriptions", "organizations_url": "https://api.github.com/users/Mon-ius/orgs", "repos_url": "https://api.github.com/users/Mon-ius/repos", "events_url": "https://api.github.com/users/Mon-ius/events{/privacy}", "received_events_url": "https://api.github.com/users/Mon-ius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-16T00:45:49Z", "updated_at": "2019-03-12T19:50:54Z", "closed_at": "2018-11-16T13:02:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I  could find a way using flask.request.remote_addr to get visitor's ip, but I couldn't find one while using flask-restful. If you have such method inside or plan to add this feature in reqparse?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/784", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/784/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/784/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/784/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/784", "id": 371446995, "node_id": "MDU6SXNzdWUzNzE0NDY5OTU=", "number": 784, "title": "can it declare more than one model", "user": {"login": "kafey", "id": 8663198, "node_id": "MDQ6VXNlcjg2NjMxOTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8663198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kafey", "html_url": "https://github.com/kafey", "followers_url": "https://api.github.com/users/kafey/followers", "following_url": "https://api.github.com/users/kafey/following{/other_user}", "gists_url": "https://api.github.com/users/kafey/gists{/gist_id}", "starred_url": "https://api.github.com/users/kafey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kafey/subscriptions", "organizations_url": "https://api.github.com/users/kafey/orgs", "repos_url": "https://api.github.com/users/kafey/repos", "events_url": "https://api.github.com/users/kafey/events{/privacy}", "received_events_url": "https://api.github.com/users/kafey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-18T09:46:42Z", "updated_at": "2018-10-18T09:49:24Z", "closed_at": "2018-10-18T09:49:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I make 2 model fields\r\n`fields = api.model('MyModel', {\r\n    'id_siswa': fields.String(),\r\n    'nama_siswa': fields.String(),\r\n    'kelas': fields.String(),\r\n    'hasil': fields.List(fields.Integer),\r\n    'id_penilai': fields.String(),\r\n    'nama_penilai':fields.String(),\r\n})\r\n\r\nindicators = api.model('ModelIndikator', {\r\n    'sikap_spritual': fields.String(),\r\n    'sikap_sosial': fields.String(),\r\n})`\r\n\r\nwith @api.doc()\r\n\r\nbut get  error \r\n`Traceback (most recent call last):\r\n  File \"app.py\", line 40, in <module>\r\n    'sikap_spritual': fields.String(),\r\nAttributeError: 'Model' object has no attribute 'String'`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/782", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/782/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/782/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/782/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/782", "id": 369966103, "node_id": "MDU6SXNzdWUzNjk5NjYxMDM=", "number": 782, "title": "Testing API with 1.0.2: <Response streamed [404 NOT FOUND]>", "user": {"login": "edouard-lopez", "id": 1212392, "node_id": "MDQ6VXNlcjEyMTIzOTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1212392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edouard-lopez", "html_url": "https://github.com/edouard-lopez", "followers_url": "https://api.github.com/users/edouard-lopez/followers", "following_url": "https://api.github.com/users/edouard-lopez/following{/other_user}", "gists_url": "https://api.github.com/users/edouard-lopez/gists{/gist_id}", "starred_url": "https://api.github.com/users/edouard-lopez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edouard-lopez/subscriptions", "organizations_url": "https://api.github.com/users/edouard-lopez/orgs", "repos_url": "https://api.github.com/users/edouard-lopez/repos", "events_url": "https://api.github.com/users/edouard-lopez/events{/privacy}", "received_events_url": "https://api.github.com/users/edouard-lopez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-15T01:19:40Z", "updated_at": "2018-10-15T14:21:05Z", "closed_at": "2018-10-15T11:50:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "**related:** pallets/flask#2941\r\n\r\nComplete cource code can be found in [coaxis-asp/opt](https://github.com/Coaxis-ASP/opt/tree/master/daemon/api) repository.\r\n\r\n### Requirements\r\n```\r\nFlask==1.0.2\r\nFlask-RESTful==0.3.6\r\n```\r\n\r\n### Project Layout\r\n\r\n```\r\n./api/\r\n\u251c\u2500\u2500 __init__.py\r\n\u251c\u2500\u2500 tests\r\n\u2502   \u251c\u2500\u2500 __init__.py\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 test_views.py  \r\n\u2514\u2500\u2500 views.py  # declare API (cf. below)\r\n```\r\n\r\n### `views.py`\r\n\r\n```\r\nfrom flask import Flask, Response, request\r\nfrom flask_restful import Api, Resource, abort\r\n\r\napp = Flask(__name__)\r\napi = Api(app, prefix='/api')\r\n\r\nclass Root(Resource):\r\n    def get(self):\r\n        return {\r\n            'results': None\r\n        }\r\n\r\napi.add_resource(Root, '/')\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(debug=True, host='0.0.0.0')\r\n```\r\n\r\n### `test_views.py`\r\n\r\n```\r\nfrom pprint import pprint\r\nfrom unittest import TestCase\r\n\r\nfrom views import app\r\n\r\nclass TestIntegrations(TestCase):\r\n    def setUp(self):\r\n        self.app = app.test_client()\r\n\r\n    def test_thing(self):\r\n        response = self.app.get('/sites/')\r\n        pprint(response)\r\n        self.assertDictEqual(response.json, {'results': None})\r\n```\r\n\r\n### Error\r\n\r\n```\r\n$ python3 -m unittest tests.test_views --verbose\r\ntest_thing (tests.test_views.TestIntegrations) ... \r\n<Response streamed [404 NOT FOUND]>\r\nFAIL\r\n\r\n======================================================================\r\nFAIL: test_thing (tests.test_views.TestIntegrations)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/data/projects/coaxis-opt/daemon/api/tests/test_views.py\", line 13, in test_thing\r\n    self.assertDictEqual(response.json, {'results': None})\r\nAssertionError: None is not an instance of <class 'dict'> : First argument is not a dictionary\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.007s\r\n\r\nFAILED (failures=1)\r\n```\r\n\r\n### Question\r\n\r\nDespite my API responding correctly in the browser and all my other tests running with `unittest`, the test case for the API fail with an error `404`. What the matter ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/781", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/781/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/781/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/781/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/781", "id": 367544603, "node_id": "MDU6SXNzdWUzNjc1NDQ2MDM=", "number": 781, "title": "SwaggerUI is not at all working with the newer version", "user": {"login": "dineshkumarj86", "id": 11755470, "node_id": "MDQ6VXNlcjExNzU1NDcw", "avatar_url": "https://avatars2.githubusercontent.com/u/11755470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dineshkumarj86", "html_url": "https://github.com/dineshkumarj86", "followers_url": "https://api.github.com/users/dineshkumarj86/followers", "following_url": "https://api.github.com/users/dineshkumarj86/following{/other_user}", "gists_url": "https://api.github.com/users/dineshkumarj86/gists{/gist_id}", "starred_url": "https://api.github.com/users/dineshkumarj86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dineshkumarj86/subscriptions", "organizations_url": "https://api.github.com/users/dineshkumarj86/orgs", "repos_url": "https://api.github.com/users/dineshkumarj86/repos", "events_url": "https://api.github.com/users/dineshkumarj86/events{/privacy}", "received_events_url": "https://api.github.com/users/dineshkumarj86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-07T11:17:50Z", "updated_at": "2018-10-07T15:46:03Z", "closed_at": "2018-10-07T13:43:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i am using flask-restplus==0.12.1, the swagger ui is breaking as shown below\r\n\r\n![image](https://user-images.githubusercontent.com/11755470/46581447-9627f780-ca56-11e8-850d-0f755b14eaff.png)\r\n\r\n\r\nBut, when i am using flask_restplus==0.9.2, the swagger ui is working fine.\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/11755470/46581145-96bd8f80-ca50-11e8-9c9f-28197a949f10.png)\r\n\r\nCan anyone please suggest, what is going wrong here", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/780", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/780/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/780/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/780/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/780", "id": 365317061, "node_id": "MDU6SXNzdWUzNjUzMTcwNjE=", "number": 780, "title": "Abort(404) appends to message", "user": {"login": "codebykyle", "id": 26160129, "node_id": "MDQ6VXNlcjI2MTYwMTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/26160129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codebykyle", "html_url": "https://github.com/codebykyle", "followers_url": "https://api.github.com/users/codebykyle/followers", "following_url": "https://api.github.com/users/codebykyle/following{/other_user}", "gists_url": "https://api.github.com/users/codebykyle/gists{/gist_id}", "starred_url": "https://api.github.com/users/codebykyle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codebykyle/subscriptions", "organizations_url": "https://api.github.com/users/codebykyle/orgs", "repos_url": "https://api.github.com/users/codebykyle/repos", "events_url": "https://api.github.com/users/codebykyle/events{/privacy}", "received_events_url": "https://api.github.com/users/codebykyle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-01T05:50:00Z", "updated_at": "2018-11-08T09:27:04Z", "closed_at": "2018-10-31T20:23:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI'm new to using flask_restful, and I love it so far, however, I'm wondering if I'm missing something obvious when it comes to the abort(404) function.\r\n\r\nI'd like to specify my own message for an abort(404). It adds my message, but appends additional information to the message I specified. This isn't what I was expecting. When I looked through the code I only seen a way to turn this off globally.\r\n\r\nSteps to reproduce:\r\n\r\n```\r\n\r\napp = Flask(__name__)\r\napi = Api(app)\r\n\r\n\r\ndef abort_account_doesnt_exist(account_id):\r\n    abort(404, message=\"Account {} doesn't exist\".format(account_id))\r\n\r\n\r\nclass AccountList(Resource):\r\n    def get(self):\r\n        abort_account_doesnt_exist(123)\r\n\r\n\r\napi.add_resource(AccountList, '/accounts')\r\n```\r\n\r\nThis produces the following error message:\r\n```\r\n{\"message\": \"Account 123 doesn't exist. You have requested this URI [/accounts] but did you mean /accounts or /accounts/<account_id> or /generate_account ?\"}\r\n```\r\n\r\nBecause I specified a message on the abort, I expected just my result.\r\n```\r\n{\"message\": \"Account 123 doesn't exist.\"}\r\n```\r\n\r\nLooking through the code to try and make this stop happening, I found the following in `flask_restful/__init__.py`:\r\n```\r\n        help_on_404 = current_app.config.get(\"ERROR_404_HELP\", True)\r\n        if code == 404 and help_on_404:\r\n            rules = dict([(re.sub('(<.*>)', '', rule.rule), rule.rule)\r\n                          for rule in current_app.url_map.iter_rules()])\r\n            close_matches = difflib.get_close_matches(request.path, rules.keys())\r\n            if close_matches:\r\n                # If we already have a message, add punctuation and continue it.\r\n                if \"message\" in data:\r\n                    data[\"message\"] = data[\"message\"].rstrip('.') + '. '\r\n                else:\r\n                    data[\"message\"] = \"\"\r\n\r\n                data['message'] += 'You have requested this URI [' + request.path + \\\r\n                                   '] but did you mean ' + \\\r\n                                   ' or '.join((\r\n                                       rules[match] for match in close_matches)\r\n                                   ) + ' ?'\r\n```\r\n\r\nWhere `current_app` is defined globally. I like the default message when I haven't specified one, but where I specify it, It is my opinion that it should not add additional information to my string by default.\r\n\r\nIs there something I am missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/779", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/779/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/779/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/779/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/779", "id": 364956139, "node_id": "MDU6SXNzdWUzNjQ5NTYxMzk=", "number": 779, "title": "'301' is not a recognized HTTP error code", "user": {"login": "jvannier", "id": 5264453, "node_id": "MDQ6VXNlcjUyNjQ0NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5264453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvannier", "html_url": "https://github.com/jvannier", "followers_url": "https://api.github.com/users/jvannier/followers", "following_url": "https://api.github.com/users/jvannier/following{/other_user}", "gists_url": "https://api.github.com/users/jvannier/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvannier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvannier/subscriptions", "organizations_url": "https://api.github.com/users/jvannier/orgs", "repos_url": "https://api.github.com/users/jvannier/repos", "events_url": "https://api.github.com/users/jvannier/events{/privacy}", "received_events_url": "https://api.github.com/users/jvannier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-28T16:19:28Z", "updated_at": "2018-09-28T20:19:27Z", "closed_at": "2018-09-28T20:19:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just upgraded to Flask 1.0.2 and my code (which was working):\r\n\r\n```\r\nfrom http.client import MOVED_PERMANENTLY\r\n\r\n@app.errorhandler(MOVED_PERMANENTLY)\r\ndef error_handler(err):\r\n    print(err)\r\n```\r\n\r\nnow fails with:\r\n```\r\n mod_wsgi (pid=66451): Target WSGI script 'app.py' cannot be loaded as Python module.\r\n mod_wsgi (pid=66451): Exception occurred processing WSGI script 'app.py'.\r\n Traceback (most recent call last):\r\n   File \"app.py\", line 128, in <module>\r\n     @app.errorhandler(MOVED_PERMANENTLY)\r\n   File \"python2.7/site-packages/flask/app.py\", line 1316, in decorator\r\n     self._register_error_handler(None, code_or_exception, f)\r\n   File \"python2.7/site-packages/flask/app.py\", line 66, in wrapper_func\r\n     return f(self, *args, **kwargs)\r\nFile \"python2.7/site-packages/flask/app.py\", line 1349, in _register_error_handler\r\n\" HTTPException with that code instead.\".format(code_or_exception)\r\nKeyError: \"'301' is not a recognized HTTP error code. Use a subclass of HTTPException with that code instead.\"\r\n```\r\nAm I doing something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/777", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/777/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/777/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/777/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/777", "id": 363536953, "node_id": "MDU6SXNzdWUzNjM1MzY5NTM=", "number": 777, "title": "What is the best way to expose and endpoint for checking the health of the service?", "user": {"login": "viiicky", "id": 8790165, "node_id": "MDQ6VXNlcjg3OTAxNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8790165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viiicky", "html_url": "https://github.com/viiicky", "followers_url": "https://api.github.com/users/viiicky/followers", "following_url": "https://api.github.com/users/viiicky/following{/other_user}", "gists_url": "https://api.github.com/users/viiicky/gists{/gist_id}", "starred_url": "https://api.github.com/users/viiicky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viiicky/subscriptions", "organizations_url": "https://api.github.com/users/viiicky/orgs", "repos_url": "https://api.github.com/users/viiicky/repos", "events_url": "https://api.github.com/users/viiicky/events{/privacy}", "received_events_url": "https://api.github.com/users/viiicky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-25T11:44:17Z", "updated_at": "2018-09-25T14:03:59Z", "closed_at": "2018-09-25T12:09:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "flask-restful looks cool. I was wondering if there is any \"configuration\" where I can set an endpoint that can be pinged to check the status of the service, i.e. whether the service is up and running or not, something like `/ping` or `/ready`.\r\n\r\nI \"feel\" a little odd to create a new resource just for one single endpoint that will do nothing but always return constant `200`. Didn't find any such settings in the doc.\r\n\r\nWill it be good to define a configuration which allows to assign any string, say `ready` to an implicit endpoint which does nothing but just returns `200`, of course if the service is up. The same can then be used in a kubernetes deployment file for the field:\r\n```\r\nreadinessProbe:\r\n          httpGet:\r\n            path: /ready\r\n            port: 5687\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/776", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/776/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/776/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/776/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/776", "id": 357324562, "node_id": "MDU6SXNzdWUzNTczMjQ1NjI=", "number": 776, "title": "is there any plan for release 0.3.7?", "user": {"login": "rc-alexg", "id": 41167378, "node_id": "MDQ6VXNlcjQxMTY3Mzc4", "avatar_url": "https://avatars2.githubusercontent.com/u/41167378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rc-alexg", "html_url": "https://github.com/rc-alexg", "followers_url": "https://api.github.com/users/rc-alexg/followers", "following_url": "https://api.github.com/users/rc-alexg/following{/other_user}", "gists_url": "https://api.github.com/users/rc-alexg/gists{/gist_id}", "starred_url": "https://api.github.com/users/rc-alexg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rc-alexg/subscriptions", "organizations_url": "https://api.github.com/users/rc-alexg/orgs", "repos_url": "https://api.github.com/users/rc-alexg/repos", "events_url": "https://api.github.com/users/rc-alexg/events{/privacy}", "received_events_url": "https://api.github.com/users/rc-alexg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-05T17:14:47Z", "updated_at": "2018-12-18T16:18:04Z", "closed_at": "2018-12-18T15:54:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Specifically I would like to get the fixes related to `reqparser` like on this [merged PR](https://github.com/flask-restful/flask-restful/pull/705) without having to rely on the specific fixed commit. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/774", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/774/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/774/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/774/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/774", "id": 351833458, "node_id": "MDU6SXNzdWUzNTE4MzM0NTg=", "number": 774, "title": "`fields.Url('some_resource')` doesn't append the `id` at the end if using blueprints.", "user": {"login": "viiicky", "id": 8790165, "node_id": "MDQ6VXNlcjg3OTAxNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8790165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viiicky", "html_url": "https://github.com/viiicky", "followers_url": "https://api.github.com/users/viiicky/followers", "following_url": "https://api.github.com/users/viiicky/following{/other_user}", "gists_url": "https://api.github.com/users/viiicky/gists{/gist_id}", "starred_url": "https://api.github.com/users/viiicky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viiicky/subscriptions", "organizations_url": "https://api.github.com/users/viiicky/orgs", "repos_url": "https://api.github.com/users/viiicky/repos", "events_url": "https://api.github.com/users/viiicky/events{/privacy}", "received_events_url": "https://api.github.com/users/viiicky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-18T16:30:04Z", "updated_at": "2018-08-18T22:25:20Z", "closed_at": "2018-08-18T22:25:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using blueprints and I have this line to create the blueprint:\r\n`api_bp = Blueprint('api', __name__)`\r\n\r\nAnd `some_resources` is added and blueprint is registered by below lines:\r\n```\r\nrest_api = Api()\r\nrest_api.init_app(api_bp)\r\nrest_api.add_resource(SomeResourceApi, '/some_resources', '/some_resources/<int:some_resource_id>', endpoint='some_resources')\r\napp.register_blueprint(api_bp, url_prefix='/some/api/v1.0')\r\n```\r\nThe fields dict used for `marshal()` has `'uri': fields.Url('api.some_resources'),`\r\nThe output that I receive is `\"uri\": \"/some/api/v1.0/some_resources\"` inside my response. _Notice that the id is not appended at the end in the url._\r\n\r\nJust to be sure I replaced the line `'uri': fields.Url('api.some_resources'),` inside my field dict to `'id': fields.Integer` and in this case the integer id is returned correctly inside the response.\r\n\r\nAlso I have tested both with the decorator `@marshal_with` and the method `marshal()`, that doesn't make any difference.\r\n\r\nFor now, I am getting my work done by having my fields dict to have an extra field: `id` with the value `fields.Integer` which contains the actual id, so the output has these two fields in response which collectively gives the complete address:\r\n```\r\n\"uri\": \"/some/api/v1.0/some_resources\",\r\n\"id\": 11\r\n```\r\nWhile this serves the purpose, it looks kind of hacky.\r\n\r\nAm I doing anything wrong that the ids are not appended in the response when using `fields.Url()`?\r\n\r\n**Library Version details:**\r\nFlask==1.0.2\r\nFlask-RESTful==0.3.6\r\nFlask-SQLAlchemy==2.3.2\r\nSQLAlchemy==1.2.10\r\n\r\nCorresponding stackoverflow question: https://stackoverflow.com/questions/51910726/fields-urlsome-resource-doesnt-append-the-id-at-the-end-if-using-bluepr", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/773", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/773/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/773/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/773/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/773", "id": 348204842, "node_id": "MDU6SXNzdWUzNDgyMDQ4NDI=", "number": 773, "title": "How can i use marshal with dict type, or don't use @marshal_with ?", "user": {"login": "justb", "id": 22002343, "node_id": "MDQ6VXNlcjIyMDAyMzQz", "avatar_url": "https://avatars0.githubusercontent.com/u/22002343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justb", "html_url": "https://github.com/justb", "followers_url": "https://api.github.com/users/justb/followers", "following_url": "https://api.github.com/users/justb/following{/other_user}", "gists_url": "https://api.github.com/users/justb/gists{/gist_id}", "starred_url": "https://api.github.com/users/justb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justb/subscriptions", "organizations_url": "https://api.github.com/users/justb/orgs", "repos_url": "https://api.github.com/users/justb/repos", "events_url": "https://api.github.com/users/justb/events{/privacy}", "received_events_url": "https://api.github.com/users/justb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-07T07:44:13Z", "updated_at": "2019-06-11T11:36:21Z", "closed_at": "2019-06-11T11:36:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "for example, there is a dict like {a:1,b:2,c:3,d:4...}, and its attributes are not fixed", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/765", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/765/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/765/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/765/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/765", "id": 340731700, "node_id": "MDU6SXNzdWUzNDA3MzE3MDA=", "number": 765, "title": "when i try to run a sample api iam getting the following error", "user": {"login": "kodati9", "id": 33467304, "node_id": "MDQ6VXNlcjMzNDY3MzA0", "avatar_url": "https://avatars1.githubusercontent.com/u/33467304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kodati9", "html_url": "https://github.com/kodati9", "followers_url": "https://api.github.com/users/kodati9/followers", "following_url": "https://api.github.com/users/kodati9/following{/other_user}", "gists_url": "https://api.github.com/users/kodati9/gists{/gist_id}", "starred_url": "https://api.github.com/users/kodati9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kodati9/subscriptions", "organizations_url": "https://api.github.com/users/kodati9/orgs", "repos_url": "https://api.github.com/users/kodati9/repos", "events_url": "https://api.github.com/users/kodati9/events{/privacy}", "received_events_url": "https://api.github.com/users/kodati9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-12T17:34:46Z", "updated_at": "2018-07-13T03:11:11Z", "closed_at": "2018-07-13T03:09:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"/Users/padma/PycharmProjects/untitled3/untitled3.py\", line 2, in <module>\r\n    from flask_restful import Api, Resource, reqparse\r\nImportError: No module named flask_restful\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/764", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/764/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/764/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/764/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/764", "id": 337708125, "node_id": "MDU6SXNzdWUzMzc3MDgxMjU=", "number": 764, "title": "having trouble with parser parsing a urllib2 request that includes json data", "user": {"login": "pmgexpo17", "id": 24870477, "node_id": "MDQ6VXNlcjI0ODcwNDc3", "avatar_url": "https://avatars3.githubusercontent.com/u/24870477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmgexpo17", "html_url": "https://github.com/pmgexpo17", "followers_url": "https://api.github.com/users/pmgexpo17/followers", "following_url": "https://api.github.com/users/pmgexpo17/following{/other_user}", "gists_url": "https://api.github.com/users/pmgexpo17/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmgexpo17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmgexpo17/subscriptions", "organizations_url": "https://api.github.com/users/pmgexpo17/orgs", "repos_url": "https://api.github.com/users/pmgexpo17/repos", "events_url": "https://api.github.com/users/pmgexpo17/events{/privacy}", "received_events_url": "https://api.github.com/users/pmgexpo17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-03T00:46:44Z", "updated_at": "2018-07-05T00:00:20Z", "closed_at": "2018-07-03T01:14:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using flask-restful for api development, and have been using requests successfully for coded api calls\r\nMy application needs to get a file obj response which then applies to stdin of a subprocess.call \r\nI tried using urllib2 but the parser does not read the json format successfully\r\n\r\ncalling code :\r\n```python\r\ndata = '{\"job\":{\"service\":\"dataTxnPrvdr:DlmrStreamPrvdr\",\"args\":%s}}' % json.dumps(pdata)\r\napiUrl = 'http://localhost:5000/api/v1/sync'\r\nrequest = urllib2.Request(apiUrl, data, {'Content-Type': 'text/plain'})\r\nreturn urllib2.urlopen(request)    \r\n```\r\n\r\napi code :\r\n```python\r\nparser.add_argument('job')\r\nclass SyncJob(Resource):\r\n\r\n  def post(self):\r\n    setPrvdr()\r\n    args = parser.parse_args()\r\n    logger.info('args : ' + str(args)) # output {'job':None}\r\n    if args['job']:\r\n      params = json.loads(args['job'])\r\n      logger.info('job args : ' + str(params))\r\n      try:      \r\n        response = g.prvdr.resolve(params)\r\n      except Exception as ex:\r\n        return {'status':500,'error':str(ex)}, 500\r\n      else:\r\n        return response\r\n    else:\r\n      return {'status':500,'error':\"'job' form parameter not found\"}, 500\r\n```\r\nAny help is appreciated\r\nRegards Peter", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/761", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/761/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/761/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/761/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/761", "id": 335312765, "node_id": "MDU6SXNzdWUzMzUzMTI3NjU=", "number": 761, "title": "[ReqParse] How to validate Json params in this format,i don't know how to say in English", "user": {"login": "tangyiming", "id": 18328731, "node_id": "MDQ6VXNlcjE4MzI4NzMx", "avatar_url": "https://avatars2.githubusercontent.com/u/18328731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tangyiming", "html_url": "https://github.com/tangyiming", "followers_url": "https://api.github.com/users/tangyiming/followers", "following_url": "https://api.github.com/users/tangyiming/following{/other_user}", "gists_url": "https://api.github.com/users/tangyiming/gists{/gist_id}", "starred_url": "https://api.github.com/users/tangyiming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tangyiming/subscriptions", "organizations_url": "https://api.github.com/users/tangyiming/orgs", "repos_url": "https://api.github.com/users/tangyiming/repos", "events_url": "https://api.github.com/users/tangyiming/events{/privacy}", "received_events_url": "https://api.github.com/users/tangyiming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-25T08:45:12Z", "updated_at": "2018-06-25T12:35:24Z", "closed_at": "2018-06-25T12:35:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,i'm new to flask/flask-restful. Could anybody help me \ud83d\ude22 \r\n\r\nHow can I validate every param include subA and subB \u2753 \r\n\r\nThank you for your answering \ud83d\ude04 \r\n\r\n![_20180625163608](https://user-images.githubusercontent.com/18328731/41839940-184d0aaa-7897-11e8-8252-1224d66088cf.png)\r\n![_20180625163636](https://user-images.githubusercontent.com/18328731/41839941-18ac230a-7897-11e8-8b26-b09a1d6d18f7.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/760", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/760/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/760/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/760/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/760", "id": 333016899, "node_id": "MDU6SXNzdWUzMzMwMTY4OTk=", "number": 760, "title": "'Lookup error' when trying to use abort with custom code.", "user": {"login": "michaelbukachi", "id": 10145850, "node_id": "MDQ6VXNlcjEwMTQ1ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/10145850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelbukachi", "html_url": "https://github.com/michaelbukachi", "followers_url": "https://api.github.com/users/michaelbukachi/followers", "following_url": "https://api.github.com/users/michaelbukachi/following{/other_user}", "gists_url": "https://api.github.com/users/michaelbukachi/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelbukachi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelbukachi/subscriptions", "organizations_url": "https://api.github.com/users/michaelbukachi/orgs", "repos_url": "https://api.github.com/users/michaelbukachi/repos", "events_url": "https://api.github.com/users/michaelbukachi/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelbukachi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-16T21:39:02Z", "updated_at": "2018-06-16T22:22:17Z", "closed_at": "2018-06-16T22:21:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting the following error `LookupError: no exception for 99` when I try to abort using the following code; `abort(99, message=\"The request is invalid\")`.\r\n\r\nflask=1.0.2\r\nflask_restful=0.3.6\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/757", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/757/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/757/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/757/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/757", "id": 327703781, "node_id": "MDU6SXNzdWUzMjc3MDM3ODE=", "number": 757, "title": "carousel with arg parsing", "user": {"login": "kaldown", "id": 3754017, "node_id": "MDQ6VXNlcjM3NTQwMTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3754017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaldown", "html_url": "https://github.com/kaldown", "followers_url": "https://api.github.com/users/kaldown/followers", "following_url": "https://api.github.com/users/kaldown/following{/other_user}", "gists_url": "https://api.github.com/users/kaldown/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaldown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaldown/subscriptions", "organizations_url": "https://api.github.com/users/kaldown/orgs", "repos_url": "https://api.github.com/users/kaldown/repos", "events_url": "https://api.github.com/users/kaldown/events{/privacy}", "received_events_url": "https://api.github.com/users/kaldown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-30T12:15:07Z", "updated_at": "2019-11-04T14:35:53Z", "closed_at": "2019-11-04T14:35:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the proper way to retrieve args from get method?\r\n\r\n\r\n\r\n1. https://flask-restful.readthedocs.io/en/latest/quickstart.html#resourceful-routing\r\n2. RequestParsing\r\n3. Marshmallow\r\n4. Decorator \r\n\r\nWhole doc is trying to mislead", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/754", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/754/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/754/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/754/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/754", "id": 321708093, "node_id": "MDU6SXNzdWUzMjE3MDgwOTM=", "number": 754, "title": "Reqeust Parser not parsing a list of dicts ", "user": {"login": "ravitejachebrolu", "id": 10440918, "node_id": "MDQ6VXNlcjEwNDQwOTE4", "avatar_url": "https://avatars2.githubusercontent.com/u/10440918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ravitejachebrolu", "html_url": "https://github.com/ravitejachebrolu", "followers_url": "https://api.github.com/users/ravitejachebrolu/followers", "following_url": "https://api.github.com/users/ravitejachebrolu/following{/other_user}", "gists_url": "https://api.github.com/users/ravitejachebrolu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ravitejachebrolu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ravitejachebrolu/subscriptions", "organizations_url": "https://api.github.com/users/ravitejachebrolu/orgs", "repos_url": "https://api.github.com/users/ravitejachebrolu/repos", "events_url": "https://api.github.com/users/ravitejachebrolu/events{/privacy}", "received_events_url": "https://api.github.com/users/ravitejachebrolu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-09T20:06:50Z", "updated_at": "2020-09-03T15:57:50Z", "closed_at": "2018-05-09T23:16:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example:\r\n { \"Datalist\": [{  \"Value\": 0, \"Daily\": 0, \"Date\": \"5/9/2018 2:32:03 PM\", \"Sample\": 0, \"Floor\": 120},\r\n                      {  \"Value\": 0, \"Daily\": 0, \"Date\": \"5/9/2018 2:32:03 PM\", \"Sample\": 0, \"Floor\": 120}]}\r\n\r\nself.reqparse.add_argument('Datalist', type=list, required=True, location='json') \r\n\r\nIn version 0.3.5 \r\nreturned the data as list of dict (expected)\r\n\r\nIn version 0.3.6\r\nreturns a list of key names as below\r\n['Value','Daily','Date','Sample','Floor']\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/751", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/751/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/751/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/751/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/751", "id": 315400917, "node_id": "MDU6SXNzdWUzMTU0MDA5MTc=", "number": 751, "title": "how to add argument by myself after decrypt the request paramters", "user": {"login": "HJaycee", "id": 11496776, "node_id": "MDQ6VXNlcjExNDk2Nzc2", "avatar_url": "https://avatars3.githubusercontent.com/u/11496776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HJaycee", "html_url": "https://github.com/HJaycee", "followers_url": "https://api.github.com/users/HJaycee/followers", "following_url": "https://api.github.com/users/HJaycee/following{/other_user}", "gists_url": "https://api.github.com/users/HJaycee/gists{/gist_id}", "starred_url": "https://api.github.com/users/HJaycee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HJaycee/subscriptions", "organizations_url": "https://api.github.com/users/HJaycee/orgs", "repos_url": "https://api.github.com/users/HJaycee/repos", "events_url": "https://api.github.com/users/HJaycee/events{/privacy}", "received_events_url": "https://api.github.com/users/HJaycee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-18T09:28:56Z", "updated_at": "2018-04-18T13:15:07Z", "closed_at": "2018-04-18T13:15:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "for example:\r\n`post data = {\"data\":\"some AES encrypted string\"}`\r\n\r\nI want to decrypt the encrypted string to a dict and add the dict to ` reqparse.RequestParser().parse_args()`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/748", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/748/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/748/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/748/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/748", "id": 314240945, "node_id": "MDU6SXNzdWUzMTQyNDA5NDU=", "number": 748, "title": "api.payload for namespace", "user": {"login": "JoelKronander", "id": 18355572, "node_id": "MDQ6VXNlcjE4MzU1NTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/18355572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoelKronander", "html_url": "https://github.com/JoelKronander", "followers_url": "https://api.github.com/users/JoelKronander/followers", "following_url": "https://api.github.com/users/JoelKronander/following{/other_user}", "gists_url": "https://api.github.com/users/JoelKronander/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoelKronander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoelKronander/subscriptions", "organizations_url": "https://api.github.com/users/JoelKronander/orgs", "repos_url": "https://api.github.com/users/JoelKronander/repos", "events_url": "https://api.github.com/users/JoelKronander/events{/privacy}", "received_events_url": "https://api.github.com/users/JoelKronander/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-13T20:29:40Z", "updated_at": "2018-04-14T03:22:11Z", "closed_at": "2018-04-14T03:22:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI followed the documentation for \"full example\" and \"structure your project\".\r\nHowever I run into the following issue, when I have a file with my namespace specific stuff, and \r\nthe actual Api object in another file:\r\n\r\n```\r\nns = Namespace('todos', description='TODO operations')\r\n\r\ntodo = ns.model('Todo', {\r\n    'id': fields.Integer(readOnly=True, description='The task unique identifier'),\r\n    'task': fields.String(required=True, description='The task details')\r\n})\r\n\r\n@ns.route('/')\r\nclass TodoList(Resource):\r\n\r\n    @ns.doc('create_todo')\r\n    @ns.expect(todo)\r\n    @ns.marshal_with(todo, code=201)\r\n    def post(self):\r\n        '''Create a new task'''\r\n        return DAO.create(ns.payload), 201\r\n```\r\nThe last code will throw an error as payload is not implemented on the namespace.\r\n\r\nAny ways around this?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/746", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/746/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/746/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/746/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/746", "id": 310742762, "node_id": "MDU6SXNzdWUzMTA3NDI3NjI=", "number": 746, "title": "Potential bug in flask_restful/__init__.py", "user": {"login": "junchen1992", "id": 9523936, "node_id": "MDQ6VXNlcjk1MjM5MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9523936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junchen1992", "html_url": "https://github.com/junchen1992", "followers_url": "https://api.github.com/users/junchen1992/followers", "following_url": "https://api.github.com/users/junchen1992/following{/other_user}", "gists_url": "https://api.github.com/users/junchen1992/gists{/gist_id}", "starred_url": "https://api.github.com/users/junchen1992/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junchen1992/subscriptions", "organizations_url": "https://api.github.com/users/junchen1992/orgs", "repos_url": "https://api.github.com/users/junchen1992/repos", "events_url": "https://api.github.com/users/junchen1992/events{/privacy}", "received_events_url": "https://api.github.com/users/junchen1992/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-03T08:35:43Z", "updated_at": "2018-04-03T13:24:16Z", "closed_at": "2018-04-03T12:20:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n# flask_restful/__init__.py\r\n...\r\nif not isinstance(e, HTTPException) and current_app.propagate_exceptions:\r\n    exc_type, exc_value, tb = sys.exc_info()\r\n        if exc_value is e:\r\n            raise  # What does this actually raise?\r\n        else:\r\n            raise e\r\n...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/742", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/742/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/742/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/742/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/742", "id": 305555943, "node_id": "MDU6SXNzdWUzMDU1NTU5NDM=", "number": 742, "title": "Marshall a list of single Strings", "user": {"login": "IntegersOfK", "id": 529833, "node_id": "MDQ6VXNlcjUyOTgzMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/529833?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IntegersOfK", "html_url": "https://github.com/IntegersOfK", "followers_url": "https://api.github.com/users/IntegersOfK/followers", "following_url": "https://api.github.com/users/IntegersOfK/following{/other_user}", "gists_url": "https://api.github.com/users/IntegersOfK/gists{/gist_id}", "starred_url": "https://api.github.com/users/IntegersOfK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IntegersOfK/subscriptions", "organizations_url": "https://api.github.com/users/IntegersOfK/orgs", "repos_url": "https://api.github.com/users/IntegersOfK/repos", "events_url": "https://api.github.com/users/IntegersOfK/events{/privacy}", "received_events_url": "https://api.github.com/users/IntegersOfK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-15T13:38:38Z", "updated_at": "2018-03-15T19:43:30Z", "closed_at": "2018-03-15T13:57:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I model to respond with an array/list of strings?\r\n\r\nI want to be able to do this:\r\n```\r\nmy_model = api.model('list_of_strings',\r\n    fields.String(description='metric name')\r\n)\r\n```\r\n\r\nSo I can reply:\r\n```[\"string1\",\"string2\",\"string3\"]```\r\n\r\nThere are lots of tools which require a list of simple objects without keys.\r\n\r\nAm I forced to always use a key the traditional way?\r\n\r\n```\r\nsearch_request = api.model('search_request', {\r\n    'target': fields.String()\r\n})\r\n```\r\n\r\nAlternatively, if I return the list myself (without a model) is there some way to create ad-hoc documentation for this endpoint so the swagger definition can show that it returns a list of strings?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/741", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/741/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/741/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/741/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/741", "id": 304713428, "node_id": "MDU6SXNzdWUzMDQ3MTM0Mjg=", "number": 741, "title": "Check for empty strings in reqparse", "user": {"login": "and-semakin", "id": 9129071, "node_id": "MDQ6VXNlcjkxMjkwNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9129071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/and-semakin", "html_url": "https://github.com/and-semakin", "followers_url": "https://api.github.com/users/and-semakin/followers", "following_url": "https://api.github.com/users/and-semakin/following{/other_user}", "gists_url": "https://api.github.com/users/and-semakin/gists{/gist_id}", "starred_url": "https://api.github.com/users/and-semakin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/and-semakin/subscriptions", "organizations_url": "https://api.github.com/users/and-semakin/orgs", "repos_url": "https://api.github.com/users/and-semakin/repos", "events_url": "https://api.github.com/users/and-semakin/events{/privacy}", "received_events_url": "https://api.github.com/users/and-semakin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-13T10:48:29Z", "updated_at": "2018-03-13T13:04:30Z", "closed_at": "2018-03-13T13:04:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! How can I check if an argument is an empty string or not?\r\n\r\nExample data:\r\n```\r\n{\r\n    \"name\": \"\",\r\n    logo:\"\"\r\n}\r\n```\r\n\r\nExample RequestParser:\r\n```\r\nfield_parser = reqparse.RequestParser()\r\nfield_parser.add_argument('name', required=True, nullable=False)\r\nfield_parser.add_argument('logo')\r\n```\r\n\r\nThe `name` argument is not None and it is in the request data. So how can I check string arguments for empty strings?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/740", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/740/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/740/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/740", "id": 299930831, "node_id": "MDU6SXNzdWUyOTk5MzA4MzE=", "number": 740, "title": "how to use different  RequestParser between get and post method?", "user": {"login": "blackholll", "id": 6269605, "node_id": "MDQ6VXNlcjYyNjk2MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6269605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blackholll", "html_url": "https://github.com/blackholll", "followers_url": "https://api.github.com/users/blackholll/followers", "following_url": "https://api.github.com/users/blackholll/following{/other_user}", "gists_url": "https://api.github.com/users/blackholll/gists{/gist_id}", "starred_url": "https://api.github.com/users/blackholll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blackholll/subscriptions", "organizations_url": "https://api.github.com/users/blackholll/orgs", "repos_url": "https://api.github.com/users/blackholll/repos", "events_url": "https://api.github.com/users/blackholll/events{/privacy}", "received_events_url": "https://api.github.com/users/blackholll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-24T10:23:46Z", "updated_at": "2018-10-31T07:17:40Z", "closed_at": "2018-02-25T02:33:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "reqparse.RequestParser support config whether a arg is required.  Many times we need config different filed in get and post method.  I found RequestParser can only user outside Resource class  or in Resource class by __init__.  in this way, the filed must be same between get and post method.  for example:\r\n\r\n```python\r\nclass TicketListApi(Resource):\r\n    def __init__(self):\r\n        self.reqparse_args = reqparse.RequestParser()\r\n        self.reqparse_args.add_argument('per_page', type=int)\r\n        self.reqparse_args.add_argument('page', type=int, location='args')\r\n        self.reqparse_args.add_argument('title', type=str, location='args')\r\n        self.reqparse_args.add_argument('creator', type=str, location='args')\r\n    def get(self):\r\n         \"\"\"in get method  title and creator should not be must\"\"\"\r\n    def post(self):\r\n         \"\"\"in post method  title and creator should be must. (required=True)\"\"\"\r\n```\r\n\r\nso , how to use different RequestParser between  get and post method?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/739", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/739/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/739/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/739/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/739", "id": 298905278, "node_id": "MDU6SXNzdWUyOTg5MDUyNzg=", "number": 739, "title": "RequestParser type list + location json", "user": {"login": "d-ganchar", "id": 14810698, "node_id": "MDQ6VXNlcjE0ODEwNjk4", "avatar_url": "https://avatars1.githubusercontent.com/u/14810698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d-ganchar", "html_url": "https://github.com/d-ganchar", "followers_url": "https://api.github.com/users/d-ganchar/followers", "following_url": "https://api.github.com/users/d-ganchar/following{/other_user}", "gists_url": "https://api.github.com/users/d-ganchar/gists{/gist_id}", "starred_url": "https://api.github.com/users/d-ganchar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d-ganchar/subscriptions", "organizations_url": "https://api.github.com/users/d-ganchar/orgs", "repos_url": "https://api.github.com/users/d-ganchar/repos", "events_url": "https://api.github.com/users/d-ganchar/events{/privacy}", "received_events_url": "https://api.github.com/users/d-ganchar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-21T09:57:17Z", "updated_at": "2018-02-21T22:24:19Z", "closed_at": "2018-02-21T22:24:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation says [Only use type=list when location='json'](http://flask-restful.readthedocs.io/en/0.3.5/reqparse.html#argument-locations). This is correct works in 0.3.5, but not in 0.3.6. \r\nHow to check:\r\n\r\n```\r\napilink_parser = reqparse.RequestParser()\r\napilink_parser.add_argument('foo', type=list, location='json')\r\n\r\n@api.resource('/test')\r\nclass TestApi(Resource):\r\n\r\n    def post(self):\r\n        # example of client data: {\"foo\": [\"test\", \"test2\"]}\r\n        args = apilink_parser.parse_args()\r\n        # 0.3.5 parameter == <class 'list'>: ['test', 'test2']\r\n        # 0.3.6 parameter == <class 'list'>: ['t', 'e', 's', 't']\r\n        parameter = args.get('foo') \r\n```\r\n\r\nEnv:\r\nPython: 2.7, 3+\r\nFlask: 0.12.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/738", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/738/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/738/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/738", "id": 298359777, "node_id": "MDU6SXNzdWUyOTgzNTk3Nzc=", "number": 738, "title": "Wrong format of parameter got, when I using the list(string) as RequestParser", "user": {"login": "thinksource", "id": 2766693, "node_id": "MDQ6VXNlcjI3NjY2OTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2766693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thinksource", "html_url": "https://github.com/thinksource", "followers_url": "https://api.github.com/users/thinksource/followers", "following_url": "https://api.github.com/users/thinksource/following{/other_user}", "gists_url": "https://api.github.com/users/thinksource/gists{/gist_id}", "starred_url": "https://api.github.com/users/thinksource/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thinksource/subscriptions", "organizations_url": "https://api.github.com/users/thinksource/orgs", "repos_url": "https://api.github.com/users/thinksource/repos", "events_url": "https://api.github.com/users/thinksource/events{/privacy}", "received_events_url": "https://api.github.com/users/thinksource/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-19T17:55:23Z", "updated_at": "2018-02-19T18:37:15Z", "closed_at": "2018-02-19T18:37:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use the last version of flask-restful:\r\nMy code like:\r\n\r\n```\r\nfrom flask_restful import Resource, reqparse\r\n\r\napilink_parser = reqparse.RequestParser()\r\napilink_parser.add_argument('provider_id', type=int,required=True)\r\napilink_parser.add_argument('name', type=str, required=True)\r\napilink_parser.add_argument('func_id', type=int)\r\napilink_parser.add_argument('method', type=str)\r\napilink_parser.add_argument('url', type=str)\r\napilink_parser.add_argument('parameter',type=list, location='json')\r\napilink_parser.add_argument(\"expectreturn\", type=list)\r\n\r\n\r\n@marshal_with(apilink_fields)\r\ndef post(self):\r\n    args = apilink_parser.parse_args()\r\n    print(args)  ####here I print the args\r\n    # user owns the task\r\n    task = APILink.create(**args)\r\n    return task, 201\r\n```\r\n\r\nMy json post data like:\r\n\r\n```\r\n{ \r\n\"name\":\"riskiqwhois\",\r\n\"provider_id\":1,\r\n\"func_id\":1,\r\n\"url\":\"myurl\",\r\n\"parameter\":[\"query\"],  //******//\r\n\"expectreturn\":[],\r\n\"method\":\"post\"\r\n }\r\n```\r\n\r\nBut the args in #### I print is :\r\n\r\n```\r\n {\r\n 'provider_id': 1, \r\n 'name': 'riskiqwhois', \r\n 'func_id': 1, \r\n 'method': 'post', \r\n 'url': 'myurl', \r\n 'parameter': ['q', 'u', 'e', 'r', 'y'], //******//\r\n 'expectreturn': None\r\n  }\r\n```\r\n\r\nWhy the star line is different, How to make it the list(string) if I only give one element of the list instead of list(char) value as the parameter?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/737", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/737/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/737/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/737", "id": 298084174, "node_id": "MDU6SXNzdWUyOTgwODQxNzQ=", "number": 737, "title": "WADL Genearation", "user": {"login": "shahriyar1369", "id": 7315882, "node_id": "MDQ6VXNlcjczMTU4ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/7315882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shahriyar1369", "html_url": "https://github.com/shahriyar1369", "followers_url": "https://api.github.com/users/shahriyar1369/followers", "following_url": "https://api.github.com/users/shahriyar1369/following{/other_user}", "gists_url": "https://api.github.com/users/shahriyar1369/gists{/gist_id}", "starred_url": "https://api.github.com/users/shahriyar1369/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shahriyar1369/subscriptions", "organizations_url": "https://api.github.com/users/shahriyar1369/orgs", "repos_url": "https://api.github.com/users/shahriyar1369/repos", "events_url": "https://api.github.com/users/shahriyar1369/events{/privacy}", "received_events_url": "https://api.github.com/users/shahriyar1369/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-18T13:18:29Z", "updated_at": "2018-02-19T16:12:15Z", "closed_at": "2018-02-19T16:12:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nis there way to on generating WADL automatically ?\r\nif not did any one try to make WADL Generator ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/734", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/734/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/734/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/734/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/734", "id": 290281202, "node_id": "MDU6SXNzdWUyOTAyODEyMDI=", "number": 734, "title": "Flask restful initial json validation for the post request", "user": {"login": "karesh", "id": 2954714, "node_id": "MDQ6VXNlcjI5NTQ3MTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2954714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karesh", "html_url": "https://github.com/karesh", "followers_url": "https://api.github.com/users/karesh/followers", "following_url": "https://api.github.com/users/karesh/following{/other_user}", "gists_url": "https://api.github.com/users/karesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/karesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karesh/subscriptions", "organizations_url": "https://api.github.com/users/karesh/orgs", "repos_url": "https://api.github.com/users/karesh/repos", "events_url": "https://api.github.com/users/karesh/events{/privacy}", "received_events_url": "https://api.github.com/users/karesh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-21T15:31:14Z", "updated_at": "2018-01-21T15:51:51Z", "closed_at": "2018-01-21T15:51:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have flask restful application. I tried to pass invalid json and my server throw html tags to user.\r\n**How can throw nice error message to user saying json not valid.?** POST method\r\n\r\n```\r\nclass MyView(Resource):\r\n\r\n    def post(self):\r\n        try:\r\n            signup_data = request.get_json(force=True)\r\n            country_code = signup_data['country_code']\r\n\r\n```\r\nData passed (invalid json)\r\n\r\n```\r\n{\r\n    \"country_code\": \"hello\",\r\n    \"country_code\": \"hello\"\r\n}\r\n```\r\n\r\nError message\r\n\r\n> File \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1598, in dispatch_request return self.view_functionsrule.endpoint File \"/usr/local/lib/python2.7/dist-packages/flask_restful/init.py\", line 484, in wrapper return self.make_response(data, code, headers=headers) File \"/usr/local/lib/python2.7/dist-packages/flask_restful/init.py\", line 513, in make_response resp = self.representations[mediatype](data, *args, **kwargs) File \"/usr/local/lib/python2.7/dist-packages/flask_restful/representations/json.py\", line 21, in output_json dumped = dumps(data, **settings) + \"\\n\" File \"/usr/lib/python2.7/json/init.py\", line 251, in dumps sort_keys=sort_keys, **kw).encode(obj) File \"/usr/lib/python2.7/json/encoder.py\", line 209, in encode chunks = list(chunks) File \"/usr/lib/python2.7/json/encoder.py\", line 442, in _iterencode o = _default(o) File \"/usr/lib/python2.7/json/encoder.py\", line 184, in default raise TypeError(repr(o) + \" is not JSON serializable\") TypeError: is not JSON serializable\r\n\r\noutput to user\r\n\r\n> !DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\r\n> \"http://www.w3.org/TR/html4/loose.dtd\"> TypeError: <Response 29 bytes [200 OK]> is not JSON serializable // Werkzeug Debugger", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/732", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/732/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/732/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/732", "id": 288619449, "node_id": "MDU6SXNzdWUyODg2MTk0NDk=", "number": 732, "title": "No module named config.py", "user": {"login": "MauroCE", "id": 33002247, "node_id": "MDQ6VXNlcjMzMDAyMjQ3", "avatar_url": "https://avatars3.githubusercontent.com/u/33002247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MauroCE", "html_url": "https://github.com/MauroCE", "followers_url": "https://api.github.com/users/MauroCE/followers", "following_url": "https://api.github.com/users/MauroCE/following{/other_user}", "gists_url": "https://api.github.com/users/MauroCE/gists{/gist_id}", "starred_url": "https://api.github.com/users/MauroCE/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MauroCE/subscriptions", "organizations_url": "https://api.github.com/users/MauroCE/orgs", "repos_url": "https://api.github.com/users/MauroCE/repos", "events_url": "https://api.github.com/users/MauroCE/events{/privacy}", "received_events_url": "https://api.github.com/users/MauroCE/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-15T14:51:03Z", "updated_at": "2018-04-24T12:51:45Z", "closed_at": "2018-04-24T12:51:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just created a new environment from command line by using the  following:\r\n`conda create -p my_env python=3.5`\r\nThen I activated it\r\n`activate %cd%\\my_env`\r\nAnd then I installed some packages using the anaconda cloud instructions:\r\n`conda install -c anaconda numpy`                  (https://anaconda.org/anaconda/numpy)\r\n`conda install -c anaconda pandas `                 (https://anaconda.org/anaconda/pandas)\r\n`conda install -c conda-forge time`                   (https://anaconda.org/conda-forge/time)\r\n`conda install -c anaconda flask`                       (https://anaconda.org/anaconda/flask)\r\n`conda install -c anaconda flask-wtf`                 (https://anaconda.org/anaconda/flask-wtf)\r\n`conda install -c conda-forge cassandra-driver` (https://anaconda.org/conda-forge/cassandra-driver)\r\n\r\nThen, I also installed flask-restful by following again the commands for anaconda\r\n`conda instal -c conda-forge flask-restful`         (https://anaconda.org/conda-forge/flask-restful)\r\n\r\n\r\nEverything seemed fine when I started importing modules after I wrote \"python\" to get the prompts.\r\n\r\n`import numpy`\r\n`import pandas`\r\n`import time`\r\n However when I wrote `import flask_restful`, I get \r\n\r\n> No module named config\r\n\r\n as follows:\r\n\r\n```\r\n>>> import numpy\r\n>>> import pandas\r\n>>> import time\r\n>>> import flask\r\n>>> import flask_restful\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\Me\\Desktop\\Myfolder\\MySubfolder\\learning_flask_env\\lib\\site-packages\\flask_restful\\__init__.py\", line 21, in <module>\r\n    import config\r\nImportError: No module named 'config'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/731", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/731/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/731/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/731/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/731", "id": 286620071, "node_id": "MDU6SXNzdWUyODY2MjAwNzE=", "number": 731, "title": "How to get resource class in request", "user": {"login": "MrVokia", "id": 9609834, "node_id": "MDQ6VXNlcjk2MDk4MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9609834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrVokia", "html_url": "https://github.com/MrVokia", "followers_url": "https://api.github.com/users/MrVokia/followers", "following_url": "https://api.github.com/users/MrVokia/following{/other_user}", "gists_url": "https://api.github.com/users/MrVokia/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrVokia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrVokia/subscriptions", "organizations_url": "https://api.github.com/users/MrVokia/orgs", "repos_url": "https://api.github.com/users/MrVokia/repos", "events_url": "https://api.github.com/users/MrVokia/events{/privacy}", "received_events_url": "https://api.github.com/users/MrVokia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-08T01:37:37Z", "updated_at": "2018-02-13T06:33:09Z", "closed_at": "2018-02-13T06:33:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Flask==0.12.2\r\nFlask-RESTful==0.3.6\r\n\r\nI need to verify the route that the current version should call in the head Accept.\r\n\r\n```python\r\nRouteV2Bp = Blueprint('route_v2', __name__)\r\n\r\napiv2 = Api()\r\napiv2.add_resource(Token, '/authentication')\r\n...\r\napiv2.init_app(RouteV2Bp)\r\n\r\n# I used it to get all the routes corresponding to the current version\r\nrouter = [str(res[0]) for res in apiv2.resources]\r\n```\r\n\r\nI also need to verify whether the resource class it access exists in the current corresponding version of all the routes, what should I do?\r\n\r\nHelp~~ \r\n:sob::sob::sob:", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/730", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/730/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/730/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/730", "id": 284708419, "node_id": "MDU6SXNzdWUyODQ3MDg0MTk=", "number": 730, "title": "LICENSE file \"twilio\" copyright", "user": {"login": "fpozzobon", "id": 12074690, "node_id": "MDQ6VXNlcjEyMDc0Njkw", "avatar_url": "https://avatars3.githubusercontent.com/u/12074690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fpozzobon", "html_url": "https://github.com/fpozzobon", "followers_url": "https://api.github.com/users/fpozzobon/followers", "following_url": "https://api.github.com/users/fpozzobon/following{/other_user}", "gists_url": "https://api.github.com/users/fpozzobon/gists{/gist_id}", "starred_url": "https://api.github.com/users/fpozzobon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fpozzobon/subscriptions", "organizations_url": "https://api.github.com/users/fpozzobon/orgs", "repos_url": "https://api.github.com/users/fpozzobon/repos", "events_url": "https://api.github.com/users/fpozzobon/events{/privacy}", "received_events_url": "https://api.github.com/users/fpozzobon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-27T11:48:46Z", "updated_at": "2017-12-27T11:50:03Z", "closed_at": "2017-12-27T11:50:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nNot a big deal but, looking to the LICENSE file I noticed that the copyright in it is \"twilio\", is it expected ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/728", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/728/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/728/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/728", "id": 283160041, "node_id": "MDU6SXNzdWUyODMxNjAwNDE=", "number": 728, "title": "type is a dict or list how to set the type = ??", "user": {"login": "laopang2018", "id": 9148977, "node_id": "MDQ6VXNlcjkxNDg5Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/9148977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laopang2018", "html_url": "https://github.com/laopang2018", "followers_url": "https://api.github.com/users/laopang2018/followers", "following_url": "https://api.github.com/users/laopang2018/following{/other_user}", "gists_url": "https://api.github.com/users/laopang2018/gists{/gist_id}", "starred_url": "https://api.github.com/users/laopang2018/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laopang2018/subscriptions", "organizations_url": "https://api.github.com/users/laopang2018/orgs", "repos_url": "https://api.github.com/users/laopang2018/repos", "events_url": "https://api.github.com/users/laopang2018/events{/privacy}", "received_events_url": "https://api.github.com/users/laopang2018/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-19T09:36:35Z", "updated_at": "2017-12-19T14:04:23Z", "closed_at": "2017-12-19T14:04:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "    def post(self):\r\n        parser = reqparse.RequestParser()\r\n        parser.add_argument('name', type=str, help='name cannot be blank',\r\n                        required=True)\r\n        parser.add_argument('status', type=str, help='status cannot be blank',\r\n                        required=True)\r\n        parser.add_argument('ip', type=str, help='ip cannot be blank',\r\n                        required=True)\r\n        parser.add_argument('time_stamp', type=str, help='time_stamp cannot be blank')\r\n        parser.add_argument('port', type=int, help='port cannot be blank')\r\n        parser.add_argument('proc_name', type=str, help='proc_name cannot be blank')\r\n        parser.add_argument('grains', type=str, help='grains cannot be blank')\r\n\r\n        args = parser.parse_args(strict=True)\r\n        print args\r\n        \r\n      if the filed is a python dictionary,how can set the type?\r\n      for example grains = {'os': 'Linux'} \r\n parser.add_argument('grains', type=dict, help='grains cannot be blank') ????\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/727", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/727/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/727/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/727", "id": 283138499, "node_id": "MDU6SXNzdWUyODMxMzg0OTk=", "number": 727, "title": "some problem under internet explorer 8.", "user": {"login": "lonycc", "id": 12979723, "node_id": "MDQ6VXNlcjEyOTc5NzIz", "avatar_url": "https://avatars3.githubusercontent.com/u/12979723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lonycc", "html_url": "https://github.com/lonycc", "followers_url": "https://api.github.com/users/lonycc/followers", "following_url": "https://api.github.com/users/lonycc/following{/other_user}", "gists_url": "https://api.github.com/users/lonycc/gists{/gist_id}", "starred_url": "https://api.github.com/users/lonycc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lonycc/subscriptions", "organizations_url": "https://api.github.com/users/lonycc/orgs", "repos_url": "https://api.github.com/users/lonycc/repos", "events_url": "https://api.github.com/users/lonycc/events{/privacy}", "received_events_url": "https://api.github.com/users/lonycc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-19T08:16:45Z", "updated_at": "2017-12-20T04:33:48Z", "closed_at": "2017-12-19T14:02:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "# server side code below:\r\n```\r\n# coding=utf-8\r\n\r\nfrom flask import Flask, request\r\nfrom flask_restful import reqparse, abort, Api, Resource\r\nfrom flask_cors import CORS\r\n\r\napp = Flask(__name__)\r\nCORS(app)\r\napi = Api(app)\r\n\r\nclass MyApi(Resource):\r\n\tdef __init__(self):\r\n\t\tsuper(MyApi, self).__init__()\r\n\t\tself.parser = reqparse.RequestParser()\r\n\t\tself.parser.add_argument('name', type=str, required=True, help='name required')\r\n\t\tself.parser.add_argument('age', type=int, required=True, help='age required')\r\n\t\tself.args = self.parser.parse_args()\r\n\r\n\tdef post(self):\r\n\t\tname = self.args['name']\r\n\t\tage = self.args['age']\r\n\t\treturn {'name': name, 'age': age}, 200\r\n\t\t#return request.data.decode('utf-8')\r\n\r\napi.add_resource(MyApi, '/api')\r\n\r\nif __name__ == '__main__':\r\n\tapp.run(debug=True)\r\n```\r\n\r\n# client side code below:\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n\t<meta charset=\"UTF-8\">\r\n\t<title>internet explorer sucks</title>\r\n</head>\r\n<body>\r\n\t<button>click this</button>\r\n\t<script src=\"https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js\"></script>\r\n\t<script src=\"http://cdnjs.cloudflare.com/ajax/libs/jquery-ajaxtransport-xdomainrequest/1.0.3/jquery.xdomainrequest.min.js\"></script>\r\n\t<script>\r\n\t\t$(function() {\r\n\t\t\t$('button').on('click',function() {\r\n\t\t\t\tvar param = {name:'test', age: 25};\r\n\t\t\t\tif(!$.support.cors) {\r\n\t\t\t\t\tparam = JSON.stringify(param);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t$.ajax('http://127.0.0.1:5000/api',{\r\n\t\t\t\t\ttype:'post',\r\n\t\t\t\t\tdataType:'json',\r\n\t\t\t\t\tdata:param,\r\n\t\t\t\t\tsuccess:function(resp) {\r\n\t\t\t\t\t\tconsole.log(resp);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t</script>\r\n</body>\r\n</html>\r\n```\r\n\r\nIt response 400 error. what's wrong with my code?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/725", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/725/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/725/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/725", "id": 280049532, "node_id": "MDU6SXNzdWUyODAwNDk1MzI=", "number": 725, "title": "Example value is null in an array of arrays.", "user": {"login": "panuhorsmalahti", "id": 2162413, "node_id": "MDQ6VXNlcjIxNjI0MTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2162413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/panuhorsmalahti", "html_url": "https://github.com/panuhorsmalahti", "followers_url": "https://api.github.com/users/panuhorsmalahti/followers", "following_url": "https://api.github.com/users/panuhorsmalahti/following{/other_user}", "gists_url": "https://api.github.com/users/panuhorsmalahti/gists{/gist_id}", "starred_url": "https://api.github.com/users/panuhorsmalahti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/panuhorsmalahti/subscriptions", "organizations_url": "https://api.github.com/users/panuhorsmalahti/orgs", "repos_url": "https://api.github.com/users/panuhorsmalahti/repos", "events_url": "https://api.github.com/users/panuhorsmalahti/events{/privacy}", "received_events_url": "https://api.github.com/users/panuhorsmalahti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-07T08:57:30Z", "updated_at": "2017-12-07T15:25:06Z", "closed_at": "2017-12-07T15:25:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm defining the API documentation as follows:\r\n```\r\n@api.doc(model=fields.List(fields.List(fields.Nested(MyClass.flask_model))))\r\n```\r\n\r\nwhere `MyClass.flask_model` is `api.model('MyObject', { ... })`.\r\n\r\nThe example value in the Swagger documentation is `[[ null ]]` instead of null being an object with example values. In addition, the model documentation contains `{}` instead of list of the properties with descriptions.\r\n\r\nIt seems that this bug is triggered depending on the `api.doc` for another class in another namespace. If the `api.doc` for another class is `@api.doc(model=MyClass.flask_model)` the bug doesn't trigger, but it does if I change it to `@api.doc(model=api.model('FooBar', {}))`.\r\n\r\n\r\nThis seems to only affect the documentation.\r\n\r\nThis sounds like the same issue as #13.\r\n\r\nI'm using Python 3.6.3, Flask 0.12.2 and flask-restplus 0.10.1.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/721", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/721/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/721/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/721/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/721", "id": 276646144, "node_id": "MDU6SXNzdWUyNzY2NDYxNDQ=", "number": 721, "title": "Suggestion / PR - make return code for parse_args() configurable", "user": {"login": "skamsie", "id": 7014744, "node_id": "MDQ6VXNlcjcwMTQ3NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7014744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skamsie", "html_url": "https://github.com/skamsie", "followers_url": "https://api.github.com/users/skamsie/followers", "following_url": "https://api.github.com/users/skamsie/following{/other_user}", "gists_url": "https://api.github.com/users/skamsie/gists{/gist_id}", "starred_url": "https://api.github.com/users/skamsie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skamsie/subscriptions", "organizations_url": "https://api.github.com/users/skamsie/orgs", "repos_url": "https://api.github.com/users/skamsie/repos", "events_url": "https://api.github.com/users/skamsie/events{/privacy}", "received_events_url": "https://api.github.com/users/skamsie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-24T15:25:18Z", "updated_at": "2017-11-27T18:41:13Z", "closed_at": "2017-11-27T18:41:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I would like to be able to configure which return code is used when aborting inside the `parse_args` method:\r\n\r\nhttps://github.com/flask-restful/flask-restful/blob/f71b4f61d96c43748ca1cb9002f874a8d8276312/flask_restful/reqparse.py#L311-L312\r\n\r\nIt is currently set to `400` without being able to change it without overriding the method or doing ugly hacks. My proposal is to have it as a keyword argument to the method with the default of 400.\r\n\r\nWhy? Without going into polemics about which return code is more appropriate for missing / improper arguments (400, 422 or even 412), let's say that an api already returns code `xxx` for argument related errors and switching to flask-restful reqparse will be less painful.\r\n\r\nI can make a PR if this idea is approved.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/720", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/720/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/720/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/720/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/720", "id": 276489718, "node_id": "MDU6SXNzdWUyNzY0ODk3MTg=", "number": 720, "title": "In python3.6 , fields.Url is different from new version", "user": {"login": "tianruoliang", "id": 15643697, "node_id": "MDQ6VXNlcjE1NjQzNjk3", "avatar_url": "https://avatars3.githubusercontent.com/u/15643697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tianruoliang", "html_url": "https://github.com/tianruoliang", "followers_url": "https://api.github.com/users/tianruoliang/followers", "following_url": "https://api.github.com/users/tianruoliang/following{/other_user}", "gists_url": "https://api.github.com/users/tianruoliang/gists{/gist_id}", "starred_url": "https://api.github.com/users/tianruoliang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tianruoliang/subscriptions", "organizations_url": "https://api.github.com/users/tianruoliang/orgs", "repos_url": "https://api.github.com/users/tianruoliang/repos", "events_url": "https://api.github.com/users/tianruoliang/events{/privacy}", "received_events_url": "https://api.github.com/users/tianruoliang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-24T00:32:55Z", "updated_at": "2017-11-24T01:08:31Z", "closed_at": "2017-11-24T01:06:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "python3.6\r\nFlask-RESTful (0.3.6)\r\n`pip install flask-restful`\r\nIt's the same as before\r\n\r\n    class Url(Raw):\r\n        ...\r\n        def __init__(self, endpoint=None, absolute=False, scheme=None):\r\n            ...\r\n\r\nActually, in GitHub\r\n\r\n    class Url(Raw):\r\n        ...\r\n        def __init__(self, endpoint=None, absolute=False, scheme=None, **kwargs):\r\n            ...\r\n\r\nI don't know why", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/718", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/718/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/718/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/718", "id": 273703244, "node_id": "MDU6SXNzdWUyNzM3MDMyNDQ=", "number": 718, "title": "RequestParser does not take arguments from URL on remote server", "user": {"login": "kevinkchristian", "id": 33651954, "node_id": "MDQ6VXNlcjMzNjUxOTU0", "avatar_url": "https://avatars3.githubusercontent.com/u/33651954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinkchristian", "html_url": "https://github.com/kevinkchristian", "followers_url": "https://api.github.com/users/kevinkchristian/followers", "following_url": "https://api.github.com/users/kevinkchristian/following{/other_user}", "gists_url": "https://api.github.com/users/kevinkchristian/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinkchristian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinkchristian/subscriptions", "organizations_url": "https://api.github.com/users/kevinkchristian/orgs", "repos_url": "https://api.github.com/users/kevinkchristian/repos", "events_url": "https://api.github.com/users/kevinkchristian/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinkchristian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-14T08:20:12Z", "updated_at": "2017-11-14T16:47:43Z", "closed_at": "2017-11-14T16:47:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a project. Everything is awesome on my local device. But on remote server, where it should be run, RequestParser does not take any arguments/parameters in the URL. \r\n\r\nExample:\r\n`parser = reqparse.RequestParser()`\r\n`parser.add_argument('foo1')`\r\n`parser.add_argument('foo2')`\r\n`args = parser.parse_args()`\r\n\r\nThe `args['foo1']` and `args['foo2']` will always `null` even I add `/example?foo1=a&foo2=b`\r\nbut this is only happen on my remote server. Any thought or solution? Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/717", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/717/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/717/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/717", "id": 271907286, "node_id": "MDU6SXNzdWUyNzE5MDcyODY=", "number": 717, "title": "Type checking warnings (PyCharm)", "user": {"login": "BenjaVR", "id": 17981138, "node_id": "MDQ6VXNlcjE3OTgxMTM4", "avatar_url": "https://avatars3.githubusercontent.com/u/17981138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenjaVR", "html_url": "https://github.com/BenjaVR", "followers_url": "https://api.github.com/users/BenjaVR/followers", "following_url": "https://api.github.com/users/BenjaVR/following{/other_user}", "gists_url": "https://api.github.com/users/BenjaVR/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenjaVR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenjaVR/subscriptions", "organizations_url": "https://api.github.com/users/BenjaVR/orgs", "repos_url": "https://api.github.com/users/BenjaVR/repos", "events_url": "https://api.github.com/users/BenjaVR/events{/privacy}", "received_events_url": "https://api.github.com/users/BenjaVR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-07T16:57:21Z", "updated_at": "2018-09-24T10:30:39Z", "closed_at": "2018-05-10T01:04:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using PyCharm to setup a basic project, and immediately there are 2 warnings from the type checker:\r\n\r\n1) The Flask `app` instance is not correct, the `Api` expects a `Blueprint`?\r\n![image](https://user-images.githubusercontent.com/17981138/32506429-2c4e5c68-c3aa-11e7-911b-9f9963d250e7.png)\r\n\r\n2) A `Resource` subclass does not get recognized by the `add_resource` method.\r\n![image](https://user-images.githubusercontent.com/17981138/32506506-5eb3281e-c3aa-11e7-8255-24474fa83791.png)\r\n\r\nI am not sure if this is because of some flask_restful things, or if I should report this to JetBrains.\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/716", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/716/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/716/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/716", "id": 271233846, "node_id": "MDU6SXNzdWUyNzEyMzM4NDY=", "number": 716, "title": "Better tutorial for large project", "user": {"login": "miff", "id": 469459, "node_id": "MDQ6VXNlcjQ2OTQ1OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/469459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miff", "html_url": "https://github.com/miff", "followers_url": "https://api.github.com/users/miff/followers", "following_url": "https://api.github.com/users/miff/following{/other_user}", "gists_url": "https://api.github.com/users/miff/gists{/gist_id}", "starred_url": "https://api.github.com/users/miff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miff/subscriptions", "organizations_url": "https://api.github.com/users/miff/orgs", "repos_url": "https://api.github.com/users/miff/repos", "events_url": "https://api.github.com/users/miff/events{/privacy}", "received_events_url": "https://api.github.com/users/miff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-04T23:11:15Z", "updated_at": "2017-11-06T22:40:25Z", "closed_at": "2017-11-06T22:40:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please help,\r\nWorking on some research to determinate witch technology and framework suits for large medical API. Found that Flask-restful is almost excellent, but have 'trouble' to organize structure of project\r\n```\r\nhapi/\r\n    api.py\r\n    modules/\r\n         __init__.py\r\n         module1.py\r\n         module2.py\r\n```\r\nTry from [here](https://flask-restful.readthedocs.io/en/latest/intermediate-usage.html), but it's confusing, must say that am not familiar with Flask / Flask-restful at all, this is first time to 'playing'\r\nThanks ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/715", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/715/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/715/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/715/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/715", "id": 270761918, "node_id": "MDU6SXNzdWUyNzA3NjE5MTg=", "number": 715, "title": "Docs are not building correctly", "user": {"login": "prmtl", "id": 1519363, "node_id": "MDQ6VXNlcjE1MTkzNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1519363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prmtl", "html_url": "https://github.com/prmtl", "followers_url": "https://api.github.com/users/prmtl/followers", "following_url": "https://api.github.com/users/prmtl/following{/other_user}", "gists_url": "https://api.github.com/users/prmtl/gists{/gist_id}", "starred_url": "https://api.github.com/users/prmtl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prmtl/subscriptions", "organizations_url": "https://api.github.com/users/prmtl/orgs", "repos_url": "https://api.github.com/users/prmtl/repos", "events_url": "https://api.github.com/users/prmtl/events{/privacy}", "received_events_url": "https://api.github.com/users/prmtl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 85235405, "node_id": "MDU6TGFiZWw4NTIzNTQwNQ==", "url": "https://api.github.com/repos/flask-restful/flask-restful/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-02T18:37:14Z", "updated_at": "2017-11-03T11:57:36Z", "closed_at": "2017-11-03T00:12:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "API docs page is empty: http://flask-restful.readthedocs.io/en/latest/api.html due to the missing flask-restful app requirements.\r\nThere are bunch of ImportErrors in the build log on ReadTheDocs page:\r\n```\r\n/home/docs/checkouts/readthedocs.org/user_builds/flask-restful/checkouts/latest/docs/api.rst:9: WARNING: autodoc: failed to import function 'marshal' from module 'flask_restful'; the following exception was raised:\r\nTraceback (most recent call last):\r\n  File \"/home/docs/checkouts/readthedocs.org/user_builds/flask-restful/envs/latest/lib/python3.5/site-packages/sphinx/ext/autodoc.py\", line 560, in import_object\r\n    __import__(self.modname)\r\nImportError: No module named 'flask_restful'\r\n```\r\n\r\nFix is described in RTD docs: http://docs.readthedocs.io/en/latest/faq.html#my-project-isn-t-building-with-autodoc", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/713", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/713/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/713/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/713/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/713", "id": 270047327, "node_id": "MDU6SXNzdWUyNzAwNDczMjc=", "number": 713, "title": "pytest cannot import flask_restful : ModuleNotFoundError", "user": {"login": "stockersky", "id": 22478549, "node_id": "MDQ6VXNlcjIyNDc4NTQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/22478549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stockersky", "html_url": "https://github.com/stockersky", "followers_url": "https://api.github.com/users/stockersky/followers", "following_url": "https://api.github.com/users/stockersky/following{/other_user}", "gists_url": "https://api.github.com/users/stockersky/gists{/gist_id}", "starred_url": "https://api.github.com/users/stockersky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stockersky/subscriptions", "organizations_url": "https://api.github.com/users/stockersky/orgs", "repos_url": "https://api.github.com/users/stockersky/repos", "events_url": "https://api.github.com/users/stockersky/events{/privacy}", "received_events_url": "https://api.github.com/users/stockersky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-31T17:25:05Z", "updated_at": "2017-11-03T17:08:21Z", "closed_at": "2017-11-03T17:08:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have installed flask_restful through pip. \r\nI have first developed and tested on my windows workstation. Had no problem.\r\n\r\nWhile deploying to linux server, codes runs, but pytest fails to find flask_restful.\r\nActually, I also installed it through pip install.\r\n\r\nHere is a really simple test file thtat fails \r\n\r\n```\r\nimport flask\r\nimport pygments\r\n#from flask_restless import *\r\nfrom flask_restful import Resource, Api\r\n\r\n```\r\n\r\n```\r\n$ pytest .\r\n\r\nTraceback:\r\ntests/test_MonAPPflaskRest.py:4: in <module>\r\n    from flask_restful import Resource, Api\r\nE   ModuleNotFoundError: No module named 'flask_restful'\r\n\r\n```\r\n\r\nNo error from the other modules also installed via pip and located in site-packages.\r\n**Except Flask-restless which also have a module name which could cause problems...**\r\n\r\nIt only fails when called from pytest. I am sure it has to deal with the name...\r\n\r\n```\r\ntests/test_MonAPPflaskRest.py:4: in <module>\r\n    from flask_restful import Resource, Api\r\nE   ModuleNotFoundError: No module named 'flask_restful'\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n===================================================== 1 error in 0.47 seconds ======================================================\r\n(tools) wkldevweb001 x165896 /home/x165896/DEV/MonAPPflaskRest # python\r\nPython 3.6.1 |Continuum Analytics, Inc.| (default, May 11 2017, 13:09:58)\r\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from flask_restful import *\r\n>>>\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/712", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/712/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/712/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/712", "id": 267798246, "node_id": "MDU6SXNzdWUyNjc3OTgyNDY=", "number": 712, "title": "Multiple GET methods in the same class", "user": {"login": "rogercorrea", "id": 11555553, "node_id": "MDQ6VXNlcjExNTU1NTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/11555553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogercorrea", "html_url": "https://github.com/rogercorrea", "followers_url": "https://api.github.com/users/rogercorrea/followers", "following_url": "https://api.github.com/users/rogercorrea/following{/other_user}", "gists_url": "https://api.github.com/users/rogercorrea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogercorrea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogercorrea/subscriptions", "organizations_url": "https://api.github.com/users/rogercorrea/orgs", "repos_url": "https://api.github.com/users/rogercorrea/repos", "events_url": "https://api.github.com/users/rogercorrea/events{/privacy}", "received_events_url": "https://api.github.com/users/rogercorrea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-23T20:01:27Z", "updated_at": "2017-10-24T01:26:39Z", "closed_at": "2017-10-24T01:26:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please,\r\n\r\nIt's possible use multiple GET methods in the same class with Resources?\r\nExample:\r\n\r\n```\r\nclass Example:\r\n    def get():\r\n        return \"all\"\r\n\r\n    def check(name):\r\n        return session.query(User.name == name).first()\r\n\r\napi.add_resource(Example, '/example')\r\napi.add_resource(Example, '/example/check/<string:name>')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/710", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/710/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/710/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/710/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/710", "id": 266111458, "node_id": "MDU6SXNzdWUyNjYxMTE0NTg=", "number": 710, "title": "Marshal time objects", "user": {"login": "pranav93", "id": 6301215, "node_id": "MDQ6VXNlcjYzMDEyMTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6301215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pranav93", "html_url": "https://github.com/pranav93", "followers_url": "https://api.github.com/users/pranav93/followers", "following_url": "https://api.github.com/users/pranav93/following{/other_user}", "gists_url": "https://api.github.com/users/pranav93/gists{/gist_id}", "starred_url": "https://api.github.com/users/pranav93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pranav93/subscriptions", "organizations_url": "https://api.github.com/users/pranav93/orgs", "repos_url": "https://api.github.com/users/pranav93/repos", "events_url": "https://api.github.com/users/pranav93/events{/privacy}", "received_events_url": "https://api.github.com/users/pranav93/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-17T12:48:40Z", "updated_at": "2018-01-30T10:38:39Z", "closed_at": "2018-01-30T10:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add `fields.Time` which would be similar to `fields.DateTime`.\r\nAt present I've dirty custom class for serialisation,\r\n```python\r\nclass TimeField(fields.Raw):\r\n    def format(self, value):\r\n        try:\r\n            if value:\r\n                return value.isoformat()\r\n        except Exception as exc:\r\n            raise MarshallingException(exc)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/708", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/708/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/708/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/708/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/708", "id": 263346205, "node_id": "MDU6SXNzdWUyNjMzNDYyMDU=", "number": 708, "title": "How to handle assertion error?", "user": {"login": "vimox-shah", "id": 24619300, "node_id": "MDQ6VXNlcjI0NjE5MzAw", "avatar_url": "https://avatars3.githubusercontent.com/u/24619300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vimox-shah", "html_url": "https://github.com/vimox-shah", "followers_url": "https://api.github.com/users/vimox-shah/followers", "following_url": "https://api.github.com/users/vimox-shah/following{/other_user}", "gists_url": "https://api.github.com/users/vimox-shah/gists{/gist_id}", "starred_url": "https://api.github.com/users/vimox-shah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vimox-shah/subscriptions", "organizations_url": "https://api.github.com/users/vimox-shah/orgs", "repos_url": "https://api.github.com/users/vimox-shah/repos", "events_url": "https://api.github.com/users/vimox-shah/events{/privacy}", "received_events_url": "https://api.github.com/users/vimox-shah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16228193, "node_id": "MDU6TGFiZWwxNjIyODE5Mw==", "url": "https://api.github.com/repos/flask-restful/flask-restful/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-06T06:19:55Z", "updated_at": "2017-10-06T16:59:44Z", "closed_at": "2017-10-06T16:59:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "If i am handling using abort still it gives html response why?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/707", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/707/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/707/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/707/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/707", "id": 262799228, "node_id": "MDU6SXNzdWUyNjI3OTkyMjg=", "number": 707, "title": "How can I create generic HTTP exception/ error handler in flask rest ful?", "user": {"login": "vimox-shah", "id": 24619300, "node_id": "MDQ6VXNlcjI0NjE5MzAw", "avatar_url": "https://avatars3.githubusercontent.com/u/24619300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vimox-shah", "html_url": "https://github.com/vimox-shah", "followers_url": "https://api.github.com/users/vimox-shah/followers", "following_url": "https://api.github.com/users/vimox-shah/following{/other_user}", "gists_url": "https://api.github.com/users/vimox-shah/gists{/gist_id}", "starred_url": "https://api.github.com/users/vimox-shah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vimox-shah/subscriptions", "organizations_url": "https://api.github.com/users/vimox-shah/orgs", "repos_url": "https://api.github.com/users/vimox-shah/repos", "events_url": "https://api.github.com/users/vimox-shah/events{/privacy}", "received_events_url": "https://api.github.com/users/vimox-shah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-04T14:02:54Z", "updated_at": "2017-10-04T14:06:30Z", "closed_at": "2017-10-04T14:06:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/706", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/706/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/706/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/706/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/706", "id": 262690487, "node_id": "MDU6SXNzdWUyNjI2OTA0ODc=", "number": 706, "title": "How can I create POST, GET, PUT on one resource in flask restful??", "user": {"login": "vimox-shah", "id": 24619300, "node_id": "MDQ6VXNlcjI0NjE5MzAw", "avatar_url": "https://avatars3.githubusercontent.com/u/24619300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vimox-shah", "html_url": "https://github.com/vimox-shah", "followers_url": "https://api.github.com/users/vimox-shah/followers", "following_url": "https://api.github.com/users/vimox-shah/following{/other_user}", "gists_url": "https://api.github.com/users/vimox-shah/gists{/gist_id}", "starred_url": "https://api.github.com/users/vimox-shah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vimox-shah/subscriptions", "organizations_url": "https://api.github.com/users/vimox-shah/orgs", "repos_url": "https://api.github.com/users/vimox-shah/repos", "events_url": "https://api.github.com/users/vimox-shah/events{/privacy}", "received_events_url": "https://api.github.com/users/vimox-shah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-04T07:24:02Z", "updated_at": "2017-10-04T14:05:50Z", "closed_at": "2017-10-04T14:05:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "class User(Resource):\r\n      def post(self):\r\n         return true\r\n      def put(self, id):\r\n        return true\r\n      def get(self, _id):\r\n        return true\r\n\r\n\r\nIs this possible?? or I have to create different resource for every http method?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/702", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/702/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/702/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/702", "id": 259088406, "node_id": "MDU6SXNzdWUyNTkwODg0MDY=", "number": 702, "title": "fields.Url does not support attribute keyword", "user": {"login": "mliker", "id": 1681893, "node_id": "MDQ6VXNlcjE2ODE4OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1681893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mliker", "html_url": "https://github.com/mliker", "followers_url": "https://api.github.com/users/mliker/followers", "following_url": "https://api.github.com/users/mliker/following{/other_user}", "gists_url": "https://api.github.com/users/mliker/gists{/gist_id}", "starred_url": "https://api.github.com/users/mliker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mliker/subscriptions", "organizations_url": "https://api.github.com/users/mliker/orgs", "repos_url": "https://api.github.com/users/mliker/repos", "events_url": "https://api.github.com/users/mliker/events{/privacy}", "received_events_url": "https://api.github.com/users/mliker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 16228189, "node_id": "MDU6TGFiZWwxNjIyODE4OQ==", "url": "https://api.github.com/repos/flask-restful/flask-restful/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 152865680, "node_id": "MDU6TGFiZWwxNTI4NjU2ODA=", "url": "https://api.github.com/repos/flask-restful/flask-restful/labels/marshalling", "name": "marshalling", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-20T08:53:23Z", "updated_at": "2017-12-12T22:33:34Z", "closed_at": "2017-09-20T13:11:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI came across this in #701.\r\n\r\n```python\r\n$ LOGLEVEL=debug FLASK_DEBUG=1 python custom_components.py \r\nTraceback (most recent call last):\r\n  File \"custom_components.py\", line 35, in <module>\r\n    'uri': fields.Url('component', attribute=\"_file\", absolute=True)\r\nTypeError: __init__() got an unexpected keyword argument 'attribute'\r\n```\r\n\r\nReason for this is that Url.\\_\\_init\\_\\_ method does not accept any additional kwargs hence any kwargs defined in the super class (Raw) can not be used during initialisation.\r\n\r\nCurrently:\r\n```python\r\nclass Url(Raw):\r\n    def __init__(self, endpoint=None, absolute=False, scheme=None):\r\n        super(Url, self).__init__()\r\n```\r\ninstead of:\r\n```python\r\nclass Url(Raw):\r\n    def __init__(self, endpoint=None, absolute=False, scheme=None, **kwargs):\r\n        super(Url, self).__init__(**kwargs)\r\n```\r\n\r\nas is the case for the rest of the fields that define their own \\_\\_init\\_\\_ method\r\n\r\nThis seems to also affect FormattedString", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/701", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/701/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/701/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/701/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/701", "id": 258732388, "node_id": "MDU6SXNzdWUyNTg3MzIzODg=", "number": 701, "title": "BuildError. Did you forget to specify values", "user": {"login": "mliker", "id": 1681893, "node_id": "MDQ6VXNlcjE2ODE4OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1681893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mliker", "html_url": "https://github.com/mliker", "followers_url": "https://api.github.com/users/mliker/followers", "following_url": "https://api.github.com/users/mliker/following{/other_user}", "gists_url": "https://api.github.com/users/mliker/gists{/gist_id}", "starred_url": "https://api.github.com/users/mliker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mliker/subscriptions", "organizations_url": "https://api.github.com/users/mliker/orgs", "repos_url": "https://api.github.com/users/mliker/repos", "events_url": "https://api.github.com/users/mliker/events{/privacy}", "received_events_url": "https://api.github.com/users/mliker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-19T08:12:08Z", "updated_at": "2017-09-20T08:41:43Z", "closed_at": "2017-09-20T08:41:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have the following simple flask restful service, however I am not able to make it work due to the below error.\r\n\r\nI read over similar issues here however none seem to have run into the same error as below.\r\n\r\nAppreciate your help with this.\r\n\r\nrestful service:\r\n```python\r\nimport os\r\nfrom flask import Flask, abort\r\nfrom flask_restful import Resource, Api, reqparse, fields, marshal\r\nfrom flask_pymongo import PyMongo, GridFS\r\nfrom werkzeug.datastructures import FileStorage\r\nfrom werkzeug.utils import secure_filename\r\nimport logging\r\nimport zipfile\r\n\r\n\r\n# Setup flask app\r\napp = Flask(__name__)\r\napp.config.update(ERROR_404_HELP=False)\r\napi = Api(app)\r\n\r\n# Setup logging\r\nstream_handler = logging.StreamHandler()\r\nstream_handler.setFormatter(logging.Formatter(\r\n    '[%(asctime)s] %(levelname)s in %(module)s: %(message)s'))\r\napp.logger.addHandler(stream_handler)\r\napp.logger.setLevel(os.environ.get(\"LOGLEVEL\", \"INFO\").upper())\r\n\r\n# MongoDB set up\r\nmongo = PyMongo(app)\r\n\r\n# Request argument parsing\r\nreqparser = reqparse.RequestParser()\r\nreqparser.add_argument('custom_component', required=True, type=FileStorage,\r\n                    location='files')\r\n\r\ncomponent_fields = {\r\n    'filename': fields.String,\r\n    'upload_date': fields.DateTime,\r\n    'uri': fields.Url('component', absolute=True)\r\n}\r\n\r\n\r\ndef validate_component(zipfile):\r\n    return True\r\n\r\n\r\nclass CustomComponentListService(Resource):\r\n    def __init__(self):\r\n        self.fs = GridFS(mongo.db)\r\n\r\n    def post(self):\r\n        self.args = reqparser.parse_args()\r\n        component_zip = self.args[\"custom_component\"]\r\n        filename = secure_filename(component_zip.filename)\r\n        app.logger.debug(\"Received file: {0}\".format(filename))\r\n\r\n        if validate_component(component_zip):\r\n            mongo.save_file(filename, component_zip)\r\n            # Return nice repr of uploaded file\r\n            return {'component': marshal(self.fs.get_last_version(filename), component_fields)}, 201\r\n        else:\r\n            return {\"message\": \"Custom component archive is invalid\"}, 400\r\n\r\n    def get(self):\r\n        return {\"components\": [marshal(component, component_fields) for component in self.fs.find()]}\r\n\r\n\r\nclass CustomComponentService(Resource):\r\n    def __init__(self):\r\n        self.fs = GridFS(mongo.db)\r\n\r\n    def get(self, filename):\r\n        filename = secure_filename(filename)\r\n        if self.fs.exists(filename=filename):\r\n            return {\"component\": marshal(self.fs.get_last_version(filename=filename), component_fields)}\r\n        else:\r\n            abort(404, \"No such file\")\r\n\r\n    def put(self, filename):\r\n        self.args = reqparser.parse_args()\r\n        filename = secure_filename(filename)\r\n        if self.fs.exists(filename=filename):\r\n            mongo.db.save_file()\r\n            return {\"component\": marshal(self.fs.get_last_version(filename=filename), component_fields)}\r\n        else:\r\n            abort(404, \"No such file\")\r\n\r\n    def delete(self, filename):\r\n        filename = secure_filename(filename)\r\n        if self.fs.exists(filename=filename):\r\n            for f in self.fs.find({\"filename\": filename}):\r\n                fs.delete(f._id)\r\n            return  {'result': True}\r\n        else:\r\n            abort(404, \"No such file\")\r\n\r\n\r\napi.add_resource(CustomComponentListService, '/components',\r\n                 endpoint='components')\r\napi.add_resource(CustomComponentService, '/components/<filename>',\r\n                 endpoint='component')\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app.run()\r\n```\r\n\r\nstacktrace:\r\n```python\r\n127.0.0.1 - - [19/Sep/2017 10:05:37] \"GET /components HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask/app.py\", line 1997, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask/app.py\", line 1985, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask_restful/__init__.py\", line 273, in error_router\r\n    return original_handler(e)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask/app.py\", line 1540, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask_restful/__init__.py\", line 270, in error_router\r\n    return self.handle_error(e)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask_restful/__init__.py\", line 273, in error_router\r\n    return original_handler(e)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask/app.py\", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask_restful/__init__.py\", line 270, in error_router\r\n    return self.handle_error(e)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask/app.py\", line 1612, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask/app.py\", line 1598, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask_restful/__init__.py\", line 480, in wrapper\r\n    resp = resource(*args, **kwargs)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask/views.py\", line 84, in view\r\n    return self.dispatch_request(*args, **kwargs)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask_restful/__init__.py\", line 595, in dispatch_request\r\n    resp = meth(*args, **kwargs)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/custom_components.py\", line 61, in get\r\n    return {\"components\": [marshal(component, component_fields) for component in self.fs.find()]}\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask_restful/__init__.py\", line 648, in marshal\r\n    return OrderedDict([(envelope, OrderedDict(items))]) if envelope else OrderedDict(items)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/collections.py\", line 69, in __init__\r\n    self.__update(*args, **kwds)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/_abcoll.py\", line 571, in update\r\n    for key, value in other:\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask_restful/__init__.py\", line 647, in <genexpr>\r\n    for k, v in fields.items())\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask_restful/fields.py\", line 307, in output\r\n    o = urlparse(url_for(endpoint, _external=self.absolute, **data))\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask/helpers.py\", line 333, in url_for\r\n    return appctx.app.handle_url_build_error(error, endpoint, values)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask/app.py\", line 1805, in handle_url_build_error\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/flask/helpers.py\", line 323, in url_for\r\n    force_external=external)\r\n  File \"/Users/m_liker/Documents/Projects/clientIO/grid-infra/custom_components/lib/python2.7/site-packages/werkzeug/routing.py\", line 1768, in build\r\n    raise BuildError(endpoint, values, method, self)\r\nBuildError: Could not build url for endpoint 'component' with values ['_GridOut__buffer', '_GridOut__chunks', '_GridOut__files', '_GridOut__position', '_file']. Did you forget to specify values ['filename']?\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/700", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/700/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/700/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/700/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/700", "id": 256620316, "node_id": "MDU6SXNzdWUyNTY2MjAzMTY=", "number": 700, "title": "AttributeError: 'Blueprint' object has no attribute 'view_functions'", "user": {"login": "eromoe", "id": 3938751, "node_id": "MDQ6VXNlcjM5Mzg3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3938751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eromoe", "html_url": "https://github.com/eromoe", "followers_url": "https://api.github.com/users/eromoe/followers", "following_url": "https://api.github.com/users/eromoe/following{/other_user}", "gists_url": "https://api.github.com/users/eromoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/eromoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eromoe/subscriptions", "organizations_url": "https://api.github.com/users/eromoe/orgs", "repos_url": "https://api.github.com/users/eromoe/repos", "events_url": "https://api.github.com/users/eromoe/events{/privacy}", "received_events_url": "https://api.github.com/users/eromoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-11T08:27:29Z", "updated_at": "2017-09-11T08:31:37Z", "closed_at": "2017-09-11T08:31:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have code like:\r\n\r\n```\r\napi = Blueprint('api', __name__, url_prefix='/api')\r\napi_wrap = Api(api)\r\n\r\n\r\n@api_wrap.resource('/corpus/')\r\nclass CorpusListPage(Resource):\r\n    def get(self):\r\n        page_size = request.args.get('page_size', 10)\r\n        page_num = request.args.get('page_num', 1)\r\n        query = db.session.query(Corpus)\r\n        result = query.paginate(page_num, page_size)\r\n        # total = result.total\r\n        # record_items = result.items\r\n        return result, 200 if result else 404\r\n\r\n```\r\n\r\n\r\nGot error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"app.py\", line 133, in <module>\r\n    app = create_app('debug')\r\n  File \"app.py\", line 32, in create_app\r\n    configure_blueprints(app)\r\n  File \"app.py\", line 88, in configure_blueprints\r\n    from api import api\r\n  File \"E:\\Project\\allproject_git\\annotator-server\\src\\api\\__init__.py\", line 2, in <module>\r\n    from views import api\r\n  File \"E:\\Project\\allproject_git\\annotator-server\\src\\api\\views.py\", line 24, in <module>\r\n    class CorpusListPage(Resource):\r\n  File \"D:\\Python27\\lib\\site-packages\\flask_restful\\__init__.py\", line 416, in decorator\r\n    self.add_resource(cls, *urls, **kwargs)\r\n  File \"D:\\Python27\\lib\\site-packages\\flask_restful\\__init__.py\", line 396, in add_resource\r\n    self._register_view(self.app, resource, *urls, **kwargs)\r\n  File \"D:\\Python27\\lib\\site-packages\\flask_restful\\__init__.py\", line 426, in _register_view\r\n    if endpoint in app.view_functions.keys():\r\nAttributeError: 'Blueprint' object has no attribute 'view_functions'\r\n```\r\n\r\nenv:\r\nflask-0.12.2\r\nFlask-RESTful (0.3.4)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/699", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/699/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/699/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/699", "id": 254079702, "node_id": "MDU6SXNzdWUyNTQwNzk3MDI=", "number": 699, "title": "route response returns null when using marshal_with()", "user": {"login": "mateocam", "id": 8573497, "node_id": "MDQ6VXNlcjg1NzM0OTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8573497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mateocam", "html_url": "https://github.com/mateocam", "followers_url": "https://api.github.com/users/mateocam/followers", "following_url": "https://api.github.com/users/mateocam/following{/other_user}", "gists_url": "https://api.github.com/users/mateocam/gists{/gist_id}", "starred_url": "https://api.github.com/users/mateocam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mateocam/subscriptions", "organizations_url": "https://api.github.com/users/mateocam/orgs", "repos_url": "https://api.github.com/users/mateocam/repos", "events_url": "https://api.github.com/users/mateocam/events{/privacy}", "received_events_url": "https://api.github.com/users/mateocam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-30T17:36:54Z", "updated_at": "2017-08-30T20:23:22Z", "closed_at": "2017-08-30T20:19:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n\r\nkpis_model = api.model('kpis_model', {\r\n    'visitas_actual': fields.Integer(description='visitas del sitioweb del mes actual'),\r\n    'visitas_anterior': fields.Integer(description='visitas del sitioweb del mes anterior'),\r\n    'visitas_diferencia': fields.Integer(description='diferencia de visitas_actual y visitas_anterior')\r\n})\r\n@data.route('/kpis')\r\nclass Kpis(Resource):\r\n\t@data.marshal_with(kpis_model)\r\n\tdef get(self):\r\n\t\tdata = {}\r\n\r\n\t\tdata['visitas_actual'] = 100\r\n\t\tdata['visitas_anterior'] = 50\r\n\t\tdata['visitas_diferencia'] = data['visitas_actual'] - data['visitas_anterior']\r\n\t\treturn jsonify(data)\r\n\r\n```\r\n\r\nand when I call the route I get the response with the model I declared , but all the values are null. who is this? How can I fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/697", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/697/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/697/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/697/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/697", "id": 250846047, "node_id": "MDU6SXNzdWUyNTA4NDYwNDc=", "number": 697, "title": "When location is specified as JSON, all incoming required fails", "user": {"login": "TesterlifeRaymond", "id": 17582201, "node_id": "MDQ6VXNlcjE3NTgyMjAx", "avatar_url": "https://avatars0.githubusercontent.com/u/17582201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TesterlifeRaymond", "html_url": "https://github.com/TesterlifeRaymond", "followers_url": "https://api.github.com/users/TesterlifeRaymond/followers", "following_url": "https://api.github.com/users/TesterlifeRaymond/following{/other_user}", "gists_url": "https://api.github.com/users/TesterlifeRaymond/gists{/gist_id}", "starred_url": "https://api.github.com/users/TesterlifeRaymond/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TesterlifeRaymond/subscriptions", "organizations_url": "https://api.github.com/users/TesterlifeRaymond/orgs", "repos_url": "https://api.github.com/users/TesterlifeRaymond/repos", "events_url": "https://api.github.com/users/TesterlifeRaymond/events{/privacy}", "received_events_url": "https://api.github.com/users/TesterlifeRaymond/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-17T06:53:46Z", "updated_at": "2017-08-18T13:59:35Z", "closed_at": "2017-08-17T19:38:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following snippet They don't have good jobs\r\n\r\n```python\r\nfrom flask import Flask\r\nfrom flask_restful import Api\r\nfrom flask_restful import Resource, reqparse\r\n\r\nAPP = Flask(__name__)\r\nAPI = Api(APP)\r\n\r\n\r\nclass Login(Resource):\r\n    \"\"\" Login apis class model \"\"\"\r\n    def __init__(self):\r\n        \"\"\" pass \"\"\"\r\n        super(Login, self).__init__()\r\n        self.parse = reqparse.RequestParser()\r\n        self.parse.add_argument('username', type=str, required=True, help='please enter your name', location='json')\r\n        self.parse.add_argument('password', type=int, required=True, help='please enter your password')\r\n        self.args = self.parse.parse_args()\r\n\r\n    def post(self):\r\n        \"\"\"\u7528\u6237\u767b\u5f55\"\"\"\r\n        return self.args\r\n\r\nAPI.add_resource(Login, '/')\r\n\r\nif __name__ == '__main__':\r\n    APP.run(debug=True)\r\n\r\n```\r\nif my post json is {'password': '1234561', 'username': 12345116}, Add_argument does not prompt the user for help information\r\n\r\n```python\r\n>>> requests.post('http://127.0.0.1:5000', json=data).json()\r\n{'password': '1234561', 'username': 12345116}\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/696", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/696/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/696/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/696/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/696", "id": 248406654, "node_id": "MDU6SXNzdWUyNDg0MDY2NTQ=", "number": 696, "title": "Argument can not parse empty list", "user": {"login": "xiazhibin", "id": 11945009, "node_id": "MDQ6VXNlcjExOTQ1MDA5", "avatar_url": "https://avatars0.githubusercontent.com/u/11945009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xiazhibin", "html_url": "https://github.com/xiazhibin", "followers_url": "https://api.github.com/users/xiazhibin/followers", "following_url": "https://api.github.com/users/xiazhibin/following{/other_user}", "gists_url": "https://api.github.com/users/xiazhibin/gists{/gist_id}", "starred_url": "https://api.github.com/users/xiazhibin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xiazhibin/subscriptions", "organizations_url": "https://api.github.com/users/xiazhibin/orgs", "repos_url": "https://api.github.com/users/xiazhibin/repos", "events_url": "https://api.github.com/users/xiazhibin/events{/privacy}", "received_events_url": "https://api.github.com/users/xiazhibin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-07T13:11:07Z", "updated_at": "2017-08-07T13:17:56Z", "closed_at": "2017-08-07T13:17:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I post a empty list in json.\r\n`Argument(name='a', action='append', required=True, help='need a', location='json')`\r\n\r\n```\r\nwith app.test_client() as c:\r\n    data = {'a': []}\r\n    data_json = json.dumps(data)\r\n    url = '/index'\r\n    rv = c.post(url, content_type='application/json', data=data_json)\r\n    print(rv.get_data())\r\n```\r\nFinally,I got a error 'need a' but not a empty list", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/694", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/694/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/694/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/694/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/694", "id": 243972000, "node_id": "MDU6SXNzdWUyNDM5NzIwMDA=", "number": 694, "title": "Nested fields : TypeError: unhashable type: 'dict'", "user": {"login": "zmellal", "id": 16143253, "node_id": "MDQ6VXNlcjE2MTQzMjUz", "avatar_url": "https://avatars3.githubusercontent.com/u/16143253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmellal", "html_url": "https://github.com/zmellal", "followers_url": "https://api.github.com/users/zmellal/followers", "following_url": "https://api.github.com/users/zmellal/following{/other_user}", "gists_url": "https://api.github.com/users/zmellal/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmellal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmellal/subscriptions", "organizations_url": "https://api.github.com/users/zmellal/orgs", "repos_url": "https://api.github.com/users/zmellal/repos", "events_url": "https://api.github.com/users/zmellal/events{/privacy}", "received_events_url": "https://api.github.com/users/zmellal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-19T09:07:45Z", "updated_at": "2017-07-19T13:15:10Z", "closed_at": "2017-07-19T13:15:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get  TypeError: unhashable type: 'dict' when trying to use Nested fields in flask-restplus\r\n\r\n```python\r\ncron_fields = ns.model('Cron', {\r\n    'campaign_id': fields.Integer,\r\n    'year': fields.String(),\r\n    'month': fields.String(),\r\n    'day': fields.String(),\r\n    'week': fields.String(),\r\n    'day_of_week': fields.String(),\r\n    'hour': fields.String(),\r\n    'minute': fields.String(),\r\n    'second': fields.String(),\r\n    'start_date': fields.datetime,\r\n    'end_date': fields.datetime,\r\n    'timezone': fields.String(),\r\n})\r\n\r\ncampaign_fields = ns.model('Compaign', {\r\n    'id': fields.Integer,\r\n    'schedule': fields.Boolean,\r\n    'policy': fields.String(required=True),\r\n    'group_id': fields.Integer(required=True),\r\n    'cron': fields.Nested(cron_fields)\r\n})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/692", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/692/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/692/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/692", "id": 243286726, "node_id": "MDU6SXNzdWUyNDMyODY3MjY=", "number": 692, "title": "How to marshal those dicts with dynamic key?", "user": {"login": "quantwizard", "id": 9456493, "node_id": "MDQ6VXNlcjk0NTY0OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/9456493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantwizard", "html_url": "https://github.com/quantwizard", "followers_url": "https://api.github.com/users/quantwizard/followers", "following_url": "https://api.github.com/users/quantwizard/following{/other_user}", "gists_url": "https://api.github.com/users/quantwizard/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantwizard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantwizard/subscriptions", "organizations_url": "https://api.github.com/users/quantwizard/orgs", "repos_url": "https://api.github.com/users/quantwizard/repos", "events_url": "https://api.github.com/users/quantwizard/events{/privacy}", "received_events_url": "https://api.github.com/users/quantwizard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-17T02:49:47Z", "updated_at": "2020-04-13T22:10:27Z", "closed_at": "2017-09-11T09:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "currently, I met a problem with marshal_with decorator. I want to marshal dict data with dynamic key, it looks like below\r\n```\r\n{ \"nickname\": \"Jack\",\r\n\"sex\": \"male\",\r\n\"matched_people\": {\"Eric\": 5, \"John\": 3},\r\n...\r\n}\r\n```\r\nthe value of \"matched_people\" is a dynamic generated dict, how can I marshal_with in this case?\r\nI tried the following:\r\n```\r\nuser_fields = {\r\n    \"nickname\": fields.String,\r\n    \"sex\": fields.String,\r\n    \"matched_people\": fields.Nested({}),  # also tried with fields.Raw\r\n    ....\r\n}\r\n```\r\nIt doesn't work, so how to define the fields?\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/691", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/691/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/691/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/691", "id": 242623491, "node_id": "MDU6SXNzdWUyNDI2MjM0OTE=", "number": 691, "title": "How to marshal nested structure like {k: [{k: v, m: n, o: {p: q}}]} ?", "user": {"login": "tuxknight", "id": 2828183, "node_id": "MDQ6VXNlcjI4MjgxODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2828183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuxknight", "html_url": "https://github.com/tuxknight", "followers_url": "https://api.github.com/users/tuxknight/followers", "following_url": "https://api.github.com/users/tuxknight/following{/other_user}", "gists_url": "https://api.github.com/users/tuxknight/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuxknight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuxknight/subscriptions", "organizations_url": "https://api.github.com/users/tuxknight/orgs", "repos_url": "https://api.github.com/users/tuxknight/repos", "events_url": "https://api.github.com/users/tuxknight/events{/privacy}", "received_events_url": "https://api.github.com/users/tuxknight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-13T08:28:11Z", "updated_at": "2017-07-13T09:33:57Z", "closed_at": "2017-07-13T09:23:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given an nested object like this:\r\n```\r\n{\r\n  \"id\": \"\"\r\n   \"device_extend_attributes\": [\r\n      {\r\n        \"attribute_id\": \"\",\r\n        \"attribute_name\":  {\r\n              \"data_type\": \"device_extend_attributes\",\r\n              \"id\": 9,\r\n              \"item_value\": \"IP \u5730\u5740\"\r\n        }\r\n        \"attribute_value\": \"\",\r\n        \"id\": \"\"\r\n      }\r\n    ]\r\n}\r\n```\r\n\r\nCode like this won't work.\r\n```\r\ndevices_fields = {'id':  fields.String(default='')}\r\ndevice_extend_attributes = {\r\n    'id': fields.String(default='', attribute='device_extend_attributes.id'),\r\n    'attribute_id': fields.String(default='', attribute='device_extend_attributes.attribute_id'),\r\n    'attribute_name': fields.String(default='', attribute='device_extend_attributes.attribute_name.item_value'),\r\n    'attribute_value': fields.String(default='', attribute='device_extend_attributes.attribute_value')\r\n}\r\n\r\ndevices_fields.update({'device_extend_attributes': fields.List(fields.Nested(device_extend_attributes))})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/flask-restful/flask-restful/issues/690", "repository_url": "https://api.github.com/repos/flask-restful/flask-restful", "labels_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/690/labels{/name}", "comments_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/690/comments", "events_url": "https://api.github.com/repos/flask-restful/flask-restful/issues/690/events", "html_url": "https://github.com/flask-restful/flask-restful/issues/690", "id": 242426132, "node_id": "MDU6SXNzdWUyNDI0MjYxMzI=", "number": 690, "title": "how to set cookie and exp in return", "user": {"login": "yangjiaronga", "id": 19570959, "node_id": "MDQ6VXNlcjE5NTcwOTU5", "avatar_url": "https://avatars2.githubusercontent.com/u/19570959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yangjiaronga", "html_url": "https://github.com/yangjiaronga", "followers_url": "https://api.github.com/users/yangjiaronga/followers", "following_url": "https://api.github.com/users/yangjiaronga/following{/other_user}", "gists_url": "https://api.github.com/users/yangjiaronga/gists{/gist_id}", "starred_url": "https://api.github.com/users/yangjiaronga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yangjiaronga/subscriptions", "organizations_url": "https://api.github.com/users/yangjiaronga/orgs", "repos_url": "https://api.github.com/users/yangjiaronga/repos", "events_url": "https://api.github.com/users/yangjiaronga/events{/privacy}", "received_events_url": "https://api.github.com/users/yangjiaronga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-12T15:41:56Z", "updated_at": "2017-07-12T18:04:56Z", "closed_at": "2017-07-12T18:04:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "api = flask_restful.Api(app)\r\n\r\nclass A(Resource):\r\n    def get(self):\r\n        return '', 201, {'set-cookie': 'name=123'}\r\n\r\nhow to set cookie and exp in return", "performed_via_github_app": null, "score": 1.0}]}