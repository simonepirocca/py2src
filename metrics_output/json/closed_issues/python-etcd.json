{"total_count": 103, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jplana/python-etcd/issues/271", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/271/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/271/events", "html_url": "https://github.com/jplana/python-etcd/issues/271", "id": 547053151, "node_id": "MDU6SXNzdWU1NDcwNTMxNTE=", "number": 271, "title": "How to pass private SSL key", "user": {"login": "kit1980", "id": 420184, "node_id": "MDQ6VXNlcjQyMDE4NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/420184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kit1980", "html_url": "https://github.com/kit1980", "followers_url": "https://api.github.com/users/kit1980/followers", "following_url": "https://api.github.com/users/kit1980/following{/other_user}", "gists_url": "https://api.github.com/users/kit1980/gists{/gist_id}", "starred_url": "https://api.github.com/users/kit1980/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kit1980/subscriptions", "organizations_url": "https://api.github.com/users/kit1980/orgs", "repos_url": "https://api.github.com/users/kit1980/repos", "events_url": "https://api.github.com/users/kit1980/events{/privacy}", "received_events_url": "https://api.github.com/users/kit1980/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-08T19:18:40Z", "updated_at": "2020-01-08T19:32:45Z", "closed_at": "2020-01-08T19:32:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "To access etcd in my setup, cert, ca_cert, and private key is needed.\r\nExample curl command:\r\n`curl https://10.255.255.5:2379/v2/keys --cacert /etc/kubernetes/certs/ca.crt --cert /etc/kubernetes/certs/client.crt --key /etc/kubernetes/certs/client.key`\r\n\r\nI see `Client` constructor has parameters for cert and ca_cert, but how to pass the private key?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/260", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/260/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/260/events", "html_url": "https://github.com/jplana/python-etcd/issues/260", "id": 307979345, "node_id": "MDU6SXNzdWUzMDc5NzkzNDU=", "number": 260, "title": "I can not use ca connect my etcd", "user": {"login": "hanhailin", "id": 11881081, "node_id": "MDQ6VXNlcjExODgxMDgx", "avatar_url": "https://avatars0.githubusercontent.com/u/11881081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanhailin", "html_url": "https://github.com/hanhailin", "followers_url": "https://api.github.com/users/hanhailin/followers", "following_url": "https://api.github.com/users/hanhailin/following{/other_user}", "gists_url": "https://api.github.com/users/hanhailin/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanhailin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanhailin/subscriptions", "organizations_url": "https://api.github.com/users/hanhailin/orgs", "repos_url": "https://api.github.com/users/hanhailin/repos", "events_url": "https://api.github.com/users/hanhailin/events{/privacy}", "received_events_url": "https://api.github.com/users/hanhailin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-23T10:40:32Z", "updated_at": "2018-03-28T07:44:31Z", "closed_at": "2018-03-28T07:44:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/259", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/259/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/259/events", "html_url": "https://github.com/jplana/python-etcd/issues/259", "id": 305775534, "node_id": "MDU6SXNzdWUzMDU3NzU1MzQ=", "number": 259, "title": "Unable to write or read", "user": {"login": "manishshambu", "id": 6757670, "node_id": "MDQ6VXNlcjY3NTc2NzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6757670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manishshambu", "html_url": "https://github.com/manishshambu", "followers_url": "https://api.github.com/users/manishshambu/followers", "following_url": "https://api.github.com/users/manishshambu/following{/other_user}", "gists_url": "https://api.github.com/users/manishshambu/gists{/gist_id}", "starred_url": "https://api.github.com/users/manishshambu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manishshambu/subscriptions", "organizations_url": "https://api.github.com/users/manishshambu/orgs", "repos_url": "https://api.github.com/users/manishshambu/repos", "events_url": "https://api.github.com/users/manishshambu/events{/privacy}", "received_events_url": "https://api.github.com/users/manishshambu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-16T01:44:34Z", "updated_at": "2018-03-16T06:47:27Z", "closed_at": "2018-03-16T06:47:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the etcd server up and running. I have etcd client installed. However I'm unable to write or read from the server. I'm not even able to query the machines (client.machines).\r\n\r\nAm I missing something?\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/manishshambu/DistributedSystems/Raft/src/abc.py\", line 6, in <module>\r\n    client.write('/nodes/n2', 2, ttl=4)\r\n  File \"/usr/local/lib/python3.6/site-packages/etcd/client.py\", line 500, in write\r\n    response = self.api_execute(path, method, params=params)\r\n  File \"/usr/local/lib/python3.6/site-packages/etcd/client.py\", line 907, in wrapper\r\n    return self._handle_server_response(response)\r\n  File \"/usr/local/lib/python3.6/site-packages/etcd/client.py\", line 987, in _handle_server_response\r\n    etcd.EtcdError.handle(r)\r\n  File \"/usr/local/lib/python3.6/site-packages/etcd/__init__.py\", line 306, in handle\r\n    raise exc(msg, payload)\r\netcd.EtcdException: Bad response : 404 page not found", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/251", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/251/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/251/events", "html_url": "https://github.com/jplana/python-etcd/issues/251", "id": 269019987, "node_id": "MDU6SXNzdWUyNjkwMTk5ODc=", "number": 251, "title": "auth tests are failed", "user": {"login": "stanislavlevin", "id": 31205609, "node_id": "MDQ6VXNlcjMxMjA1NjA5", "avatar_url": "https://avatars2.githubusercontent.com/u/31205609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanislavlevin", "html_url": "https://github.com/stanislavlevin", "followers_url": "https://api.github.com/users/stanislavlevin/followers", "following_url": "https://api.github.com/users/stanislavlevin/following{/other_user}", "gists_url": "https://api.github.com/users/stanislavlevin/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanislavlevin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanislavlevin/subscriptions", "organizations_url": "https://api.github.com/users/stanislavlevin/orgs", "repos_url": "https://api.github.com/users/stanislavlevin/repos", "events_url": "https://api.github.com/users/stanislavlevin/events{/privacy}", "received_events_url": "https://api.github.com/users/stanislavlevin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-27T08:02:26Z", "updated_at": "2017-11-16T05:56:01Z", "closed_at": "2017-11-16T05:56:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using command:\r\n`python -m pytest --verbose --pdb`\r\n\r\nThere are several auth test fails:\r\n1) **EtcdUserTest::test_names FAILED**\r\n\r\n```\r\nrunning pytest\r\nrunning egg_info\r\nwriting requirements to src/python_etcd.egg-info/requires.txt\r\nwriting src/python_etcd.egg-info/PKG-INFO\r\nwriting top-level names to src/python_etcd.egg-info/top_level.txt\r\nwriting dependency_links to src/python_etcd.egg-info/dependency_links.txt\r\nreading manifest file 'src/python_etcd.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwriting manifest file 'src/python_etcd.egg-info/SOURCES.txt'\r\nrunning build_ext\r\n========================================== test session starts ==========================================\r\nplatform linux2 -- Python 2.7.11, pytest-3.2.1, py-1.4.34, pluggy-0.4.0 -- /usr/bin/python\r\ncachedir: .cache\r\nrootdir: /usr/src/RPM/BUILD/python-module-etcd-0.4.5, inifile:\r\ncollected 149 items                                                                                      \r\n\r\nsrc/etcd/tests/test_auth.py::EtcdUserTest::test_names FAILED\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> traceback >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\nself = <etcd.tests.test_auth.EtcdUserTest testMethod=test_names>\r\n\r\n    def test_names(self):\r\n        u = auth.EtcdUser(self.client, 'test_user')\r\n>       self.assertEquals(u.names, ['root'])\r\nE       AssertionError: Lists differ: [{u'user': u'root', u'roles': ... != ['root']\r\nE       \r\nE       First differing element 0:\r\nE       {u'user': u'root', u'roles': [{u'role': u'root', u'permissions': {u'kv': {u'read': [u'/*'], u'write': [u'/*']}}}]}\r\nE       root\r\nE       \r\nE       + ['root']\r\nE       - [{u'roles': [{u'permissions': {u'kv': {u'read': [u'/*'],\r\nE       -                                        u'write': [u'/*']}},\r\nE       -               u'role': u'root'}],\r\nE       -   u'user': u'root'}]\r\n\r\nsrc/etcd/tests/test_auth.py:38: AssertionError\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> entering PDB >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n> /usr/lib64/python2.7/unittest/case.py(410)fail()\r\n-> raise self.failureException(msg)\r\n\r\n```\r\n\r\n2) **EtcdUserTest::test_read FAILED**\r\n\r\n```\r\nsrc/etcd/tests/test_auth.py::EtcdUserTest::test_read FAILED\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> traceback >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\nself = <etcd.tests.test_auth.EtcdUserTest testMethod=test_read>\r\n\r\n    def setUp(self):\r\n        # Sets up the root user, toggles auth\r\n        u = auth.EtcdUser(self.client, 'root')\r\n        u.password = 'testpass'\r\n>       u.write()\r\n\r\nsrc/etcd/tests/test_auth.py:13: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nsrc/etcd/auth.py:46: in write\r\n    r.read()\r\nsrc/etcd/auth.py:27: in read\r\n    response = self.client.api_execute(self.uri, self.client._MGET)\r\nsrc/etcd/client.py:907: in wrapper\r\n    return self._handle_server_response(response)\r\nsrc/etcd/client.py:987: in _handle_server_response\r\n    etcd.EtcdError.handle(r)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ncls = <class 'etcd.EtcdError'>, payload = {'message': 'Insufficient credentials', 'status': 401}\r\n\r\n    @classmethod\r\n    def handle(cls, payload):\r\n        \"\"\"\r\n            Decodes the error and throws the appropriate error message\r\n    \r\n            :param payload: The decoded JSON error payload as a dict.\r\n            \"\"\"\r\n        error_code = payload.get(\"errorCode\")\r\n        message = payload.get(\"message\")\r\n        cause = payload.get(\"cause\")\r\n        msg = '{} : {}'.format(message, cause)\r\n        status = payload.get(\"status\")\r\n        # Some general status handling, as\r\n        # not all endpoints return coherent error messages\r\n        if status == 404:\r\n            error_code = 100\r\n        elif status == 401:\r\n            error_code = 110\r\n        exc = cls.error_exceptions.get(error_code, EtcdException)\r\n        if issubclass(exc, EtcdException):\r\n>           raise exc(msg, payload)\r\nE           EtcdInsufficientPermissions: Insufficient credentials : None\r\n\r\nsrc/etcd/__init__.py:306: EtcdInsufficientPermissions\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> entering PDB >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n> /usr/src/RPM/BUILD/python-module-etcd-0.4.5/src/etcd/__init__.py(306)handle()\r\n-> raise exc(msg, payload)\r\n\r\n```\r\n\r\n3) **EtcdUserTest::test_write_and_delete FAILED**\r\n\r\n```\r\nsrc/etcd/tests/test_auth.py::EtcdUserTest::test_write_and_delete FAILED\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> traceback >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\nself = <etcd.tests.test_auth.EtcdUserTest testMethod=test_write_and_delete>\r\n\r\n    def setUp(self):\r\n        # Sets up the root user, toggles auth\r\n        u = auth.EtcdUser(self.client, 'root')\r\n        u.password = 'testpass'\r\n>       u.write()\r\n\r\nsrc/etcd/tests/test_auth.py:13: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nsrc/etcd/auth.py:46: in write\r\n    r.read()\r\nsrc/etcd/auth.py:27: in read\r\n    response = self.client.api_execute(self.uri, self.client._MGET)\r\nsrc/etcd/client.py:907: in wrapper\r\n    return self._handle_server_response(response)\r\nsrc/etcd/client.py:987: in _handle_server_response\r\n    etcd.EtcdError.handle(r)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ncls = <class 'etcd.EtcdError'>, payload = {'message': 'Insufficient credentials', 'status': 401}\r\n\r\n    @classmethod\r\n    def handle(cls, payload):\r\n        \"\"\"\r\n            Decodes the error and throws the appropriate error message\r\n    \r\n            :param payload: The decoded JSON error payload as a dict.\r\n            \"\"\"\r\n        error_code = payload.get(\"errorCode\")\r\n        message = payload.get(\"message\")\r\n        cause = payload.get(\"cause\")\r\n        msg = '{} : {}'.format(message, cause)\r\n        status = payload.get(\"status\")\r\n        # Some general status handling, as\r\n        # not all endpoints return coherent error messages\r\n        if status == 404:\r\n            error_code = 100\r\n        elif status == 401:\r\n            error_code = 110\r\n        exc = cls.error_exceptions.get(error_code, EtcdException)\r\n        if issubclass(exc, EtcdException):\r\n>           raise exc(msg, payload)\r\nE           EtcdInsufficientPermissions: Insufficient credentials : None\r\n\r\nsrc/etcd/__init__.py:306: EtcdInsufficientPermissions\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> entering PDB >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n> /usr/src/RPM/BUILD/python-module-etcd-0.4.5/src/etcd/__init__.py(306)handle()\r\n-> raise exc(msg, payload)\r\n\r\n```\r\n\r\n4) **EtcdRoleTest::test_names FAILED**\r\n\r\n```\r\nsrc/etcd/tests/test_auth.py::EtcdRoleTest::test_names FAILED\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> traceback >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\nself = <etcd.tests.test_auth.EtcdRoleTest testMethod=test_names>\r\n\r\n    def test_names(self):\r\n        r = auth.EtcdRole(self.client, 'guest')\r\n>       self.assertListEqual(r.names, [u'guest', u'root'])\r\nE       AssertionError: Lists differ: [{u'role': u'guest', u'permiss... != [u'guest', u'root']\r\nE       \r\nE       First differing element 0:\r\nE       {u'role': u'guest', u'permissions': {u'kv': {u'read': [u'/*'], u'write': [u'/*']}}}\r\nE       guest\r\nE       \r\nE       + [u'guest', u'root']\r\nE       - [{u'permissions': {u'kv': {u'read': [u'/*'], u'write': [u'/*']}},\r\nE       -   u'role': u'guest'},\r\nE       -  {u'permissions': {u'kv': {u'read': [u'/*'], u'write': [u'/*']}},\r\nE       -   u'role': u'root'}]\r\n\r\nsrc/etcd/tests/test_auth.py:121: AssertionError\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> entering PDB >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n> /usr/lib64/python2.7/unittest/case.py(410)fail()\r\n-> raise self.failureException(msg)\r\n```\r\n\r\n5) **EtcdRoleTest::test_read FAILED**\r\n\r\n```\r\nsrc/etcd/tests/test_auth.py::EtcdRoleTest::test_read FAILED\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> traceback >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\nself = <etcd.tests.test_auth.EtcdRoleTest testMethod=test_read>\r\n\r\n    def setUp(self):\r\n        # Sets up the root user, toggles auth\r\n        u = auth.EtcdUser(self.client, 'root')\r\n        u.password = 'testpass'\r\n>       u.write()\r\n\r\nsrc/etcd/tests/test_auth.py:13: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nsrc/etcd/auth.py:46: in write\r\n    r.read()\r\nsrc/etcd/auth.py:27: in read\r\n    response = self.client.api_execute(self.uri, self.client._MGET)\r\nsrc/etcd/client.py:907: in wrapper\r\n    return self._handle_server_response(response)\r\nsrc/etcd/client.py:987: in _handle_server_response\r\n    etcd.EtcdError.handle(r)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ncls = <class 'etcd.EtcdError'>, payload = {'message': 'Insufficient credentials', 'status': 401}\r\n\r\n    @classmethod\r\n    def handle(cls, payload):\r\n        \"\"\"\r\n            Decodes the error and throws the appropriate error message\r\n    \r\n            :param payload: The decoded JSON error payload as a dict.\r\n            \"\"\"\r\n        error_code = payload.get(\"errorCode\")\r\n        message = payload.get(\"message\")\r\n        cause = payload.get(\"cause\")\r\n        msg = '{} : {}'.format(message, cause)\r\n        status = payload.get(\"status\")\r\n        # Some general status handling, as\r\n        # not all endpoints return coherent error messages\r\n        if status == 404:\r\n            error_code = 100\r\n        elif status == 401:\r\n            error_code = 110\r\n        exc = cls.error_exceptions.get(error_code, EtcdException)\r\n        if issubclass(exc, EtcdException):\r\n>           raise exc(msg, payload)\r\nE           EtcdInsufficientPermissions: Insufficient credentials : None\r\n\r\nsrc/etcd/__init__.py:306: EtcdInsufficientPermissions\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> entering PDB >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n> /usr/src/RPM/BUILD/python-module-etcd-0.4.5/src/etcd/__init__.py(306)handle()\r\n-> raise exc(msg, payload)\r\n```\r\n\r\n6) **EtcdRoleTest::test_write_and_delete FAILED**\r\n\r\n```\r\nsrc/etcd/tests/test_auth.py::EtcdRoleTest::test_write_and_delete FAILED\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> traceback >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\nself = <etcd.tests.test_auth.EtcdRoleTest testMethod=test_write_and_delete>\r\n\r\n    def setUp(self):\r\n        # Sets up the root user, toggles auth\r\n        u = auth.EtcdUser(self.client, 'root')\r\n        u.password = 'testpass'\r\n>       u.write()\r\n\r\nsrc/etcd/tests/test_auth.py:13: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nsrc/etcd/auth.py:46: in write\r\n    r.read()\r\nsrc/etcd/auth.py:27: in read\r\n    response = self.client.api_execute(self.uri, self.client._MGET)\r\nsrc/etcd/client.py:907: in wrapper\r\n    return self._handle_server_response(response)\r\nsrc/etcd/client.py:987: in _handle_server_response\r\n    etcd.EtcdError.handle(r)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\ncls = <class 'etcd.EtcdError'>, payload = {'message': 'Insufficient credentials', 'status': 401}\r\n\r\n    @classmethod\r\n    def handle(cls, payload):\r\n        \"\"\"\r\n            Decodes the error and throws the appropriate error message\r\n    \r\n            :param payload: The decoded JSON error payload as a dict.\r\n            \"\"\"\r\n        error_code = payload.get(\"errorCode\")\r\n        message = payload.get(\"message\")\r\n        cause = payload.get(\"cause\")\r\n        msg = '{} : {}'.format(message, cause)\r\n        status = payload.get(\"status\")\r\n        # Some general status handling, as\r\n        # not all endpoints return coherent error messages\r\n        if status == 404:\r\n            error_code = 100\r\n        elif status == 401:\r\n            error_code = 110\r\n        exc = cls.error_exceptions.get(error_code, EtcdException)\r\n        if issubclass(exc, EtcdException):\r\n>           raise exc(msg, payload)\r\nE           EtcdInsufficientPermissions: Insufficient credentials : None\r\n\r\nsrc/etcd/__init__.py:306: EtcdInsufficientPermissions\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> entering PDB >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n> /usr/src/RPM/BUILD/python-module-etcd-0.4.5/src/etcd/__init__.py(306)handle()\r\n-> raise exc(msg, payload)\r\n\r\n```\r\n\r\nAll the others have been PASSED.\r\n\r\n`6 failed, 143 passed, 1 warnings`\r\n\r\netcd version is 3.2.5.\r\npython-etcd version is 0.4.5.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/244", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/244/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/244/events", "html_url": "https://github.com/jplana/python-etcd/issues/244", "id": 234524176, "node_id": "MDU6SXNzdWUyMzQ1MjQxNzY=", "number": 244, "title": "Will break with etcd 3.2", "user": {"login": "maikzumstrull", "id": 8179560, "node_id": "MDQ6VXNlcjgxNzk1NjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8179560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maikzumstrull", "html_url": "https://github.com/maikzumstrull", "followers_url": "https://api.github.com/users/maikzumstrull/followers", "following_url": "https://api.github.com/users/maikzumstrull/following{/other_user}", "gists_url": "https://api.github.com/users/maikzumstrull/gists{/gist_id}", "starred_url": "https://api.github.com/users/maikzumstrull/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maikzumstrull/subscriptions", "organizations_url": "https://api.github.com/users/maikzumstrull/orgs", "repos_url": "https://api.github.com/users/maikzumstrull/repos", "events_url": "https://api.github.com/users/maikzumstrull/events{/privacy}", "received_events_url": "https://api.github.com/users/maikzumstrull/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-08T13:17:38Z", "updated_at": "2017-06-17T10:30:52Z", "closed_at": "2017-06-17T10:30:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just tried etcd 3.2rc1, and while it still has the v2 API as a fallback, the /v2/machines call [has been removed](https://github.com/coreos/etcd/commit/2bb33181b6c8fbe8109fc668a19ce4ab46c605ec). It's used in this library if reconnects are enabled.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/240", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/240/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/240/events", "html_url": "https://github.com/jplana/python-etcd/issues/240", "id": 224006976, "node_id": "MDU6SXNzdWUyMjQwMDY5NzY=", "number": 240, "title": "Use SSL without verifying certificates", "user": {"login": "cizixs", "id": 2771750, "node_id": "MDQ6VXNlcjI3NzE3NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2771750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cizixs", "html_url": "https://github.com/cizixs", "followers_url": "https://api.github.com/users/cizixs/followers", "following_url": "https://api.github.com/users/cizixs/following{/other_user}", "gists_url": "https://api.github.com/users/cizixs/gists{/gist_id}", "starred_url": "https://api.github.com/users/cizixs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cizixs/subscriptions", "organizations_url": "https://api.github.com/users/cizixs/orgs", "repos_url": "https://api.github.com/users/cizixs/repos", "events_url": "https://api.github.com/users/cizixs/events{/privacy}", "received_events_url": "https://api.github.com/users/cizixs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-25T03:02:42Z", "updated_at": "2017-04-26T06:48:51Z", "closed_at": "2017-04-26T06:48:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a self-signed SSL etcd cluster running, and passing around `ca.crt` file is tiresome and prune to errors. \r\n\r\nI trust my own etcd server, so I wonder is there a way to skip SSL verification which using `python-etcd`? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/235", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/235/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/235/events", "html_url": "https://github.com/jplana/python-etcd/issues/235", "id": 215331880, "node_id": "MDU6SXNzdWUyMTUzMzE4ODA=", "number": 235, "title": "Do we have any plans to add members APIs?", "user": {"login": "pankit", "id": 2696531, "node_id": "MDQ6VXNlcjI2OTY1MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2696531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pankit", "html_url": "https://github.com/pankit", "followers_url": "https://api.github.com/users/pankit/followers", "following_url": "https://api.github.com/users/pankit/following{/other_user}", "gists_url": "https://api.github.com/users/pankit/gists{/gist_id}", "starred_url": "https://api.github.com/users/pankit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pankit/subscriptions", "organizations_url": "https://api.github.com/users/pankit/orgs", "repos_url": "https://api.github.com/users/pankit/repos", "events_url": "https://api.github.com/users/pankit/events{/privacy}", "received_events_url": "https://api.github.com/users/pankit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870690, "node_id": "MDU6TGFiZWw1Njg3MDY5MA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 56870693, "node_id": "MDU6TGFiZWw1Njg3MDY5Mw==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-20T05:15:31Z", "updated_at": "2017-06-17T10:31:34Z", "closed_at": "2017-06-17T10:31:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was interested in adding the members to a running cluster using using the library. Do, we have any plans to do so? https://coreos.com/etcd/docs/latest/v2/members_api.html#add-a-member", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/234", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/234/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/234/events", "html_url": "https://github.com/jplana/python-etcd/issues/234", "id": 213265974, "node_id": "MDU6SXNzdWUyMTMyNjU5NzQ=", "number": 234, "title": "Can't reslove https certification", "user": {"login": "hifour", "id": 16273674, "node_id": "MDQ6VXNlcjE2MjczNjc0", "avatar_url": "https://avatars1.githubusercontent.com/u/16273674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hifour", "html_url": "https://github.com/hifour", "followers_url": "https://api.github.com/users/hifour/followers", "following_url": "https://api.github.com/users/hifour/following{/other_user}", "gists_url": "https://api.github.com/users/hifour/gists{/gist_id}", "starred_url": "https://api.github.com/users/hifour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hifour/subscriptions", "organizations_url": "https://api.github.com/users/hifour/orgs", "repos_url": "https://api.github.com/users/hifour/repos", "events_url": "https://api.github.com/users/hifour/events{/privacy}", "received_events_url": "https://api.github.com/users/hifour/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-10T07:32:52Z", "updated_at": "2017-03-20T06:03:51Z", "closed_at": "2017-03-20T06:03:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to take a demo file to get an API use the python-etcd lib. The details below:\r\nimport etcd\r\ncat test.py\r\nclient = etcd.Client(\r\n       host='10.110.0.46',\r\n       port=2379,\r\n       protocol='https',\r\n       cert=('etcd-client.pem','etcd-client-key.pem'),\r\n       ca_cert='ca.pem',\r\n       username='root',\r\n       password='next@2015',\r\n)\r\n\r\nprint client.get('/test/testmessage').value\r\n\r\nbut I running the demo.py, it show me \r\n\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 14, in <module>\r\n    print client.get('/test/testmessage').value\r\n  File \"/usr/lib/python2.7/site-packages/etcd/client.py\", line 740, in get\r\n    return self.read(key)\r\n  File \"/usr/lib/python2.7/site-packages/etcd/client.py\", line 597, in read\r\n    timeout=timeout)\r\n  File \"/usr/lib/python2.7/site-packages/etcd/client.py\", line 893, in wrapper\r\n    cause=e\r\netcd.EtcdConnectionFailed: Connection to etcd failed due to SSLError(CertificateError(\"hostname '10.110.0.46' doesn't match u'etcd'\",),)\r\nthe hostname should be fine.\r\n\r\nPlease give me some suggestion if someone care it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/233", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/233/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/233/events", "html_url": "https://github.com/jplana/python-etcd/issues/233", "id": 212685181, "node_id": "MDU6SXNzdWUyMTI2ODUxODE=", "number": 233, "title": "watch a dir failed", "user": {"login": "DjangoPeng", "id": 16943353, "node_id": "MDQ6VXNlcjE2OTQzMzUz", "avatar_url": "https://avatars3.githubusercontent.com/u/16943353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DjangoPeng", "html_url": "https://github.com/DjangoPeng", "followers_url": "https://api.github.com/users/DjangoPeng/followers", "following_url": "https://api.github.com/users/DjangoPeng/following{/other_user}", "gists_url": "https://api.github.com/users/DjangoPeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/DjangoPeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DjangoPeng/subscriptions", "organizations_url": "https://api.github.com/users/DjangoPeng/orgs", "repos_url": "https://api.github.com/users/DjangoPeng/repos", "events_url": "https://api.github.com/users/DjangoPeng/events{/privacy}", "received_events_url": "https://api.github.com/users/DjangoPeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-08T09:44:39Z", "updated_at": "2017-03-09T01:39:07Z", "closed_at": "2017-03-09T01:39:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying the `watch` method, but I found it can't watch the changes of a directory. \r\n### Environment\r\netcd server: \r\n```\r\nlocalhost:2379\r\n```\r\netcd directory tree:\r\n```\r\n/test/name \r\n/test/label\r\n```\r\nI created a python-etcd client and watched the `/test/` directory.\r\n```\r\nimport etcd\r\nclient = etcd.Client(host=\"localhost\", port=2379)\r\nclient.watch(\"/test/\")\r\n# client.watch(\"/test/*\")  # failed either in this way\r\n```\r\nThen I use the `etcdctl` to set a new key-value in `/test/`:\r\n```\r\n$ etcdctl set /test/watchme \"hello watch\"\r\n$ etcdctl get /test/watchme\r\nhello watch\r\n```\r\nIt's obvious that I set a new key successfully, but the python-etcd client is still blocked util `EtcdWatchTimeOut`.\r\n\r\nWhat's wrong with my test, buddy?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/228", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/228/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/228/events", "html_url": "https://github.com/jplana/python-etcd/issues/228", "id": 206838889, "node_id": "MDU6SXNzdWUyMDY4Mzg4ODk=", "number": 228, "title": "Failure to acquire lock still refreshes ttl", "user": {"login": "gabeochoa", "id": 1314383, "node_id": "MDQ6VXNlcjEzMTQzODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1314383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabeochoa", "html_url": "https://github.com/gabeochoa", "followers_url": "https://api.github.com/users/gabeochoa/followers", "following_url": "https://api.github.com/users/gabeochoa/following{/other_user}", "gists_url": "https://api.github.com/users/gabeochoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabeochoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabeochoa/subscriptions", "organizations_url": "https://api.github.com/users/gabeochoa/orgs", "repos_url": "https://api.github.com/users/gabeochoa/repos", "events_url": "https://api.github.com/users/gabeochoa/events{/privacy}", "received_events_url": "https://api.github.com/users/gabeochoa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-10T16:19:52Z", "updated_at": "2017-02-12T23:31:51Z", "closed_at": "2017-02-12T23:31:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python \r\nlock = etcd.Lock(client, 'my_lock')\r\nlock.acquire(blocking=False, lock_ttl=10)\r\nif not lock.is_acquired:\r\n    print \"we dont have lock\"\r\nelse:\r\n    print \"we got lock\"\r\n```\r\nThis will create a lock and exit before releasing\r\nIf we run it again before the original ttl expires, the check for acquire will fail, but will create a second lock but will not be released. \r\n\r\nFrom here on any acquire will fail as long as the ttls haven't expired, but will create another lock so another run of the program will see that lock and fail to acquire, ad infinitum. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/227", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/227/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/227/events", "html_url": "https://github.com/jplana/python-etcd/issues/227", "id": 206076968, "node_id": "MDU6SXNzdWUyMDYwNzY5Njg=", "number": 227, "title": "Watch timed out when setting timeout as None ", "user": {"login": "tobegit3hub", "id": 2715000, "node_id": "MDQ6VXNlcjI3MTUwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobegit3hub", "html_url": "https://github.com/tobegit3hub", "followers_url": "https://api.github.com/users/tobegit3hub/followers", "following_url": "https://api.github.com/users/tobegit3hub/following{/other_user}", "gists_url": "https://api.github.com/users/tobegit3hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobegit3hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobegit3hub/subscriptions", "organizations_url": "https://api.github.com/users/tobegit3hub/orgs", "repos_url": "https://api.github.com/users/tobegit3hub/repos", "events_url": "https://api.github.com/users/tobegit3hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tobegit3hub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-08T02:23:02Z", "updated_at": "2017-02-13T08:13:34Z", "closed_at": "2017-02-13T07:16:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We have use `python-etcd` for leader election. All the workers will watch the same key in `etcd` and try to elect the leader after the key dismissed.\r\n\r\nNow we try to watch the key and set the timeout as `None`.\r\n\r\n```\r\nself.client.watch(self.master_key, timeout=None)\r\n```\r\n\r\nBut after almost one minute, the salve worker throws timeout exception and exit.\r\n\r\n```\r\nDEBUG:etcd.client:Watch timed out.\r\nTraceback (most recent call last):\r\n  File \"./manage.py\", line 21, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/lib64/python2.7/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/lib64/python2.7/site-packages/django/core/management/__init__.py\", line 359, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/usr/lib64/python2.7/site-packages/django/core/management/base.py\", line 294, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/usr/lib64/python2.7/site-packages/django/core/management/base.py\", line 345, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/home/work/cloud-ml/restful_server/cloud_ml/management/commands/run_queue_consumer.py\", line 743, in handle\r\n    etcdLeaderElection.wait_to_become_master()\r\n  File \"/home/work/cloud-ml/restful_server/utils/leader_election.py\", line 26, in wait_to_become_master\r\n    self.client.watch(self.master_key, timeout=None)\r\n  File \"/usr/lib/python2.7/site-packages/etcd/client.py\", line 736, in watch\r\n    recursive=recursive)\r\n  File \"/usr/lib/python2.7/site-packages/etcd/client.py\", line 562, in read\r\n    timeout=timeout)\r\n  File \"/usr/lib/python2.7/site-packages/etcd/client.py\", line 840, in wrapper\r\n    cause=e\r\netcd.EtcdWatchTimedOut: Watch timed out: ReadTimeoutError(\"HTTPConnectionPool(host='10.105.17.85', port=2379): Read timed out.\",)\r\n```\r\n\r\nIf we set the timeout as `3600`, it will be much better and will not exit soon. But that's not what we want. Not sure if it's the bug of `python-etcd` to watch the key forever.\r\n\r\n```\r\nself.client.watch(self.master_key, timeout=3600)\r\n```\r\n\r\nMay be similar to https://github.com/jplana/python-etcd/issues/202", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/224", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/224/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/224/events", "html_url": "https://github.com/jplana/python-etcd/issues/224", "id": 200566425, "node_id": "MDU6SXNzdWUyMDA1NjY0MjU=", "number": 224, "title": "Refresh TTL will flush the value of the key", "user": {"login": "tobegit3hub", "id": 2715000, "node_id": "MDQ6VXNlcjI3MTUwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobegit3hub", "html_url": "https://github.com/tobegit3hub", "followers_url": "https://api.github.com/users/tobegit3hub/followers", "following_url": "https://api.github.com/users/tobegit3hub/following{/other_user}", "gists_url": "https://api.github.com/users/tobegit3hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobegit3hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobegit3hub/subscriptions", "organizations_url": "https://api.github.com/users/tobegit3hub/orgs", "repos_url": "https://api.github.com/users/tobegit3hub/repos", "events_url": "https://api.github.com/users/tobegit3hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tobegit3hub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-13T07:41:48Z", "updated_at": "2017-01-13T07:54:17Z", "closed_at": "2017-01-13T07:54:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Now we use `etcd` and `python-etcd` for leader election.\r\n\r\nWe want to write the ip or hostname into master key to become the master. Once it's successfully, it will refresh the key periodically. But if I call `refresh` with TTL, it flushes the value of the master key and I don't know who's the master now.\r\n\r\nThe way to re-produce the result. We can get the value after step 4 but no value after step 5.\r\n \r\n```\r\nIn [1]: import etcd\r\n\r\nIn [2]: etcd_client = etcd.Client(host=\"127.0.0.1\", port=2379)\r\n\r\nIn [3]: etcd_master_key = \"/foo/master\"\r\n\r\nIn [4]: result = etcd_client.write(etcd_master_key, \"bar\", ttl=10, prevExist=False)\r\n\r\nIn [5]: etcd_client.refresh(etcd_master_key, ttl=10)\r\n\r\nOut[5]: <class 'etcd.EtcdResult'>({'newKey': False, '_prev_node': <class 'etcd.EtcdResult'>({'newKey': False, '_children': [], 'createdIndex': 186, 'modifiedIndex': 186, 'value': u'tomi', 'expiration': u'2017-01-13T07:35:38.746033249Z', 'key': u'/cloud-ml/run_queue_consumer/master', 'ttl': 1, 'action': None, 'dir': False}), 'raft_index': 33521683, '_children': [], 'createdIndex': 186, 'modifiedIndex': 187, 'value': u'', 'etcd_index': 187, 'expiration': u'2017-01-13T07:35:48.470047006Z', 'key': u'/cloud-ml/run_queue_consumer/master', 'ttl': 10, 'action': u'update', 'dir': False})\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/223", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/223/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/223/events", "html_url": "https://github.com/jplana/python-etcd/issues/223", "id": 200533216, "node_id": "MDU6SXNzdWUyMDA1MzMyMTY=", "number": 223, "title": "How to connect with the etcd cluster with multiple ports", "user": {"login": "tobegit3hub", "id": 2715000, "node_id": "MDQ6VXNlcjI3MTUwMDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2715000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobegit3hub", "html_url": "https://github.com/tobegit3hub", "followers_url": "https://api.github.com/users/tobegit3hub/followers", "following_url": "https://api.github.com/users/tobegit3hub/following{/other_user}", "gists_url": "https://api.github.com/users/tobegit3hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobegit3hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobegit3hub/subscriptions", "organizations_url": "https://api.github.com/users/tobegit3hub/orgs", "repos_url": "https://api.github.com/users/tobegit3hub/repos", "events_url": "https://api.github.com/users/tobegit3hub/events{/privacy}", "received_events_url": "https://api.github.com/users/tobegit3hub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-13T02:29:55Z", "updated_at": "2017-02-08T01:47:25Z", "closed_at": "2017-02-07T18:36:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Now we can connect with etcd with single ip and port. \r\n\r\nIs it possible to connect with etcd cluster with multiple IPs and ports? It's really reasonable because we may reconnect with another etcd instance even when one instance is down.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/215", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/215/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/215/events", "html_url": "https://github.com/jplana/python-etcd/issues/215", "id": 194265992, "node_id": "MDU6SXNzdWUxOTQyNjU5OTI=", "number": 215, "title": "'module' object has no attribute 'Client'", "user": {"login": "louisyw", "id": 7359234, "node_id": "MDQ6VXNlcjczNTkyMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7359234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/louisyw", "html_url": "https://github.com/louisyw", "followers_url": "https://api.github.com/users/louisyw/followers", "following_url": "https://api.github.com/users/louisyw/following{/other_user}", "gists_url": "https://api.github.com/users/louisyw/gists{/gist_id}", "starred_url": "https://api.github.com/users/louisyw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/louisyw/subscriptions", "organizations_url": "https://api.github.com/users/louisyw/orgs", "repos_url": "https://api.github.com/users/louisyw/repos", "events_url": "https://api.github.com/users/louisyw/events{/privacy}", "received_events_url": "https://api.github.com/users/louisyw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-08T07:30:49Z", "updated_at": "2018-06-25T16:05:11Z", "closed_at": "2016-12-08T07:39:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "import etcd\r\nclient=etcd.Client(host='w,x,y,z', port=4001)\r\n\r\nAttributeError: 'module' object has no attribute 'Client'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/210", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/210/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/210/events", "html_url": "https://github.com/jplana/python-etcd/issues/210", "id": 190162334, "node_id": "MDU6SXNzdWUxOTAxNjIzMzQ=", "number": 210, "title": "Auth is \"broken\" when using etcd 2.3.x+", "user": {"login": "ashcrow", "id": 22706, "node_id": "MDQ6VXNlcjIyNzA2", "avatar_url": "https://avatars3.githubusercontent.com/u/22706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashcrow", "html_url": "https://github.com/ashcrow", "followers_url": "https://api.github.com/users/ashcrow/followers", "following_url": "https://api.github.com/users/ashcrow/following{/other_user}", "gists_url": "https://api.github.com/users/ashcrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashcrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashcrow/subscriptions", "organizations_url": "https://api.github.com/users/ashcrow/orgs", "repos_url": "https://api.github.com/users/ashcrow/repos", "events_url": "https://api.github.com/users/ashcrow/events{/privacy}", "received_events_url": "https://api.github.com/users/ashcrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-17T20:58:48Z", "updated_at": "2017-02-14T08:54:09Z", "closed_at": "2017-02-14T08:54:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The authentication data that is returned from the server changed somewhere between ``etcd`` 2.1.3 and 2.3.7. This is causing the auth code and unittests to fail for folks using newer versions of ``etcd``.\r\n\r\nThis is an issue as of 0d0145f5e835aa032c97a0a5e09c4c68b7a03f66 (not the cause, just a reference)\r\n\r\nReferences:\r\n- https://coreos.com/etcd/docs/2.1.3/auth_api.html#users-1\r\n- https://coreos.com/etcd/docs/2.3.7/auth_api.html#users-1\r\n\r\n```python\r\nc = Client(port=2379, username='root', password='test')\r\nfrom etcd import auth\r\nroot = auth.EtcdUser(c, 'root')\r\nroot.read()\r\n....\r\nTypeError: unhashable type: 'dict'\r\n```\r\n\r\n## Possible Solutions\r\n\r\n### Remove Auth\r\n\r\nThis is the easiest solution, but not the most attractive.\r\n\r\n### Upgrade Structure To Latest etcd Version\r\n\r\nUpdating the ``auth`` code to understand the latest etcd auth structure (IE: 2.3.x+) would be the next easiest way to handle this. The downside being that anyone running with older version of the 2 series will have a broken authentication module. However, the code could do a version check and provide the auth module only if the server was within the proper version range.\r\n\r\n### Support Old and New Structure\r\n\r\nThe hardest, but most user friendly. Updating the ``auth`` module to understand both the 2.1.x and 2.3.x structures. More abstractions would need to be made to ensure that if a user upgraded their server from 2.1.x to 2.3.x they wouldn't need to change their code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/208", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/208/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/208/events", "html_url": "https://github.com/jplana/python-etcd/issues/208", "id": 190115041, "node_id": "MDU6SXNzdWUxOTAxMTUwNDE=", "number": 208, "title": "New release?", "user": {"login": "Oloremo", "id": 4280480, "node_id": "MDQ6VXNlcjQyODA0ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/4280480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Oloremo", "html_url": "https://github.com/Oloremo", "followers_url": "https://api.github.com/users/Oloremo/followers", "following_url": "https://api.github.com/users/Oloremo/following{/other_user}", "gists_url": "https://api.github.com/users/Oloremo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Oloremo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Oloremo/subscriptions", "organizations_url": "https://api.github.com/users/Oloremo/orgs", "repos_url": "https://api.github.com/users/Oloremo/repos", "events_url": "https://api.github.com/users/Oloremo/events{/privacy}", "received_events_url": "https://api.github.com/users/Oloremo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-11-17T17:42:04Z", "updated_at": "2017-03-02T23:11:01Z", "closed_at": "2017-03-02T23:11:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some features from the master, like lock_prefix customisation is really nice to have.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/207", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/207/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/207/events", "html_url": "https://github.com/jplana/python-etcd/issues/207", "id": 188699371, "node_id": "MDU6SXNzdWUxODg2OTkzNzE=", "number": 207, "title": "python-etcd equivalent for `etcdctl --no-sync`", "user": {"login": "timfeirg", "id": 4319104, "node_id": "MDQ6VXNlcjQzMTkxMDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4319104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timfeirg", "html_url": "https://github.com/timfeirg", "followers_url": "https://api.github.com/users/timfeirg/followers", "following_url": "https://api.github.com/users/timfeirg/following{/other_user}", "gists_url": "https://api.github.com/users/timfeirg/gists{/gist_id}", "starred_url": "https://api.github.com/users/timfeirg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timfeirg/subscriptions", "organizations_url": "https://api.github.com/users/timfeirg/orgs", "repos_url": "https://api.github.com/users/timfeirg/repos", "events_url": "https://api.github.com/users/timfeirg/events{/privacy}", "received_events_url": "https://api.github.com/users/timfeirg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-11T07:13:53Z", "updated_at": "2017-02-12T18:06:38Z", "closed_at": "2017-02-12T18:06:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm doing this thing where I have to connect to a remote etcd proxy from my local machine, but I can't connect to the real etcd cluster nodes, so I have to use \r\n\r\n```shell\r\n$ etcdctl --no-sync --endpoints http://**.**.**.**:2379 ls \"/eru-core\"\r\n```\r\n\r\nto issue any `etcdctl` commands, otherwise I get:\r\n\r\n```shell\r\n$ etcdctl --endpoints http://10.x.x.17:2379 ls \"/eru-core\"\r\nError:  client: etcd cluster is unavailable or misconfigured\r\nerror #0: client: endpoint http://10.x.x.11:2379 exceeded header timeout\r\nerror #1: client: endpoint http://10.x.x.12:2379 exceeded header timeout\r\nerror #2: client: endpoint http://10.x.x.13:2379 exceeded header timeout\r\n```\r\n\r\nBut with `python-etcd`, I can't seem to find this `--no-sync` mode, and so I can't use `python-etcd` in my local develop environment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/205", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/205/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/205/events", "html_url": "https://github.com/jplana/python-etcd/issues/205", "id": 182464088, "node_id": "MDU6SXNzdWUxODI0NjQwODg=", "number": 205, "title": "can't set lock_prefix in 0.4.3", "user": {"login": "swimablefish", "id": 3191024, "node_id": "MDQ6VXNlcjMxOTEwMjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3191024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swimablefish", "html_url": "https://github.com/swimablefish", "followers_url": "https://api.github.com/users/swimablefish/followers", "following_url": "https://api.github.com/users/swimablefish/following{/other_user}", "gists_url": "https://api.github.com/users/swimablefish/gists{/gist_id}", "starred_url": "https://api.github.com/users/swimablefish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swimablefish/subscriptions", "organizations_url": "https://api.github.com/users/swimablefish/orgs", "repos_url": "https://api.github.com/users/swimablefish/repos", "events_url": "https://api.github.com/users/swimablefish/events{/privacy}", "received_events_url": "https://api.github.com/users/swimablefish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-12T08:25:06Z", "updated_at": "2017-06-17T10:34:54Z", "closed_at": "2017-06-17T10:34:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't set lock_prefix when init Client. \nThen found the parameter has gone https://github.com/jplana/python-etcd/blob/0.4.3/src/etcd/client.py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/204", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/204/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/204/events", "html_url": "https://github.com/jplana/python-etcd/issues/204", "id": 182208711, "node_id": "MDU6SXNzdWUxODIyMDg3MTE=", "number": 204, "title": "Impossible to insert dict to create data structure", "user": {"login": "bs-sdev", "id": 7950982, "node_id": "MDQ6VXNlcjc5NTA5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7950982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bs-sdev", "html_url": "https://github.com/bs-sdev", "followers_url": "https://api.github.com/users/bs-sdev/followers", "following_url": "https://api.github.com/users/bs-sdev/following{/other_user}", "gists_url": "https://api.github.com/users/bs-sdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/bs-sdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bs-sdev/subscriptions", "organizations_url": "https://api.github.com/users/bs-sdev/orgs", "repos_url": "https://api.github.com/users/bs-sdev/repos", "events_url": "https://api.github.com/users/bs-sdev/events{/privacy}", "received_events_url": "https://api.github.com/users/bs-sdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-11T08:51:33Z", "updated_at": "2016-10-12T05:49:26Z", "closed_at": "2016-10-12T05:47:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone,\n\nI Would like insert a dict to create a datastructure, here is an example:\n\ndict_value = {'media': 42, 'min_duration': 0}\n\nclient.write(\"/test\", dict_value)\n\nIf I take a look on my browser (I could make it via a client.read ....), here is the result:\n\n{\n\n```\n\"action\": \"get\",\n\"node\": {\n    \"key\": \"/test\",\n    \"value\": \"{'media': 42, 'min_duration': 0}\",\n    \"modifiedIndex\": 12568,\n    \"createdIndex\": 12568\n}\n```\n\n}\n\nI would like something like this:\n\n{\n\n```\n\"action\": \"get\",\n\"node\": {\n    \"key\": \"/test\",\n    \"dir\": true,\n    \"nodes\": [\n        {\n            \"key\": \"/test/media\",\n            \"value\": \"42\",\n            \"modifiedIndex\": 12571,\n            \"createdIndex\": 12571\n        },\n        {\n            \"key\": \"/test/min-duration\",\n            \"value\": \"0\",\n            \"modifiedIndex\": 12572,\n            \"createdIndex\": 12572\n        }\n    ],\n    \"modifiedIndex\": 12570,\n    \"createdIndex\": 12570\n}\n```\n\n}\n\nDoes someone have this problem? Did I miss something? Or maybe it is not implemented into the python-etcd client and I should make it via a curl command???\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/203", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/203/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/203/events", "html_url": "https://github.com/jplana/python-etcd/issues/203", "id": 180715946, "node_id": "MDU6SXNzdWUxODA3MTU5NDY=", "number": 203, "title": "Etcd client raises a ReadTimeoutError traceback", "user": {"login": "naveenjoy", "id": 16808670, "node_id": "MDQ6VXNlcjE2ODA4Njcw", "avatar_url": "https://avatars3.githubusercontent.com/u/16808670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naveenjoy", "html_url": "https://github.com/naveenjoy", "followers_url": "https://api.github.com/users/naveenjoy/followers", "following_url": "https://api.github.com/users/naveenjoy/following{/other_user}", "gists_url": "https://api.github.com/users/naveenjoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/naveenjoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naveenjoy/subscriptions", "organizations_url": "https://api.github.com/users/naveenjoy/orgs", "repos_url": "https://api.github.com/users/naveenjoy/repos", "events_url": "https://api.github.com/users/naveenjoy/events{/privacy}", "received_events_url": "https://api.github.com/users/naveenjoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-03T18:48:42Z", "updated_at": "2017-06-17T10:35:39Z", "closed_at": "2017-06-17T10:35:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the etcd client times out its watch, it is generating a traceback as seen below. In our code we are catching the TimeoutError exception. However, the etcd client is logging the exception and as a result a stack trace is printed in our stdout confusing our users.\n\nPlease fix this bug to either \na) not log the exception in your code below \nor b) to catch and handle it.\n\nexcept:\n      _log.exception(\"Unexpected request failure, re-raising.\")   <----- offending line\n      raise \n\n**_Traceback seen in our console**_\nERROR etcd.client ReadTimeoutError: HTTPConnectionPool(host='X.X.X.X', port=2379): Read timed out.\n2016-10-03 11:38:14.399 31774 ERROR etcd.client \n2016-10-03 11:38:14.401 31774 DEBUG etcd.client [-] Issuing read for key /networking-vpp/nodes/sjo-smf-ubuntu-server-2/ports with args {'waitIndex': 485299, 'recursive': True, 'timeout': 60, 'wait': True} read /usr/local/lib/python2.7/dist-packages/etcd/client.py:521\n2016-10-03 11:39:14.438 31774 ERROR etcd.client [-] Unexpected request failure, re-raising.\n2016-10-03 11:39:14.438 31774 ERROR etcd.client Traceback (most recent call last):\n2016-10-03 11:39:14.438 31774 ERROR etcd.client   File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 802, in wrapper\n2016-10-03 11:39:14.438 31774 ERROR etcd.client     _ = response.data\n2016-10-03 11:39:14.438 31774 ERROR etcd.client   File \"/usr/local/lib/python2.7/dist-packages/urllib3/response.py\", line 166, in data\n2016-10-03 11:39:14.438 31774 ERROR etcd.client     return self.read(cache_content=True)\n2016-10-03 11:39:14.438 31774 ERROR etcd.client   File \"/usr/local/lib/python2.7/dist-packages/urllib3/response.py\", line 311, in read\n2016-10-03 11:39:14.438 31774 ERROR etcd.client     flush_decoder = True\n2016-10-03 11:39:14.438 31774 ERROR etcd.client   File \"/usr/lib/python2.7/contextlib.py\", line 35, in **exit**\n2016-10-03 11:39:14.438 31774 ERROR etcd.client     self.gen.throw(type, value, traceback)\n2016-10-03 11:39:14.438 31774 ERROR etcd.client   File \"/usr/local/lib/python2.7/dist-packages/urllib3/response.py\", line 231, in _error_catcher\n2016-10-03 11:39:14.438 31774 ERROR etcd.client     raise ReadTimeoutError(self._pool, None, 'Read timed out.')\n2016-10-03 11:39:14.438 31774 ERROR etcd.client ReadTimeoutError: HTTPConnectionPool(host='192.168.119.42', port=2379): Read timed out.\n2016-10-03 11:39:14.438 31774 ERROR etcd.client \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/202", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/202/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/202/events", "html_url": "https://github.com/jplana/python-etcd/issues/202", "id": 180294135, "node_id": "MDU6SXNzdWUxODAyOTQxMzU=", "number": 202, "title": "Watch dir: timeout error?", "user": {"login": "bs-sdev", "id": 7950982, "node_id": "MDQ6VXNlcjc5NTA5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7950982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bs-sdev", "html_url": "https://github.com/bs-sdev", "followers_url": "https://api.github.com/users/bs-sdev/followers", "following_url": "https://api.github.com/users/bs-sdev/following{/other_user}", "gists_url": "https://api.github.com/users/bs-sdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/bs-sdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bs-sdev/subscriptions", "organizations_url": "https://api.github.com/users/bs-sdev/orgs", "repos_url": "https://api.github.com/users/bs-sdev/repos", "events_url": "https://api.github.com/users/bs-sdev/events{/privacy}", "received_events_url": "https://api.github.com/users/bs-sdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-30T12:39:32Z", "updated_at": "2017-02-12T18:02:56Z", "closed_at": "2017-02-12T18:02:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone, \n\nActually I have 3 etcd containers on an Openstack tenant, each container in located on a different VM. One of these VMs as a public IP (10.X.X.X) so it can be connected from everywhere and the others have an IP in 192.X.X.X (private network)\n\nSo my aim is watching a directory (recursively) and, for any operation on the base, it returns the data modified (not difficult). To make it work, I run this command:\n\ndef watch_database(self):\n        while True:\n            watch_result = self.client.read(self.prefix, wait=True,\n                                            recursive=True)\n            logging.warn(watch_result)\n\nSo first it work, but if I wait too much, I have this:\n\n**(client) wrapper() Request to server http://10.50.0.216:2379 failed: timeout('timed out',)\n(client) machines() Failed to get list of machines from http://192.168.0.4:4001/v2: ConnectTimeoutError(<urllib3.connectionpool.HTTPConnectionPool object at 0x7f1f081f8e90>, u'Connection to 192.168.0.4 timed out. (connect timeout=60)')\n(client) machines() Failed to get list of machines from http://192.168.0.5:4001/v2: ConnectTimeoutError(<urllib3.connectionpool.HTTPConnectionPool object at 0x7f1f08209690>, u'Connection to 192.168.0.5 timed out. (connect timeout=60)')\n(client) machines() Failed to get list of machines from http://192.168.0.5:2379/v2: ConnectTimeoutError(<urllib3.connectionpool.HTTPConnectionPool object at 0x7f1f08209890>, u'Connection to 192.168.0.5 timed out. (connect timeout=60)')\n(client) machines() Failed to get list of machines from http://192.168.0.4:2379/v2: ConnectTimeoutError(<urllib3.connectionpool.HTTPConnectionPool object at 0x7f1f08209a10>, u'Connection to 192.168.0.4 timed out. (connect timeout=60)')\n(client) machines() Failed to get list of machines from http://192.168.0.3:2379/v2: ConnectTimeoutError(<urllib3.connectionpool.HTTPConnectionPool object at 0x7f1f08209b90>, u'Connection to 192.168.0.3 timed out. (connect timeout=60)')\n(client) machines() Failed to get list of machines from http://192.168.0.3:4001/v2: ConnectTimeoutError(<urllib3.connectionpool.HTTPConnectionPool object at 0x7f1f08209d10>, u'Connection to 192.168.0.3 timed out. (connect timeout=60)')**\nTraceback (most recent call last):\n  File \"tester.py\", line 183, in <module>\n\n  File \"tester.py\", line 179, in main\n    main()\n  File \"tester.py\", line 145, in main\n    self.get_action(action_number)()\n  File \"tester.py\", line 151, in watch_database\n    recursive=True)\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 536, in read\n    timeout=timeout)\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 846, in wrapper\n    self._machines_cache = self.machines\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 299, in machines\n    return self.machines\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 299, in machines\n    return self.machines\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 299, in machines\n    return self.machines\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 299, in machines\n    return self.machines\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 299, in machines\n    return self.machines\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 301, in machines\n    raise etcd.EtcdException(\"Could not get the list of servers, \"\n**etcd.EtcdException: Could not get the list of servers, maybe you provided the wrong host(s) to connect to?**\n\nSo my question is this one: why do I lost my connection? I gave it the public IP and also asked him to wait and did not put any timeout in order it takes \"None\" instead and wait all the time, does someone have an idea??? :/\n\nRegards.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/199", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/199/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/199/events", "html_url": "https://github.com/jplana/python-etcd/issues/199", "id": 176581011, "node_id": "MDU6SXNzdWUxNzY1ODEwMTE=", "number": 199, "title": "how to watch 1000 keys?", "user": {"login": "humingcheng", "id": 11493962, "node_id": "MDQ6VXNlcjExNDkzOTYy", "avatar_url": "https://avatars3.githubusercontent.com/u/11493962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/humingcheng", "html_url": "https://github.com/humingcheng", "followers_url": "https://api.github.com/users/humingcheng/followers", "following_url": "https://api.github.com/users/humingcheng/following{/other_user}", "gists_url": "https://api.github.com/users/humingcheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/humingcheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/humingcheng/subscriptions", "organizations_url": "https://api.github.com/users/humingcheng/orgs", "repos_url": "https://api.github.com/users/humingcheng/repos", "events_url": "https://api.github.com/users/humingcheng/events{/privacy}", "received_events_url": "https://api.github.com/users/humingcheng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-13T08:30:37Z", "updated_at": "2016-09-29T10:13:52Z", "closed_at": "2016-09-29T10:13:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is an application need to do this work. I can register 1000 watchers with a zookeeperClient to realize that function\uff0cbut how can I do that with a python-etcd-client?\nIt is a good idea to watch the root key and use \"recursive=true\", but sometimes the application must watch  every key independently.\nHow should I do?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/198", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/198/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/198/events", "html_url": "https://github.com/jplana/python-etcd/issues/198", "id": 176287178, "node_id": "MDU6SXNzdWUxNzYyODcxNzg=", "number": 198, "title": "Client() with srv_domain queries localhost", "user": {"login": "akuzminsky", "id": 1763754, "node_id": "MDQ6VXNlcjE3NjM3NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1763754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akuzminsky", "html_url": "https://github.com/akuzminsky", "followers_url": "https://api.github.com/users/akuzminsky/followers", "following_url": "https://api.github.com/users/akuzminsky/following{/other_user}", "gists_url": "https://api.github.com/users/akuzminsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/akuzminsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akuzminsky/subscriptions", "organizations_url": "https://api.github.com/users/akuzminsky/orgs", "repos_url": "https://api.github.com/users/akuzminsky/repos", "events_url": "https://api.github.com/users/akuzminsky/events{/privacy}", "received_events_url": "https://api.github.com/users/akuzminsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-12T03:20:52Z", "updated_at": "2017-02-12T18:31:19Z", "closed_at": "2017-02-12T18:08:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I created Client with srv_domain:\n\n```\nclient = etcd.Client(srv_domain='twindb.com')\n```\n\nHowever `client.machines` requests `http://127.0.0.1:4001/v2/machines`.\n\nDNS is configured correctly:\n\n```\n$ dig +noall +answer SRV _etcd-client._tcp.twindb.com\n_etcd-client._tcp.twindb.com. 300 IN    SRV     0 0 2379 etcd-1e1650524ba511e68a9b12cb523caae1.twindb.com.\n_etcd-client._tcp.twindb.com. 300 IN    SRV     0 0 2379 etcd-6794c99e4ba411e68a9b12cb523caae1.twindb.com.\n_etcd-client._tcp.twindb.com. 300 IN    SRV     0 0 2379 etcd-c3e9dea04ba411e68a9b12cb523caae1.twindb.com.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/197", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/197/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/197/events", "html_url": "https://github.com/jplana/python-etcd/issues/197", "id": 174783471, "node_id": "MDU6SXNzdWUxNzQ3ODM0NzE=", "number": 197, "title": "prevValue does not compare multi-attribute json", "user": {"login": "scheetz", "id": 1264204, "node_id": "MDQ6VXNlcjEyNjQyMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1264204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scheetz", "html_url": "https://github.com/scheetz", "followers_url": "https://api.github.com/users/scheetz/followers", "following_url": "https://api.github.com/users/scheetz/following{/other_user}", "gists_url": "https://api.github.com/users/scheetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/scheetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scheetz/subscriptions", "organizations_url": "https://api.github.com/users/scheetz/orgs", "repos_url": "https://api.github.com/users/scheetz/repos", "events_url": "https://api.github.com/users/scheetz/events{/privacy}", "received_events_url": "https://api.github.com/users/scheetz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-02T15:15:20Z", "updated_at": "2016-09-29T10:21:17Z", "closed_at": "2016-09-29T10:20:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "test_and_set(key, value, value)\n\n Compare failed : [{\"apiVersion\":\"v1\",\"kind\":\"Endpoints\",\"metadata\":{\"creationTimestamp\":\"2016-09-01T22:57:56Z\",\"name\":\"kubernetes\",\"namespace\":\"default\",\"uid\":\"85c41ccb-7097-11e6-aea4-080027a1460e\"},\"subsets\":[{\"addresses\":[{\"ip\":\"192.168.55.40\"},{\"ip\":\"192.168.55.42\"}],\"ports\":[{\"name\":\"https\",\"port\":6443,\"protocol\":\"TCP\"}]}]} != {\"kind\":\"Endpoints\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"kubernetes\",\"namespace\":\"default\",\"uid\":\"85c41ccb-7097-11e6-aea4-080027a1460e\",\"creationTimestamp\":\"2016-09-01T22:57:56Z\"},\"subsets\":[{\"addresses\":[{\"ip\":\"192.168.55.40\"},{\"ip\":\"192.168.55.42\"}],\"ports\":[{\"name\":\"https\",\"port\":6443,\"protocol\":\"TCP\"}]}]}\n\nThe value was fetched, decrypted and encrypted with json module.\n\nIt will compare correctly if the value is fetched and compared without running through json en/decrypt.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/193", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/193/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/193/events", "html_url": "https://github.com/jplana/python-etcd/issues/193", "id": 170605811, "node_id": "MDU6SXNzdWUxNzA2MDU4MTE=", "number": 193, "title": "please update 2.6 support bug fix to pypi", "user": {"login": "bagel", "id": 706788, "node_id": "MDQ6VXNlcjcwNjc4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/706788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bagel", "html_url": "https://github.com/bagel", "followers_url": "https://api.github.com/users/bagel/followers", "following_url": "https://api.github.com/users/bagel/following{/other_user}", "gists_url": "https://api.github.com/users/bagel/gists{/gist_id}", "starred_url": "https://api.github.com/users/bagel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bagel/subscriptions", "organizations_url": "https://api.github.com/users/bagel/orgs", "repos_url": "https://api.github.com/users/bagel/repos", "events_url": "https://api.github.com/users/bagel/events{/privacy}", "received_events_url": "https://api.github.com/users/bagel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-11T09:37:49Z", "updated_at": "2017-06-17T10:37:35Z", "closed_at": "2017-06-17T10:37:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Collecting python-etcd\n  Using cached python-etcd-0.4.3.tar.gz\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-build-9NRDkU/python-etcd/setup.py\", line 12, in <module>\n        if sys.version_info.major == 2:\n    AttributeError: 'tuple' object has no attribute 'major'\n\n```\n----------------------------------------\n```\n\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-9NRDkU/python-etcd/\n\nI saw this bug had been fixed, but pypi not update, please update. thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/188", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/188/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/188/events", "html_url": "https://github.com/jplana/python-etcd/issues/188", "id": 164505798, "node_id": "MDU6SXNzdWUxNjQ1MDU3OTg=", "number": 188, "title": "Memebers latency", "user": {"login": "aafanasyev", "id": 8863378, "node_id": "MDQ6VXNlcjg4NjMzNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/8863378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aafanasyev", "html_url": "https://github.com/aafanasyev", "followers_url": "https://api.github.com/users/aafanasyev/followers", "following_url": "https://api.github.com/users/aafanasyev/following{/other_user}", "gists_url": "https://api.github.com/users/aafanasyev/gists{/gist_id}", "starred_url": "https://api.github.com/users/aafanasyev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aafanasyev/subscriptions", "organizations_url": "https://api.github.com/users/aafanasyev/orgs", "repos_url": "https://api.github.com/users/aafanasyev/repos", "events_url": "https://api.github.com/users/aafanasyev/events{/privacy}", "received_events_url": "https://api.github.com/users/aafanasyev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-08T10:47:58Z", "updated_at": "2016-07-08T11:34:36Z", "closed_at": "2016-07-08T11:34:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi *,\n\nCan I get somehow a latency information about nodes?\n\nAFAIK it is part of statistics, but I cannot find how I can get it in python-etcd.\n\nregards\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/187", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/187/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/187/events", "html_url": "https://github.com/jplana/python-etcd/issues/187", "id": 164202588, "node_id": "MDU6SXNzdWUxNjQyMDI1ODg=", "number": 187, "title": "TLS \"hostname doesn't match exception\"", "user": {"login": "ae6rt", "id": 392176, "node_id": "MDQ6VXNlcjM5MjE3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/392176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ae6rt", "html_url": "https://github.com/ae6rt", "followers_url": "https://api.github.com/users/ae6rt/followers", "following_url": "https://api.github.com/users/ae6rt/following{/other_user}", "gists_url": "https://api.github.com/users/ae6rt/gists{/gist_id}", "starred_url": "https://api.github.com/users/ae6rt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ae6rt/subscriptions", "organizations_url": "https://api.github.com/users/ae6rt/orgs", "repos_url": "https://api.github.com/users/ae6rt/repos", "events_url": "https://api.github.com/users/ae6rt/events{/privacy}", "received_events_url": "https://api.github.com/users/ae6rt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-07T00:09:35Z", "updated_at": "2017-06-17T10:43:54Z", "closed_at": "2017-06-17T10:43:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, and thank you for python-etcd.  When I run this code\n\n```\nimport etcd\n\nif __name__ == \"__main__\":\n    c = etcd.Client(host=\"10.2.23.10\", port=2379, protocol=\"https\", ca_cert=\"cacert.pem\") \n    c.api_execute(\"/version\", 'GET').data\n```\n\nagainst a server bearing this certificate\n\n```\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number:\n            7f:ff:bc:cf:b7:c6:dc:a3:3e:4c:76:79:c8:6d:56:3c:54:23:ee:a0\n    Signature Algorithm: sha256WithRSAEncryption\n        Issuer: C=US, O=Xoom, OU=INF ENG, L=San Francisco, ST=California, CN=Xoom INF ENG CA\n        Validity\n            Not Before: Jul  6 00:28:00 2016 GMT\n            Not After : Jul  4 00:28:00 2026 GMT\n        Subject: C=US, ST=California, L=San Francicso, O=INF ENG, OU=etcd cluster, CN=etcd\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n                Public-Key: (2048 bit)\n                Modulus:\n                    00:df:94:2b:6f:4d:f2:e0:97:2d:55:18:f7:a0:10:\n                    90:6d:f9:3f:35:03:2f:f1:f8:b8:ad:5e:96:64:f3:\n                    f3:1e:30:e1:12:27:72:c6:79:11:b9:68:44:35:19:\n                    f0:db:f9:f6:15:a9:eb:92:0c:44:cb:c7:fd:19:dd:\n                    a2:c5:9c:10:77:81:e3:54:ea:6f:7d:86:ff:f4:86:\n                    b0:13:cb:7d:9f:78:7e:28:6f:3f:45:ca:4d:bb:90:\n                    20:00:db:8d:4e:8c:6c:33:de:0f:48:82:47:ec:0d:\n                    9b:e9:88:45:3f:c0:2d:86:6a:9d:c3:62:fa:7f:d8:\n                    c4:35:5b:36:84:6c:c3:a2:bb:4a:8a:76:cc:6d:f6:\n                    92:1a:f6:d1:0a:58:f1:49:14:05:5f:63:78:6f:87:\n                    94:20:e8:03:f5:9a:9a:e1:5c:dd:0e:34:98:15:1c:\n                    c5:af:24:9e:d1:49:2f:40:72:ce:eb:84:b3:3f:bc:\n                    38:3e:94:ee:06:88:78:5b:9a:c3:8c:95:74:66:e6:\n                    14:ab:ce:89:7b:c7:cf:ff:3d:47:0b:5b:ad:88:a0:\n                    23:78:9d:94:8a:4e:cc:c6:4e:c4:46:d4:de:52:d7:\n                    83:5d:07:4e:ea:14:d2:9a:02:c9:d9:24:87:9d:1a:\n                    91:2b:89:20:ab:a7:6f:58:61:1e:b6:26:5a:b6:eb:\n                    60:77\n                Exponent: 65537 (0x10001)\n        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature, Key Encipherment\n            X509v3 Extended Key Usage: \n                TLS Web Server Authentication\n            X509v3 Basic Constraints: critical\n                CA:FALSE\n            X509v3 Subject Key Identifier: \n                FD:30:A8:DF:EB:6A:67:30:63:C6:69:65:D0:65:48:85:94:7E:09:D0\n            X509v3 Authority Key Identifier: \n                keyid:84:1C:C5:89:42:DC:E2:FF:96:15:65:28:D2:A2:17:BD:D1:E6:D5:0C\n\n            X509v3 Subject Alternative Name: \n                DNS:localhost, IP Address:127.0.0.1, IP Address:10.2.23.10, IP Address:10.2.23.11, IP Address:10.2.23.9\n    Signature Algorithm: sha256WithRSAEncryption\n         75:97:75:40:5d:5f:8b:41:82:ac:94:29:b6:0e:b8:7a:22:43:\n         21:2b:a3:20:e4:56:0e:94:5a:b0:2a:76:81:9f:ee:10:fc:b7:\n         9d:f0:91:2a:a2:ef:61:65:45:4f:9e:22:3c:9d:00:81:49:bb:\n         86:5c:3a:5c:8d:68:25:9a:f4:2a:4c:e9:f8:4a:b7:75:b6:49:\n         dc:69:37:d0:72:99:bc:df:b3:18:be:13:39:7b:0f:88:23:70:\n         1a:30:8f:30:78:a2:a9:1e:b6:a3:15:12:af:ff:78:e1:b6:18:\n         32:a9:99:de:ae:c8:c6:9c:49:c1:1d:0e:4b:33:ef:b6:1d:e6:\n         71:52:c0:8a:0a:57:2e:c1:ec:43:18:2a:d5:ee:8f:32:5e:01:\n         5c:4b:74:0b:4a:05:96:32:d0:80:cc:50:20:af:8a:b4:69:bc:\n         39:8c:6e:c1:6a:28:71:be:ba:12:e9:3d:5a:fc:8c:65:0b:0f:\n         a8:ba:0c:9f:52:ab:a4:25:79:92:ab:bb:de:24:ee:b8:1f:a1:\n         d9:88:60:bd:26:6d:80:10:db:5c:e9:4a:c1:2e:03:5b:f4:28:\n         3a:58:a5:fd:14:ed:34:b5:82:8e:4d:54:24:17:d3:af:3b:54:\n         a3:cd:09:ba:e4:be:09:21:ba:9d:6b:0d:a7:b9:73:3f:cf:42:\n         bc:21:11:03\n```\n\nI receive\n\n```\n$ python main.py \nTraceback (most recent call last):\n  File \"main.py\", line 5, in <module>\n    c.api_execute(\"/version\", 'GET').data\n  File \"/Library/Python/2.7/site-packages/python_etcd-0.4.3-py2.7.egg/etcd/client.py\", line 857, in wrapper\n    cause=e\netcd.EtcdConnectionFailed: Connection to etcd failed due to SSLError(CertificateError(\"hostname '10.2.23.10' doesn't match 'localhost'\",),)\n```\n\nI am using python 2.7.10.  It appears to me that client or its dependencies is not availing itself of the Subject Alternative Names in the cert, but I could be wrong.  Do I need to install additional python packages in support of python-etcd to avoid this error? \n\nThank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/185", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/185/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/185/events", "html_url": "https://github.com/jplana/python-etcd/issues/185", "id": 161906729, "node_id": "MDU6SXNzdWUxNjE5MDY3Mjk=", "number": 185, "title": "PyPi package seems to be broken", "user": {"login": "mikroskeem", "id": 3490861, "node_id": "MDQ6VXNlcjM0OTA4NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3490861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikroskeem", "html_url": "https://github.com/mikroskeem", "followers_url": "https://api.github.com/users/mikroskeem/followers", "following_url": "https://api.github.com/users/mikroskeem/following{/other_user}", "gists_url": "https://api.github.com/users/mikroskeem/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikroskeem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikroskeem/subscriptions", "organizations_url": "https://api.github.com/users/mikroskeem/orgs", "repos_url": "https://api.github.com/users/mikroskeem/repos", "events_url": "https://api.github.com/users/mikroskeem/events{/privacy}", "received_events_url": "https://api.github.com/users/mikroskeem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-23T12:07:10Z", "updated_at": "2016-07-08T21:03:58Z", "closed_at": "2016-07-08T21:03:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nCollecting etcd\n  Downloading etcd-2.0.8.tar.gz\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-build-0qk1vtr6/etcd/setup.py\", line 13, in <module>\n        with open(os.path.join(app_path, 'resources', 'requirements.txt')) as f:\n    FileNotFoundError: [Errno 2] No such file or directory: '/tmp/pip-build-0qk1vtr6/etcd/etcd/resources/requirements.txt'\n```\n\nInstalling works fine by issuing `pip install git+https://github.com/jplana/python-etcd`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/183", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/183/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/183/events", "html_url": "https://github.com/jplana/python-etcd/issues/183", "id": 161343636, "node_id": "MDU6SXNzdWUxNjEzNDM2MzY=", "number": 183, "title": "AttributeError: 'module' object has no attribute 'PROTOCOL_SSLv3'", "user": {"login": "raindog308", "id": 3733722, "node_id": "MDQ6VXNlcjM3MzM3MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3733722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raindog308", "html_url": "https://github.com/raindog308", "followers_url": "https://api.github.com/users/raindog308/followers", "following_url": "https://api.github.com/users/raindog308/following{/other_user}", "gists_url": "https://api.github.com/users/raindog308/gists{/gist_id}", "starred_url": "https://api.github.com/users/raindog308/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raindog308/subscriptions", "organizations_url": "https://api.github.com/users/raindog308/orgs", "repos_url": "https://api.github.com/users/raindog308/repos", "events_url": "https://api.github.com/users/raindog308/events{/privacy}", "received_events_url": "https://api.github.com/users/raindog308/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-21T03:45:42Z", "updated_at": "2016-09-29T10:25:12Z", "closed_at": "2016-09-29T10:25:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nFile \"./testpy.py\", line 3, in <module>\n    from etcd.client import Client\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 1, in <module>\n    import requests\n  File \"/usr/local/lib/python2.7/dist-packages/requests/__init__.py\", line 53, in <module>\n    from .packages.urllib3.contrib import pyopenssl\n  File \"/usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/contrib/pyopenssl.py\", line 43, in <module>\n    ssl.PROTOCOL_SSLv3: OpenSSL.SSL.SSLv3_METHOD,\nAttributeError: 'module' object has no attribute 'PROTOCOL_SSLv3'\n\n```\n\nRelatively fresh Deb8 image at DigitalOcean...etcd is running fine.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/181", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/181/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/181/events", "html_url": "https://github.com/jplana/python-etcd/issues/181", "id": 159460281, "node_id": "MDU6SXNzdWUxNTk0NjAyODE=", "number": 181, "title": "Lock mechanism can stick in infinite loop", "user": {"login": "ainlolcat", "id": 844114, "node_id": "MDQ6VXNlcjg0NDExNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/844114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ainlolcat", "html_url": "https://github.com/ainlolcat", "followers_url": "https://api.github.com/users/ainlolcat/followers", "following_url": "https://api.github.com/users/ainlolcat/following{/other_user}", "gists_url": "https://api.github.com/users/ainlolcat/gists{/gist_id}", "starred_url": "https://api.github.com/users/ainlolcat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ainlolcat/subscriptions", "organizations_url": "https://api.github.com/users/ainlolcat/orgs", "repos_url": "https://api.github.com/users/ainlolcat/repos", "events_url": "https://api.github.com/users/ainlolcat/events{/privacy}", "received_events_url": "https://api.github.com/users/ainlolcat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-06-09T17:08:16Z", "updated_at": "2017-06-17T13:05:03Z", "closed_at": "2017-06-17T13:05:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello. I have code like :\n\n```\nclient = etcd.Client(host='etcd', protocol='http', port=2379)   \nlock = etcd.Lock(client, 'lock_key')  \nprint 'Try to acquire Lock'  \nlock.acquire(blocking=blocking, lock_ttl=lock_ttl, timeout=timeout)  \n```\n\nAnd sometimes it just freezes on lock.acquire(...). Logs indicate what etcd.client tries to read value over and over: \n\n> ...\n> 161 Try to acquire Lock\n> 162 2016-06-09 14:19:53,213 - etcd.client - DEBUG - Issuing read for key /_locks/lock_key with args {'recursive': True}\n> 163 2016-06-09 14:19:53,241 - urllib3.connectionpool - DEBUG - \"GET /v2/keys/_locks/lock_key?recursive=true HTTP/1.1\" 200 109\n> 164 2016-06-09 14:19:53,242 - etcd.lock - DEBUG - Lock not found, writing it to /_locks/lock_key\n> 165 2016-06-09 14:19:53,243 - etcd.client - DEBUG - Writing 7e932ac6c2ae428aae0bcac0aa73017b to key /_locks/lock_key ttl=1 dir=False append=True\n> 166 2016-06-09 14:19:53,441 - urllib3.connectionpool - DEBUG - \"POST /v2/keys/_locks/lock_key HTTP/1.1\" 201 210\n> 167 2016-06-09 14:19:53,468 - etcd.lock - DEBUG - Lock key /_locks/lock_key/35619 written, sequence is 35619\n> 168 2016-06-09 14:19:53,471 - etcd.client - DEBUG - Issuing read for key /_locks/lock_key with args {'recursive': True}\n> 169 2016-06-09 14:19:53,477 - urllib3.connectionpool - DEBUG - \"GET /v2/keys/_locks/lock_key?recursive=true HTTP/1.1\" 200 485\n> 170 2016-06-09 14:19:53,478 - etcd.lock - DEBUG - Lock keys found: [u'/_locks/lock_key/35618', u'/_locks/lock_key/35619']\n> 171 2016-06-09 14:19:53,560 - etcd.lock - DEBUG - Locker: /_locks/lock_key/35618, key to watch: /_locks/lock_key/35618\n> 172 2016-06-09 14:19:53,560 - etcd.lock - DEBUG - Lock not acquired, now watching /_locks/lock_key/35618\n> 173 2016-06-09 14:19:53,561 - etcd.client - DEBUG - About to wait on key /_locks/lock_key/35618, index None\n> 174 2016-06-09 14:19:53,566 - etcd.client - DEBUG - Issuing read for key /_locks/lock_key/35618 with args {'recursive': None, 'timeout': 1, 'wait': True}\n> 175 2016-06-09 14:19:53,569 - urllib3.connectionpool - DEBUG - \"GET /v2/keys/_locks/lock_key/35618?wait=true HTTP/1.1\" 200 None\n> 176 2016-06-09 14:19:54,468 - etcd.lock - DEBUG - Detected variation for /_locks/lock_key/35618: expire\n> 177 2016-06-09 14:19:54,469 - etcd.client - DEBUG - Issuing read for key /_locks/lock_key with args {'recursive': True}\n> 178 2016-06-09 14:19:54,471 - urllib3.connectionpool - DEBUG - \"GET /v2/keys/_locks/lock_key?recursive=true HTTP/1.1\" 200 109\n> 179 2016-06-09 14:19:54,472 - etcd.lock - DEBUG - Lock keys found: [u'/_locks/lock_key']\n> 180 2016-06-09 14:19:54,472 - etcd.client - DEBUG - About to wait on key /_locks/lock_key/35618, index None\n> 181 2016-06-09 14:19:54,472 - etcd.client - DEBUG - Issuing read for key /_locks/lock_key/35618 with args {'recursive': None, 'timeout': 1, 'wait': True}\n> 182 2016-06-09 14:19:54,474 - urllib3.connectionpool - DEBUG - \"GET /v2/keys/_locks/lock_key/35618?wait=true HTTP/1.1\" 200 None\n> 183 2016-06-09 14:19:55,476 - etcd.client - DEBUG - Watch timed out.\n> 184 2016-06-09 14:19:55,477 - etcd.client - DEBUG - About to wait on key /_locks/lock_key/35618, index None\n> 185 2016-06-09 14:19:55,477 - etcd.client - DEBUG - Issuing read for key /_locks/lock_key/35618 with args {'recursive': None, 'timeout': 1, 'wait': True}\n> 186 2016-06-09 14:19:55,477 - urllib3.connectionpool - INFO - Resetting dropped connection: etcd\n> 187 2016-06-09 14:19:55,625 - urllib3.connectionpool - DEBUG - \"GET /v2/keys/_locks/lock_key/35618?wait=true HTTP/1.1\" 200 None\n> 188 2016-06-09 14:19:56,628 - etcd.client - DEBUG - Watch timed out.\n> 189 2016-06-09 14:19:56,628 - etcd.client - DEBUG - About to wait on key /_locks/lock_key/35618, index None\n> 190 2016-06-09 14:19:56,628 - etcd.client - DEBUG - Issuing read for key /_locks/lock_key/35618 with args {'recursive': None, 'timeout': 1, 'wait': True}\n> 191 2016-06-09 14:19:56,629 - urllib3.connectionpool - INFO - Resetting dropped connection: etcd\n> 192 2016-06-09 14:19:56,646 - urllib3.connectionpool - DEBUG - \"GET /v2/keys/_locks/lock_key/35618?wait=true HTTP/1.1\" 200 None\n> 193 2016-06-09 14:19:57,648 - etcd.client - DEBUG - Watch timed out.\n> 194 2016-06-09 14:19:57,683 - etcd.client - DEBUG - About to wait on key /_locks/lock_key/35618, index None\n> 195 2016-06-09 14:19:57,683 - etcd.client - DEBUG - Issuing read for key /_locks/lock_key/35618 with args {'recursive': None, 'timeout': 1, 'wait': True}\n> ...\n\nI beleave it can happen because of https://github.com/jplana/python-etcd/blob/master/src/etcd/lock.py#L127 \n\n> ```\n>          while True:\n>             try:\n>                 r = self.client.watch(watch_key, timeout=t)\n>                 _log.debug(\"Detected variation for %s: %s\", r.key, r.action)\n>                 return self._acquired(blocking=True, timeout=timeout)\n>             except etcd.EtcdKeyNotFound:\n>                 _log.debug(\"Key %s not present anymore, moving on\", watch_key)\n>                 return self._acquired(blocking=True, timeout=timeout)\n>             except etcd.EtcdException:\n>                 # TODO: log something...\n>                 pass\n> ```\n\nAt first I think it is unlikely because I miss second log entry from _get_locker() method but it can be what _get_locker will fail with exception,  \"except etcd.EtcdException\" part will catch exception and start watch method again and again and then code will fail into infinite loop. May be it is normal behavior but I specify timeout and want result or error after timeout. There are two problems: \n- Someone ignores exception. You can log anything You like but please log something. It will be much easier to understand and debug\n- Someone ignores timeout. I wrap execution and add timeout for now.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/178", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/178/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/178/events", "html_url": "https://github.com/jplana/python-etcd/issues/178", "id": 155837790, "node_id": "MDU6SXNzdWUxNTU4Mzc3OTA=", "number": 178, "title": "key names are not transparently URL encoded", "user": {"login": "dannysauer", "id": 3950223, "node_id": "MDQ6VXNlcjM5NTAyMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3950223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannysauer", "html_url": "https://github.com/dannysauer", "followers_url": "https://api.github.com/users/dannysauer/followers", "following_url": "https://api.github.com/users/dannysauer/following{/other_user}", "gists_url": "https://api.github.com/users/dannysauer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannysauer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannysauer/subscriptions", "organizations_url": "https://api.github.com/users/dannysauer/orgs", "repos_url": "https://api.github.com/users/dannysauer/repos", "events_url": "https://api.github.com/users/dannysauer/events{/privacy}", "received_events_url": "https://api.github.com/users/dannysauer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-19T21:19:52Z", "updated_at": "2016-05-20T07:03:13Z", "closed_at": "2016-05-20T07:03:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "As it turns out, key names are not being escaped to make them URL-safe before being inserted.  While etcd can support a key name of \"#\" or \";\", the module fails when trying to create those.  There are two possible solutions.  One is for the module to automagically encode them.  The other is to document that the end-user should quote their keys if they're using anything outside of the ASCII digits-and-letters range.  It seems like being transparent about encoding the keys would be preferable.\n\nI've worked around this in my script by doing this.  I'd be happy if a future update broke my code, though. :)\n\n``` python\nk = urllib.quote( ''.join(s))\nclient.write( posixpath.join(prefix, k), '' )\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/177", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/177/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/177/events", "html_url": "https://github.com/jplana/python-etcd/issues/177", "id": 155802534, "node_id": "MDU6SXNzdWUxNTU4MDI1MzQ=", "number": 177, "title": "any plan to support v3 api?", "user": {"login": "yy2008", "id": 3512612, "node_id": "MDQ6VXNlcjM1MTI2MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3512612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yy2008", "html_url": "https://github.com/yy2008", "followers_url": "https://api.github.com/users/yy2008/followers", "following_url": "https://api.github.com/users/yy2008/following{/other_user}", "gists_url": "https://api.github.com/users/yy2008/gists{/gist_id}", "starred_url": "https://api.github.com/users/yy2008/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yy2008/subscriptions", "organizations_url": "https://api.github.com/users/yy2008/orgs", "repos_url": "https://api.github.com/users/yy2008/repos", "events_url": "https://api.github.com/users/yy2008/events{/privacy}", "received_events_url": "https://api.github.com/users/yy2008/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-05-19T18:22:11Z", "updated_at": "2017-06-17T10:45:22Z", "closed_at": "2017-06-17T10:45:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any plan to support v3?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/173", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/173/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/173/events", "html_url": "https://github.com/jplana/python-etcd/issues/173", "id": 154201272, "node_id": "MDU6SXNzdWUxNTQyMDEyNzI=", "number": 173, "title": "how can i check whether a key exists", "user": {"login": "zgfh", "id": 11729624, "node_id": "MDQ6VXNlcjExNzI5NjI0", "avatar_url": "https://avatars2.githubusercontent.com/u/11729624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zgfh", "html_url": "https://github.com/zgfh", "followers_url": "https://api.github.com/users/zgfh/followers", "following_url": "https://api.github.com/users/zgfh/following{/other_user}", "gists_url": "https://api.github.com/users/zgfh/gists{/gist_id}", "starred_url": "https://api.github.com/users/zgfh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zgfh/subscriptions", "organizations_url": "https://api.github.com/users/zgfh/orgs", "repos_url": "https://api.github.com/users/zgfh/repos", "events_url": "https://api.github.com/users/zgfh/events{/privacy}", "received_events_url": "https://api.github.com/users/zgfh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870691, "node_id": "MDU6TGFiZWw1Njg3MDY5MQ==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 56870693, "node_id": "MDU6TGFiZWw1Njg3MDY5Mw==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-11T09:41:51Z", "updated_at": "2017-12-12T16:54:56Z", "closed_at": "2017-06-17T13:05:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "i think this is not right\n\n```\ntry:\n    client.read('/invalid/path')\nexcept etcd.EtcdKeyNotFound:\n    # do something\n    print \"error\"\n```\n\ni think  method isExists() will be better\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/171", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/171/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/171/events", "html_url": "https://github.com/jplana/python-etcd/issues/171", "id": 151594673, "node_id": "MDU6SXNzdWUxNTE1OTQ2NzM=", "number": 171, "title": "Locking module _acquired timeout=None fails at comparison", "user": {"login": "krodyrobi", "id": 4136467, "node_id": "MDQ6VXNlcjQxMzY0Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4136467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krodyrobi", "html_url": "https://github.com/krodyrobi", "followers_url": "https://api.github.com/users/krodyrobi/followers", "following_url": "https://api.github.com/users/krodyrobi/following{/other_user}", "gists_url": "https://api.github.com/users/krodyrobi/gists{/gist_id}", "starred_url": "https://api.github.com/users/krodyrobi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krodyrobi/subscriptions", "organizations_url": "https://api.github.com/users/krodyrobi/orgs", "repos_url": "https://api.github.com/users/krodyrobi/repos", "events_url": "https://api.github.com/users/krodyrobi/events{/privacy}", "received_events_url": "https://api.github.com/users/krodyrobi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-28T09:46:15Z", "updated_at": "2017-06-17T10:48:57Z", "closed_at": "2017-06-17T10:48:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n\"etcd/lock.py\", line 117, in _acquired\n    t = max(0, timeout)\nTypeError: unorderable types: NoneType() > int()\n```\n\nIt appears that all functions have timeout defaulting to `None` except this one. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/170", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/170/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/170/events", "html_url": "https://github.com/jplana/python-etcd/issues/170", "id": 151572300, "node_id": "MDU6SXNzdWUxNTE1NzIzMDA=", "number": 170, "title": "Using a Lock as a context manager leads to AttributeError", "user": {"login": "Konfuzzyus", "id": 1231074, "node_id": "MDQ6VXNlcjEyMzEwNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1231074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Konfuzzyus", "html_url": "https://github.com/Konfuzzyus", "followers_url": "https://api.github.com/users/Konfuzzyus/followers", "following_url": "https://api.github.com/users/Konfuzzyus/following{/other_user}", "gists_url": "https://api.github.com/users/Konfuzzyus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Konfuzzyus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Konfuzzyus/subscriptions", "organizations_url": "https://api.github.com/users/Konfuzzyus/orgs", "repos_url": "https://api.github.com/users/Konfuzzyus/repos", "events_url": "https://api.github.com/users/Konfuzzyus/events{/privacy}", "received_events_url": "https://api.github.com/users/Konfuzzyus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-28T07:55:23Z", "updated_at": "2017-02-12T18:16:58Z", "closed_at": "2017-02-12T18:16:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the documentation at http://python-etcd.readthedocs.io/en/latest/, the following code should be valid usage of the Lock class:\n\n```\nclient = etcd.Client()\nwith etcd.Lock(client, 'customer1') as my_lock:\n    do_stuff()\n    my_lock.is_acquired()  # True\n    my_lock.acquire(lock_ttl = 60)\nmy_lock.is_acquired() # False\n```\n\nThis throws an AttributeError at my_lock.is_acquired(), because my_lock is None at that point.    \n\nThe reason is the implementation of **enter** and **exit** on Lock, which do not comply with the context manager contract, see https://docs.python.org/2/reference/datamodel.html#context-managers.\n\ne.g.\n\n```\ndef __enter__(self):\n        \"\"\"\n        You can use the lock as a contextmanager\n        \"\"\"\n        self.acquire(blocking=True, lock_ttl=0)\n        # missing return self\n\n    def __exit__(self, type, value, traceback):\n        self.release()\n        # missing return False\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/166", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/166/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/166/events", "html_url": "https://github.com/jplana/python-etcd/issues/166", "id": 145727410, "node_id": "MDU6SXNzdWUxNDU3Mjc0MTA=", "number": 166, "title": "[Feature Request] Make it easily possible to iterate over the direct children of a node.", "user": {"login": "JostBaron", "id": 2916594, "node_id": "MDQ6VXNlcjI5MTY1OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2916594?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JostBaron", "html_url": "https://github.com/JostBaron", "followers_url": "https://api.github.com/users/JostBaron/followers", "following_url": "https://api.github.com/users/JostBaron/following{/other_user}", "gists_url": "https://api.github.com/users/JostBaron/gists{/gist_id}", "starred_url": "https://api.github.com/users/JostBaron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JostBaron/subscriptions", "organizations_url": "https://api.github.com/users/JostBaron/orgs", "repos_url": "https://api.github.com/users/JostBaron/repos", "events_url": "https://api.github.com/users/JostBaron/events{/privacy}", "received_events_url": "https://api.github.com/users/JostBaron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-04T15:57:27Z", "updated_at": "2016-04-16T14:28:51Z", "closed_at": "2016-04-16T14:01:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is currently not possible, it's only possible to iterate over the complete subtree of a node.\n\nTo get only the children of that node, one would need to either access the private `_children` member of the result, or filter the complete subtree using `get_subtree()`, which is inefficient.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/165", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/165/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/165/events", "html_url": "https://github.com/jplana/python-etcd/issues/165", "id": 144049906, "node_id": "MDU6SXNzdWUxNDQwNDk5MDY=", "number": 165, "title": "Whats the correct way to add cert file from composeio?", "user": {"login": "sirvon", "id": 1570089, "node_id": "MDQ6VXNlcjE1NzAwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1570089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirvon", "html_url": "https://github.com/sirvon", "followers_url": "https://api.github.com/users/sirvon/followers", "following_url": "https://api.github.com/users/sirvon/following{/other_user}", "gists_url": "https://api.github.com/users/sirvon/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirvon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirvon/subscriptions", "organizations_url": "https://api.github.com/users/sirvon/orgs", "repos_url": "https://api.github.com/users/sirvon/repos", "events_url": "https://api.github.com/users/sirvon/events{/privacy}", "received_events_url": "https://api.github.com/users/sirvon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-28T18:44:44Z", "updated_at": "2016-04-16T14:04:28Z", "closed_at": "2016-04-16T14:04:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "This isn't working....\n\n``` python\nclient = etcd.Client(\n         host=os.environ.get(\"ETCD_HOST\"),\n         port=int(os.environ.get(\"ETCD_PORT\")),\n         allow_reconnect=True,\n         cert=('./etcdcert',\"etcdcert\"),\n         protocol='https',\n         username=os.environ.get(\"ETCD_USERNAME\"),\n         password=os.environ.get(\"ETCD_PASSWORD\"))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/162", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/162/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/162/events", "html_url": "https://github.com/jplana/python-etcd/issues/162", "id": 138012364, "node_id": "MDU6SXNzdWUxMzgwMTIzNjQ=", "number": 162, "title": "Documentation issue related to making directories", "user": {"login": "pmarkowsky", "id": 1851972, "node_id": "MDQ6VXNlcjE4NTE5NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1851972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmarkowsky", "html_url": "https://github.com/pmarkowsky", "followers_url": "https://api.github.com/users/pmarkowsky/followers", "following_url": "https://api.github.com/users/pmarkowsky/following{/other_user}", "gists_url": "https://api.github.com/users/pmarkowsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmarkowsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmarkowsky/subscriptions", "organizations_url": "https://api.github.com/users/pmarkowsky/orgs", "repos_url": "https://api.github.com/users/pmarkowsky/repos", "events_url": "https://api.github.com/users/pmarkowsky/events{/privacy}", "received_events_url": "https://api.github.com/users/pmarkowsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-02T22:30:37Z", "updated_at": "2016-04-16T14:15:47Z", "closed_at": "2016-04-16T14:15:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just noticed that the code sample to create a directory on the readthedocs site has `client.write('/nodes/queue', dir=True)` which throws an exception of needing at least 3 arguments.\n\nHaving played with it a bit it appears that \n\n`client.write('/nodes/queue', None, dir=True)`\n\nIs the correct incantation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/161", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/161/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/161/events", "html_url": "https://github.com/jplana/python-etcd/issues/161", "id": 137986593, "node_id": "MDU6SXNzdWUxMzc5ODY1OTM=", "number": 161, "title": "Test failures with etcd-2.2.5", "user": {"login": "mbarnes", "id": 56718, "node_id": "MDQ6VXNlcjU2NzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/56718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbarnes", "html_url": "https://github.com/mbarnes", "followers_url": "https://api.github.com/users/mbarnes/followers", "following_url": "https://api.github.com/users/mbarnes/following{/other_user}", "gists_url": "https://api.github.com/users/mbarnes/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbarnes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbarnes/subscriptions", "organizations_url": "https://api.github.com/users/mbarnes/orgs", "repos_url": "https://api.github.com/users/mbarnes/repos", "events_url": "https://api.github.com/users/mbarnes/events{/privacy}", "received_events_url": "https://api.github.com/users/mbarnes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870690, "node_id": "MDU6TGFiZWw1Njg3MDY5MA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 204317618, "node_id": "MDU6TGFiZWwyMDQzMTc2MTg=", "url": "https://api.github.com/repos/jplana/python-etcd/labels/etcd%202.x%20support", "name": "etcd 2.x support", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-03-02T20:40:28Z", "updated_at": "2017-06-17T10:36:12Z", "closed_at": "2017-06-17T10:36:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seems to have been a subtle behavior change between etcd-2.2.1 and etcd-2.2.5.\n\nThe tests which were previously all passing with 2.2.1 now fail with 2.2.5 due to a slash prefix on the ACL path:\n\n```\n======================================================================\nFAIL: test_read (etcd.tests.test_auth.EtcdRoleTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/mbarnes/git/github/users/jplana/python-etcd/src/etcd/tests/test_auth.py\", line 130, in test_read\n    self.assertEquals(r.acls, {'*': 'RW'})\nAssertionError: {u'/*': 'RW'} != {'*': 'RW'}\n- {u'/*': 'RW'}\n?  - -\n\n+ {'*': 'RW'}\n-------------------- >> begin captured logging << --------------------\nurllib3.connectionpool: DEBUG: \"GET /v2/auth/users/root HTTP/1.1\" 200 33\nurllib3.connectionpool: DEBUG: \"PUT /v2/auth/users/root HTTP/1.1\" 200 33\nurllib3.connectionpool: DEBUG: \"PUT /v2/auth/users/root HTTP/1.1\" 200 27\netcd.client: DEBUG: New etcd client created for http://127.0.0.1:6001\netcd.client: DEBUG: New etcd client created for http://127.0.0.1:6001\nurllib3.connectionpool: INFO: Starting new HTTP connection (1): 127.0.0.1\nurllib3.connectionpool: DEBUG: \"GET /v2/auth/enable HTTP/1.1\" 200 18\nurllib3.connectionpool: DEBUG: \"PUT /v2/auth/enable HTTP/1.1\" 200 0\nurllib3.connectionpool: DEBUG: \"GET /v2/auth/roles/guest HTTP/1.1\" 200 69\n--------------------- >> end captured logging << ---------------------\n\n----------------------------------------------------------------------\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/160", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/160/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/160/events", "html_url": "https://github.com/jplana/python-etcd/issues/160", "id": 137212156, "node_id": "MDU6SXNzdWUxMzcyMTIxNTY=", "number": 160, "title": "Code to catch ReadTimeoutError misses MaxRetryError", "user": {"login": "fasaxc", "id": 469264, "node_id": "MDQ6VXNlcjQ2OTI2NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/469264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasaxc", "html_url": "https://github.com/fasaxc", "followers_url": "https://api.github.com/users/fasaxc/followers", "following_url": "https://api.github.com/users/fasaxc/following{/other_user}", "gists_url": "https://api.github.com/users/fasaxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasaxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasaxc/subscriptions", "organizations_url": "https://api.github.com/users/fasaxc/orgs", "repos_url": "https://api.github.com/users/fasaxc/repos", "events_url": "https://api.github.com/users/fasaxc/events{/privacy}", "received_events_url": "https://api.github.com/users/fasaxc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870688, "node_id": "MDU6TGFiZWw1Njg3MDY4OA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 56870690, "node_id": "MDU6TGFiZWw1Njg3MDY5MA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-29T10:26:10Z", "updated_at": "2017-06-17T13:15:08Z", "closed_at": "2017-06-17T13:15:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We have code to catch ReadTimeoutError and wrap as EtcdWatchTimeout:\n\n```\n                    if (isinstance(params, dict) and\n                        params.get(\"wait\") == \"true\" and\n                        isinstance(e,\n                                   urllib3.exceptions.ReadTimeoutError)):\n                        _log.debug(\"Watch timed out.\")\n                        raise etcd.EtcdWatchTimedOut(\n                            \"Watch timed out: %r\" % e,\n                            cause=e\n                        )\n```\n\nBut, at least with urllib3 1.10.2 on RedHat, urllib3 can raise MaxRetryError (with a cause of ReadTimeoutError) on this code path instead.  We should catch that too.\n\nI'm not sure why we get MaxRetryError; the issue could be that we're misconfiguring urllib3 so that it retries on a watch, which we probably don't want.  Or it may just be a difference between urllib3 versions.  The except block was added against 1.7.1-1ubuntu4, which is the version that ships with Ubuntu 14.04, IIRC.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/152", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/152/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/152/events", "html_url": "https://github.com/jplana/python-etcd/issues/152", "id": 123696523, "node_id": "MDU6SXNzdWUxMjM2OTY1MjM=", "number": 152, "title": "Machine cache is refreshed too often during api_execute", "user": {"login": "alexeyklyukin", "id": 339913, "node_id": "MDQ6VXNlcjMzOTkxMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/339913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexeyklyukin", "html_url": "https://github.com/alexeyklyukin", "followers_url": "https://api.github.com/users/alexeyklyukin/followers", "following_url": "https://api.github.com/users/alexeyklyukin/following{/other_user}", "gists_url": "https://api.github.com/users/alexeyklyukin/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexeyklyukin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexeyklyukin/subscriptions", "organizations_url": "https://api.github.com/users/alexeyklyukin/orgs", "repos_url": "https://api.github.com/users/alexeyklyukin/repos", "events_url": "https://api.github.com/users/alexeyklyukin/events{/privacy}", "received_events_url": "https://api.github.com/users/alexeyklyukin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870688, "node_id": "MDU6TGFiZWw1Njg3MDY4OA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-23T17:34:36Z", "updated_at": "2017-02-12T18:17:15Z", "closed_at": "2017-02-12T18:17:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think https://github.com/jplana/python-etcd/commit/dd38063e371eec384907c8220366fc836bde6a00#diff-919ba333781467b5a5d83ef686c677e3R834 moved the logic triggered by \n\n```\nif some_requested_failed\n    ....\n```\n\ninside the loop that runs until it gets the successful response or exhaust all candidates (called from api_execute or api_execute_json) by mistake.\n\nAt least the `some_request_failed` flag is never cleaned up in the aforementioned loop, leading to updating the machines cache one extra time if the successful request follows the unsuccessful ones, and removing the perfectly valid url afterwards.\n\nSince self.machines will walk through the list of candidates inside the self._machines_cache recursively until it finds the first suitable one, there is no reason to call it in each iteration of the loop.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/149", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/149/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/149/events", "html_url": "https://github.com/jplana/python-etcd/issues/149", "id": 121878378, "node_id": "MDU6SXNzdWUxMjE4NzgzNzg=", "number": 149, "title": "Please push to PyPI", "user": {"login": "smurfix", "id": 236571, "node_id": "MDQ6VXNlcjIzNjU3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/236571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smurfix", "html_url": "https://github.com/smurfix", "followers_url": "https://api.github.com/users/smurfix/followers", "following_url": "https://api.github.com/users/smurfix/following{/other_user}", "gists_url": "https://api.github.com/users/smurfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/smurfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smurfix/subscriptions", "organizations_url": "https://api.github.com/users/smurfix/orgs", "repos_url": "https://api.github.com/users/smurfix/repos", "events_url": "https://api.github.com/users/smurfix/events{/privacy}", "received_events_url": "https://api.github.com/users/smurfix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-12T20:33:50Z", "updated_at": "2015-12-14T20:56:57Z", "closed_at": "2015-12-14T20:56:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "You seem to have forgotten to push 0.4.3 to PyPI.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/133", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/133/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/133/events", "html_url": "https://github.com/jplana/python-etcd/issues/133", "id": 110257271, "node_id": "MDU6SXNzdWUxMTAyNTcyNzE=", "number": 133, "title": "Can you please make a new release?", "user": {"login": "nbartos", "id": 923926, "node_id": "MDQ6VXNlcjkyMzkyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/923926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbartos", "html_url": "https://github.com/nbartos", "followers_url": "https://api.github.com/users/nbartos/followers", "following_url": "https://api.github.com/users/nbartos/following{/other_user}", "gists_url": "https://api.github.com/users/nbartos/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbartos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbartos/subscriptions", "organizations_url": "https://api.github.com/users/nbartos/orgs", "repos_url": "https://api.github.com/users/nbartos/repos", "events_url": "https://api.github.com/users/nbartos/events{/privacy}", "received_events_url": "https://api.github.com/users/nbartos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-07T15:51:42Z", "updated_at": "2015-10-08T21:29:08Z", "closed_at": "2015-10-08T21:29:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm working on Project Calico, and I would really like to be able to have everyone use a released version of python-etcd, instead of a Calico-specific or nonreleased version.  Now that the required patches have landed in master, would it be too much to ask to get a new release up on pypi?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/132", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/132/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/132/events", "html_url": "https://github.com/jplana/python-etcd/issues/132", "id": 110171220, "node_id": "MDU6SXNzdWUxMTAxNzEyMjA=", "number": 132, "title": "Log spam when reads (expectedly) time out", "user": {"login": "fasaxc", "id": 469264, "node_id": "MDQ6VXNlcjQ2OTI2NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/469264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasaxc", "html_url": "https://github.com/fasaxc", "followers_url": "https://api.github.com/users/fasaxc/followers", "following_url": "https://api.github.com/users/fasaxc/following{/other_user}", "gists_url": "https://api.github.com/users/fasaxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasaxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasaxc/subscriptions", "organizations_url": "https://api.github.com/users/fasaxc/orgs", "repos_url": "https://api.github.com/users/fasaxc/repos", "events_url": "https://api.github.com/users/fasaxc/events{/privacy}", "received_events_url": "https://api.github.com/users/fasaxc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-07T08:03:58Z", "updated_at": "2015-10-14T15:34:21Z", "closed_at": "2015-10-14T15:34:21Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "If a read times out, we generate this error-level log:\n\n```\n2015-10-07 08:57:24,034 [ERROR][51716/5] etcd.client 783: Request to server http://localhost:4001 failed: ReadTimeoutError(\"HTTPConnectionPool(host='localhost', port=4001): Read timed out.\",)\n```\n\nWhen doing a watch, such read timeouts are expected so it's not really an error.  That makes the log a lot less useful when there really is an error.\n\nI'd like to fix that by passing a flag to api_execute that tells it whether a ReadTimeout is expected (or by checking for wait=True int eh arguments) and suppressing the error.  WDYT?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/131", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/131/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/131/events", "html_url": "https://github.com/jplana/python-etcd/issues/131", "id": 107860014, "node_id": "MDU6SXNzdWUxMDc4NjAwMTQ=", "number": 131, "title": "when python-etcd read key , meet a problem ", "user": {"login": "rfyiamcool", "id": 3785409, "node_id": "MDQ6VXNlcjM3ODU0MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3785409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfyiamcool", "html_url": "https://github.com/rfyiamcool", "followers_url": "https://api.github.com/users/rfyiamcool/followers", "following_url": "https://api.github.com/users/rfyiamcool/following{/other_user}", "gists_url": "https://api.github.com/users/rfyiamcool/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfyiamcool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfyiamcool/subscriptions", "organizations_url": "https://api.github.com/users/rfyiamcool/orgs", "repos_url": "https://api.github.com/users/rfyiamcool/repos", "events_url": "https://api.github.com/users/rfyiamcool/events{/privacy}", "received_events_url": "https://api.github.com/users/rfyiamcool/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-23T06:44:29Z", "updated_at": "2015-10-14T15:35:08Z", "closed_at": "2015-10-14T15:35:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "python-etcd have this method .\n\nclient.read('/quantom/buzz')   if '/quantom/buzz' is not in etcd,   no raise  key exception \u3002\n\n```\nEtcdKeyNotFound: Key not found : /quantom\n\n```\n\nmust Follow this to do \uff1f \n\n```\ntry:\n    c.read('/quantom/')\nexcept etcd.EtcdKeyNotFound:\n    print 123\n```\n\nthanks U.... \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/130", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/130/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/130/events", "html_url": "https://github.com/jplana/python-etcd/issues/130", "id": 107651341, "node_id": "MDU6SXNzdWUxMDc2NTEzNDE=", "number": 130, "title": "If I use this method to monitor, I will not lose data ?", "user": {"login": "rfyiamcool", "id": 3785409, "node_id": "MDQ6VXNlcjM3ODU0MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3785409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfyiamcool", "html_url": "https://github.com/rfyiamcool", "followers_url": "https://api.github.com/users/rfyiamcool/followers", "following_url": "https://api.github.com/users/rfyiamcool/following{/other_user}", "gists_url": "https://api.github.com/users/rfyiamcool/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfyiamcool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfyiamcool/subscriptions", "organizations_url": "https://api.github.com/users/rfyiamcool/orgs", "repos_url": "https://api.github.com/users/rfyiamcool/repos", "events_url": "https://api.github.com/users/rfyiamcool/events{/privacy}", "received_events_url": "https://api.github.com/users/rfyiamcool/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-22T06:06:54Z", "updated_at": "2015-09-22T13:49:40Z", "closed_at": "2015-09-22T13:49:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "for event in client.eternal_watch('/nodes',recursive = True):\n    print event.action\n\nIf I use this method to monitor, I will not lose data ?\n\nOf course, I tested the next, no loss of data .However, I still want to find you to confirm this .\n\nThanks U !\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/129", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/129/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/129/events", "html_url": "https://github.com/jplana/python-etcd/issues/129", "id": 107651110, "node_id": "MDU6SXNzdWUxMDc2NTExMTA=", "number": 129, "title": "the etcd client should support the stats API", "user": {"login": "rfyiamcool", "id": 3785409, "node_id": "MDQ6VXNlcjM3ODU0MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3785409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfyiamcool", "html_url": "https://github.com/rfyiamcool", "followers_url": "https://api.github.com/users/rfyiamcool/followers", "following_url": "https://api.github.com/users/rfyiamcool/following{/other_user}", "gists_url": "https://api.github.com/users/rfyiamcool/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfyiamcool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfyiamcool/subscriptions", "organizations_url": "https://api.github.com/users/rfyiamcool/orgs", "repos_url": "https://api.github.com/users/rfyiamcool/repos", "events_url": "https://api.github.com/users/rfyiamcool/events{/privacy}", "received_events_url": "https://api.github.com/users/rfyiamcool/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-22T06:03:37Z", "updated_at": "2015-09-22T06:03:59Z", "closed_at": "2015-09-22T06:03:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently the etcd client supports the members and k/v endpoints, there should be equal support the stats endpoints.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/128", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/128/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/128/events", "html_url": "https://github.com/jplana/python-etcd/issues/128", "id": 107651054, "node_id": "MDU6SXNzdWUxMDc2NTEwNTQ=", "number": 128, "title": "etcdserver: failed to purge snap file", "user": {"login": "rfyiamcool", "id": 3785409, "node_id": "MDQ6VXNlcjM3ODU0MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3785409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfyiamcool", "html_url": "https://github.com/rfyiamcool", "followers_url": "https://api.github.com/users/rfyiamcool/followers", "following_url": "https://api.github.com/users/rfyiamcool/following{/other_user}", "gists_url": "https://api.github.com/users/rfyiamcool/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfyiamcool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfyiamcool/subscriptions", "organizations_url": "https://api.github.com/users/rfyiamcool/orgs", "repos_url": "https://api.github.com/users/rfyiamcool/repos", "events_url": "https://api.github.com/users/rfyiamcool/events{/privacy}", "received_events_url": "https://api.github.com/users/rfyiamcool/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-22T06:02:52Z", "updated_at": "2015-09-22T13:48:37Z", "closed_at": "2015-09-22T13:48:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use etcd v2.0.5 for Windows 64 bits (Windows 7 and 8.1), and after some hours, etcd crashes with this error message:\n\n etcdserver: failed to purge wal file remove etcd-data/member/wal/0000000000000002-0000000000004e23.wal: The process cannot access the file because it is being used by another process.\nIf I try to restart etcd, I get the same error.\nI checked: this file is not used by any process, I could remove it manually and etcd could restart normally.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/123", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/123/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/123/events", "html_url": "https://github.com/jplana/python-etcd/issues/123", "id": 105991670, "node_id": "MDU6SXNzdWUxMDU5OTE2NzA=", "number": 123, "title": "locking module has problem.", "user": {"login": "woshihaoren", "id": 4115501, "node_id": "MDQ6VXNlcjQxMTU1MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4115501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woshihaoren", "html_url": "https://github.com/woshihaoren", "followers_url": "https://api.github.com/users/woshihaoren/followers", "following_url": "https://api.github.com/users/woshihaoren/following{/other_user}", "gists_url": "https://api.github.com/users/woshihaoren/gists{/gist_id}", "starred_url": "https://api.github.com/users/woshihaoren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woshihaoren/subscriptions", "organizations_url": "https://api.github.com/users/woshihaoren/orgs", "repos_url": "https://api.github.com/users/woshihaoren/repos", "events_url": "https://api.github.com/users/woshihaoren/events{/privacy}", "received_events_url": "https://api.github.com/users/woshihaoren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-11T11:24:56Z", "updated_at": "2019-06-25T06:20:49Z", "closed_at": "2015-09-20T10:37:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "python: 2.7.5\netcd: 2.2.0\n\nclient = etcd.Client()\nlock = etcd.Lock(client, 'my_lock_name')\nlock.acquire(blocking=True, lock_ttl=None) \n\n[root@localhost mnt]# python etcd_test.py \nTraceback (most recent call last):\n  File \"etcd_test.py\", line 9, in <module>\n    lock.acquire(blocking=True, lock_ttl=None) \n  File \"/usr/lib/python2.7/site-packages/etcd/lock.py\", line 76, in acquire\n    return self._acquired(blocking=blocking, timeout=timeout)\n  File \"/usr/lib/python2.7/site-packages/etcd/lock.py\", line 103, in _acquired\n    locker, nearest = self._get_locker()\n  File \"/usr/lib/python2.7/site-packages/etcd/lock.py\", line 175, in _get_locker\n    raise etcd.EtcdLockExpired(u\"Lock not found\")\netcd.EtcdLockExpired: Lock not found\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/122", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/122/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/122/events", "html_url": "https://github.com/jplana/python-etcd/issues/122", "id": 105932044, "node_id": "MDU6SXNzdWUxMDU5MzIwNDQ=", "number": 122, "title": "python-etcd support batch write or read ?", "user": {"login": "rfyiamcool", "id": 3785409, "node_id": "MDQ6VXNlcjM3ODU0MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3785409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfyiamcool", "html_url": "https://github.com/rfyiamcool", "followers_url": "https://api.github.com/users/rfyiamcool/followers", "following_url": "https://api.github.com/users/rfyiamcool/following{/other_user}", "gists_url": "https://api.github.com/users/rfyiamcool/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfyiamcool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfyiamcool/subscriptions", "organizations_url": "https://api.github.com/users/rfyiamcool/orgs", "repos_url": "https://api.github.com/users/rfyiamcool/repos", "events_url": "https://api.github.com/users/rfyiamcool/events{/privacy}", "received_events_url": "https://api.github.com/users/rfyiamcool/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-11T02:13:58Z", "updated_at": "2015-09-21T19:40:42Z", "closed_at": "2015-09-21T19:40:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "python-etcd support batch write or read ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/119", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/119/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/119/events", "html_url": "https://github.com/jplana/python-etcd/issues/119", "id": 100430724, "node_id": "MDU6SXNzdWUxMDA0MzA3MjQ=", "number": 119, "title": "urllib3 isn't found like I'd expect", "user": {"login": "dannysauer", "id": 3950223, "node_id": "MDQ6VXNlcjM5NTAyMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3950223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannysauer", "html_url": "https://github.com/dannysauer", "followers_url": "https://api.github.com/users/dannysauer/followers", "following_url": "https://api.github.com/users/dannysauer/following{/other_user}", "gists_url": "https://api.github.com/users/dannysauer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannysauer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannysauer/subscriptions", "organizations_url": "https://api.github.com/users/dannysauer/orgs", "repos_url": "https://api.github.com/users/dannysauer/repos", "events_url": "https://api.github.com/users/dannysauer/events{/privacy}", "received_events_url": "https://api.github.com/users/dannysauer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-11T23:03:36Z", "updated_at": "2015-09-23T14:29:00Z", "closed_at": "2015-09-21T19:42:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this something that changed between Python 2.6 and 2.7, or something with a newer version of requests (which I just built from the latest github tag as well)?\n\n```\nPython 2.6.6 (r266:84292, Nov 21 2013, 10:50:32)\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-4)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import etcd\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.6/site-packages/etcd/__init__.py\", line 2, in <module>\n    from .client import Client\n  File \"/usr/lib/python2.6/site-packages/etcd/client.py\", line 17, in <module>\n    import urllib3\nImportError: No module named urllib3\n>>> import requests.packages.urllib3\n>>> requests.packages.urllib3\n<module 'requests.packages.urllib3' from 'requests/packages/urllib3/__init__.pyc'>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/116", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/116/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/116/events", "html_url": "https://github.com/jplana/python-etcd/issues/116", "id": 96739742, "node_id": "MDU6SXNzdWU5NjczOTc0Mg==", "number": 116, "title": "Cannot use the \"watch\" with decode server response error", "user": {"login": "mr-kelly", "id": 520852, "node_id": "MDQ6VXNlcjUyMDg1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/520852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mr-kelly", "html_url": "https://github.com/mr-kelly", "followers_url": "https://api.github.com/users/mr-kelly/followers", "following_url": "https://api.github.com/users/mr-kelly/following{/other_user}", "gists_url": "https://api.github.com/users/mr-kelly/gists{/gist_id}", "starred_url": "https://api.github.com/users/mr-kelly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mr-kelly/subscriptions", "organizations_url": "https://api.github.com/users/mr-kelly/orgs", "repos_url": "https://api.github.com/users/mr-kelly/repos", "events_url": "https://api.github.com/users/mr-kelly/events{/privacy}", "received_events_url": "https://api.github.com/users/mr-kelly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-07-23T06:06:53Z", "updated_at": "2015-07-28T07:56:02Z", "closed_at": "2015-07-28T07:56:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://cloud.githubusercontent.com/assets/520852/8844117/f784a122-3143-11e5-8677-332c20955d6b.png)\n\netcd 2.0.13 windows-amd64\npython-etcd 0.3.3\npython 2.7\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/115", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/115/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/115/events", "html_url": "https://github.com/jplana/python-etcd/issues/115", "id": 94538856, "node_id": "MDU6SXNzdWU5NDUzODg1Ng==", "number": 115, "title": "Watch a key should wait forever!", "user": {"login": "wiliamsouza", "id": 215986, "node_id": "MDQ6VXNlcjIxNTk4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/215986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiliamsouza", "html_url": "https://github.com/wiliamsouza", "followers_url": "https://api.github.com/users/wiliamsouza/followers", "following_url": "https://api.github.com/users/wiliamsouza/following{/other_user}", "gists_url": "https://api.github.com/users/wiliamsouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiliamsouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiliamsouza/subscriptions", "organizations_url": "https://api.github.com/users/wiliamsouza/orgs", "repos_url": "https://api.github.com/users/wiliamsouza/repos", "events_url": "https://api.github.com/users/wiliamsouza/events{/privacy}", "received_events_url": "https://api.github.com/users/wiliamsouza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-12T06:23:17Z", "updated_at": "2015-07-28T12:18:02Z", "closed_at": "2015-07-28T08:06:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Watch a key should wait forever Not raise timeout.\n\n```\nn [7]: c.read('/users/created/callback', wait=True)\n---------------------------------------------------------------------------\ntimeout                                   Traceback (most recent call last)\n/home/wiliam/.virtualenvs/echo/lib/python3.4/site-packages/urllib3/response.py in read(self, amt, decode_content, cache_content)\n    238                     # cStringIO doesn't like amt=None\n--> 239                     data = self._fp.read()\n    240                     flush_decoder = True\n\n/home/wiliam/.pyenv/versions/3.4.3/lib/python3.4/http/client.py in read(self, amt)\n    505             if self.chunked:\n--> 506                 return self._readall_chunked()\n    507\n\n/home/wiliam/.pyenv/versions/3.4.3/lib/python3.4/http/client.py in _readall_chunked(self)\n    586                 try:\n--> 587                     chunk_left = self._read_next_chunk_size()\n    588                     if chunk_left == 0:\n\n/home/wiliam/.pyenv/versions/3.4.3/lib/python3.4/http/client.py in _read_next_chunk_size(self)\n    551         # Read the next chunk size from the file\n--> 552         line = self.fp.readline(_MAXLINE + 1)\n    553         if len(line) > _MAXLINE:\n\n/home/wiliam/.pyenv/versions/3.4.3/lib/python3.4/socket.py in readinto(self, b)\n    373             try:\n--> 374                 return self._sock.recv_into(b)\n    375             except timeout:\n\ntimeout: timed out\n\nDuring handling of the above exception, another exception occurred:\n\nReadTimeoutError                          Traceback (most recent call last)\n/home/wiliam/.virtualenvs/echo/lib/python3.4/site-packages/etcd/client.py in _result_from_response(self, response)\n    523         try:\n--> 524             res = json.loads(response.data.decode('utf-8'))\n    525             r = etcd.EtcdResult(**res)\n\n/home/wiliam/.virtualenvs/echo/lib/python3.4/site-packages/urllib3/response.py in data(self)\n    165         if self._fp:\n--> 166             return self.read(cache_content=True)\n    167\n\n/home/wiliam/.virtualenvs/echo/lib/python3.4/site-packages/urllib3/response.py in read(self, amt, decode_content, cache_content)\n    257                 # there is yet no clean way to get at it from this context.\n--> 258                 raise ReadTimeoutError(self._pool, None, 'Read timed out.')\n    259\n\nReadTimeoutError: HTTPConnectionPool(host='127.0.0.1', port=4001): Read timed out.\n\nDuring handling of the above exception, another exception occurred:\n\nEtcdException                             Traceback (most recent call last)\n<ipython-input-7-47b4a8c29981> in <module>()\n----> 1 c.read('/users/created/callback', wait=True)\n\n/home/wiliam/.virtualenvs/echo/lib/python3.4/site-packages/etcd/client.py in read(self, key, **kwdargs)\n    346         response = self.api_execute(\n    347             self.key_endpoint + key, self._MGET, params=params, timeout=timeout)\n--> 348         return self._result_from_response(response)\n    349\n    350     def delete(self, key, recursive=None, dir=None, **kwdargs):\n\n/home/wiliam/.virtualenvs/echo/lib/python3.4/site-packages/etcd/client.py in _result_from_response(self, response)\n    530         except Exception as e:\n    531             raise etcd.EtcdException(\n--> 532                 'Unable to decode server response: %s' % e)\n    533\n    534     def _next_server(self):\n\nEtcdException: Unable to decode server response: HTTPConnectionPool(host='127.0.0.1', port=4001): Read timed out.\n\nIn [8]:\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/110", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/110/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/110/events", "html_url": "https://github.com/jplana/python-etcd/issues/110", "id": 87355520, "node_id": "MDU6SXNzdWU4NzM1NTUyMA==", "number": 110, "title": "Connection pooling doesn't work for 127.0.0.1 connections", "user": {"login": "mwitkow", "id": 9655971, "node_id": "MDQ6VXNlcjk2NTU5NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9655971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwitkow", "html_url": "https://github.com/mwitkow", "followers_url": "https://api.github.com/users/mwitkow/followers", "following_url": "https://api.github.com/users/mwitkow/following{/other_user}", "gists_url": "https://api.github.com/users/mwitkow/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwitkow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwitkow/subscriptions", "organizations_url": "https://api.github.com/users/mwitkow/orgs", "repos_url": "https://api.github.com/users/mwitkow/repos", "events_url": "https://api.github.com/users/mwitkow/events{/privacy}", "received_events_url": "https://api.github.com/users/mwitkow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-11T13:54:46Z", "updated_at": "2015-06-19T09:05:42Z", "closed_at": "2015-06-19T09:05:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There's a bug in `python-gcloud` in how it handles `HTTPConnectionPool`.\n\nThe constructor of `Client` calls \n\n``` python\n    self.http = urllib3.PoolManager(num_pools=10, **kw)\n```\n\nThe `PoolManager` is what managed per-host connection pools (usually `HTTPConnectionPool` or `HTTPSConnectionPool`). These by default have `maxsize=1`, meaning that it will only keep one connection per host. If multiple connections are sent to the same `Client`, this leads to `No JSON decoded`, because the connection will be rejected.\n\n`Client` should allow for pooling for localhost connections.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/109", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/109/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/109/events", "html_url": "https://github.com/jplana/python-etcd/issues/109", "id": 85973517, "node_id": "MDU6SXNzdWU4NTk3MzUxNw==", "number": 109, "title": "client.watch doesn't work as expected.", "user": {"login": "ppanagiotis", "id": 6126076, "node_id": "MDQ6VXNlcjYxMjYwNzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6126076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppanagiotis", "html_url": "https://github.com/ppanagiotis", "followers_url": "https://api.github.com/users/ppanagiotis/followers", "following_url": "https://api.github.com/users/ppanagiotis/following{/other_user}", "gists_url": "https://api.github.com/users/ppanagiotis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppanagiotis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppanagiotis/subscriptions", "organizations_url": "https://api.github.com/users/ppanagiotis/orgs", "repos_url": "https://api.github.com/users/ppanagiotis/repos", "events_url": "https://api.github.com/users/ppanagiotis/events{/privacy}", "received_events_url": "https://api.github.com/users/ppanagiotis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-08T00:57:24Z", "updated_at": "2015-06-19T09:30:46Z", "closed_at": "2015-06-19T09:30:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying the following as described  [here](http://python-etcd.readthedocs.org/en/latest/#get-a-key) :\n\n``` python\nr = client.watch('/test_folder')\n```\n\nand then\n\n``` python\nclient.set('/test_folder/test', 'abc')\n```\n\nAlthought the value is set correctly the watch command never returned.\n\nI tried to use \n\n``` python\nclient.read('/test_folder', wait=True)\n```\n\n but I got the same results. :-(\n\nAny suggestions?\nThank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/107", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/107/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/107/events", "html_url": "https://github.com/jplana/python-etcd/issues/107", "id": 84116006, "node_id": "MDU6SXNzdWU4NDExNjAwNg==", "number": 107, "title": "mkdir fails", "user": {"login": "bugi", "id": 217478, "node_id": "MDQ6VXNlcjIxNzQ3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/217478?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugi", "html_url": "https://github.com/bugi", "followers_url": "https://api.github.com/users/bugi/followers", "following_url": "https://api.github.com/users/bugi/following{/other_user}", "gists_url": "https://api.github.com/users/bugi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugi/subscriptions", "organizations_url": "https://api.github.com/users/bugi/orgs", "repos_url": "https://api.github.com/users/bugi/repos", "events_url": "https://api.github.com/users/bugi/events{/privacy}", "received_events_url": "https://api.github.com/users/bugi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-02T17:23:47Z", "updated_at": "2015-06-09T08:23:53Z", "closed_at": "2015-06-09T08:23:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Under [set a key](http://python-etcd.readthedocs.org/en/latest/#set-a-key) in the docs it's mentioned that you can perform a mkdir operation:\n\n```\n# mkdir\nclient.write('/nodes/queue', dir=True)\n```\n\nThat fails for me with\n\n```\nTypeError: write() takes at least 3 non-keyword arguments (2 given)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/102", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/102/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/102/events", "html_url": "https://github.com/jplana/python-etcd/issues/102", "id": 77482686, "node_id": "MDU6SXNzdWU3NzQ4MjY4Ng==", "number": 102, "title": "Streaming watch?", "user": {"login": "fasaxc", "id": 469264, "node_id": "MDQ6VXNlcjQ2OTI2NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/469264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasaxc", "html_url": "https://github.com/fasaxc", "followers_url": "https://api.github.com/users/fasaxc/followers", "following_url": "https://api.github.com/users/fasaxc/following{/other_user}", "gists_url": "https://api.github.com/users/fasaxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasaxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasaxc/subscriptions", "organizations_url": "https://api.github.com/users/fasaxc/orgs", "repos_url": "https://api.github.com/users/fasaxc/repos", "events_url": "https://api.github.com/users/fasaxc/events{/privacy}", "received_events_url": "https://api.github.com/users/fasaxc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-05-18T03:40:18Z", "updated_at": "2017-02-13T07:47:48Z", "closed_at": "2017-02-13T07:47:48Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I have a proof-of-concept version of `eternal_watch()` that uses the streaming API, which I could clean up as a pull request.  The streaming API is much more efficient, especially over TLS.  Unfortunately, I think that API is 2.0.x+ only.  \n\nAre you interested in such a contribution?  Do I need to make sure it supports older versions than 2.0.x?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/100", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/100/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/100/events", "html_url": "https://github.com/jplana/python-etcd/issues/100", "id": 75441536, "node_id": "MDU6SXNzdWU3NTQ0MTUzNg==", "number": 100, "title": "pyOpenSSL required only for tests", "user": {"login": "lechat", "id": 154792, "node_id": "MDQ6VXNlcjE1NDc5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/154792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lechat", "html_url": "https://github.com/lechat", "followers_url": "https://api.github.com/users/lechat/followers", "following_url": "https://api.github.com/users/lechat/following{/other_user}", "gists_url": "https://api.github.com/users/lechat/gists{/gist_id}", "starred_url": "https://api.github.com/users/lechat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lechat/subscriptions", "organizations_url": "https://api.github.com/users/lechat/orgs", "repos_url": "https://api.github.com/users/lechat/repos", "events_url": "https://api.github.com/users/lechat/events{/privacy}", "received_events_url": "https://api.github.com/users/lechat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-12T03:16:30Z", "updated_at": "2015-07-23T06:37:44Z", "closed_at": "2015-07-23T06:37:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\npyOpenSSL library is required only for unit tests, but listed as a requirement for installation. This prevents installing python-etcd on RHEL5 which have outdated OpenSSL libraries.\n\nPerhaps pyOpenSSL could be moved to test dependencies.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/95", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/95/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/95/events", "html_url": "https://github.com/jplana/python-etcd/issues/95", "id": 71044876, "node_id": "MDU6SXNzdWU3MTA0NDg3Ng==", "number": 95, "title": "Integration tests don't work with etcd 2.x", "user": {"login": "lavagetto", "id": 1475424, "node_id": "MDQ6VXNlcjE0NzU0MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1475424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavagetto", "html_url": "https://github.com/lavagetto", "followers_url": "https://api.github.com/users/lavagetto/followers", "following_url": "https://api.github.com/users/lavagetto/following{/other_user}", "gists_url": "https://api.github.com/users/lavagetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavagetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavagetto/subscriptions", "organizations_url": "https://api.github.com/users/lavagetto/orgs", "repos_url": "https://api.github.com/users/lavagetto/repos", "events_url": "https://api.github.com/users/lavagetto/events{/privacy}", "received_events_url": "https://api.github.com/users/lavagetto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 204317618, "node_id": "MDU6TGFiZWwyMDQzMTc2MTg=", "url": "https://api.github.com/repos/jplana/python-etcd/labels/etcd%202.x%20support", "name": "etcd 2.x support", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-26T10:07:08Z", "updated_at": "2015-06-19T09:05:54Z", "closed_at": "2015-06-19T09:05:54Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This is because the command line options have changed. We should change the tests to allow those to work..\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/93", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/93/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/93/events", "html_url": "https://github.com/jplana/python-etcd/issues/93", "id": 71034015, "node_id": "MDU6SXNzdWU3MTAzNDAxNQ==", "number": 93, "title": "/v2/leader doesn't work in newer etcd versions", "user": {"login": "lavagetto", "id": 1475424, "node_id": "MDQ6VXNlcjE0NzU0MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1475424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavagetto", "html_url": "https://github.com/lavagetto", "followers_url": "https://api.github.com/users/lavagetto/followers", "following_url": "https://api.github.com/users/lavagetto/following{/other_user}", "gists_url": "https://api.github.com/users/lavagetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavagetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavagetto/subscriptions", "organizations_url": "https://api.github.com/users/lavagetto/orgs", "repos_url": "https://api.github.com/users/lavagetto/repos", "events_url": "https://api.github.com/users/lavagetto/events{/privacy}", "received_events_url": "https://api.github.com/users/lavagetto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 204317618, "node_id": "MDU6TGFiZWwyMDQzMTc2MTg=", "url": "https://api.github.com/repos/jplana/python-etcd/labels/etcd%202.x%20support", "name": "etcd 2.x support", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-26T08:40:22Z", "updated_at": "2015-07-28T08:36:03Z", "closed_at": "2015-07-28T08:36:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In versions of etcd >= 2.x, /v2/leader is not a valid endpoint anymore.\n\nshould we maintain backwards compatibility or should we just drop it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/91", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/91/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/91/events", "html_url": "https://github.com/jplana/python-etcd/issues/91", "id": 70592349, "node_id": "MDU6SXNzdWU3MDU5MjM0OQ==", "number": 91, "title": "cluster's localhost IP must be 'localhost'", "user": {"login": "stand1921", "id": 12094403, "node_id": "MDQ6VXNlcjEyMDk0NDAz", "avatar_url": "https://avatars0.githubusercontent.com/u/12094403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stand1921", "html_url": "https://github.com/stand1921", "followers_url": "https://api.github.com/users/stand1921/followers", "following_url": "https://api.github.com/users/stand1921/following{/other_user}", "gists_url": "https://api.github.com/users/stand1921/gists{/gist_id}", "starred_url": "https://api.github.com/users/stand1921/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stand1921/subscriptions", "organizations_url": "https://api.github.com/users/stand1921/orgs", "repos_url": "https://api.github.com/users/stand1921/repos", "events_url": "https://api.github.com/users/stand1921/events{/privacy}", "received_events_url": "https://api.github.com/users/stand1921/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-24T05:33:10Z", "updated_at": "2015-04-24T10:34:00Z", "closed_at": "2015-04-24T10:34:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you want to connect a cluster etcd,\nyou need to write the localhost's IP like 'localhost' as follow:\n\nclient = etcd.Client(\n    host=(\n        ('localhost', 4001),            //localhost IP\n        ('192.168.1.33', 4001),     //other machine'IP of the cluster\n    allow_reconnect=True,\n)\n\nyou can\u2018t write the localhost's IP like '127.0.0.1' as follow, or the python-etcd will raise a exception:\n\nclient = etcd.Client(\n    host=(\n        ('127.0.0.1', 4001),\n        ('192.168.1.33', 4001),\n    allow_reconnect=True,\n)\n\nthe problem is in python-etcd/client.py line 586:\n      self._machine_cache = self.machines\nbecause the self.machines function return 'localhost' instead of '127.0.0.1' if any machine of the cluster is on your host\n\nAny idea to solve the problem? I can write some code to fix it if anyone have a good idea.\nOr at least mention that in the doc\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/87", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/87/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/87/events", "html_url": "https://github.com/jplana/python-etcd/issues/87", "id": 69030052, "node_id": "MDU6SXNzdWU2OTAzMDA1Mg==", "number": 87, "title": "watch() recursive flag defaults to None, which is not properly handled", "user": {"login": "fasaxc", "id": 469264, "node_id": "MDQ6VXNlcjQ2OTI2NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/469264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasaxc", "html_url": "https://github.com/fasaxc", "followers_url": "https://api.github.com/users/fasaxc/followers", "following_url": "https://api.github.com/users/fasaxc/following{/other_user}", "gists_url": "https://api.github.com/users/fasaxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasaxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasaxc/subscriptions", "organizations_url": "https://api.github.com/users/fasaxc/orgs", "repos_url": "https://api.github.com/users/fasaxc/repos", "events_url": "https://api.github.com/users/fasaxc/events{/privacy}", "received_events_url": "https://api.github.com/users/fasaxc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-16T23:32:16Z", "updated_at": "2015-04-23T09:16:22Z", "closed_at": "2015-04-23T09:16:22Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In 0.3.3, passing `True` or `False` for the recursive parameter of watch() works as expected but omitting it defaults to None, which gets stringified and passed to the server, resulting in a bad request.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/85", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/85/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/85/events", "html_url": "https://github.com/jplana/python-etcd/issues/85", "id": 68446686, "node_id": "MDU6SXNzdWU2ODQ0NjY4Ng==", "number": 85, "title": "client.update does not fail if value changed.", "user": {"login": "pheaver", "id": 44237, "node_id": "MDQ6VXNlcjQ0MjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/44237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pheaver", "html_url": "https://github.com/pheaver", "followers_url": "https://api.github.com/users/pheaver/followers", "following_url": "https://api.github.com/users/pheaver/following{/other_user}", "gists_url": "https://api.github.com/users/pheaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/pheaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pheaver/subscriptions", "organizations_url": "https://api.github.com/users/pheaver/orgs", "repos_url": "https://api.github.com/users/pheaver/repos", "events_url": "https://api.github.com/users/pheaver/events{/privacy}", "received_events_url": "https://api.github.com/users/pheaver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-14T17:16:48Z", "updated_at": "2015-04-16T04:33:41Z", "closed_at": "2015-04-16T04:33:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "This block of code will correctly fail if the /test node is modified by something else between reading and writing:\n\n```\nx = client.read('/test')\ntime.sleep(5)\nclient.write('/test', int(x.value) + 1, prevIndex = x.modifiedIndex)\n```\n\nBut this code succeeds, and overwrites the value that was set elsewhere:\n\n```\nx = client.read('/test')\ntime.sleep(5)\nx.value = int(x.value) + 1\nclient.update(x)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/84", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/84/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/84/events", "html_url": "https://github.com/jplana/python-etcd/issues/84", "id": 67553123, "node_id": "MDU6SXNzdWU2NzU1MzEyMw==", "number": 84, "title": "How to config etcd cluster", "user": {"login": "dreameryan", "id": 11849837, "node_id": "MDQ6VXNlcjExODQ5ODM3", "avatar_url": "https://avatars1.githubusercontent.com/u/11849837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreameryan", "html_url": "https://github.com/dreameryan", "followers_url": "https://api.github.com/users/dreameryan/followers", "following_url": "https://api.github.com/users/dreameryan/following{/other_user}", "gists_url": "https://api.github.com/users/dreameryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreameryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreameryan/subscriptions", "organizations_url": "https://api.github.com/users/dreameryan/orgs", "repos_url": "https://api.github.com/users/dreameryan/repos", "events_url": "https://api.github.com/users/dreameryan/events{/privacy}", "received_events_url": "https://api.github.com/users/dreameryan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-04-10T09:35:37Z", "updated_at": "2015-04-16T02:00:40Z", "closed_at": "2015-04-16T02:00:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to build up etcd cluster according to:\nhttps://github.com/coreos/etcd/blob/master/Documentation/clustering.md\nThe static way.\n\nI run following command on 2 machines:\n/home/idcuser/HATest/etcd-v2.0.9-linux-amd64/etcd -name monitorserver1 -listen-peer-urls http://10.120.73.86:7001 -listen-client-urls http://10.120.73.86:4001 -initial-cluster-token monitorserver-cluster -initial-advertise-peer-urls http://10.120.73.86:7001 -initial-cluster monitorserver1=http://10.120.73.86:7001,monitorserve2=http://10.112.206.10:2380 -initial-cluster-state new &>> /home/idcuser/HATest/etcd.log &\n\n/home/idcuser/HATest/etcd-v2.0.9-linux-amd64/etcd -name monitorserver2 -listen-peer-urls http://10.112.206.10:2380 -listen-client-urls http://10.112.206.10:2379 -initial-cluster-token monitorserver-cluster -initial-advertise-peer-urls http://10.112.206.10:2380 -initial-cluster monitorserver1=http://10.120.73.86:7001,monitorserver2=http://10.112.206.10:2380 -initial-cluster-state new &>> /home/idcuser/HATest/etcd.log &\n\nBut when I run client.machines. It will output \nmachines [u'http://localhost:2379', u'http://localhost:2379', u'http://localhost:4001', u'http://localhost:4001']\nSeems it still find cluster machines from localhost.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/83", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/83/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/83/events", "html_url": "https://github.com/jplana/python-etcd/issues/83", "id": 67076630, "node_id": "MDU6SXNzdWU2NzA3NjYzMA==", "number": 83, "title": "python etcd.EtcdException: Unable to decode server response", "user": {"login": "dreameryan", "id": 11849837, "node_id": "MDQ6VXNlcjExODQ5ODM3", "avatar_url": "https://avatars1.githubusercontent.com/u/11849837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreameryan", "html_url": "https://github.com/dreameryan", "followers_url": "https://api.github.com/users/dreameryan/followers", "following_url": "https://api.github.com/users/dreameryan/following{/other_user}", "gists_url": "https://api.github.com/users/dreameryan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreameryan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreameryan/subscriptions", "organizations_url": "https://api.github.com/users/dreameryan/orgs", "repos_url": "https://api.github.com/users/dreameryan/repos", "events_url": "https://api.github.com/users/dreameryan/events{/privacy}", "received_events_url": "https://api.github.com/users/dreameryan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-04-08T08:27:20Z", "updated_at": "2015-04-24T07:58:50Z", "closed_at": "2015-04-24T07:58:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "With etcd-v2.0.9-linux-amd64.\nI run these 2 etcd process on two machine:\n/home/idcuser/HATest/etcd-v2.0.9-linux-amd64/etcd -name monitorserver1 -listen-peer-urls http://10.120.73.86:7001 -listen-client-urls http://10.120.73.86:4001 -initial-cluster-token monitorserver-cluster -initial-advertise-peer-urls http://10.120.73.86:7001 -initial-cluster monitorserver1=http://10.120.73.86:7001,monitorserve2=http://10.112.206.10:2380 -initial-cluster-state new &>> /home/idcuser/HATest/etcd.log &\n\n/home/idcuser/HATest/etcd-v2.0.9-linux-amd64/etcd -name monitorserver2 -listen-peer-urls http://10.112.206.10:2380 -listen-client-urls http://10.112.206.10:2379 -initial-cluster-token monitorserver-cluster -initial-advertise-peer-urls http://10.112.206.10:2380 -initial-cluster monitorserver1=http://10.120.73.86:7001,monitorserver2=http://10.112.206.10:2380 -initial-cluster-state new &>> /home/idcuser/HATest/etcd.log &\n\nThen in one machine 10.120.73.86:\nI run following command through python:\netcd= etcd.Client(host='10.120.73.86', port=4001)\nleader = etcd.read('/ms/leader/name' ).value\netcd.write( '/ms/leader/name', serverName, ttl=TTL )\n\nException throws when I calling etcd.write( '/ms/leader/name', serverName, ttl=TTL )\nTraceback (most recent call last):\nFile \"/home/idcuser/HATest/HA_monitor2.python\", line 118, in\nmain()\nFile \"/home/idcuser/HATest/HA_monitor2.python\", line 110, in main\nrun()\nFile \"/home/idcuser/HATest/HA_monitor2.python\", line 34, in run\nleaderSelect()\nFile \"/home/idcuser/HATest/HA_monitor2.python\", line 50, in leaderSelect\nbeLeader()\nFile \"/home/idcuser/HATest/HA_monitor2.python\", line 66, in beLeader\netcd.write( '/ms/leader/name', serverName, ttl=TTL ) # value=xxxx\nFile \"/usr/lib/python2.7/site-packages/python_etcd-0.3.2-py2.7.egg/etcd/client.py\", line 272, in write\nresponse = self.api_execute(path, method, params=params)\nFile \"/usr/lib/python2.7/site-packages/python_etcd-0.3.2-py2.7.egg/etcd/client.py\", line 587, in api_execute\nreturn self.handle_server_response(response)\nFile \"/usr/lib/python2.7/site-packages/python_etcd-0.3.2-py2.7.egg/etcd/client.py\", line 603, in handle_server_response\netcd.EtcdError.handle(**r)\nFile \"/usr/lib/python2.7/site-packages/python_etcd-0.3.2-py2.7.egg/etcd/__init.py\", line 184, in handle\nraise exc(msg, payload)\netcd.EtcdException: Unable to decode server response\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/82", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/82/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/82/events", "html_url": "https://github.com/jplana/python-etcd/issues/82", "id": 65663694, "node_id": "MDU6SXNzdWU2NTY2MzY5NA==", "number": 82, "title": "Project active?", "user": {"login": "durzo", "id": 346775, "node_id": "MDQ6VXNlcjM0Njc3NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/346775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durzo", "html_url": "https://github.com/durzo", "followers_url": "https://api.github.com/users/durzo/followers", "following_url": "https://api.github.com/users/durzo/following{/other_user}", "gists_url": "https://api.github.com/users/durzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/durzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durzo/subscriptions", "organizations_url": "https://api.github.com/users/durzo/orgs", "repos_url": "https://api.github.com/users/durzo/repos", "events_url": "https://api.github.com/users/durzo/events{/privacy}", "received_events_url": "https://api.github.com/users/durzo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-01T11:30:14Z", "updated_at": "2015-04-12T11:21:26Z", "closed_at": "2015-04-12T11:21:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use this library in our company and I noticed this project hasn't had any updates in some time.. can anyone shed some light on if it is still actively maintained and will receive updates to ensure it continues working with future versions of etcd?\n\nIf not, can anyone suggest another python library?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/81", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/81/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/81/events", "html_url": "https://github.com/jplana/python-etcd/issues/81", "id": 65588276, "node_id": "MDU6SXNzdWU2NTU4ODI3Ng==", "number": 81, "title": "Incorrect exceptions and timeouts with wait=True", "user": {"login": "fasaxc", "id": 469264, "node_id": "MDQ6VXNlcjQ2OTI2NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/469264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasaxc", "html_url": "https://github.com/fasaxc", "followers_url": "https://api.github.com/users/fasaxc/followers", "following_url": "https://api.github.com/users/fasaxc/following{/other_user}", "gists_url": "https://api.github.com/users/fasaxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasaxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasaxc/subscriptions", "organizations_url": "https://api.github.com/users/fasaxc/orgs", "repos_url": "https://api.github.com/users/fasaxc/repos", "events_url": "https://api.github.com/users/fasaxc/events{/privacy}", "received_events_url": "https://api.github.com/users/fasaxc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-01T02:34:31Z", "updated_at": "2017-06-17T13:00:30Z", "closed_at": "2017-06-17T13:00:30Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I try to wait on a directory key with a timeout of, say 1s.  If no updates to the key occur then the call times out after ~4s (not 1s as expected) and the exception is \"EtcdException: No more machines in the cluster\n\" rather than a dedicated Timeout exception.\n\n```\n>>> import etcd\n>>> c = etcd.Client(read_timeout=10)\n>>> c.read(\"/foobar\",waitIndex=88,wait=True,recursive=True,timeout=1)\nTraceback (most recent call last):\n  File \"<input>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 344, in read\n    self.key_endpoint + key, self._MGET, params=params, timeout=timeout)\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 576, in api_execute\n    self._base_uri = self._next_server()\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 534, in _next_server\n    raise etcd.EtcdException('No more machines in the cluster')\nEtcdException: No more machines in the cluster\n```\n\n```\n$ pip list | grep python-etcd\npython-etcd (0.3.2)\n$ pip list | grep urllib\nurllib3 (1.10.2)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/75", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/75/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/75/events", "html_url": "https://github.com/jplana/python-etcd/issues/75", "id": 52006582, "node_id": "MDU6SXNzdWU1MjAwNjU4Mg==", "number": 75, "title": "client hangs on write ", "user": {"login": "jwerak", "id": 606450, "node_id": "MDQ6VXNlcjYwNjQ1MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/606450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwerak", "html_url": "https://github.com/jwerak", "followers_url": "https://api.github.com/users/jwerak/followers", "following_url": "https://api.github.com/users/jwerak/following{/other_user}", "gists_url": "https://api.github.com/users/jwerak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwerak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwerak/subscriptions", "organizations_url": "https://api.github.com/users/jwerak/orgs", "repos_url": "https://api.github.com/users/jwerak/repos", "events_url": "https://api.github.com/users/jwerak/events{/privacy}", "received_events_url": "https://api.github.com/users/jwerak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-12-15T16:25:28Z", "updated_at": "2015-05-10T10:50:31Z", "closed_at": "2015-05-10T10:50:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \n\nI have trouble when writing data to etcd although I can read data without any problem. Would anyone know where the problem could be? \n\nI have following simple code: \n\n```\n#!/usr/bin/python\nimport etcd\n                                                                                                                                                                   client = etcd.Client(host = '127.0.0.1', port = 5000)\n\nprint client.read('/coreos_apps/marathon/dev')\nprint client.write('/writetest', 'TESTSTRING')\n```\n\nHere is my output after I interrupt program with ctrl+C\n\n```\n-> % python scripts/etcd_test.py<class 'etcd.EtcdResult'>({'newKey': False, 'raft_index': 64071, '_children': [], 'createdIndex': 6684, 'modifiedIndex': 6684, 'value': u'{\"ssh_port\": 224, \"count\": 1, \"version\": \"latest\", \"ssh_support\": true}', 'etcd_index': 16626, 'expiration': None, 'key': u'/coreos_apps/marathon/dev', 'ttl': None, 'action': u'get', 'dir': False})\n\n\n\n\n^CTraceback (most recent call last):\n  File \"scripts/etcd_test.py\", line 9, in <module>\n    print client.write('/writetest', 'TESTSTRING')\n  File \"/usr/lib/python2.7/site-packages/python_etcd-0.3.2-py2.7.egg/etcd/client.py\", line 272, in write\n    response = self.api_execute(path, method, params=params)\n  File \"/usr/lib/python2.7/site-packages/python_etcd-0.3.2-py2.7.egg/etcd/client.py\", line 575, in api_execute\n    redirect=self.allow_redirect)\n  File \"build/bdist.linux-x86_64/egg/urllib3/request.py\", line 135, in request_encode_body\n  File \"build/bdist.linux-x86_64/egg/urllib3/poolmanager.py\", line 174, in urlopen\n  File \"build/bdist.linux-x86_64/egg/urllib3/poolmanager.py\", line 153, in urlopen\n  File \"build/bdist.linux-x86_64/egg/urllib3/connectionpool.py\", line 516, in urlopen\n  File \"build/bdist.linux-x86_64/egg/urllib3/connectionpool.py\", line 308, in _make_request\n  File \"/usr/lib64/python2.7/httplib.py\", line 973, in request\n    self._send_request(method, url, body, headers)\n  File \"/usr/lib64/python2.7/httplib.py\", line 1007, in _send_request\n    self.endheaders(body)\n  File \"/usr/lib64/python2.7/httplib.py\", line 969, in endheaders\n    self._send_output(message_body)\n  File \"/usr/lib64/python2.7/httplib.py\", line 829, in _send_output\n    self.send(msg)\n  File \"/usr/lib64/python2.7/httplib.py\", line 791, in send\n    self.connect()\n  File \"build/bdist.linux-x86_64/egg/urllib3/connection.py\", line 154, in connect\n  File \"build/bdist.linux-x86_64/egg/urllib3/connection.py\", line 133, in _new_conn\n  File \"build/bdist.linux-x86_64/egg/urllib3/util/connection.py\", line 78, in create_connection\n  File \"/usr/lib64/python2.7/socket.py\", line 224, in meth\n    return getattr(self._sock,name)(*args)\nKeyboardInterrupt\n```\n\nEvery time it seems it hangs here: \n\n```\n  File \"/usr/lib/python2.7/site-packages/python_etcd-0.3.2-py2.7.egg/etcd/client.py\", line 272, in write\n    response = self.api_execute(path, method, params=params)\n```\n\nCould it be due to connection problem? Weird is that Read works without any problem.\n\nI have no problems writing to database using curl.\n\nMy Setup:\npython --version\nPython 2.7.5\n\netcd version 0.4.6\n\nWould you need any info for debugging ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/72", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/72/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/72/events", "html_url": "https://github.com/jplana/python-etcd/issues/72", "id": 48508988, "node_id": "MDU6SXNzdWU0ODUwODk4OA==", "number": 72, "title": "watch with timeout=None, will raise urllib3.exceptions.ProtocolError", "user": {"login": "sejust", "id": 2747551, "node_id": "MDQ6VXNlcjI3NDc1NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2747551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sejust", "html_url": "https://github.com/sejust", "followers_url": "https://api.github.com/users/sejust/followers", "following_url": "https://api.github.com/users/sejust/following{/other_user}", "gists_url": "https://api.github.com/users/sejust/gists{/gist_id}", "starred_url": "https://api.github.com/users/sejust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sejust/subscriptions", "organizations_url": "https://api.github.com/users/sejust/orgs", "repos_url": "https://api.github.com/users/sejust/repos", "events_url": "https://api.github.com/users/sejust/events{/privacy}", "received_events_url": "https://api.github.com/users/sejust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-12T13:17:55Z", "updated_at": "2015-04-25T22:29:38Z", "closed_at": "2015-04-23T05:51:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nfields={'wait':'true'}, timeout=None)\n```\n\n  File \"build/bdist.linux-x86_64/egg/urllib3/request.py\", line 68, in request\n  File \"build/bdist.linux-x86_64/egg/urllib3/request.py\", line 81, in request_encode_url\n  File \"build/bdist.linux-x86_64/egg/urllib3/poolmanager.py\", line 153, in urlopen\n  File \"build/bdist.linux-x86_64/egg/urllib3/connectionpool.py\", line 530, in urlopen\n  File \"build/bdist.linux-x86_64/egg/urllib3/response.py\", line 284, in from_httplib\n  File \"build/bdist.linux-x86_64/egg/urllib3/response.py\", line 104, in **init**\n  File \"build/bdist.linux-x86_64/egg/urllib3/response.py\", line 214, in read\nurllib3.exceptions.ProtocolError: ('Connection broken: IncompleteRead(0 bytes read)', IncompleteRead(0 bytes read))\n\nrun in python2.7:\nPython 2.7.8\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/71", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/71/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/71/events", "html_url": "https://github.com/jplana/python-etcd/issues/71", "id": 48508451, "node_id": "MDU6SXNzdWU0ODUwODQ1MQ==", "number": 71, "title": "If request timeout, Raise urllib3.exceptions.MaxRetryError not urllib3.exceptions.TimeoutError", "user": {"login": "sejust", "id": 2747551, "node_id": "MDQ6VXNlcjI3NDc1NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2747551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sejust", "html_url": "https://github.com/sejust", "followers_url": "https://api.github.com/users/sejust/followers", "following_url": "https://api.github.com/users/sejust/following{/other_user}", "gists_url": "https://api.github.com/users/sejust/gists{/gist_id}", "starred_url": "https://api.github.com/users/sejust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sejust/subscriptions", "organizations_url": "https://api.github.com/users/sejust/orgs", "repos_url": "https://api.github.com/users/sejust/repos", "events_url": "https://api.github.com/users/sejust/events{/privacy}", "received_events_url": "https://api.github.com/users/sejust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-12T13:11:08Z", "updated_at": "2017-06-17T12:59:38Z", "closed_at": "2017-06-17T12:59:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nfields={'wait':'true'}, timeout=1,)\n```\n\n  File \"build/bdist.linux-x86_64/egg/urllib3/request.py\", line 68, in request\n  File \"build/bdist.linux-x86_64/egg/urllib3/request.py\", line 81, in request_encode_url\n  File \"build/bdist.linux-x86_64/egg/urllib3/poolmanager.py\", line 153, in urlopen\n  File \"build/bdist.linux-x86_64/egg/urllib3/connectionpool.py\", line 581, in urlopen\n  File \"build/bdist.linux-x86_64/egg/urllib3/connectionpool.py\", line 581, in urlopen\n  File \"build/bdist.linux-x86_64/egg/urllib3/connectionpool.py\", line 581, in urlopen\n  File \"build/bdist.linux-x86_64/egg/urllib3/connectionpool.py\", line 561, in urlopen\n  File \"build/bdist.linux-x86_64/egg/urllib3/util/retry.py\", line 271, in increment\nurllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='~~~', port=4001): Max retries exceeded with url: /v2/keys/test?wait=true (Caused by ReadTimeoutError(\"HTTPConnectionPool(host='~~~', port=4001): Read timed out.\",))\n\nand retries in urllib3.connectionpool default is urllib3.util.retry.Retry(3)\n\nso, if watching a key with timeout,  will fail?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/67", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/67/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/67/events", "html_url": "https://github.com/jplana/python-etcd/issues/67", "id": 44592547, "node_id": "MDU6SXNzdWU0NDU5MjU0Nw==", "number": 67, "title": "Available through PIP?", "user": {"login": "bfleming-ciena", "id": 4722084, "node_id": "MDQ6VXNlcjQ3MjIwODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4722084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bfleming-ciena", "html_url": "https://github.com/bfleming-ciena", "followers_url": "https://api.github.com/users/bfleming-ciena/followers", "following_url": "https://api.github.com/users/bfleming-ciena/following{/other_user}", "gists_url": "https://api.github.com/users/bfleming-ciena/gists{/gist_id}", "starred_url": "https://api.github.com/users/bfleming-ciena/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bfleming-ciena/subscriptions", "organizations_url": "https://api.github.com/users/bfleming-ciena/orgs", "repos_url": "https://api.github.com/users/bfleming-ciena/repos", "events_url": "https://api.github.com/users/bfleming-ciena/events{/privacy}", "received_events_url": "https://api.github.com/users/bfleming-ciena/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-01T17:32:58Z", "updated_at": "2014-10-01T19:21:52Z", "closed_at": "2014-10-01T19:21:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Only way to install is from source then?  Just confirming because I see an etcd module via \"pip search etcd\".\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/66", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/66/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/66/events", "html_url": "https://github.com/jplana/python-etcd/issues/66", "id": 44272765, "node_id": "MDU6SXNzdWU0NDI3Mjc2NQ==", "number": 66, "title": "Set doesn't fresh cache", "user": {"login": "tiw", "id": 151735, "node_id": "MDQ6VXNlcjE1MTczNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/151735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tiw", "html_url": "https://github.com/tiw", "followers_url": "https://api.github.com/users/tiw/followers", "following_url": "https://api.github.com/users/tiw/following{/other_user}", "gists_url": "https://api.github.com/users/tiw/gists{/gist_id}", "starred_url": "https://api.github.com/users/tiw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tiw/subscriptions", "organizations_url": "https://api.github.com/users/tiw/orgs", "repos_url": "https://api.github.com/users/tiw/repos", "events_url": "https://api.github.com/users/tiw/events{/privacy}", "received_events_url": "https://api.github.com/users/tiw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-09-29T09:16:41Z", "updated_at": "2014-11-02T09:24:45Z", "closed_at": "2014-11-02T09:24:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "commit: b4ff9cea95d0dbb1a8f83d9ff140fd9d9d977f8e\n\nAssuming the value of '/omsstaging/db/name' is `oms_staging`\n\n```\npprint(client.read('/omsstaging/db/name').value)\nclient.write('/omsstaging/db/name', u'oms_staging1')\npprint(client.read('/omsstaging/db/name').value)\n```\n\nThis will output \n\n```\nu'oms_staging'\nu'oms_staging'\n```\n\nDesired output should be\n\n```\nu'oms_staging'\nu'oms_staging1'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/64", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/64/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/64/events", "html_url": "https://github.com/jplana/python-etcd/issues/64", "id": 42494091, "node_id": "MDU6SXNzdWU0MjQ5NDA5MQ==", "number": 64, "title": "Installation of python-etcd fails ", "user": {"login": "Jitendrakry", "id": 2060395, "node_id": "MDQ6VXNlcjIwNjAzOTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2060395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jitendrakry", "html_url": "https://github.com/Jitendrakry", "followers_url": "https://api.github.com/users/Jitendrakry/followers", "following_url": "https://api.github.com/users/Jitendrakry/following{/other_user}", "gists_url": "https://api.github.com/users/Jitendrakry/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jitendrakry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jitendrakry/subscriptions", "organizations_url": "https://api.github.com/users/Jitendrakry/orgs", "repos_url": "https://api.github.com/users/Jitendrakry/repos", "events_url": "https://api.github.com/users/Jitendrakry/events{/privacy}", "received_events_url": "https://api.github.com/users/Jitendrakry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-11T06:45:25Z", "updated_at": "2014-09-29T09:54:42Z", "closed_at": "2014-09-29T09:54:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting below error on ubuntu 14.04\n\nNo package 'libffi' found\nPackage libffi was not found in the pkg-config search path.\nPerhaps you should add the directory containing `libffi.pc'\nto the PKG_CONFIG_PATH environment variable\nNo package 'libffi' found\nPackage libffi was not found in the pkg-config search path.\nPerhaps you should add the directory containing`libffi.pc'\nto the PKG_CONFIG_PATH environment variable\nNo package 'libffi' found\ncompiling '_configtest.c':\n__thread int some_threadlocal_variable_42;\n\nx86_64-linux-gnu-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wa -Wstrict-prototypes -fPIC -c _configtest.c -o _configtest.o\nsuccess!\nremoving: _configtest.c _configtest.o\nc/_cffi_backend.c:13:17: fatal error: ffi.h: No such file or directory\n #include <ffi.h>\n                 ^\ncompilation terminated.\nerror: Setup script exited with error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/62", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/62/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/62/events", "html_url": "https://github.com/jplana/python-etcd/issues/62", "id": 41827479, "node_id": "MDU6SXNzdWU0MTgyNzQ3OQ==", "number": 62, "title": "Question: Does python-etcd work with gevent (non-blocking)?", "user": {"login": "stefanfoulis", "id": 14330, "node_id": "MDQ6VXNlcjE0MzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/14330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stefanfoulis", "html_url": "https://github.com/stefanfoulis", "followers_url": "https://api.github.com/users/stefanfoulis/followers", "following_url": "https://api.github.com/users/stefanfoulis/following{/other_user}", "gists_url": "https://api.github.com/users/stefanfoulis/gists{/gist_id}", "starred_url": "https://api.github.com/users/stefanfoulis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stefanfoulis/subscriptions", "organizations_url": "https://api.github.com/users/stefanfoulis/orgs", "repos_url": "https://api.github.com/users/stefanfoulis/repos", "events_url": "https://api.github.com/users/stefanfoulis/events{/privacy}", "received_events_url": "https://api.github.com/users/stefanfoulis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-03T15:12:45Z", "updated_at": "2014-09-03T15:27:42Z", "closed_at": "2014-09-03T15:27:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/57", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/57/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/57/events", "html_url": "https://github.com/jplana/python-etcd/issues/57", "id": 37431808, "node_id": "MDU6SXNzdWUzNzQzMTgwOA==", "number": 57, "title": "etcd published prefixes", "user": {"login": "AnuragRamdasan", "id": 1795026, "node_id": "MDQ6VXNlcjE3OTUwMjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1795026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnuragRamdasan", "html_url": "https://github.com/AnuragRamdasan", "followers_url": "https://api.github.com/users/AnuragRamdasan/followers", "following_url": "https://api.github.com/users/AnuragRamdasan/following{/other_user}", "gists_url": "https://api.github.com/users/AnuragRamdasan/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnuragRamdasan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnuragRamdasan/subscriptions", "organizations_url": "https://api.github.com/users/AnuragRamdasan/orgs", "repos_url": "https://api.github.com/users/AnuragRamdasan/repos", "events_url": "https://api.github.com/users/AnuragRamdasan/events{/privacy}", "received_events_url": "https://api.github.com/users/AnuragRamdasan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-09T03:45:59Z", "updated_at": "2014-09-29T11:29:26Z", "closed_at": "2014-09-29T11:29:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been using python-etcd for all the client communication where the etcd is hosted remotely. \n\nThe python client connects to the server correctly when tried on a mac, but throws error on ubuntu.\n\nThe python code that I ran on both systems is:\n\n``` python\nimport etcd\nclient = etcd.Client(\"55.88.55.161\", 4001)\nclient.read(\"/_etcd/machines\")\n```\n\nThe error that ubuntu(in a VM and docker) threw was this:\n\n``` bash\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python2.7/dist-packages/etcd/client.py\", line 158, in __init__\n    (self.__prefix, self.__machines))\nValueError: Could not identify given prefix [http://55.88.55.161:4001] among published prefixes: [[u'http://127.0.0.1:4001', None]]\n```\n\nIs there any way that the client treats the OS'es differently? Or is this an etcd quirk?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/54", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/54/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/54/events", "html_url": "https://github.com/jplana/python-etcd/issues/54", "id": 33064110, "node_id": "MDU6SXNzdWUzMzA2NDExMA==", "number": 54, "title": "Non-recusive read on empty dir gives the dir itself in it's children", "user": {"login": "sigmunau", "id": 4507494, "node_id": "MDQ6VXNlcjQ1MDc0OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4507494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigmunau", "html_url": "https://github.com/sigmunau", "followers_url": "https://api.github.com/users/sigmunau/followers", "following_url": "https://api.github.com/users/sigmunau/following{/other_user}", "gists_url": "https://api.github.com/users/sigmunau/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigmunau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigmunau/subscriptions", "organizations_url": "https://api.github.com/users/sigmunau/orgs", "repos_url": "https://api.github.com/users/sigmunau/repos", "events_url": "https://api.github.com/users/sigmunau/events{/privacy}", "received_events_url": "https://api.github.com/users/sigmunau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-05-08T08:40:45Z", "updated_at": "2014-09-29T10:57:31Z", "closed_at": "2014-09-29T10:57:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried to make a simple function to find empty etcd folders like this:\n\n```\ndef find_empty(etcd_client, key):\n    empty = True\n    logging.debug(\"checking key %s\", key)\n    for e in etcd_client.read(key).children:\n        empty = False\n        if e.dir:\n            find_empty(etcd_client, e.key)\n    if empty:\n        logging.debug(\"Found empty key %s\", key)\n```\n\nBut this crashes with a maximum recursion depth exception rather than printing the message when it encounters an empty dir.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/53", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/53/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/53/events", "html_url": "https://github.com/jplana/python-etcd/issues/53", "id": 32762268, "node_id": "MDU6SXNzdWUzMjc2MjI2OA==", "number": 53, "title": "Recursive Watch", "user": {"login": "codekoala", "id": 48698, "node_id": "MDQ6VXNlcjQ4Njk4", "avatar_url": "https://avatars0.githubusercontent.com/u/48698?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codekoala", "html_url": "https://github.com/codekoala", "followers_url": "https://api.github.com/users/codekoala/followers", "following_url": "https://api.github.com/users/codekoala/following{/other_user}", "gists_url": "https://api.github.com/users/codekoala/gists{/gist_id}", "starred_url": "https://api.github.com/users/codekoala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codekoala/subscriptions", "organizations_url": "https://api.github.com/users/codekoala/orgs", "repos_url": "https://api.github.com/users/codekoala/repos", "events_url": "https://api.github.com/users/codekoala/events{/privacy}", "received_events_url": "https://api.github.com/users/codekoala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-04T05:51:03Z", "updated_at": "2014-09-29T11:19:48Z", "closed_at": "2014-09-29T11:19:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "The etcd supports recursive watching on directories, but this library does not. Please implement this.\n\nhttps://coreos.com/docs/distributed-configuration/getting-started-with-etcd/#watching-the-directory\n\n```\n$ etcdctl watch /foo-service --recursive\n$ curl -L http://127.0.0.1:4001/v2/keys/foo-service?wait=true\\&recursive=true\n```\n\nIf I have time to implement it on my own, I'll submit a pull request. But I wouldn't count on me having time anytime soon :(\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/51", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/51/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/51/events", "html_url": "https://github.com/jplana/python-etcd/issues/51", "id": 32229513, "node_id": "MDU6SXNzdWUzMjIyOTUxMw==", "number": 51, "title": "Connection fails when the first host in the list is down", "user": {"login": "cyap13", "id": 1680488, "node_id": "MDQ6VXNlcjE2ODA0ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1680488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyap13", "html_url": "https://github.com/cyap13", "followers_url": "https://api.github.com/users/cyap13/followers", "following_url": "https://api.github.com/users/cyap13/following{/other_user}", "gists_url": "https://api.github.com/users/cyap13/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyap13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyap13/subscriptions", "organizations_url": "https://api.github.com/users/cyap13/orgs", "repos_url": "https://api.github.com/users/cyap13/repos", "events_url": "https://api.github.com/users/cyap13/events{/privacy}", "received_events_url": "https://api.github.com/users/cyap13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-25T12:57:16Z", "updated_at": "2015-05-10T11:17:02Z", "closed_at": "2015-05-10T11:17:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you send a tuple list to host parameter, if the first host fails the urllib3.exceptions.TimeoutError is not caught and the code fails.\nShould be added around line 527 in client.py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/48", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/48/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/48/events", "html_url": "https://github.com/jplana/python-etcd/issues/48", "id": 31749730, "node_id": "MDU6SXNzdWUzMTc0OTczMA==", "number": 48, "title": "Change version requirement cap for requirements", "user": {"login": "jplana", "id": 597255, "node_id": "MDQ6VXNlcjU5NzI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/597255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplana", "html_url": "https://github.com/jplana", "followers_url": "https://api.github.com/users/jplana/followers", "following_url": "https://api.github.com/users/jplana/following{/other_user}", "gists_url": "https://api.github.com/users/jplana/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplana/subscriptions", "organizations_url": "https://api.github.com/users/jplana/orgs", "repos_url": "https://api.github.com/users/jplana/repos", "events_url": "https://api.github.com/users/jplana/events{/privacy}", "received_events_url": "https://api.github.com/users/jplana/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870690, "node_id": "MDU6TGFiZWw1Njg3MDY5MA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-04-17T18:18:50Z", "updated_at": "2014-08-04T22:57:25Z", "closed_at": "2014-08-04T22:57:25Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Instead of \n\n``` python\ninstall_requires = [\n    'urllib3==1.7',\n    'pyOpenSSL==0.13.1',\n]\n```\n\nUse:\n\n``` python\ninstall_requires = [\n    'urllib3>=1.7',\n    'pyOpenSSL>=0.13.1',\n]\n```\n\nThanks to @roysmith for noticing it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/46", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/46/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/46/events", "html_url": "https://github.com/jplana/python-etcd/issues/46", "id": 29970510, "node_id": "MDU6SXNzdWUyOTk3MDUxMA==", "number": 46, "title": "Remove PyOpenSSL requirement", "user": {"login": "jplana", "id": 597255, "node_id": "MDQ6VXNlcjU5NzI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/597255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplana", "html_url": "https://github.com/jplana", "followers_url": "https://api.github.com/users/jplana/followers", "following_url": "https://api.github.com/users/jplana/following{/other_user}", "gists_url": "https://api.github.com/users/jplana/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplana/subscriptions", "organizations_url": "https://api.github.com/users/jplana/orgs", "repos_url": "https://api.github.com/users/jplana/repos", "events_url": "https://api.github.com/users/jplana/events{/privacy}", "received_events_url": "https://api.github.com/users/jplana/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870690, "node_id": "MDU6TGFiZWw1Njg3MDY5MA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-22T19:18:00Z", "updated_at": "2015-12-05T10:45:32Z", "closed_at": "2015-12-05T10:45:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "PyOpenSSL is only used to create snakeoil certificates during testing. Remove the certificate generation so this dependency, hard to install in the Windows platform, is not needed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/44", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/44/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/44/events", "html_url": "https://github.com/jplana/python-etcd/issues/44", "id": 29969567, "node_id": "MDU6SXNzdWUyOTk2OTU2Nw==", "number": 44, "title": "python setup.py test fails in python 2.7", "user": {"login": "jplana", "id": 597255, "node_id": "MDQ6VXNlcjU5NzI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/597255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplana", "html_url": "https://github.com/jplana", "followers_url": "https://api.github.com/users/jplana/followers", "following_url": "https://api.github.com/users/jplana/following{/other_user}", "gists_url": "https://api.github.com/users/jplana/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplana/subscriptions", "organizations_url": "https://api.github.com/users/jplana/orgs", "repos_url": "https://api.github.com/users/jplana/repos", "events_url": "https://api.github.com/users/jplana/events{/privacy}", "received_events_url": "https://api.github.com/users/jplana/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870688, "node_id": "MDU6TGFiZWw1Njg3MDY4OA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "jplana", "id": 597255, "node_id": "MDQ6VXNlcjU5NzI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/597255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplana", "html_url": "https://github.com/jplana", "followers_url": "https://api.github.com/users/jplana/followers", "following_url": "https://api.github.com/users/jplana/following{/other_user}", "gists_url": "https://api.github.com/users/jplana/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplana/subscriptions", "organizations_url": "https://api.github.com/users/jplana/orgs", "repos_url": "https://api.github.com/users/jplana/repos", "events_url": "https://api.github.com/users/jplana/events{/privacy}", "received_events_url": "https://api.github.com/users/jplana/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jplana", "id": 597255, "node_id": "MDQ6VXNlcjU5NzI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/597255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplana", "html_url": "https://github.com/jplana", "followers_url": "https://api.github.com/users/jplana/followers", "following_url": "https://api.github.com/users/jplana/following{/other_user}", "gists_url": "https://api.github.com/users/jplana/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplana/subscriptions", "organizations_url": "https://api.github.com/users/jplana/orgs", "repos_url": "https://api.github.com/users/jplana/repos", "events_url": "https://api.github.com/users/jplana/events{/privacy}", "received_events_url": "https://api.github.com/users/jplana/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2014-03-22T18:38:22Z", "updated_at": "2014-04-02T20:19:27Z", "closed_at": "2014-04-02T20:19:27Z", "author_association": "OWNER", "active_lock_reason": null, "body": "```\n$ python setup.py test\nrunning test\nSearching for pyOpenSSL==0.13.1\nReading https://pypi.python.org/simple/pyOpenSSL/\nBest match: pyOpenSSL 0.13.1\nDownloading https://pypi.python.org/packages/source/p/pyOpenSSL/pyOpenSSL-0.13.1.tar.gz#md5=e27a3b76734c39ea03952ca94cc56715\nProcessing pyOpenSSL-0.13.1.tar.gz\nWriting /var/folders/2j/32g5k66x3db08z030c5nj0sh0000gn/T/easy_install-wreh2Y/pyOpenSSL-0.13.1/setup.cfg\nRunning pyOpenSSL-0.13.1/setup.py -q bdist_egg --dist-dir /var/folders/2j/32g5k66x3db08z030c5nj0sh0000gn/T/easy_install-wreh2Y/pyOpenSSL-0.13.1/egg-dist-tmp-uy8_8H\nwarning: no previously-included files matching '*.pyc' found anywhere in distribution\n\nInstalled /Users/jplana/src/etcd-python/python-etcd-github-temp2/pyOpenSSL-0.13.1-py2.7-macosx-10.4-x86_64.egg\nrunning egg_info\nwriting requirements to src/python_etcd.egg-info/requires.txt\nwriting src/python_etcd.egg-info/PKG-INFO\nwriting top-level names to src/python_etcd.egg-info/top_level.txt\nwriting dependency_links to src/python_etcd.egg-info/dependency_links.txt\nreading manifest file 'src/python_etcd.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwriting manifest file 'src/python_etcd.egg-info/SOURCES.txt'\nrunning build_ext\nTraceback (most recent call last):\n  File \"setup.py\", line 36, in <module>\n    test_suite='tests.unit',\n  File \"/Users/jplana/.pyenv/versions/2.7.5/lib/python2.7/distutils/core.py\", line 152, in setup\n    dist.run_commands()\n  File \"/Users/jplana/.pyenv/versions/2.7.5/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n    self.run_command(cmd)\n  File \"/Users/jplana/.pyenv/versions/2.7.5/lib/python2.7/distutils/dist.py\", line 972, in run_command\n    cmd_obj.run()\n  File \"/Users/jplana/.pyenv/versions/temp2/lib/python2.7/site-packages/setuptools/command/test.py\", line 138, in run\n    self.with_project_on_sys_path(self.run_tests)\n  File \"/Users/jplana/.pyenv/versions/temp2/lib/python2.7/site-packages/setuptools/command/test.py\", line 118, in with_project_on_sys_path\n    func()\n  File \"/Users/jplana/.pyenv/versions/temp2/lib/python2.7/site-packages/setuptools/command/test.py\", line 164, in run_tests\n    testLoader = cks\n  File \"/Users/jplana/.pyenv/versions/2.7.5/lib/python2.7/unittest/main.py\", line 94, in __init__\n    self.parseArgs(argv)\n  File \"/Users/jplana/.pyenv/versions/2.7.5/lib/python2.7/unittest/main.py\", line 149, in parseArgs\n    self.createTests()\n  File \"/Users/jplana/.pyenv/versions/2.7.5/lib/python2.7/unittest/main.py\", line 158, in createTests\n    self.module)\n  File \"/Users/jplana/.pyenv/versions/2.7.5/lib/python2.7/unittest/loader.py\", line 128, in loadTestsFromNames\n    suites = [self.loadTestsFromName(name, module) for name in names]\n  File \"/Users/jplana/.pyenv/versions/2.7.5/lib/python2.7/unittest/loader.py\", line 91, in loadTestsFromName\n    module = __import__('.'.join(parts_copy))\nImportError: No module named tests\n```\n\nNot that I use it a lot, (travis will execute bin/test created by buildout) but It seems a nice to have.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/42", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/42/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/42/events", "html_url": "https://github.com/jplana/python-etcd/issues/42", "id": 29928019, "node_id": "MDU6SXNzdWUyOTkyODAxOQ==", "number": 42, "title": "Spelling Error *ethernal*_watch", "user": {"login": "kevinastone", "id": 1234915, "node_id": "MDQ6VXNlcjEyMzQ5MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1234915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinastone", "html_url": "https://github.com/kevinastone", "followers_url": "https://api.github.com/users/kevinastone/followers", "following_url": "https://api.github.com/users/kevinastone/following{/other_user}", "gists_url": "https://api.github.com/users/kevinastone/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinastone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinastone/subscriptions", "organizations_url": "https://api.github.com/users/kevinastone/orgs", "repos_url": "https://api.github.com/users/kevinastone/repos", "events_url": "https://api.github.com/users/kevinastone/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinastone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-21T19:19:00Z", "updated_at": "2014-03-22T01:05:57Z", "closed_at": "2014-03-22T01:04:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I presume it should be `eternal_watch()` (no _h_)\n\nhttps://github.com/jplana/python-etcd/blob/master/src/etcd/client.py#L483\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/41", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/41/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/41/events", "html_url": "https://github.com/jplana/python-etcd/issues/41", "id": 29886064, "node_id": "MDU6SXNzdWUyOTg4NjA2NA==", "number": 41, "title": "Prepare for a new release", "user": {"login": "lavagetto", "id": 1475424, "node_id": "MDQ6VXNlcjE0NzU0MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1475424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavagetto", "html_url": "https://github.com/lavagetto", "followers_url": "https://api.github.com/users/lavagetto/followers", "following_url": "https://api.github.com/users/lavagetto/following{/other_user}", "gists_url": "https://api.github.com/users/lavagetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavagetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavagetto/subscriptions", "organizations_url": "https://api.github.com/users/lavagetto/orgs", "repos_url": "https://api.github.com/users/lavagetto/repos", "events_url": "https://api.github.com/users/lavagetto/events{/privacy}", "received_events_url": "https://api.github.com/users/lavagetto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870690, "node_id": "MDU6TGFiZWw1Njg3MDY5MA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jplana/python-etcd/milestones/2", "html_url": "https://github.com/jplana/python-etcd/milestone/2", "labels_url": "https://api.github.com/repos/jplana/python-etcd/milestones/2/labels", "id": 458086, "node_id": "MDk6TWlsZXN0b25lNDU4MDg2", "number": 2, "title": "0.4.0", "description": "", "creator": {"login": "jplana", "id": 597255, "node_id": "MDQ6VXNlcjU5NzI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/597255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplana", "html_url": "https://github.com/jplana", "followers_url": "https://api.github.com/users/jplana/followers", "following_url": "https://api.github.com/users/jplana/following{/other_user}", "gists_url": "https://api.github.com/users/jplana/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplana/subscriptions", "organizations_url": "https://api.github.com/users/jplana/orgs", "repos_url": "https://api.github.com/users/jplana/repos", "events_url": "https://api.github.com/users/jplana/events{/privacy}", "received_events_url": "https://api.github.com/users/jplana/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 2, "state": "open", "created_at": "2013-10-17T23:04:38Z", "updated_at": "2015-04-23T05:52:08Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2014-03-21T08:57:14Z", "updated_at": "2015-04-23T05:52:08Z", "closed_at": "2015-04-23T05:52:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "We need to do the following:\n- Support calls to /stats (not sure it's fundamental, though)\n- Review docs\n- Model integration tests on the structure of the documented etcd API as much as possible\n\nThen I'd say we're ready for a new release, as a ton of bugs have been resolved.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/39", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/39/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/39/events", "html_url": "https://github.com/jplana/python-etcd/issues/39", "id": 29812953, "node_id": "MDU6SXNzdWUyOTgxMjk1Mw==", "number": 39, "title": "Include the etcd-index as returned in http headers in etcd-result", "user": {"login": "sigmunau", "id": 4507494, "node_id": "MDQ6VXNlcjQ1MDc0OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4507494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigmunau", "html_url": "https://github.com/sigmunau", "followers_url": "https://api.github.com/users/sigmunau/followers", "following_url": "https://api.github.com/users/sigmunau/following{/other_user}", "gists_url": "https://api.github.com/users/sigmunau/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigmunau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigmunau/subscriptions", "organizations_url": "https://api.github.com/users/sigmunau/orgs", "repos_url": "https://api.github.com/users/sigmunau/repos", "events_url": "https://api.github.com/users/sigmunau/events{/privacy}", "received_events_url": "https://api.github.com/users/sigmunau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-03-20T12:02:37Z", "updated_at": "2014-03-20T15:25:57Z", "closed_at": "2014-03-20T15:25:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Our systems usually work by reading all the data for it's relevant subtree at startup and then wait for changes using read with wait and waitIndex. If this particular subtree has changed little then the modifiedIndexes of the elements in the subtree might be  so small that passing them as waitIndex will not work. However we know the latest index at the time of the read is included in the http headers of the read. If we use that index as waitIndex to the read we know we will not miss changes and we are fairly certain that etcd will still have the relevant log. However, to do this we need to get this info out of the library\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/38", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/38/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/38/events", "html_url": "https://github.com/jplana/python-etcd/issues/38", "id": 29805536, "node_id": "MDU6SXNzdWUyOTgwNTUzNg==", "number": 38, "title": "Client.write() returns a bogus result when updating a dir in etcd > 0.2", "user": {"login": "lavagetto", "id": 1475424, "node_id": "MDQ6VXNlcjE0NzU0MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1475424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavagetto", "html_url": "https://github.com/lavagetto", "followers_url": "https://api.github.com/users/lavagetto/followers", "following_url": "https://api.github.com/users/lavagetto/following{/other_user}", "gists_url": "https://api.github.com/users/lavagetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavagetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavagetto/subscriptions", "organizations_url": "https://api.github.com/users/lavagetto/orgs", "repos_url": "https://api.github.com/users/lavagetto/repos", "events_url": "https://api.github.com/users/lavagetto/events{/privacy}", "received_events_url": "https://api.github.com/users/lavagetto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870688, "node_id": "MDU6TGFiZWw1Njg3MDY4OA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-20T09:53:35Z", "updated_at": "2014-03-20T15:26:27Z", "closed_at": "2014-03-20T15:26:27Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Etcd v 0.3 introduced the \"prevNode\" property that is handled strangely for dirs; if we update a dir we obtain a strange result returned:\n\n```\nc = etcd.Client()\nr = c.write('/foo', None, dir=True, ttl=50)\nprint(r.dir) #True\nr2 = c.write('/foo', None, dir=True, ttl=120, prevExist=True)\nprint(r2.dir) #False\n```\n\nWe should somehow use what is in prevNode to understand if the node is a dir.\n\nI strongly suspect this is not the only case in which the write() response does something funny.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/35", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/35/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/35/events", "html_url": "https://github.com/jplana/python-etcd/issues/35", "id": 29666266, "node_id": "MDU6SXNzdWUyOTY2NjI2Ng==", "number": 35, "title": "Add ability to fetch directories, use a better name for children", "user": {"login": "lavagetto", "id": 1475424, "node_id": "MDQ6VXNlcjE0NzU0MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1475424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavagetto", "html_url": "https://github.com/lavagetto", "followers_url": "https://api.github.com/users/lavagetto/followers", "following_url": "https://api.github.com/users/lavagetto/following{/other_user}", "gists_url": "https://api.github.com/users/lavagetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavagetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavagetto/subscriptions", "organizations_url": "https://api.github.com/users/lavagetto/orgs", "repos_url": "https://api.github.com/users/lavagetto/repos", "events_url": "https://api.github.com/users/lavagetto/events{/privacy}", "received_events_url": "https://api.github.com/users/lavagetto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-18T17:29:59Z", "updated_at": "2014-03-20T09:34:25Z", "closed_at": "2014-03-20T09:34:25Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "As pointed out in the discussion for PR #34 we need a better name for EtcdResult.children; also, some users find it useful to be able to retreive the directory nodes as well.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/32", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/32/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/32/events", "html_url": "https://github.com/jplana/python-etcd/issues/32", "id": 29539158, "node_id": "MDU6SXNzdWUyOTUzOTE1OA==", "number": 32, "title": "Introduce logging", "user": {"login": "lavagetto", "id": 1475424, "node_id": "MDQ6VXNlcjE0NzU0MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1475424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavagetto", "html_url": "https://github.com/lavagetto", "followers_url": "https://api.github.com/users/lavagetto/followers", "following_url": "https://api.github.com/users/lavagetto/following{/other_user}", "gists_url": "https://api.github.com/users/lavagetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavagetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavagetto/subscriptions", "organizations_url": "https://api.github.com/users/lavagetto/orgs", "repos_url": "https://api.github.com/users/lavagetto/repos", "events_url": "https://api.github.com/users/lavagetto/events{/privacy}", "received_events_url": "https://api.github.com/users/lavagetto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870690, "node_id": "MDU6TGFiZWw1Njg3MDY5MA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-03-17T06:04:10Z", "updated_at": "2015-05-19T10:05:15Z", "closed_at": "2015-05-19T10:05:15Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "At the moment we do not have any logging ability and an user has no real way to understand what is going on in the library.\n\nWe should introduce some non-intrusive logging (so that at INFO nothing gets logged if all requests succeed). \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/30", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/30/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/30/events", "html_url": "https://github.com/jplana/python-etcd/issues/30", "id": 29333613, "node_id": "MDU6SXNzdWUyOTMzMzYxMw==", "number": 30, "title": "TestClientRequest incorrectly inheriting from TestClientApiInterface?", "user": {"login": "jerrykan", "id": 377632, "node_id": "MDQ6VXNlcjM3NzYzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/377632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jerrykan", "html_url": "https://github.com/jerrykan", "followers_url": "https://api.github.com/users/jerrykan/followers", "following_url": "https://api.github.com/users/jerrykan/following{/other_user}", "gists_url": "https://api.github.com/users/jerrykan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jerrykan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jerrykan/subscriptions", "organizations_url": "https://api.github.com/users/jerrykan/orgs", "repos_url": "https://api.github.com/users/jerrykan/repos", "events_url": "https://api.github.com/users/jerrykan/events{/privacy}", "received_events_url": "https://api.github.com/users/jerrykan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-03-13T08:44:18Z", "updated_at": "2014-03-20T12:37:13Z", "closed_at": "2014-03-20T12:37:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was trying to write some test cases for a bug I'm fixing and noticed that the _TestClientApiInterface_ test cases were being run twice, with my new tests failing on the second run. I finally tracked the problem down to _TestClientRequest_ inheriting from _TestClientApiInterface_, meaning that the _TestClientApiInterface_ tests were being rerun as part of _TestClientRequest_.\n\nIs TestClientRequest meant to being inheriting from TestClientApiBase instead?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/27", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/27/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/27/events", "html_url": "https://github.com/jplana/python-etcd/issues/27", "id": 25964320, "node_id": "MDU6SXNzdWUyNTk2NDMyMA==", "number": 27, "title": "Is Python 2.6 not supported?", "user": {"login": "vaidik", "id": 542077, "node_id": "MDQ6VXNlcjU0MjA3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/542077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaidik", "html_url": "https://github.com/vaidik", "followers_url": "https://api.github.com/users/vaidik/followers", "following_url": "https://api.github.com/users/vaidik/following{/other_user}", "gists_url": "https://api.github.com/users/vaidik/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaidik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaidik/subscriptions", "organizations_url": "https://api.github.com/users/vaidik/orgs", "repos_url": "https://api.github.com/users/vaidik/repos", "events_url": "https://api.github.com/users/vaidik/events{/privacy}", "received_events_url": "https://api.github.com/users/vaidik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-01-21T04:35:55Z", "updated_at": "2014-01-21T08:23:43Z", "closed_at": "2014-01-21T08:05:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried using this package with Python 2.6 and it didn't work. Is it not supported? Tests also fail against Python 2.6.\n\nTest results for 2.7:\nhttp://pastebin.mozilla.org/4062963\n\nTest results for 2.6:\nhttp://pastebin.mozilla.org/4062966\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/26", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/26/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/26/events", "html_url": "https://github.com/jplana/python-etcd/issues/26", "id": 25643767, "node_id": "MDU6SXNzdWUyNTY0Mzc2Nw==", "number": 26, "title": "Allow the write() method to accept an EtcdResult as input.", "user": {"login": "lavagetto", "id": 1475424, "node_id": "MDQ6VXNlcjE0NzU0MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1475424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavagetto", "html_url": "https://github.com/lavagetto", "followers_url": "https://api.github.com/users/lavagetto/followers", "following_url": "https://api.github.com/users/lavagetto/following{/other_user}", "gists_url": "https://api.github.com/users/lavagetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavagetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavagetto/subscriptions", "organizations_url": "https://api.github.com/users/lavagetto/orgs", "repos_url": "https://api.github.com/users/lavagetto/repos", "events_url": "https://api.github.com/users/lavagetto/events{/privacy}", "received_events_url": "https://api.github.com/users/lavagetto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870690, "node_id": "MDU6TGFiZWw1Njg3MDY5MA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 56870692, "node_id": "MDU6TGFiZWw1Njg3MDY5Mg==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-15T12:23:45Z", "updated_at": "2014-03-18T11:28:35Z", "closed_at": "2014-03-18T11:28:35Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "When using the library now, if you just need to update the TTL of a key, you need to do as follows:\n\n``` python\nres = c.read('/somekey')\n\nc.write('/somekey', res.key, ttl=res.ttl+100, dir=res.dir)\n```\n\nIt would make more sense, IMO, to be allowed to do as follows:\n\n``` python\nres = c.read('/somekey')\nres.ttl += 100\nc.write(res)\n```\n\nI find libraries not able to eat their own dogfood a little appalling.\n\nWhat is your opinion?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/24", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/24/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/24/events", "html_url": "https://github.com/jplana/python-etcd/issues/24", "id": 25336085, "node_id": "MDU6SXNzdWUyNTMzNjA4NQ==", "number": 24, "title": "Installation failure on CoreOS", "user": {"login": "vinomaster", "id": 505186, "node_id": "MDQ6VXNlcjUwNTE4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/505186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vinomaster", "html_url": "https://github.com/vinomaster", "followers_url": "https://api.github.com/users/vinomaster/followers", "following_url": "https://api.github.com/users/vinomaster/following{/other_user}", "gists_url": "https://api.github.com/users/vinomaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/vinomaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vinomaster/subscriptions", "organizations_url": "https://api.github.com/users/vinomaster/orgs", "repos_url": "https://api.github.com/users/vinomaster/repos", "events_url": "https://api.github.com/users/vinomaster/events{/privacy}", "received_events_url": "https://api.github.com/users/vinomaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-09T17:28:56Z", "updated_at": "2014-01-09T20:29:19Z", "closed_at": "2014-01-09T20:29:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to install python-etcd on Ubuntu within a Docker container on CoreOS. \n\nUnfortunately, I am running into pyOpenSSL issues. \n\nPrior to installing python-etcd. I installed OpenSSL (not sure if necessary) but failure below occurs with or without this step. Any advice is appreciated...\n\nroot@2a86bce32082:/etc/ibm/etech/coreos/python/python-etcd# openssl version\nOpenSSL 1.0.1e 11 Feb 2013\n\nroot@2a86bce32082:/etc/ibm/etech/coreos/python# git clone https://github.com/jplana/python-etcd.git\nCloning into 'python-etcd'...\nremote: Reusing existing pack: 529, done.\nremote: Total 529 (delta 0), reused 0 (delta 0)\nReceiving objects: 100% (529/529), 96.02 KiB, done.\nResolving deltas: 100% (256/256), done.\nroot@2a86bce32082:/etc/ibm/etech/coreos/python# cd python-etcd\nroot@2a86bce32082:/etc/ibm/etech/coreos/python/python-etcd# python setup.py install\nrunning install\nrunning bdist_egg\nrunning egg_info\ncreating src/python_etcd.egg-info\nwriting requirements to src/python_etcd.egg-info/requires.txt\nwriting src/python_etcd.egg-info/PKG-INFO\nwriting top-level names to src/python_etcd.egg-info/top_level.txt\nwriting dependency_links to src/python_etcd.egg-info/dependency_links.txt\nwriting manifest file 'src/python_etcd.egg-info/SOURCES.txt'\nreading manifest file 'src/python_etcd.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwriting manifest file 'src/python_etcd.egg-info/SOURCES.txt'\ninstalling library code to build/bdist.linux-x86_64/egg\nrunning install_lib\nrunning build_py\ncreating build\ncreating build/lib.linux-x86_64-2.7\ncreating build/lib.linux-x86_64-2.7/etcd\ncopying src/etcd/client.py -> build/lib.linux-x86_64-2.7/etcd\ncopying src/etcd/**init**.py -> build/lib.linux-x86_64-2.7/etcd\ncopying src/etcd/lock.py -> build/lib.linux-x86_64-2.7/etcd\ncreating build/lib.linux-x86_64-2.7/etcd/tests\ncopying src/etcd/tests/**init**.py -> build/lib.linux-x86_64-2.7/etcd/tests\ncreating build/lib.linux-x86_64-2.7/etcd/tests/unit\ncopying src/etcd/tests/unit/**init**.py -> build/lib.linux-x86_64-2.7/etcd/tests/unit\ncopying src/etcd/tests/unit/test_old_request.py -> build/lib.linux-x86_64-2.7/etcd/tests/unit\ncopying src/etcd/tests/unit/test_client.py -> build/lib.linux-x86_64-2.7/etcd/tests/unit\ncopying src/etcd/tests/unit/test_request.py -> build/lib.linux-x86_64-2.7/etcd/tests/unit\ncreating build/lib.linux-x86_64-2.7/etcd/tests/integration\ncopying src/etcd/tests/integration/test_simple.py -> build/lib.linux-x86_64-2.7/etcd/tests/integration\ncopying src/etcd/tests/integration/**init**.py -> build/lib.linux-x86_64-2.7/etcd/tests/integration\ncopying src/etcd/tests/integration/test_lock.py -> build/lib.linux-x86_64-2.7/etcd/tests/integration\ncopying src/etcd/tests/integration/helpers.py -> build/lib.linux-x86_64-2.7/etcd/tests/integration\ncreating build/bdist.linux-x86_64\ncreating build/bdist.linux-x86_64/egg\ncreating build/bdist.linux-x86_64/egg/etcd\ncopying build/lib.linux-x86_64-2.7/etcd/client.py -> build/bdist.linux-x86_64/egg/etcd\ncopying build/lib.linux-x86_64-2.7/etcd/**init**.py -> build/bdist.linux-x86_64/egg/etcd\ncopying build/lib.linux-x86_64-2.7/etcd/lock.py -> build/bdist.linux-x86_64/egg/etcd\ncreating build/bdist.linux-x86_64/egg/etcd/tests\ncopying build/lib.linux-x86_64-2.7/etcd/tests/**init**.py -> build/bdist.linux-x86_64/egg/etcd/tests\ncreating build/bdist.linux-x86_64/egg/etcd/tests/unit\ncopying build/lib.linux-x86_64-2.7/etcd/tests/unit/**init**.py -> build/bdist.linux-x86_64/egg/etcd/tests/unit\ncopying build/lib.linux-x86_64-2.7/etcd/tests/unit/test_old_request.py -> build/bdist.linux-x86_64/egg/etcd/tests/unit\ncopying build/lib.linux-x86_64-2.7/etcd/tests/unit/test_client.py -> build/bdist.linux-x86_64/egg/etcd/tests/unit\ncopying build/lib.linux-x86_64-2.7/etcd/tests/unit/test_request.py -> build/bdist.linux-x86_64/egg/etcd/tests/unit\ncreating build/bdist.linux-x86_64/egg/etcd/tests/integration\ncopying build/lib.linux-x86_64-2.7/etcd/tests/integration/test_simple.py -> build/bdist.linux-x86_64/egg/etcd/tests/integration\ncopying build/lib.linux-x86_64-2.7/etcd/tests/integration/**init**.py -> build/bdist.linux-x86_64/egg/etcd/tests/integration\ncopying build/lib.linux-x86_64-2.7/etcd/tests/integration/test_lock.py -> build/bdist.linux-x86_64/egg/etcd/tests/integration\ncopying build/lib.linux-x86_64-2.7/etcd/tests/integration/helpers.py -> build/bdist.linux-x86_64/egg/etcd/tests/integration\nbyte-compiling build/bdist.linux-x86_64/egg/etcd/client.py to client.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/etcd/**init**.py to **init**.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/etcd/lock.py to lock.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/etcd/tests/**init**.py to **init**.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/etcd/tests/unit/**init**.py to **init**.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/etcd/tests/unit/test_old_request.py to test_old_request.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/etcd/tests/unit/test_client.py to test_client.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/etcd/tests/unit/test_request.py to test_request.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/etcd/tests/integration/test_simple.py to test_simple.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/etcd/tests/integration/**init**.py to **init**.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/etcd/tests/integration/test_lock.py to test_lock.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/etcd/tests/integration/helpers.py to helpers.pyc\ncreating build/bdist.linux-x86_64/egg/EGG-INFO\ncopying src/python_etcd.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO\ncopying src/python_etcd.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\ncopying src/python_etcd.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\ncopying src/python_etcd.egg-info/not-zip-safe -> build/bdist.linux-x86_64/egg/EGG-INFO\ncopying src/python_etcd.egg-info/requires.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\ncopying src/python_etcd.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\ncreating dist\ncreating 'dist/python_etcd-0.3.0-py2.7.egg' and adding 'build/bdist.linux-x86_64/egg' to it\nremoving 'build/bdist.linux-x86_64/egg' (and everything under it)\nProcessing python_etcd-0.3.0-py2.7.egg\ncreating /usr/local/lib/python2.7/dist-packages/python_etcd-0.3.0-py2.7.egg\nExtracting python_etcd-0.3.0-py2.7.egg to /usr/local/lib/python2.7/dist-packages\nAdding python-etcd 0.3.0 to easy-install.pth file\n\nInstalled /usr/local/lib/python2.7/dist-packages/python_etcd-0.3.0-py2.7.egg\nProcessing dependencies for python-etcd==0.3.0\nSearching for pyOpenSSL==0.13.1\nReading https://pypi.python.org/simple/pyOpenSSL/\nBest match: pyOpenSSL 0.13.1\nDownloading https://pypi.python.org/packages/source/p/pyOpenSSL/pyOpenSSL-0.13.1.tar.gz#md5=e27a3b76734c39ea03952ca94cc56715\nProcessing pyOpenSSL-0.13.1.tar.gz\nWriting /tmp/easy_install-4A9HDV/pyOpenSSL-0.13.1/setup.cfg\nRunning pyOpenSSL-0.13.1/setup.py -q bdist_egg --dist-dir /tmp/easy_install-4A9HDV/pyOpenSSL-0.13.1/egg-dist-tmp-BXlayj\nwarning: no previously-included files matching '*.pyc' found anywhere in distribution\nOpenSSL/crypto/crypto.c:14:20: fatal error: Python.h: No such file or directory\ncompilation terminated.\nerror: Setup script exited with error: command 'gcc' failed with exit status 1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/22", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/22/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/22/events", "html_url": "https://github.com/jplana/python-etcd/issues/22", "id": 24917390, "node_id": "MDU6SXNzdWUyNDkxNzM5MA==", "number": 22, "title": "Investigate why Travis builds fails randomly", "user": {"login": "jplana", "id": 597255, "node_id": "MDQ6VXNlcjU5NzI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/597255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplana", "html_url": "https://github.com/jplana", "followers_url": "https://api.github.com/users/jplana/followers", "following_url": "https://api.github.com/users/jplana/following{/other_user}", "gists_url": "https://api.github.com/users/jplana/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplana/subscriptions", "organizations_url": "https://api.github.com/users/jplana/orgs", "repos_url": "https://api.github.com/users/jplana/repos", "events_url": "https://api.github.com/users/jplana/events{/privacy}", "received_events_url": "https://api.github.com/users/jplana/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870688, "node_id": "MDU6TGFiZWw1Njg3MDY4OA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-31T10:52:44Z", "updated_at": "2015-10-08T21:33:09Z", "closed_at": "2015-10-08T21:33:09Z", "author_association": "OWNER", "active_lock_reason": null, "body": "See https://travis-ci.org/jplana/python-etcd/jobs/16167499\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/21", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/21/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/21/events", "html_url": "https://github.com/jplana/python-etcd/issues/21", "id": 24913397, "node_id": "MDU6SXNzdWUyNDkxMzM5Nw==", "number": 21, "title": "etcd.EtcdException: Unable to decode server response: __new__() got an unexpected keyword argument 'node'", "user": {"login": "dsoprea", "id": 715626, "node_id": "MDQ6VXNlcjcxNTYyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/715626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsoprea", "html_url": "https://github.com/dsoprea", "followers_url": "https://api.github.com/users/dsoprea/followers", "following_url": "https://api.github.com/users/dsoprea/following{/other_user}", "gists_url": "https://api.github.com/users/dsoprea/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsoprea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsoprea/subscriptions", "organizations_url": "https://api.github.com/users/dsoprea/orgs", "repos_url": "https://api.github.com/users/dsoprea/repos", "events_url": "https://api.github.com/users/dsoprea/events{/privacy}", "received_events_url": "https://api.github.com/users/dsoprea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-31T07:02:53Z", "updated_at": "2013-12-31T10:05:59Z", "closed_at": "2013-12-31T10:05:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue refers to the recent comment in a PR: https://github.com/jplana/python-etcd/pull/14#issuecomment-31335489\n\nIt was mentioned that I could use your fork, but it didn't help.\n\nI'm using tag v0.2.0 of etcd.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/20", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/20/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/20/events", "html_url": "https://github.com/jplana/python-etcd/issues/20", "id": 24912916, "node_id": "MDU6SXNzdWUyNDkxMjkxNg==", "number": 20, "title": "Add support for client-side timeouts", "user": {"login": "lavagetto", "id": 1475424, "node_id": "MDQ6VXNlcjE0NzU0MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1475424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavagetto", "html_url": "https://github.com/lavagetto", "followers_url": "https://api.github.com/users/lavagetto/followers", "following_url": "https://api.github.com/users/lavagetto/following{/other_user}", "gists_url": "https://api.github.com/users/lavagetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavagetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavagetto/subscriptions", "organizations_url": "https://api.github.com/users/lavagetto/orgs", "repos_url": "https://api.github.com/users/lavagetto/repos", "events_url": "https://api.github.com/users/lavagetto/events{/privacy}", "received_events_url": "https://api.github.com/users/lavagetto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870690, "node_id": "MDU6TGFiZWw1Njg3MDY5MA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "lavagetto", "id": 1475424, "node_id": "MDQ6VXNlcjE0NzU0MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1475424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavagetto", "html_url": "https://github.com/lavagetto", "followers_url": "https://api.github.com/users/lavagetto/followers", "following_url": "https://api.github.com/users/lavagetto/following{/other_user}", "gists_url": "https://api.github.com/users/lavagetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavagetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavagetto/subscriptions", "organizations_url": "https://api.github.com/users/lavagetto/orgs", "repos_url": "https://api.github.com/users/lavagetto/repos", "events_url": "https://api.github.com/users/lavagetto/events{/privacy}", "received_events_url": "https://api.github.com/users/lavagetto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lavagetto", "id": 1475424, "node_id": "MDQ6VXNlcjE0NzU0MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1475424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lavagetto", "html_url": "https://github.com/lavagetto", "followers_url": "https://api.github.com/users/lavagetto/followers", "following_url": "https://api.github.com/users/lavagetto/following{/other_user}", "gists_url": "https://api.github.com/users/lavagetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/lavagetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lavagetto/subscriptions", "organizations_url": "https://api.github.com/users/lavagetto/orgs", "repos_url": "https://api.github.com/users/lavagetto/repos", "events_url": "https://api.github.com/users/lavagetto/events{/privacy}", "received_events_url": "https://api.github.com/users/lavagetto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2013-12-31T06:31:29Z", "updated_at": "2014-01-13T12:45:03Z", "closed_at": "2014-01-13T12:45:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Any etcd client should support the ability to close the HTTP request after a timeout; this is particularly important for watch and lock primitives.\n\nExample\n\n``` python\nc = etcd.Client()\nc.read('/testkey', wait=True, timeout=5000)\n# we should also support this:\nc.set_timeout(5000)\nc.read('/testkey', wait=True)\n```\n- Timeout should be in milliseconds, not seconds (if urllib3 allows that...)\n- If no timeout or 0 is provided, then no timeout will be applied.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/18", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/18/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/18/events", "html_url": "https://github.com/jplana/python-etcd/issues/18", "id": 24900444, "node_id": "MDU6SXNzdWUyNDkwMDQ0NA==", "number": 18, "title": "Leader election module ", "user": {"login": "jplana", "id": 597255, "node_id": "MDQ6VXNlcjU5NzI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/597255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplana", "html_url": "https://github.com/jplana", "followers_url": "https://api.github.com/users/jplana/followers", "following_url": "https://api.github.com/users/jplana/following{/other_user}", "gists_url": "https://api.github.com/users/jplana/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplana/subscriptions", "organizations_url": "https://api.github.com/users/jplana/orgs", "repos_url": "https://api.github.com/users/jplana/repos", "events_url": "https://api.github.com/users/jplana/events{/privacy}", "received_events_url": "https://api.github.com/users/jplana/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870690, "node_id": "MDU6TGFiZWw1Njg3MDY5MA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jplana/python-etcd/milestones/1", "html_url": "https://github.com/jplana/python-etcd/milestone/1", "labels_url": "https://api.github.com/repos/jplana/python-etcd/milestones/1/labels", "id": 458085, "node_id": "MDk6TWlsZXN0b25lNDU4MDg1", "number": 1, "title": "0.3.0", "description": "", "creator": {"login": "jplana", "id": 597255, "node_id": "MDQ6VXNlcjU5NzI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/597255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jplana", "html_url": "https://github.com/jplana", "followers_url": "https://api.github.com/users/jplana/followers", "following_url": "https://api.github.com/users/jplana/following{/other_user}", "gists_url": "https://api.github.com/users/jplana/gists{/gist_id}", "starred_url": "https://api.github.com/users/jplana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jplana/subscriptions", "organizations_url": "https://api.github.com/users/jplana/orgs", "repos_url": "https://api.github.com/users/jplana/repos", "events_url": "https://api.github.com/users/jplana/events{/privacy}", "received_events_url": "https://api.github.com/users/jplana/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "open", "created_at": "2013-10-17T23:03:16Z", "updated_at": "2014-01-06T21:59:57Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2013-12-30T21:04:22Z", "updated_at": "2014-01-06T21:59:57Z", "closed_at": "2014-01-06T21:59:57Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Implement support for https://github.com/coreos/etcd#leader-election\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/17", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/17/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/17/events", "html_url": "https://github.com/jplana/python-etcd/issues/17", "id": 24894090, "node_id": "MDU6SXNzdWUyNDg5NDA5MA==", "number": 17, "title": "Lock module support", "user": {"login": "jimrollenhagen", "id": 565385, "node_id": "MDQ6VXNlcjU2NTM4NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/565385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimrollenhagen", "html_url": "https://github.com/jimrollenhagen", "followers_url": "https://api.github.com/users/jimrollenhagen/followers", "following_url": "https://api.github.com/users/jimrollenhagen/following{/other_user}", "gists_url": "https://api.github.com/users/jimrollenhagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimrollenhagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimrollenhagen/subscriptions", "organizations_url": "https://api.github.com/users/jimrollenhagen/orgs", "repos_url": "https://api.github.com/users/jimrollenhagen/repos", "events_url": "https://api.github.com/users/jimrollenhagen/events{/privacy}", "received_events_url": "https://api.github.com/users/jimrollenhagen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56870690, "node_id": "MDU6TGFiZWw1Njg3MDY5MA==", "url": "https://api.github.com/repos/jplana/python-etcd/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2013-12-30T18:13:17Z", "updated_at": "2013-12-31T00:55:06Z", "closed_at": "2013-12-31T00:55:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm starting to work on support for the built-in lock module in etcd 0.2.0. I wanted to get feedback on what the API should look like. Here's my proposal:\n\n``` python\n    # Acquire a lock (with no value) for \"customer1\"\n    index = client.acquire_lock('/customer1', ttl=60)\n    with client.lock('/customer1', ttl=60):\n        # lock is released when the `with` block closes\n        do_something()\n\n    # Acquire a lock for \"customer1\" that is associated with the value \"bar\"\n    index = client.acquire_lock('/customer1', ttl=60, value='bar')\n    with client.lock('/customer1', ttl=60, value='bar'):\n        # lock is released when the `with` block closes\n        do_something()\n\n    # Renew the TTL on the \"customer1\" lock for index 2\n    client.renew_lock('/customer1', ttl=60, index=2)\n\n    # Renew the TTL on the \"customer1\" lock for value \"bar\"\n    client.renew_lock('/customer1', ttl=60, value='bar')\n\n    # Retrieve the current value for the \"customer1\" lock.\n    client.get_lock_value('/customer1')\n\n    # Retrieve the current index for the \"customer1\" lock\n    client.get_lock_index('/customer1')\n\n    # Delete the \"customer1\" lock with the index 2\n    client.unlock('/customer1', index=2)\n\n    # Delete the \"customer1\" lock with the value \"bar\"\n    client.unlock('/customer1', value='bar')\n```\n\nThe comments there are directly from etcd's [documentation](https://github.com/coreos/etcd#lock) on the lock module.\n\nMy biggest question: would it be preferable to return some sort of `EtcdLock` object that has some data about the lock?\n\nKeep in mind that etcd only returns the index of the lock when one is acquired - this is odd to me given that setting a normal value returns a lot more info.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/16", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/16/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/16/events", "html_url": "https://github.com/jplana/python-etcd/issues/16", "id": 24888714, "node_id": "MDU6SXNzdWUyNDg4ODcxNA==", "number": 16, "title": "Use PUT for sets rather than POST", "user": {"login": "dsoprea", "id": 715626, "node_id": "MDQ6VXNlcjcxNTYyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/715626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsoprea", "html_url": "https://github.com/dsoprea", "followers_url": "https://api.github.com/users/dsoprea/followers", "following_url": "https://api.github.com/users/dsoprea/following{/other_user}", "gists_url": "https://api.github.com/users/dsoprea/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsoprea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsoprea/subscriptions", "organizations_url": "https://api.github.com/users/dsoprea/orgs", "repos_url": "https://api.github.com/users/dsoprea/repos", "events_url": "https://api.github.com/users/dsoprea/events{/privacy}", "received_events_url": "https://api.github.com/users/dsoprea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-30T15:55:38Z", "updated_at": "2013-12-31T06:23:05Z", "closed_at": "2013-12-31T06:23:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like you're considering PUT and POST to be analogous, at least in this [recent] pull request:\n\nhttps://github.com/jplana/python-etcd/pull/14\n\nHowever, POSTs are now used to enqueue values using the v2 API (see \"In-Order Keys\" in the etcd documentation). You should probably switch to preferring PUT exclusively.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/15", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/15/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/15/events", "html_url": "https://github.com/jplana/python-etcd/issues/15", "id": 24888387, "node_id": "MDU6SXNzdWUyNDg4ODM4Nw==", "number": 15, "title": "Handle invalid paths to prevent 404s", "user": {"login": "dsoprea", "id": 715626, "node_id": "MDQ6VXNlcjcxNTYyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/715626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsoprea", "html_url": "https://github.com/dsoprea", "followers_url": "https://api.github.com/users/dsoprea/followers", "following_url": "https://api.github.com/users/dsoprea/following{/other_user}", "gists_url": "https://api.github.com/users/dsoprea/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsoprea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsoprea/subscriptions", "organizations_url": "https://api.github.com/users/dsoprea/orgs", "repos_url": "https://api.github.com/users/dsoprea/repos", "events_url": "https://api.github.com/users/dsoprea/events{/privacy}", "received_events_url": "https://api.github.com/users/dsoprea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-30T15:48:29Z", "updated_at": "2013-12-31T06:23:18Z", "closed_at": "2013-12-31T06:23:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "We may as well catch if a path does not begin with a / and raise an error before performing the request.\n\nReferred to, here: https://github.com/jplana/python-etcd/pull/14#issuecomment-31335489\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/13", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/13/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/13/events", "html_url": "https://github.com/jplana/python-etcd/issues/13", "id": 24667250, "node_id": "MDU6SXNzdWUyNDY2NzI1MA==", "number": 13, "title": "Support for creating directories", "user": {"login": "vaidik", "id": 542077, "node_id": "MDQ6VXNlcjU0MjA3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/542077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaidik", "html_url": "https://github.com/vaidik", "followers_url": "https://api.github.com/users/vaidik/followers", "following_url": "https://api.github.com/users/vaidik/following{/other_user}", "gists_url": "https://api.github.com/users/vaidik/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaidik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaidik/subscriptions", "organizations_url": "https://api.github.com/users/vaidik/orgs", "repos_url": "https://api.github.com/users/vaidik/repos", "events_url": "https://api.github.com/users/vaidik/events{/privacy}", "received_events_url": "https://api.github.com/users/vaidik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-12-21T16:32:19Z", "updated_at": "2018-06-30T12:29:49Z", "closed_at": "2013-12-30T19:05:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "`etcd` API provides support for creating directories. Support for that seems missing in the current implementation of this library.\n\nOr am I missing something? I haven't looked at the code in depth.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jplana/python-etcd/issues/9", "repository_url": "https://api.github.com/repos/jplana/python-etcd", "labels_url": "https://api.github.com/repos/jplana/python-etcd/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/jplana/python-etcd/issues/9/comments", "events_url": "https://api.github.com/repos/jplana/python-etcd/issues/9/events", "html_url": "https://github.com/jplana/python-etcd/issues/9", "id": 23496995, "node_id": "MDU6SXNzdWUyMzQ5Njk5NQ==", "number": 9, "title": "Can't get root keys", "user": {"login": "dsoprea", "id": 715626, "node_id": "MDQ6VXNlcjcxNTYyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/715626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsoprea", "html_url": "https://github.com/dsoprea", "followers_url": "https://api.github.com/users/dsoprea/followers", "following_url": "https://api.github.com/users/dsoprea/following{/other_user}", "gists_url": "https://api.github.com/users/dsoprea/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsoprea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsoprea/subscriptions", "organizations_url": "https://api.github.com/users/dsoprea/orgs", "repos_url": "https://api.github.com/users/dsoprea/repos", "events_url": "https://api.github.com/users/dsoprea/events{/privacy}", "received_events_url": "https://api.github.com/users/dsoprea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-11-29T15:10:29Z", "updated_at": "2013-12-01T06:04:58Z", "closed_at": "2013-12-01T00:01:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Per the etcd team, I should be able to get the keys in the root:\n\n```\ncurl -s http://localhost:4001/v2/keys/\n```\n\nIt's not allowed with python-etcd:\n\n```\n>>> c.get('/')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Library/Python/2.7/site-packages/etcd/client.py\", line 285, in get\n    return self._result_from_response(response)\n  File \"/Library/Python/2.7/site-packages/etcd/client.py\", line 327, in _result_from_response\n    raise etcd.EtcdException('Unable to decode server response')\netcd.EtcdException: Unable to decode server response\n```\n\nDustin\n", "performed_via_github_app": null, "score": 1.0}]}