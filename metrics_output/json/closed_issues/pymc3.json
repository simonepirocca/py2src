{"total_count": 1830, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4058", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4058/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4058/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4058/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4058", "id": 680898445, "node_id": "MDU6SXNzdWU2ODA4OTg0NDU=", "number": 4058, "title": "ValueError: Unused step method arguments: {'return_inferencedata'}", "user": {"login": "nicospinu", "id": 35221108, "node_id": "MDQ6VXNlcjM1MjIxMTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/35221108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicospinu", "html_url": "https://github.com/nicospinu", "followers_url": "https://api.github.com/users/nicospinu/followers", "following_url": "https://api.github.com/users/nicospinu/following{/other_user}", "gists_url": "https://api.github.com/users/nicospinu/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicospinu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicospinu/subscriptions", "organizations_url": "https://api.github.com/users/nicospinu/orgs", "repos_url": "https://api.github.com/users/nicospinu/repos", "events_url": "https://api.github.com/users/nicospinu/events{/privacy}", "received_events_url": "https://api.github.com/users/nicospinu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-08-18T10:27:22Z", "updated_at": "2020-08-18T14:49:48Z", "closed_at": "2020-08-18T11:43:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\n**While implementing a hierarchical Bayesian model, I could not run the sampling using the `return_inferencedata=True` argument.**\r\n\r\n```python\r\nwith model:\r\n       trace=pm.sample(cores=4, return_inferencedata=True)\r\n```\r\n\r\n**Here it is the full traceback of the bug.**\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-30-def2639bc677> in <module>\r\n      1 with hierar_model:\r\n----> 2     trace = pm.sample(cores=4, return_inferencedata=True)\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pymc3\\sampling.py in sample(draws, step, init, n_init, start, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, **kwargs)\r\n    430             step = assign_step_methods(model, step, step_kwargs=kwargs)\r\n    431     else:\r\n--> 432         step = assign_step_methods(model, step, step_kwargs=kwargs)\r\n    433 \r\n    434     if isinstance(step, list):\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pymc3\\sampling.py in assign_step_methods(model, step, methods, step_kwargs)\r\n    185             selected_steps[selected].append(var)\r\n    186 \r\n--> 187     return instantiate_steppers(model, steps, selected_steps, step_kwargs)\r\n    188 \r\n    189 \r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\pymc3\\sampling.py in instantiate_steppers(model, steps, selected_steps, step_kwargs)\r\n    111     unused_args = set(step_kwargs).difference(used_keys)\r\n    112     if unused_args:\r\n--> 113         raise ValueError(\"Unused step method arguments: %s\" % unused_args)\r\n    114 \r\n    115     if len(steps) == 1:\r\n\r\nValueError: Unused step method arguments: {'return_inferencedata'}\r\n```\r\n\r\n**The BHM uses NUTS and BinaryGibbsMetropolis.**\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.8.5\r\n* Operating system: Windows 10\r\n* How did you install PyMC3: conda\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4052", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4052/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4052/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4052/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4052", "id": 679277133, "node_id": "MDU6SXNzdWU2NzkyNzcxMzM=", "number": 4052, "title": "Parameter Samples all have the same value ", "user": {"login": "cmp1", "id": 28893120, "node_id": "MDQ6VXNlcjI4ODkzMTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/28893120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmp1", "html_url": "https://github.com/cmp1", "followers_url": "https://api.github.com/users/cmp1/followers", "following_url": "https://api.github.com/users/cmp1/following{/other_user}", "gists_url": "https://api.github.com/users/cmp1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmp1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmp1/subscriptions", "organizations_url": "https://api.github.com/users/cmp1/orgs", "repos_url": "https://api.github.com/users/cmp1/repos", "events_url": "https://api.github.com/users/cmp1/events{/privacy}", "received_events_url": "https://api.github.com/users/cmp1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-14T16:45:51Z", "updated_at": "2020-08-17T11:05:16Z", "closed_at": "2020-08-17T09:52:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\n\r\nI have developed a copy of the Challenge Shuttle disaster model in [here](https://nbviewer.jupyter.org/github/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/blob/master/Chapter2_MorePyMC/Ch2_MorePyMC_PyMC3.ipynb)\r\n\r\nWhere I am modelling the probability of hitting zero stock (i.e. a stock out situation) as a function of current stock levels to answer the question: \r\n\r\n'If your current inventory reaches N '000 tonnes, what is the probability of running out of stock'\r\n\r\nI have implemented a similar model but the output of for parameters Beta( for the logistic function) and Alpha (the bias term) are all the same value.\r\n\r\n**Note: stock_inventory  mean value is quite high, 12.3k tonnes. Stock_out is a binary [0, 1] bounded feature.**\r\n\r\n\r\nI would be really grateful if someone could please point out where I have made an error here, thank you!\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n\r\n```python\r\n# Sort values by inventory value\r\ndf_a.sort_values('vault_inventory', inplace=True)\r\n\r\n# Get inventory vals\r\nvault_inventory_observed = np.array(df_a.loc[:, 'vault_inventory']) # Note - Mean val is 12,315 tonnes, std is 9043 tonnes\r\n\r\n# Stock out 0,1 \r\nstock_out_counts = np.array(df_a.loc[:, 'stock_out'])\r\n\r\n# Define model\r\nimport theano.tensor as tt\r\n\r\n# Model stock out probability as a function of inventory\r\nwith pm.Model() as stock_out_model:\r\n  beta = pm.Normal(\"beta\", mu=0, tau=0.001, testval=0)\r\n  alpha = pm.Normal(\"alpha\", mu=0, tau=0.001, testval=0)\r\n  p = pm.Deterministic(\"p\", 1.0/(1. + tt.exp(beta * vault_inventory_observed + alpha)))\r\n  observed = pm.Bernoulli(\"bernoulli_obs\", p, observed=stock_out_counts)\r\n  step = pm.Metropolis()\r\n  trace = pm.sample(30000, step=step, start=start)\r\n  burn_trace = trace[10000::2]\r\n\r\n# Get samples from trace\r\nalpha_samples = burn_trace[\"alpha\"][:, None] # All return values are -1.81e-08\r\nbeta_samples = burn_trace[\"beta\"][:, None] # All return values are -0.00057355\r\n\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n\r\nbeta_samples all have value -0.000573\r\nalpha_samples all have value -1.81e-08\r\n\r\n\r\n```\r\n\r\n**Please provide any additional information below.**\r\nThank you for your help.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3\r\n* Operating system: Windows 10\r\n* How did you install PyMC3: (conda/pip): Conda install\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4046", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4046/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4046/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4046/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4046", "id": 676698297, "node_id": "MDU6SXNzdWU2NzY2OTgyOTc=", "number": 4046, "title": "Update release instructions", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 86794, "node_id": "MDU6TGFiZWw4Njc5NA==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}, {"id": 34672788, "node_id": "MDU6TGFiZWwzNDY3Mjc4OA==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/release", "name": "release", "color": "e102d8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T08:49:02Z", "updated_at": "2020-08-11T15:01:01Z", "closed_at": "2020-08-11T15:01:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "From: https://github.com/pymc-devs/pymc3/issues/4026\r\n\r\n> > I got an email notification about a github actions failure. It looks like the github release action was expecting the pypi release to be available for installation, but it was not able to find it. Does that sound familiar?\r\n\r\n> Yes this happened the last times too. Don't re-trigger the pipeline. PyPI won't accept another upload of the same version number. Just ignore it.\r\n\r\n> I guess we should take out this installation step then. Though it works for my pyrff package with an even shorter delay..\"\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4045", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4045/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4045/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4045/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4045", "id": 676621925, "node_id": "MDU6SXNzdWU2NzY2MjE5MjU=", "number": 4045, "title": "ExGaussian logp is numerical unstable", "user": {"login": "junpenglao", "id": 12952641, "node_id": "MDQ6VXNlcjEyOTUyNjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/12952641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junpenglao", "html_url": "https://github.com/junpenglao", "followers_url": "https://api.github.com/users/junpenglao/followers", "following_url": "https://api.github.com/users/junpenglao/following{/other_user}", "gists_url": "https://api.github.com/users/junpenglao/gists{/gist_id}", "starred_url": "https://api.github.com/users/junpenglao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junpenglao/subscriptions", "organizations_url": "https://api.github.com/users/junpenglao/orgs", "repos_url": "https://api.github.com/users/junpenglao/repos", "events_url": "https://api.github.com/users/junpenglao/events{/privacy}", "received_events_url": "https://api.github.com/users/junpenglao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/defects", "name": "defects", "color": "e10c02", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-11T06:34:36Z", "updated_at": "2020-08-14T15:28:38Z", "closed_at": "2020-08-14T15:28:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Reported by user on discourse: https://discourse.pymc.io/t/bad-initial-energy-when-trying-to-build-a-multivariate-exgaussian-model/5591/3\r\n\r\nThere is some numerical problem of the ExGaussian log_prob. Specifically, the `std_cdf` in the line below returns 0., which resulting in `logpow` returns `-inf`\r\n\r\nhttps://github.com/pymc-devs/pymc3/blob/63eba59fe2c42c936136b24babf6ca1e3a777d74/pymc3/distributions/continuous.py#L3274\r\n\r\nminimal reproducible example:\r\n```python\r\nimport numpy as np\r\nimport scipy.stats as st\r\nimport pymc3 as pm\r\n\r\nbeta = 0.5\r\nsigma = 1.0\r\nnu = 1.2\r\n\r\nx = np.linspace(-2, 4, 200)\r\nmu = beta*x\r\ny = st.exponnorm.rvs(nu, loc=mu, scale=sigma)\r\n\r\npm.ExGaussian.dist(0., .25, 1./6).logp(y).tag.test_value  # <== contains -inf\r\n```\r\n\r\nA tt.switch in ExGaussian logp to replace 0 with epsilon should be sufficient to fix this.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4034", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4034/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4034/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4034/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4034", "id": 667618673, "node_id": "MDU6SXNzdWU2Njc2MTg2NzM=", "number": 4034, "title": "Tests fail with: TypeError: from_pymc3() got an unexpected keyword argument 'save_warmup'", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-29T07:30:40Z", "updated_at": "2020-08-09T14:34:19Z", "closed_at": "2020-08-09T14:34:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Seems like an arviz incompatibility. CC @AlexAndorra ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4031", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4031/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4031/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4031/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4031", "id": 665806886, "node_id": "MDU6SXNzdWU2NjU4MDY4ODY=", "number": 4031, "title": "Segmentation fault (core dumped)", "user": {"login": "jithendaraa", "id": 38505431, "node_id": "MDQ6VXNlcjM4NTA1NDMx", "avatar_url": "https://avatars0.githubusercontent.com/u/38505431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jithendaraa", "html_url": "https://github.com/jithendaraa", "followers_url": "https://api.github.com/users/jithendaraa/followers", "following_url": "https://api.github.com/users/jithendaraa/following{/other_user}", "gists_url": "https://api.github.com/users/jithendaraa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jithendaraa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jithendaraa/subscriptions", "organizations_url": "https://api.github.com/users/jithendaraa/orgs", "repos_url": "https://api.github.com/users/jithendaraa/repos", "events_url": "https://api.github.com/users/jithendaraa/events{/privacy}", "received_events_url": "https://api.github.com/users/jithendaraa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-26T15:49:50Z", "updated_at": "2020-07-27T10:01:55Z", "closed_at": "2020-07-27T10:01:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "This was my implementation of a model in PyMC. I was trying to find out how long the program takes to run for different amount of observations. When I give around 3000 or 5000 observations, the program runs fine. When I increase it to around 7000 or above, it runs fine till the ```pm.sample()``` line. Upon reaching the sampling statement, the program gives me a segmentation fault (core dumped) error. Is this normal/how do I fix this?\r\n\r\n```python\r\nwith pm.Model() as hotDINA:    \r\n    # Priors: theta, bk, ak, learn_k, ones, ss_k, g_k\r\n    theta   = pm.Normal('theta', mu=0.0, sd=1.0, shape=(I, 1))\r\n    lambda0 = pm.Normal('lambda0', mu=0.0, sd=1.0, shape=(K, 1))    #bk\r\n    lambda1 = pm.Uniform('lambda1', 0.0, 2.5, shape=(K, 1))    #ak\r\n    learn   = pm.Beta('learn', alpha=1, beta=1, shape=(K, 1))\r\n    ones    = pm.Bernoulli('known', p=1, shape=(K, 1))\r\n    ss      = pm.Uniform('ss', 0.5, 1.0, shape=(K, 1))\r\n    g       = pm.Uniform('g', 0, 0.5, shape=(K, 1))\r\n    for i in range(I):\r\n        print(\"STUDENT\", i+1, \" out of\", I)\r\n        \r\n        # t = 0\r\n        for k in range(K):\r\n            prob[i][0][k] = pm.math.invlogit((1.7) * lambda1[k,0] * (theta[i,0] - lambda0[k,0]))\r\n            alpha_name = 'alpha[' + str(i) + ',0,' + str(k) + ']'\r\n            alpha[i][0][k] = pm.Bernoulli(alpha_name, prob[i][0][k])\r\n            \r\n        for s in range(MAXSKILLS):\r\n            idx = int(idxY[i][0][s] - 1)\r\n            if idx >= K: continue\r\n            py[i][0][idx] = pow(ss[idx,0], alpha[i][0][idx]) * pow(g[idx,0], (1-alpha[i][0][idx]))\r\n        \r\n        # t = 1,2...T[i]-1\r\n        for t in tqdm(range(1, T[i])):\r\n            for k in range(K):\r\n                alpha[i][t][k] = pm.math.switch(alpha[i][t-1][k], ones[k,0], learn[k,0])\r\n                \r\n            for s in range(MAXSKILLS):\r\n                idx = int(idxY[i][t][s] - 1)\r\n                if idx >= K: continue\r\n                py[i][t][idx] = pow(ss[idx,0], alpha[i][t][idx]) * pow(g[idx,0], (1-alpha[i][t][idx]))\r\n            \r\n        for t in tqdm(range(T[i])):\r\n            for s in range(MAXSKILLS):\r\n                idx = int(idxY[i][t][s] - 1)\r\n                if idx >= K: continue\r\n                obsData = pm.Minibatch(observed_data[i][idx][t], batch_size=batch_size)\r\n                Y[i][t][idx] = pm.Bernoulli(f'y_{i}_{t}_{idx}', p=py[i][t][idx], observed=obsData)\r\n\r\n    start = time.time()\r\n    print(start)\r\n    trace = pm.sample(2500, tune=2500)\r\n    end = time.time()\r\n    print(\"TIME: \", end - start)\r\n    pm.save_trace(trace=trace, directory=\".pymc_1.trace\", overwrite=True)\r\n    print(\"SAVED\")\r\n    summary_df = pm.stats.summary(trace)\r\n    summary_df.to_excel(\"summary.xlsx\")\r\n    print(\"TOTAL END: \", time.time() - total_start)\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.9.2\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.4\r\n* Operating system: Ubuntu 16\r\n* How did you install PyMC3: pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4028", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4028/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4028/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4028/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4028", "id": 664439059, "node_id": "MDU6SXNzdWU2NjQ0MzkwNTk=", "number": 4028, "title": "Notebook: Getting started with pymc3 (version 3.8) Issue: got an unexpected keyword argument 'dims'", "user": {"login": "banshiv", "id": 68217176, "node_id": "MDQ6VXNlcjY4MjE3MTc2", "avatar_url": "https://avatars2.githubusercontent.com/u/68217176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/banshiv", "html_url": "https://github.com/banshiv", "followers_url": "https://api.github.com/users/banshiv/followers", "following_url": "https://api.github.com/users/banshiv/following{/other_user}", "gists_url": "https://api.github.com/users/banshiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/banshiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/banshiv/subscriptions", "organizations_url": "https://api.github.com/users/banshiv/orgs", "repos_url": "https://api.github.com/users/banshiv/repos", "events_url": "https://api.github.com/users/banshiv/events{/privacy}", "received_events_url": "https://api.github.com/users/banshiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T12:39:16Z", "updated_at": "2020-07-23T13:11:25Z", "closed_at": "2020-07-23T13:11:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\nOn running notebook 'getting_started_with_pymc3' run into an error\r\n\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-19-2f38476066b1> in <module>\r\n      2     # The model remembers the datetime index with the name 'date'\r\n      3     change_returns = pm.Data(\r\n----> 4         \"returns\", returns[\"change\"], dims=\"date\", export_index_as_coords=True\r\n      5     )\r\n      6 \r\n\r\nTypeError: __new__() got an unexpected keyword argument 'dims\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7\r\n* Operating system: Linux\r\n* How did you install PyMC3: (conda/pip) conda install pymc3, conda update pymc3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4027", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4027/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4027/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4027/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4027", "id": 664399703, "node_id": "MDU6SXNzdWU2NjQzOTk3MDM=", "number": 4027, "title": "Survival Analysis error related to np.greater_equal.outer", "user": {"login": "chuymtz", "id": 11253196, "node_id": "MDQ6VXNlcjExMjUzMTk2", "avatar_url": "https://avatars2.githubusercontent.com/u/11253196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chuymtz", "html_url": "https://github.com/chuymtz", "followers_url": "https://api.github.com/users/chuymtz/followers", "following_url": "https://api.github.com/users/chuymtz/following{/other_user}", "gists_url": "https://api.github.com/users/chuymtz/gists{/gist_id}", "starred_url": "https://api.github.com/users/chuymtz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chuymtz/subscriptions", "organizations_url": "https://api.github.com/users/chuymtz/orgs", "repos_url": "https://api.github.com/users/chuymtz/repos", "events_url": "https://api.github.com/users/chuymtz/events{/privacy}", "received_events_url": "https://api.github.com/users/chuymtz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T11:29:12Z", "updated_at": "2020-07-30T16:43:19Z", "closed_at": "2020-07-30T16:43:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working through the Example \r\nhttps://docs.pymc.io/notebooks/survival_analysis.html\r\n\r\n\r\nI get an error during data processing while running the line \r\n```python\r\nexposure = np.greater_equal.outer(df.time, interval_bounds[:-1]) * interval_length\r\n```\r\nThe traceback error is \r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\martinj15\\AppData\\Local\\Continuum\\Anaconda3\\envs\\pysurv\\lib\\code.py\", line 90, in runcode\r\n    exec(code, self.locals)\r\n  File \"<input>\", line 1, in <module>\r\n  File \"c:\\users\\martinj15\\appdata\\local\\continuum\\anaconda3\\envs\\ptown\\lib\\site-packages\\pandas\\core\\series.py\", line 705, in __array_ufunc__\r\n    return construct_return(result)\r\n  File \"c:\\users\\martinj15\\appdata\\local\\continuum\\anaconda3\\envs\\ptown\\lib\\site-packages\\pandas\\core\\series.py\", line 694, in construct_return\r\n    raise NotImplementedError\r\nNotImplementedError\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: v3.9.2\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.7 (default, May  6 2020, 11:45:54) [MSC v.1916 64 bit (AMD64)] on win32\r\n* Operating system: windows\r\n* How did you install PyMC3: pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4026", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4026/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4026/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4026/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4026", "id": 664311836, "node_id": "MDU6SXNzdWU2NjQzMTE4MzY=", "number": 4026, "title": "Release 3.9.3", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "kyleabeauchamp", "id": 1900459, "node_id": "MDQ6VXNlcjE5MDA0NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1900459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleabeauchamp", "html_url": "https://github.com/kyleabeauchamp", "followers_url": "https://api.github.com/users/kyleabeauchamp/followers", "following_url": "https://api.github.com/users/kyleabeauchamp/following{/other_user}", "gists_url": "https://api.github.com/users/kyleabeauchamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleabeauchamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleabeauchamp/subscriptions", "organizations_url": "https://api.github.com/users/kyleabeauchamp/orgs", "repos_url": "https://api.github.com/users/kyleabeauchamp/repos", "events_url": "https://api.github.com/users/kyleabeauchamp/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleabeauchamp/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "kyleabeauchamp", "id": 1900459, "node_id": "MDQ6VXNlcjE5MDA0NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1900459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleabeauchamp", "html_url": "https://github.com/kyleabeauchamp", "followers_url": "https://api.github.com/users/kyleabeauchamp/followers", "following_url": "https://api.github.com/users/kyleabeauchamp/following{/other_user}", "gists_url": "https://api.github.com/users/kyleabeauchamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleabeauchamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleabeauchamp/subscriptions", "organizations_url": "https://api.github.com/users/kyleabeauchamp/orgs", "repos_url": "https://api.github.com/users/kyleabeauchamp/repos", "events_url": "https://api.github.com/users/kyleabeauchamp/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleabeauchamp/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/pymc-devs/pymc3/milestones/17", "html_url": "https://github.com/pymc-devs/pymc3/milestone/17", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/milestones/17/labels", "id": 5698577, "node_id": "MDk6TWlsZXN0b25lNTY5ODU3Nw==", "number": 17, "title": "3.9.3", "description": null, "creator": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 23, "state": "open", "created_at": "2020-07-25T12:49:46Z", "updated_at": "2020-08-11T08:23:36Z", "due_on": null, "closed_at": null}, "comments": 23, "created_at": "2020-07-23T09:02:39Z", "updated_at": "2020-08-11T08:23:36Z", "closed_at": "2020-08-11T08:23:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We do have a few new features and bugfixes on master so we should cut a new release. Anyone volunteering to be release manager?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4025", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4025/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4025/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4025/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4025", "id": 662942312, "node_id": "MDU6SXNzdWU2NjI5NDIzMTI=", "number": 4025, "title": "sample_posterior_predictive does not handle InferenceData well", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-21T12:05:31Z", "updated_at": "2020-07-23T08:57:06Z", "closed_at": "2020-07-23T08:41:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`sample_posterior_predictive` seems to require an old-school trace, but does not directly accept an `InferenceData` object. There is an easy workaround to just call `sample_posterior_predictive(inference_object.trace)` but I think it would be nice if it would detect that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4022", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4022/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4022/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4022/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4022", "id": 661901036, "node_id": "MDU6SXNzdWU2NjE5MDEwMzY=", "number": 4022, "title": "Tests fail with matplotlib type error", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-20T14:39:06Z", "updated_at": "2020-07-20T20:41:19Z", "closed_at": "2020-07-20T20:41:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Code in `test_examples` seems to initialize matplotlib using an argument that has been removed.  Posting this to claim the bug or find out if someone else is already fixing it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4018", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4018/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4018/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4018/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4018", "id": 660023222, "node_id": "MDU6SXNzdWU2NjAwMjMyMjI=", "number": 4018, "title": "Maximum Recursion Depth Exceeded for time series model", "user": {"login": "jithendaraa", "id": 38505431, "node_id": "MDQ6VXNlcjM4NTA1NDMx", "avatar_url": "https://avatars0.githubusercontent.com/u/38505431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jithendaraa", "html_url": "https://github.com/jithendaraa", "followers_url": "https://api.github.com/users/jithendaraa/followers", "following_url": "https://api.github.com/users/jithendaraa/following{/other_user}", "gists_url": "https://api.github.com/users/jithendaraa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jithendaraa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jithendaraa/subscriptions", "organizations_url": "https://api.github.com/users/jithendaraa/orgs", "repos_url": "https://api.github.com/users/jithendaraa/repos", "events_url": "https://api.github.com/users/jithendaraa/events{/privacy}", "received_events_url": "https://api.github.com/users/jithendaraa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-18T09:05:31Z", "updated_at": "2020-08-08T14:54:59Z", "closed_at": "2020-08-08T14:54:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Maximum Recursion Depth Exceeded\r\n\r\nThis might be a duplicate of #879 but not sure since this doesn't seem to have much to do with njobs? The code works fine and pm.sample() starts iteration when ```I = 5```. But this gives \"Max. recursion depth exceeded\" when I make the variable slightly bigger ``` I = 20```\r\n\r\n**Reproducible example.**\r\n```trace = None\r\nT = 8\r\nI = 5\r\n\r\npy = np.zeros((I, T), dtype=object)\r\nprob = np.zeros(I, dtype=object)\r\n\r\n# Priors\r\ntheta = np.zeros(I, dtype=object)\r\na = np.zeros(I, dtype=object)\r\nb = np.zeros(I, dtype=object)\r\ng = np.zeros(I, dtype=object)\r\nss = np.zeros(I, dtype=object)\r\nlearn = np.zeros(I, dtype=object)\r\nones = np.zeros(I, dtype=object)\r\n\r\n# Likelihoods/conditional nodes\r\nY = np.zeros((I, T), dtype=object)\r\nalpha = np.zeros((I, T), dtype=object)\r\n\r\n# Fake observation data\r\nobs_data = []\r\ndata_pts = 20\r\nfor i in range(data_pts):\r\n    obs_data.append(np.random.choice(2))\r\n\r\n# Model\r\nwith pm.Model() as hotDINA:\r\n    for i in range(I):\r\n        theta[i] = pm.Normal('theta_' + str(i), mu=0.0, sd=1.0)\r\n        a[i] = pm.Uniform(\"a_\" + str(i), 0.0, 2.5)\r\n        b[i] = pm.Normal('b_' + str(i), mu=0.0, sd=1.0)\r\n        g[i] = pm.Uniform(\"g_\" + str(i), 0.0, 0.5)\r\n        ss[i] = pm.Uniform(\"ss_\" + str(i), 0.5, 1.0)\r\n        learn[i] = pm.Beta('learn_' + str(i), alpha=1, beta=1)\r\n        ones[i] = pm.Bernoulli('known_' + str(i), p=1)\r\n        \r\n        prob[i] = pm.math.invlogit(1.7 * a[i] * (theta[i] - b[i]))\r\n        alpha[i][0] = pm.Bernoulli('alpha0_' + str(i), prob[i])\r\n        \r\n        py[i][0] = pow(ss[i], alpha[i][0]) * pow(g[i], 1-alpha[i][0])\r\n    \r\n    for i in range(I):\r\n        for t in tqdm(range(1, T)):\r\n            known = pm.Bernoulli(f'known_{i}_{t}', ones[i])\r\n            bern = pm.Bernoulli(f'learn_{i}_{t}', learn[i])\r\n            alpha[i][t] = pm.math.switch(alpha[i][t-1], bern, known)\r\n            \r\n            py[i][t] = pow(ss[i], alpha[i][t]) * pow(g[i], (1-alpha[i][t]))\r\n    \r\n    for i in range(I):\r\n        for t in range(T):\r\n            Y[i][t] = pm.Bernoulli(f'Y_{i}_{t}', p=py[i][t], observed=obs_data)\r\n    print(\"DONE\")\r\n    trace = pm.sample(10)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```RecursionError                            Traceback (most recent call last)\r\n<ipython-input-19-7485cb78fc3b> in <module>\r\n     53             Y[i][t] = pm.Bernoulli(f'Y_{i}_{t}', p=py[i][t], observed=obs_data)\r\n     54     print(\"DONE\")\r\n---> 55     trace = pm.sample(10)\r\n     56 \r\n\r\nD:\\anaconda3\\lib\\site-packages\\pymc3\\sampling.py in sample(draws, step, init, n_init, start, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, callback, return_inferencedata, idata_kwargs, **kwargs)\r\n    520         _print_step_hierarchy(step)\r\n    521         try:\r\n--> 522             trace = _mp_sample(**sample_args)\r\n    523         except pickle.PickleError:\r\n    524             _log.warning(\"Could not pickle model, sampling singlethreaded.\")\r\n\r\nD:\\anaconda3\\lib\\site-packages\\pymc3\\sampling.py in _mp_sample(draws, tune, step, chains, cores, chain, random_seed, start, progressbar, trace, model, callback, **kwargs)\r\n   1410 \r\n   1411     sampler = ps.ParallelSampler(\r\n-> 1412         draws, tune, chains, cores, random_seed, start, step, chain, progressbar\r\n   1413     )\r\n   1414     try:\r\n\r\nD:\\anaconda3\\lib\\site-packages\\pymc3\\parallel_sampling.py in __init__(self, draws, tune, chains, cores, seeds, start_points, step_method, start_chain_num, progressbar)\r\n    372                 draws, tune, step_method, chain + start_chain_num, seed, start\r\n    373             )\r\n--> 374             for chain, seed, start in zip(range(chains), seeds, start_points)\r\n    375         ]\r\n    376 \r\n\r\nD:\\anaconda3\\lib\\site-packages\\pymc3\\parallel_sampling.py in <listcomp>(.0)\r\n    372                 draws, tune, step_method, chain + start_chain_num, seed, start\r\n    373             )\r\n--> 374             for chain, seed, start in zip(range(chains), seeds, start_points)\r\n    375         ]\r\n    376 \r\n\r\nD:\\anaconda3\\lib\\site-packages\\pymc3\\parallel_sampling.py in __init__(self, draws, tune, step_method, chain, seed, start)\r\n    257         )\r\n    258         try:\r\n--> 259             self._process.start()\r\n    260         except IOError as e:\r\n    261             # Something may have gone wrong during the fork / spawn\r\n\r\nD:\\anaconda3\\lib\\multiprocessing\\process.py in start(self)\r\n    110                'daemonic processes are not allowed to have children'\r\n    111         _cleanup()\r\n--> 112         self._popen = self._Popen(self)\r\n    113         self._sentinel = self._popen.sentinel\r\n    114         # Avoid a refcycle if the target function holds an indirect\r\n\r\nD:\\anaconda3\\lib\\multiprocessing\\context.py in _Popen(process_obj)\r\n    221     @staticmethod\r\n    222     def _Popen(process_obj):\r\n--> 223         return _default_context.get_context().Process._Popen(process_obj)\r\n    224 \r\n    225 class DefaultContext(BaseContext):\r\n\r\nD:\\anaconda3\\lib\\multiprocessing\\context.py in _Popen(process_obj)\r\n    320         def _Popen(process_obj):\r\n    321             from .popen_spawn_win32 import Popen\r\n--> 322             return Popen(process_obj)\r\n    323 \r\n    324     class SpawnContext(BaseContext):\r\n\r\nD:\\anaconda3\\lib\\multiprocessing\\popen_spawn_win32.py in __init__(self, process_obj)\r\n     87             try:\r\n     88                 reduction.dump(prep_data, to_child)\r\n---> 89                 reduction.dump(process_obj, to_child)\r\n     90             finally:\r\n     91                 set_spawning_popen(None)\r\n\r\nD:\\anaconda3\\lib\\multiprocessing\\reduction.py in dump(obj, file, protocol)\r\n     58 def dump(obj, file, protocol=None):\r\n     59     '''Replacement for pickle.dump() using ForkingPickler.'''\r\n---> 60     ForkingPickler(file, protocol).dump(obj)\r\n     61 \r\n     62 #\r\n\r\nRecursionError: maximum recursion depth exceeded while pickling an object\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.9.2\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7\r\n* Operating system: Windows\r\n* How did you install PyMC3: pip\r\n\r\nI read somewhere that pymc3 does not handle large time series data very well since that wasn't it's primary purpose. How true is this? Since changing the value of \"I\" alone breaks my program, I am guessing this is true to a certain extent.  Is this because I am doing things inefficiently by using lot of loops? Is there a more efficient way to do this in pymc3? \r\n\r\nFew miscellaneous questions: Is there something that is better suited for MCMC estimation/Bayesian Time series analysis? Total time-steps ``` T=8 ``` in the above example but I would like to do it for much larger data where T is in the range 10000 - 30000. ```I``` is around 600. Also, this model is a simpler version. The actual version of the model is actually slightly more complicated where alpha, py and Y are indexed/subscripted as [i][t][k] rather than [i][t] and K = 20 (not too large). \r\nIn the context of large time series data, I found a few alternatives that do MCMC like Stan, PyStan, Edward etc.. Do any of these perform particularly better than pymc3 at least for Bayesian Time series analysis? Is there some other tool that I have missed out that performs better than all the others (needn't necessarily be in Python, but preferable if it is)?\r\n\r\nThanks in advance! :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4013", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4013/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4013/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4013/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4013", "id": 657434820, "node_id": "MDU6SXNzdWU2NTc0MzQ4MjA=", "number": 4013, "title": "Progress bar (pymc 3.9) does not work with Voila-dashboard view", "user": {"login": "atharvahans1", "id": 56398096, "node_id": "MDQ6VXNlcjU2Mzk4MDk2", "avatar_url": "https://avatars2.githubusercontent.com/u/56398096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atharvahans1", "html_url": "https://github.com/atharvahans1", "followers_url": "https://api.github.com/users/atharvahans1/followers", "following_url": "https://api.github.com/users/atharvahans1/following{/other_user}", "gists_url": "https://api.github.com/users/atharvahans1/gists{/gist_id}", "starred_url": "https://api.github.com/users/atharvahans1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atharvahans1/subscriptions", "organizations_url": "https://api.github.com/users/atharvahans1/orgs", "repos_url": "https://api.github.com/users/atharvahans1/repos", "events_url": "https://api.github.com/users/atharvahans1/events{/privacy}", "received_events_url": "https://api.github.com/users/atharvahans1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-15T15:17:44Z", "updated_at": "2020-07-15T15:54:17Z", "closed_at": "2020-07-15T15:54:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI was trying to use pymc3 (3.9.2) with Voila (https://voila.readthedocs.io/en/stable/) and I cannot see the progress bar running in the Voila-dashboard view (it works fine with the classic notebook). All i see is a grey box:\r\n\r\n<img width=\"834\" alt=\"1\" src=\"https://user-images.githubusercontent.com/56398096/87561987-69712d00-c68b-11ea-93eb-b1c2a5ebc564.png\">\r\n\r\nBut when i use pymc3 (3.7), which has the older version of progress bar, I can see the progress bar running just fine. \r\n\r\nYou can check it here:\r\nhttps://mybinder.org/v2/gist/atharvahans1/68044ff6d1f093b7d1d788929231754d/master\r\n\r\nHow can I fix this?\r\n\r\nThanks,\r\nAtharva", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4004", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4004/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4004/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/4004/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/4004", "id": 651790526, "node_id": "MDU6SXNzdWU2NTE3OTA1MjY=", "number": 4004, "title": "sample_posterior_predictive flattens chains and draws", "user": {"login": "kyleabeauchamp", "id": 1900459, "node_id": "MDQ6VXNlcjE5MDA0NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1900459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleabeauchamp", "html_url": "https://github.com/kyleabeauchamp", "followers_url": "https://api.github.com/users/kyleabeauchamp/followers", "following_url": "https://api.github.com/users/kyleabeauchamp/following{/other_user}", "gists_url": "https://api.github.com/users/kyleabeauchamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleabeauchamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleabeauchamp/subscriptions", "organizations_url": "https://api.github.com/users/kyleabeauchamp/orgs", "repos_url": "https://api.github.com/users/kyleabeauchamp/repos", "events_url": "https://api.github.com/users/kyleabeauchamp/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleabeauchamp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2020-07-06T20:11:26Z", "updated_at": "2020-07-12T22:12:00Z", "closed_at": "2020-07-12T22:12:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that the results of `pm.sample_posterior_predictive` are flattened over (chain, draw) dimensions.  AFAIK, this is a lossy transform because the results are numpy objects that don't track the source.  I wonder if there should be an option to preserve the (chain, draw) shape and output the results using an arviz InferenceData object.  See also https://github.com/arviz-devs/arviz/issues/1282", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3999", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3999/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3999/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3999/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3999", "id": 651118816, "node_id": "MDU6SXNzdWU2NTExMTg4MTY=", "number": 3999, "title": "Dirichlet doesn't allow basic Theano types", "user": {"login": "brandonwillard", "id": 971601, "node_id": "MDQ6VXNlcjk3MTYwMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/971601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandonwillard", "html_url": "https://github.com/brandonwillard", "followers_url": "https://api.github.com/users/brandonwillard/followers", "following_url": "https://api.github.com/users/brandonwillard/following{/other_user}", "gists_url": "https://api.github.com/users/brandonwillard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandonwillard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandonwillard/subscriptions", "organizations_url": "https://api.github.com/users/brandonwillard/orgs", "repos_url": "https://api.github.com/users/brandonwillard/repos", "events_url": "https://api.github.com/users/brandonwillard/events{/privacy}", "received_events_url": "https://api.github.com/users/brandonwillard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/defects", "name": "defects", "color": "e10c02", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-05T18:15:17Z", "updated_at": "2020-07-21T20:03:46Z", "closed_at": "2020-07-21T20:03:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `Dirichlet` distribution doesn't allow basic Theano types (e.g. `TensorVariable` and `TensorConstant`) for its parameter.\r\n\r\nThe following raises a `TypeError`:\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\n\r\nimport theano.tensor as tt\r\n\r\n\r\npm.Dirichlet.dist(tt.as_tensor_variable(np.r_[1, 1]))\r\n```\r\nthe relevant output is\r\n```python\r\nTypeError: The vector of concentration parameters (a) must be a python list or numpy array.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3994", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3994/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3994/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3994/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3994", "id": 650522212, "node_id": "MDU6SXNzdWU2NTA1MjIyMTI=", "number": 3994, "title": "Mixture of mixtures works, but not Mixture of Mixture and Single distribution", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/defects", "name": "defects", "color": "e10c02", "default": false, "description": null}, {"id": 1017960217, "node_id": "MDU6TGFiZWwxMDE3OTYwMjE3", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/shape%20problem", "name": "shape problem", "color": "f9c2d9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-03T11:00:45Z", "updated_at": "2020-07-04T21:05:06Z", "closed_at": "2020-07-04T21:05:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to model a Mixture between a Mixture and another distribution, but I am getting an error:\r\n\r\n**Minimal Example:**\r\n\r\n```python\r\nwith pm.Model() as m:\r\n    a1 = pm.Normal.dist(mu=0, sigma=1)\r\n    a2 = pm.Normal.dist(mu=0, sigma=1)\r\n    a3 = pm.Normal.dist(mu=0, sigma=1)\r\n    \r\n    w1 = pm.Dirichlet('w1', np.array([1, 1]))    \r\n    mix = pm.Mixture.dist(w=w1, comp_dists=[a1, a2])\r\n    \r\n    w2 = pm.Dirichlet('w2', np.array([1, 1]))\r\n    like = pm.Mixture = pm.Mixture('like', w=w2, comp_dists=[mix, a3], observed=np.random.randn(20))\r\n```\r\n\r\n**Traceback:**\r\n```python\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n~/.local/lib/python3.8/site-packages/pymc3/distributions/mixture.py in _comp_modes(self)\r\n    289         try:\r\n--> 290             return tt.as_tensor_variable(self.comp_dists.mode)\r\n    291         except AttributeError:\r\n\r\nAttributeError: 'list' object has no attribute 'mode'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-8-dedf5c958f15> in <module>\r\n      8 \r\n      9     w2 = pm.Dirichlet('w2', np.array([1, 1]))\r\n---> 10     like = pm.Mixture = pm.Mixture('like', w=w2, comp_dists=[mix, a3], observed=np.random.randn(20))\r\n\r\n~/.local/lib/python3.8/site-packages/pymc3/distributions/distribution.py in __new__(cls, name, *args, **kwargs)\r\n     44                 raise TypeError(\"observed needs to be data but got: {}\".format(type(data)))\r\n     45             total_size = kwargs.pop('total_size', None)\r\n---> 46             dist = cls.dist(*args, **kwargs)\r\n     47             return model.Var(name, dist, data, total_size)\r\n     48         else:\r\n\r\n~/.local/lib/python3.8/site-packages/pymc3/distributions/distribution.py in dist(cls, *args, **kwargs)\r\n     55     def dist(cls, *args, **kwargs):\r\n     56         dist = object.__new__(cls)\r\n---> 57         dist.__init__(*args, **kwargs)\r\n     58         return dist\r\n     59 \r\n\r\n~/.local/lib/python3.8/site-packages/pymc3/distributions/mixture.py in __init__(self, w, comp_dists, *args, **kwargs)\r\n    139 \r\n    140         try:\r\n--> 141             comp_modes = self._comp_modes()\r\n    142             comp_mode_logps = self.logp(comp_modes)\r\n    143             self.mode = comp_modes[tt.argmax(w * comp_mode_logps, axis=-1)]\r\n\r\n~/.local/lib/python3.8/site-packages/pymc3/distributions/mixture.py in _comp_modes(self)\r\n    290             return tt.as_tensor_variable(self.comp_dists.mode)\r\n    291         except AttributeError:\r\n--> 292             return tt.squeeze(tt.stack([comp_dist.mode\r\n    293                                         for comp_dist in self.comp_dists],\r\n    294                                        axis=-1))\r\n\r\n~/.local/lib/python3.8/site-packages/theano/tensor/basic.py in stack(*tensors, **kwargs)\r\n   4726         dtype = scal.upcast(*[i.dtype for i in tensors])\r\n   4727         return theano.tensor.opt.MakeVector(dtype)(*tensors)\r\n-> 4728     return join(axis, *[shape_padaxis(t, axis) for t in tensors])\r\n   4729 \r\n   4730 \r\n\r\n~/.local/lib/python3.8/site-packages/theano/tensor/basic.py in join(axis, *tensors_list)\r\n   4500         return tensors_list[0]\r\n   4501     else:\r\n-> 4502         return join_(axis, *tensors_list)\r\n   4503 \r\n   4504 \r\n\r\n~/.local/lib/python3.8/site-packages/theano/gof/op.py in __call__(self, *inputs, **kwargs)\r\n    613         \"\"\"\r\n    614         return_list = kwargs.pop('return_list', False)\r\n--> 615         node = self.make_node(*inputs, **kwargs)\r\n    616 \r\n    617         if config.compute_test_value != 'off':\r\n\r\n~/.local/lib/python3.8/site-packages/theano/tensor/basic.py in make_node(self, *axis_and_tensors)\r\n   4232             return tensor(dtype=out_dtype, broadcastable=bcastable)\r\n   4233 \r\n-> 4234         return self._make_node_internal(\r\n   4235             axis, tensors, as_tensor_variable_args, output_maker)\r\n   4236 \r\n\r\n~/.local/lib/python3.8/site-packages/theano/tensor/basic.py in _make_node_internal(self, axis, tensors, as_tensor_variable_args, output_maker)\r\n   4299         if not python_all([x.ndim == len(bcastable)\r\n   4300                            for x in as_tensor_variable_args[1:]]):\r\n-> 4301             raise TypeError(\"Join() can only join tensors with the same \"\r\n   4302                             \"number of dimensions.\")\r\n   4303 \r\n\r\nTypeError: Join() can only join tensors with the same number of dimensions.\r\n```\r\n\r\nHowever, if I create a fake Mixture dist for the third distribution, it seems to work:\r\n\r\n```python\r\nwith pm.Model() as m:\r\n    a1 = pm.Normal.dist(mu=0, sigma=1)\r\n    a2 = pm.Normal.dist(mu=0, sigma=1)\r\n    a3 = pm.Normal.dist(mu=0, sigma=1)\r\n    \r\n    w1 = pm.Dirichlet('w1', np.array([1, 1]))    \r\n    mix = pm.Mixture.dist(w=w1, comp_dists=[a1, a2])\r\n    \r\n    fake_mix = pm.Mixture.dist(w=[1, 0], comp_dists=[a3, a3])\r\n    \r\n    w2 = pm.Dirichlet('w2', np.array([1, 1]))\r\n    like = pm.Mixture('like', w=w2, comp_dists=[mix, fake_mix], observed=np.random.randn(20))\r\n```\r\n\r\nI understand that this might not be optimal in the first place, and can certainly be coded as a custom distribution, but is this a design choice or a bug? It could also be just a question of shape handling, but I have no good intuition on how to check for that.\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.8.2\r\n* Operating system: Linux Ubuntu\r\n* How did you install PyMC3: pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3987", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3987/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3987/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3987/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3987", "id": 648855286, "node_id": "MDU6SXNzdWU2NDg4NTUyODY=", "number": 3987, "title": "GP Periodic Kernel uses uncommon formula", "user": {"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars2.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/defects", "name": "defects", "color": "e10c02", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-01T10:08:13Z", "updated_at": "2020-07-17T08:19:34Z", "closed_at": "2020-07-17T08:19:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As discussed [on the Discourse](https://discourse.pymc.io/t/gp-periodic-kernel-is-pymc3-different-from-other-sources/5348/2), PyMC3's `Periodic` kernel is [implemented as](https://docs.pymc.io/api/gp/cov.html#pymc3.gp.cov.Periodic):\r\n\r\n![equation](https://latex.codecogs.com/svg.latex?k%28x%2C%20x%27%29%20%3D%20%5Cmathrm%7Bexp%7D%5Cleft%28%20-%5Cfrac%7B%5Cmathrm%7Bsin%7D%5E2%28%5Cpi%20%7Cx-x%27%7C%20%5Cfrac%7B1%7D%7BT%7D%29%7D%7B2%20%5Cell%5E2%7D%20%5Cright%29)\r\n\r\nBut, in other sources such as David Duvenaud\u2019s [Kernel Cookbook](https://www.cs.toronto.edu/~duvenaud/cookbook/), as well as the [NB for mean and cov functions](https://docs.pymc.io/notebooks/GP-MeansAndCovs.html?highlight=periodic#Constructing-Periodic-using-WarpedInput), the formula is given by:\r\n![equation](https://latex.codecogs.com/svg.latex?k%28x%2C%20x%27%29%20%3D%20%5Cmathrm%7Bexp%7D%5Cleft%28%20-%5Cfrac%7B2%20%5Cmathrm%7Bsin%7D%5E2%28%5Cpi%20%7Cx-x%27%7C%20%5Cfrac%7B1%7D%7BT%7D%29%7D%7B%5Cell%5E2%7D%20%5Cright%29)\r\n\r\nAccording to @bwengals, this changes the interpretation of the lengthscale: a constant factor changes how you think of the lengthscale and what priors you\u2019d set on it. \r\nSo, **ideally, PyMC3's implementation should be changed to the second equation above** -- note that this would not be backwards-compatible then, so it should be accompanied by a warning. _Does anybody disagree?_\r\n\r\nA final note: it seems like we\u2019re using another slightly different implementation in PyMC**4**:\r\n\r\n![equation](https://latex.codecogs.com/svg.latex?k%28x%2C%20x%27%29%20%3D%20%5Csigma%5E2%20%5Cmathrm%7Bexp%7D%5Cleft%28%20-%5Cfrac%7B2%5Cmathrm%7Bsin%7D%5E2%28%5Cpi%20%7C%7Cx-x%27%7C%7C%5E2%20%5Cfrac%7B1%7D%7BT%7D%29%7D%7B%5Cell%5E2%7D%20%5Cright%29)\r\n@tirthasheshpatel do you confirm it is equivalent to the standard formula? I notice there is a new `sigma ** 2` parameter and the distance between `x` and `x'` is squared \ud83e\udd14 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3983", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3983/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3983/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3983/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3983", "id": 645063538, "node_id": "MDU6SXNzdWU2NDUwNjM1Mzg=", "number": 3983, "title": "sprinkler.py not working after installation", "user": {"login": "dorondru", "id": 8581796, "node_id": "MDQ6VXNlcjg1ODE3OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8581796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dorondru", "html_url": "https://github.com/dorondru", "followers_url": "https://api.github.com/users/dorondru/followers", "following_url": "https://api.github.com/users/dorondru/following{/other_user}", "gists_url": "https://api.github.com/users/dorondru/gists{/gist_id}", "starred_url": "https://api.github.com/users/dorondru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dorondru/subscriptions", "organizations_url": "https://api.github.com/users/dorondru/orgs", "repos_url": "https://api.github.com/users/dorondru/repos", "events_url": "https://api.github.com/users/dorondru/events{/privacy}", "received_events_url": "https://api.github.com/users/dorondru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-25T00:39:42Z", "updated_at": "2020-06-25T07:54:35Z", "closed_at": "2020-06-25T07:54:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nfrom pymc3 import Model, Bernoulli, sample, traceplot, BinaryGibbsMetropolis, sampling\r\nfrom pymc3.math import switch, gt, eq\r\nfrom matplotlib.pyplot import savefig\r\n\r\nNsamples = 5000#20000\r\n\r\nwith Model() as sprinkler_model:\r\n    Rain = Bernoulli('Rain', .2)\r\n    pSprinkler = switch( Rain, 0.01, 0.4)\r\n    Sprinkler = Bernoulli('Sprinkler', pSprinkler)\r\n    pWetGrass = switch( eq(Rain, 1),\r\n    #pWetGrass = switch(Rain,\r\n                        switch( Sprinkler, 0.99, 0.8 ),\r\n                        # need to apply some smoothing:\r\n                        switch( Sprinkler, .9, 1/Nsamples ) )\r\n    WetGrass = Bernoulli('WetGrass', pWetGrass, observed=1 )\r\n    _trace = sample(Nsamples, step=[BinaryGibbsMetropolis([Rain, Sprinkler])], tune=5000, random_seed=124)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\nYou can find the C code in this temporary file: /var/folders/f6/_qhvjtgs285ctsyzzvqzld2m0000gn/T/theano_compilation_error_rslyb38e\r\nTraceback (most recent call last):\r\n  File \"sprinkler.py\", line 14, in <module>\r\n    Rain = Bernoulli('Rain', .2)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/distributions/distribution.py\", line 82, in __new__\r\n    dist = cls.dist(*args, **kwargs)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/distributions/distribution.py\", line 91, in dist\r\n    dist.__init__(*args, **kwargs)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/distributions/discrete.py\", line 320, in __init__\r\n    self._logit_p = logit(p)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/math.py\", line 204, in logit\r\n    return tt.log(p / (floatX(1) - p))\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/tensor/var.py\", line 230, in __rsub__\r\n    return theano.tensor.basic.sub(other, self)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/gof/op.py\", line 670, in __call__\r\n    no_recycling=[])\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/gof/op.py\", line 955, in make_thunk\r\n    no_recycling)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/gof/op.py\", line 858, in make_c_thunk\r\n    output_storage=node_output_storage)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/gof/cc.py\", line 1217, in make_thunk\r\n    keep_lock=keep_lock)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/gof/cc.py\", line 1157, in __compile__\r\n    keep_lock=keep_lock)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/gof/cc.py\", line 1624, in cthunk_factory\r\n    key=key, lnk=self, keep_lock=keep_lock)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/gof/cmodule.py\", line 1189, in module_from_key\r\n    module = lnk.compile_cmodule(location)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/gof/cc.py\", line 1527, in compile_cmodule\r\n    preargs=preargs)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/gof/cmodule.py\", line 2396, in compile_str\r\n    (status, compile_stderr.replace('\\n', '. ')))\r\nException: (\"Compilation failed (return status=1): In file included from /Users/dorondru/.theano/compiledir_Darwin-18.7.0-x86_64-i386-64bit-i386-3.7.7-64/tmpwzcggonv/mod.cpp:1:. In file included from /usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/include/python3.7m/Python.h:25:. /Users/dorondru/opt/miniconda3/bin/../include/c++/v1/stdio.h:107:15: fatal error: 'stdio.h' file not found. #include_next <stdio.h>.               ^~~~~~~~~. 1 error generated.. \", '[Elemwise{sub,no_inplace}(TensorConstant{1.0}, TensorConstant{0.2})]')\r\n```\r\n\r\n**Please provide any additional information below.**\r\nFor a while it was woking in PyCharm, but not in commandline. I then installed pymc3: I tried all the different ways you suggested on the installation page, last one being: \"pip install pymc3\"\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: latest from github\r\n* Theano Version: IDK, shouldn't it be automatically installed as part of pymc3? the os cannot find it\r\n* Python Version: 3.7.7\r\n* Operating system: MC OS\r\n* How did you install PyMC3: (conda/pip) pip install pymc3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3976", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3976/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3976/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3976/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3976", "id": 642620011, "node_id": "MDU6SXNzdWU2NDI2MjAwMTE=", "number": 3976, "title": "Possible issue with coords?", "user": {"login": "kyleabeauchamp", "id": 1900459, "node_id": "MDQ6VXNlcjE5MDA0NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1900459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleabeauchamp", "html_url": "https://github.com/kyleabeauchamp", "followers_url": "https://api.github.com/users/kyleabeauchamp/followers", "following_url": "https://api.github.com/users/kyleabeauchamp/following{/other_user}", "gists_url": "https://api.github.com/users/kyleabeauchamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleabeauchamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleabeauchamp/subscriptions", "organizations_url": "https://api.github.com/users/kyleabeauchamp/orgs", "repos_url": "https://api.github.com/users/kyleabeauchamp/repos", "events_url": "https://api.github.com/users/kyleabeauchamp/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleabeauchamp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-21T18:52:51Z", "updated_at": "2020-06-23T15:01:58Z", "closed_at": "2020-06-23T15:01:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm finding that setting `coords` via a dictionary in `pm.Model` and leveraging the `dims` argument in random variables isn't quite doing what I'm expecting.  Though this could be user error (I'm somewhat new to the feature), I thought I'd post in case this is a bug.  \r\n\r\nIn the following example, I would expect the Arviz `InferenceData` object to have a 3 dimensions: chains, draws, and features.  However, instead the random variables `a` and `b` seem to each have their own dimension assigned, instead of them sharing the pre-defined features dimension.  Interestingly, the shape of each feature appears to be correct, but they seem to be assigned their own coordinate types.\r\n\r\n```\r\nimport pymc3 as pm\r\nimport numpy as np\r\n\r\nchains = 2\r\nn_features = 5\r\nn_samples = 1000\r\n\r\ncoords = {\"features\": np.arange(n_features)}\r\n\r\nwith pm.Model(coords=coords):\r\n    a = pm.Uniform(\"a\", -100, 100, dims=\"features\")\r\n    b = pm.Uniform(\"b\", -100, 100, dims=\"features\")\r\n    tr = pm.sample(n_samples, chains=chains, return_inferencedata=True)\r\n\r\n\r\nIn [2]: tr.posterior.coords                                                                                                                                                                                                                                                   \r\nOut[2]: \r\nCoordinates:\r\n  * chain    (chain) int64 0 1\r\n  * draw     (draw) int64 0 1 2 3 4 5 6 7 8 ... 992 993 994 995 996 997 998 999\r\n  * a_dim_0  (a_dim_0) int64 0 1 2 3 4\r\n  * b_dim_0  (b_dim_0) int64 0 1 2 3 4\r\n\r\nIn [4]: pm.__version__                                                                                                                                                                                                                                                        \r\nOut[4]: '3.9.1'\r\n\r\nIn [6]: az.__version__                                                                                                                                                                                                                                                        \r\nOut[6]: '0.8.3'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3973", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3973/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3973/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3973/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3973", "id": 641209654, "node_id": "MDU6SXNzdWU2NDEyMDk2NTQ=", "number": 3973, "title": "Typo in docs of the Cosine Kernel", "user": {"login": "tirthasheshpatel", "id": 43181252, "node_id": "MDQ6VXNlcjQzMTgxMjUy", "avatar_url": "https://avatars0.githubusercontent.com/u/43181252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirthasheshpatel", "html_url": "https://github.com/tirthasheshpatel", "followers_url": "https://api.github.com/users/tirthasheshpatel/followers", "following_url": "https://api.github.com/users/tirthasheshpatel/following{/other_user}", "gists_url": "https://api.github.com/users/tirthasheshpatel/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirthasheshpatel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirthasheshpatel/subscriptions", "organizations_url": "https://api.github.com/users/tirthasheshpatel/orgs", "repos_url": "https://api.github.com/users/tirthasheshpatel/repos", "events_url": "https://api.github.com/users/tirthasheshpatel/events{/privacy}", "received_events_url": "https://api.github.com/users/tirthasheshpatel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-18T13:29:49Z", "updated_at": "2020-06-19T10:47:45Z", "closed_at": "2020-06-19T10:47:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/pymc-devs/pymc3/blob/3b765a52dbae3772ae72ee7f16b446a2eaee7547/pymc3/gp/cov.py#L470\r\n\r\nThis line should be `k(x, x') = \\mathrm{cos}\\left( 2 \\pi \\frac{||x - x'||}{ \\ell^2} \\right)`\r\n\r\nReference: https://gpflow.readthedocs.io/en/master/gpflow/kernels/#gpflow-kernels-cosine", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3968", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3968/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3968/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3968/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3968", "id": 639398666, "node_id": "MDU6SXNzdWU2MzkzOTg2NjY=", "number": 3968, "title": "Rational Quadratic Kernels gives wrong results!", "user": {"login": "tirthasheshpatel", "id": 43181252, "node_id": "MDQ6VXNlcjQzMTgxMjUy", "avatar_url": "https://avatars0.githubusercontent.com/u/43181252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirthasheshpatel", "html_url": "https://github.com/tirthasheshpatel", "followers_url": "https://api.github.com/users/tirthasheshpatel/followers", "following_url": "https://api.github.com/users/tirthasheshpatel/following{/other_user}", "gists_url": "https://api.github.com/users/tirthasheshpatel/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirthasheshpatel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirthasheshpatel/subscriptions", "organizations_url": "https://api.github.com/users/tirthasheshpatel/orgs", "repos_url": "https://api.github.com/users/tirthasheshpatel/repos", "events_url": "https://api.github.com/users/tirthasheshpatel/events{/privacy}", "received_events_url": "https://api.github.com/users/tirthasheshpatel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "bwengals", "id": 6325473, "node_id": "MDQ6VXNlcjYzMjU0NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6325473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwengals", "html_url": "https://github.com/bwengals", "followers_url": "https://api.github.com/users/bwengals/followers", "following_url": "https://api.github.com/users/bwengals/following{/other_user}", "gists_url": "https://api.github.com/users/bwengals/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwengals/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwengals/subscriptions", "organizations_url": "https://api.github.com/users/bwengals/orgs", "repos_url": "https://api.github.com/users/bwengals/repos", "events_url": "https://api.github.com/users/bwengals/events{/privacy}", "received_events_url": "https://api.github.com/users/bwengals/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "bwengals", "id": 6325473, "node_id": "MDQ6VXNlcjYzMjU0NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/6325473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwengals", "html_url": "https://github.com/bwengals", "followers_url": "https://api.github.com/users/bwengals/followers", "following_url": "https://api.github.com/users/bwengals/following{/other_user}", "gists_url": "https://api.github.com/users/bwengals/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwengals/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwengals/subscriptions", "organizations_url": "https://api.github.com/users/bwengals/orgs", "repos_url": "https://api.github.com/users/bwengals/repos", "events_url": "https://api.github.com/users/bwengals/events{/privacy}", "received_events_url": "https://api.github.com/users/bwengals/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-06-16T06:12:23Z", "updated_at": "2020-06-16T07:06:33Z", "closed_at": "2020-06-16T06:56:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Here's the output of `RatQuad` kernel on `np.array([[1., 2.], [3., 4.]])`\r\n```python\r\n>>> x = np.array([[1., 2.], [3., 4.]])\r\n>>> k = pm.gp.cov.RatQuad(1, 1., 1.)\r\n>>> k(x, x).eval()\r\narray([[1.        , 0.33333333],\r\n       [0.33333333, 1.        ]])\r\n```\r\n\r\nThis is a wrong result. Comparing with tensorflow_probability and custom implementation, the result should be ``np.array([[1., 0.2], [0.2, 1.]])``\r\n\r\n```python\r\n>>> x = np.array([[1., 2.], [3., 4.]])\r\n>>> k = tfp.python.math.psd_kernels.RationalQuadratic(1., 1., 1.)\r\n>>> k.matrix(x, x)\r\n<tf.Tensor: shape=(2, 2), dtype=float32, numpy=\r\narray([[1.        , 0.19999999],\r\n       [0.19999999, 1.        ]], dtype=float32)>\r\n```\r\n\r\nI was not able to identify what the problem is by looking briefly at the source. This came up while I was testing some PyMC4 kernels.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.6.9\r\n* Operating system: Linux\r\n* How did you install PyMC3: git source\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3966", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3966/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3966/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3966/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3966", "id": 639067844, "node_id": "MDU6SXNzdWU2MzkwNjc4NDQ=", "number": 3966, "title": "Kernel dies", "user": {"login": "jeffensen", "id": 36547049, "node_id": "MDQ6VXNlcjM2NTQ3MDQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/36547049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffensen", "html_url": "https://github.com/jeffensen", "followers_url": "https://api.github.com/users/jeffensen/followers", "following_url": "https://api.github.com/users/jeffensen/following{/other_user}", "gists_url": "https://api.github.com/users/jeffensen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffensen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffensen/subscriptions", "organizations_url": "https://api.github.com/users/jeffensen/orgs", "repos_url": "https://api.github.com/users/jeffensen/repos", "events_url": "https://api.github.com/users/jeffensen/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffensen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-15T18:56:57Z", "updated_at": "2020-06-17T10:52:25Z", "closed_at": "2020-06-17T10:52:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying to get pymc3 running, but the Python Kernel always dies after NUTS sampling reaches 100%.\r\n\r\n```python\r\nfrom pymc3 import *\r\nimport numpy as np\r\n\r\nmu, sigma = 0, 5 # mean and standard deviation\r\ndata =  np.random.normal(mu, sigma, 1000)\r\n\r\nwith Model() as model:\r\n    # Parameters with priors\r\n    mu  = Uniform('mu', lower = -10, upper = 10)\r\n    std = Uniform('std', lower = 0, upper = 10)\r\n    \r\n    # Distribution of data\r\n    obs = Normal('obs', mu = mu, sigma = std, observed = data)\r\n    \r\n    sampler = NUTS()\r\n    trace = sample(2000, sampler)\r\n    \r\naz.plot_trace(trace)\r\n```\r\nAs suggested here (https://github.com/pymc-devs/pymc3/issues/1788) I already upgraded pymc3 and theano package to master:\r\n\r\n* PyMC3 Version: 3.9.0\r\n* Theano Version: 1.0.4 + 51.gf1e4ec47c\r\n* Python Version: 3.7.6\r\n* Operating system: Ubuntu 18.04.4 LTS\r\n* How did you install PyMC3: pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3965", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3965/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3965/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3965/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3965", "id": 638943764, "node_id": "MDU6SXNzdWU2Mzg5NDM3NjQ=", "number": 3965, "title": "Sampling fails after init with advi+adapt_diag_grad", "user": {"login": "fonnesbeck", "id": 81476, "node_id": "MDQ6VXNlcjgxNDc2", "avatar_url": "https://avatars3.githubusercontent.com/u/81476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fonnesbeck", "html_url": "https://github.com/fonnesbeck", "followers_url": "https://api.github.com/users/fonnesbeck/followers", "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}", "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions", "organizations_url": "https://api.github.com/users/fonnesbeck/orgs", "repos_url": "https://api.github.com/users/fonnesbeck/repos", "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}", "received_events_url": "https://api.github.com/users/fonnesbeck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-15T15:28:21Z", "updated_at": "2020-06-24T08:51:57Z", "closed_at": "2020-06-24T08:51:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When initializing a `sample` run with `advi+adapt_diag_grad`, the init runs without error, but when sampling starts it immediately fails. It appears the `tune` argument is not being passed from `sample`:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/cfonnesbeck/Repositories/pymc3/pymc3/parallel_sampling.py\", line 128, in run\r\n    self._start_loop()\r\n  File \"/Users/cfonnesbeck/Repositories/pymc3/pymc3/parallel_sampling.py\", line 182, in _start_loop\r\n    point, stats = self._compute_point()\r\n  File \"/Users/cfonnesbeck/Repositories/pymc3/pymc3/parallel_sampling.py\", line 209, in _compute_point\r\n    point, stats = self._step_method.step(self._point)\r\n  File \"/Users/cfonnesbeck/Repositories/pymc3/pymc3/step_methods/arraystep.py\", line 263, in step\r\n    apoint, stats = self.astep(array)\r\n  File \"/Users/cfonnesbeck/Repositories/pymc3/pymc3/step_methods/hmc/base_hmc.py\", line 170, in astep\r\n    self.potential.update(hmc_step.end.q, hmc_step.end.q_grad, self.tune)\r\n  File \"/Users/cfonnesbeck/Repositories/pymc3/pymc3/step_methods/hmc/quadpotential.py\", line 310, in update\r\n    super().update(sample, grad)\r\nTypeError: update() missing 1 required positional argument: 'tune'\r\n```\r\n\r\nHere is the call:\r\n\r\n        trace = pm.sample(1000, tune=3000, return_inferencedata=True, init='advi+adapt_diag_grad')\r\n\r\nRunning current master (3.9.0) on macOS and Python 3.8.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3962", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3962/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3962/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3962/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3962", "id": 638237422, "node_id": "MDU6SXNzdWU2MzgyMzc0MjI=", "number": 3962, "title": "GaussianRandomWalk prior predictive is broken", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/defects", "name": "defects", "color": "e10c02", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-13T21:36:13Z", "updated_at": "2020-07-24T16:25:56Z", "closed_at": "2020-07-24T16:25:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nWhen running a `sample_prior_predictive` for a `GaussianRandomWalk`, the result looks not even close to what one would expect:\r\n\r\n```\r\nx = numpy.arange(0, 10)\r\nwith pymc3.Model() as pmodel:\r\n    grw = pymc3.GaussianRandomWalk('grw', mu=0, sd=1, shape=len(x))\r\n    pp = pymc3.sample_prior_predictive()\r\nfig, (left, right) = pyplot.subplots(ncols=2, figsize=(10,5))\r\nfor i in numpy.random.randint(0, 500, size=40):\r\n    left.plot(x, pp['grw'][i,:])\r\nleft.set_title('sample_prior_predictive')    \r\nfor _ in range(50):\r\n    right.plot(x, grw.random())\r\nright.set_title('.random()')\r\npyplot.show()\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/5894642/84579474-54745600-adce-11ea-8fc8-5f7bfde107da.png)\r\n\r\n## Versions and main components\r\n* PyMC3 Version: latest master\r\n* Theano Version: the one and only\r\n* Python Version: 3.6.8\r\n* Operating system: Windows\r\n* How did you install PyMC3: pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3960", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3960/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3960/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3960/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3960", "id": 638137559, "node_id": "MDU6SXNzdWU2MzgxMzc1NTk=", "number": 3960, "title": "Cannot plot any plot which involves arviz", "user": {"login": "rlloretb", "id": 15695480, "node_id": "MDQ6VXNlcjE1Njk1NDgw", "avatar_url": "https://avatars3.githubusercontent.com/u/15695480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlloretb", "html_url": "https://github.com/rlloretb", "followers_url": "https://api.github.com/users/rlloretb/followers", "following_url": "https://api.github.com/users/rlloretb/following{/other_user}", "gists_url": "https://api.github.com/users/rlloretb/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlloretb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlloretb/subscriptions", "organizations_url": "https://api.github.com/users/rlloretb/orgs", "repos_url": "https://api.github.com/users/rlloretb/repos", "events_url": "https://api.github.com/users/rlloretb/events{/privacy}", "received_events_url": "https://api.github.com/users/rlloretb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-13T10:26:02Z", "updated_at": "2020-06-14T00:04:33Z", "closed_at": "2020-06-14T00:04:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I cannot plot any plot which seems to depend on arviz, i.e.:\r\n\r\n```python\r\npm.traceplot(trace)\r\npm.plot_posterior(trace)\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```\r\n  File \"/Users/lloretroger/Documents/GS_CL_OPT/bayesian_test.py\", line 37, in <module>\r\n    pm.traceplot(trace)\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/pymc3/plots/__init__.py\", line 23, in wrapped\r\n    return func(*args, **kwargs)\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/pymc3/plots/__init__.py\", line 41, in traceplot\r\n    return az.plot_trace(*args, **kwargs)\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/arviz/plots/traceplot.py\", line 300, in plot_trace\r\n    plot = get_plotting_function(\"plot_trace\", \"traceplot\", backend)\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/arviz/plots/plot_utils.py\", line 605, in get_plotting_function\r\n    backend=backend, plot_module=plot_module\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n\r\n  File \"<frozen importlib._bootstrap>\", line 953, in _find_and_load_unlocked\r\n\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/arviz/plots/backends/matplotlib/__init__.py\", line 43, in <module>\r\n    from .ppcplot import plot_ppc\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/arviz/plots/backends/matplotlib/ppcplot.py\", line 4, in <module>\r\n    from matplotlib import animation, get_backend\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/matplotlib/animation.py\", line 737, in <module>\r\n    class ImageMagickWriter(ImageMagickBase, MovieWriter):\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/matplotlib/animation.py\", line 120, in wrapper\r\n    if writerClass.isAvailable():\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/matplotlib/animation.py\", line 730, in isAvailable\r\n    return super().isAvailable()\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/matplotlib/animation.py\", line 427, in isAvailable\r\n    return shutil.which(cls.bin_path()) is not None\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/matplotlib/animation.py\", line 724, in bin_path\r\n    binpath = mpl._get_executable_info('magick').executable\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/matplotlib/__init__.py\", line 385, in _get_executable_info\r\n    return impl([path, \"--version\"], r\"^Version: ImageMagick (\\S*)\")\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/matplotlib/__init__.py\", line 330, in impl\r\n    raise _cpe\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/site-packages/matplotlib/__init__.py\", line 325, in impl\r\n    universal_newlines=True, errors=\"replace\")\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/subprocess.py\", line 411, in check_output\r\n    **kwargs).stdout\r\n\r\n  File \"/Users/lloretroger/opt/miniconda3/envs/default/lib/python3.7/subprocess.py\", line 512, in run\r\n    output=stdout, stderr=stderr)\r\n\r\nCalledProcessError: Command '['convert', '--version']' returned non-zero exit status 255.\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.7\r\n* Operating system: mac.OS 14.6 Mojave\r\n* How did you install PyMC3: (conda/pip) conda\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3947", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3947/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3947/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3947/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3947", "id": 633454469, "node_id": "MDU6SXNzdWU2MzM0NTQ0Njk=", "number": 3947, "title": "Creating Non-Central Student T distribution", "user": {"login": "Moj-ild", "id": 65033814, "node_id": "MDQ6VXNlcjY1MDMzODE0", "avatar_url": "https://avatars2.githubusercontent.com/u/65033814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Moj-ild", "html_url": "https://github.com/Moj-ild", "followers_url": "https://api.github.com/users/Moj-ild/followers", "following_url": "https://api.github.com/users/Moj-ild/following{/other_user}", "gists_url": "https://api.github.com/users/Moj-ild/gists{/gist_id}", "starred_url": "https://api.github.com/users/Moj-ild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Moj-ild/subscriptions", "organizations_url": "https://api.github.com/users/Moj-ild/orgs", "repos_url": "https://api.github.com/users/Moj-ild/repos", "events_url": "https://api.github.com/users/Moj-ild/events{/privacy}", "received_events_url": "https://api.github.com/users/Moj-ild/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-07T14:19:19Z", "updated_at": "2020-06-08T02:00:36Z", "closed_at": "2020-06-08T02:00:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been looking into creating the Non-Central Student T distribution using the idea from scipy, however, in scipy, it uses a special function called confluent hypergeometric function. Is there a way to or mathematical equation in your package that is close to this function as I am trying to create a class for this distribution and change NumPy functions into theano function? Because when I run the class code, the code just freezes and gives out the message:\r\n\r\n> INFO (theano.gof.compilelock): Refreshing lock C:\\Users\\Admin\\AppData\\Local\\Theano\\compiledir_Windows-10-10.0.18362-SP0-Intel64_Family_6_Model_78_Stepping_3_GenuineIntel-3.7.6-64\\lock_dir\\lock\r\n\r\nFor reference to my code for the class can be found in the link in discourse [NCT Distribution Class](https://discourse.pymc.io/t/how-to-create-non-central-students-t-distribution-and-what-priors-to-use-with-the-distribution/5203)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3943", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3943/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3943/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3943/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3943", "id": 631698295, "node_id": "MDU6SXNzdWU2MzE2OTgyOTU=", "number": 3943, "title": "pm.sample() returns error", "user": {"login": "grjd", "id": 7142903, "node_id": "MDQ6VXNlcjcxNDI5MDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7142903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grjd", "html_url": "https://github.com/grjd", "followers_url": "https://api.github.com/users/grjd/followers", "following_url": "https://api.github.com/users/grjd/following{/other_user}", "gists_url": "https://api.github.com/users/grjd/gists{/gist_id}", "starred_url": "https://api.github.com/users/grjd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grjd/subscriptions", "organizations_url": "https://api.github.com/users/grjd/orgs", "repos_url": "https://api.github.com/users/grjd/repos", "events_url": "https://api.github.com/users/grjd/events{/privacy}", "received_events_url": "https://api.github.com/users/grjd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008939096, "node_id": "MDU6TGFiZWwxMDA4OTM5MDk2", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/winOS", "name": "winOS", "color": "f9d0c4", "default": false, "description": "windows OS related"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-05T15:38:10Z", "updated_at": "2020-07-18T03:07:57Z", "closed_at": "2020-06-08T12:34:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Theano compilation error when calling to pm.sample in:\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\n\tage = preprocessing.scale(df_.edad_visita1)\r\n\tatrophy = preprocessing.scale(df_.fr_BrainSegVol_to_eTIV_y1)\r\n\t#atrophy_i ~ N(mu_i, sigma);  mu_i=a + bA A_i; a ~N(0,0.2), bA~N(0,0.5),sigma= Exponential(1)\r\n\twith pm.Model() as model_aa:\t\r\n\t\ta = pm.Normal('a', mu=0, sd=0.2)\r\n\t\tbA = pm.Normal('bA', mu=0, sd=0.5)\r\n\t\tsigma = pm.Exponential('sigma', 1)\r\n\t\tmu = pm.Deterministic('mu', a + bA * age)\r\n\t\tAtrophy = pm.Normal('Atrophy', mu=mu, sd=sigma, observed=atrophy)\r\n\t\ttrace_aa = pm.sample()\r\n\t\t\r\n\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\pymc3\\sampling.py in sample(draw\r\ns, step, init, n_init, start, trace, chain_idx, chains, cores, tune, p\r\nrogressbar, model, random_seed, discard_tuned_samples, compute_converg\r\nence_checks, **kwargs)\r\n    394                 start_, step = init_nuts(init=init, chains=cha\r\nins, n_init=n_init,\r\n    395                                          model=model, random_s\r\need=random_seed,\r\n--> 396                                          progressbar=progressb\r\nar, **kwargs)\r\n    397                 if start is None:\r\n    398                     start = start_\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\pymc3\\sampling.py in init_nuts(i\r\nnit, chains, n_init, model, random_seed, progressbar, **kwargs)       \r\n   1513             'Unknown initializer: {}.'.format(init))\r\n   1514\r\n-> 1515     step = pm.NUTS(potential=potential, model=model, **kwargs)\r\n\r\n   1516\r\n   1517     return start, step\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\pymc3\\step_methods\\hmc\\nuts.py i\r\nn __init__(self, vars, max_treedepth, early_max_treedepth, **kwargs)  \r\n    150         `pm.sample` to the desired number of tuning steps.    \r\n    151         \"\"\"\r\n--> 152         super().__init__(vars, **kwargs)\r\n    153\r\n    154         self.max_treedepth = max_treedepth\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\pymc3\\step_methods\\hmc\\base_hmc.\r\npy in __init__(self, vars, scaling, step_scale, is_cov, model, blocked\r\n, potential, dtype, Emax, target_accept, gamma, k, t0, adapt_step_size\r\n, step_rand, **theano_kwargs)\r\n     70         vars = inputvars(vars)\r\n     71\r\n---> 72         super().__init__(vars, blocked=blocked, model=model, d\r\ntype=dtype, **theano_kwargs)\r\n     73\r\n     74         self.adapt_step_size = adapt_step_size\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\pymc3\\step_methods\\arraystep.py \r\nin __init__(self, vars, model, blocked, dtype, **theano_kwargs)       \r\n    226\r\n    227         func = model.logp_dlogp_function(\r\n--> 228             vars, dtype=dtype, **theano_kwargs)\r\n    229 \r\n    230         # handle edge case discovered in #2948\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\pymc3\\model.py in logp_dlogp_fun\r\nction(self, grad_vars, **kwargs)\r\n    721         varnames = [var.name for var in grad_vars]\r\n    722         extra_vars = [var for var in self.free_RVs if var.name\r\n not in varnames]\r\n--> 723         return ValueGradFunction(self.logpt, grad_vars, extra_\r\nvars, **kwargs)\r\n    724\r\n    725     @property\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\pymc3\\model.py in __init__(self,\r\n cost, grad_vars, extra_vars, dtype, casting, **kwargs)\r\n    454             self._cost, grad_vars, self._ordering.vmap)       \r\n    455\r\n--> 456         grad = tt.grad(self._cost_joined, self._vars_joined)  \r\n    457         grad.name = '__grad'\r\n    458\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in grad(cost,\r\n wrt, consider_constant, disconnected_inputs, add_names, known_grads, \r\nreturn_disconnected, null_gradients)\r\n    603\r\n    604     rval = _populate_grad_dict(var_to_app_to_idx,\r\n--> 605                                grad_dict, wrt, cost_name)     \r\n    606 \r\n    607     for i in xrange(len(rval)):\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in _populate_\r\ngrad_dict(var_to_app_to_idx, grad_dict, wrt, cost_name)\r\n   1369         return grad_dict[var]\r\n   1370\r\n-> 1371     rval = [access_grad_cache(elem) for elem in wrt]\r\n   1372\r\n   1373     return rval\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in <listcomp>\r\n(.0)\r\n   1369         return grad_dict[var]\r\n   1370\r\n-> 1371     rval = [access_grad_cache(elem) for elem in wrt]\r\n   1372\r\n   1373     return rval\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_gra\r\nd_cache(var)\r\n   1324                     for idx in node_to_idx[node]:\r\n   1325\r\n-> 1326                         term = access_term_cache(node)[idx]   \r\n   1327\r\n   1328                         if not isinstance(term, gof.Variable):\r\n\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_ter\r\nm_cache(node)\r\n   1019             inputs = node.inputs\r\n   1020 \r\n-> 1021             output_grads = [access_grad_cache(var) for var in \r\nnode.outputs]\r\n   1022\r\n   1023             # list of bools indicating if each output is conne\r\ncted to the cost\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in <listcomp>\r\n(.0)\r\n   1019             inputs = node.inputs\r\n   1020\r\n-> 1021             output_grads = [access_grad_cache(var) for var in \r\nnode.outputs]\r\n   1022\r\n   1023             # list of bools indicating if each output is conne\r\ncted to the cost\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_gra\r\nd_cache(var)\r\n   1324                     for idx in node_to_idx[node]:\r\n   1325 \r\n-> 1326                         term = access_term_cache(node)[idx]   \r\n   1327\r\n   1328                         if not isinstance(term, gof.Variable):\r\n\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_ter\r\nm_cache(node)\r\n   1019             inputs = node.inputs\r\n   1020\r\n-> 1021             output_grads = [access_grad_cache(var) for var in \r\nnode.outputs]\r\n   1022\r\n   1023             # list of bools indicating if each output is conne\r\ncted to the cost\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in <listcomp>\r\n(.0)\r\n   1019             inputs = node.inputs\r\n   1020 \r\n-> 1021             output_grads = [access_grad_cache(var) for var in \r\nnode.outputs]\r\n   1022\r\n   1023             # list of bools indicating if each output is conne\r\ncted to the cost\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_gra\r\nd_cache(var)\r\n   1324                     for idx in node_to_idx[node]:\r\n   1325\r\n-> 1326                         term = access_term_cache(node)[idx]   \r\n   1327\r\n   1328                         if not isinstance(term, gof.Variable):\r\n\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_ter\r\nm_cache(node)\r\n   1019             inputs = node.inputs\r\n   1020\r\n-> 1021             output_grads = [access_grad_cache(var) for var in \r\nnode.outputs]\r\n   1022\r\n   1023             # list of bools indicating if each output is conne\r\ncted to the cost\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in <listcomp>\r\n(.0)\r\n   1019             inputs = node.inputs\r\n   1020\r\n-> 1021             output_grads = [access_grad_cache(var) for var in \r\nnode.outputs]\r\n   1022\r\n   1023             # list of bools indicating if each output is conne\r\ncted to the cost\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_gra\r\nd_cache(var)\r\n   1324                     for idx in node_to_idx[node]:\r\n   1325\r\n-> 1326                         term = access_term_cache(node)[idx]   \r\n   1327 \r\n   1328                         if not isinstance(term, gof.Variable):\r\n\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_ter\r\nm_cache(node)\r\n   1019             inputs = node.inputs\r\n   1020\r\n-> 1021             output_grads = [access_grad_cache(var) for var in \r\nnode.outputs]\r\n   1022\r\n   1023             # list of bools indicating if each output is conne\r\ncted to the cost\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in <listcomp>\r\n(.0)\r\n   1019             inputs = node.inputs\r\n   1020\r\n-> 1021             output_grads = [access_grad_cache(var) for var in \r\nnode.outputs]\r\n   1022\r\n   1023             # list of bools indicating if each output is conne\r\ncted to the cost\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_gra\r\nd_cache(var)\r\n   1324                     for idx in node_to_idx[node]:\r\n   1325\r\n-> 1326                         term = access_term_cache(node)[idx]   \r\n   1327\r\n   1328                         if not isinstance(term, gof.Variable):\r\n\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_ter\r\nm_cache(node)\r\n   1019             inputs = node.inputs\r\n   1020\r\n-> 1021             output_grads = [access_grad_cache(var) for var in \r\nnode.outputs]\r\n   1022\r\n   1023             # list of bools indicating if each output is conne\r\ncted to the cost\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in <listcomp>\r\n(.0)\r\n   1019             inputs = node.inputs\r\n   1020\r\n-> 1021             output_grads = [access_grad_cache(var) for var in \r\nnode.outputs]\r\n   1022\r\n   1023             # list of bools indicating if each output is conne\r\ncted to the cost\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_gra\r\nd_cache(var)\r\n   1324                     for idx in node_to_idx[node]:\r\n   1325\r\n-> 1326                         term = access_term_cache(node)[idx]   \r\n   1327\r\n   1328                         if not isinstance(term, gof.Variable):\r\n\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_ter\r\nm_cache(node)\r\n   1019             inputs = node.inputs\r\n   1020\r\n-> 1021             output_grads = [access_grad_cache(var) for var in \r\nnode.outputs]\r\n   1022\r\n   1023             # list of bools indicating if each output is conne\r\ncted to the cost\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in <listcomp>\r\n(.0)\r\n   1019             inputs = node.inputs\r\n   1020\r\n-> 1021             output_grads = [access_grad_cache(var) for var in \r\nnode.outputs]\r\n   1022\r\n   1023             # list of bools indicating if each output is conne\r\ncted to the cost\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_gra\r\nd_cache(var)\r\n   1324                     for idx in node_to_idx[node]:\r\n   1325\r\n-> 1326                         term = access_term_cache(node)[idx]   \r\n   1327\r\n   1328                         if not isinstance(term, gof.Variable):\r\n\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gradient.py in access_ter\r\nm_cache(node)\r\n   1160\r\n   1161                 input_grads = node.op.L_op(inputs, node.output\r\ns,\r\n-> 1162                                            new_output_grads)\r\n   1163 \r\n   1164                 if input_grads is None:\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\tensor\\elemwise.py in L_o\r\np(self, inputs, outs, ograds)\r\n    541\r\n    542         # compute grad with respect to broadcasted input      \r\n--> 543         rval = self._bgrad(inputs, outs, ograds)\r\n    544\r\n    545         # TODO: make sure that zeros are clearly identifiable \r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\tensor\\elemwise.py in _bg\r\nrad(self, inputs, outputs, ograds)\r\n    641                 ret.append(None)\r\n    642                 continue\r\n--> 643             ret.append(transform(scalar_igrad))\r\n    644\r\n    645         return ret\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\tensor\\elemwise.py in tra\r\nnsform(r)\r\n    633\r\n    634             new_r = Elemwise(node.op, {})(\r\n--> 635                 *[transform(ipt) for ipt in node.inputs])     \r\n    636             return new_r\r\n    637         ret = []\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\tensor\\elemwise.py in <li\r\nstcomp>(.0)\r\n    633\r\n    634             new_r = Elemwise(node.op, {})(\r\n--> 635                 *[transform(ipt) for ipt in node.inputs])     \r\n    636             return new_r\r\n    637         ret = []\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\tensor\\elemwise.py in tra\r\nnsform(r)\r\n    633\r\n    634             new_r = Elemwise(node.op, {})(\r\n--> 635                 *[transform(ipt) for ipt in node.inputs])     \r\n    636             return new_r\r\n    637         ret = []\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gof\\op.py in __call__(sel\r\nf, *inputs, **kwargs)\r\n    668                 # compute output value once with test inputs t\r\no validate graph\r\n    669                 thunk = node.op.make_thunk(node, storage_map, \r\ncompute_map,\r\n--> 670                                            no_recycling=[])   \r\n    671                 thunk.inputs = [storage_map[v] for v in node.i\r\nnputs]\r\n    672                 thunk.outputs = [storage_map[v] for v in node.\r\noutputs]\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gof\\op.py in make_thunk(s\r\nelf, node, storage_map, compute_map, no_recycling, impl)\r\n    953             try:\r\n    954                 return self.make_c_thunk(node, storage_map, co\r\nmpute_map,\r\n--> 955                                          no_recycling)\r\n    956             except (NotImplementedError, utils.MethodNotDefine\r\nd):\r\n    957                 # We requested the c code, so don't catch the \r\nerror.\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gof\\op.py in make_c_thunk\r\n(self, node, storage_map, compute_map, no_recycling)\r\n    856         _logger.debug('Trying CLinker.make_thunk')\r\n    857         outputs = cl.make_thunk(input_storage=node_input_stora\r\nge,\r\n--> 858                                 output_storage=node_output_sto\r\nrage)\r\n    859         thunk, node_input_filters, node_output_filters = outpu\r\nts\r\n    860\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gof\\cc.py in make_thunk(s\r\nelf, input_storage, output_storage, storage_map, keep_lock)\r\n   1215         cthunk, module, in_storage, out_storage, error_storage\r\n = self.__compile__(\r\n   1216             input_storage, output_storage, storage_map,       \r\n-> 1217             keep_lock=keep_lock)\r\n   1218 \r\n   1219         res = _CThunk(cthunk, init_tasks, tasks, error_storage\r\n, module)\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gof\\cc.py in __compile__(\r\nself, input_storage, output_storage, storage_map, keep_lock)\r\n   1155                                             output_storage,   \r\n   1156                                             storage_map,      \r\n-> 1157                                             keep_lock=keep_loc\r\nk)\r\n   1158         return (thunk,\r\n   1159                 module,\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gof\\cc.py in cthunk_facto\r\nry(self, error_storage, in_storage, out_storage, storage_map, keep_loc\r\nk)\r\n   1622                 node.op.prepare_node(node, storage_map, None, \r\n'c')\r\n   1623             module = get_module_cache().module_from_key(      \r\n-> 1624                 key=key, lnk=self, keep_lock=keep_lock)       \r\n   1625 \r\n   1626         vars = self.inputs + self.outputs + self.orphans\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gof\\cmodule.py in module_\r\nfrom_key(self, key, lnk, keep_lock)\r\n   1187             try:\r\n   1188                 location = dlimport_workdir(self.dirname)     \r\n-> 1189                 module = lnk.compile_cmodule(location)\r\n   1190                 name = module.__file__\r\n   1191                 assert name.startswith(location)\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gof\\cc.py in compile_cmod\r\nule(self, location)\r\n   1525                 lib_dirs=self.lib_dirs(),\r\n   1526                 libs=libs,\r\n-> 1527                 preargs=preargs)\r\n   1528         except Exception as e:\r\n   1529             e.args += (str(self.fgraph),)\r\n\r\n~\\.conda\\envs\\pymc3\\lib\\site-packages\\theano\\gof\\cmodule.py in compile_str(module_name, src_code, location, include_dirs\r\n, lib_dirs, libs, preargs, py_module, hide_symbols)\r\n   2397             # difficult to read.\r\n   2398             raise Exception('Compilation failed (return status=%s): %s' %\r\n-> 2399                             (status, compile_stderr.replace('\\n', '. ')))\r\n   2400         elif config.cmodule.compilation_warning and compile_stderr:\r\n   2401             # Print errors just below the command line.\r\n\r\nException: ('Compilation failed (return status=1): C:\\\\Users\\\\borri\\\\AppData\\\\Local\\\\Temp\\\\ccqpqDOf.s: Assembler message\r\ns:\\r. C:\\\\Users\\\\borri\\\\AppData\\\\Local\\\\Temp\\\\ccqpqDOf.s:282: Error: invalid register for .seh_savexmm\\r. ', '[Elemwise{\r\nEQ}(<TensorType(float64, vector)>, <TensorType(int8, (True,))>)]')\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: '3.7'\r\n* Theano Version: 1.0.4\r\n* Python Version:3.7.5\r\n* Operating system:Windows 10\r\n* How did you install PyMC3: (conda/pip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3942", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3942/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3942/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3942/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3942", "id": 631469909, "node_id": "MDU6SXNzdWU2MzE0Njk5MDk=", "number": 3942, "title": "YAMLLoadWarnin g: calling yaml.load() without Loader=... is deprecated", "user": {"login": "cschiri", "id": 31516469, "node_id": "MDQ6VXNlcjMxNTE2NDY5", "avatar_url": "https://avatars3.githubusercontent.com/u/31516469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cschiri", "html_url": "https://github.com/cschiri", "followers_url": "https://api.github.com/users/cschiri/followers", "following_url": "https://api.github.com/users/cschiri/following{/other_user}", "gists_url": "https://api.github.com/users/cschiri/gists{/gist_id}", "starred_url": "https://api.github.com/users/cschiri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cschiri/subscriptions", "organizations_url": "https://api.github.com/users/cschiri/orgs", "repos_url": "https://api.github.com/users/cschiri/repos", "events_url": "https://api.github.com/users/cschiri/events{/privacy}", "received_events_url": "https://api.github.com/users/cschiri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-05T10:01:00Z", "updated_at": "2020-06-06T08:47:27Z", "closed_at": "2020-06-06T08:47:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of problem:\r\n\r\nWhenever I import pymc3, I get the following warning:\r\n\r\n```\r\nC:\\Users\\ixe\\Anaconda3\\lib\\site-packages\\dask\\config.py:168: YAMLLoadWarnin\r\ng: calling yaml.load() without Loader=... is deprecated, as the default Loader i\r\ns unsafe. Please read https://msg.pyyaml.org/load for full details.\r\n  data = yaml.load(f.read()) or {}\r\nC:\\Users\\ixe\\Anaconda3\\lib\\site-packages\\distributed\\config.py:20: YAMLLoad\r\nWarning: calling yaml.load() without Loader=... is deprecated, as the default Lo\r\nader is unsafe. Please read https://msg.pyyaml.org/load for full details.\r\n  defaults = yaml.load(f)\r\n```\r\nShould I be worried about the warnings? How do I resolve the underlying issues; i.e. if they impede the functionality of pymc3?\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.3\r\n* Operating system: Windows 8.1\r\n* How did you install PyMC3: Pip Install\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3939", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3939/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3939/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3939/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3939", "id": 629438272, "node_id": "MDU6SXNzdWU2Mjk0MzgyNzI=", "number": 3939, "title": "Thinko in quadpotential and step size adaptation", "user": {"login": "dfm", "id": 350282, "node_id": "MDQ6VXNlcjM1MDI4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/350282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfm", "html_url": "https://github.com/dfm", "followers_url": "https://api.github.com/users/dfm/followers", "following_url": "https://api.github.com/users/dfm/following{/other_user}", "gists_url": "https://api.github.com/users/dfm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfm/subscriptions", "organizations_url": "https://api.github.com/users/dfm/orgs", "repos_url": "https://api.github.com/users/dfm/repos", "events_url": "https://api.github.com/users/dfm/events{/privacy}", "received_events_url": "https://api.github.com/users/dfm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-02T18:56:36Z", "updated_at": "2020-06-04T17:30:07Z", "closed_at": "2020-06-04T17:30:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nI believe that there is a thinko in the implementation of the quadpotential and step size tuning strategy as currently implemented. Using the default settings (or if you run the same number of chains as cores), it won't have a huge effect, but I think it is worth considering how to fix it for reasons that I'll explain below! It will be a significant problem if you run more chains than cores and use `adaptation_window_multiplier != 1`.\r\n\r\nThe illustrative example is as follows: I was hoping that running the following code would print `500, 500`, but instead it prints `2000, 2001`.\r\n\r\n```python\r\nimport pymc3 as pm\r\n\r\nwith pm.Model() as model:\r\n    x = pm.Normal(\"x\")\r\n\r\n    chains = 4\r\n    start, step = pm.sampling.init_nuts(chains=chains)\r\n    trace = pm.sample(tune=500, start=start, step=step, chains=chains, cores=1)\r\n    print(step.potential._n_samples, step.step_adapt._count)\r\n```\r\n\r\nThis is because the tuning schedule *does not get reset when starting on a new chain*. This also means that the results of an MCMC will depend on the number of cores you use, even if you set the random seed!\r\n\r\nBecause of how multiprocessing works, I think that this shouldn't be a problem if you run the same number of chains as cores (or maybe even if you just use more than 1 core?), but I haven't tested that in detail.\r\n\r\nMy proposed solution would be to implement a `reset_tuning` method on the `NUTS` object that propagates this reset call to the `potential` and `step_adapt` objects. The `reset` method on the quadpotentials is currently a no-op in all(?) cases, so that would also need to be implemented.\r\n\r\nI'm happy to implement this, but I'd love to hear your thoughts if you have some! Let me know if I've missed something.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3937", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3937/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3937/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3937/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3937", "id": 626688091, "node_id": "MDU6SXNzdWU2MjY2ODgwOTE=", "number": 3937, "title": "Tracking logp using step=pm.SMC() in 3.7 and pm.sample_smc in 3.8", "user": {"login": "KiranGauthier", "id": 45179282, "node_id": "MDQ6VXNlcjQ1MTc5Mjgy", "avatar_url": "https://avatars1.githubusercontent.com/u/45179282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KiranGauthier", "html_url": "https://github.com/KiranGauthier", "followers_url": "https://api.github.com/users/KiranGauthier/followers", "following_url": "https://api.github.com/users/KiranGauthier/following{/other_user}", "gists_url": "https://api.github.com/users/KiranGauthier/gists{/gist_id}", "starred_url": "https://api.github.com/users/KiranGauthier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KiranGauthier/subscriptions", "organizations_url": "https://api.github.com/users/KiranGauthier/orgs", "repos_url": "https://api.github.com/users/KiranGauthier/repos", "events_url": "https://api.github.com/users/KiranGauthier/events{/privacy}", "received_events_url": "https://api.github.com/users/KiranGauthier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-05-28T17:33:05Z", "updated_at": "2020-06-15T17:41:15Z", "closed_at": "2020-06-15T17:41:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Looking to track the logp similar to NUTS in SMC sampler \r\n\r\nHi guys, I'm looking for some guidance on how to track the log-probability (logp) of the trace when using an SMC sampler. I was referred by @eigenfoo who contributed on the post [here](https://github.com/pymc-devs/pymc3/issues/2971) and the forks ([here](https://github.com/pymc-devs/pymc3/pull/3134) and [here](https://github.com/pymc-devs/pymc3/pull/3121)).  When I deal with NUTS, I've found that declaring a deterministic variable as pm.Deterministic('logp', model.logpt) works best to track the log-probability of the trace but whenever I try to include it in an SMC based sampler I see a traceback like the **Minimal example**. \r\n\r\nI know the syntax changed in 3.7 from something like \r\n\r\n```python\r\nwith model: \r\n    trace = pm.sample(step=pm.SMC()) \r\n```\r\n\r\nto the below in 3.8 \r\n```python\r\nwith model: \r\n    trace = pm.sample_smc(...)\r\n```\r\nSo I tried both versions but neither seem to work. \r\n\r\n**Minimal example.** \r\n```python\r\nmodel = pm.Model()\r\n\r\nwith model:\r\n    # Priors\r\n    mu = pm.Normal('mu', mu=0, sigma=1)\r\n    logp_ = pm.Deterministic('logp', model.logpt)\r\n\r\n    obs = pm.Normal('obs', mu=mu, sigma=1, observed=np.random.randn(100))\r\n\r\nwith model: \r\n    trace = pm.sample(step=pm.SMC(...)) \r\n\r\n```\r\n**Traceback**\r\n```python\r\nSample initial stage: ...\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-140-6e7754df4da0> in <module>\r\n      1 pm.sample(draws=5000,chains=10000,step=pm.SMC(),cores=1,model=HMCmodel, tune_steps=True,\r\n----> 2                                  progressbar=False) \r\n\r\n~/opt/anaconda3/envs/pymc3_37/lib/python3.7/site-packages/pymc3/sampling.py in sample(draws, step, init, n_init, start, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, **kwargs)\r\n    338                                progressbar=progressbar,\r\n    339                                model=model,\r\n--> 340                                random_seed=random_seed)\r\n    341     else:\r\n    342         if 'njobs' in kwargs:\r\n\r\n~/opt/anaconda3/envs/pymc3_37/lib/python3.7/site-packages/pymc3/step_methods/smc.py in sample_smc(draws, step, cores, progressbar, model, random_seed)\r\n    153 \r\n    154     pm._log.info(\"Sample initial stage: ...\")\r\n--> 155     posterior, var_info = _initial_population(draws, model, variables)\r\n    156 \r\n    157     while beta < 1:\r\n\r\n~/opt/anaconda3/envs/pymc3_37/lib/python3.7/site-packages/pymc3/step_methods/smc_utils.py in _initial_population(draws, model, variables)\r\n     17     var_info = {}\r\n     18     start = model.test_point\r\n---> 19     init_rnd = pm.sample_prior_predictive(draws, model=model)\r\n     20     for v in variables:\r\n     21         var_info[v.name] = (start[v.name].shape, start[v.name].size)\r\n\r\n~/opt/anaconda3/envs/pymc3_37/lib/python3.7/site-packages/pymc3/sampling.py in sample_prior_predictive(samples, model, vars, var_names, random_seed)\r\n   1320     names = get_default_varnames(model.named_vars, include_transformed=False)\r\n   1321     # draw_values fails with auto-transformed variables. transform them later!\r\n-> 1322     values = draw_values([model[name] for name in names], size=samples)\r\n   1323 \r\n   1324     data = {k: v for k, v in zip(names, values)}\r\n\r\n~/opt/anaconda3/envs/pymc3_37/lib/python3.7/site-packages/pymc3/distributions/distribution.py in draw_values(params, point, size)\r\n    411         while to_eval or missing_inputs:\r\n    412             if to_eval == missing_inputs:\r\n--> 413                 raise ValueError('Cannot resolve inputs for {}'.format([str(params[j]) for j in to_eval]))\r\n    414             to_eval = set(missing_inputs)\r\n    415             missing_inputs = set()\r\n\r\nValueError: Cannot resolve inputs for ['logp']\r\n```\r\n\r\nAny thoughts would be greatly appreciated:) \r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.7/3.8 \r\n* Theano Version: 1.0.4 \r\n* Python Version: Python 3.7.7 \r\n* Operating system: macOS Catalina \r\n* How did you install PyMC3: pip \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3932", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3932/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3932/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3932/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3932", "id": 623698256, "node_id": "MDU6SXNzdWU2MjM2OTgyNTY=", "number": 3932, "title": "Getting TypeError: bad operand type for unary -: 'NoneType'", "user": {"login": "dorondru", "id": 8581796, "node_id": "MDQ6VXNlcjg1ODE3OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8581796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dorondru", "html_url": "https://github.com/dorondru", "followers_url": "https://api.github.com/users/dorondru/followers", "following_url": "https://api.github.com/users/dorondru/following{/other_user}", "gists_url": "https://api.github.com/users/dorondru/gists{/gist_id}", "starred_url": "https://api.github.com/users/dorondru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dorondru/subscriptions", "organizations_url": "https://api.github.com/users/dorondru/orgs", "repos_url": "https://api.github.com/users/dorondru/repos", "events_url": "https://api.github.com/users/dorondru/events{/privacy}", "received_events_url": "https://api.github.com/users/dorondru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2020-05-23T16:50:27Z", "updated_at": "2020-05-23T22:21:14Z", "closed_at": "2020-05-23T22:21:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\nGetting TypeError: bad operand type for unary -: 'NoneType'\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\n\r\nfrom pymc3 import Model, Bernoulli, sample, traceplot, BinaryGibbsMetropolis\r\nfrom pymc3.math import switch\r\nfrom matplotlib.pyplot import savefig\r\n\r\nNsamples = 10000\r\n\r\nwith Model() as sprinkler_model:\r\n    Rain = Bernoulli('Rain', .2)\r\n    pSprinkler = switch( Rain, 0.01, 0.4)\r\n    Sprinkler = Bernoulli('Sprinkler', pSprinkler)\r\n    pWetGrass = switch( Rain,\r\n                        switch( Sprinkler, 0.99, 0.8 ),\r\n                        # need to apply some smoothing:\r\n                        switch( Sprinkler, .9, 1/Nsamples ) )\r\n    WetGrass = Bernoulli('WetGrass', pWetGrass, observed=1 )\r\n    _trace = sample(Nsamples, step=[BinaryGibbsMetropolis([Rain, Sprinkler])], tune=5000, random_seed=124)\r\n    #trace = sample(Nsamples)\r\n    #traceplot(trace)\r\n    savefig('_trace_{}.png'.format(Nsamples))\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/Users/dorondru/Documents/NPS/Research/2021/Kurt_sponsor/VerifAI/VerifAI-master/verifai/simulators/car_simulator/examples/lanekeeping_LQR/sprinkler.py\", line 22, in <module>\r\n    _trace = sample(Nsamples, step=[BinaryGibbsMetropolis([Rain, Sprinkler])], tune=5000, random_seed=124)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/sampling.py\", line 498, in sample\r\n    trace.report._run_convergence_checks(trace, model)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/backends/report.py\", line 84, in _run_convergence_checks\r\n    self._ess = ess = ess(trace, var_names=varnames)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/stats/__init__.py\", line 24, in wrapped\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/stats/diagnostics.py\", line 191, in ess\r\n    dataset = convert_to_dataset(data, group=\"posterior\")\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/converters.py\", line 177, in convert_to_dataset\r\n    inference_data = convert_to_inference_data(obj, group=group, coords=coords, dims=dims)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/converters.py\", line 91, in convert_to_inference_data\r\n    return from_pymc3(trace=kwargs.pop(group), **kwargs)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/io_pymc3.py\", line 485, in from_pymc3\r\n    save_warmup=save_warmup,\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/io_pymc3.py\", line 415, in to_inference_data\r\n    \"posterior\": self.posterior_to_xarray(),\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/base.py\", line 37, in wrapped\r\n    return func(cls, *args, **kwargs)\r\n  File \"/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/arviz/data/io_pymc3.py\", line 209, in posterior_to_xarray\r\n    self.trace[-self.ndraws :].get_values(var_name, combine=False, squeeze=False)\r\nTypeError: bad operand type for unary -: 'NoneType'\r\n\r\nProcess finished with exit code 1\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: latest\r\n* Theano Version: latest\r\n* Python Version: 3.7.7\r\n* Operating system: Mojave, 10.14.6\r\n* How did you install PyMC3: (conda/pip) pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3929", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3929/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3929/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3929/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3929", "id": 621249570, "node_id": "MDU6SXNzdWU2MjEyNDk1NzA=", "number": 3929, "title": "TypeError: data type \"float128\" not understood", "user": {"login": "karnn", "id": 35896463, "node_id": "MDQ6VXNlcjM1ODk2NDYz", "avatar_url": "https://avatars0.githubusercontent.com/u/35896463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karnn", "html_url": "https://github.com/karnn", "followers_url": "https://api.github.com/users/karnn/followers", "following_url": "https://api.github.com/users/karnn/following{/other_user}", "gists_url": "https://api.github.com/users/karnn/gists{/gist_id}", "starred_url": "https://api.github.com/users/karnn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karnn/subscriptions", "organizations_url": "https://api.github.com/users/karnn/orgs", "repos_url": "https://api.github.com/users/karnn/repos", "events_url": "https://api.github.com/users/karnn/events{/privacy}", "received_events_url": "https://api.github.com/users/karnn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1008939096, "node_id": "MDU6TGFiZWwxMDA4OTM5MDk2", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/winOS", "name": "winOS", "color": "f9d0c4", "default": false, "description": "windows OS related"}], "state": "closed", "locked": false, "assignee": {"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-05-19T20:03:29Z", "updated_at": "2020-05-20T09:15:24Z", "closed_at": "2020-05-20T09:15:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Import pymc3 fails on windows and anaconda with TypeError `numpy.float128` datatype not recognised\r\n\r\n**Python 3.8.2 numpy 1.18.4**\r\n```python\r\nimport pymc3\r\n```\r\nError log:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-1-75554ce6e5eb> in <module>\r\n      2 import matplotlib.pyplot as plt\r\n      3 import numpy as np\r\n----> 4 import pymc3 as pm\r\n      5 import scipy.stats as stats\r\n\r\n~\\Miniconda3\\envs\\stat-rethink2-pymc3\\lib\\site-packages\\pymc3\\__init__.py in <module>\r\n     49 \r\n     50 from .blocking import *\r\n---> 51 from .distributions import *\r\n     52 from .distributions import transforms\r\n     53 from .glm import *\r\n\r\n~\\Miniconda3\\envs\\stat-rethink2-pymc3\\lib\\site-packages\\pymc3\\distributions\\__init__.py in <module>\r\n     13 #   limitations under the License.\r\n     14 \r\n---> 15 from . import timeseries\r\n     16 from . import transforms\r\n     17 from . import shape_utils\r\n\r\n~\\Miniconda3\\envs\\stat-rethink2-pymc3\\lib\\site-packages\\pymc3\\distributions\\timeseries.py in <module>\r\n     20 \r\n     21 from pymc3.util import get_variable_name\r\n---> 22 from .continuous import get_tau_sigma, Normal, Flat\r\n     23 from .shape_utils import to_tuple\r\n     24 from . import multivariate\r\n\r\n~\\Miniconda3\\envs\\stat-rethink2-pymc3\\lib\\site-packages\\pymc3\\distributions\\continuous.py in <module>\r\n     30 from .special import log_i0\r\n     31 from ..math import invlogit, logit, logdiffexp\r\n---> 32 from .dist_math import (\r\n     33     alltrue_elemwise, betaln, bound, gammaln, i0e, incomplete_beta, logpow,\r\n     34     normal_lccdf, normal_lcdf, SplineWrapper, std_cdf, zvalue,\r\n\r\n~\\Miniconda3\\envs\\stat-rethink2-pymc3\\lib\\site-packages\\pymc3\\distributions\\dist_math.py in <module>\r\n     35 f = floatX\r\n     36 c = - .5 * np.log(2. * np.pi)\r\n---> 37 _beta_clip_values = {\r\n     38     dtype: (np.nextafter(0, 1, dtype=dtype), np.nextafter(1, 0, dtype=dtype))\r\n     39     for dtype in [\"float16\", \"float32\", \"float64\", \"float128\"]\r\n\r\n~\\Miniconda3\\envs\\stat-rethink2-pymc3\\lib\\site-packages\\pymc3\\distributions\\dist_math.py in <dictcomp>(.0)\r\n     36 c = - .5 * np.log(2. * np.pi)\r\n     37 _beta_clip_values = {\r\n---> 38     dtype: (np.nextafter(0, 1, dtype=dtype), np.nextafter(1, 0, dtype=dtype))\r\n     39     for dtype in [\"float16\", \"float32\", \"float64\", \"float128\"]\r\n     40 }\r\n\r\nTypeError: data type \"float128\" not understood\r\n```\r\n\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version:1.0.4\r\n* Python Version:3.8.2\r\n* Operating system: windows 10\r\n* How did you install PyMC3: (conda/pip) conda\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3928", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3928/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3928/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3928/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3928", "id": 621128724, "node_id": "MDU6SXNzdWU2MjExMjg3MjQ=", "number": 3928, "title": "Attributes of trace.report are None when using sample_smc\u2014Converting to arviz fails", "user": {"login": "astoeriko", "id": 42246615, "node_id": "MDQ6VXNlcjQyMjQ2NjE1", "avatar_url": "https://avatars3.githubusercontent.com/u/42246615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/astoeriko", "html_url": "https://github.com/astoeriko", "followers_url": "https://api.github.com/users/astoeriko/followers", "following_url": "https://api.github.com/users/astoeriko/following{/other_user}", "gists_url": "https://api.github.com/users/astoeriko/gists{/gist_id}", "starred_url": "https://api.github.com/users/astoeriko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/astoeriko/subscriptions", "organizations_url": "https://api.github.com/users/astoeriko/orgs", "repos_url": "https://api.github.com/users/astoeriko/repos", "events_url": "https://api.github.com/users/astoeriko/events{/privacy}", "received_events_url": "https://api.github.com/users/astoeriko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-19T16:41:02Z", "updated_at": "2020-05-25T16:59:29Z", "closed_at": "2020-05-25T16:59:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I generate samples with the sample_smc method, the attributes `n_draws`, `n_tune` and `t_sampling` of the trace's report are all None.\r\nThis leads to an error when I try to convert the trace to an arviz inference data object (I don't know if it causes problems elsewhere).\r\nThis does not happen when sampling with NUTS.\r\n\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\nimport arviz as az\r\n\r\nx_obs = np.random.rand(3)\r\nwith pm.Model() as model:\r\n    x = pm.Normal('x')\r\n    pm.Normal('x_obs', mu=x, observed=x_obs)\r\n    trace_smc = pm.sample_smc(draws=100)\r\n\r\ntrace_smc.report.n_draws is None\r\ntrace_smc.report.n_tune is None\r\ntrace_smc.report.t_sampling is None\r\n\r\n# This fails\r\ndata = az.from_pymc3(trace_smc)\r\n```\r\nThe error actually occurs in the arviz code but is due to `trace.report.n_draws` being `None`.\r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-41-042acf6338ba> in <module>\r\n     14 trace_smc.report.t_sampling is None\r\n     15 \r\n---> 16 data = az.from_pymc3(trace_smc)\r\n\r\n~/miniconda3/envs/sunode/lib/python3.7/site-packages/arviz/data/io_pymc3.py in from_pymc3(trace, prior, posterior_predictive, log_likelihood, coords, dims, model, save_warmup)\r\n    480         dims=dims,\r\n    481         model=model,\r\n--> 482         save_warmup=save_warmup,\r\n    483     ).to_inference_data()\r\n    484 \r\n\r\n~/miniconda3/envs/sunode/lib/python3.7/site-packages/arviz/data/io_pymc3.py in to_inference_data(self)\r\n    413         \"\"\"\r\n    414         id_dict = {\r\n--> 415             \"posterior\": self.posterior_to_xarray(),\r\n    416             \"sample_stats\": self.sample_stats_to_xarray(),\r\n    417             \"log_likelihood\": self.log_likelihood_to_xarray(),\r\n\r\n~/miniconda3/envs/sunode/lib/python3.7/site-packages/arviz/data/base.py in wrapped(cls, *args, **kwargs)\r\n     35                 if all([getattr(cls, prop_i) is None for prop_i in prop]):\r\n     36                     return None\r\n---> 37             return func(cls, *args, **kwargs)\r\n     38 \r\n     39         return wrapped\r\n\r\n~/miniconda3/envs/sunode/lib/python3.7/site-packages/arviz/data/io_pymc3.py in posterior_to_xarray(self)\r\n    207                 )\r\n    208             data[var_name] = np.array(\r\n--> 209                 self.trace[-self.ndraws :].get_values(var_name, combine=False, squeeze=False)\r\n    210             )\r\n    211         return (\r\n\r\nTypeError: bad operand type for unary -: 'NoneType'\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.6\r\n* Operating system: Archlinux\r\n* How did you install PyMC3: conda\r\n* ArviZ Version: 0.7.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3923", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3923/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3923/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3923/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3923", "id": 619022475, "node_id": "MDU6SXNzdWU2MTkwMjI0NzU=", "number": 3923, "title": "Sampling error for equally distributed variable", "user": {"login": "julien-klaus", "id": 15738529, "node_id": "MDQ6VXNlcjE1NzM4NTI5", "avatar_url": "https://avatars1.githubusercontent.com/u/15738529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julien-klaus", "html_url": "https://github.com/julien-klaus", "followers_url": "https://api.github.com/users/julien-klaus/followers", "following_url": "https://api.github.com/users/julien-klaus/following{/other_user}", "gists_url": "https://api.github.com/users/julien-klaus/gists{/gist_id}", "starred_url": "https://api.github.com/users/julien-klaus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julien-klaus/subscriptions", "organizations_url": "https://api.github.com/users/julien-klaus/orgs", "repos_url": "https://api.github.com/users/julien-klaus/repos", "events_url": "https://api.github.com/users/julien-klaus/events{/privacy}", "received_events_url": "https://api.github.com/users/julien-klaus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T14:44:09Z", "updated_at": "2020-05-17T00:23:12Z", "closed_at": "2020-05-17T00:23:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Why does the trace not contain species 1 and species 2?\r\n\r\nI handcrafted the following simple model for the iris data set. In the beginning the species variable is equally distributed. In the final trace I only get the value 0 for species. Is there some error in the sampling approach or can I fix this issue?\r\n\r\n```python\r\nimport pymc3 as pm\r\nimport numpy as np\r\n\r\nimport theano.tensor as tt\r\n\r\nmodel = pm.Model()\r\nwith model:\r\n    species = pm.Categorical('species', p=[0.3333, 0.3333, 0.3333])\r\n    sepallength = pm.Normal('sepallength', mu=tt.switch(tt.eq(species, 0), 5.006, tt.switch(tt.eq(species, 1), 5.936, 6.588)), sigma=tt.switch(tt.eq(species, 0), 0.3525, tt.switch(tt.eq(species, 1), 0.5162, 0.6359)))\r\n    sepalwidth = pm.Normal('sepalwidth', mu=tt.switch(tt.eq(species, 0), 3.428, tt.switch(tt.eq(species, 1), 2.77, 2.974)), sigma=tt.switch(tt.eq(species, 0), 0.3791, tt.switch(tt.eq(species, 1), 0.3138, 0.3225)))\r\n    petallength = pm.Normal('petallength', mu=tt.switch(tt.eq(species, 0), sepallength * 0.1316 + 0.8031,\r\n                                                        tt.switch(tt.eq(species, 1), sepallength * 0.6865 + 0.1851,\r\n                                                                  sepallength * 0.7501 + 0.6105)),\r\n                            sigma=tt.switch(tt.eq(species, 0), 0.1691, tt.switch(tt.eq(species, 1), 0.3118, 0.2805)))\r\n    petalwidth = pm.Normal('petalwidth',\r\n                           mu=tt.switch(tt.eq(species, 0), sepalwidth * 0.0499 + petallength * 0.1819 + -0.191,\r\n                                        tt.switch(tt.eq(species, 1),\r\n                                                  sepalwidth * 0.205 + petallength * 0.2543 + -0.3252,\r\n                                                  sepalwidth * 0.4146 + petallength * 0.0631 + 0.4424)),\r\n                           sigma=tt.switch(tt.eq(species, 0), 0.0997, tt.switch(tt.eq(species, 1), 0.1122, 0.2342)))\r\n    trace = pm.sample(1000)\r\n\r\nprint(pm.summary(trace))\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Numpy Version: 1.17.0\r\n* Python Version: 3.7 \r\n* Operating system: Ubuntu (18.04.4 LTS (Bionic Beaver))\r\n* How did you install PyMC3: conda\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3922", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3922/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3922/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3922/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3922", "id": 617103085, "node_id": "MDU6SXNzdWU2MTcxMDMwODU=", "number": 3922, "title": "How to  use the previous pm.gp.GP and pm.gp.sample_gp function in the latest pymc3?", "user": {"login": "al00014", "id": 15335242, "node_id": "MDQ6VXNlcjE1MzM1MjQy", "avatar_url": "https://avatars0.githubusercontent.com/u/15335242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/al00014", "html_url": "https://github.com/al00014", "followers_url": "https://api.github.com/users/al00014/followers", "following_url": "https://api.github.com/users/al00014/following{/other_user}", "gists_url": "https://api.github.com/users/al00014/gists{/gist_id}", "starred_url": "https://api.github.com/users/al00014/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/al00014/subscriptions", "organizations_url": "https://api.github.com/users/al00014/orgs", "repos_url": "https://api.github.com/users/al00014/repos", "events_url": "https://api.github.com/users/al00014/events{/privacy}", "received_events_url": "https://api.github.com/users/al00014/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-13T03:03:04Z", "updated_at": "2020-05-18T17:08:02Z", "closed_at": "2020-05-18T17:08:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I followed the GP tutorial on docs/source/notebooks/GP-introduction.ipynb, but I cannot proceed, it seems that the pymc3 package does not contain codes for gp.GP and gp.sample_gp anymore.\r\n\r\nVersion:\r\npm.__version__\r\n'3.8'\r\nplatform: centos\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3921", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3921/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3921/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3921/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3921", "id": 616766413, "node_id": "MDU6SXNzdWU2MTY3NjY0MTM=", "number": 3921, "title": "Stochastic volatility model estimation with MCMC doesnt terminate", "user": {"login": "Dennis1802", "id": 62489628, "node_id": "MDQ6VXNlcjYyNDg5NjI4", "avatar_url": "https://avatars0.githubusercontent.com/u/62489628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dennis1802", "html_url": "https://github.com/Dennis1802", "followers_url": "https://api.github.com/users/Dennis1802/followers", "following_url": "https://api.github.com/users/Dennis1802/following{/other_user}", "gists_url": "https://api.github.com/users/Dennis1802/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dennis1802/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dennis1802/subscriptions", "organizations_url": "https://api.github.com/users/Dennis1802/orgs", "repos_url": "https://api.github.com/users/Dennis1802/repos", "events_url": "https://api.github.com/users/Dennis1802/events{/privacy}", "received_events_url": "https://api.github.com/users/Dennis1802/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-12T15:50:11Z", "updated_at": "2020-05-12T20:21:54Z", "closed_at": "2020-05-12T19:26:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does someone know why the code below doesn\u2019t terminate at:\r\n\r\n    model = make_stochastic_volatility_model(sp500_df)\r\n\r\nThis line of code is from the following in which I try to estimate the parameters of a stochastic volatility model:\r\n\r\n![image](https://user-images.githubusercontent.com/62489628/81715796-ebb95700-9478-11ea-9fb3-77f7a5ce1eec.png)\r\n\r\n    import os as os\r\n    import sys as sys \r\n    path = os.path.dirname(os.path.realpath('__file__'))\r\n    #import pandas_market_calendars as mcal\r\n    import matplotlib.pyplot as plt\r\n    import numpy as np\r\n    import pandas as pd\r\n    import pymc3 as pm\r\n    from pymc3.distributions.timeseries import GaussianRandomWalk\r\n    import pandas_datareader as pdr\r\n    import datetime\r\n    import pprint\r\n    import seaborn as sns\r\n    sns.set(palette = 'bright',color_codes=True)\r\n    \r\n    \r\n    # obtain sp500 log returns (scaled by 100)\r\n    start_date = datetime.datetime(1987, 12, 31)\r\n    end_date = datetime.datetime(2000, 12, 31)\r\n    sp500_df = pdr.DataReader('^GSPC', 'yahoo',start_date,end_date)\r\n    sp500_df[\"returns\"] = sp500_df[\"Close\"]/sp500_df[\"Close\"].shift(1)\r\n    sp500_df.dropna(inplace=True)\r\n    sp500_df[\"log_returns\"] = 100*np.log(sp500_df[\"returns\"])\r\n    \r\n    # plot sp500 log returns\r\n    fig, ax = plt.subplots(figsize=(16, 8))\r\n    sp500_df['log_returns'].plot(y=\"change\", label='S&P 500', ax=ax)  \r\n    ax.set(xlabel='time', ylabel='returns')\r\n    \r\n    def make_stochastic_volatility_model(data):\r\n        with pm.Model() as model:\r\n            obs = data.shape[0]\r\n            \r\n            # prior distribution of parameters\r\n            mu = pm.Normal(name='mu',mu=0,sigma=1)\r\n            epsilon = pm.Normal(name='epsilon',mu=0,sigma=1,shape=obs)\r\n            eta = pm.Normal(name='eta',mu=0,sigma=1,shape=obs)\r\n            \r\n            beta_help = pm.Beta('beta_help',alpha=20,beta=1.5) #testval=0.5125\r\n            beta = 2*beta_help-1\r\n            alpha_help = pm.Normal('alpha_help',mu=0,sigma=5) \r\n            alpha = alpha_help*(1-beta) #HalfNormal?\r\n            varH = pm.InverseGamma('varH',alpha=2.5,beta=0.025) #testval=0.025\r\n            rho = pm.Uniform('rho',-1,1) #testval=-0.4\r\n            \r\n            r_list = []\r\n            ln_h_list = []\r\n            \r\n            for t in range(obs):\r\n                if t == 0:\r\n                    h_current = pm.HalfNormal(f'h_{t}',sigma=1.0)\r\n                    ln_h_current = pm.Deterministic(f'ln_h_{t}',np.log(h_current))\r\n                else:\r\n                    ln_h_current = pm.Normal(f'ln_h_{t}',\r\n                                             mu=alpha+(beta)*ln_h_current,\r\n                                             sigma=np.sqrt(varH))\r\n                    h_current = pm.Deterministic(f'h_{t}',np.exp(ln_h_current))\r\n    \r\n                ln_h_list.append(ln_h_current)\r\n                r_current = pm.Normal(f'r_{t}',mu=mu,\r\n                                      sigma=np.sqrt(h_current),\r\n                                      observed=data['log_returns'][t])\r\n                r_list.append(r_current)\r\n        return model\r\n    \r\n    \r\n    model = make_stochastic_volatility_model(sp500_df)\r\n    \r\n    # Check model\r\n    # pm.model_to_graphviz(model)\r\n    \r\n    with model:\r\n        # Use Maximum A Posteriori (MAP) optimisation \r\n        # as initial value for MCMC\r\n        # start = pm.find_MAP()\r\n    \r\n        # Use the No-U-Turn Sampler\r\n        step = pm.NUTS()\r\n    \r\n        # Calculate the trace\r\n        trace = pm.sample(2000, step,  \r\n                          random_seed=42, progressbar=True, cores=1, tune=1000)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3917", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3917/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3917/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3917/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3917", "id": 615376605, "node_id": "MDU6SXNzdWU2MTUzNzY2MDU=", "number": 3917, "title": "plot_gp_dist fails to plot band on some inputs", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/defects", "name": "defects", "color": "e10c02", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-10T11:58:51Z", "updated_at": "2020-05-10T16:38:50Z", "closed_at": "2020-05-10T16:38:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nThe `pymc3.gp.util.plot_dist` helper function is super useful, making really beautiful plots most of the time.\r\n\r\nOn some inputs however, it reproducibly fails to plot the band.\r\n\r\nHere are numpy arrays of GP samples, one of them works, the other doesn't:\r\n\r\n[x_dense.txt](https://github.com/pymc-devs/pymc3/files/4605589/x_dense.txt)\r\n[y_samples_bad.txt](https://github.com/pymc-devs/pymc3/files/4605590/y_samples_bad.txt)\r\n[y_samples_good.txt](https://github.com/pymc-devs/pymc3/files/4605591/y_samples_good.txt)\r\n\r\n```python\r\nfor cond in ['good', 'bad']:\r\n    print(f'With {cond} inputs:')\r\n    x_dense = numpy.loadtxt('x_dense.txt')\r\n    y_samples = numpy.loadtxt(f'y_samples_{cond}.txt')\r\n    print(f'y_samples.shape = {y_samples.shape}')\r\n\r\n    fig, axs = pyplot.subplots(ncols=2, figsize=(9, 3), dpi=140, sharey='row')\r\n\r\n    pymc3.gp.util.plot_gp_dist(axs[0], y_samples, x_dense)\r\n    axs[0].set_title('plot_gp_dist')\r\n\r\n    axs[1].set_title('pyplot.plot')\r\n    for line in y_samples:\r\n        axs[1].plot(x_dense, line, color='black', linewidth=0.2, alpha=0.1)\r\n\r\n    pyplot.show()\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/5894642/81498582-0dbea800-92c6-11ea-989b-2d9b422ced96.png)\r\n\r\nI've seen the problem before, but always assumed it was because of a bad trace or so, but it's clearly just a plotting issue.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: master\r\n* Python Version: 3.6\r\n* Operating system: Windows\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3915", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3915/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3915/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3915/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3915", "id": 614856159, "node_id": "MDU6SXNzdWU2MTQ4NTYxNTk=", "number": 3915, "title": "How to decide on what priors distributions to use for parameters in pymc3?", "user": {"login": "Moj-ild", "id": 65033814, "node_id": "MDQ6VXNlcjY1MDMzODE0", "avatar_url": "https://avatars2.githubusercontent.com/u/65033814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Moj-ild", "html_url": "https://github.com/Moj-ild", "followers_url": "https://api.github.com/users/Moj-ild/followers", "following_url": "https://api.github.com/users/Moj-ild/following{/other_user}", "gists_url": "https://api.github.com/users/Moj-ild/gists{/gist_id}", "starred_url": "https://api.github.com/users/Moj-ild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Moj-ild/subscriptions", "organizations_url": "https://api.github.com/users/Moj-ild/orgs", "repos_url": "https://api.github.com/users/Moj-ild/repos", "events_url": "https://api.github.com/users/Moj-ild/events{/privacy}", "received_events_url": "https://api.github.com/users/Moj-ild/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-08T16:46:02Z", "updated_at": "2020-05-08T18:51:50Z", "closed_at": "2020-05-08T18:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking into pymc3 package where I was interested in implementing the package in a scenario where I have several different signals and each signal have different amplitudes. \r\n\r\nHowever, I was stuck in what type of priors I would need to use in order to implement pymc3 into it and likelihood distribution to implement. Scenario example is shown in the following picture \r\n![Untitled](https://user-images.githubusercontent.com/65033814/81426956-dfb85700-9151-11ea-81f0-5272d0583bac.png)\r\n\r\nI tried to implement it here, but, every time I keep on getting bad initial energy. Error message can be found here:\r\n\r\n    pymc3.exceptions.SamplingError: Bad initial energy\r\n\r\nFind my portion of the code below:\r\n\r\n```\r\n    ## Signal 1:\r\n        with pm.Model() as model:\r\n            # Parameters:\r\n            # Prior Distributions:\r\n            # BoundedNormal = pm.Bound(pm.Exponential, lower=0.0, upper=np.inf)\r\n            # c = BoundedNormal('c', lam=10)\r\n            # c = pm.Uniform('c', lower=0, upper=300)\r\n            alpha = pm.Normal('alpha', mu = 0, sd = 10)\r\n            beta = pm.Normal('beta', mu = 0, sd = 1)\r\n            sigma = pm.HalfNormal('sigma', sd = 1)\r\n            mu = pm.Normal('mu', mu=0, sigma=1)\r\n            sd = pm.HalfNormal('sd', sigma=1)\r\n\r\n            # Observed data is from a Multinomial distribution:\r\n            # Likelihood distributions:\r\n            # bradford = pm.DensityDist('observed_data', logp=bradford_logp, observed=dict(value=S1, loc=mu, scale=sd, c=c))\r\n            # observed_data = pm.Beta('observed_data', mu=mu, sd=sd, observed=S1)\r\n            observed_data = pm.Beta('observed_data', alpha=alpha, beta=beta, mu=mu, sd=sd, observed=S1)\r\n\r\n        with model:\r\n            # obtain starting values via MAP\r\n            startvals = pm.find_MAP(model=model)\r\n\r\n            # instantiate sampler\r\n            # step = pm.Metropolis()\r\n            step = pm.HamiltonianMC()\r\n            # step = pm.NUTS()\r\n\r\n            # draw 5000 posterior samples\r\n            trace = pm.sample(start=startvals, draws=1000, step=step, tune=500, chains=4, cores=1, discard_tuned_samples=True)\r\n\r\n            # Obtaining Posterior Predictive Sampling:\r\n            post_pred = pm.sample_posterior_predictive(trace, samples=500)\r\n            print(post_pred['observed_data'].shape)\r\n\r\n        plt.title('Trace Plot of Signal 1')\r\n        pm.traceplot(trace, var_names=['mu', 'sd'], divergences=None, combined=True)\r\n        plt.show(block=False)\r\n        plt.pause(5)  # Pauses the program for 5 seconds\r\n        plt.close('all')\r\n\r\n        pm.plot_posterior(trace, var_names=['mu', 'sd'])\r\n        plt.title('Posterior Plot of Signal 1')\r\n        plt.show(block=False)\r\n        plt.pause(5)  # Pauses the program for 5 seconds\r\n        plt.close('all')\r\n```\r\n\r\n## Edit 1:\r\n\r\nI managed to solve the problem with the following code:\r\n\r\n```\r\nwith pm.Model() as model:\r\n            # Prior Distributions for unknown model parameters:\r\n            alpha = pm.HalfNormal('alpha', sigma=10)\r\n            beta = pm.HalfNormal('beta', sigma=1)\r\n\r\n            # Observed data is from a Likelihood distributions (Likelihood (sampling distribution) of observations):\r\n            # bradford = pm.DensityDist('observed_data', logp=bradford_logp, observed=dict(value=S1, loc=mu, scale=sd, c=c))\r\n            # observed_data = pm.Beta('observed_data', mu=mu, sd=sd, observed=S1)\r\n            observed_data = pm.Beta('observed_data', alpha=alpha, beta=beta, observed=S1)\r\n\r\n        with model:\r\n            # obtain starting values via MAP\r\n            startvals = pm.find_MAP(model=model)\r\n\r\n            # instantiate sampler\r\n            step = pm.Metropolis()\r\n            # step = pm.HamiltonianMC()\r\n            # step = pm.NUTS()\r\n\r\n            # draw 5000 posterior samples\r\n            trace = pm.sample(start=startvals, draws=1000, step=step, tune=500, chains=4, cores=1, discard_tuned_samples=True)\r\n\r\n            # Obtaining Posterior Predictive Sampling:\r\n            post_pred = pm.sample_posterior_predictive(trace, samples=500)\r\n            print(post_pred['observed_data'].shape)\r\n\r\n        pm.traceplot(trace, var_names=['alpha', 'beta'], divergences=None, combined=True)\r\n        plt.show(block=False)\r\n        plt.pause(5)  # Pauses the program for 5 seconds\r\n        plt.close('all')\r\n\r\n        pm.plot_posterior(trace, var_names=['alpha', 'beta'])\r\n        plt.show(block=False)\r\n        plt.pause(5)  # Pauses the program for 5 seconds\r\n        plt.close('all')\r\n```\r\nHowever, I have few probelms:\r\n\r\n1. I have multiple files (Say 5 files for each signal) for 5 signals and I get the probability distribution of signals using the Beta distribution from scipy and form a list, then I input the list into the model in Edited code. When I run the code, it runs normally but it reaches a stage where one of the files produces the same error mentioned above. How can I solve this problem? \r\n\r\n2. I have tried to reduce the time taken to run each chain by increasing the number of cores, but, when I change the number of cores, it doesn't run the chains and the program just finishes the code.  What could be the reason?\r\n\r\nI also have a side question:\r\n\r\nSay I would like to implement the bayesian interface in order to see the difference in the pdf of the signals. How do I approach this problem? Do I need to create multiple models and get their posterior distribution? Also, side question, Can I assume that bayesian interface behaves similarly to the concept of the 1D Kalman filter where the bayesian interface can be called bayesian filter?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3914", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3914/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3914/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3914/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3914", "id": 613378956, "node_id": "MDU6SXNzdWU2MTMzNzg5NTY=", "number": 3914, "title": " ValueError: Unused step method arguments: {'target_accept'}", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-06T14:46:50Z", "updated_at": "2020-05-06T15:16:03Z", "closed_at": "2020-05-06T15:16:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Sampling fails when I specify target_accept\r\n\r\n**Code:**\r\n```python\r\nwith pm.Model() as m:\r\n    prior_mu = 30\r\n    prior_sd = 15\r\n    prior_size = -prior_mu**2 / (prior_mu - prior_sd ** 2)\r\n    n_socks = pm.NegativeBinomial('n_socks', prior_mu, prior_size)\r\n\r\n    prop_pairs = pm.Beta('prop_pairs', 15, 2)\r\n\r\n    n_pairs = pm.Deterministic('n_pairs', pm.math.floor(pm.math.floor(n_socks / 2) * prop_pairs))\r\n    n_odd = pm.Deterministic('n_odd', n_socks - (n_pairs * 2))\r\n\r\n    post = pm.sample(500, target_accept=0.95)\r\n```\r\n\r\nSame error happens with: \r\n```python\r\n    post = pm.sample(500, nuts_kwargs=dict(target_accept=0.95))\r\n```\r\n\r\nIf I don't specify the target_accept, it runs fine:\r\n```\r\nSequential sampling (2 chains in 1 job)\r\nCompoundStep\r\n>Metropolis: [n_socks]\r\n>NUTS: [prop_pairs]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1000/1000 [00:00<00:00, 1376.44it/s]\r\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1000/1000 [00:00<00:00, 1485.11it/s]\r\nThe gelman-rubin statistic is larger than 1.05 for some parameters. This indicates slight problems during sampling.\r\nThe estimated number of effective samples is smaller than 200 for some parameters.\r\n\r\n```\r\n\r\n**Full traceback:**\r\n```python\r\nValueError                                Traceback (most recent call last)\r\n\r\n<ipython-input-21-f8cb4dc74d3d> in <module>()\r\n     10     n_odd = pm.Deterministic('n_odd', n_socks - (n_pairs * 2))\r\n     11 \r\n---> 12     post = pm.sample(500, target_accept=.95)\r\n\r\n2 frames\r\n\r\n/usr/local/lib/python3.6/dist-packages/pymc3/sampling.py in sample(draws, step, init, n_init, start, trace, chain_idx, chains, cores, tune, progressbar, model, random_seed, discard_tuned_samples, compute_convergence_checks, **kwargs)\r\n    404                 step = assign_step_methods(model, step, step_kwargs=kwargs)\r\n    405         else:\r\n--> 406             step = assign_step_methods(model, step, step_kwargs=kwargs)\r\n    407 \r\n    408         if isinstance(step, list):\r\n\r\n/usr/local/lib/python3.6/dist-packages/pymc3/sampling.py in assign_step_methods(model, step, methods, step_kwargs)\r\n    153             selected_steps[selected].append(var)\r\n    154 \r\n--> 155     return instantiate_steppers(model, steps, selected_steps, step_kwargs)\r\n    156 \r\n    157 \r\n\r\n/usr/local/lib/python3.6/dist-packages/pymc3/sampling.py in instantiate_steppers(model, steps, selected_steps, step_kwargs)\r\n     79     unused_args = set(step_kwargs).difference(used_keys)\r\n     80     if unused_args:\r\n---> 81         raise ValueError('Unused step method arguments: %s' % unused_args)\r\n     82 \r\n     83     if len(steps) == 1:\r\n\r\nValueError: Unused step method arguments: {'target_accept'}\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.7 and 3.8\r\n* Theano Version:1.0.4\r\n* Python Version: 3.6.9\r\n* Platform: Google Colab", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3910", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3910/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3910/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3910/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3910", "id": 611784207, "node_id": "MDU6SXNzdWU2MTE3ODQyMDc=", "number": 3910, "title": "Request: pm.math.factorial", "user": {"login": "ricardoV94", "id": 28983449, "node_id": "MDQ6VXNlcjI4OTgzNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/28983449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricardoV94", "html_url": "https://github.com/ricardoV94", "followers_url": "https://api.github.com/users/ricardoV94/followers", "following_url": "https://api.github.com/users/ricardoV94/following{/other_user}", "gists_url": "https://api.github.com/users/ricardoV94/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricardoV94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricardoV94/subscriptions", "organizations_url": "https://api.github.com/users/ricardoV94/orgs", "repos_url": "https://api.github.com/users/ricardoV94/repos", "events_url": "https://api.github.com/users/ricardoV94/events{/privacy}", "received_events_url": "https://api.github.com/users/ricardoV94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-04T10:58:20Z", "updated_at": "2020-05-04T11:17:56Z", "closed_at": "2020-05-04T11:17:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be really helpful to be able to compute the factorial of a variable (for instance to compute the binomial coefficient) for designing custom likelihood functions.\r\n\r\nWould it be feasible to add this to the pymc.math module?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3898", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3898/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3898/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3898/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3898", "id": 610349481, "node_id": "MDU6SXNzdWU2MTAzNDk0ODE=", "number": 3898, "title": "Difference in beta support between pymc3 and scipy results in error in sample_prior_predictive()", "user": {"login": "zack-kimble", "id": 28718895, "node_id": "MDQ6VXNlcjI4NzE4ODk1", "avatar_url": "https://avatars2.githubusercontent.com/u/28718895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zack-kimble", "html_url": "https://github.com/zack-kimble", "followers_url": "https://api.github.com/users/zack-kimble/followers", "following_url": "https://api.github.com/users/zack-kimble/following{/other_user}", "gists_url": "https://api.github.com/users/zack-kimble/gists{/gist_id}", "starred_url": "https://api.github.com/users/zack-kimble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zack-kimble/subscriptions", "organizations_url": "https://api.github.com/users/zack-kimble/orgs", "repos_url": "https://api.github.com/users/zack-kimble/repos", "events_url": "https://api.github.com/users/zack-kimble/events{/privacy}", "received_events_url": "https://api.github.com/users/zack-kimble/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lucianopaz", "id": 5230109, "node_id": "MDQ6VXNlcjUyMzAxMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5230109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucianopaz", "html_url": "https://github.com/lucianopaz", "followers_url": "https://api.github.com/users/lucianopaz/followers", "following_url": "https://api.github.com/users/lucianopaz/following{/other_user}", "gists_url": "https://api.github.com/users/lucianopaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucianopaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucianopaz/subscriptions", "organizations_url": "https://api.github.com/users/lucianopaz/orgs", "repos_url": "https://api.github.com/users/lucianopaz/repos", "events_url": "https://api.github.com/users/lucianopaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lucianopaz/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-04-30T20:01:15Z", "updated_at": "2020-05-15T22:02:19Z", "closed_at": "2020-05-15T22:02:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Description of your problem\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\n\r\nidx = np.random.randint(0,1000,10000)\r\n\r\nwith pm.Model() as model:\r\n    mu = pm.Beta('mu', alpha=.01, beta=.01, shape=1000)\r\n    nu = pm.Gamma('nu', mu=30, sigma=5, shape=1000)\r\n    theta = pm.Beta('theta', alpha=mu[idx] * nu[idx],  beta=(1-mu[idx])*nu[idx], shape=10000)\r\n    \r\n    \r\nwith model:\r\n    prior_sample = pm.sample_prior_predictive()\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-39-03487933ffab>\", line 14, in <module>\r\n    prior_sample = pm.sample_prior_predictive()\r\n\r\n  File \"/home/zack/miniconda3/envs/_/lib/python3.8/site-packages/pymc3/sampling.py\", line 1495, in sample_prior_predictive\r\n    values = draw_values([model[name] for name in names], size=samples)\r\n\r\n  File \"/home/zack/miniconda3/envs/_/lib/python3.8/site-packages/pymc3/distributions/distribution.py\", line 617, in draw_values\r\n    value = _draw_value(next_,\r\n\r\n  File \"/home/zack/miniconda3/envs/_/lib/python3.8/site-packages/pymc3/distributions/distribution.py\", line 787, in _draw_value\r\n    return param.random(point=point, size=size)\r\n\r\n  File \"/home/zack/miniconda3/envs/_/lib/python3.8/site-packages/pymc3/model.py\", line 56, in __call__\r\n    return getattr(self.obj, self.method_name)(*args, **kwargs)\r\n\r\n  File \"/home/zack/miniconda3/envs/_/lib/python3.8/site-packages/pymc3/distributions/continuous.py\", line 1264, in random\r\n    return generate_samples(stats.beta.rvs, alpha, beta,\r\n\r\n  File \"/home/zack/miniconda3/envs/_/lib/python3.8/site-packages/pymc3/distributions/distribution.py\", line 960, in generate_samples\r\n    samples = generator(size=dist_bcast_shape, *args, **kwargs)\r\n\r\n  File \"/home/zack/miniconda3/envs/_/lib/python3.8/site-packages/scipy/stats/_distn_infrastructure.py\", line 966, in rvs\r\n    raise ValueError(\"Domain error in arguments.\")\r\n\r\nValueError: Domain error in arguments.\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\nI am using beta as a hyperprior for other beta distributions and parameterizing based on mean and sample size. As a result, if the random variable from the hyper prior is 0 or 1, alpha or beta will end up 0, which is outside their domain. pymc3.Beta has support on (0,1), so I haven't seen an issue with sampling posteriors. When running sample_prior_predictive(), I get a domain error, which I believe is because scipy.stats.beta().rvs() will happily return 0 or 1.\r\n\r\nMaybe this is just because of truncation in float64 (1 is far more common than 0), but I noticed the scipy.stats.beta documentation does state support on [0,1]. Not sure whether or not that makes it a scipy issue instead, but thought it was worth mentioning here.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.8.1\r\n* Operating system: Ubuntu 16.04\r\n* How did you install PyMC3: (conda/pip) conda-forge", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3892", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3892/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3892/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3892/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3892", "id": 607875123, "node_id": "MDU6SXNzdWU2MDc4NzUxMjM=", "number": 3892, "title": "AR(1) logp potentially using wrong variance", "user": {"login": "ljmartin", "id": 8262765, "node_id": "MDQ6VXNlcjgyNjI3NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8262765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljmartin", "html_url": "https://github.com/ljmartin", "followers_url": "https://api.github.com/users/ljmartin/followers", "following_url": "https://api.github.com/users/ljmartin/following{/other_user}", "gists_url": "https://api.github.com/users/ljmartin/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljmartin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljmartin/subscriptions", "organizations_url": "https://api.github.com/users/ljmartin/orgs", "repos_url": "https://api.github.com/users/ljmartin/repos", "events_url": "https://api.github.com/users/ljmartin/events{/privacy}", "received_events_url": "https://api.github.com/users/ljmartin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-27T21:45:52Z", "updated_at": "2020-06-11T19:20:58Z", "closed_at": "2020-06-11T19:20:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi all,\r\nI posted a funny output from fitting AR(1) models in the discourse  - and before I go ahead and start using the fix I thought Id check here for feedback. \r\nThe issue and example code are described here: https://discourse.pymc.io/t/diagnosing-ar-1-model-whose-results-are-way-off-course/4947\r\n\r\nCurrently the AR(1) model assumes the first observation comes from a normal distribution with precision equivalent to the noise (i.e. innovation) term. This is fine if the data was initiated at zero with no previous data. In most cases, an experimenter won't observe the initiation point and so their AR(1) data can start anywhere within the dispersion of that AR(1) process. \r\n\r\nPerhaps a better specification then is to use the variance of an AR(1) process to calculate the likelihood of the first observation. To be honest I'm using this as reference for the variance of an AR(1) process: https://stats.stackexchange.com/questions/103405/prove-expression-for-variance-ar1\r\n\r\nBasically it all boils down to changing this line: https://github.com/pymc-devs/pymc3/blob/60cca231e59bf882507021570fb925d1812eb095/pymc3/distributions/timeseries.py#L76 \r\n\r\nto something like this\r\n```\r\nvar_ar1 = 1 / ((1-k**2)*tau_e)\r\nsd_ar1 = tt.sqrt(var_ar1)\r\nboundary = pm.Normal.dist(0., sigma=sd_ar1).logp\r\n```\r\n\r\nThis solved the issue I described in the discourse and brings the highest posterior density of the model fit on that data back in line with other (non bayesian) techniques for estimating the SEM of an AR(1).  \r\nthanks for your time!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3890", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3890/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3890/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3890/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3890", "id": 604857468, "node_id": "MDU6SXNzdWU2MDQ4NTc0Njg=", "number": 3890, "title": "switch point and piecewise function", "user": {"login": "rizman18", "id": 20876282, "node_id": "MDQ6VXNlcjIwODc2Mjgy", "avatar_url": "https://avatars1.githubusercontent.com/u/20876282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rizman18", "html_url": "https://github.com/rizman18", "followers_url": "https://api.github.com/users/rizman18/followers", "following_url": "https://api.github.com/users/rizman18/following{/other_user}", "gists_url": "https://api.github.com/users/rizman18/gists{/gist_id}", "starred_url": "https://api.github.com/users/rizman18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rizman18/subscriptions", "organizations_url": "https://api.github.com/users/rizman18/orgs", "repos_url": "https://api.github.com/users/rizman18/repos", "events_url": "https://api.github.com/users/rizman18/events{/privacy}", "received_events_url": "https://api.github.com/users/rizman18/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-22T15:39:25Z", "updated_at": "2020-04-22T15:55:51Z", "closed_at": "2020-04-22T15:51:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I want to fit my data, here is my data\r\n\r\n![warp](https://user-images.githubusercontent.com/20876282/80000860-e014e900-84e7-11ea-896a-2f9409f45c1b.png)\r\n\r\nThe function is\r\n![equation2](https://user-images.githubusercontent.com/20876282/80002179-83b2c900-84e9-11ea-9e13-2ffd659be5c5.png)\r\n\r\nwhen R < R1, psi = 0, psi starts to deviate at R1 < R < R2, and psi equals psi maximum at R = R2, with psi_maximum is set at a certain value.\r\n\r\nI want to fit the data with these equation and need to know the best value of R1, R2, and alpha.\r\n\r\nCan you give me advice or some references to study.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3889", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3889/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3889/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3889/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3889", "id": 603658605, "node_id": "MDU6SXNzdWU2MDM2NTg2MDU=", "number": 3889, "title": "Infeasable MAP solution", "user": {"login": "mario-schiappacasse-ug", "id": 55150102, "node_id": "MDQ6VXNlcjU1MTUwMTAy", "avatar_url": "https://avatars3.githubusercontent.com/u/55150102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mario-schiappacasse-ug", "html_url": "https://github.com/mario-schiappacasse-ug", "followers_url": "https://api.github.com/users/mario-schiappacasse-ug/followers", "following_url": "https://api.github.com/users/mario-schiappacasse-ug/following{/other_user}", "gists_url": "https://api.github.com/users/mario-schiappacasse-ug/gists{/gist_id}", "starred_url": "https://api.github.com/users/mario-schiappacasse-ug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mario-schiappacasse-ug/subscriptions", "organizations_url": "https://api.github.com/users/mario-schiappacasse-ug/orgs", "repos_url": "https://api.github.com/users/mario-schiappacasse-ug/repos", "events_url": "https://api.github.com/users/mario-schiappacasse-ug/events{/privacy}", "received_events_url": "https://api.github.com/users/mario-schiappacasse-ug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-21T02:30:20Z", "updated_at": "2020-04-21T18:26:40Z", "closed_at": "2020-04-21T18:10:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of your problem\r\nInfeasable MAP solution for coin example.\r\n\r\nGiven p a Uniform Variable between 0.1 and 0.9, pm.find_MAP() gives a 'p' value of -0.5 which is of course not posible.\r\n\r\n```python\r\nimport pymc3 as pm\r\n\r\nwith pm.Model() as model:\r\n  n = pm.DiscreteUniform('n', 0, 8)\r\n  p = pm.Uniform('p', lower=0.1, upper=0.9, transform=None)\r\n  y = pm.Binomial('k', n, p, observed = [3, 2, 1, 0])\r\n  print(pm.find_MAP())\r\n```\r\n\r\n```python\r\n{'n': array(4, dtype=int64), 'p': array(-0.5)}\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: pymc3==3.8\r\n* Theano Version: Theano==1.0.4\r\n* Python Version:  3.6.10\r\n* Operating system: Windows 10-64bit\r\n* How did you install PyMC3: conda\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3884", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3884/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3884/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3884/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3884", "id": 602394637, "node_id": "MDU6SXNzdWU2MDIzOTQ2Mzc=", "number": 3884, "title": "Parallel sampling error when sampling trace", "user": {"login": "nitishp25", "id": 19911654, "node_id": "MDQ6VXNlcjE5OTExNjU0", "avatar_url": "https://avatars0.githubusercontent.com/u/19911654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nitishp25", "html_url": "https://github.com/nitishp25", "followers_url": "https://api.github.com/users/nitishp25/followers", "following_url": "https://api.github.com/users/nitishp25/following{/other_user}", "gists_url": "https://api.github.com/users/nitishp25/gists{/gist_id}", "starred_url": "https://api.github.com/users/nitishp25/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nitishp25/subscriptions", "organizations_url": "https://api.github.com/users/nitishp25/orgs", "repos_url": "https://api.github.com/users/nitishp25/repos", "events_url": "https://api.github.com/users/nitishp25/events{/privacy}", "received_events_url": "https://api.github.com/users/nitishp25/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2020-04-18T06:53:47Z", "updated_at": "2020-06-05T14:47:33Z", "closed_at": "2020-06-05T14:47:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of your problem\r\nThe following code gives an error when using PyMC3 development branch.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport numpy as np\r\nimport arviz as az\r\nimport pymc3 as pm\r\nimport time\r\nstart_time = time.time()\r\nnp.random.seed(42)\r\n\r\ntrue_m = 0.5\r\ntrue_b = -1.3\r\ntrue_logs = np.log(0.3)\r\nx = np.sort(np.random.uniform(0, 5, 20000))\r\ny = true_b + true_m * x + np.exp(true_logs) * np.random.randn(len(x))\r\n\r\nwith pm.Model() as model:\r\n    m = pm.Uniform(\"m\", lower=-5, upper=5)\r\n    b = pm.Uniform(\"b\", lower=-5, upper=5)\r\n    logs = pm.Uniform(\"logs\", lower=-5, upper=5)\r\n    pm.Normal(\"obs\", mu=m*x+b, sd=pm.math.exp(logs), observed=y)\r\n\r\n    print(\"Getting trace...\")\r\n    trace = pm.sample(draws=1000, tune=1000, chains=2)\r\n\r\n    print(\"Getting posterior_predictive...\")\r\n    posterior_predictive = pm.sample_posterior_predictive(trace)\r\n\r\n    print(\"Getting idata...\")\r\n    idata = az.from_pymc3(\r\n        trace=trace, posterior_predictive=posterior_predictive\r\n    )\r\n\r\nprint(\"--- %s seconds ---\" % (time.time() - start_time))\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/parallel_sampling.py\", line 128, in run\r\n    self._start_loop()\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/parallel_sampling.py\", line 182, in _start_loop\r\n    point, stats = self._compute_point()\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/parallel_sampling.py\", line 209, in _compute_point\r\n    point, stats = self._step_method.step(self._point)\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/step_methods/arraystep.py\", line 263, in step\r\n    apoint, stats = self.astep(array)\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/step_methods/hmc/base_hmc.py\", line 144, in astep\r\n    self.potential.raise_ok(self._logp_dlogp_func._ordering.vmap)\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/step_methods/hmc/quadpotential.py\", line 255, in raise_ok\r\n    raise ValueError('\\n'.join(errmsg))\r\nValueError: Mass matrix contains zeros on the diagonal. \r\nThe derivative of RV `logs_interval__`.ravel()[0] is zero.\r\nThe derivative of RV `b_interval__`.ravel()[0] is zero.\r\nThe derivative of RV `m_interval__`.ravel()[0] is zero.\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/parallel_sampling.py\", line 128, in run\r\n    self._start_loop()\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/parallel_sampling.py\", line 182, in _start_loop\r\n    point, stats = self._compute_point()\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/parallel_sampling.py\", line 209, in _compute_point\r\n    point, stats = self._step_method.step(self._point)\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/step_methods/arraystep.py\", line 263, in step\r\n    apoint, stats = self.astep(array)\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/step_methods/hmc/base_hmc.py\", line 144, in astep\r\n    self.potential.raise_ok(self._logp_dlogp_func._ordering.vmap)\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/step_methods/hmc/quadpotential.py\", line 255, in raise_ok\r\n    raise ValueError('\\n'.join(errmsg))\r\nValueError: Mass matrix contains zeros on the diagonal. \r\nThe derivative of RV `logs_interval__`.ravel()[0] is zero.\r\nThe derivative of RV `b_interval__`.ravel()[0] is zero.\r\nThe derivative of RV `m_interval__`.ravel()[0] is zero.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"logp_benchmarks.py\", line 21, in <module>\r\n    trace = pm.sample(draws=1000, tune=1000, chains=2)\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/sampling.py\", line 498, in sample\r\n    trace = _mp_sample(**sample_args)\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/sampling.py\", line 1384, in _mp_sample\r\n    for draw in sampler:\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/parallel_sampling.py\", line 412, in __iter__\r\n    draw = ProcessAdapter.recv_draw(self._active)\r\n  File \"/home/nitish/env2/lib/python3.6/site-packages/pymc3/parallel_sampling.py\", line 314, in recv_draw\r\n    raise error from old_error\r\nRuntimeError: Chain 1 failed.\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\nNote that this code originally worked for @OriolAbril on an older version of PyMC3 and still works for me on PyMC3 3.8 but using the development branch causes this error.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8 **(development branch)**\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.6.9\r\n* Operating system: Linux (Ubuntu)\r\n* How did you install PyMC3: pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3882", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3882/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3882/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3882/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3882", "id": 601206367, "node_id": "MDU6SXNzdWU2MDEyMDYzNjc=", "number": 3882, "title": "Small error in documentation", "user": {"login": "aaparab", "id": 36110694, "node_id": "MDQ6VXNlcjM2MTEwNjk0", "avatar_url": "https://avatars0.githubusercontent.com/u/36110694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaparab", "html_url": "https://github.com/aaparab", "followers_url": "https://api.github.com/users/aaparab/followers", "following_url": "https://api.github.com/users/aaparab/following{/other_user}", "gists_url": "https://api.github.com/users/aaparab/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaparab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaparab/subscriptions", "organizations_url": "https://api.github.com/users/aaparab/orgs", "repos_url": "https://api.github.com/users/aaparab/repos", "events_url": "https://api.github.com/users/aaparab/events{/privacy}", "received_events_url": "https://api.github.com/users/aaparab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-16T16:04:46Z", "updated_at": "2020-04-19T01:33:29Z", "closed_at": "2020-04-19T01:33:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Small error in documentation\r\n\r\nIn the documentation for the [`Mixture` distribution](https://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/mixture.py), the support of `f` should be the `union` of the support of each `f_i`. Line 51 of the above file should read \r\n```\r\n    Support   :math:`\\cup_{i = 1}^n \\textrm{support}(f_i)`\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3878", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3878/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3878/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3878/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3878", "id": 598292306, "node_id": "MDU6SXNzdWU1OTgyOTIzMDY=", "number": 3878, "title": "Deprecation warning due to invalid escape sequences in Python 3.7", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-04-11T15:40:41Z", "updated_at": "2020-04-12T17:42:03Z", "closed_at": "2020-04-12T17:34:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nDeprecation warnings are raised due to invalid escape sequences. This can be fixed by using raw strings or escaping the literals.\r\n\r\n```\r\n find . -iname '*.py' | grep -v example | xargs -P 4 -I{} python3.8 -Wall -m py_compile {} ./pymc3/util.py:27: DeprecationWarning: invalid escape sequence \\_\r\n  \"\"\"Consistently escape LaTeX special characters for _repr_latex_ in IPython\r\n./pymc3/distributions/continuous.py:106: DeprecationWarning: invalid escape sequence \\s\r\n  \"\"\"\r\n./pymc3/distributions/continuous.py:773: DeprecationWarning: invalid escape sequence \\m\r\n  '\\mathit{{mu}}={},~\\mathit{{sigma}}={},a={},b={})$'\r\n./pymc3/distributions/continuous.py:2971: DeprecationWarning: invalid escape sequence \\l\r\n  \"\"\"\r\n./pymc3/distributions/continuous.py:4133: DeprecationWarning: invalid escape sequence \\l\r\n  \"\"\"\r\n./pymc3/ode/ode.py:28: DeprecationWarning: invalid escape sequence \\d\r\n  \"\"\"\r\n./pymc3/smc/sample_smc.py:36: DeprecationWarning: invalid escape sequence \\m\r\n  \"\"\"\r\n./pymc3/math.py:40: DeprecationWarning: invalid escape sequence \\o\r\n  \"\"\"Return the Kronecker product of arguments:\r\n./pymc3/math.py:63: DeprecationWarning: invalid escape sequence \\o\r\n  \"\"\"Apply op to krons and m in a way that reproduces ``op(kronecker(*krons), m)``\r\n./pymc3/variational/inference.py:295: DeprecationWarning: invalid escape sequence \\l\r\n  \"\"\"**Kullback Leibler Divergence Inference**\r\n./pymc3/variational/updates.py:684: DeprecationWarning: invalid escape sequence \\s\r\n  \"\"\" Adadelta updates\r\n./pymc3/gp/gp.py:227: DeprecationWarning: invalid escape sequence \\s\r\n  \"\"\"\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: master branch\r\n* Theano Version:\r\n* Python Version: 3.7\r\n* Operating system: linux\r\n* How did you install PyMC3: (conda/pip)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3874", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3874/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3874/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3874/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3874", "id": 595569448, "node_id": "MDU6SXNzdWU1OTU1Njk0NDg=", "number": 3874, "title": "WAIC & LOO scaling", "user": {"login": "tobywise", "id": 10914118, "node_id": "MDQ6VXNlcjEwOTE0MTE4", "avatar_url": "https://avatars0.githubusercontent.com/u/10914118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobywise", "html_url": "https://github.com/tobywise", "followers_url": "https://api.github.com/users/tobywise/followers", "following_url": "https://api.github.com/users/tobywise/following{/other_user}", "gists_url": "https://api.github.com/users/tobywise/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobywise/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobywise/subscriptions", "organizations_url": "https://api.github.com/users/tobywise/orgs", "repos_url": "https://api.github.com/users/tobywise/repos", "events_url": "https://api.github.com/users/tobywise/events{/privacy}", "received_events_url": "https://api.github.com/users/tobywise/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-07T03:46:49Z", "updated_at": "2020-04-16T12:29:10Z", "closed_at": "2020-04-16T12:29:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I\u2019ve just noticed that the newest ArviZ release (0.7.0) has changed from deviance to log scale for WAIC and LOO statistics, which PyMC3 relies on. This is contrary to previous PyMC3 behaviour (and the documentation https://docs.pymc.io/api/stats.html). The PyMC3 requirements file indicates ArviZ>=0.4.1, so new installs will get 0.7.0 with this changed behaviour.\r\n\r\nI think this is something that needs to be dealt with fairly rapidly as it can actually invert previous PyMC3 results (i.e. flipping from lower WAIC=better to higher=better) without any warning. Had I not noticed this I would likely have proceeded to publish work based on inverted model comparison stats, which would not have been good\u2026\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7\r\n* Operating system: Linux/Windows\r\n* How did you install PyMC3: (conda/pip): pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3872", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3872/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3872/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3872/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3872", "id": 595273567, "node_id": "MDU6SXNzdWU1OTUyNzM1Njc=", "number": 3872, "title": "macOS: code works in jupyter/ipython but not in terminal", "user": {"login": "fohria", "id": 8695061, "node_id": "MDQ6VXNlcjg2OTUwNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8695061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fohria", "html_url": "https://github.com/fohria", "followers_url": "https://api.github.com/users/fohria/followers", "following_url": "https://api.github.com/users/fohria/following{/other_user}", "gists_url": "https://api.github.com/users/fohria/gists{/gist_id}", "starred_url": "https://api.github.com/users/fohria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fohria/subscriptions", "organizations_url": "https://api.github.com/users/fohria/orgs", "repos_url": "https://api.github.com/users/fohria/repos", "events_url": "https://api.github.com/users/fohria/events{/privacy}", "received_events_url": "https://api.github.com/users/fohria/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-06T16:58:13Z", "updated_at": "2020-05-13T16:52:06Z", "closed_at": "2020-05-13T16:52:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "bayesian newbie here, thanks for this nice library!\r\n\r\n\r\n## Description of your problem\r\n- running below code from macos command line crashes with compilation error seen in exhibit A\r\n\r\n- issue remains in new conda environment (tested with python=3.7 and python=3.8)\r\n\r\n- the same code works fine in jupyter notebook/jupyter kernel on the same machine with the same conda environment (this part blew my mind \ud83d\ude43 )\r\n\r\n- the same code works fine from command line on ubuntu with python37/38\r\n\r\n- as suggested in #3831, adding this theano config line solves the issue `theano.config.gcc.cxxflags = \"-Wno-c++11-narrowing\"`\r\n\r\n- however, we then instead reach a new issue with multithreading and the execution just stops with the message seen in exhibit B\r\n\r\n- again, the same code works in jupyter!\r\n\r\n- but here there's a difference between python versions, conda env with python=3.7 works now, but python=3.8 we need the next step as well\r\n\r\n- so as suggested in another issue, #3844, we can solve this new issue with:\r\n```\r\nimport multiprocessing as mp\r\nmp.set_start_method(\"fork\")\r\n```\r\n\r\n\r\nI've no idea what's going on here, but since there are several related issues, i thought it might be something weird going on that's macOS specific?\r\n\r\npotentially related to:\r\n#3831 \r\n#3695\r\n#3844  \r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\nsorry about the not-very-minimal example. main model definition is below, it uses theano scan and [full code in this gist](https://gist.github.com/fohria/2447e3813dd94402611d20728a7300e7)\r\n\r\n```python\r\nactions = theano.shared(np.array([0,1,0,1,1,0,0], dtype='int16'))\r\nrewards = theano.shared(np.array([4,2,6,3,2,5,4], dtype='int16'))\r\n\r\nwith pm.Model() as qlearn3:\r\n\r\n    alpha = pm.Beta('alpha', alpha=1, beta=1)\r\n    tau = pm.HalfNormal('tau', 10)\r\n    gamma = pm.Beta('gamma', alpha=1, beta=1)\r\n\r\n    probs = categorical_actionsQL(actions, rewards, alpha, tau, gamma)\r\n\r\n    like = pm.Categorical('like', p=probs, observed=actions)\r\n\r\n    trace = pm.sample()\r\n```\r\n\r\n**Please provide the full traceback.**\r\n### exhibit A\r\n```bash\r\nYou can find the C code in this temporary file: /var/folders/kj/ztrcmdjs58ncsdg37pg5pynw0000gn/T/theano_compilation_error_7sn1f20a\r\nTraceback (most recent call last):\r\n  File \"model.py\", line 41, in <module>\r\n    probs = categorical_actionsQL(actions, rewards, alpha, tau, gamma)\r\n  File \"model.py\", line 23, in categorical_actionsQL\r\n    output, updates = theano.scan(fn=update_qvalsQL,\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/scan_module/scan.py\", line 1077, in scan\r\n    scan_outs = local_op(*scan_inputs)\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/gof/op.py\", line 669, in __call__\r\n    thunk = node.op.make_thunk(node, storage_map, compute_map,\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/scan_module/scan_op.py\", line 861, in make_thunk\r\n    self.fn = function(wrapped_inputs,\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/compile/function.py\", line 306, in function\r\n    fn = pfunc(params=inputs,\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/compile/pfunc.py\", line 483, in pfunc\r\n    return orig_function(inputs, cloned_outputs, mode,\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/compile/function_module.py\", line 1841, in orig_function\r\n    fn = m.create(defaults)\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/compile/function_module.py\", line 1714, in create\r\n    _fn, _i, _o = self.linker.make_thunk(\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/gof/link.py\", line 697, in make_thunk\r\n    return self.make_all(input_storage=input_storage,\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/gof/vm.py\", line 1087, in make_all\r\n    thunks.append(node.op.make_thunk(node,\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/gof/op.py\", line 954, in make_thunk\r\n    return self.make_c_thunk(node, storage_map, compute_map,\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/gof/op.py\", line 857, in make_c_thunk\r\n    outputs = cl.make_thunk(input_storage=node_input_storage,\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/gof/cc.py\", line 1215, in make_thunk\r\n    cthunk, module, in_storage, out_storage, error_storage = self.__compile__(\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/gof/cc.py\", line 1153, in __compile__\r\n    thunk, module = self.cthunk_factory(error_storage,\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/gof/cc.py\", line 1623, in cthunk_factory\r\n    module = get_module_cache().module_from_key(\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/gof/cmodule.py\", line 1189, in module_from_key\r\n    module = lnk.compile_cmodule(location)\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/gof/cc.py\", line 1520, in compile_cmodule\r\n    module = c_compiler.compile_str(\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/theano/gof/cmodule.py\", line 2410, in compile_str\r\n    raise Exception('Compilation failed (return status=%s): %s' %\r\nException: ('The following error happened while compiling the node', Elemwise{mul,no_inplace}(InplaceDimShuffle{x,0}.0, InplaceDimShuffle{x,x}.0), '\\n', \"Compilation failed (return status=1): /Users/foh/.theano/compiledir_macOS-10.14.6-x86_64-i386-64bit-i386-3.8.2-64/tmpzsu2aa1s/mod.cpp:506:27: error: non-constant-expression cannot be narrowed from type 'npy_intp' (aka 'long') to 'int' in initializer list [-Wc++11-narrowing].     int init_totals[2] = {V1_n0, V3_n1};.                           ^~~~~. /Users/foh/.theano/compiledir_macOS-10.14.6-x86_64-i386-64bit-i386-3.8.2-64/tmpzsu2aa1s/mod.cpp:506:27: note: insert an explicit cast to silence this issue.     int init_totals[2] = {V1_n0, V3_n1};.                           ^~~~~.                           static_cast<int>( ). /Users/foh/.theano/compiledir_macOS-10.14.6-x86_64-i386-64bit-i386-3.8.2-64/tmpzsu2aa1s/mod.cpp:506:34: error: non-constant-expression cannot be narrowed from type 'npy_intp' (aka 'long') to 'int' in initializer list [-Wc++11-narrowing].     int init_totals[2] = {V1_n0, V3_n1};.                                  ^~~~~. /Users/foh/.theano/compiledir_macOS-10.14.6-x86_64-i386-64bit-i386-3.8.2-64/tmpzsu2aa1s/mod.cpp:506:34: note: insert an explicit cast to silence this issue.     int init_totals[2] = {V1_n0, V3_n1};.                                  ^~~~~.                                  static_cast<int>( ). /Users/foh/.theano/compiledir_macOS-10.14.6-x86_64-i386-64bit-i386-3.8.2-64/tmpzsu2aa1s/mod.cpp:518:12: error: non-constant-expression cannot be narrowed from type 'ssize_t' (aka 'long') to 'int' in initializer list [-Wc++11-narrowing].         0, V3_stride1, .            ^~~~~~~~~~. /Users/foh/.theano/compiledir_macOS-10.14.6-x86_64-i386-64bit-i386-3.8.2-64/tmpzsu2aa1s/mod.cpp:518:12: note: insert an explicit cast to silence this issue.         0, V3_stride1, .            ^~~~~~~~~~.            static_cast<int>( ). /Users/foh/.theano/compiledir_macOS-10.14.6-x86_64-i386-64bit-i386-3.8.2-64/tmpzsu2aa1s/mod.cpp:520:1: error: non-constant-expression cannot be narrowed from type 'ssize_t' (aka 'long') to 'int' in initializer list [-Wc++11-narrowing]. V1_stride0, V1_stride1. ^~~~~~~~~~. /Users/foh/.theano/compiledir_macOS-10.14.6-x86_64-i386-64bit-i386-3.8.2-64/tmpzsu2aa1s/mod.cpp:520:1: note: insert an explicit cast to silence this issue. V1_stride0, V1_stride1. ^~~~~~~~~~. static_cast<int>( ). /Users/foh/.theano/compiledir_macOS-10.14.6-x86_64-i386-64bit-i386-3.8.2-64/tmpzsu2aa1s/mod.cpp:520:13: error: non-constant-expression cannot be narrowed from type 'ssize_t' (aka 'long') to 'int' in initializer list [-Wc++11-narrowing]. V1_stride0, V1_stride1.             ^~~~~~~~~~. /Users/foh/.theano/compiledir_macOS-10.14.6-x86_64-i386-64bit-i386-3.8.2-64/tmpzsu2aa1s/mod.cpp:520:13: note: insert an explicit cast to silence this issue. V1_stride0, V1_stride1.             ^~~~~~~~~~.             static_cast<int>( ). 5 errors generated.. \", '[Elemwise{mul,no_inplace}(<TensorType(float64, row)>, <TensorType(float64, (True, True))>)]')\r\n```\r\n### exhibit B\r\n```bash\r\nmodel.py\", line 47, in <module>\r\n    trace = pm.sample()\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/pymc3/sampling.py\", line 469, in sample\r\n    trace = _mp_sample(**sample_args)\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/pymc3/sampling.py\", line 1053, in _mp_sample\r\n    sampler = ps.ParallelSampler(\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/pymc3/parallel_sampling.py\", line 355, in __init__\r\n    self._samplers = [\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/pymc3/parallel_sampling.py\", line 356, in <listcomp>\r\n    ProcessAdapter(\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/site-packages/pymc3/parallel_sampling.py\", line 242, in __init__\r\n    self._process.start()\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/multiprocessing/process.py\", line 121, in start\r\n    self._popen = self._Popen(self)\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/multiprocessing/context.py\", line 224, in _Popen\r\n    return _default_context.get_context().Process._Popen(process_obj)\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/multiprocessing/context.py\", line 283, in _Popen\r\n    return Popen(process_obj)\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/multiprocessing/popen_spawn_posix.py\", line 32, in __init__\r\n    super().__init__(process_obj)\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/multiprocessing/popen_fork.py\", line 19, in __init__\r\n    self._launch(process_obj)\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/multiprocessing/popen_spawn_posix.py\", line 42, in _launch\r\n    prep_data = spawn.get_preparation_data(process_obj._name)\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/multiprocessing/spawn.py\", line 154, in get_preparation_data\r\n    _check_not_importing_main()\r\n  File \"/Users/foh/anaconda3/envs/pymc/lib/python3.8/multiprocessing/spawn.py\", line 134, in _check_not_importing_main\r\n    raise RuntimeError('''\r\nRuntimeError:\r\n        An attempt has been made to start a new process before the\r\n        current process has finished its bootstrapping phase.\r\n\r\n        This probably means that you are not using fork to start your\r\n        child processes and you have forgotten to use the proper idiom\r\n        in the main module:\r\n\r\n            if __name__ == '__main__':\r\n                freeze_support()\r\n                ...\r\n\r\n        The \"freeze_support()\" line can be omitted if the program\r\n        is not going to be frozen to produce an executable.\r\n```\r\n\r\n\r\n**Please provide any additional information below.**\r\n\r\noh i also updated gcc via homebrew and rebooted macos to no avail\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.8\r\n* Operating system: macOS 10.14.6\r\n* How did you install PyMC3: conda\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3868", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3868/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3868/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3868/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3868", "id": 592692415, "node_id": "MDU6SXNzdWU1OTI2OTI0MTU=", "number": 3868, "title": "ModuleNotFoundError: No module named 'corner'", "user": {"login": "Ahanmr", "id": 26196002, "node_id": "MDQ6VXNlcjI2MTk2MDAy", "avatar_url": "https://avatars2.githubusercontent.com/u/26196002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ahanmr", "html_url": "https://github.com/Ahanmr", "followers_url": "https://api.github.com/users/Ahanmr/followers", "following_url": "https://api.github.com/users/Ahanmr/following{/other_user}", "gists_url": "https://api.github.com/users/Ahanmr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ahanmr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ahanmr/subscriptions", "organizations_url": "https://api.github.com/users/Ahanmr/orgs", "repos_url": "https://api.github.com/users/Ahanmr/repos", "events_url": "https://api.github.com/users/Ahanmr/events{/privacy}", "received_events_url": "https://api.github.com/users/Ahanmr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-02T14:50:11Z", "updated_at": "2020-04-02T20:09:39Z", "closed_at": "2020-04-02T20:09:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\n\r\n## Description of your problem\r\nFound an un-run Notebook in docs/source/notebooks called blackbox_external_likelihood.ipynb with a ModuleNotFoundError: No module named 'corner'\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\n---------------------------------------------------------------------------\r\nModuleNotFoundError                       Traceback (most recent call last)\r\n in ()\r\n     19 import matplotlib\r\n     20 import emcee\r\n---> 21 import corner\r\n     22 import os\r\n     23 print(\"Python version:     {}\".format(platform.python_version()))\r\n\r\nModuleNotFoundError: No module named 'corner'\r\n```\r\n\r\n\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: Master\r\n\r\nThis is a Notebook in the Master repository, needed feedback on whether this needs to be removed and re-run the notebook.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3867", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3867/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3867/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3867/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3867", "id": 591571898, "node_id": "MDU6SXNzdWU1OTE1NzE4OTg=", "number": 3867, "title": "Problem importing DifferentialEquation", "user": {"login": "iteimouri", "id": 29966416, "node_id": "MDQ6VXNlcjI5OTY2NDE2", "avatar_url": "https://avatars3.githubusercontent.com/u/29966416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iteimouri", "html_url": "https://github.com/iteimouri", "followers_url": "https://api.github.com/users/iteimouri/followers", "following_url": "https://api.github.com/users/iteimouri/following{/other_user}", "gists_url": "https://api.github.com/users/iteimouri/gists{/gist_id}", "starred_url": "https://api.github.com/users/iteimouri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iteimouri/subscriptions", "organizations_url": "https://api.github.com/users/iteimouri/orgs", "repos_url": "https://api.github.com/users/iteimouri/repos", "events_url": "https://api.github.com/users/iteimouri/events{/privacy}", "received_events_url": "https://api.github.com/users/iteimouri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-01T02:32:58Z", "updated_at": "2020-04-01T06:29:30Z", "closed_at": "2020-04-01T06:29:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to run [this example](https://docs.pymc.io/notebooks/ODE_API_introduction.html). I did !pip install pymc3 and this was installed just fine. Yet when I run from pymc3.ode import DifferentialEquation I get error `ModuleNotFoundError: No module named 'pymc3.ode'`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3864", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3864/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3864/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3864/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3864", "id": 590921093, "node_id": "MDU6SXNzdWU1OTA5MjEwOTM=", "number": 3864, "title": "sample_prior_predictive not working with Negative Binomial likelihood", "user": {"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars2.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-31T08:54:18Z", "updated_at": "2020-04-24T10:44:30Z", "closed_at": "2020-04-24T10:44:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\nAs discussed [here](https://discourse.pymc.io/t/sample-prior-predictive-doesnt-work-with-negative-binomial-likelihood/4767) with @lucianopaz, the following model samples smoothly when using `pm.sample` and `pm.sample_posterior_predictive`. But it raises `ValueError: operands could not be broadcast together with shapes (500,10886) (500,)` when trying `pm.sample_prior_predictive` (10886 is the number of data points):\r\n```python\r\nwith pm.Model() as m_bike_poisson:\r\n    a = pm.Normal(\"a\", 0.0, 0.5)\r\n    bT = pm.Normal(\"bT\", 0.0, 0.2)\r\n\r\n    lam = pm.math.exp(a + bT * bike_data[\"temp_std\"])\r\n    scale = pm.Exponential(\"scale\", 2.0)\r\n\r\n    bike_count = pm.NegativeBinomial(\r\n        \"bike_count\", mu=lam, alpha=scale, observed=bike_data[\"count\"]\r\n    )\r\n\r\n    prior_checks = pm.sample_prior_predictive(random_seed=RANDOM_SEED)\r\n    trace_bike_poisson = pm.sample(1000, tune=2000, random_seed=RANDOM_SEED)\r\n    post_samples = pm.sample_posterior_predictive(\r\n        trace_bike_poisson, random_seed=RANDOM_SEED\r\n    )\r\n```\r\nAdding `shape=bike_data[\"temp_std\"].to_numpy().shape` to the Negative Binomial doesn't help.\r\nThe data simply come from Kaggle\u2019s [bike-sharing demand](https://www.kaggle.com/c/bike-sharing-demand) contest.\r\nIt looks like a shape issue when drawing random values from the Gamma distribution:\r\n```python\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-3-3e62e449f5b3> in <module>\r\n     16     )\r\n     17 \r\n---> 18     prior_checks = pm.sample_prior_predictive(random_seed=RANDOM_SEED)\r\n     19     trace_bike_poisson = pm.sample(1000, tune=2000, random_seed=RANDOM_SEED)\r\n     20     post_samples = pm.sample_posterior_predictive(\r\n\r\n~/opt/anaconda3/envs/stat-rethink-pymc3/lib/python3.7/site-packages/pymc3/sampling.py in sample_prior_predictive(samples, model, vars, var_names, random_seed)\r\n   1770     names = get_default_varnames(vars_, include_transformed=False)\r\n   1771     # draw_values fails with auto-transformed variables. transform them later!\r\n-> 1772     values = draw_values([model[name] for name in names], size=samples)\r\n   1773 \r\n   1774     data = {k: v for k, v in zip(names, values)}\r\n\r\n~/opt/anaconda3/envs/stat-rethink-pymc3/lib/python3.7/site-packages/pymc3/distributions/distribution.py in draw_values(params, point, size)\r\n    632                                         point=point,\r\n    633                                         givens=temp_givens,\r\n--> 634                                         size=size)\r\n    635                     givens[next_.name] = (next_, value)\r\n    636                     drawn[(next_, size)] = value\r\n\r\n~/opt/anaconda3/envs/stat-rethink-pymc3/lib/python3.7/site-packages/pymc3/distributions/distribution.py in _draw_value(param, point, givens, size)\r\n    831                         else:\r\n    832                             dist_tmp.shape = val.shape\r\n--> 833                 return dist_tmp.random(point=point, size=size)\r\n    834             else:\r\n    835                 return param.distribution.random(point=point, size=size)\r\n\r\n~/opt/anaconda3/envs/stat-rethink-pymc3/lib/python3.7/site-packages/pymc3/distributions/discrete.py in random(self, point, size)\r\n    674         \"\"\"\r\n    675         mu, alpha = draw_values([self.mu, self.alpha], point=point, size=size)\r\n--> 676         g = generate_samples(stats.gamma.rvs, alpha, scale=mu / alpha,\r\n    677                              dist_shape=self.shape,\r\n    678                              size=size)\r\n\r\nValueError: operands could not be broadcast together with shapes (500,10886) (500,) \r\n```\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: Master\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.6\r\n* Operating system: OS X\r\n* How did you install PyMC3: pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3861", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3861/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3861/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3861/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3861", "id": 589990306, "node_id": "MDU6SXNzdWU1ODk5OTAzMDY=", "number": 3861, "title": "Number of samples is high when init='nuts'", "user": {"login": "rosgori", "id": 33338133, "node_id": "MDQ6VXNlcjMzMzM4MTMz", "avatar_url": "https://avatars0.githubusercontent.com/u/33338133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rosgori", "html_url": "https://github.com/rosgori", "followers_url": "https://api.github.com/users/rosgori/followers", "following_url": "https://api.github.com/users/rosgori/following{/other_user}", "gists_url": "https://api.github.com/users/rosgori/gists{/gist_id}", "starred_url": "https://api.github.com/users/rosgori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rosgori/subscriptions", "organizations_url": "https://api.github.com/users/rosgori/orgs", "repos_url": "https://api.github.com/users/rosgori/repos", "events_url": "https://api.github.com/users/rosgori/events{/privacy}", "received_events_url": "https://api.github.com/users/rosgori/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-30T04:49:30Z", "updated_at": "2020-04-01T06:40:38Z", "closed_at": "2020-04-01T06:40:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n\r\nWhen you use the option `init='nuts'` in `pm.sample()`, the number of samples is really high\r\n\r\n```python\r\nimport pymc3 as pm\r\nimport numpy as np\r\n\r\nN = 1000\r\nx = np.random.normal(loc=0, scale=2, size=N)\r\n\r\nwith pm.Model() as model:\r\n    \r\n    mu = pm.Normal('mu', 0, 5)\r\n    sigma = pm.HalfNormal('sigma', sd=5)\r\n    \r\n    obs = pm.Normal('obs', mu=mu, sigma=sigma, observed=x)\r\n    \r\nwith model:\r\n    trace = pm.sample(draws=100, tune=100, init='nuts')\r\n    \r\nprint(pm.summary(trace))\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\nSampling 4 chains, 0 divergences:   1%|\u258f         | 15137/1200000 [00:05<07:25, 2661.65draws/s]\r\n```\r\n\r\nAs you see, the number `1200000` always appear, it doesn't matter if you change `draws` or `tune` in `pm.sample`.\r\n\r\nShould that number change when you change `draws` and `tune`?\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.6\r\n* Operating system: Ubuntu 16.04.6 LTS\r\n* How did you install PyMC3: (conda/pip) conda\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3860", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3860/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3860/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3860/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3860", "id": 589880253, "node_id": "MDU6SXNzdWU1ODk4ODAyNTM=", "number": 3860, "title": " Add sample plot to Rice Distribution docs", "user": {"login": "canyon289", "id": 7213793, "node_id": "MDQ6VXNlcjcyMTM3OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7213793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canyon289", "html_url": "https://github.com/canyon289", "followers_url": "https://api.github.com/users/canyon289/followers", "following_url": "https://api.github.com/users/canyon289/following{/other_user}", "gists_url": "https://api.github.com/users/canyon289/gists{/gist_id}", "starred_url": "https://api.github.com/users/canyon289/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canyon289/subscriptions", "organizations_url": "https://api.github.com/users/canyon289/orgs", "repos_url": "https://api.github.com/users/canyon289/repos", "events_url": "https://api.github.com/users/canyon289/events{/privacy}", "received_events_url": "https://api.github.com/users/canyon289/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 86794, "node_id": "MDU6TGFiZWw4Njc5NA==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-29T20:37:49Z", "updated_at": "2020-03-31T05:29:11Z", "closed_at": "2020-03-31T05:29:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\n\r\nRice distributions are missing sample plot. One should be added\r\nhttps://docs.pymc.io/api/distributions/continuous.html#pymc3.distributions.continuous.Rice\r\n![image](https://user-images.githubusercontent.com/7213793/77860150-6298da00-71c2-11ea-962b-c6c03d05067c.png)\r\n\r\n\r\n\r\n**Please provide any additional information below.**\r\nSee example from Normal plot for how how this can be done\r\nhttps://docs.pymc.io/api/distributions/continuous.html#pymc3.distributions.continuous.Normal\r\nhttps://github.com/pymc-devs/pymc3/blob/master/pymc3/distributions/continuous.py#L433\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3854", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3854/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3854/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3854/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3854", "id": 587950609, "node_id": "MDU6SXNzdWU1ODc5NTA2MDk=", "number": 3854, "title": "[DISCUSSION] -- Change defaults of `draws` and `tune` in `pm.sample`?", "user": {"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars2.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2020-03-25T19:52:20Z", "updated_at": "2020-03-30T07:21:21Z", "closed_at": "2020-03-30T07:21:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi guys!\r\nFrom what I understood, tuning samples tend to be more important than draws in the development steps of the Bayesian framework. This is not reflected in the current defaults of `draws` and `tune` in `pm.sample` -- both default to 500.\r\n\r\nSo, why don't we change these to `draws=1000` and `tune=2000`? These are usually good defaults that @fonnesbeck often advise, and it would drive home the point that, at least in development, one should care more about tuning samples than draws.\r\n\r\nIf you think this would be a sensible change, I would be happy to make a PR.\r\nStay home and stay healthy,\r\nPyMCheers \u270c\ufe0f \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3849", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3849/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3849/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3849/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3849", "id": 586606399, "node_id": "MDU6SXNzdWU1ODY2MDYzOTk=", "number": 3849, "title": "macOS: Multiprocessor sampling stops unexpectedly on macOS Catalina if seaborn was imported", "user": {"login": "ivlis", "id": 332942, "node_id": "MDQ6VXNlcjMzMjk0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/332942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivlis", "html_url": "https://github.com/ivlis", "followers_url": "https://api.github.com/users/ivlis/followers", "following_url": "https://api.github.com/users/ivlis/following{/other_user}", "gists_url": "https://api.github.com/users/ivlis/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivlis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivlis/subscriptions", "organizations_url": "https://api.github.com/users/ivlis/orgs", "repos_url": "https://api.github.com/users/ivlis/repos", "events_url": "https://api.github.com/users/ivlis/events{/privacy}", "received_events_url": "https://api.github.com/users/ivlis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-24T00:35:51Z", "updated_at": "2020-05-12T08:30:20Z", "closed_at": "2020-05-12T08:30:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sampling stops with the following error in the console:\r\n```\r\nlibc++abi.dylib: terminating with uncaught exception of type std::runtime_error: Couldn't close file\r\n```\r\nSeems to be related with this issue:\r\nhttps://github.com/matplotlib/matplotlib/issues/15410\r\n\r\nI understand that this is an external package issue, but it makes PyMC3 practically unusable. \r\n\r\n**Please provide any additional information below.**\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7\r\n* Operating system: osX Catalina (only Catalina is affected, Mojave is OK)\r\n* How did you install PyMC3: conda\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3848", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3848/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3848/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3848/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3848", "id": 585675751, "node_id": "MDU6SXNzdWU1ODU2NzU3NTE=", "number": 3848, "title": "API docs for ODE are missing", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 86794, "node_id": "MDU6TGFiZWw4Njc5NA==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-22T09:17:47Z", "updated_at": "2020-03-24T08:55:24Z", "closed_at": "2020-03-24T08:55:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It seems like the ODE API docs are not getting generated: https://docs.pymc.io/api.html\r\n\r\nProbably just need to add them to the docs sources somewhere.\r\n\r\nCC @Dpananos ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3845", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3845/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3845/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3845/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3845", "id": 585131894, "node_id": "MDU6SXNzdWU1ODUxMzE4OTQ=", "number": 3845, "title": "Add full adaptation as option to pm.sample", "user": {"login": "eigenfoo", "id": 19851673, "node_id": "MDQ6VXNlcjE5ODUxNjcz", "avatar_url": "https://avatars1.githubusercontent.com/u/19851673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eigenfoo", "html_url": "https://github.com/eigenfoo", "followers_url": "https://api.github.com/users/eigenfoo/followers", "following_url": "https://api.github.com/users/eigenfoo/following{/other_user}", "gists_url": "https://api.github.com/users/eigenfoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/eigenfoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eigenfoo/subscriptions", "organizations_url": "https://api.github.com/users/eigenfoo/orgs", "repos_url": "https://api.github.com/users/eigenfoo/repos", "events_url": "https://api.github.com/users/eigenfoo/events{/privacy}", "received_events_url": "https://api.github.com/users/eigenfoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-20T15:07:03Z", "updated_at": "2020-03-28T15:42:14Z", "closed_at": "2020-03-28T15:42:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/pymc-devs/pymc3/pull/3596 and https://github.com/pymc-devs/pymc3/pull/3705 added support for full mass matrix adaptation, with an optional multiplier for expanding adaptation windows.\r\n\r\nWe should expose this into the `pm.sample` function as an option to the [`init` parameter](https://github.com/pymc-devs/pymc3/blob/master/pymc3/sampling.py#L256-L275): this will give users the choice on what adaptation routine they want (we should leave the default as it is, though).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3844", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3844/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3844/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3844/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3844", "id": 585058848, "node_id": "MDU6SXNzdWU1ODUwNTg4NDg=", "number": 3844, "title": "Parallel sampling hangs on macOS with Python 3.8 with pickling error", "user": {"login": "dfm", "id": 350282, "node_id": "MDQ6VXNlcjM1MDI4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/350282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfm", "html_url": "https://github.com/dfm", "followers_url": "https://api.github.com/users/dfm/followers", "following_url": "https://api.github.com/users/dfm/following{/other_user}", "gists_url": "https://api.github.com/users/dfm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfm/subscriptions", "organizations_url": "https://api.github.com/users/dfm/orgs", "repos_url": "https://api.github.com/users/dfm/repos", "events_url": "https://api.github.com/users/dfm/events{/privacy}", "received_events_url": "https://api.github.com/users/dfm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-03-20T13:09:41Z", "updated_at": "2020-08-16T20:49:45Z", "closed_at": "2020-08-16T20:49:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nStarting with Python 3.8 the default start method for multiprocessing on macOS is `spawn` instead of `fork` - more info [here](https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods) and [here](https://bugs.python.org/issue33725). This means that some features that used to work will not continue to work on macOS. I specifically ran into this when using a `DensityDist` where the function was defined in place as follows because the function is not picklable:\r\n\r\n```python\r\nimport pymc3 as pm\r\n\r\nwith pm.Model() as model:\r\n    \r\n    def val(x):\r\n        return -0.5 * pm.math.sum(x ** 2)\r\n    \r\n    x = pm.Flat(\"x\")\r\n    pm.DensityDist(\"obs\", val)\r\n    \r\n    pm.sample(chains=2, cores=2)\r\n```\r\n\r\nThis fails with the following error that does not actually get caught. I was running in a Jupyter notebook and the notebook just hangs and this gets written to the command line:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/Users/dforeman/research/projects/exoplanet-dev/case-studies/env/lib/python3.8/multiprocessing/spawn.py\", line 116, in spawn_main\r\n    exitcode = _main(fd, parent_sentinel)\r\n  File \"/Users/dforeman/research/projects/exoplanet-dev/case-studies/env/lib/python3.8/multiprocessing/spawn.py\", line 126, in _main\r\n    self = reduction.pickle.load(from_parent)\r\nAttributeError: Can't get attribute 'val' on <module '__main__' (built-in)>\r\n```\r\n\r\nA temporary workaround that I found was to execute\r\n\r\n```python\r\nimport multiprocessing as mp\r\nmp.set_start_method(\"fork\")\r\n```\r\n\r\nbefore importing PyMC3, but my understanding is that this won't be a long term solution. It doesn't seem like there's anything obvious to do about this, but I wanted to bring it up here in case folks had clever ideas!\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.8.1\r\n* Operating system: macOS\r\n* How did you install PyMC3: pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3842", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3842/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3842/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3842/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3842", "id": 584555303, "node_id": "MDU6SXNzdWU1ODQ1NTUzMDM=", "number": 3842, "title": "Error using pm.Data to supply mu parameter to Normal", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-19T16:52:15Z", "updated_at": "2020-05-18T15:08:54Z", "closed_at": "2020-05-18T15:08:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nWhen I create a `pm.Data` with a vector of values for the mean of a Normal, I get a type error.  When I supply the same vector of values without packaging into `pm.Data`, this works fine.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\n\r\n# the following gives: TypeError: ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\r\nwith pm.Model():\r\n    x = pm.Data(\"x\", [1.0, 2.0, 3.0])\r\n    y = pm.Normal(\"y\", mu=x, shape=3)\r\n\r\n# same type error\r\nwith pm.Model():\r\n    x = pm.Data(\"x\", np.array([1.0, 2.0, 3.0]))\r\n    y = pm.Normal(\"y\", mu=x, shape=3)\r\n\r\n# works fine\r\nwith pm.Model():\r\n    x = np.array([1.0, 2.0, 3.0])\r\n    y = pm.Normal(\"y\", mu=x, shape=3)\r\n\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n>>> Traceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/tmp/data_mu_bug.py\", line 11, in <module>\r\n  File \"/Users/rpg/src/pymc3/pymc3/distributions/distribution.py\", line 66, in __new__\r\n    return model.Var(name, dist, data, total_size)\r\n  File \"/Users/rpg/src/pymc3/pymc3/model.py\", line 998, in Var\r\n    total_size=total_size, model=self)\r\n  File \"/Users/rpg/src/pymc3/pymc3/model.py\", line 1450, in __init__\r\n    distribution.shape, distribution.dtype) * distribution.default()\r\n  File \"/Users/rpg/src/pymc3/pymc3/distributions/distribution.py\", line 91, in default\r\n    return np.asarray(self.get_test_val(self.testval, self.defaults), self.dtype)\r\n  File \"/Users/rpg/src/pymc3/pymc3/distributions/distribution.py\", line 96, in get_test_val\r\n    if hasattr(self, v) and np.all(np.isfinite(self.getattr_value(v))):\r\nTypeError: ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: master\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.6.8\r\n* Operating system: MacOS\r\n* How did you install PyMC3: pip, editable\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3840", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3840/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3840/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3840/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3840", "id": 584421478, "node_id": "MDU6SXNzdWU1ODQ0MjE0Nzg=", "number": 3840, "title": "sample_posterior_predictive fails on dicts when samples not set", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-19T13:41:51Z", "updated_at": "2020-03-19T18:58:46Z", "closed_at": "2020-03-19T18:58:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nhttps://github.com/pymc-devs/pymc3/blob/363afc80b0af4e873427420f10651cd86cc6263d/pymc3/sampling.py#L1523-L1525\r\n\r\nThis line breaks when `trace` is a list of dicts:\r\nhttps://github.com/pymc-devs/pymc3/blob/master/pymc3/sampling.py#L1571\r\n\r\n```\r\nc:\\users\\osthege\\repos\\pymc3\\pymc3\\sampling.py in sample_posterior_predictive(trace, samples, model, vars, var_names, size, keep_size, random_seed, progressbar)\r\n   1569 \r\n   1570     if samples is None:\r\n-> 1571         samples = sum(len(v) for v in trace._straces.values())\r\n   1572 \r\n   1573     if samples < len_trace * nchain:\r\n\r\nAttributeError: 'list' object has no attribute '_straces'\r\n```\r\n\r\nEither `samples` should default to `len_trace*nchains`, or we should specify that `samples` must be set unless `trace` is a `MultiTrace`.\r\n\r\n## Versions and main components\r\n* PyMC3 Version: master", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3832", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3832/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3832/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3832/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3832", "id": 583055966, "node_id": "MDU6SXNzdWU1ODMwNTU5NjY=", "number": 3832, "title": "\"Advanced usage of Theano in PyMC3\" seems to be broken", "user": {"login": "DeliciousHair", "id": 6540809, "node_id": "MDQ6VXNlcjY1NDA4MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6540809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeliciousHair", "html_url": "https://github.com/DeliciousHair", "followers_url": "https://api.github.com/users/DeliciousHair/followers", "following_url": "https://api.github.com/users/DeliciousHair/following{/other_user}", "gists_url": "https://api.github.com/users/DeliciousHair/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeliciousHair/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeliciousHair/subscriptions", "organizations_url": "https://api.github.com/users/DeliciousHair/orgs", "repos_url": "https://api.github.com/users/DeliciousHair/repos", "events_url": "https://api.github.com/users/DeliciousHair/events{/privacy}", "received_events_url": "https://api.github.com/users/DeliciousHair/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-17T14:31:06Z", "updated_at": "2020-03-17T23:43:46Z", "closed_at": "2020-03-17T23:43:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am attempting to create my own custom theano Op, using the [provided example](https://docs.pymc.io/Advanced_usage_of_Theano_in_PyMC3.html) as a roadmap. However, the example seems to be broken at present.\r\n\r\nIn particular:\r\n```python\r\n>>> theano.config.compute_test_value = 'ignore'\r\n>>> theano.tests.unittest_tools.verify_grad(MuFromTheta(), (np.array(0.2),))\r\n\r\nGradientErrorTraceback (most recent call last)\r\n<ipython-input-19-73c57006efe2> in <module>\r\n      1 theano.config.compute_test_value = 'ignore'\r\n----> 2 theano.tests.unittest_tools.verify_grad(MuFromTheta(), (np.array(0.2),))\r\n\r\n/usr/local/lib/python3.7/dist-packages/theano/tests/unittest_tools.py in verify_grad(op, pt, n_tests, rng, *args, **kwargs)\r\n     90         seed_rng()\r\n     91         rng = np.random\r\n---> 92     T.verify_grad(op, pt, n_tests, rng, *args, **kwargs)\r\n     93 \r\n     94 #\r\n\r\n/usr/local/lib/python3.7/dist-packages/theano/gradient.py in verify_grad(fun, pt, n_tests, rng, eps, out_type, abs_tol, rel_tol, mode, cast_to_output_type, no_debug_ref)\r\n   1793                                          num_grad.gf[max_arg].flatten()[max_err_pos],\r\n   1794                                          max_abs_err, max_rel_err,\r\n-> 1795                                          abs_tol, rel_tol)\r\n   1796 \r\n   1797             # get new random projection for next test\r\n\r\nGradientError: GradientError: numeric gradient and analytic gradient exceed tolerance:\r\n        At position 0 of argument 0 with shape (),\r\n            val1 = -0.123826      ,  val2 = 0.000000\r\n            abs. error = 0.123826,  abs. tolerance = 0.000100\r\n            rel. error = 1.000000,  rel. tolerance = 0.000100\r\nException args: \r\nThe error happened with the following inputs:, [array(0.2)], \r\nThe value of eps is:, None, \r\nThe out_type is:, None\r\n```\r\n\r\nReally not sure what the problem is here, but it does impact as the end result at the end of the demo is complete junk as a result.\r\n\r\nenvironment:\r\nubuntu 19.10 (docker)\r\npymc3 3.8\r\ntheano 1.0.4\r\nnumpy 1.18.1\r\n\r\nAll python libraries installed via pip (as opposed to apt)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3830", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3830/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3830/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3830/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3830", "id": 579518916, "node_id": "MDU6SXNzdWU1Nzk1MTg5MTY=", "number": 3830, "title": "GP Latent variable Inference : Problem deterministically reproducing f from f_rotated_", "user": {"login": "vr308", "id": 17442913, "node_id": "MDQ6VXNlcjE3NDQyOTEz", "avatar_url": "https://avatars1.githubusercontent.com/u/17442913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vr308", "html_url": "https://github.com/vr308", "followers_url": "https://api.github.com/users/vr308/followers", "following_url": "https://api.github.com/users/vr308/following{/other_user}", "gists_url": "https://api.github.com/users/vr308/gists{/gist_id}", "starred_url": "https://api.github.com/users/vr308/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vr308/subscriptions", "organizations_url": "https://api.github.com/users/vr308/orgs", "repos_url": "https://api.github.com/users/vr308/repos", "events_url": "https://api.github.com/users/vr308/events{/privacy}", "received_events_url": "https://api.github.com/users/vr308/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-11T20:12:09Z", "updated_at": "2020-03-12T12:15:37Z", "closed_at": "2020-03-12T12:15:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the [GP latent variable implementation](https://docs.pymc.io/notebooks/GP-Latent.html) which uses the automatic reparameterization in terms of the cholesky, so essentially \r\n\r\n_f = cholesky(K).dot(f_rotated_)_\r\n\r\n_f_rotated__ is the the std. normal variable which is sampled and returned in the trace. The trace also returns _f_ along with the free_RV f_rotated__\r\n\r\n## Description of your problem\r\nI am trying to deterministically construct f using the cholesky relation. I am also sampling the lengthscale hyper. \r\n\r\n    # number of data points\r\n    n = 200\r\n\r\n    # x locations\r\n    x = np.linspace(0, 1.5, n)\r\n\r\n    # true covariance\r\n    l_true = 0.1\r\n    n_true = 1.0\r\n    cov_func = n_true**2 * pm.gp.cov.ExpQuad(1, l_true)\r\n    K = cov_func(x[:,None]).eval()\r\n\r\n    # zero mean function\r\n    mean = np.zeros(n)\r\n\r\n    # sample from the gp prior\r\n    f_true = np.random.multivariate_normal(mean, K + 1e-6 * np.eye(n), 1).flatten()\r\n\r\n    # link function\r\n    def invlogit(x, eps=sys.float_info.epsilon):\r\n        return (1.0 + 2.0 * eps) / (1.0 + np.exp(-x)) + eps\r\n\r\n    # y-data\r\n    y = pm.Bernoulli.dist(p=invlogit(f_true)).random()\r\n\r\n    with pm.Model() as model:\r\n\r\n        # hypers\r\n\r\n        l = pm.Gamma(\"l\", alpha=2, beta=2)\r\n        n = 1.0\r\n        cov = n**2 * pm.gp.cov.ExpQuad(1, l)\r\n\r\n        gp = pm.gp.Latent(cov_func=cov)\r\n\r\n        # make gp prior\r\n        f = gp.prior(\"f\", X=x[:,None], reparameterize=True)\r\n\r\n        # logit link and Bernoulli likelihood\r\n        p = pm.Deterministic(\"p\", pm.math.invlogit(f))\r\n        y_ = pm.Bernoulli(\"y\", p=p, observed=y)\r\n\r\n        trace = pm.sample(50, chains=1)\r\n\r\n    # Trying to recreate f returned in the trace from f_rotated_ using the relation =>  f = cholesky(K).dot(f_rotated_)\r\n\r\n    f_recovered = np.empty(shape=(50,200))\r\n\r\n    for i in np.arange(50):\r\n        print(i)\r\n        l_current = trace['l'][i]\r\n        cov_current = 1.0**2 * pm.gp.cov.ExpQuad(1, l_current)\r\n        K = cov_current(x[:,None]) + 1e-12*np.eye(len(x))\r\n        v = trace['f_rotated_'][i]\r\n        f_current = cholesky(K).dot(v)\r\n        f_recovered[i] = f_current.eval()\r\n\r\n    # f_recovered should be equal to trace['f'] but it is not.\r\n\r\n    plt.figure()\r\n    plt.plot(x, f_recovered.T, color='b', label='Reconstructed')\r\n    plt.plot(x, trace['f'].T, color='grey', label='From trace')\r\n\r\n**Please provide any additional information below\r\n\r\n\r\n\r\n![err](https://user-images.githubusercontent.com/17442913/76459115-88a53880-63d3-11ea-8401-3dd88f473059.png)\r\n.**\r\n\r\nBlue = recreation, Grey = plotted directly from trace \r\nCan't understand why there seems to a delta when they should match exactly as f is just a deterministic transform. \r\n## Versions and main components\r\n\r\n* PyMC3 Version:3.8\r\n* Theano Version:1.0.4\r\n* Python Version: 3.6.10\r\n* Operating system: Ubuntu 18.04.3 LTS\r\n* How did you install PyMC3: (conda/pip) conda\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3828", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3828/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3828/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3828/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3828", "id": 577492795, "node_id": "MDU6SXNzdWU1Nzc0OTI3OTU=", "number": 3828, "title": "sample_posterior_predictive from InferenceData?", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 1395104865, "node_id": "MDU6TGFiZWwxMzk1MTA0ODY1", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/feature%20request", "name": "feature request", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-08T12:23:53Z", "updated_at": "2020-03-20T18:58:01Z", "closed_at": "2020-03-20T18:58:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Description of your problem\r\nIn some scenarios, sampling and prediction do not happen at the same time or even in the same process.\r\n`sample_posterior_predictive` can be fed with a `MultiTrace`, but in many scenarios, the trace is saved via `arviz.to_netcdf` and only the `arviz.InferenceData` is kept.\r\n\r\nWith this small function, one can convert an `xarray.Dataset` (the `InferenceData.posterior`) to a list of points that may be consumed by `sample_posterior_predictive`.\r\n\r\n```python\r\ndef _to_points(posterior:xarray.Dataset) -> typing.List[dict]:\r\n    samples = {\r\n        vn : posterior[vn].values\r\n        for vn in posterior.keys()\r\n    }\r\n    points = []\r\n    for c in posterior.chain:\r\n        for d in posterior.draw:\r\n            points.append({\r\n                vn : s[c, d]\r\n                for vn, s in samples.items()\r\n            })\r\n    return points\r\n```\r\n\r\nThe list of points is probably not the most performant option. Maybe `sample_posterior_predictive` could be modified to consume the `InferenceData` object directly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3825", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3825/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3825/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3825/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3825", "id": 577063250, "node_id": "MDU6SXNzdWU1NzcwNjMyNTA=", "number": 3825, "title": "Documenting internals", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-06T17:07:08Z", "updated_at": "2020-03-06T21:54:10Z", "closed_at": "2020-03-06T17:09:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description of your problem\r\nI recently made a [draw.io](https://draw.io) chart of the control flow in `sampling.py`.\r\nI'm creating a wiki page for such documentation of internal structure: https://github.com/pymc-devs/pymc3/wiki/Internals\r\n\r\nHowever, one can't upload file attachments to the wiki directly, so instead I'll comment the image & file here, so I can link it from the wiki.\r\n\r\nI suppose this issue can serve the same purpose for other wiki attachments.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3819", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3819/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3819/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3819/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3819", "id": 572643578, "node_id": "MDU6SXNzdWU1NzI2NDM1Nzg=", "number": 3819, "title": "First draw has tune=True sampler stat", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-28T09:49:06Z", "updated_at": "2020-03-01T12:53:58Z", "closed_at": "2020-03-01T12:53:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Description\r\nThe first draw after the tuning is marked with a `tune=True` sampler stat.\r\n\r\n![grafik](https://user-images.githubusercontent.com/5894642/75537640-b2e01900-5a17-11ea-93f8-1a77cfd545b3.png)\r\n\r\n## Versions and main components\r\n* PyMC3 Version: master\r\n\r\nOther components are not relevant here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3817", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3817/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3817/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3817/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3817", "id": 571545604, "node_id": "MDU6SXNzdWU1NzE1NDU2MDQ=", "number": 3817, "title": "Small Typo on Bayes Factors and Marginal Likelihood notebook", "user": {"login": "heytitle", "id": 1214890, "node_id": "MDQ6VXNlcjEyMTQ4OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1214890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heytitle", "html_url": "https://github.com/heytitle", "followers_url": "https://api.github.com/users/heytitle/followers", "following_url": "https://api.github.com/users/heytitle/following{/other_user}", "gists_url": "https://api.github.com/users/heytitle/gists{/gist_id}", "starred_url": "https://api.github.com/users/heytitle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heytitle/subscriptions", "organizations_url": "https://api.github.com/users/heytitle/orgs", "repos_url": "https://api.github.com/users/heytitle/repos", "events_url": "https://api.github.com/users/heytitle/events{/privacy}", "received_events_url": "https://api.github.com/users/heytitle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-26T17:32:16Z", "updated_at": "2020-02-28T19:17:44Z", "closed_at": "2020-02-28T19:17:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nIt seems that there is a writing inconsistence of the the parameter prior on on [Bayes Factors and Marginal Likelihood](https://docs.pymc.io/notebooks/Bayes_factor.html). In the beginning, the parameter prior under a model is written using a conditional form:\r\n<img width=\"289\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1214890/75370717-d3985980-58c5-11ea-89dd-cfcebcd73f56.png\">\r\n\r\nWhen [discussing remarks](https://docs.pymc.io/notebooks/Bayes_factor.html#Some-remarks), the parameter prior is instead written as a joint distribution:\r\n<img width=\"347\" alt=\"Screen Shot 2020-02-26 at 6 24 08 PM\" src=\"https://user-images.githubusercontent.com/1214890/75370635-b2376d80-58c5-11ea-9848-5a1f470b704a.png\">\r\n\r\nIMHO, the later seems to be a typo. What do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3813", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3813/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3813/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3813/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3813", "id": 567715266, "node_id": "MDU6SXNzdWU1Njc3MTUyNjY=", "number": 3813, "title": "pymc3.Data converts input data to float64 type - so int data cannot later be used as an index", "user": {"login": "hottwaj", "id": 5629061, "node_id": "MDQ6VXNlcjU2MjkwNjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5629061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hottwaj", "html_url": "https://github.com/hottwaj", "followers_url": "https://api.github.com/users/hottwaj/followers", "following_url": "https://api.github.com/users/hottwaj/following{/other_user}", "gists_url": "https://api.github.com/users/hottwaj/gists{/gist_id}", "starred_url": "https://api.github.com/users/hottwaj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hottwaj/subscriptions", "organizations_url": "https://api.github.com/users/hottwaj/orgs", "repos_url": "https://api.github.com/users/hottwaj/repos", "events_url": "https://api.github.com/users/hottwaj/events{/privacy}", "received_events_url": "https://api.github.com/users/hottwaj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-02-19T17:23:42Z", "updated_at": "2020-05-18T15:08:54Z", "closed_at": "2020-05-18T15:08:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there guys\r\n\r\nI'd like to create a model that I want to fit many times to different datasets for cross validation purposes.\r\n\r\nOne of my columns of input data is categorical, so I use it to index a vector of RVs depending on which category is presented in each sample of data.  Something like this:\r\n\r\n```\r\ncat_mvs = [pymc3.Normal(c, mu = 0, sd = 0.05) for c in unique_categories]\r\n\r\ncat_mv_vector = pymc3.math.stack(cat_mvs)\r\ncat_data = pymc3.Data('Categorical Input Data', category_codes)\r\nsample_cat_mv = cat_mv_vector[cat_data]\r\n```\r\n\r\nNote that my `category_codes` data is a numpy array of *integers*\r\n\r\nThat last line of code above triggers an error, here's the traceback within pymc3:\r\n\r\n```\r\n~/.pyenv/versions/3.7.2/envs/jupyterlab-3.7.2/lib/python3.7/site-packages/theano/tensor/var.py in __getitem__(self, args)\r\n    568                             TensorVariable, TensorConstant,\r\n    569                             theano.tensor.sharedvar.TensorSharedVariable))):\r\n--> 570                 return self.take(args[axis], axis)\r\n    571             else:\r\n    572                 return theano.tensor.subtensor.advanced_subtensor(self, *args)\r\n\r\n~/.pyenv/versions/3.7.2/envs/jupyterlab-3.7.2/lib/python3.7/site-packages/theano/tensor/var.py in take(self, indices, axis, mode)\r\n    612 \r\n    613     def take(self, indices, axis=None, mode='raise'):\r\n--> 614         return theano.tensor.subtensor.take(self, indices, axis, mode)\r\n    615 \r\n    616     # COPYING\r\n\r\n~/.pyenv/versions/3.7.2/envs/jupyterlab-3.7.2/lib/python3.7/site-packages/theano/tensor/subtensor.py in take(a, indices, axis, mode)\r\n   2448             return advanced_subtensor1(a.flatten(), indices)\r\n   2449         elif axis == 0:\r\n-> 2450             return advanced_subtensor1(a, indices)\r\n   2451         else:\r\n   2452             if axis < 0:\r\n\r\n~/.pyenv/versions/3.7.2/envs/jupyterlab-3.7.2/lib/python3.7/site-packages/theano/gof/op.py in __call__(self, *inputs, **kwargs)\r\n    613         \"\"\"\r\n    614         return_list = kwargs.pop('return_list', False)\r\n--> 615         node = self.make_node(*inputs, **kwargs)\r\n    616 \r\n    617         if config.compute_test_value != 'off':\r\n\r\n~/.pyenv/versions/3.7.2/envs/jupyterlab-3.7.2/lib/python3.7/site-packages/theano/tensor/subtensor.py in make_node(self, x, ilist)\r\n   1701         ilist_ = theano.tensor.as_tensor_variable(ilist)\r\n   1702         if ilist_.type.dtype not in theano.tensor.integer_dtypes:\r\n-> 1703             raise TypeError('index must be integers')\r\n   1704         if ilist_.type.ndim != 1:\r\n   1705             raise TypeError('index must be vector')\r\n\r\nTypeError: index must be integers\r\n```\r\n\r\nIt seems that within pymc3.Data(), my *category_codes* data is being coerced to float64, which is not a valid indexing type.\r\n\r\nLooking at the source for `pymc3.Data()` I think the problem is ultimately in the called function `pymc3.model.pandas_to_array` which converts its input data to a float on its last line, see https://github.com/pymc-devs/pymc3/blob/master/pymc3/model.py#L1495\r\n\r\nCan `pymc3.Data()` and/or `pymc3.model.pandas_to_array` be changed to be preserve the input data type?\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3807", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3807/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3807/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3807/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3807", "id": 566639845, "node_id": "MDU6SXNzdWU1NjY2Mzk4NDU=", "number": 3807, "title": "Notebook example on Bayes factor", "user": {"login": "HVoltBb", "id": 11577424, "node_id": "MDQ6VXNlcjExNTc3NDI0", "avatar_url": "https://avatars3.githubusercontent.com/u/11577424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HVoltBb", "html_url": "https://github.com/HVoltBb", "followers_url": "https://api.github.com/users/HVoltBb/followers", "following_url": "https://api.github.com/users/HVoltBb/following{/other_user}", "gists_url": "https://api.github.com/users/HVoltBb/gists{/gist_id}", "starred_url": "https://api.github.com/users/HVoltBb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HVoltBb/subscriptions", "organizations_url": "https://api.github.com/users/HVoltBb/orgs", "repos_url": "https://api.github.com/users/HVoltBb/repos", "events_url": "https://api.github.com/users/HVoltBb/events{/privacy}", "received_events_url": "https://api.github.com/users/HVoltBb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "aloctavodia", "id": 1338958, "node_id": "MDQ6VXNlcjEzMzg5NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1338958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aloctavodia", "html_url": "https://github.com/aloctavodia", "followers_url": "https://api.github.com/users/aloctavodia/followers", "following_url": "https://api.github.com/users/aloctavodia/following{/other_user}", "gists_url": "https://api.github.com/users/aloctavodia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aloctavodia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aloctavodia/subscriptions", "organizations_url": "https://api.github.com/users/aloctavodia/orgs", "repos_url": "https://api.github.com/users/aloctavodia/repos", "events_url": "https://api.github.com/users/aloctavodia/events{/privacy}", "received_events_url": "https://api.github.com/users/aloctavodia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aloctavodia", "id": 1338958, "node_id": "MDQ6VXNlcjEzMzg5NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1338958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aloctavodia", "html_url": "https://github.com/aloctavodia", "followers_url": "https://api.github.com/users/aloctavodia/followers", "following_url": "https://api.github.com/users/aloctavodia/following{/other_user}", "gists_url": "https://api.github.com/users/aloctavodia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aloctavodia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aloctavodia/subscriptions", "organizations_url": "https://api.github.com/users/aloctavodia/orgs", "repos_url": "https://api.github.com/users/aloctavodia/repos", "events_url": "https://api.github.com/users/aloctavodia/events{/privacy}", "received_events_url": "https://api.github.com/users/aloctavodia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-18T04:34:59Z", "updated_at": "2020-02-19T17:14:55Z", "closed_at": "2020-02-19T17:14:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In this notebook,\r\nhttps://github.com/pymc-devs/pymc3/blob/master/docs/source/notebooks/Bayes_factor.ipynb\r\nsection \"Sequential Monte Carlo\".\r\nThe text is talking about increasing the accuracy through increasing n_chains. Perhaps you mean the number of draws. Increasing n_chains won't give you anything better except shorter exec time. Also, there's no argument called n_chains in sample_smc.\r\n\r\nI would say \"increase the number of **adaptation** n_steps and **draws** for a more accurate estimation of the marginal likelihood.\"  Let me know if the text is clearer this way.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3805", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3805/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3805/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3805/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3805", "id": 566003985, "node_id": "MDU6SXNzdWU1NjYwMDM5ODU=", "number": 3805, "title": "`summary()` fails with the new pandas release", "user": {"login": "bersavosh", "id": 5542442, "node_id": "MDQ6VXNlcjU1NDI0NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5542442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bersavosh", "html_url": "https://github.com/bersavosh", "followers_url": "https://api.github.com/users/bersavosh/followers", "following_url": "https://api.github.com/users/bersavosh/following{/other_user}", "gists_url": "https://api.github.com/users/bersavosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/bersavosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bersavosh/subscriptions", "organizations_url": "https://api.github.com/users/bersavosh/orgs", "repos_url": "https://api.github.com/users/bersavosh/repos", "events_url": "https://api.github.com/users/bersavosh/events{/privacy}", "received_events_url": "https://api.github.com/users/bersavosh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-17T01:02:00Z", "updated_at": "2020-02-17T06:26:58Z", "closed_at": "2020-02-17T06:22:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pandas 1.0 has been [released](https://pandas.pydata.org/pandas-docs/stable/whatsnew/v1.0.0.html) and the keyword `joint_axis` is [now removed](https://github.com/pandas-dev/pandas/pull/22318) from `concat()`.\r\n\r\nThis causes pymc3's `summary()` to fail with the following error:\r\n\r\n```\r\n~/anaconda3/lib/python3.6/site-packages/pymc3/stats.py in summary(trace, varnames, transform, stat_funcs, extend, include_transformed, alpha, start, batches)\r\n    980         rhat_pd = dict2pd(rhat, 'Rhat')\r\n    981         return pd.concat([dforg, n_eff_pd, rhat_pd],\r\n--> 982                          axis=1, join_axes=[dforg.index])\r\n    983 \r\n    984 \r\n\r\nTypeError: concat() got an unexpected keyword argument 'join_axes'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3802", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3802/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3802/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3802/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3802", "id": 565807400, "node_id": "MDU6SXNzdWU1NjU4MDc0MDA=", "number": 3802, "title": "Fix simple typo: varibles -> variables", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-15T20:48:57Z", "updated_at": "2020-02-15T21:20:46Z", "closed_at": "2020-02-15T21:20:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in pymc3/tests/test_examples.py.\nShould read `variables` rather than `varibles`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3800", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3800/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3800/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3800/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3800", "id": 561996376, "node_id": "MDU6SXNzdWU1NjE5OTYzNzY=", "number": 3800, "title": "Building docs fails on master branch", "user": {"login": "zoj613", "id": 44142765, "node_id": "MDQ6VXNlcjQ0MTQyNzY1", "avatar_url": "https://avatars1.githubusercontent.com/u/44142765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zoj613", "html_url": "https://github.com/zoj613", "followers_url": "https://api.github.com/users/zoj613/followers", "following_url": "https://api.github.com/users/zoj613/following{/other_user}", "gists_url": "https://api.github.com/users/zoj613/gists{/gist_id}", "starred_url": "https://api.github.com/users/zoj613/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zoj613/subscriptions", "organizations_url": "https://api.github.com/users/zoj613/orgs", "repos_url": "https://api.github.com/users/zoj613/repos", "events_url": "https://api.github.com/users/zoj613/events{/privacy}", "received_events_url": "https://api.github.com/users/zoj613/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-02-08T09:40:04Z", "updated_at": "2020-02-17T22:05:28Z", "closed_at": "2020-02-17T22:05:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nrunning ` source build_and_deploy_docs.sh` or manually doing it via `make html` raises an error, after cloning the master branch to my local machine.\r\n\r\n```\r\nNotebook error:\r\nNotebookValidationError in notebooks/GLM-model-selection.ipynb:\r\n{'model_id': '3f7c2b0604ab4d6aae55867976e7f8d1', 'version_major': 2, 'version_minor': 0} is not valid under any of the given schemas\r\n\r\nFailed validating 'oneOf' in display_data['properties']['data']['patternProperties']['^(?!application/json$)[a-zA-Z0-9]+/[a-zA-Z0-9\\\\-\\\\+\\\\.]+$']:\r\n\r\nOn instance['cells'][6]['outputs'][0]['data']['application/vnd.jupyter.widget-view+json']:\r\n{'model_id': '3f7c2b0604ab4d6aae55867976e7f8d1',\r\n 'version_major': 2,\r\n 'version_minor': 0}\r\nMakefile:56: recipe for target 'html' failed\r\nmake: *** [html] Error 2\r\n```\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.6.8\r\n* Operating system: Ubuntu 18.04\r\n* How did you install PyMC3: `pip setup.py install`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3798", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3798/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3798/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3798/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3798", "id": 561269889, "node_id": "MDU6SXNzdWU1NjEyNjk4ODk=", "number": 3798, "title": "formula for pseudo Bayesian averaging is wrong", "user": {"login": "HVoltBb", "id": 11577424, "node_id": "MDQ6VXNlcjExNTc3NDI0", "avatar_url": "https://avatars3.githubusercontent.com/u/11577424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HVoltBb", "html_url": "https://github.com/HVoltBb", "followers_url": "https://api.github.com/users/HVoltBb/followers", "following_url": "https://api.github.com/users/HVoltBb/following{/other_user}", "gists_url": "https://api.github.com/users/HVoltBb/gists{/gist_id}", "starred_url": "https://api.github.com/users/HVoltBb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HVoltBb/subscriptions", "organizations_url": "https://api.github.com/users/HVoltBb/orgs", "repos_url": "https://api.github.com/users/HVoltBb/repos", "events_url": "https://api.github.com/users/HVoltBb/events{/privacy}", "received_events_url": "https://api.github.com/users/HVoltBb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-06T21:07:11Z", "updated_at": "2020-02-07T12:37:49Z", "closed_at": "2020-02-07T12:37:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\nHere is the link https://docs.pymc.io/notebooks/model_averaging.html\r\nYou are missing a minus sign there.\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\n[Your code here]\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n[The error output here]\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version:\r\n* Theano Version:\r\n* Python Version:\r\n* Operating system:\r\n* How did you install PyMC3: (conda/pip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3793", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3793/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3793/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3793/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3793", "id": 557061852, "node_id": "MDU6SXNzdWU1NTcwNjE4NTI=", "number": 3793, "title": "pm.Data are not given model-relative names", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-29T19:16:27Z", "updated_at": "2020-03-20T12:03:55Z", "closed_at": "2020-03-20T12:03:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Random variables in PyMC3 are given names relative to their parent model, if that model has a name.  This avoids name collisions between models made of replicated sub-components.\r\n\r\nHowever, since `pm.Data` objects are not random variables, they do not get renamed, which means that when they are used in sub-models they don't get renamed, so give name collisions.\r\n\r\nI know this is a terrible issue report, but I don't have time to work on it now, even to the extent of making a better bug report, because I'm fixing another two bugs!  So my apologies, but I wanted to get this recorded so I don't forget to get back to it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3786", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3786/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3786/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3786/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3786", "id": 554869719, "node_id": "MDU6SXNzdWU1NTQ4Njk3MTk=", "number": 3786, "title": "installing pymc3 has ruined my base env.", "user": {"login": "cmp1", "id": 28893120, "node_id": "MDQ6VXNlcjI4ODkzMTIw", "avatar_url": "https://avatars1.githubusercontent.com/u/28893120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmp1", "html_url": "https://github.com/cmp1", "followers_url": "https://api.github.com/users/cmp1/followers", "following_url": "https://api.github.com/users/cmp1/following{/other_user}", "gists_url": "https://api.github.com/users/cmp1/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmp1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmp1/subscriptions", "organizations_url": "https://api.github.com/users/cmp1/orgs", "repos_url": "https://api.github.com/users/cmp1/repos", "events_url": "https://api.github.com/users/cmp1/events{/privacy}", "received_events_url": "https://api.github.com/users/cmp1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-24T17:45:56Z", "updated_at": "2020-01-24T23:13:31Z", "closed_at": "2020-01-24T17:49:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have questions about a specific use case, or you are not sure whether this is a bug or not, please post it to our discourse channel: https://discourse.pymc.io  \r\n\r\n## Description of your problem\r\n\r\nConda install of pymc3 lead to multiple errors upon load, and now after removal I am no longer able to import keras/tensorflow etc.\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n```python\r\n[Your code here]\r\n```\r\n\r\n**Please provide the full traceback.**\r\n```python\r\n\r\n<ipython-input-8-848db44b64a8> in <module>\r\n      7 import keras\r\n      8 import tensorflow as tf\r\n----> 9 import pymc3\r\n\r\n~\\AppData\\Local\\Anaconda\\anaconda3\\lib\\site-packages\\pymc3\\__init__.py in <module>\r\n     11 from .model_graph import model_to_graphviz\r\n     12 from . import ode\r\n---> 13 from .stats import *\r\n     14 from .sampling import *\r\n     15 from .step_methods import *\r\n\r\n~\\AppData\\Local\\Anaconda\\anaconda3\\lib\\site-packages\\pymc3\\stats\\__init__.py in <module>\r\n      8 import warnings\r\n      9 \r\n---> 10 import arviz as az\r\n     11 \r\n     12 def map_args(func):\r\n\r\n~\\AppData\\Local\\Anaconda\\anaconda3\\lib\\site-packages\\arviz\\__init__.py in <module>\r\n     25 \r\n     26 from .rcparams import rcParams, rc_context\r\n---> 27 from .data import *\r\n     28 from .plots import *\r\n     29 from .stats import *\r\n\r\n~\\AppData\\Local\\Anaconda\\anaconda3\\lib\\site-packages\\arviz\\data\\__init__.py in <module>\r\n      1 \"\"\"Code for loading and manipulating data structures.\"\"\"\r\n      2 from .inference_data import InferenceData, concat\r\n----> 3 from .io_netcdf import from_netcdf, to_netcdf\r\n      4 from .datasets import load_arviz_data, list_datasets, clear_data_home\r\n      5 from .base import numpy_to_data_array, dict_to_dataset, CoordSpec, DimSpec\r\n\r\n~\\AppData\\Local\\Anaconda\\anaconda3\\lib\\site-packages\\arviz\\data\\io_netcdf.py in <module>\r\n      2 \r\n      3 from .inference_data import InferenceData\r\n----> 4 from .converters import convert_to_inference_data\r\n      5 \r\n      6 \r\n\r\n~\\AppData\\Local\\Anaconda\\anaconda3\\lib\\site-packages\\arviz\\data\\converters.py in <module>\r\n     10 from .io_numpyro import from_numpyro\r\n     11 from .io_pymc3 import from_pymc3\r\n---> 12 from .io_pyro import from_pyro\r\n     13 from .io_pystan import from_pystan\r\n     14 \r\n\r\n~\\AppData\\Local\\Anaconda\\anaconda3\\lib\\site-packages\\arviz\\data\\io_pyro.py in <module>\r\n      2 import logging\r\n      3 import numpy as np\r\n----> 4 from packaging import version\r\n      5 import xarray as xr\r\n      6 \r\n\r\nModuleNotFoundError: No module named 'packaging'\r\n'\r\n```\r\n\r\n**Please provide any additional information below.**\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: Python 3.8\r\n* Operating system: Windows \r\n* How did you install PyMC3: (conda/pip) Pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3777", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3777/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3777/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3777/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3777", "id": 551965107, "node_id": "MDU6SXNzdWU1NTE5NjUxMDc=", "number": 3777, "title": "HamiltonianMC fails on a certain dataset while NUTS works just fine", "user": {"login": "geomesch", "id": 36887909, "node_id": "MDQ6VXNlcjM2ODg3OTA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36887909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geomesch", "html_url": "https://github.com/geomesch", "followers_url": "https://api.github.com/users/geomesch/followers", "following_url": "https://api.github.com/users/geomesch/following{/other_user}", "gists_url": "https://api.github.com/users/geomesch/gists{/gist_id}", "starred_url": "https://api.github.com/users/geomesch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geomesch/subscriptions", "organizations_url": "https://api.github.com/users/geomesch/orgs", "repos_url": "https://api.github.com/users/geomesch/repos", "events_url": "https://api.github.com/users/geomesch/events{/privacy}", "received_events_url": "https://api.github.com/users/geomesch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-19T18:43:19Z", "updated_at": "2020-01-20T13:35:23Z", "closed_at": "2020-01-20T13:33:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Possible bug in HamiltonianMC\r\n\r\npymc3 produces an error when using HamiltonianMC as a step for a fairly simple model\r\n```python\r\nimport numpy as np\r\nimport pymc3 as pm\r\n\r\nnp.random.seed(2020)\r\nx = np.loadtxt('x.txt', delimiter='\\t')\r\ny = np.loadtxt('y.txt', delimiter='\\t')\r\n\r\nwith pm.Model() as model:\r\n    l = pm.Gamma('lambda', alpha=5, beta=1)\r\n    beta = pm.Normal('beta', mu=0.5, sd=l ** (-2))\r\n    g = pm.Normal('g', mu=x * beta, sd=1, observed=y)\r\n    step = pm.HamiltonianMC([beta, l])\r\n    trace = pm.sample(1000, chains=1, step=step, start={'beta': 0.5, 'lambda': 5})\r\n```\r\nData:\r\n[x.txt](https://github.com/pymc-devs/pymc3/files/4083148/x.txt)\r\n[y.txt](https://github.com/pymc-devs/pymc3/files/4083149/y.txt)\r\n\r\nException:\r\n```python\r\nValueError: Mass matrix contains zeros on the diagonal. \r\nThe derivative of RV `lambda_log__`.ravel()[0] is zero.\r\nThe derivative of RV `beta`.ravel()[0] is zero.\r\n```\r\n\r\nHowever, NUTS runs just fine and produces correct parameters' estimates. My own toy implementation of Hamiltonian MC also gives correct estimates.\r\nI think I need to add, just for the sake of clarity, that the same code but for a different dataset produces correct results as well:\r\n```python\r\nx = np.linspace(0, 10, 100)\r\ny = 3 * x + np.random.normal(size=len(x))\r\n\r\nwith pm.Model() as model:\r\n    l = pm.Gamma('lambda', alpha=5, beta=1)\r\n    beta = pm.Normal('beta', mu=0.5, sd=l)\r\n    g = pm.Normal('g', mu=x * beta, sd=1, observed=y)\r\n    step = pm.HamiltonianMC([beta, l])\r\n    trace = pm.sample(1000, chains=1, step=step, start={'beta': 0.5, 'lambda': 5})\r\n```\r\n\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.4\r\n* Operating system: Archlinux\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3775", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3775/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3775/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3775/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3775", "id": 551954777, "node_id": "MDU6SXNzdWU1NTE5NTQ3Nzc=", "number": 3775, "title": "test_fit_oo[ADVI-full] test is broken", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/defects", "name": "defects", "color": "e10c02", "default": false, "description": null}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars0.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ferrine", "id": 11705326, "node_id": "MDQ6VXNlcjExNzA1MzI2", "avatar_url": "https://avatars0.githubusercontent.com/u/11705326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ferrine", "html_url": "https://github.com/ferrine", "followers_url": "https://api.github.com/users/ferrine/followers", "following_url": "https://api.github.com/users/ferrine/following{/other_user}", "gists_url": "https://api.github.com/users/ferrine/gists{/gist_id}", "starred_url": "https://api.github.com/users/ferrine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ferrine/subscriptions", "organizations_url": "https://api.github.com/users/ferrine/orgs", "repos_url": "https://api.github.com/users/ferrine/repos", "events_url": "https://api.github.com/users/ferrine/events{/privacy}", "received_events_url": "https://api.github.com/users/ferrine/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-01-19T17:28:27Z", "updated_at": "2020-01-29T19:11:22Z", "closed_at": "2020-01-29T19:11:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This _may_ be just a breakage in pytest.  The error is in fixture initialization:\r\n\r\n```\r\nfixturedef = <FixtureDef argname='simple_model' scope='module' baseid='pymc3/tests/test_variational_inference.py'>\r\nrequest = <SubRequest 'simple_model' for <Function test_fit_oo[ADVI-full]>>\r\n    def pytest_fixture_setup(fixturedef, request):\r\n        \"\"\" Execution of fixture setup. \"\"\"\r\n        kwargs = {}\r\n        for argname in fixturedef.argnames:\r\n            fixdef = request._get_active_fixturedef(argname)\r\n>           result, arg_cache_key, exc = fixdef.cached_result\r\nE           AttributeError: 'FixtureDef' object has no attribute 'cached_result'\r\n```\r\n\r\nI don't know if this is related to #3395 or #2943 (but I think *not* the latter, which seems to be a different issue).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3772", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3772/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3772/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3772/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3772", "id": 551703839, "node_id": "MDU6SXNzdWU1NTE3MDM4Mzk=", "number": 3772, "title": "Saving and loading trace does not restore sampler stats", "user": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, {"login": "aseyboldt", "id": 1882397, "node_id": "MDQ6VXNlcjE4ODIzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1882397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseyboldt", "html_url": "https://github.com/aseyboldt", "followers_url": "https://api.github.com/users/aseyboldt/followers", "following_url": "https://api.github.com/users/aseyboldt/following{/other_user}", "gists_url": "https://api.github.com/users/aseyboldt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseyboldt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseyboldt/subscriptions", "organizations_url": "https://api.github.com/users/aseyboldt/orgs", "repos_url": "https://api.github.com/users/aseyboldt/repos", "events_url": "https://api.github.com/users/aseyboldt/events{/privacy}", "received_events_url": "https://api.github.com/users/aseyboldt/received_events", "type": "User", "site_admin": false}, {"login": "ColCarroll", "id": 2295568, "node_id": "MDQ6VXNlcjIyOTU1Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2295568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColCarroll", "html_url": "https://github.com/ColCarroll", "followers_url": "https://api.github.com/users/ColCarroll/followers", "following_url": "https://api.github.com/users/ColCarroll/following{/other_user}", "gists_url": "https://api.github.com/users/ColCarroll/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColCarroll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColCarroll/subscriptions", "organizations_url": "https://api.github.com/users/ColCarroll/orgs", "repos_url": "https://api.github.com/users/ColCarroll/repos", "events_url": "https://api.github.com/users/ColCarroll/events{/privacy}", "received_events_url": "https://api.github.com/users/ColCarroll/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-01-18T01:43:36Z", "updated_at": "2020-01-19T00:28:25Z", "closed_at": "2020-01-19T00:28:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nI was reading in a model trace in order to compute WAIC with Arviz.  After loading the trace, `trace.stat_names` was `set()`.  Here's an example:\r\n\r\n![image](https://user-images.githubusercontent.com/3274/72656512-46c2bd80-3961-11ea-8741-84a06708f36d.png)\r\n\r\nWhat's especially disappointing is that when I look at the `metadata.json` file in one of the chain subdirectories of the trace directory, I can see that the statistics are there.  So it seems like a bug in `pm.load_trace()` not to restore them.\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version:  `master` as of today\r\n* Theano Version: ditto\r\n* Python Version: 3.6\r\n* Operating system: MacOS\r\n* How did you install PyMC3: `pip -e`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3769", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3769/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3769/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3769/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3769", "id": 548794690, "node_id": "MDU6SXNzdWU1NDg3OTQ2OTA=", "number": 3769, "title": "Using Poetry for Dependency Management & Packaging? [DISCUSSION]", "user": {"login": "AlexAndorra", "id": 30447180, "node_id": "MDQ6VXNlcjMwNDQ3MTgw", "avatar_url": "https://avatars2.githubusercontent.com/u/30447180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexAndorra", "html_url": "https://github.com/AlexAndorra", "followers_url": "https://api.github.com/users/AlexAndorra/followers", "following_url": "https://api.github.com/users/AlexAndorra/following{/other_user}", "gists_url": "https://api.github.com/users/AlexAndorra/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexAndorra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexAndorra/subscriptions", "organizations_url": "https://api.github.com/users/AlexAndorra/orgs", "repos_url": "https://api.github.com/users/AlexAndorra/repos", "events_url": "https://api.github.com/users/AlexAndorra/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexAndorra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/request%20review/discussion", "name": "request review/discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-13T09:10:36Z", "updated_at": "2020-05-13T16:50:14Z", "closed_at": "2020-05-13T16:50:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi everyone!\r\nAs discussed with @eigenfoo, here is an issue to discuss whether it would be appropriate to use [Poetry](https://python-poetry.org/) for dependency management and packaging.\r\n\r\nThis would avoid having two requirements files and automate requirements' versions management. I use it in other projects and I find it better than traditional tools like pip and conda. Happy to exchange about it and possibly implement it!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3764", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3764/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3764/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3764/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3764", "id": 546548965, "node_id": "MDU6SXNzdWU1NDY1NDg5NjU=", "number": 3764, "title": " sample_prior_predictive fails with Gamma. ValueError: Domain error in arguments.", "user": {"login": "jonsedar", "id": 708325, "node_id": "MDQ6VXNlcjcwODMyNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/708325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonsedar", "html_url": "https://github.com/jonsedar", "followers_url": "https://api.github.com/users/jonsedar/followers", "following_url": "https://api.github.com/users/jonsedar/following{/other_user}", "gists_url": "https://api.github.com/users/jonsedar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonsedar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonsedar/subscriptions", "organizations_url": "https://api.github.com/users/jonsedar/orgs", "repos_url": "https://api.github.com/users/jonsedar/repos", "events_url": "https://api.github.com/users/jonsedar/events{/privacy}", "received_events_url": "https://api.github.com/users/jonsedar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-07T22:48:04Z", "updated_at": "2020-01-07T23:21:42Z", "closed_at": "2020-01-07T23:21:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi gang, \r\n\r\nI get an error trying to `pm.sample_prior_predictive` for a `pm.Gamma` that is a dependent observed RV: it seems to be shape related. \r\n\r\nNote that `pm.sample_prior_predictive` works correctly for a \"non-dependent\" prior `pm.Gamma`, and it works for some other dependent observed RVs e.g. a `pm.Normal`\r\n\r\nI've jotted a min reproducible example, with package and OS info in this gist: https://gist.github.com/jonsedar/eb886fa8a69e469e6a1711e6be002003\r\n\r\nI think I've been careful with the shapes... Do you have any ideas? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3761", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3761/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3761/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3761/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3761", "id": 545592680, "node_id": "MDU6SXNzdWU1NDU1OTI2ODA=", "number": 3761, "title": "small discrepancy between `pm.quantiles` and `np.quantile` when chains are large and numerous", "user": {"login": "bersavosh", "id": 5542442, "node_id": "MDQ6VXNlcjU1NDI0NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5542442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bersavosh", "html_url": "https://github.com/bersavosh", "followers_url": "https://api.github.com/users/bersavosh/followers", "following_url": "https://api.github.com/users/bersavosh/following{/other_user}", "gists_url": "https://api.github.com/users/bersavosh/gists{/gist_id}", "starred_url": "https://api.github.com/users/bersavosh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bersavosh/subscriptions", "organizations_url": "https://api.github.com/users/bersavosh/orgs", "repos_url": "https://api.github.com/users/bersavosh/repos", "events_url": "https://api.github.com/users/bersavosh/events{/privacy}", "received_events_url": "https://api.github.com/users/bersavosh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-06T07:53:52Z", "updated_at": "2020-01-08T12:15:55Z", "closed_at": "2020-01-08T12:15:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed a small discrepancy between `pm.quantiles` and `np.quantile` when chains are large and numerous. I presume this stems from something like a round-off issue and it is not intrinsically significant. However, I thought to bring it up as it can potentially impact when dealing with parameters which their actual value and sampling interval are on different scales.\r\n\r\nExample:\r\n```python\r\n\r\nimport sys\r\nimport numpy as np\r\nimport pymc3 as pm\r\n\r\n# Package versions:\r\nprint('Running on:')\r\nprint(f'\\tPython:\\t\\t{sys.version[:5]}')\r\nprint('\\tNumpy\\t\\t{}'.format(np.__version__))\r\nprint('\\tPyMC3\\t\\t{}'.format(pm.__version__))\r\n\r\nwith pm.Model() as model:\r\n    x = pm.Normal('x',mu=2,sd=1)\r\n    sample = pm.sample(10000,tune=1000,chains=12)\r\n\r\nnp_q = np.quantile(sample.get_values('x'),0.5)\r\npm_q = pm.quantiles(sample.get_values('x'), [50])[50]\r\nprint(f'Numpy: {np_q}, PyMC: {pm_q}, Difference = {((np_q-pm_q)/np_q)*100} %')\r\n```\r\n\r\nOutput:\r\n```\r\nRunning on:\r\n\tPython:\t\t3.6.9\r\n\tNumpy\t\t1.17.4\r\n\tPyMC3\t\t3.6\r\n\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using jitter+adapt_diag...\r\nMultiprocess sampling (12 chains in 4 jobs)\r\nNUTS: [x]\r\nSampling 12 chains: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 132000/132000 [00:11<00:00, 11820.76draws/s]\r\nThe acceptance probability does not match the target. It is 0.8812625683723161, but should be close to 0.8. Try to increase the number of tuning steps.\r\n\r\nNumpy: 1.9941481106459507, PyMC: 1.9941525904109327, Difference = -0.0002246455495539025 %\r\n\r\n```\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3757", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3757/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3757/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3757/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3757", "id": 544448743, "node_id": "MDU6SXNzdWU1NDQ0NDg3NDM=", "number": 3757, "title": "Switching between draws/s and s/draws", "user": {"login": "jtrakk", "id": 43392409, "node_id": "MDQ6VXNlcjQzMzkyNDA5", "avatar_url": "https://avatars1.githubusercontent.com/u/43392409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtrakk", "html_url": "https://github.com/jtrakk", "followers_url": "https://api.github.com/users/jtrakk/followers", "following_url": "https://api.github.com/users/jtrakk/following{/other_user}", "gists_url": "https://api.github.com/users/jtrakk/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtrakk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtrakk/subscriptions", "organizations_url": "https://api.github.com/users/jtrakk/orgs", "repos_url": "https://api.github.com/users/jtrakk/repos", "events_url": "https://api.github.com/users/jtrakk/events{/privacy}", "received_events_url": "https://api.github.com/users/jtrakk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-02T05:12:13Z", "updated_at": "2020-01-02T15:07:26Z", "closed_at": "2020-01-02T14:22:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n## Description of your problem\r\n\r\nSometimes the sample rate is shown in units of `draws/s` and sometimes it's in `s/draws`. For example, [this notebook](https://github.com/pymc-devs/pymc3/blob/55ccacf2105f1c37fc49999b5417ab1086c0243d/docs/source/notebooks/GLM-logistic.ipynb) from the docs has both \r\n\r\n`\r\nSampling 2 chains: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 4000/4000 [56:48<00:00,  1.12s/draws]  \r\n`\r\nand \r\n`\r\nSampling 2 chains: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 4000/4000 [16:13<00:00,  3.05draws/s] \r\n`\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n\r\nIt would be easier to understand the output if it maintained a consistent unit rather than switching back and forth depending on the value. \r\n\r\nWould it make sense to consistently report `draws/s`?\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.7\r\n* Theano Version:\r\n* Python Version: 3.7\r\n* Operating system:\r\n* How did you install PyMC3: (conda/pip) conda\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3751", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3751/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3751/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3751/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3751", "id": 543795602, "node_id": "MDU6SXNzdWU1NDM3OTU2MDI=", "number": 3751, "title": "TypeError: expected type_num 12 (NPY_FLOAT64) got 11", "user": {"login": "mdekauwe", "id": 278045, "node_id": "MDQ6VXNlcjI3ODA0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/278045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdekauwe", "html_url": "https://github.com/mdekauwe", "followers_url": "https://api.github.com/users/mdekauwe/followers", "following_url": "https://api.github.com/users/mdekauwe/following{/other_user}", "gists_url": "https://api.github.com/users/mdekauwe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdekauwe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdekauwe/subscriptions", "organizations_url": "https://api.github.com/users/mdekauwe/orgs", "repos_url": "https://api.github.com/users/mdekauwe/repos", "events_url": "https://api.github.com/users/mdekauwe/events{/privacy}", "received_events_url": "https://api.github.com/users/mdekauwe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-30T08:35:16Z", "updated_at": "2019-12-30T22:38:12Z", "closed_at": "2019-12-30T22:38:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I attempt to apply pym3 to fit two parameters in my own model I run into the following error with expected types:\r\n\r\n```python\r\nTypeError: expected type_num 12 (NPY_FLOAT64) got 11\r\n```\r\nIt seems a bit like this issue, but this was quite old and was closed.\r\n\r\nhttps://github.com/pymc-devs/pymc3/issues/994\r\n\r\nI don't have an easily reproducible example because it relies on being able to run my model and all the relevant driving files. I'm happy to share these files but this wouldn't be trivial.\r\n\r\nMy code is: https://github.com/mdekauwe/CABLE_scripts/blob/master/run_pymc_wrapper.py\r\n\r\nThe full traceback:\r\n\r\n```python\r\nSampling chain 0, 0 divergences:   0%|                                                                                                                         | 0/510 [00:47<?, ?it/s]\r\nTraceback (most recent call last):\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/compile/function_module.py\", line 903, in __call__\r\n    self.fn() if output_subset is None else\\\r\nTypeError: expected type_num 12 (NPY_FLOAT64) got 11\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"./run_pymc_wrapper.py\", line 148, in <module>\r\n    trace = pm.sample(10, chains=1, step=pm.Slice())\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/sampling.py\", line 489, in sample\r\n    trace = _sample_many(**sample_args)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/sampling.py\", line 539, in _sample_many\r\n    **kwargs\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/sampling.py\", line 605, in _sample\r\n    for it, (strace, diverging) in enumerate(sampling):\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tqdm/std.py\", line 1104, in __iter__\r\n    for obj in iterable:\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/sampling.py\", line 707, in _iter_sample\r\n    point = step.step(point)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/step_methods/compound.py\", line 41, in step\r\n    point = method.step(point)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/step_methods/arraystep.py\", line 142, in step\r\n    apoint = self.astep(bij.map(point), *inputs)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/step_methods/slicer.py\", line 56, in astep\r\n    y = logp(q) - nr.standard_exponential()\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/blocking.py\", line 257, in __call__\r\n    return self.fa(self.fb(x))\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/model.py\", line 1269, in __call__\r\n    return self.f(**state)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/compile/function_module.py\", line 917, in __call__\r\n    storage_map=getattr(self.fn, 'storage_map', None))\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/gof/link.py\", line 325, in raise_with_op\r\n    reraise(exc_type, exc_value, exc_trace)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/six.py\", line 695, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/compile/function_module.py\", line 903, in __call__\r\n    self.fn() if output_subset is None else\\\r\nTypeError: expected type_num 12 (NPY_FLOAT64) got 11\r\nApply node that caused the error: Elemwise{Composite{Switch(i0, (i1 * ((-(i2 * sqr((i3 - i4)))) + i5)), i6)}}[(0, 4)](Elemwise{Composite{Cast{int8}(GT(i0, i1))}}.0, TensorConstant{(1,) of 0.5}, Elemwise{Composite{inv(sqr(i0))}}[(0, 0)].0, TensorConstant{[114.17002...58988953]}, FromFunctionOp{run_and_unpack_cable}.0, Elemwise{Composite{log((i0 * i1))}}.0, TensorConstant{(1,) of -inf})\r\nToposort index: 11\r\nInputs types: [TensorType(int8, (True,)), TensorType(float64, (True,)), TensorType(float64, (True,)), TensorType(float64, vector), TensorType(float64, vector), TensorType(float64, (True,)), TensorType(float32, (True,))]\r\nInputs shapes: [(1,), (1,), (1,), (1461,), (1461,), (1,), (1,)]\r\nInputs strides: [(1,), (8,), (8,), (8,), (4,), (8,), (4,)]\r\nInputs values: [array([1], dtype=int8), array([0.5]), array([0.01]), 'not shown', 'not shown', array([-6.44304725]), array([-inf], dtype=float32)]\r\nOutputs clients: [[Sum{acc_dtype=float64}(Elemwise{Composite{Switch(i0, (i1 * ((-(i2 * sqr((i3 - i4)))) + i5)), i6)}}[(0, 4)].0)]]\r\n\r\nHINT: Re-running with most Theano optimization disabled could give you a back-trace of when this node was created. This can be done with by setting the Theano flag 'optimizer=fast_compile'. If that does not work, Theano optimizations can be disabled with 'optimizer=None'.\r\nHINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.\r\nHAL 9000 $ cp /Users/mdekauwe/research/CABLE_runs/CABLE_scripts/run_pymc_wrapper.py .\r\nHAL 9000 $ ./run_pymc_wrapper.py\r\n\r\n\r\n===========\r\n[ 4. 65.]\r\n===========\r\n\r\n\r\nTumbaFluxnet\r\n THE NAME LIST IS cable_TumbaFluxnet.nml\r\n Use spatially-specific soil properties;          360         150\r\n           0\r\n           0\r\n When choosing spatially-specific soil properties,\r\n snow-free albedo is also overwritten by this data set.\r\n Total number of patches (countPatch):            1\r\n iveg           1           2\r\n patchfrac           1   1.00000000\r\n  Could neither find restart file ./\r\n  nor ./\r\n  Pre-loaded default initialisations are used.\r\n  Loaded some parameters from met input file: TumbaFluxnet_tmp.nc the rest are default values - check log file\r\n\r\n time-space-averaged energy & water balances\r\n Ebal_tot[Wm-2], Wbal_tot[mm per timestep]   5.28684723E-06  -1.07890363E-08\r\n time-space-averaged latent heat and net photosynthesis\r\n sum_fe[Wm-2], sum_fpn[umol/m2/s]   64.714239402571209       -6.3941715931624318E-005\r\n\r\n NB. Offline-serial runs spinup cycles:           1\r\n Internal check shows in this version new_sumbal != trunk sumbal\r\n Writing new_sumbal to the file:new_sumbal\r\n setting SPINON -> FALSE           0           1\r\n Finished.    30.8996754      seconds needed for year\r\n Finished.    30.9007416      seconds needed for        70128  hours\r\nOnly 10 samples in chain.\r\nSequential sampling (1 chains in 1 job)\r\nCompoundStep\r\n>Metropolis: [sigma]\r\n>Metropolis: [vcmax]\r\n>Metropolis: [g1]\r\nSampling chain 0, 0 divergences:   0%|                                                                                                                         | 0/510 [00:00<?, ?it/s]\r\n\r\n===========\r\n[ 4. 65.]\r\n===========\r\n\r\n\r\nTumbaFluxnet\r\n THE NAME LIST IS cable_TumbaFluxnet.nml\r\n Use spatially-specific soil properties;          360         150\r\n           0\r\n           0\r\n When choosing spatially-specific soil properties,\r\n snow-free albedo is also overwritten by this data set.\r\n Total number of patches (countPatch):            1\r\n iveg           1           2\r\n patchfrac           1   1.00000000\r\n  Could neither find restart file ./\r\n  nor ./\r\n  Pre-loaded default initialisations are used.\r\n  Loaded some parameters from met input file: TumbaFluxnet_tmp.nc the rest are default values - check log file\r\n\r\n time-space-averaged energy & water balances\r\n Ebal_tot[Wm-2], Wbal_tot[mm per timestep]   5.28684723E-06  -1.07890363E-08\r\n time-space-averaged latent heat and net photosynthesis\r\n sum_fe[Wm-2], sum_fpn[umol/m2/s]   64.714239402571209       -6.3941715931624318E-005\r\n\r\n NB. Offline-serial runs spinup cycles:           1\r\n Internal check shows in this version new_sumbal != trunk sumbal\r\n Writing new_sumbal to the file:new_sumbal\r\n setting SPINON -> FALSE           0           1\r\n Finished.    31.5556889      seconds needed for year\r\n Finished.    31.5565720      seconds needed for        70128  hours\r\nSampling chain 0, 0 divergences:   0%|                                                                                                                         | 0/510 [00:53<?, ?it/s]\r\nTraceback (most recent call last):\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/compile/function_module.py\", line 903, in __call__\r\n    self.fn() if output_subset is None else\\\r\nTypeError: expected type_num 12 (NPY_FLOAT64) got 11\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"./run_pymc_wrapper.py\", line 145, in <module>\r\n    trace = pm.sample(10, chains=1, step=pm.Metropolis())\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/sampling.py\", line 489, in sample\r\n    trace = _sample_many(**sample_args)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/sampling.py\", line 539, in _sample_many\r\n    **kwargs\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/sampling.py\", line 605, in _sample\r\n    for it, (strace, diverging) in enumerate(sampling):\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/tqdm/std.py\", line 1104, in __iter__\r\n    for obj in iterable:\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/sampling.py\", line 700, in _iter_sample\r\n    point, stats = step.step(point)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/step_methods/compound.py\", line 27, in step\r\n    point, state = method.step(point)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/step_methods/arraystep.py\", line 175, in step\r\n    apoint, stats = self.astep(self.bij.map(point))\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pymc3/step_methods/metropolis.py\", line 162, in astep\r\n    accept = self.delta_logp(q, q0)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/compile/function_module.py\", line 917, in __call__\r\n    storage_map=getattr(self.fn, 'storage_map', None))\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/gof/link.py\", line 325, in raise_with_op\r\n    reraise(exc_type, exc_value, exc_trace)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/six.py\", line 695, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/theano/compile/function_module.py\", line 903, in __call__\r\n    self.fn() if output_subset is None else\\\r\nTypeError: expected type_num 12 (NPY_FLOAT64) got 11\r\nApply node that caused the error: Elemwise{Composite{sqr((i0 - i1))}}[(0, 1)](TensorConstant{[114.17002...58988953]}, FromFunctionOp{run_and_unpack_cable}.0)\r\nToposort index: 11\r\nInputs types: [TensorType(float64, vector), TensorType(float64, vector)]\r\nInputs shapes: [(1461,), (1461,)]\r\nInputs strides: [(8,), (4,)]\r\nInputs values: ['not shown', 'not shown']\r\nOutputs clients: [[Elemwise{Composite{Switch(i0, (i1 * ((-(i2 * i3)) + i4)), i5)}}(Elemwise{Composite{Cast{int8}(GT(i0, i1))}}.0, TensorConstant{(1,) of 0.5}, Elemwise{Composite{inv(sqr(i0))}}[(0, 0)].0, Elemwise{Composite{sqr((i0 - i1))}}[(0, 1)].0, Elemwise{Composite{log((i0 * i1))}}.0, TensorConstant{(1,) of -inf}), Elemwise{Composite{Switch(i0, (i1 * ((-(i2 * i3)) + i4)), i5)}}[(0, 3)](Elemwise{Composite{Cast{int8}(GT(i0, i1))}}.0, TensorConstant{(1,) of 0.5}, Elemwise{Composite{inv(sqr(i0))}}[(0, 0)].0, Elemwise{Composite{sqr((i0 - i1))}}[(0, 1)].0, Elemwise{Composite{log((i0 * i1))}}.0, TensorConstant{(1,) of -inf})]]\r\n\r\nHINT: Re-running with most Theano optimization disabled could give you a back-trace of when this node was created. This can be done with by setting the Theano flag 'optimizer=fast_compile'. If that does not work, Theano optimizations can be disabled with 'optimizer=None'.\r\nHINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.\r\n```\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7\r\n* Operating system: Mac OSX\r\n* How did you install PyMC3: macports\r\n\r\nThanks,\r\n\r\nMartin", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3749", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3749/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3749/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3749/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3749", "id": 543020431, "node_id": "MDU6SXNzdWU1NDMwMjA0MzE=", "number": 3749, "title": "Fatsprogress import", "user": {"login": "ahartikainen", "id": 13161958, "node_id": "MDQ6VXNlcjEzMTYxOTU4", "avatar_url": "https://avatars1.githubusercontent.com/u/13161958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahartikainen", "html_url": "https://github.com/ahartikainen", "followers_url": "https://api.github.com/users/ahartikainen/followers", "following_url": "https://api.github.com/users/ahartikainen/following{/other_user}", "gists_url": "https://api.github.com/users/ahartikainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahartikainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahartikainen/subscriptions", "organizations_url": "https://api.github.com/users/ahartikainen/orgs", "repos_url": "https://api.github.com/users/ahartikainen/repos", "events_url": "https://api.github.com/users/ahartikainen/events{/privacy}", "received_events_url": "https://api.github.com/users/ahartikainen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-27T23:36:37Z", "updated_at": "2019-12-28T11:04:10Z", "closed_at": "2019-12-28T11:04:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Description of your problem\r\n\r\nfastprogress 0.2.0 has new location for `progress_bar`\r\n\r\n**Please provide a minimal, self-contained, and reproducible example.**\r\n\r\n`from fastprogress import progress_bar` --> `from fastprogress.fastprogress import progress_bar`\r\n\r\n**Please provide the full traceback.**\r\n```\r\nfrom fastprogress import progress_bar\r\nImportError: cannot import name 'progress_bar'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3748", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3748/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3748/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3748/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3748", "id": 542123708, "node_id": "MDU6SXNzdWU1NDIxMjM3MDg=", "number": 3748, "title": "`test_quadpotential.py` Should be added to test suite", "user": {"login": "eigenfoo", "id": 19851673, "node_id": "MDQ6VXNlcjE5ODUxNjcz", "avatar_url": "https://avatars1.githubusercontent.com/u/19851673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eigenfoo", "html_url": "https://github.com/eigenfoo", "followers_url": "https://api.github.com/users/eigenfoo/followers", "following_url": "https://api.github.com/users/eigenfoo/following{/other_user}", "gists_url": "https://api.github.com/users/eigenfoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/eigenfoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eigenfoo/subscriptions", "organizations_url": "https://api.github.com/users/eigenfoo/orgs", "repos_url": "https://api.github.com/users/eigenfoo/repos", "events_url": "https://api.github.com/users/eigenfoo/events{/privacy}", "received_events_url": "https://api.github.com/users/eigenfoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}, {"id": 803550974, "node_id": "MDU6TGFiZWw4MDM1NTA5NzQ=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/tests", "name": "tests", "color": "5319e7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-24T13:05:47Z", "updated_at": "2020-01-20T14:24:55Z", "closed_at": "2020-01-20T14:24:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Discovered this while isolating NUTS into its own library.\r\n\r\nIn our [`.travis.yml`](https://github.com/pymc-devs/pymc3/blob/master/.travis.yml), it appears that we don't run the tests in [`test_quadpotential.py`](https://github.com/pymc-devs/pymc3/blob/master/pymc3/tests/test_quadpotential.py). We should add this to the test runs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3747", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3747/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3747/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3747/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3747", "id": 541242276, "node_id": "MDU6SXNzdWU1NDEyNDIyNzY=", "number": 3747, "title": "Determining if a model has changed (caching)", "user": {"login": "rgerkin", "id": 549787, "node_id": "MDQ6VXNlcjU0OTc4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/549787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgerkin", "html_url": "https://github.com/rgerkin", "followers_url": "https://api.github.com/users/rgerkin/followers", "following_url": "https://api.github.com/users/rgerkin/following{/other_user}", "gists_url": "https://api.github.com/users/rgerkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgerkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgerkin/subscriptions", "organizations_url": "https://api.github.com/users/rgerkin/orgs", "repos_url": "https://api.github.com/users/rgerkin/repos", "events_url": "https://api.github.com/users/rgerkin/events{/privacy}", "received_events_url": "https://api.github.com/users/rgerkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-20T23:21:44Z", "updated_at": "2019-12-20T23:57:11Z", "closed_at": "2019-12-20T23:57:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "How might one determine if a new model context is identical to an old one?\r\n\r\nFor example:\r\n```python\r\ny = np.random.randn(10)\r\n\r\nwith pm.Model() as model_1:\r\n    noise = pm.Gamma('noise', alpha=2, beta=1)\r\n    y_observed = pm.Normal('y_observed', mu=0, sigma=noise, observed=y)\r\n    \r\nwith pm.Model() as model_2:\r\n    noise = pm.Gamma('noise', alpha=2, beta=1)\r\n    y_observed = pm.Normal('y_observed', mu=0, sigma=noise, observed=y)\r\n```\r\n\r\n`model_1` and `model_2` are identical.  If I've sampled from one I don't need to waste time sampling from the other.  But I'm not sure how to test for their identity.  `model_1 == model_2` and `hash(model_1) == hash(model_2)` are both `False`.  Maybe this can be done by recursively checking through each element of `__getstate()__` or `__dict__`, but before I try that I'd be interested to know if there is a neater solution.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3745", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3745/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3745/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3745/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3745", "id": 541051997, "node_id": "MDU6SXNzdWU1NDEwNTE5OTc=", "number": 3745, "title": "Sampling using GPU: [GLM: Hierarchical Linear Regression]", "user": {"login": "prgrmmraben", "id": 8780273, "node_id": "MDQ6VXNlcjg3ODAyNzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8780273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prgrmmraben", "html_url": "https://github.com/prgrmmraben", "followers_url": "https://api.github.com/users/prgrmmraben/followers", "following_url": "https://api.github.com/users/prgrmmraben/following{/other_user}", "gists_url": "https://api.github.com/users/prgrmmraben/gists{/gist_id}", "starred_url": "https://api.github.com/users/prgrmmraben/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prgrmmraben/subscriptions", "organizations_url": "https://api.github.com/users/prgrmmraben/orgs", "repos_url": "https://api.github.com/users/prgrmmraben/repos", "events_url": "https://api.github.com/users/prgrmmraben/events{/privacy}", "received_events_url": "https://api.github.com/users/prgrmmraben/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-20T15:29:54Z", "updated_at": "2019-12-21T00:00:44Z", "closed_at": "2019-12-21T00:00:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to apply Hierarchical Linear Regression on my case following https://docs.pymc.io/notebooks/multilevel_modeling.html\r\n\r\nI do not know where could GPU intervene, probably sampling ? Any way, running on my data with 2,2 million entry and it is taking 2 hours for only 20%\r\n\r\nAuto-assigning NUTS sampler...\r\nInitializing NUTS using jitter+adapt_diag...\r\nMultiprocess sampling (8 chains in 8 jobs)\r\nNUTS: [sd, XXXXx, YYYYYY, WWWWW, HHHHHH, Intercept, grp_sd, grp_mean]\r\nSampling 8 chains, 175 divergences:  34%|\u2588\u2588\u2588\u258d      | 4067/12000 [39:10<1:54:22,  1.16draws/s]\r\n\r\nps: I have Nvidia Cuda installed and working for Tensorflow, Keras ...\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3742", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3742/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3742/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3742/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3742", "id": 539833539, "node_id": "MDU6SXNzdWU1Mzk4MzM1Mzk=", "number": 3742, "title": "Bayes factor example does not execute", "user": {"login": "elephantmipt", "id": 37884009, "node_id": "MDQ6VXNlcjM3ODg0MDA5", "avatar_url": "https://avatars0.githubusercontent.com/u/37884009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elephantmipt", "html_url": "https://github.com/elephantmipt", "followers_url": "https://api.github.com/users/elephantmipt/followers", "following_url": "https://api.github.com/users/elephantmipt/following{/other_user}", "gists_url": "https://api.github.com/users/elephantmipt/gists{/gist_id}", "starred_url": "https://api.github.com/users/elephantmipt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elephantmipt/subscriptions", "organizations_url": "https://api.github.com/users/elephantmipt/orgs", "repos_url": "https://api.github.com/users/elephantmipt/repos", "events_url": "https://api.github.com/users/elephantmipt/events{/privacy}", "received_events_url": "https://api.github.com/users/elephantmipt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-18T18:01:43Z", "updated_at": "2019-12-18T18:20:28Z", "closed_at": "2019-12-18T18:20:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run example `Bayes_factor.ipynb` from repository. But in the cell\r\n```\r\nBF_smc = np.exp(models[1].marginal_log_likelihood - models[0].marginal_log_likelihood)\r\nprint(round(BF_smc))\r\n```\r\nI get an error:\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-14-b837350ebbf3> in <module>\r\n----> 1 BF_smc = np.exp(models[1].marginal_log_likelihood - models[0].marginal_log_likelihood)\r\n      2 print(round(BF_smc))\r\n\r\nAttributeError: 'Model' object has no attribute 'marginal_log_likelihood'\r\n```\r\n\r\nWell, I saw similar result in issue #3282  but it was with PyMC3 version 3.6.  Am I missing something or there is still no attribute with marginal likelihood?\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7.3\r\n* Operating system: Mac Os 10.15\r\n* How did you install PyMC3: pip\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3739", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3739/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3739/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3739/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3739", "id": 538917898, "node_id": "MDU6SXNzdWU1Mzg5MTc4OTg=", "number": 3739, "title": "Does this package do importance sampling?", "user": {"login": "dezhanglee", "id": 31544865, "node_id": "MDQ6VXNlcjMxNTQ0ODY1", "avatar_url": "https://avatars0.githubusercontent.com/u/31544865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dezhanglee", "html_url": "https://github.com/dezhanglee", "followers_url": "https://api.github.com/users/dezhanglee/followers", "following_url": "https://api.github.com/users/dezhanglee/following{/other_user}", "gists_url": "https://api.github.com/users/dezhanglee/gists{/gist_id}", "starred_url": "https://api.github.com/users/dezhanglee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dezhanglee/subscriptions", "organizations_url": "https://api.github.com/users/dezhanglee/orgs", "repos_url": "https://api.github.com/users/dezhanglee/repos", "events_url": "https://api.github.com/users/dezhanglee/events{/privacy}", "received_events_url": "https://api.github.com/users/dezhanglee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-17T08:39:51Z", "updated_at": "2019-12-17T08:42:16Z", "closed_at": "2019-12-17T08:42:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3738", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3738/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3738/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3738/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3738", "id": 538773300, "node_id": "MDU6SXNzdWU1Mzg3NzMzMDA=", "number": 3738, "title": "Source files don't contain Apache license", "user": {"login": "eigenfoo", "id": 19851673, "node_id": "MDQ6VXNlcjE5ODUxNjcz", "avatar_url": "https://avatars1.githubusercontent.com/u/19851673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eigenfoo", "html_url": "https://github.com/eigenfoo", "followers_url": "https://api.github.com/users/eigenfoo/followers", "following_url": "https://api.github.com/users/eigenfoo/following{/other_user}", "gists_url": "https://api.github.com/users/eigenfoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/eigenfoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eigenfoo/subscriptions", "organizations_url": "https://api.github.com/users/eigenfoo/orgs", "repos_url": "https://api.github.com/users/eigenfoo/repos", "events_url": "https://api.github.com/users/eigenfoo/events{/privacy}", "received_events_url": "https://api.github.com/users/eigenfoo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 538302060, "node_id": "MDU6TGFiZWw1MzgzMDIwNjA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/beginner%20friendly", "name": "beginner friendly", "color": "bfd4f2", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-17T01:07:41Z", "updated_at": "2020-01-23T11:26:00Z", "closed_at": "2020-01-23T11:26:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Kind of embarrassingly late to realize this, but PyMC3 doesn't properly distribute the Apache license [as described in the license file](https://github.com/pymc-devs/pymc3/blob/master/LICENSE#L189-L212). All we need to do is to add the frontmatter from the license with the current year at `The PyMC Developers` as the copyright holder.\r\n\r\nI might have some time soon to file a PR for this, but if someone else comes along feel free to take this \ud83d\ude04 \r\n\r\n```\r\n      To apply the Apache License to your work, attach the following\r\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\r\n      replaced with your own identifying information. (Don't include\r\n      the brackets!)  The text should be enclosed in the appropriate\r\n      comment syntax for the file format. We also recommend that a\r\n      file or class name and description of purpose be included on the\r\n      same \"printed page\" as the copyright notice for easier\r\n      identification within third-party archives.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3735", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3735/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3735/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3735/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3735", "id": 538120153, "node_id": "MDU6SXNzdWU1MzgxMjAxNTM=", "number": 3735, "title": "Travis is unhappy due to coverage", "user": {"login": "twiecki", "id": 674200, "node_id": "MDQ6VXNlcjY3NDIwMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/674200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twiecki", "html_url": "https://github.com/twiecki", "followers_url": "https://api.github.com/users/twiecki/followers", "following_url": "https://api.github.com/users/twiecki/following{/other_user}", "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions", "organizations_url": "https://api.github.com/users/twiecki/orgs", "repos_url": "https://api.github.com/users/twiecki/repos", "events_url": "https://api.github.com/users/twiecki/events{/privacy}", "received_events_url": "https://api.github.com/users/twiecki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-15T23:04:03Z", "updated_at": "2019-12-16T07:57:22Z", "closed_at": "2019-12-16T07:57:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/coverage/sqldata.py\", line 1025, in execute\r\nINTERNALERROR>     return self.con.execute(sql, parameters)\r\nINTERNALERROR> sqlite3.IntegrityError: UNIQUE constraint failed: meta.key\r\nINTERNALERROR> \r\nINTERNALERROR> During handling of the above exception, another exception occurred:\r\nINTERNALERROR> \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/_pytest/main.py\", line 196, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/_pytest/main.py\", line 246, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/pluggy/callers.py\", line 203, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/pytest_cov/plugin.py\", line 254, in pytest_runtestloop\r\nINTERNALERROR>     self.cov_controller.finish()\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/pytest_cov/engine.py\", line 197, in finish\r\nINTERNALERROR>     self.cov.stop()\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/coverage/control.py\", line 613, in save\r\nINTERNALERROR>     data = self.get_data()\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/coverage/control.py\", line 667, in get_data\r\nINTERNALERROR>     if self._collector and self._collector.flush_data():\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/coverage/collector.py\", line 429, in flush_data\r\nINTERNALERROR>     self.covdata.add_lines(self.mapped_file_dict(self.data))\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/coverage/sqldata.py\", line 436, in add_lines\r\nINTERNALERROR>     self._choose_lines_or_arcs(lines=True)\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/coverage/sqldata.py\", line 496, in _choose_lines_or_arcs\r\nINTERNALERROR>     ('has_arcs', str(int(arcs)))\r\nINTERNALERROR>   File \"/home/travis/miniconda3/envs/testenv/lib/python3.6/site-packages/coverage/sqldata.py\", line 1027, in execute\r\nINTERNALERROR>     raise CoverageException(\"Couldn't use data file {!r}: {}\".format(self.filename, exc))\r\nINTERNALERROR> coverage.misc.CoverageException: Couldn't use data file '/home/travis/build/pymc-devs/pymc3/.coverage': UNIQUE constraint failed: meta.key\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3733", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3733/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3733/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3733/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3733", "id": 538097589, "node_id": "MDU6SXNzdWU1MzgwOTc1ODk=", "number": 3733, "title": "Metropolis chain tuning is differs between single- and multiprocessing", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/defects", "name": "defects", "color": "e10c02", "default": false, "description": null}, {"id": 600272030, "node_id": "MDU6TGFiZWw2MDAyNzIwMzA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/metropolis", "name": "metropolis", "color": "e99695", "default": false, "description": ""}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/request%20review/discussion", "name": "request review/discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-15T19:56:18Z", "updated_at": "2020-02-06T12:54:43Z", "closed_at": "2020-02-06T12:54:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(split from #3731)\r\n\r\n### Observations\r\nWhen `Metropolis` is used with `cores > 1 and chains > 1`, all chains are independently tuned.\r\n\r\nWith `cores=1` however, `Metropolis` initializes the 2nd chain with the `scaling` from the first. It is still tuned, but in the end it's a different between sequential single-process and parallelized multiprocess sampling.\r\n\r\n### Cause\r\nFor `Metropolis`, the stepper is re-used and re-tuned, but no reset happens.\r\n\r\nhttps://github.com/pymc-devs/pymc3/blob/dc9fd7251b34e9851308e91d622513ebe648f49e/pymc3/sampling.py#L711-L716\r\n\r\n### Possible Solutions\r\n+ re-setting the tuning parameter before continuing with the next chain\r\n+ ...other ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3731", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3731/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3731/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3731/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3731", "id": 538037400, "node_id": "MDU6SXNzdWU1MzgwMzc0MDA=", "number": 3731, "title": "DEMetropolis chains share tuned hyperparameter (with cores=1)", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/defects", "name": "defects", "color": "e10c02", "default": false, "description": null}, {"id": 600272030, "node_id": "MDU6TGFiZWw2MDAyNzIwMzA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/metropolis", "name": "metropolis", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-15T11:23:51Z", "updated_at": "2019-12-16T13:50:23Z", "closed_at": "2019-12-16T13:50:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "### Observations\r\nWhen `DEMetropolis` is used with `cores > 1 and chains > 1`, all chains are independently tuned.\r\n\r\nWith `cores=1` however, chains share the tuned `scaling` parameter and when it's updated during tuning, the adjustments by all chains are superimposed.\r\n\r\n### Cause\r\nFor `DEMetropolis`, the steppers are shallow-copied. This shallow-copy somehow keeps their tuned hyperparameter shared.\r\n\r\nhttps://github.com/pymc-devs/pymc3/blob/dc9fd7251b34e9851308e91d622513ebe648f49e/pymc3/sampling.py#L933-L939\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3729", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3729/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3729/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3729/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3729", "id": 537974361, "node_id": "MDU6SXNzdWU1Mzc5NzQzNjE=", "number": 3729, "title": "Remove `trajectory.py`?", "user": {"login": "eigenfoo", "id": 19851673, "node_id": "MDQ6VXNlcjE5ODUxNjcz", "avatar_url": "https://avatars1.githubusercontent.com/u/19851673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eigenfoo", "html_url": "https://github.com/eigenfoo", "followers_url": "https://api.github.com/users/eigenfoo/followers", "following_url": "https://api.github.com/users/eigenfoo/following{/other_user}", "gists_url": "https://api.github.com/users/eigenfoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/eigenfoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eigenfoo/subscriptions", "organizations_url": "https://api.github.com/users/eigenfoo/orgs", "repos_url": "https://api.github.com/users/eigenfoo/repos", "events_url": "https://api.github.com/users/eigenfoo/events{/privacy}", "received_events_url": "https://api.github.com/users/eigenfoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-14T22:36:58Z", "updated_at": "2019-12-17T00:42:56Z", "closed_at": "2019-12-17T00:42:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm beginning to work towards isolating the HMC/NUTS implementation into a separate library, and I've noticed that [`trajectory.py`](https://github.com/pymc-devs/pymc3/blob/master/pymc3/step_methods/hmc/trajectory.py) is not really used at all, nor are its functions imported by any other module.\r\n\r\nAccording to [the developer guide](https://github.com/pymc-devs/pymc3/blob/a460468468081db708ba10b928e6fcfa1789ef2c/docs/source/developer_guide.rst#dynamic-hmc), its an implementation of dynamic HMC purely in Theano, but isn't used. Should we remove it, or should we keep it for posterity? If so, I can submit a PR to document that in the code.\r\n\r\ncc @junpenglao ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3727", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3727/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3727/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3727/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3727", "id": 537714141, "node_id": "MDU6SXNzdWU1Mzc3MTQxNDE=", "number": 3727, "title": "Subclassing pm.Model doesn't work on PyMC3 3.8", "user": {"login": "fbartolic", "id": 18243408, "node_id": "MDQ6VXNlcjE4MjQzNDA4", "avatar_url": "https://avatars2.githubusercontent.com/u/18243408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fbartolic", "html_url": "https://github.com/fbartolic", "followers_url": "https://api.github.com/users/fbartolic/followers", "following_url": "https://api.github.com/users/fbartolic/following{/other_user}", "gists_url": "https://api.github.com/users/fbartolic/gists{/gist_id}", "starred_url": "https://api.github.com/users/fbartolic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fbartolic/subscriptions", "organizations_url": "https://api.github.com/users/fbartolic/orgs", "repos_url": "https://api.github.com/users/fbartolic/repos", "events_url": "https://api.github.com/users/fbartolic/events{/privacy}", "received_events_url": "https://api.github.com/users/fbartolic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76646, "node_id": "MDU6TGFiZWw3NjY0Ng==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/defects", "name": "defects", "color": "e10c02", "default": false, "description": null}, {"id": 818212053, "node_id": "MDU6TGFiZWw4MTgyMTIwNTM=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/request%20review/discussion", "name": "request review/discussion", "color": "dbef5b", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rpgoldman", "id": 3274, "node_id": "MDQ6VXNlcjMyNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpgoldman", "html_url": "https://github.com/rpgoldman", "followers_url": "https://api.github.com/users/rpgoldman/followers", "following_url": "https://api.github.com/users/rpgoldman/following{/other_user}", "gists_url": "https://api.github.com/users/rpgoldman/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpgoldman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpgoldman/subscriptions", "organizations_url": "https://api.github.com/users/rpgoldman/orgs", "repos_url": "https://api.github.com/users/rpgoldman/repos", "events_url": "https://api.github.com/users/rpgoldman/events{/privacy}", "received_events_url": "https://api.github.com/users/rpgoldman/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-12-13T18:54:02Z", "updated_at": "2020-04-22T14:28:17Z", "closed_at": "2020-04-22T14:28:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since I upgraded to  PyMC3 3.8 I'm getting the `AttributeError: module '__main__' has no attribute 'Model'` error when subclassing `pm.Model()`. \r\n\r\nHere's a minimal example which reproduces the issue:\r\n\r\n```python\r\nimport pymc3 as pm\r\n\r\n\r\nclass CustomModel(pm.Model):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.x = pm.Normal(\"x\", 0.0, 1.0)\r\n\r\n\r\nmodel = CustomModel()\r\n\r\n```\r\nError:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"test_bug.py\", line 10, in <module>\r\n    model = CustomModel()\r\n  File \"/Users/fb90/anaconda3/envs/pymc3/lib/python3.7/site-packages/pymc3/model.py\", line 274, in __call__\r\n    instance = cls.__new__(cls, *args, **kwargs)\r\n  File \"/Users/fb90/anaconda3/envs/pymc3/lib/python3.7/site-packages/pymc3/model.py\", line 739, in __new__\r\n    instance._parent = cls.get_context(error_if_none=False)\r\n  File \"/Users/fb90/anaconda3/envs/pymc3/lib/python3.7/site-packages/pymc3/model.py\", line 213, in get_context\r\n    candidate = cls.get_contexts()[idx] # type: Optional[T]\r\n  File \"/Users/fb90/anaconda3/envs/pymc3/lib/python3.7/site-packages/pymc3/model.py\", line 234, in get_contexts\r\n    context_class = cls.context_class\r\n  File \"/Users/fb90/anaconda3/envs/pymc3/lib/python3.7/site-packages/pymc3/model.py\", line 260, in context_class\r\n    cls._context_class = resolve_type(cls._context_class)\r\n  File \"/Users/fb90/anaconda3/envs/pymc3/lib/python3.7/site-packages/pymc3/model.py\", line 254, in resolve_type\r\n    c = getattr(modules[cls.__module__], c)\r\nAttributeError: module '__main__' has no attribute 'Model'\r\n```\r\n\r\n\r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.7\r\n* Operating system: MacOS\r\n* How did you install PyMC3: conda\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3726", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3726/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3726/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3726/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3726", "id": 537484989, "node_id": "MDU6SXNzdWU1Mzc0ODQ5ODk=", "number": 3726, "title": "Small typo in the Bayes factor notebook.", "user": {"login": "heytitle", "id": 1214890, "node_id": "MDQ6VXNlcjEyMTQ4OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1214890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heytitle", "html_url": "https://github.com/heytitle", "followers_url": "https://api.github.com/users/heytitle/followers", "following_url": "https://api.github.com/users/heytitle/following{/other_user}", "gists_url": "https://api.github.com/users/heytitle/gists{/gist_id}", "starred_url": "https://api.github.com/users/heytitle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heytitle/subscriptions", "organizations_url": "https://api.github.com/users/heytitle/orgs", "repos_url": "https://api.github.com/users/heytitle/repos", "events_url": "https://api.github.com/users/heytitle/events{/privacy}", "received_events_url": "https://api.github.com/users/heytitle/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-12-13T10:59:03Z", "updated_at": "2020-01-16T21:39:40Z", "closed_at": "2020-01-16T21:39:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI found a small typo in this notebook. I guess it should be `It's` or `It is`. \r\n\r\n<img width=\"302\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1214890/70795226-9ed53580-1d9f-11ea-833d-de8aabb35816.png\">\r\n\r\nhttps://docs.pymc.io/notebooks/Bayes_factor.html\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3720", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3720/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3720/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3720/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3720", "id": 536020931, "node_id": "MDU6SXNzdWU1MzYwMjA5MzE=", "number": 3720, "title": "DEMetropolis: tune lambda instead of epsilon", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 600272030, "node_id": "MDU6TGFiZWw2MDAyNzIwMzA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/metropolis", "name": "metropolis", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-10T22:05:08Z", "updated_at": "2019-12-21T14:00:06Z", "closed_at": "2019-12-21T14:00:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Our `DEMetropolis` tunes the scaling factor of the noise distribution:\r\nhttps://github.com/pymc-devs/pymc3/blob/1c30a6f487afaeef73464a98320e35961b11873f/pymc3/step_methods/metropolis.py#L572-L581\r\n\r\nMy feeling these days is that tuning the noise distribution is a bit pointless after the first few iterations & could obscure the warmup, or even lead to slingshots if it overshoots.\r\n\r\nInstead, we could tune `lambda` parameter. It's optimal value depends on the (dimensionality of the) target density ([ter Braak (2006)](https://doi.org/10.1007/s11222-006-8769-1)), so it should be a good candidate for tuning.\r\nThis approach is described in [Nelson _et al._ (2013)](https://arxiv.org/abs/1311.5229), section 4.1.2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3719", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3719/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3719/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3719/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3719", "id": 536011212, "node_id": "MDU6SXNzdWU1MzYwMTEyMTI=", "number": 3719, "title": "DEMetropolis: Warn on too small population", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 483431340, "node_id": "MDU6TGFiZWw0ODM0MzEzNDA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/WIP", "name": "WIP", "color": "d93f0b", "default": false, "description": null}, {"id": 76152, "node_id": "MDU6TGFiZWw3NjE1Mg==", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/enhancements", "name": "enhancements", "color": "02e10c", "default": false, "description": null}, {"id": 600272030, "node_id": "MDU6TGFiZWw2MDAyNzIwMzA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/metropolis", "name": "metropolis", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-12-10T21:43:07Z", "updated_at": "2019-12-11T22:01:51Z", "closed_at": "2019-12-11T22:01:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As explained by [ter Braak (2006)](https://doi.org/10.1007/s11222-006-8769-1), the number of chains should be larger than the number of dimensions:\r\n\r\n> What happens if N \u2264 d? Because N points lie in an N \u2212 1\r\ndimensional space, all proposals (2) will lie in this reduced\r\nspace when e = 0. Therefore convergence of DE-MC would\r\nrely on e, which would take a long time if its variance is small.\r\nTo stress that convergence does not depend on the unbounded\r\nsupport of e, we actually used e \u223c Uniform[\u2212b, b]<sup>d</sup> with\r\nb = 10<sup>\u22124</sup> in all computations (Fig. 2). In the next section\r\nthe effect of N on the efficiency of DE-MC is studied via\r\nsimulation for N > d.\r\n\r\nTherefore, we should warn the user about potentially inefficient sampling when `n_chains <= n_dims`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3718", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3718/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3718/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3718/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3718", "id": 536007161, "node_id": "MDU6SXNzdWU1MzYwMDcxNjE=", "number": 3718, "title": "DEMetropolis: Remove warning", "user": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 483431340, "node_id": "MDU6TGFiZWw0ODM0MzEzNDA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/WIP", "name": "WIP", "color": "d93f0b", "default": false, "description": null}, {"id": 600272030, "node_id": "MDU6TGFiZWw2MDAyNzIwMzA=", "url": "https://api.github.com/repos/pymc-devs/pymc3/labels/metropolis", "name": "metropolis", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "michaelosthege", "id": 5894642, "node_id": "MDQ6VXNlcjU4OTQ2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5894642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelosthege", "html_url": "https://github.com/michaelosthege", "followers_url": "https://api.github.com/users/michaelosthege/followers", "following_url": "https://api.github.com/users/michaelosthege/following{/other_user}", "gists_url": "https://api.github.com/users/michaelosthege/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelosthege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelosthege/subscriptions", "organizations_url": "https://api.github.com/users/michaelosthege/orgs", "repos_url": "https://api.github.com/users/michaelosthege/repos", "events_url": "https://api.github.com/users/michaelosthege/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelosthege/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-12-10T21:34:10Z", "updated_at": "2019-12-11T22:01:50Z", "closed_at": "2019-12-11T22:01:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There's still the warning about DEMetropolis being experimental. We have it for 2 years now and nothing serious has come up.\r\n\r\nThe usual concerns with Metropolis algorithms (curse of dimensionality) do apply, but other than that I'd say it's fine to use.\r\n\r\nI'll do a PR that removes the warning.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3717", "repository_url": "https://api.github.com/repos/pymc-devs/pymc3", "labels_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3717/labels{/name}", "comments_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3717/comments", "events_url": "https://api.github.com/repos/pymc-devs/pymc3/issues/3717/events", "html_url": "https://github.com/pymc-devs/pymc3/issues/3717", "id": 535805187, "node_id": "MDU6SXNzdWU1MzU4MDUxODc=", "number": 3717, "title": "some small errors when \"stat_sum\" is on for sample_smc", "user": {"login": "aakhmetz", "id": 2173206, "node_id": "MDQ6VXNlcjIxNzMyMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2173206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aakhmetz", "html_url": "https://github.com/aakhmetz", "followers_url": "https://api.github.com/users/aakhmetz/followers", "following_url": "https://api.github.com/users/aakhmetz/following{/other_user}", "gists_url": "https://api.github.com/users/aakhmetz/gists{/gist_id}", "starred_url": "https://api.github.com/users/aakhmetz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aakhmetz/subscriptions", "organizations_url": "https://api.github.com/users/aakhmetz/orgs", "repos_url": "https://api.github.com/users/aakhmetz/repos", "events_url": "https://api.github.com/users/aakhmetz/events{/privacy}", "received_events_url": "https://api.github.com/users/aakhmetz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "aloctavodia", "id": 1338958, "node_id": "MDQ6VXNlcjEzMzg5NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1338958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aloctavodia", "html_url": "https://github.com/aloctavodia", "followers_url": "https://api.github.com/users/aloctavodia/followers", "following_url": "https://api.github.com/users/aloctavodia/following{/other_user}", "gists_url": "https://api.github.com/users/aloctavodia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aloctavodia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aloctavodia/subscriptions", "organizations_url": "https://api.github.com/users/aloctavodia/orgs", "repos_url": "https://api.github.com/users/aloctavodia/repos", "events_url": "https://api.github.com/users/aloctavodia/events{/privacy}", "received_events_url": "https://api.github.com/users/aloctavodia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aloctavodia", "id": 1338958, "node_id": "MDQ6VXNlcjEzMzg5NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1338958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aloctavodia", "html_url": "https://github.com/aloctavodia", "followers_url": "https://api.github.com/users/aloctavodia/followers", "following_url": "https://api.github.com/users/aloctavodia/following{/other_user}", "gists_url": "https://api.github.com/users/aloctavodia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aloctavodia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aloctavodia/subscriptions", "organizations_url": "https://api.github.com/users/aloctavodia/orgs", "repos_url": "https://api.github.com/users/aloctavodia/repos", "events_url": "https://api.github.com/users/aloctavodia/events{/privacy}", "received_events_url": "https://api.github.com/users/aloctavodia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-12-10T15:30:57Z", "updated_at": "2019-12-18T16:20:22Z", "closed_at": "2019-12-18T16:20:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I include the option ```sum_stat=True``` in ```sample_smc```\r\n```python\r\ndata = np.random.randn(1000)\r\n\r\ndef normal_sim(a, b):\r\n    return np.sort(np.random.normal(a, b, 1000))\r\n\r\n\r\nwith pm.Model():\r\n    a = pm.Normal('a', mu=0, sd=5)\r\n    b = pm.HalfNormal('b', sd=1)\r\n    s = pm.Simulator('s', normal_sim, observed=np.sort(data))\r\n    trace_example = pm.sample_smc(2000, kernel='ABC', epsilon=0.1, parallel=True, sum_stat=True)\r\n\r\npm.summary(trace_example)\r\n```\r\nI got the error:\r\n```python\r\nINFO:pymc3:Sample initial stage: ...\r\nINFO:pymc3:Stage:   0 Beta: 0.003 Steps:  25 Acce: 1.000\r\nINFO:pymc3:Stage:   1 Beta: 0.018 Steps:  25 Acce: 0.506\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-43-63e7228a42e5> in <module>\r\n      9     b = pm.HalfNormal('b', sd=1)\r\n     10     s = pm.Simulator('s', normal_sim, observed=np.sort(data))\r\n---> 11     trace_example = pm.sample_smc(2000, kernel='ABC', epsilon=0.1, parallel=True, sum_stat=True)\r\n     12 \r\n     13 pm.summary(trace_example)\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pymc3/smc/sample_smc.py in sample_smc(draws, kernel, n_steps, parallel, start, cores, tune_steps, p_acc_rate, threshold, epsilon, dist_func, sum_stat, progressbar, model, random_seed)\r\n    145             )\r\n    146         )\r\n--> 147         smc.resample()\r\n    148         smc.update_proposal()\r\n    149         if stage > 0:\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pymc3/smc/smc.py in resample(self)\r\n    188         \"\"\"\r\n    189         resampling_indexes = np.random.choice(\r\n--> 190             np.arange(self.draws), size=self.draws, p=self.weights\r\n    191         )\r\n    192         self.posterior = self.posterior[resampling_indexes]\r\n\r\nmtrand.pyx in numpy.random.mtrand.RandomState.choice()\r\n\r\nValueError: 'p' must be 1-dimensional\r\n```\r\n\r\nIn another instance (I can provide the complete code if necessary)\r\n```python\r\nwith pm.Model() as model_ABC:\r\n    # Generation time interval\r\n    incmean = pm.HalfNormal('incmean', sd=15, testval=14.) \r\n    incsd = pm.HalfNormal('incsd', sd=5, testval=2.)\r\n    # Generation time interval\r\n    gtmean = pm.HalfNormal('gtmean', sd=15, testval=14.) \r\n    gtsd = pm.HalfNormal('gtsd', sd=5, testval=2.)\r\n    # for Mechanism 1\r\n    \u03c31 = pm.HalfNormal('\u03c31', sd=10, testval=5.)\r\n    # corr.coeff. b/w incubation period and serial interval\r\n    \u03c1 = pm.Normal('\u03c1', 0, 1, testval=.5)\r\n    \r\n    w = pm.Dirichlet('w', a=np.array([1, 1, 1]), testval=np.array([1,2,7]))\r\n    \r\n    s = pm.Simulator('s', _sim_ABC, observed=data)\r\n    trace_ABC = pm.sample_smc(2000, kernel='ABC', epsilon=0.1, parallel=True, sum_stat=True)\r\n    \r\naz.plot_trace(trace_ABC);\r\naz.summary(trace_ABC, extend=False)\r\n```\r\nthe error was a bit different\r\n```python\r\nINFO:pymc3:Stage:   0 Beta: 0.001 Steps:  25 Acce: 1.000\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nAttributeError: 'numpy.ndarray' object has no attribute 'exp'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n<timed exec> in <module>\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pymc3/smc/sample_smc.py in sample_smc(draws, kernel, n_steps, parallel, start, cores, tune_steps, p_acc_rate, threshold, epsilon, dist_func, sum_stat, progressbar, model, random_seed)\r\n    139 \r\n    140     while smc.beta < 1:\r\n--> 141         smc.update_weights_beta()\r\n    142         _log.info(\r\n    143             \"Stage: {:3d} Beta: {:.3f} Steps: {:3d} Acce: {:.3f}\".format(\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pymc3/smc/smc.py in update_weights_beta(self)\r\n    163         while up_beta - low_beta > 1e-6:\r\n    164             new_beta = (low_beta + up_beta) / 2.0\r\n--> 165             weights_un = np.exp((new_beta - old_beta) * ll_diff)\r\n    166             weights = weights_un / np.sum(weights_un)\r\n    167             ESS = int(1 / np.sum(weights ** 2))\r\n\r\nTypeError: loop of ufunc does not support argument 0 of type numpy.ndarray which has no callable exp method\r\n```\r\n \r\n## Versions and main components\r\n\r\n* PyMC3 Version: 3.8\r\n* Theano Version: 1.0.4\r\n* Python Version: 3.6.9\r\n* Operating system: ubuntu \r\n* How did you install PyMC3: (conda/pip) master from github\r\n", "performed_via_github_app": null, "score": 1.0}]}