{"total_count": 251, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/pexpect/pexpect/issues/653", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/653/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/653/events", "html_url": "https://github.com/pexpect/pexpect/issues/653", "id": 669222214, "node_id": "MDU6SXNzdWU2NjkyMjIyMTQ=", "number": 653, "title": "telnet in REPLwrapper ", "user": {"login": "rvarium", "id": 62673187, "node_id": "MDQ6VXNlcjYyNjczMTg3", "avatar_url": "https://avatars1.githubusercontent.com/u/62673187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvarium", "html_url": "https://github.com/rvarium", "followers_url": "https://api.github.com/users/rvarium/followers", "following_url": "https://api.github.com/users/rvarium/following{/other_user}", "gists_url": "https://api.github.com/users/rvarium/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvarium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvarium/subscriptions", "organizations_url": "https://api.github.com/users/rvarium/orgs", "repos_url": "https://api.github.com/users/rvarium/repos", "events_url": "https://api.github.com/users/rvarium/events{/privacy}", "received_events_url": "https://api.github.com/users/rvarium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-30T21:47:20Z", "updated_at": "2020-08-12T16:47:23Z", "closed_at": "2020-08-12T16:47:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a telnet session inside REPLwrapper as in the code below:\r\n\r\n    tn = pexpect.spawnu(\"telnet 127.0.0.1\",echo=False)\r\n    tn.expect(\"login:\")\r\n    tn.sendline(\"abcd\")\r\n    tn.expect(\"Password\")\r\n    tn.sendline(\"abcd\")\r\n    prompt_change = \"PS1={0}\".format(\"#\")\r\n    repl = REPLWrapper(tn, \"\\$\", prompt_change, \"#\")\r\n\r\nWhen I step into the REPLWrapper() using a python debug application, I can see that the command \r\n\r\nPS1=\"#\"\r\n\r\nexecuted by REPLWrapper is echoed into the output of this command in spite of echo being disabled.  This is true about every following command that I give using repl.run_command().  I get the input echoed as part of the output.  I wonder why that is so.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/646", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/646/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/646/events", "html_url": "https://github.com/pexpect/pexpect/issues/646", "id": 622407046, "node_id": "MDU6SXNzdWU2MjI0MDcwNDY=", "number": 646, "title": "Missing lines when controlling proxmark3 client.", "user": {"login": "SciLor", "id": 1385855, "node_id": "MDQ6VXNlcjEzODU4NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1385855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SciLor", "html_url": "https://github.com/SciLor", "followers_url": "https://api.github.com/users/SciLor/followers", "following_url": "https://api.github.com/users/SciLor/following{/other_user}", "gists_url": "https://api.github.com/users/SciLor/gists{/gist_id}", "starred_url": "https://api.github.com/users/SciLor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SciLor/subscriptions", "organizations_url": "https://api.github.com/users/SciLor/orgs", "repos_url": "https://api.github.com/users/SciLor/repos", "events_url": "https://api.github.com/users/SciLor/events{/privacy}", "received_events_url": "https://api.github.com/users/SciLor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-21T10:31:34Z", "updated_at": "2020-05-21T12:52:44Z", "closed_at": "2020-05-21T12:52:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently trying to control the proxmark3 client with pexpect.\r\n\r\nBut I am missing lines (all with #db) in the output:\r\n\r\nOutput from linux terminal:\r\n```\r\nproxmark3> hf 15 reader\r\nRead Tag\r\n#db# 12 octets read from IDENTIFY request:          \r\n#db# NoErr CrcOK          \r\n#db# 00 00 05 06 74 0f B0 03          \r\n#db# 04 e0 9c 23          \r\n#db# UID = XXXXXXXXXXXXXXXX  \r\nproxmark3>\r\n```\r\n\r\nRead output by pexpect\r\n```\r\nhf 15 reader\r\nRead Tag\r\n```\r\n\r\n```\r\npm3 = pexpect.spawn(self._binary, [self._device])\r\npm3.expect('proxmark3> ')\r\npm3.sendline(\"hf 15 reader\")\r\npm3.expect('proxmark3> ')\r\nprint(pm3.before.decode)\r\n```\r\n\r\nWhere are the other lines gone?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/642", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/642/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/642/events", "html_url": "https://github.com/pexpect/pexpect/issues/642", "id": 613674381, "node_id": "MDU6SXNzdWU2MTM2NzQzODE=", "number": 642, "title": "How to handle multiple users (sessions, threads)?", "user": {"login": "GraphGrailAi", "id": 4690353, "node_id": "MDQ6VXNlcjQ2OTAzNTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4690353?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GraphGrailAi", "html_url": "https://github.com/GraphGrailAi", "followers_url": "https://api.github.com/users/GraphGrailAi/followers", "following_url": "https://api.github.com/users/GraphGrailAi/following{/other_user}", "gists_url": "https://api.github.com/users/GraphGrailAi/gists{/gist_id}", "starred_url": "https://api.github.com/users/GraphGrailAi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GraphGrailAi/subscriptions", "organizations_url": "https://api.github.com/users/GraphGrailAi/orgs", "repos_url": "https://api.github.com/users/GraphGrailAi/repos", "events_url": "https://api.github.com/users/GraphGrailAi/events{/privacy}", "received_events_url": "https://api.github.com/users/GraphGrailAi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T23:29:08Z", "updated_at": "2020-05-30T17:52:54Z", "closed_at": "2020-05-30T17:52:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use pexpect to interact with stdout like a chat, this works:\r\n\r\n    import pexpect\r\n    botterminal = pexpect.spawnu('/root/anaconda3/bin/python3.6 /var/www/scripts/interactive.py -t talk')\r\n    botterminal.sendline('user_message 1')\r\n    botterminal.expect([pexpect.TIMEOUT, '> ', pexpect.EOF]) \r\n    botterminal_before = print(botterminal.before)\r\n    botterminal.sendline('user_message 2')\r\n\r\nBut, what if another user form another PC send commands `botterminal.sendline('user_message 1')` ?\r\n\r\nAnother words: how do i direct `sendline` commands to different processes(threads?) to control input and output for every user separated, with no mess?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/641", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/641/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/641/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/641/events", "html_url": "https://github.com/pexpect/pexpect/issues/641", "id": 607022414, "node_id": "MDU6SXNzdWU2MDcwMjI0MTQ=", "number": 641, "title": "pxssh access to remote server via jumphost/jumphosts (ssh)", "user": {"login": "f3rzko", "id": 13722073, "node_id": "MDQ6VXNlcjEzNzIyMDcz", "avatar_url": "https://avatars0.githubusercontent.com/u/13722073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/f3rzko", "html_url": "https://github.com/f3rzko", "followers_url": "https://api.github.com/users/f3rzko/followers", "following_url": "https://api.github.com/users/f3rzko/following{/other_user}", "gists_url": "https://api.github.com/users/f3rzko/gists{/gist_id}", "starred_url": "https://api.github.com/users/f3rzko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/f3rzko/subscriptions", "organizations_url": "https://api.github.com/users/f3rzko/orgs", "repos_url": "https://api.github.com/users/f3rzko/repos", "events_url": "https://api.github.com/users/f3rzko/events{/privacy}", "received_events_url": "https://api.github.com/users/f3rzko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-26T14:13:45Z", "updated_at": "2020-04-27T13:51:09Z", "closed_at": "2020-04-27T13:51:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a python script that connects via ssh to the remote server, performs some commands, and logout. But in some cases I need to connect to this server via jump host(hosts) like with ssh command:\r\n\r\n`ssh -J (user@jumphost) (user@remote.internal.host) `\r\n\r\nHere's code example\r\n```\r\n\r\nimport pexpect\r\nfrom pexpect import pxssh\r\nimport getpass\r\ntry:\r\n    s = pxssh.pxssh(options={\r\n                    \"ProxyJump\": \"user@jumphost\"})\r\n    hostname = \"remote.internal.host\"\r\n    username = \"user\"\r\n    port = \"\"\r\n    password = getpass.getpass('Password: ')\r\n    s.login(hostname, username, password, port=port)\r\n    s.sendline('command1')\r\n    s.prompt()\r\n    s.sendline('command2')\r\n    s.prompt()\r\n    s.sendline('command3')\r\n    s.prompt()\r\n    s.logout()\r\n   except pxssh.ExceptionPxssh as e:\r\n    print(\"Login failed.\")\r\n    print(e)\r\n```\r\n\r\nThe result of this script that I have \"permission denied\", and it means that pxssh doesn't enter a password for jump host, I even try to use pexepect for it, but somehow it doesn't work. Maybe someone knows how to enter password in password prompt for jumphost with option \"Proxyjump\"? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/639", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/639/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/639/events", "html_url": "https://github.com/pexpect/pexpect/issues/639", "id": 604121596, "node_id": "MDU6SXNzdWU2MDQxMjE1OTY=", "number": 639, "title": "Is using pexpect.TIMEOUT a valid workaround for expect() ?", "user": {"login": "thisdougb", "id": 17353693, "node_id": "MDQ6VXNlcjE3MzUzNjkz", "avatar_url": "https://avatars1.githubusercontent.com/u/17353693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thisdougb", "html_url": "https://github.com/thisdougb", "followers_url": "https://api.github.com/users/thisdougb/followers", "following_url": "https://api.github.com/users/thisdougb/following{/other_user}", "gists_url": "https://api.github.com/users/thisdougb/gists{/gist_id}", "starred_url": "https://api.github.com/users/thisdougb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thisdougb/subscriptions", "organizations_url": "https://api.github.com/users/thisdougb/orgs", "repos_url": "https://api.github.com/users/thisdougb/repos", "events_url": "https://api.github.com/users/thisdougb/events{/privacy}", "received_events_url": "https://api.github.com/users/thisdougb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-04-21T16:39:45Z", "updated_at": "2020-05-30T17:56:31Z", "closed_at": "2020-05-30T17:56:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "#### Context\r\nI might just be missing something (I have read through the expect module).  I'm setting up pexpect.spawn sessions through a class which takes a prompt string.  So the cli prompt is not fixed, it's set when the session starts.\r\n\r\nWhen I use expect() I'm having trouble finding a regex pattern that works consistently, and easily.  Say something simple like, \"$ \".  I need to put that through a function to apply escapes and turn it into \"\\\\\\\\$ \".\r\n\r\nWhen using:\r\n```\r\nsession.sendline(\"cat test_file\")\r\nsession.expect(\"$ \")\r\nresponse = session.before.rstrip()\r\nprint(\"RESPONSE \", response)\r\n```\r\nI get old data from the buffer (here the zsh warning from bash login on OSX):\r\n```\r\nRESPONSE  \r\nThe default interactive shell is now zsh.\r\nTo update your account to use zsh, please run `chsh -s /bin/zsh`.\r\nFor more details, please visit https://support.apple.com/kb/HT208050.\r\nbash-3.2$ $\r\n```\r\nIt gets more difficult when an \"$ \" appears in some text, perhaps in a \"cat somefile.txt\":\r\n```\r\n$ cat test_file \r\nhello\r\ndollar $  .\r\ngoodbye\r\n$ \r\n```\r\nMy pexpect(\"\\\\\\\\$ \") picks this out, which is not what I want:\r\n```\r\nbuffer (last 100 chars): '.\\r\\ngoodbye\\r\\n'\r\nbefore (last 100 chars): 'hello\\r\\ndollar '\r\nafter: '$ '\r\nmatch: <re.Match object; span=(14, 16), match='$ '>\r\n```\r\n#### Question\r\nSo I am wondering if, to be able to read the current response immediately after a sendline() I should just be using TIMEOUT as the pattern?\r\n```\r\nsession.sendline(\"cat test_file\")\r\nsession.expect(pexpect.TIMEOUT, timeout=-1)\r\nprint(session)\r\nresponse = session.before.rstrip()\r\nprint(\"RESPONSE \", response)\r\n```\r\nThis gives me the end result I want:\r\n```\r\n<snipped>\r\nbuffer (last 100 chars): 'hello\\r\\ndollar $ .\\r\\ngoodbye\\r\\n$ '\r\nbefore (last 100 chars): 'hello\\r\\ndollar $ .\\r\\ngoodbye\\r\\n$ '\r\nafter: <class 'pexpect.exceptions.TIMEOUT'>\r\nmatch: <class 'pexpect.exceptions.TIMEOUT'>\r\nmatch_index: 0\r\n\r\nRESPONSE  hello\r\ndollar $ .\r\ngoodbye\r\n$\r\n```\r\nUnfortunately the timeout cannot be bypassed, so I always have a 1 second pause.\r\n\r\nAre there any bad side-effects of using TIMEOUT to do this?  I guess this is functionality like a real-time version of read().", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/637", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/637/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/637/events", "html_url": "https://github.com/pexpect/pexpect/issues/637", "id": 599145994, "node_id": "MDU6SXNzdWU1OTkxNDU5OTQ=", "number": 637, "title": "Compiling the docs with Sphinx 3.0.1 fails with AttributeError: 'Sphinx' object has no attribute 'info'", "user": {"login": "hartwork", "id": 1577132, "node_id": "MDQ6VXNlcjE1NzcxMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1577132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hartwork", "html_url": "https://github.com/hartwork", "followers_url": "https://api.github.com/users/hartwork/followers", "following_url": "https://api.github.com/users/hartwork/following{/other_user}", "gists_url": "https://api.github.com/users/hartwork/gists{/gist_id}", "starred_url": "https://api.github.com/users/hartwork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hartwork/subscriptions", "organizations_url": "https://api.github.com/users/hartwork/orgs", "repos_url": "https://api.github.com/users/hartwork/repos", "events_url": "https://api.github.com/users/hartwork/events{/privacy}", "received_events_url": "https://api.github.com/users/hartwork/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-13T21:25:29Z", "updated_at": "2020-04-18T15:14:27Z", "closed_at": "2020-04-18T15:14:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Are there plans to support building the docs with Sphinx 3?\r\n```\r\n# make -j5 -C doc html\r\nmake: Entering directory '/tmp/tmp.zp8i1A7t0T/pexpect/doc'\r\nsphinx-build -b html -d _build/doctrees   . _build/html\r\nRunning Sphinx v3.0.1\r\n\r\nException occurred:\r\n  File \"/tmp/tmp.zp8i1A7t0T/pexpect/doc/sphinxext/github.py\", line 149, in setup\r\n    app.info('Initializing GitHub plugin')\r\nAttributeError: 'Sphinx' object has no attribute 'info'\r\nThe full traceback has been saved in /tmp/sphinx-err-ezjlx78k.log, if you want to report the issue to the developers.\r\nPlease also report this if it was a user error, so that a better error message can be provided next time.\r\nA bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks!\r\nmake: *** [Makefile:45: html] Error 2\r\nmake: Leaving directory '/tmp/tmp.zp8i1A7t0T/pexpect/doc'\r\n```\r\nCommenting out `app.info('Initializing GitHub plugin')` seems to make the build work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/636", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/636/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/636/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/636/events", "html_url": "https://github.com/pexpect/pexpect/issues/636", "id": 597201704, "node_id": "MDU6SXNzdWU1OTcyMDE3MDQ=", "number": 636, "title": "Flushing the buffer?", "user": {"login": "lackdaz", "id": 18615416, "node_id": "MDQ6VXNlcjE4NjE1NDE2", "avatar_url": "https://avatars0.githubusercontent.com/u/18615416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lackdaz", "html_url": "https://github.com/lackdaz", "followers_url": "https://api.github.com/users/lackdaz/followers", "following_url": "https://api.github.com/users/lackdaz/following{/other_user}", "gists_url": "https://api.github.com/users/lackdaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lackdaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lackdaz/subscriptions", "organizations_url": "https://api.github.com/users/lackdaz/orgs", "repos_url": "https://api.github.com/users/lackdaz/repos", "events_url": "https://api.github.com/users/lackdaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lackdaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-09T11:00:55Z", "updated_at": "2020-05-30T17:56:33Z", "closed_at": "2020-05-30T17:56:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! from what I get: \r\nchild.before = text before the match\r\nchild.match = the match\r\nchild.after = text.after the match\r\n\r\nIs there some way I can flush the buffer, because I got text bleeding from previous expects and its causing some matches to fail/incorrectly match. I've got a child that is basically long running and doesn't have an EOF.\r\n\r\nI've inferred the above from https://github.com/pexpect/pexpect/issues/588", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/633", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/633/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/633/events", "html_url": "https://github.com/pexpect/pexpect/issues/633", "id": 590639138, "node_id": "MDU6SXNzdWU1OTA2MzkxMzg=", "number": 633, "title": "spawn is really slow in docker container", "user": {"login": "vivintsmartvideo", "id": 30836737, "node_id": "MDQ6VXNlcjMwODM2NzM3", "avatar_url": "https://avatars2.githubusercontent.com/u/30836737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vivintsmartvideo", "html_url": "https://github.com/vivintsmartvideo", "followers_url": "https://api.github.com/users/vivintsmartvideo/followers", "following_url": "https://api.github.com/users/vivintsmartvideo/following{/other_user}", "gists_url": "https://api.github.com/users/vivintsmartvideo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vivintsmartvideo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vivintsmartvideo/subscriptions", "organizations_url": "https://api.github.com/users/vivintsmartvideo/orgs", "repos_url": "https://api.github.com/users/vivintsmartvideo/repos", "events_url": "https://api.github.com/users/vivintsmartvideo/events{/privacy}", "received_events_url": "https://api.github.com/users/vivintsmartvideo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-30T22:26:13Z", "updated_at": "2020-03-31T20:47:03Z", "closed_at": "2020-03-31T01:51:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am spawning a process with pexpect inside a docker container, it is super slow!  Thoughts for why it would be so slow?  Any suggestions on how to debug it?\r\n\r\nI'm on pexpect v4.6.0  Fedora 30 for my os (system and docker)\r\n\r\nHere is how long it takes on my system:\r\n```\r\n# ipython3\r\nPython 3.7.4 (default, Jul  9 2019, 16:32:37)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.3.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\n[ins] In [1]: import pexpect\r\n[ins] In [2]: %timeit p = pexpect.spawn('bash')\r\n101 ms \u00b1 823 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 10 loops each)\r\n```\r\n\r\nHere is how long it takes in docker:\r\n```\r\n# ipython3\r\nPython 3.7.6 (default, Jan 30 2020, 10:29:04)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.3.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\n[ins] In [1]: import pexpect\r\n[ins] In [2]: %timeit p = pexpect.spawn('bash')\r\n5.73 s \u00b1 566 ms per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/630", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/630/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/630/events", "html_url": "https://github.com/pexpect/pexpect/issues/630", "id": 588009678, "node_id": "MDU6SXNzdWU1ODgwMDk2Nzg=", "number": 630, "title": "REPLwrapper run_command() issues with multiple pexpect child applications", "user": {"login": "rvarium", "id": 62673187, "node_id": "MDQ6VXNlcjYyNjczMTg3", "avatar_url": "https://avatars1.githubusercontent.com/u/62673187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvarium", "html_url": "https://github.com/rvarium", "followers_url": "https://api.github.com/users/rvarium/followers", "following_url": "https://api.github.com/users/rvarium/following{/other_user}", "gists_url": "https://api.github.com/users/rvarium/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvarium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvarium/subscriptions", "organizations_url": "https://api.github.com/users/rvarium/orgs", "repos_url": "https://api.github.com/users/rvarium/repos", "events_url": "https://api.github.com/users/rvarium/events{/privacy}", "received_events_url": "https://api.github.com/users/rvarium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-25T21:44:11Z", "updated_at": "2020-04-03T17:38:27Z", "closed_at": "2020-04-03T17:38:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am facing a challenge with REPLwrapper.  I have two pexpect child applications (both are telnet sessions)  and I need to run shell commands on both of them using REPLWrapper's run_command().   In my code, I switch between the two pexpect child applications and use run_command() in both of them.  Each of them have their on prompts to differentiate between them. \r\n\r\nThe problem is that the prompt is not printed by run_command().  \r\n\r\nFor ex, my code in a very simplified way looks like \r\n_________________________________\r\nDUT-A.run_command('ifconfig')\r\nDUT-B.run_command('ls')\r\n_________________________________\r\n\r\nIn this example I use DUT-A# as prompt for the first telnet session and DUT-B# for the second. The output looks like :\r\n\r\nifconfig\r\nlo0: flags=8049<UP,LOOPBACK,RUNNING,MULTICAST> mtu 33136\r\n        inet 127.0.0.1 netmask 0xff000000\r\n        inet6 ::1 prefixlen 128\r\n        inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1\r\nwm0: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> mtu 1500\r\n        capabilities rx=7<IP4CSUM,TCP4CSUM,UDP4CSUM>\r\n        capabilities tx=3f<IP4CSUM,TCP4CSUM,UDP4CSUM,TCP6CSUM,UDP6CSUM,TSO4>\r\n        enabled=0\r\n        address: 00:0c:29:04:76:95\r\n        media: Ethernet autoselect (1000baseT full-duplex)\r\n        status: active\r\n        inet 172.16.109.100 netmask 0xffffff00 broadcast 172.16.109.255\r\n        inet6 fe80::20c:29ff:fe04:7695%wm0 prefixlen 64 scopeid 0x11\r\n        inet6 2001::a prefixlen 64\r\npflog0: flags=0 mtu 33136\r\nDUT-A#ls\r\nls\r\nDUT-B#.\r\n\r\n\r\nTwo issues here:  \r\n\r\n1) There is no way from the output to know which child application \"ifconfig\" was run because the prompt DUT-A# is not printed preceding the output of that command. \r\n2) The \"ls\" command looks like it was executed on DUT-A# but actually it is on DUT-B#.   The prompt DUT-B# is not printed preceding the output so it is impossible to know that it was executed on DUT-B.\r\n\r\nIs there any solution provided by REPLwrapper for this ?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/625", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/625/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/625/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/625/events", "html_url": "https://github.com/pexpect/pexpect/issues/625", "id": 562371876, "node_id": "MDU6SXNzdWU1NjIzNzE4NzY=", "number": 625, "title": "Class wrapping pexpect", "user": {"login": "lackdaz", "id": 18615416, "node_id": "MDQ6VXNlcjE4NjE1NDE2", "avatar_url": "https://avatars0.githubusercontent.com/u/18615416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lackdaz", "html_url": "https://github.com/lackdaz", "followers_url": "https://api.github.com/users/lackdaz/followers", "following_url": "https://api.github.com/users/lackdaz/following{/other_user}", "gists_url": "https://api.github.com/users/lackdaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lackdaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lackdaz/subscriptions", "organizations_url": "https://api.github.com/users/lackdaz/orgs", "repos_url": "https://api.github.com/users/lackdaz/repos", "events_url": "https://api.github.com/users/lackdaz/events{/privacy}", "received_events_url": "https://api.github.com/users/lackdaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-10T07:25:19Z", "updated_at": "2020-02-10T08:56:26Z", "closed_at": "2020-02-10T08:56:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I'm new to pexpect and which I'm developing a custom interface for my 3d printer.\r\n\r\nI'm using an interactive session that interfaces with the printer port, which looks like this:\r\n```\r\n$ python pronsole.py\r\nWelcome to the printer console! Type \"help\" for a list of available commands.\r\noffline> connect\r\nNo port specified - connecting to /dev/cu.usbmodem20813183324D1 at 115200bps\r\nPrinter is now online\r\ncu.usbmodem20813183324D1 -15\u00b0>\r\n```\r\nThis was the simple python script I wrote which works great:\r\n```\r\nfrom pexpect import *\r\n\r\np = spawn('python pronsole.py')\r\np.expect('Welcome')\r\nprint(p.pid)\r\np.sendline('connect')\r\nprint('connecting...')\r\np.expect('Printer is now connected')\r\nprint('connected')\r\np.sendline('G28')\r\n```\r\n\r\nNow on to my problem. I'm looking to wrap the pexpect into another class to create a callable object that does the few fews that I need(e,g, homing, connecting, moving, etc), looking like this:\r\n```\r\nclass Printer:\r\n  def __init__(self):\r\n    self.port = glob.glob('/dev/cu.usbmodem*')[0] #TODO: hard-coded for now\r\n    self.p = pexpect.spawn('python pronsole.py')\r\n    self.p.expect('Welcome')\r\n\r\n  def connect(self):\r\n    if self.p.isalive():\r\n      print(self.port)\r\n      self.p.sendline(f'connect {self.port}')\r\n      logging.debug('Connecting...')\r\n      index = self.p.expect(['Printer is now connected', 'something bad', pexpect.EOF, pexpect.TIMEOUT]) # <------ code is failing here\r\n      if index == 0:\r\n        logging.debug('Connected...')\r\n        return true\r\n      elif index == 1:\r\n        logging.debug(\"Failed to connect\")\r\n        return false\r\n        # TODO: error handler()\r\n      elif index == 2:\r\n        logging.debug(\"EOF\")\r\n        # TODO: error handler()\r\n      elif index == 3:\r\n        logging.error(\"timeout\")\r\n        # TODO: error handler()\r\n    else:\r\n      logging.error('Lost connection')\r\n      return false\r\n```\r\nI'm now noticing that my string pattern matching stated above failing. When I probe and call pexpect myself in interactive mode, I'm getting strange integer outputs like 8 for 'connect', 11 for 'disconnect', 38 for something else. I'm guessing that these can now be used as exit statuses but I'm puzzled why they have changed. Does this have something to do with the async nature of my requests?\r\n\r\n My question is: \r\n1) Why is my return status changing from string (like \"Welcome\") to some integer output? \r\n2) Are we able to wrap pexpect into callable class objects", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/613", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/613/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/613/events", "html_url": "https://github.com/pexpect/pexpect/issues/613", "id": 542859324, "node_id": "MDU6SXNzdWU1NDI4NTkzMjQ=", "number": 613, "title": "Pexpect: Could not set shell prompt", "user": {"login": "rakeshk121", "id": 22984193, "node_id": "MDQ6VXNlcjIyOTg0MTkz", "avatar_url": "https://avatars2.githubusercontent.com/u/22984193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rakeshk121", "html_url": "https://github.com/rakeshk121", "followers_url": "https://api.github.com/users/rakeshk121/followers", "following_url": "https://api.github.com/users/rakeshk121/following{/other_user}", "gists_url": "https://api.github.com/users/rakeshk121/gists{/gist_id}", "starred_url": "https://api.github.com/users/rakeshk121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rakeshk121/subscriptions", "organizations_url": "https://api.github.com/users/rakeshk121/orgs", "repos_url": "https://api.github.com/users/rakeshk121/repos", "events_url": "https://api.github.com/users/rakeshk121/events{/privacy}", "received_events_url": "https://api.github.com/users/rakeshk121/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-27T12:25:23Z", "updated_at": "2020-01-06T14:56:35Z", "closed_at": "2020-01-06T14:56:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have referred a python script from https://pexpect.readthedocs.io/en/stable/api/pxssh.html in order to perform a ssh password based login.\r\nCode is as follows:\r\n```\r\nfrom pexpect import pxssh\r\nimport getpass\r\ntry:\r\n    s = pxssh.pxssh()\r\n    hostname = input('hostname: ')\r\n    username = input('username: ')\r\n    password = getpass.getpass('password: ')\r\n    s.login(hostname, username, password)\r\n    s.sendline('uptime')   # run a command\r\n    s.prompt()             # match the prompt\r\n    print(s.before)        # print everything before the prompt.\r\n    s.sendline('ls -l')\r\n    s.prompt()\r\n    print(s.before)\r\n    s.sendline('df')\r\n    s.prompt()\r\n    print(s.before)\r\n    s.logout()\r\nexcept pxssh.ExceptionPxssh as e:\r\n    print(\"pxssh failed on login.\")\r\n    print(e)\r\n```\r\n\r\nWhen i run the code, it prompts for hostname, username and password. After these inputs are provided through CLI,the ssh login fails with the exception as follows:\r\n```\r\ncould not set shell prompt (received: b\"unset PROMPT_COMMAND\\r\\nPS1='[PEXPECT]\\\\$ '\\r\\nUser1@167.254.225.14's password: \\r\\nUser1@167.254.225.14's password: \", expected: '\\\\[PEXPECT\\\\][\\\\$\\\\#] ').\r\n```\r\nThe manual login works fine for the same ssh credentials.\r\n```\r\nNote:\r\nPython version: 3.6\r\nPexpect version: 4.7 \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/610", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/610/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/610/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/610/events", "html_url": "https://github.com/pexpect/pexpect/issues/610", "id": 538950367, "node_id": "MDU6SXNzdWU1Mzg5NTAzNjc=", "number": 610, "title": "pexpect will hangs up when bash lot of command", "user": {"login": "IsaacLiang", "id": 48511801, "node_id": "MDQ6VXNlcjQ4NTExODAx", "avatar_url": "https://avatars0.githubusercontent.com/u/48511801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IsaacLiang", "html_url": "https://github.com/IsaacLiang", "followers_url": "https://api.github.com/users/IsaacLiang/followers", "following_url": "https://api.github.com/users/IsaacLiang/following{/other_user}", "gists_url": "https://api.github.com/users/IsaacLiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/IsaacLiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IsaacLiang/subscriptions", "organizations_url": "https://api.github.com/users/IsaacLiang/orgs", "repos_url": "https://api.github.com/users/IsaacLiang/repos", "events_url": "https://api.github.com/users/IsaacLiang/events{/privacy}", "received_events_url": "https://api.github.com/users/IsaacLiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-17T09:43:24Z", "updated_at": "2019-12-23T03:20:37Z", "closed_at": "2019-12-23T03:20:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "i want to use pexpect to update firewall policy. the policy more than 60000 rows. when the script bash about 2500 rows, the script will hangs up. \r\n\r\n++++++++++++++++++++++++++++++++\r\nimport pexpect\r\nimport time\r\nimport os\r\n\r\n\r\n \r\nclass CiscoSwitch():\r\n     \r\n    def __init__(self, host, username, password,pripasswd):\r\n        self.username = username\r\n        self.host = host\r\n        self.password = password\r\n        self.pripasswd = pripasswd\r\n        \r\n    def Login(self):\r\n         ssh_newkey = 'Are you sure you want to continue connecting (yes/no)?'\r\n         ssh_newkey2 = 'hit Cancel to abandon the connection.'\r\n         print ('\\r\\n'+'*'*50+'\\r\\n'+'*'*50+'\\r\\n'+'NOW is logining: '+self.host +'\\r\\n'+'*'*50+'\\r\\n'+'*'*50+'\\r\\n')\r\n         self.child = pexpect.spawn('ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no '+self.username+'@'+self.host)\r\n         ret = self.child.expect([pexpect.TIMEOUT, ssh_newkey, '[P|p]assword:','>',ssh_newkey2],timeout=10)\r\n         time.sleep(5)\r\n         if ret == 4:\r\n             print 'the key2 need to confirm yes'\r\n             self.child.sendline('yes') \r\n             time.sleep(5)             \r\n         if ret == 0:\r\n             print self.child.before\r\n             print '-'*50+'\\r\\n'+'-'*50+'\\r\\n'\r\n             print 'connection error on first step in FW!!'\r\n             return (self.child, self.child.before)\r\n         if ret == 1:\r\n             print 'the key need to confirm yes'\r\n             self.child.sendline('yes')\r\n             time.sleep(5)\r\n         if ret == 2:\r\n             print 'send password'\r\n             self.child.sendline(self.password)\r\n             time.sleep(5)    \r\n         ret = self.child.expect([pexpect.TIMEOUT,ssh_newkey, '[P|p]assword:','>'],timeout=3)\r\n         if ret == 0:\r\n             print 'connection error in second step!!'\r\n             return (self.child, self.child.before)\r\n         if ret == 1:\r\n             print '\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n'+'[-] Could not accept new key from ' + self.host+'\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n'\r\n             return (self.child, self.child.before)\r\n         if ret == 2:\r\n             print ' enter login password!!'\r\n             self.child.sendline(self.password)             \r\n         if ret == 3:\r\n             self.child.sendline('enable')\r\n             time.sleep(5) \r\n         ret = self.child.expect([pexpect.TIMEOUT, '[P|p]assword:','>'],timeout=3)   \r\n         if ret == 0:\r\n             print '\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n'+'[-]Timeout!' +'\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n'  \r\n         if ret == 1:\r\n             print ' enter the pripassword !!!'\r\n             self.child.sendline(self.pripasswd)\r\n             time.sleep(3)\r\n         if ret ==2:\r\n             print ' enter enable'\r\n             self.child.sendline('enable')\r\n             time.sleep(3)             \r\n         ret = self.child.expect([pexpect.TIMEOUT,'[P|p]assword:','#'])\r\n         if ret == 0:\r\n             print '\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n'+'Error'+self.host+'\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n'\r\n             return (self.child, self.child.before)\r\n         if ret == 1:\r\n             self.child.sendline(self.pripasswd)\r\n             return (self.child, self.child.before)\r\n         if ret == 2:\r\n             print ('\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n'+'Loing successed:'+self.host+'\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n')\r\n             return (self.child, self.child.before)             \r\n         ret = self.child.expect([pexpect.TIMEOUT,'[P|p]assword:'],'#')\r\n         if ret == 0:\r\n             print '\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n'+'Error'+self.host+'\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n'\r\n             return (self.child, self.child.before)         \r\n         if ret == 1:\r\n             print '\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n'+'[-] The Prilivage Password is invalid!'+self.host+'\\r\\n'+'-'*50\r\n             return (self.child, self.child.before)   \r\n         if ret == 2:\r\n             print ('\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n'+'Loing successed:'+self.host+'\\r\\n'+'-'*50+'\\r\\n'+'-'*50+'\\r\\n')\r\n             return (self.child, self.child.before)\r\n\r\n\r\n  def PolicyCmd(self,cmd):\r\n\r\n        policytemp = []\r\n        self.child.sendline(cmd)\r\n        self.child.expect('#')\r\n        self.child.sendline('confi t')\r\n        self.child.expect('#')\r\n        self.child.sendline('pager 0')\r\n        self.child.expect('#')\r\n        self.child.sendline('show running | i access-group')\r\n        self.child.expect('#')\r\n        \r\n        with open('outputshow.txt','a') as f:\r\n            f.write(self.child.before+'\\r\\n')\r\n               \r\n        cp = open(\"outputshow.txt\",\"r\")\r\n        lines = cp.readlines()\r\n        for line in lines: # for verify that there is outside \r\n            if 'access-group' and 'outside' in line:\r\n                policytemp = line               \r\n                print policytemp.split(' ')[1]\r\n                policycheck = 1\r\n                print 'oustide interface hava policy!!'\r\n                break\r\n                    \r\n                                \r\n            else:\r\n                policycheck = 2\r\n        print 'policycheck is :' + str(policycheck)  #for check the function             \r\n        policy= open(\"policyupdate.txt\",\"r\")\r\n        time.sleep(1)\r\n        policylines = policy.readlines() \r\n        commtemp = 0\r\n        timei = 0\r\n        if policycheck == 1:\r\n            print '-------- adding policy in outside --------'\r\n            for policyline in policylines: #for add policy\r\n                timei+=1\r\n                if timei >= 50:\r\n                    commtemp = 3                 \r\n                    time.sleep(2)                                        \r\n                if commtemp ==0: \r\n                    self.child.sendline(policyline) \r\n                    time.sleep(0.1)\r\n                    commtemp = self.child.expect(['#', pexpect.EOF, pexpect.TIMEOUT],timeout=20)\r\n                    print 'adding policy...'\r\n                if commtemp ==1:\r\n                    time.sleep(2)                    \r\n                    print 'policy update error!!'\r\n                    self.child.close(force=True)\r\n                    break\r\n                if commtemp ==2:\r\n                    time.sleep(2)\r\n                    print 'proccess time out!!'\r\n                    self.child.close(force=True)\r\n                    break\r\n                if commtemp ==3:                   \r\n                    print 'proccess taking a rest!!'\r\n                    time.sleep(10)\r\n                    commtemp = 0\r\n                    timei = 0\r\n        else:\r\n            print 'policycheck value is:'+str(policycheck)\r\n\r\n        cp.close()\r\n        os.remove('outputshow.txt')            \r\n        return (self.child, self.child.before)   \r\n\r\nif __name__ == '__main__':\r\n\r\n    Switch = CiscoSwitch('IP','USER','PASSWD','PASSWD')\r\n    (obj,stdout) = Switch.Login()\r\n\r\n    (obj,stdout) = Switch.PolicyCmd('updatedpolicy')\r\n    print stdout   \r\n\r\n             ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/607", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/607/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/607/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/607/events", "html_url": "https://github.com/pexpect/pexpect/issues/607", "id": 537899495, "node_id": "MDU6SXNzdWU1Mzc4OTk0OTU=", "number": 607, "title": "Fix simple typo: expcet -> except", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-14T11:01:27Z", "updated_at": "2019-12-14T15:24:39Z", "closed_at": "2019-12-14T15:24:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in examples/hive.py.\nShould read `except` rather than `expcet`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/605", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/605/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/605/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/605/events", "html_url": "https://github.com/pexpect/pexpect/issues/605", "id": 534626944, "node_id": "MDU6SXNzdWU1MzQ2MjY5NDQ=", "number": 605, "title": "Confusing \"another exception occurred\" message on Timeout or EOF in Python 3.x", "user": {"login": "eldipa", "id": 2665522, "node_id": "MDQ6VXNlcjI2NjU1MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2665522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eldipa", "html_url": "https://github.com/eldipa", "followers_url": "https://api.github.com/users/eldipa/followers", "following_url": "https://api.github.com/users/eldipa/following{/other_user}", "gists_url": "https://api.github.com/users/eldipa/gists{/gist_id}", "starred_url": "https://api.github.com/users/eldipa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eldipa/subscriptions", "organizations_url": "https://api.github.com/users/eldipa/orgs", "repos_url": "https://api.github.com/users/eldipa/repos", "events_url": "https://api.github.com/users/eldipa/events{/privacy}", "received_events_url": "https://api.github.com/users/eldipa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-09T00:06:22Z", "updated_at": "2019-12-17T11:16:03Z", "closed_at": "2019-12-17T11:16:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When an exception is raised (like a Timeout or an EOF), the raised exception triggers another exception (Timeout or EOF respectively.)\r\n\r\nIn Python 2.x this was not a problem but in Python 3.x this *chains* the traceback. In particular Python says something like this:\r\n\r\n```\r\nTraceback (most recent call last):\r\n    incoming = spawn.read_nonblocking(spawn.maxread, timeout)\r\n    ...\r\n    raise TIMEOUT('Timeout exceeded.')\r\npexpect.exceptions.TIMEOUT:  ....\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"df.py\", line 41, in <module>\r\n    i = child.expect ([pattern, pexpect.EOF], timeout=0.001)\r\n    ....\r\n    raise TIMEOUT(msg)\r\npexpect.exceptions.TIMEOUT: ....\r\n```\r\n\r\nThe phrase `During handling of the above exception, another exception occurred` looks like there is a bug but it isn't.\r\n\r\nThe code explicitly catches the exceptions and re-raises them (https://github.com/pexpect/pexpect/blob/7b073bfa10209d6b3836d7b3e2429df89e7bf305/pexpect/expect.py#L116-L119)\r\n\r\nI would like to propose two possible solutions:\r\n - we could set to None the *cause* of the second exception and disable the chaining like in Python 2.x\r\n - we could set to the *cause* to the previous exception: this would replace the phrase `During handling of the above exception, another exception occurred:` by `The above exception was the direct cause of the following exception` which it is more correct.\r\n\r\nIf it is ok, I would like to propose a PR for the former solution.\r\n\r\nOff topic: sorry by my English.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/597", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/597/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/597/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/597/events", "html_url": "https://github.com/pexpect/pexpect/issues/597", "id": 514532461, "node_id": "MDU6SXNzdWU1MTQ1MzI0NjE=", "number": 597, "title": "Allow to configure the buffer/before length in __str__ / display all if failed", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-30T09:59:15Z", "updated_at": "2019-10-31T11:07:29Z", "closed_at": "2019-10-31T11:04:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think it would be nice if you could extend the length of the displayed buffer/before values in `__str__`:\r\nCode: https://github.com/pexpect/pexpect/blob/a803933ed539e521169c8093e77639655b9b9f3a/pexpect/pty_spawn.py#L215-L216\r\n\r\nHowever, the specific use case at hand is with test failures, where the `__str__` is then used by pytest to display it:\r\n```\r\n>           raise TIMEOUT(msg)\r\nE           pexpect.exceptions.TIMEOUT: Timeout exceeded.\r\nE           <pexpect.pty_spawn.spawn object at 0x7f20a131c048>\r\nE           command: /home/travis/build/pytest-dev/pytest/.tox/py37-pexpect/bin/python\r\nE           args: ['/home/travis/build/pytest-dev/pytest/.tox/py37-pexpect/bin/python', '-mpytest', '--basetemp=/tmp/pytest-of-travis/pytest-0/test_trace_with_parametrize_handles_shared_fixtureinfo0/temp-pexpect', '--trace', '/tmp/pytest-of-travis/pytest-0/test_trace_with_parametrize_handles_shared_fixtureinfo0/test_trace_with_parametrize_handles_shared_fixtureinfo.py']\r\nE           buffer (last 100 chars): b\"gs\\r\\nmyparam = 1\\r\\nrequest = <FixtureRequest for <Function test_func_kw[1]>>\\r\\nfunc = 'func_kw'\\r\\n(Pdb) \"\r\nE           before (last 100 chars): b\"gs\\r\\nmyparam = 1\\r\\nrequest = <FixtureRequest for <Function test_func_kw[1]>>\\r\\nfunc = 'func_kw'\\r\\n(Pdb) \"\r\nE           after: <class 'pexpect.exceptions.TIMEOUT'>\r\nE           match: None\r\nE           match_index: None\r\nE           exitstatus: None\r\nE           flag_eof: False\r\nE           pid: 4150\r\nE           child_fd: 13\r\nE           closed: False\r\nE           timeout: 10.0\r\nE           delimiter: <class 'pexpect.exceptions.EOF'>\r\nE           logfile: <_io.BufferedWriter name='/tmp/pytest-of-travis/pytest-0/test_trace_with_parametrize_handles_shared_fixtureinfo0/spawn.out'>\r\nE           logfile_read: None\r\nE           logfile_send: None\r\nE           maxread: 2000\r\nE           ignorecase: False\r\nE           searchwindowsize: None\r\nE           delaybeforesend: 0.05\r\nE           delayafterclose: 0.1\r\nE           delayafterterminate: 0.1\r\nE           searcher: searcher_string:\r\nE               0: b'func = 1\\r\\n'\r\n```\r\n(https://travis-ci.org/pytest-dev/pytest/jobs/604874226#L3052)\r\n\r\nTherefore it could maybe automatically display all of it when it failed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/592", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/592/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/592/events", "html_url": "https://github.com/pexpect/pexpect/issues/592", "id": 500405349, "node_id": "MDU6SXNzdWU1MDA0MDUzNDk=", "number": 592, "title": "Some update broke pexpect", "user": {"login": "T-2", "id": 1413835, "node_id": "MDQ6VXNlcjE0MTM4MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1413835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/T-2", "html_url": "https://github.com/T-2", "followers_url": "https://api.github.com/users/T-2/followers", "following_url": "https://api.github.com/users/T-2/following{/other_user}", "gists_url": "https://api.github.com/users/T-2/gists{/gist_id}", "starred_url": "https://api.github.com/users/T-2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/T-2/subscriptions", "organizations_url": "https://api.github.com/users/T-2/orgs", "repos_url": "https://api.github.com/users/T-2/repos", "events_url": "https://api.github.com/users/T-2/events{/privacy}", "received_events_url": "https://api.github.com/users/T-2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2019-09-30T17:09:28Z", "updated_at": "2019-10-30T04:09:31Z", "closed_at": "2019-10-30T04:09:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Up until a few weeks ago pexpect worked just fine.\r\n\r\nMy setup: \r\nA Raspberry Pi 3B+ updated with the latest Raspbain: \r\n   4.19.66-v7+ #1253 SMP Thu Aug 15 11:49:46 BST 2019 armv7l GNU/Linux\r\n\r\nLatest python included with Raspbain: python3/oldstable,now 3.5.3-1 armhf [installed,automatic]\r\nLatest pexpect included with Raspbain: python3-pexpect/oldstable,now 4.2.1-1 all [installed]\r\n\r\nSimplified and sanitized version of my code:\r\n\r\nimport pexpect\r\n\r\nchild = pexpect.spawn('ssh -i /home/pi/.ssh/remote_box -o StrictHostKeyChecking=no -p 22 pi@remote_box ifconfig')\r\nchild.expect(\"remote_box': \")\r\nchild.sendline('secretpassword')\r\nchild.expect(pexpect.EOF, timeout=20)\r\nprint (child.before)\r\n\r\nWhat happens is it sends the ssh command, it then gets two identical prompt lines for the passphrase instead of just one. However pexpect never sends the secretpassword. It just times out.\r\n\r\nTried many things including:\r\n  Tried the ssh command line outside of python. - That works fine. The prompt comes back to enter the passphrase for the key. Enter that and you get the ifconfig output and it exits from the remote box.\r\n  Changed timeout=None - just hangs there forever\r\n  Changed the child.expect(\"remote_box': \") line with shorter and longer prompt strings - no change\r\n  Replaced the child.expect(\"remote_box': \") line entirely with time.sleep(5) - no change\r\n\r\nWhat can I try next?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/591", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/591/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/591/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/591/events", "html_url": "https://github.com/pexpect/pexpect/issues/591", "id": 499721144, "node_id": "MDU6SXNzdWU0OTk3MjExNDQ=", "number": 591, "title": "Has anyone been able to enter git credentials with pexpect on windows?", "user": {"login": "jwlodek", "id": 29227305, "node_id": "MDQ6VXNlcjI5MjI3MzA1", "avatar_url": "https://avatars1.githubusercontent.com/u/29227305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwlodek", "html_url": "https://github.com/jwlodek", "followers_url": "https://api.github.com/users/jwlodek/followers", "following_url": "https://api.github.com/users/jwlodek/following{/other_user}", "gists_url": "https://api.github.com/users/jwlodek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwlodek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwlodek/subscriptions", "organizations_url": "https://api.github.com/users/jwlodek/orgs", "repos_url": "https://api.github.com/users/jwlodek/repos", "events_url": "https://api.github.com/users/jwlodek/events{/privacy}", "received_events_url": "https://api.github.com/users/jwlodek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-28T03:40:53Z", "updated_at": "2019-10-06T13:46:32Z", "closed_at": "2019-10-06T13:45:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to write a python script that will allow me to enter my username and password once and store them as variables, and then every time I want to commit and push I hit enter and pexpect calls git push:\r\n```\r\nimport pexpect\r\nchild = pexpect.spawn('git clone REPO')\r\nchild.expect('Username *')\r\nchild.sendline(USER)\r\nchild.expect('Password *')\r\nchild.sendline(PASS)\r\nchild.expect(EOF)\r\n```\r\nThis simple script works great on linux, but on windows I couldn't get it to work with the `popen_spawn.PopenSpawn` call, it just gets stuck at `expect('Username *')`\r\n\r\nHas anyone been able to get this to work for windows? If not, does anyone have an alternative? I already tried wexpect and had the same result.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/589", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/589/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/589/events", "html_url": "https://github.com/pexpect/pexpect/issues/589", "id": 497103338, "node_id": "MDU6SXNzdWU0OTcxMDMzMzg=", "number": 589, "title": "How to make expect() stop eating input after a match?", "user": {"login": "JanMatCodasip", "id": 50193733, "node_id": "MDQ6VXNlcjUwMTkzNzMz", "avatar_url": "https://avatars2.githubusercontent.com/u/50193733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JanMatCodasip", "html_url": "https://github.com/JanMatCodasip", "followers_url": "https://api.github.com/users/JanMatCodasip/followers", "following_url": "https://api.github.com/users/JanMatCodasip/following{/other_user}", "gists_url": "https://api.github.com/users/JanMatCodasip/gists{/gist_id}", "starred_url": "https://api.github.com/users/JanMatCodasip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JanMatCodasip/subscriptions", "organizations_url": "https://api.github.com/users/JanMatCodasip/orgs", "repos_url": "https://api.github.com/users/JanMatCodasip/repos", "events_url": "https://api.github.com/users/JanMatCodasip/events{/privacy}", "received_events_url": "https://api.github.com/users/JanMatCodasip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-23T13:37:03Z", "updated_at": "2019-10-07T06:32:56Z", "closed_at": "2019-10-07T06:32:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there, please, any way how to stop `expect()` from consuming the input data when a match is encountered? Or an alternative way how to achieve the functionality ?\r\n\r\nLets assume the spawned child produces the following output:\r\n\r\n```\r\nCertain message 1\r\nCertain message 2\r\nprompt>\r\n```\r\n\r\nWhat I would like to do is to check for the presence of the messages one by one by multiple calls to `expect()`. \r\n\r\n```\r\nchild.expect(\"Certain message 1\")\r\nchild.expect(\"Certain message 2\")\r\nchild.expect(\"prompt>\")\r\n```\r\n\r\nThis of course does not work since the first `expect()` call consumes the whole input and leaves the rest of the output in `child.after`.\r\n\r\nWhat would help me would be e.g. an optional argument that would change the behavior or `expect()` so that it stops right after the match and leaves the rest of the input data for further processing (`child.after` would be empty).\r\n\r\n```\r\nchild.expect(\"Certain message 1\", stop_on_match=True)\r\nchild.expect(\"Certain message 2\", stop_on_match=True)\r\nchild.expect(\"prompt>\")\r\n```\r\n\r\nCan you recommend an alternative way how to achieve this functionality?\r\nOr would this feature be something that may potentially be included into Pexpect?\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/569", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/569/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/569/events", "html_url": "https://github.com/pexpect/pexpect/issues/569", "id": 449415446, "node_id": "MDU6SXNzdWU0NDk0MTU0NDY=", "number": 569, "title": "PopenSpawn.send() send using Windows keypress events", "user": {"login": "th3coop", "id": 655154, "node_id": "MDQ6VXNlcjY1NTE1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/655154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/th3coop", "html_url": "https://github.com/th3coop", "followers_url": "https://api.github.com/users/th3coop/followers", "following_url": "https://api.github.com/users/th3coop/following{/other_user}", "gists_url": "https://api.github.com/users/th3coop/gists{/gist_id}", "starred_url": "https://api.github.com/users/th3coop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/th3coop/subscriptions", "organizations_url": "https://api.github.com/users/th3coop/orgs", "repos_url": "https://api.github.com/users/th3coop/repos", "events_url": "https://api.github.com/users/th3coop/events{/privacy}", "received_events_url": "https://api.github.com/users/th3coop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-28T18:31:15Z", "updated_at": "2019-06-13T13:53:41Z", "closed_at": "2019-06-13T13:53:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm current using Pexpect to implement tests for a CLI tool.  On Windows I've come across an issue where the library we are using to receive input from an interactive user interprets Stdin based on keypress events from Windows.  I'm not clear what the motivation was for the library writer to do this but it obviously breaks when Pexpect writes direct to stdin of the spawned process.\r\n\r\nI'm wondering if the maintainers of pexpect have come across this use case before.  If yes, have you done any research into a viable solution yet?  Is there a plan to add support for this?  Any pointers or advice you could share on working though this issue so I can keep using Pexpect I'm currently attempting to use [pynput](https://pynput.readthedocs.io/en/latest/) to simulate keypress.  It's not working so far but I've only done a very basic trial.\r\n\r\nHope that makes sense.  Any input would be appreciate and thanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/567", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/567/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/567/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/567/events", "html_url": "https://github.com/pexpect/pexpect/issues/567", "id": 431922126, "node_id": "MDU6SXNzdWU0MzE5MjIxMjY=", "number": 567, "title": "AttributeError: 'module' object has no attribute 'spawn'", "user": {"login": "nagcassandra", "id": 13381570, "node_id": "MDQ6VXNlcjEzMzgxNTcw", "avatar_url": "https://avatars0.githubusercontent.com/u/13381570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagcassandra", "html_url": "https://github.com/nagcassandra", "followers_url": "https://api.github.com/users/nagcassandra/followers", "following_url": "https://api.github.com/users/nagcassandra/following{/other_user}", "gists_url": "https://api.github.com/users/nagcassandra/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagcassandra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagcassandra/subscriptions", "organizations_url": "https://api.github.com/users/nagcassandra/orgs", "repos_url": "https://api.github.com/users/nagcassandra/repos", "events_url": "https://api.github.com/users/nagcassandra/events{/privacy}", "received_events_url": "https://api.github.com/users/nagcassandra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-11T09:29:55Z", "updated_at": "2019-04-11T09:33:45Z", "closed_at": "2019-04-11T09:33:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello Team,\r\n\r\nI am facing below error in pexpect module in python 2.7 version (Windows 10), it's throwing 'Attribute Error'\r\n\r\nAttributeError: 'module' object has no attribute 'spawn'\r\n\r\nCan someone help to resolve the issue,\r\n\r\nThanks\r\nNagendra\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/565", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/565/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/565/events", "html_url": "https://github.com/pexpect/pexpect/issues/565", "id": 426495542, "node_id": "MDU6SXNzdWU0MjY0OTU1NDI=", "number": 565, "title": "4.7.0 is ready for release", "user": {"login": "Red-M", "id": 1468433, "node_id": "MDQ6VXNlcjE0Njg0MzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1468433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Red-M", "html_url": "https://github.com/Red-M", "followers_url": "https://api.github.com/users/Red-M/followers", "following_url": "https://api.github.com/users/Red-M/following{/other_user}", "gists_url": "https://api.github.com/users/Red-M/gists{/gist_id}", "starred_url": "https://api.github.com/users/Red-M/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Red-M/subscriptions", "organizations_url": "https://api.github.com/users/Red-M/orgs", "repos_url": "https://api.github.com/users/Red-M/repos", "events_url": "https://api.github.com/users/Red-M/events{/privacy}", "received_events_url": "https://api.github.com/users/Red-M/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-03-28T13:35:18Z", "updated_at": "2019-04-07T01:55:43Z", "closed_at": "2019-04-07T01:55:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Can you check that I haven't missed something and can we release this version?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/557", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/557/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/557/events", "html_url": "https://github.com/pexpect/pexpect/issues/557", "id": 413963402, "node_id": "MDU6SXNzdWU0MTM5NjM0MDI=", "number": 557, "title": "Wait until child calls read()?", "user": {"login": "alkisg", "id": 88025, "node_id": "MDQ6VXNlcjg4MDI1", "avatar_url": "https://avatars0.githubusercontent.com/u/88025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alkisg", "html_url": "https://github.com/alkisg", "followers_url": "https://api.github.com/users/alkisg/followers", "following_url": "https://api.github.com/users/alkisg/following{/other_user}", "gists_url": "https://api.github.com/users/alkisg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alkisg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alkisg/subscriptions", "organizations_url": "https://api.github.com/users/alkisg/orgs", "repos_url": "https://api.github.com/users/alkisg/repos", "events_url": "https://api.github.com/users/alkisg/events{/privacy}", "received_events_url": "https://api.github.com/users/alkisg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-25T07:12:09Z", "updated_at": "2019-07-07T10:11:58Z", "closed_at": "2019-02-25T15:10:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to translate an ssh login to a graphical application (display manager) login.\r\nThis cannot be easily done by \"expecting\" specific strings in the output, due to localized versions of messages like \"your password has expired, enter a new one:\".\r\n\r\nI want to wait until the ssh process tries to read() from the tty, at which point my process will get all the ssh output, isolate the last line (e.g. enter a new password), and show it as is to the GUI.\r\n\r\nSo my question is, **does the pexpect library have a hook for that? \"Wait until child calls read()\"?**\r\n\r\n**If not, here's an implementation idea:**\r\n- We create a new process group with a tty.\r\n- We run the ssh process as a **background** process in that group.\r\n- This will allow the ssh to write() to the tty, but will put it at a stopped state at the moment it tries to read() from it (SIGTTIN).\r\n- So our parent process can poll until ssh enters the stopped state, which would mean that it finished its output and is currently read()ing.\r\n\r\nIf the above idea is worth exploring, I could try contributing some code, even though I'm not very familiar with process and tty management.\r\n\r\nReferences: http://www.linusakesson.net/programming/tty/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/550", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/550/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/550/events", "html_url": "https://github.com/pexpect/pexpect/issues/550", "id": 399525905, "node_id": "MDU6SXNzdWUzOTk1MjU5MDU=", "number": 550, "title": "pxssh $TERM issue - error: TERM is not defined.\\r\\nTerminal type?", "user": {"login": "msharp9", "id": 15603354, "node_id": "MDQ6VXNlcjE1NjAzMzU0", "avatar_url": "https://avatars3.githubusercontent.com/u/15603354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msharp9", "html_url": "https://github.com/msharp9", "followers_url": "https://api.github.com/users/msharp9/followers", "following_url": "https://api.github.com/users/msharp9/following{/other_user}", "gists_url": "https://api.github.com/users/msharp9/gists{/gist_id}", "starred_url": "https://api.github.com/users/msharp9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msharp9/subscriptions", "organizations_url": "https://api.github.com/users/msharp9/orgs", "repos_url": "https://api.github.com/users/msharp9/repos", "events_url": "https://api.github.com/users/msharp9/events{/privacy}", "received_events_url": "https://api.github.com/users/msharp9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-15T20:40:16Z", "updated_at": "2019-03-23T04:57:53Z", "closed_at": "2019-03-23T04:57:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I kept receiving the above error.  Digging into the code pexpect/pexpect/pxssh.py.  I was able to fix this by changing line 308.\r\n\r\nfrom:\r\n        session_regex_array = [\"(?i)are you sure you want to continue connecting\", original_prompt, password_regex, \"(?i)permission denied\", \"(?i)terminal type\", TIMEOUT]\r\n to:\r\n        session_regex_array = [\"(?i)are you sure you want to continue connecting\", original_prompt, password_regex, \"(?i)permission denied\", \"(?i)[t|T]erminal type\", TIMEOUT]\r\n \r\nLet me know if you have questions.  Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/543", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/543/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/543/events", "html_url": "https://github.com/pexpect/pexpect/issues/543", "id": 375389930, "node_id": "MDU6SXNzdWUzNzUzODk5MzA=", "number": 543, "title": "issue importing pexpect into python", "user": {"login": "farhadkam", "id": 38544281, "node_id": "MDQ6VXNlcjM4NTQ0Mjgx", "avatar_url": "https://avatars3.githubusercontent.com/u/38544281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farhadkam", "html_url": "https://github.com/farhadkam", "followers_url": "https://api.github.com/users/farhadkam/followers", "following_url": "https://api.github.com/users/farhadkam/following{/other_user}", "gists_url": "https://api.github.com/users/farhadkam/gists{/gist_id}", "starred_url": "https://api.github.com/users/farhadkam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farhadkam/subscriptions", "organizations_url": "https://api.github.com/users/farhadkam/orgs", "repos_url": "https://api.github.com/users/farhadkam/repos", "events_url": "https://api.github.com/users/farhadkam/events{/privacy}", "received_events_url": "https://api.github.com/users/farhadkam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-10-30T09:20:29Z", "updated_at": "2020-05-31T00:18:26Z", "closed_at": "2019-09-22T09:55:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have already installed pexpect but I am not able to import it into python.\r\nCan anyone please assist me?\r\nThanks\r\nSome outputs:\r\n\r\n$ sudo -H  pip install pexpect                           \r\nRequirement already satisfied: pexpect in /usr/local/lib/python3.6/site-packages (4.6.0)\r\nRequirement already satisfied: ptyprocess>=0.5 in /usr/local/lib/python3.6/site-packages (from pexpect) (0.6.0)\r\n$ python\r\nPython 2.7.14 (default, Apr 25 2018, 15:22:05) \r\n[GCC 4.2.1 Compatible Apple LLVM 9.1.0 (clang-902.0.39.1)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pexpect\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nImportError: No module named pexpect", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/531", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/531/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/531/events", "html_url": "https://github.com/pexpect/pexpect/issues/531", "id": 361040766, "node_id": "MDU6SXNzdWUzNjEwNDA3NjY=", "number": 531, "title": "run_command throws a TypeError exception when passed bytes", "user": {"login": "ericshawlinux", "id": 8813974, "node_id": "MDQ6VXNlcjg4MTM5NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8813974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericshawlinux", "html_url": "https://github.com/ericshawlinux", "followers_url": "https://api.github.com/users/ericshawlinux/followers", "following_url": "https://api.github.com/users/ericshawlinux/following{/other_user}", "gists_url": "https://api.github.com/users/ericshawlinux/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericshawlinux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericshawlinux/subscriptions", "organizations_url": "https://api.github.com/users/ericshawlinux/orgs", "repos_url": "https://api.github.com/users/ericshawlinux/repos", "events_url": "https://api.github.com/users/ericshawlinux/events{/privacy}", "received_events_url": "https://api.github.com/users/ericshawlinux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-17T20:56:01Z", "updated_at": "2018-10-01T13:39:09Z", "closed_at": "2018-10-01T13:39:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently sending bytes to REPLWrapper causes a TypeError exception. I think that it should accept bytes.\r\n\r\n```python\r\n#!/usr/bin/python3\r\nfrom pexpect.replwrap import REPLWrapper\r\npy = REPLWrapper(\"python3\", \">>> \", None)\r\npy.run_command(b'\\x34\\x2b\\x37')\r\n```\r\n```Python traceback\r\nTraceback (most recent call last):\r\n  File \"./test.py\", line 6, in <module>\r\n    py.run_command(b'\\x34\\x2b\\x37')\r\n  File \"/usr/lib/python3/dist-packages/pexpect/replwrap.py\", line 82, in run_command\r\n    if command.endswith('\\n'):\r\nTypeError: endswith first arg must be bytes or a tuple of bytes, not str\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/523", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/523/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/523/events", "html_url": "https://github.com/pexpect/pexpect/issues/523", "id": 352160959, "node_id": "MDU6SXNzdWUzNTIxNjA5NTk=", "number": 523, "title": "\"test_before_across_chunks\" is failed", "user": {"login": "stanislavlevin", "id": 31205609, "node_id": "MDQ6VXNlcjMxMjA1NjA5", "avatar_url": "https://avatars2.githubusercontent.com/u/31205609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanislavlevin", "html_url": "https://github.com/stanislavlevin", "followers_url": "https://api.github.com/users/stanislavlevin/followers", "following_url": "https://api.github.com/users/stanislavlevin/following{/other_user}", "gists_url": "https://api.github.com/users/stanislavlevin/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanislavlevin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanislavlevin/subscriptions", "organizations_url": "https://api.github.com/users/stanislavlevin/orgs", "repos_url": "https://api.github.com/users/stanislavlevin/repos", "events_url": "https://api.github.com/users/stanislavlevin/events{/privacy}", "received_events_url": "https://api.github.com/users/stanislavlevin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-20T14:29:09Z", "updated_at": "2018-09-06T13:06:37Z", "closed_at": "2018-09-06T13:06:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Test \"test_before_across_chunks\" is failed with error message:\r\n```\r\n___________________ ExpectTestCase.test_before_across_chunks ___________________\r\n\r\nself = <tests.test_expect.ExpectTestCase testMethod=test_before_across_chunks>\r\n\r\n    def test_before_across_chunks(self):\r\n        # https://github.com/pexpect/pexpect/issues/478\r\n        child = pexpect.spawn(\r\n            '''/bin/bash -c \"openssl rand -base64 {} | head -500 | nl --number-format=rz --number-width=5 2>&1 ; echo 'PATTERN!!!'\"'''.format(1024 * 1024 * 2),\r\n            searchwindowsize=128\r\n        )\r\n        child.expect(['PATTERN'])\r\n>       assert len(child.before.splitlines()) == 500\r\nE       AssertionError: assert 502 == 500\r\n```\r\n\r\nOn some systems the following command output is differ from expected:\r\n```sh\r\nopenssl rand -base64 2097152 | head -n 500\r\n...\r\nY7lVPQF9lnUvt1lQeePlesLTsBTIWyZ99ARGpdbaWTsB7vpZbLpGTs/TXpbZh8SE\r\n140409058122752:error:02012020:system library:fflush:Broken pipe:bss_file.c:434:fflush()\r\n140409058122752:error:20074002:BIO routines:FILE_CTRL:system lib:bss_file.c:436:\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/521", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/521/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/521/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/521/events", "html_url": "https://github.com/pexpect/pexpect/issues/521", "id": 352153549, "node_id": "MDU6SXNzdWUzNTIxNTM1NDk=", "number": 521, "title": "\"test_bash\" is failed", "user": {"login": "stanislavlevin", "id": 31205609, "node_id": "MDQ6VXNlcjMxMjA1NjA5", "avatar_url": "https://avatars2.githubusercontent.com/u/31205609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanislavlevin", "html_url": "https://github.com/stanislavlevin", "followers_url": "https://api.github.com/users/stanislavlevin/followers", "following_url": "https://api.github.com/users/stanislavlevin/following{/other_user}", "gists_url": "https://api.github.com/users/stanislavlevin/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanislavlevin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanislavlevin/subscriptions", "organizations_url": "https://api.github.com/users/stanislavlevin/orgs", "repos_url": "https://api.github.com/users/stanislavlevin/repos", "events_url": "https://api.github.com/users/stanislavlevin/events{/privacy}", "received_events_url": "https://api.github.com/users/stanislavlevin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-20T14:12:16Z", "updated_at": "2018-09-06T13:08:52Z", "closed_at": "2018-09-06T13:08:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Some OS still use an old bash. And there is no builtin \"time\" command. For instance, fail case:\r\n```sh\r\nbash --version\r\nGNU bash, version 3.2.57(1)-release (x86_64-alt-linux-gnu)\r\n```\r\n```\r\ntype time\r\ntime is hashed (/usr/bin/time)\r\n```\r\n```\r\ntime\r\nUsage: time [-apvV] [-f format] [-o file] [--append] [--verbose]\r\n       [--portability] [--format=format] [--output=file] [--version]\r\n       [--quiet] [--help] command [arg...]\r\n```\r\nAnd of course, an error is here:\r\n```\r\ntests/test_expect.py:418: AssertionError\r\n----------------------------- Captured stdout call -----------------------------\r\n\r\n tests.test_expect.ExpectTestCase.test_before_across_chunks \r\n__________________________ REPLWrapTestCase.test_bash __________________________\r\n\r\nself = <tests.test_replwrap.REPLWrapTestCase testMethod=test_bash>\r\n\r\n    def test_bash(self):\r\n        bash = replwrap.bash()\r\n        res = bash.run_command(\"time\")\r\n>       assert 'real' in res, res\r\nE       AssertionError: Usage: time [-apvV] [-f format] [-o file] [--append] [--verbose]\r\nE                [--portability] [--format=format] [--output=file] [--version]\r\nE                [--quiet] [--help] command [arg...]\r\nE         \r\n\\n'      [--quiet] [--help] command [arg...]--output=file] [--version]-append] [--verbose]\r\n\r\ntests/test_replwrap.py:28: AssertionError\r\n```\r\n\r\nAnd for instance a success case:\r\n```sh\r\nbash --version\r\nGNU bash, version 4.4.23(1)-release (x86_64-redhat-linux-gnu)\r\n```\r\n```\r\ntype time\r\ntime is a shell keyword\r\n```\r\n```\r\ntime\r\n\r\nreal    0m0.000s\r\nuser    0m0.000s\r\nsys     0m0.000s\r\n```\r\n\r\nSo, of course, results are different.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/517", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/517/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/517/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/517/events", "html_url": "https://github.com/pexpect/pexpect/issues/517", "id": 347250813, "node_id": "MDU6SXNzdWUzNDcyNTA4MTM=", "number": 517, "title": "Receive bytes intead of str in `output_filter` under unicode encoding.", "user": {"login": "giovanism", "id": 18410908, "node_id": "MDQ6VXNlcjE4NDEwOTA4", "avatar_url": "https://avatars1.githubusercontent.com/u/18410908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giovanism", "html_url": "https://github.com/giovanism", "followers_url": "https://api.github.com/users/giovanism/followers", "following_url": "https://api.github.com/users/giovanism/following{/other_user}", "gists_url": "https://api.github.com/users/giovanism/gists{/gist_id}", "starred_url": "https://api.github.com/users/giovanism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giovanism/subscriptions", "organizations_url": "https://api.github.com/users/giovanism/orgs", "repos_url": "https://api.github.com/users/giovanism/repos", "events_url": "https://api.github.com/users/giovanism/events{/privacy}", "received_events_url": "https://api.github.com/users/giovanism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-03T03:57:26Z", "updated_at": "2019-05-16T09:58:44Z", "closed_at": "2019-05-16T09:58:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Based on this doc, I wrote my output_filter to match certain patterns.\r\n\r\n> You may pass in optional input and output filter functions. These\r\n> functions should take a string and return a string. The output_filter\r\n> will be passed all the output from the child process. The input_filter\r\n> will be passed all the keyboard input from the user. The input_filter\r\n> is run BEFORE the check for the escape_character.\r\n\r\nBut this is not the case when I run it under python3.\r\n\r\nI have to wrap around my output_filter using something like:\r\n```\r\ndef output_filter_utf8(out_raw):\r\n    return output_filter(out_raw.decode('utf-8')).encode('utf-8')\r\n```\r\n\r\nIt doesn't matter whether I pass `encoding='utf-8'` or not to `spawn`.\r\n\r\nMy error message:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.6/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/usr/lib64/python3.6/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/giovanism/Repos/garbage/pys/tsudo/tsudo/__main__.py\", line 4, in <module>\r\n    tsudo.main(sys.argv[1:])\r\n  File \"/home/giovanism/Repos/garbage/pys/tsudo/tsudo/tsudo.py\", line 15, in main\r\n    sudo.interact(output_filter=insults_filter)\r\n  File \"/home/giovanism/.local/lib/python3.6/site-packages/pexpect/pty_spawn.py\", line 766, in interact\r\n    self.__interact_copy(escape_character, input_filter, output_filter)\r\n  File \"/home/giovanism/.local/lib/python3.6/site-packages/pexpect/pty_spawn.py\", line 810, in __interact_copy\r\n    data = output_filter(data)\r\n  File \"/home/giovanism/Repos/garbage/pys/tsudo/tsudo/tsudo.py\", line 21, in insults_filter\r\n    if sudo_out == '\\r\\n' or attempts_up_pat.match(sudo_out):\r\nTypeError: cannot use a string pattern on a bytes-like object\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/508", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/508/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/508/events", "html_url": "https://github.com/pexpect/pexpect/issues/508", "id": 336225945, "node_id": "MDU6SXNzdWUzMzYyMjU5NDU=", "number": 508, "title": "except exception?", "user": {"login": "kw-andy", "id": 4679470, "node_id": "MDQ6VXNlcjQ2Nzk0NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4679470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kw-andy", "html_url": "https://github.com/kw-andy", "followers_url": "https://api.github.com/users/kw-andy/followers", "following_url": "https://api.github.com/users/kw-andy/following{/other_user}", "gists_url": "https://api.github.com/users/kw-andy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kw-andy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kw-andy/subscriptions", "organizations_url": "https://api.github.com/users/kw-andy/orgs", "repos_url": "https://api.github.com/users/kw-andy/repos", "events_url": "https://api.github.com/users/kw-andy/events{/privacy}", "received_events_url": "https://api.github.com/users/kw-andy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-27T13:17:45Z", "updated_at": "2018-06-28T17:41:10Z", "closed_at": "2018-06-28T17:41:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've created this function\r\n\r\n```python\r\ndef cre_file_conn(ip_addr,username,priv_keys):\r\n    try:\r\n        cmd = (\"ssh -i {} {}{}{}\").format(priv_keys,username,\"@\",ip_addr)\r\n        child = pexpect.spawn(cmd)\r\n        child.expect(username)\r\n        child.sendline('touch 123toto.txt')\r\n        child.expect(username) \r\n        child.sendline('exit')\r\n    except Exception as e:\r\n        print(str(e))       \r\n```\r\nThe `except Exception as e` works well. But I was not able to find the mention on the docs.\r\n\r\nWhat is the difference between `except Exception as e` and `except pexpect.EOF as e`?\r\n\r\nI know that `except pexpect.EOF as e` will try to catch all EOF. But how about `except Exception`?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/504", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/504/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/504/events", "html_url": "https://github.com/pexpect/pexpect/issues/504", "id": 335035084, "node_id": "MDU6SXNzdWUzMzUwMzUwODQ=", "number": 504, "title": "installing on synology nas?", "user": {"login": "3ntranced", "id": 33969999, "node_id": "MDQ6VXNlcjMzOTY5OTk5", "avatar_url": "https://avatars0.githubusercontent.com/u/33969999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3ntranced", "html_url": "https://github.com/3ntranced", "followers_url": "https://api.github.com/users/3ntranced/followers", "following_url": "https://api.github.com/users/3ntranced/following{/other_user}", "gists_url": "https://api.github.com/users/3ntranced/gists{/gist_id}", "starred_url": "https://api.github.com/users/3ntranced/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3ntranced/subscriptions", "organizations_url": "https://api.github.com/users/3ntranced/orgs", "repos_url": "https://api.github.com/users/3ntranced/repos", "events_url": "https://api.github.com/users/3ntranced/events{/privacy}", "received_events_url": "https://api.github.com/users/3ntranced/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-22T22:19:17Z", "updated_at": "2018-09-14T04:33:46Z", "closed_at": "2018-09-14T04:33:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can anyone help me install this on synology nas please?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/500", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/500/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/500/events", "html_url": "https://github.com/pexpect/pexpect/issues/500", "id": 330918516, "node_id": "MDU6SXNzdWUzMzA5MTg1MTY=", "number": 500, "title": "why this work line by line but not as a function", "user": {"login": "kw-andy", "id": 4679470, "node_id": "MDQ6VXNlcjQ2Nzk0NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4679470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kw-andy", "html_url": "https://github.com/kw-andy", "followers_url": "https://api.github.com/users/kw-andy/followers", "following_url": "https://api.github.com/users/kw-andy/following{/other_user}", "gists_url": "https://api.github.com/users/kw-andy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kw-andy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kw-andy/subscriptions", "organizations_url": "https://api.github.com/users/kw-andy/orgs", "repos_url": "https://api.github.com/users/kw-andy/repos", "events_url": "https://api.github.com/users/kw-andy/events{/privacy}", "received_events_url": "https://api.github.com/users/kw-andy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-09T20:53:46Z", "updated_at": "2018-06-10T13:45:02Z", "closed_at": "2018-06-10T13:45:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I'm using this , I can connect and I can create a file on my remote server\r\n\r\n```python\r\nchild = pexpect.spawn('ssh pi@192.168.1.32')\r\nchild.expect('password:')\r\nchild.sendline('XXX')\r\nchild.sendline('touch 123toto.txt')\r\nchild.sendline('exit') \r\n```\r\n\r\nHowever, when I'm doing that through a function, the file is not created.\r\n\r\n```python\r\ndef connect_wr():\r\n    child = pexpect.spawn('ssh pi@192.168.1.32')\r\n    child.expect('password:')\r\n    child.sendline('XXX')\r\n    child.sendline('touch 123toto.txt')\r\n    child.sendline('exit')\r\n```\r\n\r\nHow come?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/498", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/498/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/498/events", "html_url": "https://github.com/pexpect/pexpect/issues/498", "id": 330767762, "node_id": "MDU6SXNzdWUzMzA3Njc3NjI=", "number": 498, "title": "Bug in ssh_config handling", "user": {"login": "jamercee", "id": 1328402, "node_id": "MDQ6VXNlcjEzMjg0MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1328402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamercee", "html_url": "https://github.com/jamercee", "followers_url": "https://api.github.com/users/jamercee/followers", "following_url": "https://api.github.com/users/jamercee/following{/other_user}", "gists_url": "https://api.github.com/users/jamercee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamercee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamercee/subscriptions", "organizations_url": "https://api.github.com/users/jamercee/orgs", "repos_url": "https://api.github.com/users/jamercee/repos", "events_url": "https://api.github.com/users/jamercee/events{/privacy}", "received_events_url": "https://api.github.com/users/jamercee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-08T18:57:16Z", "updated_at": "2018-06-21T23:24:08Z", "closed_at": "2018-06-21T23:24:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a bug in how `pexpect.pxssh` handles the new `ssh_config` option commit 23f84c0fd845487da24d792d950f7da3b84c72be.  Line 326 needs a space before the '-F' option.\r\n\r\nIt should be:\r\n\r\n`ssh_options = ssh_options + ' -F ' + ssh_config\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/497", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/497/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/497/events", "html_url": "https://github.com/pexpect/pexpect/issues/497", "id": 330206968, "node_id": "MDU6SXNzdWUzMzAyMDY5Njg=", "number": 497, "title": "use pexpect.interact() log bug", "user": {"login": "whoami404", "id": 37037260, "node_id": "MDQ6VXNlcjM3MDM3MjYw", "avatar_url": "https://avatars3.githubusercontent.com/u/37037260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whoami404", "html_url": "https://github.com/whoami404", "followers_url": "https://api.github.com/users/whoami404/followers", "following_url": "https://api.github.com/users/whoami404/following{/other_user}", "gists_url": "https://api.github.com/users/whoami404/gists{/gist_id}", "starred_url": "https://api.github.com/users/whoami404/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whoami404/subscriptions", "organizations_url": "https://api.github.com/users/whoami404/orgs", "repos_url": "https://api.github.com/users/whoami404/repos", "events_url": "https://api.github.com/users/whoami404/events{/privacy}", "received_events_url": "https://api.github.com/users/whoami404/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-07T10:14:56Z", "updated_at": "2018-06-07T17:24:14Z", "closed_at": "2018-06-07T17:24:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "code\uff1a\r\n\r\n\r\n```\r\nimport pexpect\r\ndef test():\r\n    cmd = 'ssh root@10.10.10.60'\r\n    ssh = pexpect.spawn(cmd,maxread=1)\r\n    tmpfile = open('/tmp/log/ssh.log', 'w')\r\n    ssh.logfile = tmpfile\r\n    ssh.interact()\r\n\r\ntest()\r\n```\r\n\r\n/tmp/log/ssh.log\uff1a\r\n```\r\nShared connection to 10.10.10.60 closed.\r\nLast login: Sun Jun  3 07:41:30 2018 from 10.10.10.1\r\n[root@localhost ~]# wwhhooaammii\r\nroot\r\n\r\n\r\n```\r\ni'am input whoami\uff0cbut log file record wwhhooaammii\u3002\r\n\r\nenv\uff1a\r\nPython 2.7.10 \r\npexpect-4.4.0\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/496", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/496/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/496/events", "html_url": "https://github.com/pexpect/pexpect/issues/496", "id": 329107942, "node_id": "MDU6SXNzdWUzMjkxMDc5NDI=", "number": 496, "title": "Timeout on extremely large files", "user": {"login": "123troy", "id": 14335327, "node_id": "MDQ6VXNlcjE0MzM1MzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/14335327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/123troy", "html_url": "https://github.com/123troy", "followers_url": "https://api.github.com/users/123troy/followers", "following_url": "https://api.github.com/users/123troy/following{/other_user}", "gists_url": "https://api.github.com/users/123troy/gists{/gist_id}", "starred_url": "https://api.github.com/users/123troy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/123troy/subscriptions", "organizations_url": "https://api.github.com/users/123troy/orgs", "repos_url": "https://api.github.com/users/123troy/repos", "events_url": "https://api.github.com/users/123troy/events{/privacy}", "received_events_url": "https://api.github.com/users/123troy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-04T15:34:26Z", "updated_at": "2018-06-22T21:12:59Z", "closed_at": "2018-06-22T21:12:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am trying to do a cat on a file with 750,000 lines in it.  I have maxread set to 1,000,000 and the timeout set to 5 minutes.  However my script is timing out before this and only getting about 250,000 lines of it.\r\n\r\nAny thoughts?\r\n\r\nError\r\n----------------------------------------------------------------\r\nppexpect.exceptions.TIMEOUT: <pexpect.pty_spawn.spawn object at 0x7f3898bb1cc0>\r\ncommand: /bin/ssh\r\nargs: ['/bin/ssh', 'username@firewall1']\r\nbuffer (last 100 chars): b'\\n\\t\\t\\t\\t\\t:dual_wan (false)\\r\\n\\t\\t\\t\\t\\t:officialname (Vlan1001)\\r\\n\\t\\t\\t\\t\\t:monitored_by_cluster (false)\\r\\n\\t\\t\\t\\t\\t:an'\r\nbefore (last 100 chars): b'\\n\\t\\t\\t\\t\\t:dual_wan (false)\\r\\n\\t\\t\\t\\t\\t:officialname (Vlan1001)\\r\\n\\t\\t\\t\\t\\t:monitored_by_cluster (false)\\r\\n\\t\\t\\t\\t\\t:an'\r\nafter: <class 'pexpect.exceptions.TIMEOUT'>\r\nmatch: None\r\nmatch_index: None\r\nexitstatus: None\r\nflag_eof: False\r\npid: 24005\r\nchild_fd: 7\r\nclosed: False\r\ntimeout: 300\r\ndelimiter: <class 'pexpect.exceptions.EOF'>\r\nlogfile: <_io.BufferedWriter name='/opt/pexpext/output/firewall1.data'>\r\nlogfile_read: None\r\nlogfile_send: None\r\nmaxread: 1000000\r\nignorecase: False\r\nsearchwindowsize: None\r\ndelaybeforesend: 0.05\r\ndelayafterclose: 0.1\r\ndelayafterterminate: 0.1\r\nsearcher: searcher_re:\r\n    0: re.compile(\"b'\\\\S+]#'\")\r\n\r\nCode\r\n--------------------------------------------------------\r\n\r\n```python\r\n#!/usr/local/bin/python3\r\n#Using python 3.6.4 at the time of creation - 02/26/2018\r\n \r\nimport sys\r\nimport pexpect\r\nfrom pexpect import pxssh\r\nimport time\r\nimport subprocess\r\nimport pdb\r\n \r\nusername = 'username'\r\npassword = 'password'\r\n \r\nCWD = '/opt/pexpext'\r\nBIN = CWD+'/bin'\r\nDATA = CWD+'/data/firewall.commands'\r\nTMP = CWD+'/tmp/test.hosts'\r\n \r\nmax_retries = 3\r\n \r\nrouterFile = open(TMP,'r')\r\nrouteServers = [i for i in routerFile]\r\ncommandFile = open(DATA,'r')\r\ncommands = [i for i in commandFile]\r\n \r\npdb.set_trace()\r\nfor router in routeServers:\r\n  ##This strip is needed to remove any junk after the router name\r\n  router = router.strip()\r\n  print('####connecting to ', router)\r\n  for i in range(max_retries):\r\n    try:\r\n      s = pexpect.spawn('ssh '+username+'@'+router, maxread=1000000, timeout=300)\r\n      pattern_index = s.expect([\"The authenticity of host\", \"WARNING:\", \"word:\"])\r\n      if pattern_index == 0:\r\n        s.sendline('yes')\r\n        s.expect('word:')\r\n        s.sendline(password)\r\n      elif pattern_index == 1:\r\n        subprocess.call([\"ssh-keygen\", \"-R\", router])\r\n        subprocess.call([\"ssh-keyscan\", \"-H\", router, \">> ~/.ssh/known_hosts\"])\r\n        s.sendline()\r\n      elif pattern_index == 2:\r\n        s.sendline(password)\r\n        s.expect(r'\\S+]#')\r\n      for commanddata in commands:\r\n        commanddata = commanddata.strip()\r\n        command,outputext = commanddata.split('@')\r\n        fout = open(CWD+'/output/'+router+'.'+outputext, 'wb')\r\n        s.logfile = fout\r\n        s.send(command)\r\n        print(command)\r\n        s.send('\\r')\r\n        s.expect(r'\\S+]#')\r\n        #removes the ctrl+M that is added to the files\r\n        subprocess.call([BIN+'/firewall_cleanup.sh', CWD+'/output/'+router+'.'+outputext, command])\r\n    except pexpect.EOF:\r\n      print ('#####Retrying access to ' + router + '. Rety #' + str(i))\r\n      print (str(pexpect.EOF))\r\n      continue\r\n    except pexpect.TIMEOUT:\r\n      print ('#####Retrying access to ' + router + '. Rety #' + str(i))\r\n      print (str(pexpect.TIMEOUT))\r\n      continue\r\n    except Exception as e:\r\n      print ('!!!!!ERROR!!!!! Issue with host', router)\r\n      print (str(e))\r\n      s = None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/495", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/495/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/495/events", "html_url": "https://github.com/pexpect/pexpect/issues/495", "id": 326858377, "node_id": "MDU6SXNzdWUzMjY4NTgzNzc=", "number": 495, "title": "Pxssh and expect patterns", "user": {"login": "123troy", "id": 14335327, "node_id": "MDQ6VXNlcjE0MzM1MzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/14335327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/123troy", "html_url": "https://github.com/123troy", "followers_url": "https://api.github.com/users/123troy/followers", "following_url": "https://api.github.com/users/123troy/following{/other_user}", "gists_url": "https://api.github.com/users/123troy/gists{/gist_id}", "starred_url": "https://api.github.com/users/123troy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/123troy/subscriptions", "organizations_url": "https://api.github.com/users/123troy/orgs", "repos_url": "https://api.github.com/users/123troy/repos", "events_url": "https://api.github.com/users/123troy/events{/privacy}", "received_events_url": "https://api.github.com/users/123troy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2018-05-27T22:59:49Z", "updated_at": "2018-06-04T14:56:45Z", "closed_at": "2018-06-04T14:56:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have tried pexpect, but we have found pxssh to work better is our situation, but we are hitting a wall at one part.\r\n\r\nI am trying to connect to multiple versions of Cisco devices.  Some I have to enable, some use a '>' as a prompt and others just go to the '#' prompt.  Is there a way that we can create a expect pattern with pxssh as we can with pexpect?\r\n\r\nI would prefer to have one script running rather than having to specify which script to use with which host.\r\n\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/491", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/491/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/491/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/491/events", "html_url": "https://github.com/pexpect/pexpect/issues/491", "id": 324958468, "node_id": "MDU6SXNzdWUzMjQ5NTg0Njg=", "number": 491, "title": "child.expect() does not respect timeout when use_poll=True", "user": {"login": "ryanpetrello", "id": 214912, "node_id": "MDQ6VXNlcjIxNDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/214912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanpetrello", "html_url": "https://github.com/ryanpetrello", "followers_url": "https://api.github.com/users/ryanpetrello/followers", "following_url": "https://api.github.com/users/ryanpetrello/following{/other_user}", "gists_url": "https://api.github.com/users/ryanpetrello/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanpetrello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanpetrello/subscriptions", "organizations_url": "https://api.github.com/users/ryanpetrello/orgs", "repos_url": "https://api.github.com/users/ryanpetrello/repos", "events_url": "https://api.github.com/users/ryanpetrello/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanpetrello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-21T15:28:05Z", "updated_at": "2018-05-24T08:19:41Z", "closed_at": "2018-05-24T08:19:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Run the following Python script that _should_ time out after five seconds:\r\n\r\n```python\r\nimport pexpect\r\npatterns = {\r\n    pexpect.TIMEOUT: None,\r\n    pexpect.EOF: None\r\n}\r\nchild = pexpect.spawn('sleep', ['100'], ignore_sighup=True, use_poll=True)\r\nwhile child.isalive():\r\n    child.expect([], timeout=5, searchwindowsize=100)\r\n```\r\n\r\nIf you _remove_ the `use_poll=True` argument to `spawn()`, then the `expect()` times out as expected.\r\n\r\nrelated: https://github.com/pexpect/pexpect/pull/474", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/489", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/489/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/489/events", "html_url": "https://github.com/pexpect/pexpect/issues/489", "id": 322495639, "node_id": "MDU6SXNzdWUzMjI0OTU2Mzk=", "number": 489, "title": "How to use .login with a ssh key?", "user": {"login": "kw-andy", "id": 4679470, "node_id": "MDQ6VXNlcjQ2Nzk0NzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4679470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kw-andy", "html_url": "https://github.com/kw-andy", "followers_url": "https://api.github.com/users/kw-andy/followers", "following_url": "https://api.github.com/users/kw-andy/following{/other_user}", "gists_url": "https://api.github.com/users/kw-andy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kw-andy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kw-andy/subscriptions", "organizations_url": "https://api.github.com/users/kw-andy/orgs", "repos_url": "https://api.github.com/users/kw-andy/repos", "events_url": "https://api.github.com/users/kw-andy/events{/privacy}", "received_events_url": "https://api.github.com/users/kw-andy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-12T09:04:01Z", "updated_at": "2018-05-21T19:35:16Z", "closed_at": "2018-05-21T19:35:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to connect to a ssh server on which I have set a public key.\r\n\r\nI have my private keys on the folder ` /home/XXX/priv_keys` but I'm not sure on how to use it with the `login` module.\r\n\r\nThe doc gives me this \r\n\r\n```\r\nSet ssh_key to True to force passing the current SSH authentication socket to the to the desired hostname.\r\n```\r\n\r\nBut eventually, pexpect still ask me for the password, which is deactivated on my distant server.\r\n\r\nThis is the code I've tried\r\n\r\n```\r\nfrom pexpect import pxssh\r\nimport getpass\r\ntry:\r\n    s = pxssh.pxssh()\r\n    hostname = '1xx.138.12.xx'\r\n    username = 'and_wk'\r\n    s.login(hostname, username, '/home/XXX/priv_keys', True) # the path with the private keys has been used instead of the password and the ssh_key has been set to True  \r\n    s.sendline('uptime')   # run a command\r\n    s.prompt()             # match the prompt\r\n    print(s.before.decode())        # print everything before the prompt.](url)\r\n```\r\n\r\nThanks in advance for any help\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/488", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/488/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/488/events", "html_url": "https://github.com/pexpect/pexpect/issues/488", "id": 317122215, "node_id": "MDU6SXNzdWUzMTcxMjIyMTU=", "number": 488, "title": "Wrong value for crlf when using PopenSpawn", "user": {"login": "jeberger", "id": 930717, "node_id": "MDQ6VXNlcjkzMDcxNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/930717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeberger", "html_url": "https://github.com/jeberger", "followers_url": "https://api.github.com/users/jeberger/followers", "following_url": "https://api.github.com/users/jeberger/following{/other_user}", "gists_url": "https://api.github.com/users/jeberger/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeberger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeberger/subscriptions", "organizations_url": "https://api.github.com/users/jeberger/orgs", "repos_url": "https://api.github.com/users/jeberger/repos", "events_url": "https://api.github.com/users/jeberger/events{/privacy}", "received_events_url": "https://api.github.com/users/jeberger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-24T08:30:52Z", "updated_at": "2018-05-23T19:40:37Z", "closed_at": "2018-05-23T19:40:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `PopenSpawn`, `crlf` should be set depending on the OS. However there are two issues in the current code:\r\n\r\n- `crlf` is hardcoded to `\\n` in the declaration of `PopenSpawn`, which is wrong on Windows.\r\n- but anyway `crlf` is overwritten in the `SpawnBase` constructor so it is always set to `\\r\\n`, which is wrong on Unix systems.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/487", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/487/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/487/events", "html_url": "https://github.com/pexpect/pexpect/issues/487", "id": 316190476, "node_id": "MDU6SXNzdWUzMTYxOTA0NzY=", "number": 487, "title": "pexpect.which() is matching against directories", "user": {"login": "haridsv", "id": 166486, "node_id": "MDQ6VXNlcjE2NjQ4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/166486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haridsv", "html_url": "https://github.com/haridsv", "followers_url": "https://api.github.com/users/haridsv/followers", "following_url": "https://api.github.com/users/haridsv/following{/other_user}", "gists_url": "https://api.github.com/users/haridsv/gists{/gist_id}", "starred_url": "https://api.github.com/users/haridsv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haridsv/subscriptions", "organizations_url": "https://api.github.com/users/haridsv/orgs", "repos_url": "https://api.github.com/users/haridsv/repos", "events_url": "https://api.github.com/users/haridsv/events{/privacy}", "received_events_url": "https://api.github.com/users/haridsv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-04-20T09:15:35Z", "updated_at": "2018-04-23T13:26:20Z", "closed_at": "2018-04-23T13:26:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have two entries in `PATH`, `~/bin` followed by `~/bin/python/bin` (a virtualenv). When I call `pexpect.which(\"python\")`, I get `~/bin/python` as the result, which is a directory. The expected result should have been `~/bin/python/bin/python`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/483", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/483/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/483/events", "html_url": "https://github.com/pexpect/pexpect/issues/483", "id": 311155623, "node_id": "MDU6SXNzdWUzMTExNTU2MjM=", "number": 483, "title": "prompt not returning - debug advice needed", "user": {"login": "ianmiell", "id": 7003341, "node_id": "MDQ6VXNlcjcwMDMzNDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7003341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianmiell", "html_url": "https://github.com/ianmiell", "followers_url": "https://api.github.com/users/ianmiell/followers", "following_url": "https://api.github.com/users/ianmiell/following{/other_user}", "gists_url": "https://api.github.com/users/ianmiell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianmiell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianmiell/subscriptions", "organizations_url": "https://api.github.com/users/ianmiell/orgs", "repos_url": "https://api.github.com/users/ianmiell/repos", "events_url": "https://api.github.com/users/ianmiell/events{/privacy}", "received_events_url": "https://api.github.com/users/ianmiell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-04T09:38:04Z", "updated_at": "2018-04-09T15:52:30Z", "closed_at": "2018-04-09T15:52:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been trying to debug this for a long time and got nowhere.\r\n\r\nOn my mac, I get a behaviour intermittently where the prompt does not appear in the output.\r\n\r\nI have added pauses directly to the code before and after the send, viz:\r\n\r\n```\r\n                                                                                                                                                                                                           \r\n        Canonical input processing may be disabled altogether by executing                                                                                                                                 \r\n        a shell, then stty(1), before executing the final program::                                                                                                                                        \r\n                                                                                                                                                                                                           \r\n            >>> bash = pexpect.spawn('/bin/bash', echo=False)                                                                                                                                              \r\n            >>> bash.sendline('stty -icanon')                                                                                                                                                              \r\n            >>> bash.sendline('base64')                                                                                                                                                                    \r\n            >>> bash.sendline('x' * 5000)                                                                                                                                                                  \r\n        '''                                                                                                                                                                                                \r\n                                                                                                                                                                                                           \r\n        import time                                                                                                                                                                                        \r\n        if self.delaybeforesend is not None:                                                                                                                                                               \r\n            time.sleep(self.delaybeforesend)                                                                                                                                                               \r\n        time.sleep(0.2)                                                                                                                                                                                    \r\n        s = self._coerce_send_string(s)                                                                                                                                                                    \r\n        self._log(s, 'send')                                                                                                                                                                               \r\n                                                                                                                                                                                                           \r\n        b = self._encoder.encode(s, final=False)                                                                                                                                                           \r\n        ret = os.write(self.child_fd, b)                                                                                                                                                                   \r\n        time.sleep(0.2)                                                                                                                                                                                    \r\n        return ret \r\n```\r\n\r\nto no avail.\r\n\r\nThis is some sample output (I added prints to 'incoming' in the pexpect code within the while loop):\r\n\r\n```\r\n    def expect_loop(self, timeout=-1):                                                                                                                                                                     \r\n        \"\"\"Blocking expect\"\"\"                                                                                                                                                                              \r\n        spawn = self.spawn                                                                                                                                                                                 \r\n                                                                                                                                                                                                           \r\n        if timeout is not None:                                                                                                                                                                            \r\n            end_time = time.time() + timeout                                                                                                                                                               \r\n                                                                                                                                                                                                           \r\n        try:                                                                                                                                                                                               \r\n            incoming = spawn.buffer                                                                                                                                                                        \r\n            spawn._buffer = spawn.buffer_type()                                                                                                                                                            \r\n            while True:                                                                                                                                                                                    \r\n                idx = self.new_data(incoming)                                                                                                                                                              \r\n                print incoming                                                                                                                                                                             \r\n                # Keep reading until exception or return.                                                                                                                                                  \r\n                if idx is not None:                                                                                                                                                                        \r\n                    return idx                                                                                                                                                                             \r\n                # No match at this point                                                                                                                                                                   \r\n                if (timeout is not None) and (timeout < 0):                                                                                                                                                \r\n                    return self.timeout()                                                                                                                                                                  \r\n                # Still have time left, so read more data                                                                                                                                                  \r\n                incoming = spawn.read_nonblocking(spawn.maxread, timeout)                                                                                                                                  \r\n                if self.spawn.delayafterread is not None:                                                                                                                                                  \r\n                    time.sleep(self.spawn.delayafterread)                                                                                                                                                  \r\n                if timeout is not None:                                                                                                                                                                    \r\n                    timeout = end_time - time.time()      \r\n```\r\n\r\nAs you can see, the prompt doesn't return:\r\n\r\n\r\n```\r\n8d5554211d73:shutit.tk.setup:pArM8Orn# \r\n\r\n test -d /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522833993.94.941036/environment_id && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\nFILEXIST-FILFIN\r\n8d5554211d73:shutit.tk.setup:pArM8Orn# \r\n\r\n test -d /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522833993.94.941036/environment_id && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\nFILEXIST-FILFIN\r\n8d5554211d73:shutit.tk.setup:pArM8Orn# \r\n\r\n command ls /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522833993.94.941036/environment_id\r\nJ5s4rTiY\r\n8d5554211d73:shutit.tk.setup:pArM8Orn# \r\n\r\ncd\r\n8d5554211d73:shutit.tk.setup:pArM8Orn# \r\n2018-04-04 10:27:21,442 INFO: Building ShutIt module: shutit.tk.setup with run order: 0\r\n\r\n command whoami\r\nroot\r\n8d5554211d73:shutit.tk.setup:pArM8Orn# \r\n\r\n test -a /root/.bashrc && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\nFILEXIST-FILFIN\r\n8d5554211d73:shutit.tk.setup:pArM8Orn# \r\n\r\n command -V base64 >/dev/null\r\n\r\n command -V base64 >/dev/null\r\n\r\n command -V base64 >/dev/null\r\n\r\n command -V base64 >/dev/null\r\n\r\n command -V base64 >/dev/null\r\n\r\n command -V base64 >/dev/null\r\n\r\n[etc]\r\n```\r\n\r\nI'm trying to find the root cause for this - do you have any advice for how to debug, as I'm out of ideas.\r\n\r\nNB it's not always the same command, eg\r\n\r\n```\r\n export PS1_fQD5cwR3=$PS1 && PS1='tk''.shutit.git_rebase_tutorial:mcXnXMPM# ' && unset PROMPT_COMMAND\r\ntk.shutit.git_rebase_tutorial:mcXnXMPM# \r\n\r\nstty cols 65535\r\ntk.shutit.git_rebase_tutorial:mcXnXMPM# \r\n\r\nstty rows 65535\r\ntk.shutit.git_rebase_tutorial:mcXnXMPM# \r\n\r\n if [ $TERM=dumb ];then export TERM=xterm;fi\r\ntk.shutit.git_rebase_tutorial:mcXnXMPM# \r\n\r\n if [ $(echo $SHELL) == '/bin/bash' ]; then echo $HOSTNAME; elif [ $(command hostname 2>/dev/null) != '' ]; then hostname -s; fi\r\nc6e7df108103\r\ntk.shutit.git_rebase_tutorial:mcXnXMPM# \r\n\r\n PS1='c6''e7df108103:tk.shutit.git_rebase_tutorial:mcXnXMPM# '\r\nc6e7df108103:tk.shutit.git_rebase_tutorial:mcXnXMPM# \r\n\r\n echo EXIT_CODE:$?\r\nEXIT_CODE:0\r\nc6e7df108103:tk.shutit.git_rebase_tutorial:mcXnXMPM# \r\n\r\n command export HISTCONTROL=$HISTCONTROL:ignoredups:ignorespace\r\nc6e7df108103:tk.shutit.git_rebase_tutorial:mcXnXMPM# \r\n\r\n echo EXIT_CODE:$?\r\nEXIT_CODE:0\r\nc6e7df108103:tk.shutit.git_rebase_tutorial:mcXnXMPM# \r\n\r\n test -d /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522834581.0.393/environment_id && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\n\r\n test -d /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522834581.0.393/environment_id && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\n\r\n test -d /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522834581.0.393/environment_id && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\n\r\n test -d /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522834581.0.393/environment_id && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\n\r\n test -d /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522834581.0.393/environment_id && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\n\r\n test -d /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522834581.0.393/environment_id && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\n\r\n test -d /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522834581.0.393/environment_id && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\n\r\n test -d /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522834581.0.393/environment_id && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\n\r\n test -d /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522834581.0.393/environment_id && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\n\r\n test -d /tmp/shutit_imiell/Ians-Air-2.home_imiell_1522834581.0.393/environment_id && echo FILEXIST-\"\"FILFIN || echo FILNEXIST-\"\"FILFIN\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/478", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/478/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/478/events", "html_url": "https://github.com/pexpect/pexpect/issues/478", "id": 308853396, "node_id": "MDU6SXNzdWUzMDg4NTMzOTY=", "number": 478, "title": "'spawn.before' is truncated when using a 'searchwindowsize'", "user": {"login": "alirez", "id": 806984, "node_id": "MDQ6VXNlcjgwNjk4NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/806984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alirez", "html_url": "https://github.com/alirez", "followers_url": "https://api.github.com/users/alirez/followers", "following_url": "https://api.github.com/users/alirez/following{/other_user}", "gists_url": "https://api.github.com/users/alirez/gists{/gist_id}", "starred_url": "https://api.github.com/users/alirez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alirez/subscriptions", "organizations_url": "https://api.github.com/users/alirez/orgs", "repos_url": "https://api.github.com/users/alirez/repos", "events_url": "https://api.github.com/users/alirez/events{/privacy}", "received_events_url": "https://api.github.com/users/alirez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-27T07:35:33Z", "updated_at": "2018-03-29T14:07:24Z", "closed_at": "2018-03-29T14:07:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "When `searchwindowsize` is non-default, `spawn.before` no longer contains all the text up to the matched pattern.\r\n\r\nThe behavior seems to have changed after fd7332f5. Below is a quick demonstration of the issue.\r\n\r\nThe spawned shell prints out 500 lines and then the word PATTERN. It worked as expected before the above commit, i.e. 500 lines where in `.before` after the pattern matched.\r\n```\r\n$ git checkout fd7332f5~1 >& /dev/null\r\n$ python\r\nPython 2.7.13 (default, Nov 24 2017, 17:33:09)\r\n[GCC 6.3.0 20170516] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pexpect\r\n>>> child = pexpect.spawn('''/bin/bash -c \"openssl rand -base64 {} | head -500 | nl --number-format=rz --number-width=5 2>&1 ; echo 'PATTERN'\"'''.format(1024 * 1024 * 2), searchwindowsize=128)\r\n>>> child.expect(['PATTERN'])\r\n0\r\n>>> print(len(child.before.splitlines()))\r\n500\r\n```\r\n\r\nHowever, on fd7332f5:\r\n```\r\n$ git checkout fd7332f5 >& /dev/null\r\n$ python\r\nPython 2.7.13 (default, Nov 24 2017, 17:33:09)\r\n[GCC 6.3.0 20170516] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pexpect\r\n>>> child = pexpect.spawn('''/bin/bash -c \"openssl rand -base64 {} | head -500 | nl --number-format=rz --number-width=5 2>&1 ; echo 'PATTERN'\"'''.format(1024 * 1024 * 2), searchwindowsize=128)\r\n>>> child.expect(['PATTERN'])\r\n0\r\n>>> print(len(child.before.splitlines()))\r\n8\r\n```\r\nOnly a fraction of the actual output is stored in `.before`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/471", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/471/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/471/events", "html_url": "https://github.com/pexpect/pexpect/issues/471", "id": 304647777, "node_id": "MDU6SXNzdWUzMDQ2NDc3Nzc=", "number": 471, "title": "Mulitple ssh on pexpect/pxssh?", "user": {"login": "darath2000", "id": 33050953, "node_id": "MDQ6VXNlcjMzMDUwOTUz", "avatar_url": "https://avatars2.githubusercontent.com/u/33050953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darath2000", "html_url": "https://github.com/darath2000", "followers_url": "https://api.github.com/users/darath2000/followers", "following_url": "https://api.github.com/users/darath2000/following{/other_user}", "gists_url": "https://api.github.com/users/darath2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/darath2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darath2000/subscriptions", "organizations_url": "https://api.github.com/users/darath2000/orgs", "repos_url": "https://api.github.com/users/darath2000/repos", "events_url": "https://api.github.com/users/darath2000/events{/privacy}", "received_events_url": "https://api.github.com/users/darath2000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-13T06:56:22Z", "updated_at": "2018-03-30T00:57:45Z", "closed_at": "2018-03-30T00:57:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to do multiple ssh in pexpect or pxssh?\r\nWhat I'm trying to do was to ssh to a server and then from that server ssh to another server.\r\n**ssh server1 -> do some commands -> ssh server2 -> do some commands.**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/465", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/465/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/465/events", "html_url": "https://github.com/pexpect/pexpect/issues/465", "id": 292119662, "node_id": "MDU6SXNzdWUyOTIxMTk2NjI=", "number": 465, "title": "second call to spawn always hangs if SIGWINCH is handled", "user": {"login": "garfieldnate", "id": 778453, "node_id": "MDQ6VXNlcjc3ODQ1Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/778453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garfieldnate", "html_url": "https://github.com/garfieldnate", "followers_url": "https://api.github.com/users/garfieldnate/followers", "following_url": "https://api.github.com/users/garfieldnate/following{/other_user}", "gists_url": "https://api.github.com/users/garfieldnate/gists{/gist_id}", "starred_url": "https://api.github.com/users/garfieldnate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garfieldnate/subscriptions", "organizations_url": "https://api.github.com/users/garfieldnate/orgs", "repos_url": "https://api.github.com/users/garfieldnate/repos", "events_url": "https://api.github.com/users/garfieldnate/events{/privacy}", "received_events_url": "https://api.github.com/users/garfieldnate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-01-27T12:56:12Z", "updated_at": "2018-02-10T12:03:34Z", "closed_at": "2018-02-10T12:03:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The below program always hangs on the second call to `spawn()`:\r\n\r\n    p = None\r\n    def sigwinch_passthrough (sig, data):\r\n        s = struct.pack(\"HHHH\", 0, 0, 0, 0)\r\n        a = struct.unpack('hhhh', fcntl.ioctl(sys.stdout.fileno(),\r\n            termios.TIOCGWINSZ , s))\r\n        global p\r\n        p.setwinsize(a[0],a[1])\r\n\r\n    def run_less():\r\n        global p\r\n        p = pexpect.spawn(f'/bin/bash -c \"echo hello | less\"')\r\n        signal.signal(signal.SIGWINCH, sigwinch_passthrough)\r\n        p.interact()\r\n        p.wait()\r\n        p.close(force=False)\r\n        print(p.exitstatus, p.signalstatus) # prints '0 None'\r\n\r\n    run_less()\r\n    run_less() # hangs here\r\n\r\nIf you remove the SIGWINCH handler, then both calls run successfully. I'm not very familiar with the mechanics of how this happens, but the SIGWINCH handler is suggested in the documentation, which seems problematic in this case.\r\n\r\nUsing Python 3.6.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/463", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/463/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/463/events", "html_url": "https://github.com/pexpect/pexpect/issues/463", "id": 285620939, "node_id": "MDU6SXNzdWUyODU2MjA5Mzk=", "number": 463, "title": "send str loss a ~", "user": {"login": "flyl3una", "id": 22714228, "node_id": "MDQ6VXNlcjIyNzE0MjI4", "avatar_url": "https://avatars1.githubusercontent.com/u/22714228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flyl3una", "html_url": "https://github.com/flyl3una", "followers_url": "https://api.github.com/users/flyl3una/followers", "following_url": "https://api.github.com/users/flyl3una/following{/other_user}", "gists_url": "https://api.github.com/users/flyl3una/gists{/gist_id}", "starred_url": "https://api.github.com/users/flyl3una/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flyl3una/subscriptions", "organizations_url": "https://api.github.com/users/flyl3una/orgs", "repos_url": "https://api.github.com/users/flyl3una/repos", "events_url": "https://api.github.com/users/flyl3una/events{/privacy}", "received_events_url": "https://api.github.com/users/flyl3una/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-03T08:09:41Z", "updated_at": "2018-02-10T12:04:45Z", "closed_at": "2018-02-10T12:04:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "code\r\n```\r\n#! /usr/bin/python3\r\n\r\nimport pexpect\r\n\r\nif __name__ == '__main__':\r\n    connector = pexpect.spawn('ssh root@172.16.152.26')\r\n    prompts_list = [\"(?i)you sure you want to continue connecting\",\r\n                    \"(?i)(password:)|(?:passphrase for key)\",\r\n                    \"(?i)permission denied\",\r\n                    \"(?i)terminal type\",\r\n                    pexpect.TIMEOUT,\r\n                    \"(?i)connection closed by remote host\",\r\n                    \"(?i)Username:\"]\r\n    i = connector.expect(prompts_list)\r\n    if i == 1:\r\n        connector.sendline('6666')\r\n    checklist = ['root@ubuntu:~# ',\r\n                 pexpect.TIMEOUT,\r\n                 pexpect.EOF]\r\n    i = connector.expect(checklist)\r\n    connector.sendline('LANG=zh_CN.utf8')\r\n    checklist = ['root@ubuntu:~# ',\r\n                 pexpect.TIMEOUT,\r\n                 pexpect.EOF]\r\n    i = connector.expect(checklist)\r\n    connector.sendline('~~~123456')\r\n    checklist = ['root@ubuntu:~# ',\r\n                 '(?i)Enter new UNIX password: ',\r\n                 '(?i)Retype new UNIX password: ',\r\n                 pexpect.TIMEOUT,\r\n                 pexpect.EOF]\r\n    i = connector.expect(checklist, timeout=5)\r\n    before = connector.before.decode('utf8')\r\n    print(before)\r\n```\r\n\r\nprint result:\r\n```\r\n~~123456\r\n~~123456: command not found\r\n```\r\n\r\n**description**\r\n\r\nI create a spawn and ssh connect remote computer. then use connector.send or sendline send my string to ssh connector. If it contain greater than or equal to two `~` at the beginning of the string. it can missing a `~`.\r\n\r\neg:\r\nsend: ~~~123456\r\nrecv:  ~~123456\r\n\r\nmy test env: \r\npexpect 3.1 and 4.3.1\r\npython2.6 and 3.6\r\nsystem:centos7.2/6.5, ubuntu16.04, kali2016.1\r\n\r\n> If I use telnet connect remote computer, the string haven't missing\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/461", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/461/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/461/events", "html_url": "https://github.com/pexpect/pexpect/issues/461", "id": 284116923, "node_id": "MDU6SXNzdWUyODQxMTY5MjM=", "number": 461, "title": "pexpect.sendline() not always working", "user": {"login": "TomW28", "id": 23631578, "node_id": "MDQ6VXNlcjIzNjMxNTc4", "avatar_url": "https://avatars0.githubusercontent.com/u/23631578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomW28", "html_url": "https://github.com/TomW28", "followers_url": "https://api.github.com/users/TomW28/followers", "following_url": "https://api.github.com/users/TomW28/following{/other_user}", "gists_url": "https://api.github.com/users/TomW28/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomW28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomW28/subscriptions", "organizations_url": "https://api.github.com/users/TomW28/orgs", "repos_url": "https://api.github.com/users/TomW28/repos", "events_url": "https://api.github.com/users/TomW28/events{/privacy}", "received_events_url": "https://api.github.com/users/TomW28/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-22T09:39:34Z", "updated_at": "2017-12-22T13:40:52Z", "closed_at": "2017-12-22T13:40:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run some Fortran code from Python 3.6.4 that requires three typed user inputs while running. I'm using pexpect to do this, and it's working as expected for the first two inputs. However the third time, when I use pexpect.sendline('0'), it seems to send a blank line which isn't much use as the program needs to receive '0' or '1'. This is the code I have:\r\n\r\n       scattering = 0  # Defined in the function arguments\r\n\r\n        v_turb = str(v_turb)\r\n        scattering = str(scattering)\r\n        model_name = str(\"MODELS/\" + str(model_name))\r\n\r\n        formal_integral_executable = str(\"./pformalsol_\" + str(model_type) + \".eo\")\r\n\r\n        formal_integral = pexpect.spawn(formal_integral_executable)\r\n        formal_integral.logfile_read = sys.stdout.buffer\r\n\r\n        formal_integral.expect('FORMAL')\r\n        formal_integral.sendline(model_name)\r\n\r\n        formal_integral.expect(\"VTURB\")\r\n        formal_integral.sendline(v_turb)\r\n\r\n        formal_integral.expect(\"IESCAT\")\r\n        formal_integral.sendline(scattering)\r\n\r\nThis is the output I get:\r\n\r\n         GIVE IN CATALOGUE NAME FOR FORMAL CALC.\r\n        MODELS/Testing\r\n         GIVE IN VTURB. (KM/S)\r\n        10.0\r\n         GIVE IN IESCAT (=0, NO; = 1 WITH ESCAT)\r\n\r\n        ... the rest of my script output ...\r\n\r\nSo it's correctly using sendline() to send the first two values, but sending a blank line for the third. I have tried using just `formal_integral.sendline('0')` and using `formal_integral.send('0')`. Both have identical results to the block of code above. I've also tried sending other strings that aren't '0' or '1', but no joy with them either, which I guess means that this particular calling of sendline() just isn't working.\r\n\r\nAny ideas on if this is a problem with pexpect or is it to do with how I'm using it?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/455", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/455/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/455/events", "html_url": "https://github.com/pexpect/pexpect/issues/455", "id": 273472609, "node_id": "MDU6SXNzdWUyNzM0NzI2MDk=", "number": 455, "title": "TypeError: 'EOF' object is not callable", "user": {"login": "nehaljwani", "id": 1779189, "node_id": "MDQ6VXNlcjE3NzkxODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1779189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nehaljwani", "html_url": "https://github.com/nehaljwani", "followers_url": "https://api.github.com/users/nehaljwani/followers", "following_url": "https://api.github.com/users/nehaljwani/following{/other_user}", "gists_url": "https://api.github.com/users/nehaljwani/gists{/gist_id}", "starred_url": "https://api.github.com/users/nehaljwani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nehaljwani/subscriptions", "organizations_url": "https://api.github.com/users/nehaljwani/orgs", "repos_url": "https://api.github.com/users/nehaljwani/repos", "events_url": "https://api.github.com/users/nehaljwani/events{/privacy}", "received_events_url": "https://api.github.com/users/nehaljwani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-13T15:36:07Z", "updated_at": "2017-11-13T17:34:23Z", "closed_at": "2017-11-13T17:28:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With the latest release of pexpect (4.3.0), I am seeing a very strange error:\r\n(I added three debug statements)\r\n```\r\n        try:\r\n>           child.expect(\".\", timeout=0.90)\r\n\r\nxxxxx/yyyyy:183: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n../../../../some-path-here/lib/python2.7/site-packages/pexpect/spawnbase.py:327: in expect\r\n    timeout, searchwindowsize, async_)\r\n../../../../some-path-here/lib/python2.7/site-packages/pexpect/spawnbase.py:355: in expect_list\r\n    return exp.expect_loop(timeout)\r\n../../../../some-path-here/lib/python2.7/site-packages/pexpect/expect.py:109: in expect_loop\r\n    return self.timeout(e)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <pexpect.expect.Expecter object at 0x2417510>, err = TIMEOUT('Timeout exceeded.',)\r\n\r\n    def timeout(self, err=None):\r\n        spawn = self.spawn\r\n        from . import TIMEOUT\r\n        print type(TIMEOUT)\r\n    \r\n        spawn.before = spawn.buffer\r\n        spawn.after = TIMEOUT\r\n        index = self.searcher.timeout_index\r\n        if index >= 0:\r\n            spawn.match = TIMEOUT\r\n            spawn.match_index = index\r\n            return index\r\n        else:\r\n            spawn.match = None\r\n            spawn.match_index = None\r\n            msg = str(spawn)\r\n            msg += '\\nsearcher: %s' % self.searcher\r\n            if err is not None:\r\n                msg = str(err) + '\\n' + msg\r\n            print type(msg)\r\n            print type(TIMEOUT)\r\n>           raise TIMEOUT(msg)\r\nE           TypeError: 'EOF' object is not callable\r\n\r\n../../../../some-path-here/lib/python2.7/site-packages/pexpect/expect.py:73: TypeError\r\n------------------------------------------------------------------------------------ Captured stdout call ------------------------------------------------------------------------------------\r\nninja: Entering directory `/spare/scratch/my/python/project/tests'\r\n...\r\n<class 'pexpect.exceptions.EOF'>\r\n<type 'str'>\r\n<class 'pexpect.exceptions.EOF'>\r\n```\r\n\r\nIf I run these tests individually, they run fine. However, if I club them with others in the test suite (I am using pytest), they fail. I haven't been able to pin point why this is happening, or come up with a minimal reproducible example. I'll update the ticket if I have more info.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/454", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/454/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/454/events", "html_url": "https://github.com/pexpect/pexpect/issues/454", "id": 272663145, "node_id": "MDU6SXNzdWUyNzI2NjMxNDU=", "number": 454, "title": "Release Notes for 4.3.0?", "user": {"login": "lukas-gitl", "id": 7819023, "node_id": "MDQ6VXNlcjc4MTkwMjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7819023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukas-gitl", "html_url": "https://github.com/lukas-gitl", "followers_url": "https://api.github.com/users/lukas-gitl/followers", "following_url": "https://api.github.com/users/lukas-gitl/following{/other_user}", "gists_url": "https://api.github.com/users/lukas-gitl/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukas-gitl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukas-gitl/subscriptions", "organizations_url": "https://api.github.com/users/lukas-gitl/orgs", "repos_url": "https://api.github.com/users/lukas-gitl/repos", "events_url": "https://api.github.com/users/lukas-gitl/events{/privacy}", "received_events_url": "https://api.github.com/users/lukas-gitl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-09T18:02:26Z", "updated_at": "2017-11-15T09:03:16Z", "closed_at": "2017-11-09T19:13:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Where do we find them?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/453", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/453/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/453/events", "html_url": "https://github.com/pexpect/pexpect/issues/453", "id": 272567800, "node_id": "MDU6SXNzdWUyNzI1Njc4MDA=", "number": 453, "title": "Syntax error in pexpect/spawnbase.py: async is a reserved keyword in Python 3.7+", "user": {"login": "ogrisel", "id": 89061, "node_id": "MDQ6VXNlcjg5MDYx", "avatar_url": "https://avatars0.githubusercontent.com/u/89061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogrisel", "html_url": "https://github.com/ogrisel", "followers_url": "https://api.github.com/users/ogrisel/followers", "following_url": "https://api.github.com/users/ogrisel/following{/other_user}", "gists_url": "https://api.github.com/users/ogrisel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogrisel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogrisel/subscriptions", "organizations_url": "https://api.github.com/users/ogrisel/orgs", "repos_url": "https://api.github.com/users/ogrisel/repos", "events_url": "https://api.github.com/users/ogrisel/events{/privacy}", "received_events_url": "https://api.github.com/users/ogrisel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-09T13:41:29Z", "updated_at": "2020-06-12T08:32:04Z", "closed_at": "2017-11-09T13:44:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here the traceback I got when starting ipython on the current Python master.\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/home/ogrisel/.virtualenvs/py37/bin/ipython\", line 7, in <module>\r\n    from IPython import start_ipython\r\n  File \"/home/ogrisel/.virtualenvs/py37/lib/python3.7/site-packages/IPython/__init__.py\", line 54, in <module>\r\n    from .core.application import Application\r\n  File \"/home/ogrisel/.virtualenvs/py37/lib/python3.7/site-packages/IPython/core/application.py\", line 25, in <module>\r\n    from IPython.core import release, crashhandler\r\n  File \"/home/ogrisel/.virtualenvs/py37/lib/python3.7/site-packages/IPython/core/crashhandler.py\", line 27, in <module>\r\n    from IPython.core import ultratb\r\n  File \"/home/ogrisel/.virtualenvs/py37/lib/python3.7/site-packages/IPython/core/ultratb.py\", line 120, in <module>\r\n    from IPython.utils import path as util_path\r\n  File \"/home/ogrisel/.virtualenvs/py37/lib/python3.7/site-packages/IPython/utils/path.py\", line 17, in <module>\r\n    from IPython.utils.process import system\r\n  File \"/home/ogrisel/.virtualenvs/py37/lib/python3.7/site-packages/IPython/utils/process.py\", line 18, in <module>\r\n    from ._process_posix import system, getoutput, arg_split, check_pid\r\n  File \"/home/ogrisel/.virtualenvs/py37/lib/python3.7/site-packages/IPython/utils/_process_posix.py\", line 23, in <module>\r\n    import pexpect\r\n  File \"/home/ogrisel/.virtualenvs/py37/lib/python3.7/site-packages/pexpect/__init__.py\", line 75, in <module>\r\n    from .pty_spawn import spawn, spawnu\r\n  File \"/home/ogrisel/.virtualenvs/py37/lib/python3.7/site-packages/pexpect/pty_spawn.py\", line 14, in <module>\r\n    from .spawnbase import SpawnBase\r\n  File \"/home/ogrisel/.virtualenvs/py37/lib/python3.7/site-packages/pexpect/spawnbase.py\", line 224\r\n    def expect(self, pattern, timeout=-1, searchwindowsize=-1, async=False):\r\n                                                                   ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\npexpect version: 4.2.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/448", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/448/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/448/events", "html_url": "https://github.com/pexpect/pexpect/issues/448", "id": 262061287, "node_id": "MDU6SXNzdWUyNjIwNjEyODc=", "number": 448, "title": "Cannot block execution in signal handler", "user": {"login": "Chlorek", "id": 3624626, "node_id": "MDQ6VXNlcjM2MjQ2MjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3624626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chlorek", "html_url": "https://github.com/Chlorek", "followers_url": "https://api.github.com/users/Chlorek/followers", "following_url": "https://api.github.com/users/Chlorek/following{/other_user}", "gists_url": "https://api.github.com/users/Chlorek/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chlorek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chlorek/subscriptions", "organizations_url": "https://api.github.com/users/Chlorek/orgs", "repos_url": "https://api.github.com/users/Chlorek/repos", "events_url": "https://api.github.com/users/Chlorek/events{/privacy}", "received_events_url": "https://api.github.com/users/Chlorek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-02T11:56:38Z", "updated_at": "2017-10-02T14:27:11Z", "closed_at": "2017-10-02T13:14:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I made a script that utilizes spawn() interface. It works fine and blocks execution on expect(). I need however to interrupt standard flow to save something, then spawn process again when RTMIN signal is received and inside this signal's handler pexpect seems not to block at all. Tried to use wait() and it does not block either.\r\nSome kind of collision in expect() is rather not the case, as my code leads to only one expect() at a time. So I guess it has something to do with code executed in signal handler itself?\r\n```\r\nproc = pexpect.spawn(command)\r\nsignal.signal(signal.SIGRTMIN+5, signal_save_buffer)\r\ninput('Press enter to stop.')\r\nproc.sendcontrol('c')\r\nprint('Waiting for process to finish...')\r\nproc.expect(pexpect.EOF)\r\nprint('Finished.')\r\n```\r\nThe above works fine. And here is my signal handler:\r\n```\r\ndef signal_save_buffer(sig, frame):\r\n    global proc\r\n    global command\r\n    if proc != None:\r\n        print('Waiting for process to finish before saving...')\r\n        proc.expect(pexpect.EOF)\r\n        # or wait() instead, same effect\r\n        print('Process finished, copying...')\r\n        # do copying here...\r\n        proc = pexpect.spawn(command)\r\n        print('Process restarted.')\r\n    else:\r\n        print('Process is not running.')\r\n```\r\nI posted this problem on stackoverflow, reddit and asked on IRC without any results, please help!\r\n\r\n// Edit\r\nI found the reason and it's not pexpect fault, but my signal sending. I did pkill with -f which caused that process to die as it included keyword. I have no idea why ffmpeg dies from any RTMIN, but it does.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/440", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/440/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/440/events", "html_url": "https://github.com/pexpect/pexpect/issues/440", "id": 251877018, "node_id": "MDU6SXNzdWUyNTE4NzcwMTg=", "number": 440, "title": "Could you tell me the  How to support Windows", "user": {"login": "githublaohu", "id": 8677242, "node_id": "MDQ6VXNlcjg2NzcyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8677242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/githublaohu", "html_url": "https://github.com/githublaohu", "followers_url": "https://api.github.com/users/githublaohu/followers", "following_url": "https://api.github.com/users/githublaohu/following{/other_user}", "gists_url": "https://api.github.com/users/githublaohu/gists{/gist_id}", "starred_url": "https://api.github.com/users/githublaohu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/githublaohu/subscriptions", "organizations_url": "https://api.github.com/users/githublaohu/orgs", "repos_url": "https://api.github.com/users/githublaohu/repos", "events_url": "https://api.github.com/users/githublaohu/events{/privacy}", "received_events_url": "https://api.github.com/users/githublaohu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-22T08:29:18Z", "updated_at": "2017-09-05T01:59:50Z", "closed_at": "2017-09-05T01:59:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "If inscribe", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/438", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/438/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/438/events", "html_url": "https://github.com/pexpect/pexpect/issues/438", "id": 249684740, "node_id": "MDU6SXNzdWUyNDk2ODQ3NDA=", "number": 438, "title": "pexpect has very poor performance when searching large output streams ", "user": {"login": "ryanpetrello", "id": 214912, "node_id": "MDQ6VXNlcjIxNDkxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/214912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanpetrello", "html_url": "https://github.com/ryanpetrello", "followers_url": "https://api.github.com/users/ryanpetrello/followers", "following_url": "https://api.github.com/users/ryanpetrello/following{/other_user}", "gists_url": "https://api.github.com/users/ryanpetrello/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanpetrello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanpetrello/subscriptions", "organizations_url": "https://api.github.com/users/ryanpetrello/orgs", "repos_url": "https://api.github.com/users/ryanpetrello/repos", "events_url": "https://api.github.com/users/ryanpetrello/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanpetrello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-08-11T16:25:29Z", "updated_at": "2018-02-10T12:28:45Z", "closed_at": "2018-02-10T12:28:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Even with `searchwindowsize` set, pexpect's read/search algorithm seems to have _very poor_ performance for processes that write large quantities of data to stdout or stderr.  It gets significantly worse as the size of the output stream moves upwards.\r\n\r\n`cat expect.py`\r\n```python\r\n#!/usr/bin/env python\r\nimport subprocess\r\nimport expect\r\n# Write a ~5MB file\r\nsubprocess.call('base64 /dev/urandom | head -c 5000000 > /tmp/large', shell=True)\r\nchild = pexpect.spawn(\r\n    'cat', ['/tmp/large'], [], env={}, ignore_sighup=True,\r\n    encoding='utf-8', echo=False\r\n)\r\nwhile child.isalive():\r\n    child.expect([], timeout=10000000, searchwindowsize=100)\r\n```\r\n\r\nWhen `cat /tmp/large` is run outside of pexpect on moderate hardware, it finishes (and prints) in seconds:\r\n\r\n```\r\n$ time cat /tmp/large\r\n...\r\nreal\t0m1.011s\r\nuser\t0m0.000s\r\nsys\t0m0.130s\r\n```\r\n\r\nWhen run with pexpect, it takes notably longer:\r\n\r\n```\r\ntime python expect.py\r\nreal\t0m5.451s\r\nuser\t0m1.970s\r\nsys\t0m2.720s\r\n```\r\n\r\nThis timing gets slower and slower with larger data sets:\r\n```\r\ntime python expect.10mb.py\r\nreal\t0m24.363s\r\nuser\t0m8.750s\r\nsys\t0m14.540s\r\n```\r\n\r\n```\r\ntime python expect.25mb.py\r\nreal\t2m13.992s\r\nuser\t0m46.930s\r\nsys\t1m21.810s\r\n```\r\n\r\nAnything beyond 50MB is almost intolerably slow - taking 30 minutes+ to finish on my cir. 2015 Macbook Pro (while finishing in < 30 seconds when run by hand in a terminal emulator).\r\n\r\n`pexpect` has a configurable `maxread` that can be used to increase the number of bytes read at a time:\r\nhttps://github.com/pexpect/pexpect/blob/master/pexpect/pty_spawn.py#L34\r\n\r\n...but the pty seems to impose an OS-dependent upper limit (looks like 2k on my Macbook Pro), so simply bumping `maxread` doesn't help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/437", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/437/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/437/events", "html_url": "https://github.com/pexpect/pexpect/issues/437", "id": 248188641, "node_id": "MDU6SXNzdWUyNDgxODg2NDE=", "number": 437, "title": "child.logfile=sys.stdout failed", "user": {"login": "icecooly", "id": 3367934, "node_id": "MDQ6VXNlcjMzNjc5MzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3367934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/icecooly", "html_url": "https://github.com/icecooly", "followers_url": "https://api.github.com/users/icecooly/followers", "following_url": "https://api.github.com/users/icecooly/following{/other_user}", "gists_url": "https://api.github.com/users/icecooly/gists{/gist_id}", "starred_url": "https://api.github.com/users/icecooly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/icecooly/subscriptions", "organizations_url": "https://api.github.com/users/icecooly/orgs", "repos_url": "https://api.github.com/users/icecooly/repos", "events_url": "https://api.github.com/users/icecooly/events{/privacy}", "received_events_url": "https://api.github.com/users/icecooly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-05T14:39:15Z", "updated_at": "2020-06-11T10:29:20Z", "closed_at": "2020-06-11T05:39:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "code:\r\n  ```python\r\ndef login(self):\r\n        command = 'ssh ' + self.host.user + '@' + self.host.host + ' -p ' + self.host.port\r\n        child = pexpect.spawn(command)\r\n        child.logfile=sys.stdout     #  when i use this line error happen\r\n        ret = child.expect([pexpect.TIMEOUT, 'Are you sure you want to continue connecting', '[p]assword:'])\r\n        if ret == 0:\r\n            logError('[-] Error Connecting')\r\n            return\r\n        if ret == 1:\r\n            child.sendline('yes')\r\n            ret = child.expect([pexpect.TIMEOUT, '[p|P]assword'])\r\n            if ret == 0:\r\n                logError('[-] Error Connecting')\r\n                return\r\n            if ret == 1:\r\n                self.sendCommand(child, self.host.password, X_PROMPT)\r\n                return\r\n        if ret == 2:\r\n            self.sendCommand(child,self.host.password, X_PROMPT)\r\n            child.interact()\r\n            return\r\n        return child\r\n```\r\n\r\nerror:\r\nTraceback (most recent call last):\r\n  File \"xssh\", line 22, in <module>\r\n    main()\r\n  File \"xssh\", line 19, in main\r\n    client.login()\r\n  File \"/Users/skydu/PycharmProjects/xtools/xtools/XClient.py\", line 27, in login\r\n    ret = child.expect([pexpect.TIMEOUT, 'Are you sure you want to continue connecting', '[p]assword:'])\r\n  File \"/usr/local/lib/python3.6/site-packages/pexpect/spawnbase.py\", line 321, in expect\r\n    timeout, searchwindowsize, async)\r\n  File \"/usr/local/lib/python3.6/site-packages/pexpect/spawnbase.py\", line 345, in expect_list\r\n    return exp.expect_loop(timeout)\r\n  File \"/usr/local/lib/python3.6/site-packages/pexpect/expect.py\", line 99, in expect_loop\r\n    incoming = spawn.read_nonblocking(spawn.maxread, timeout)\r\n  File \"/usr/local/lib/python3.6/site-packages/pexpect/pty_spawn.py\", line 465, in read_nonblocking\r\n    return super(spawn, self).read_nonblocking(size)\r\n  File \"/usr/local/lib/python3.6/site-packages/pexpect/spawnbase.py\", line 163, in read_nonblocking\r\n    self._log(s, 'read')\r\n  File \"/usr/local/lib/python3.6/site-packages/pexpect/spawnbase.py\", line 121, in _log\r\n    self.logfile.write(s)\r\nTypeError: write() argument must be str, not bytes\r\n\r\n\r\n\r\nmy env:\r\nOS:MacBook Pro  10.12.6 macOs Sierra\r\nPython: 3.6.1\r\nPexpect:4.2.1\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/433", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/433/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/433/events", "html_url": "https://github.com/pexpect/pexpect/issues/433", "id": 245313487, "node_id": "MDU6SXNzdWUyNDUzMTM0ODc=", "number": 433, "title": "Using PopenSpawn with cmd=None does not work", "user": {"login": "alikin12", "id": 12932510, "node_id": "MDQ6VXNlcjEyOTMyNTEw", "avatar_url": "https://avatars2.githubusercontent.com/u/12932510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alikin12", "html_url": "https://github.com/alikin12", "followers_url": "https://api.github.com/users/alikin12/followers", "following_url": "https://api.github.com/users/alikin12/following{/other_user}", "gists_url": "https://api.github.com/users/alikin12/gists{/gist_id}", "starred_url": "https://api.github.com/users/alikin12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alikin12/subscriptions", "organizations_url": "https://api.github.com/users/alikin12/orgs", "repos_url": "https://api.github.com/users/alikin12/repos", "events_url": "https://api.github.com/users/alikin12/events{/privacy}", "received_events_url": "https://api.github.com/users/alikin12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-25T07:46:30Z", "updated_at": "2017-08-22T13:24:16Z", "closed_at": "2017-08-22T13:24:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using PopenSpawn with cmd=None, the code seems to hang at shlex.split(cmd)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/432", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/432/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/432/events", "html_url": "https://github.com/pexpect/pexpect/issues/432", "id": 244996006, "node_id": "MDU6SXNzdWUyNDQ5OTYwMDY=", "number": 432, "title": "pxssh won't log into a file.", "user": {"login": "lion24", "id": 1382102, "node_id": "MDQ6VXNlcjEzODIxMDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lion24", "html_url": "https://github.com/lion24", "followers_url": "https://api.github.com/users/lion24/followers", "following_url": "https://api.github.com/users/lion24/following{/other_user}", "gists_url": "https://api.github.com/users/lion24/gists{/gist_id}", "starred_url": "https://api.github.com/users/lion24/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lion24/subscriptions", "organizations_url": "https://api.github.com/users/lion24/orgs", "repos_url": "https://api.github.com/users/lion24/repos", "events_url": "https://api.github.com/users/lion24/events{/privacy}", "received_events_url": "https://api.github.com/users/lion24/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-24T07:39:59Z", "updated_at": "2017-07-24T09:24:43Z", "closed_at": "2017-07-24T09:24:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "When initiating a pxssh object with logfile pointing to a file in /tmp/, it crashes with the following error: \r\n\r\n\r\n```\r\nFile \"/home/lionel/.local/lib/python3.5/site-packages/pexpect/spawnbase.py\", line 121, in _log\r\n    self.logfile.write(s)\r\nAttributeError: 'str' object has no attribute 'write'\r\n```\r\n\r\nThe portion of the code responsible for the crash is:\r\n```\r\nself.s = pxssh.pxssh(options=self.config['options'], encoding='utf-8')\r\nself.s.logfile = \"/tmp/tests.log\"\r\n```\r\nI also try via the constructor but the result is the same..\r\n\r\nIf I comment on the logfile line, everything is working smoothly. \r\n\r\nDoes someone has any clue on this? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/426", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/426/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/426/events", "html_url": "https://github.com/pexpect/pexpect/issues/426", "id": 239451694, "node_id": "MDU6SXNzdWUyMzk0NTE2OTQ=", "number": 426, "title": "AttributeError: 'NoneType' object has no attribute 'read'", "user": {"login": "PureWhiteWu", "id": 3314335, "node_id": "MDQ6VXNlcjMzMTQzMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3314335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PureWhiteWu", "html_url": "https://github.com/PureWhiteWu", "followers_url": "https://api.github.com/users/PureWhiteWu/followers", "following_url": "https://api.github.com/users/PureWhiteWu/following{/other_user}", "gists_url": "https://api.github.com/users/PureWhiteWu/gists{/gist_id}", "starred_url": "https://api.github.com/users/PureWhiteWu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PureWhiteWu/subscriptions", "organizations_url": "https://api.github.com/users/PureWhiteWu/orgs", "repos_url": "https://api.github.com/users/PureWhiteWu/repos", "events_url": "https://api.github.com/users/PureWhiteWu/events{/privacy}", "received_events_url": "https://api.github.com/users/PureWhiteWu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-29T11:43:29Z", "updated_at": "2017-08-22T13:52:36Z", "closed_at": "2017-08-22T13:52:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"/usr/lib/python2.7/threading.py\", line 754, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pexpect/popen_spawn.py\", line 97, in _read_incoming\r\n    buf = os.read(fileno, 1024)\r\nAttributeError: 'NoneType' object has no attribute 'read'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/425", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/425/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/425/events", "html_url": "https://github.com/pexpect/pexpect/issues/425", "id": 238177159, "node_id": "MDU6SXNzdWUyMzgxNzcxNTk=", "number": 425, "title": "pxssh.sendline not taking input after pipe in command", "user": {"login": "contactr2m", "id": 13003246, "node_id": "MDQ6VXNlcjEzMDAzMjQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/13003246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/contactr2m", "html_url": "https://github.com/contactr2m", "followers_url": "https://api.github.com/users/contactr2m/followers", "following_url": "https://api.github.com/users/contactr2m/following{/other_user}", "gists_url": "https://api.github.com/users/contactr2m/gists{/gist_id}", "starred_url": "https://api.github.com/users/contactr2m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/contactr2m/subscriptions", "organizations_url": "https://api.github.com/users/contactr2m/orgs", "repos_url": "https://api.github.com/users/contactr2m/repos", "events_url": "https://api.github.com/users/contactr2m/events{/privacy}", "received_events_url": "https://api.github.com/users/contactr2m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-23T15:31:22Z", "updated_at": "2017-06-23T18:59:14Z", "closed_at": "2017-06-23T18:59:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using pxssh to connect to remote linux server.\r\ncommand that i am trying to use is \"cat /log/messages | head -n 1\"\r\nwhen i print logfile_send it sends only \"cat /log/messages\" and \"| head -n 1\" on new line.\r\nWhy is it splitting command on \"|\" pipe ?\r\nSo in output i get entire file being read instead of just one line that i want..\r\n\r\nIs this not possible through pxssh ? \r\n\r\nSome more info\r\n{{{\r\n 2017-06-23 12:48:06 DEE : ats_ssh:_execute_and_wait_for_prompt:MainProcess:Thread-2[234]: Clear an existing prompt if there is one.\r\n 2017-06-23 12:48:06 DEE : ats_ssh:_execute_and_wait_for_prompt:MainProcess:Thread-3[237]: Executing command: /bin/cat /var/log/messages^M|tail -n 1\r\n\r\n 2017-06-23 12:48:06 INF : spawnbase:_log:MainProcess:Thread-3[125]: /bin/cat /var/log/messages^M|tail -n 1\r\n}}}\r\nIs ^M carriage return culprit ?? I am not getting from where that is coming..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/424", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/424/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/424/events", "html_url": "https://github.com/pexpect/pexpect/issues/424", "id": 236023884, "node_id": "MDU6SXNzdWUyMzYwMjM4ODQ=", "number": 424, "title": "relative import error", "user": {"login": "nvdeepa", "id": 3834772, "node_id": "MDQ6VXNlcjM4MzQ3NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3834772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvdeepa", "html_url": "https://github.com/nvdeepa", "followers_url": "https://api.github.com/users/nvdeepa/followers", "following_url": "https://api.github.com/users/nvdeepa/following{/other_user}", "gists_url": "https://api.github.com/users/nvdeepa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvdeepa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvdeepa/subscriptions", "organizations_url": "https://api.github.com/users/nvdeepa/orgs", "repos_url": "https://api.github.com/users/nvdeepa/repos", "events_url": "https://api.github.com/users/nvdeepa/events{/privacy}", "received_events_url": "https://api.github.com/users/nvdeepa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-14T22:08:56Z", "updated_at": "2017-08-22T13:56:53Z", "closed_at": "2017-08-22T13:56:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got the following and fixed it locally in site-packages by commenting out that line as the import was already at the top of the file:\r\n_**..... pexpect/expect.py\", line 82, in expect_loop\r\n    from . import EOF, TIMEOUT\r\nSystemError: Parent module 'pexpect' not loaded, cannot perform relative import**_ ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/423", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/423/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/423/events", "html_url": "https://github.com/pexpect/pexpect/issues/423", "id": 235121933, "node_id": "MDU6SXNzdWUyMzUxMjE5MzM=", "number": 423, "title": "windows ssh command in PopenSpawn  opens a popup window to input passowrd ", "user": {"login": "jcuan", "id": 14847756, "node_id": "MDQ6VXNlcjE0ODQ3NzU2", "avatar_url": "https://avatars1.githubusercontent.com/u/14847756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcuan", "html_url": "https://github.com/jcuan", "followers_url": "https://api.github.com/users/jcuan/followers", "following_url": "https://api.github.com/users/jcuan/following{/other_user}", "gists_url": "https://api.github.com/users/jcuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcuan/subscriptions", "organizations_url": "https://api.github.com/users/jcuan/orgs", "repos_url": "https://api.github.com/users/jcuan/repos", "events_url": "https://api.github.com/users/jcuan/events{/privacy}", "received_events_url": "https://api.github.com/users/jcuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-12T04:20:02Z", "updated_at": "2017-06-12T10:16:31Z", "closed_at": "2017-06-12T10:16:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I use ssh comman in cmd or cmder terminal, the output like this\r\n```\r\n$ ssh jcuan@222.197.xxx.xxx\r\njcuan@222.197.xxx.xxx's password:\r\n```\r\nHowever\uff0cwhen in PopenSpawn\uff0cthe command open a window for me to input passowrd before `expect('*password*')`\r\n```python\r\nfrom pexpect import popen_spawn\r\nchild = popen_spawn.PopenSpawn('ssh jcuan@222.197.xxx.xxx')\r\nchild.expect('*password*')\r\nchild.sendline('xxxxxx')\r\nchild.interact() \r\n```\r\nE~~maybe it's a hard thing to read my English.... :joy: thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/422", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/422/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/422/events", "html_url": "https://github.com/pexpect/pexpect/issues/422", "id": 234784014, "node_id": "MDU6SXNzdWUyMzQ3ODQwMTQ=", "number": 422, "title": "git-credential-cache not working with spawn", "user": {"login": "dmalan", "id": 788678, "node_id": "MDQ6VXNlcjc4ODY3OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/788678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmalan", "html_url": "https://github.com/dmalan", "followers_url": "https://api.github.com/users/dmalan/followers", "following_url": "https://api.github.com/users/dmalan/following{/other_user}", "gists_url": "https://api.github.com/users/dmalan/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmalan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmalan/subscriptions", "organizations_url": "https://api.github.com/users/dmalan/orgs", "repos_url": "https://api.github.com/users/dmalan/repos", "events_url": "https://api.github.com/users/dmalan/events{/privacy}", "received_events_url": "https://api.github.com/users/dmalan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-09T10:18:25Z", "updated_at": "2017-06-12T20:23:42Z", "closed_at": "2017-06-10T15:57:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Perhaps related to https://github.com/pexpect/pexpect/issues/416, we've been having some trouble getting [`git-credential-cache`](https://git-scm.com/docs/git-credential-cache) to work with [`spawn`](https://pexpect.readthedocs.io/en/stable/api/pexpect.html#spawn-class). Are the behaviors below to be expected, or are we perhaps misconfiguring `spawn`? (All works well with `bash` alone.)\r\n\r\n# this works\r\n- creates `/tmp/.git-credential-cache/socket`\r\n- spawns grandchild `git-credential-cache--daemon` process, per `ps aux`\r\n```bash\r\n#!/bin/bash\r\n\r\nkillall -q -9 git-credential-cache--daemon\r\nrm -rf /tmp/.git-credential-cache\r\nmkdir /tmp/.git-credential-cache\r\nchmod 0700 /tmp/.git-credential-cache\r\ngit -c credential.helper='cache --socket /tmp/.git-credential-cache/socket' credential approve <<EOT\r\nusername=foo\r\npassword=bar\r\n\r\nEOT\r\n```\r\n\r\n# this doesn't work\r\n* fails to spawn grandchild `git-credential-cache--daemon` process, per `ps aux`\r\n* fails to create `/tmp/.git-credential-cache/socket`\r\n```python\r\n#!/usr/bin/env python\r\n\r\nimport pexpect\r\nimport sys\r\n\r\n# setup\r\npexpect.run(\"killall -q -9 git-credential-cache--daemon\")\r\npexpect.run(\"rm -rf /tmp/.git-credential-cache\")\r\npexpect.run(\"mkdir /tmp/.git-credential-cache\")\r\npexpect.run(\"chmod 0700 /tmp/.git-credential-cache\")\r\n\r\n# demo\r\ncommand = \"git -c credential.helper='cache --socket /tmp/.git-credential-cache/socket' credential approve\"\r\nchild = pexpect.spawn(command, encoding=\"utf-8\", timeout=None)\r\nchild.sendline(\"username=foo\")\r\nchild.sendline(\"password=bar\")\r\nchild.sendline(\"\")\r\nchild.close()\r\n```\r\n\r\n# this doesn't work\r\nnote addition of `ignore_sighup=True`\r\n- spawns grandchild `git-credential-cache--daemon` process, per `ps aux`\r\n- but fails to create `/tmp/.git-credential-cache/socket`\r\n```python\r\n#!/usr/bin/env python\r\n\r\nimport pexpect\r\nimport sys\r\n\r\n# setup\r\npexpect.run(\"killall -q -9 git-credential-cache--daemon\")\r\npexpect.run(\"rm -rf /tmp/.git-credential-cache\")\r\npexpect.run(\"mkdir /tmp/.git-credential-cache\")\r\npexpect.run(\"chmod 0700 /tmp/.git-credential-cache\")\r\n\r\n# demo\r\ncommand = \"git -c credential.helper='cache --socket /tmp/.git-credential-cache/socket' credential approve\"\r\nchild = pexpect.spawn(command, encoding=\"utf-8\", ignore_sighup=True, timeout=None)\r\nchild.sendline(\"username=foo\")\r\nchild.sendline(\"password=bar\")\r\nchild.sendline(\"\")\r\nchild.close()\r\n```\r\n\r\nMany thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/421", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/421/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/421/events", "html_url": "https://github.com/pexpect/pexpect/issues/421", "id": 234020295, "node_id": "MDU6SXNzdWUyMzQwMjAyOTU=", "number": 421, "title": "use pexpect to scp \"large\" size file, we need to sleep to get the correct size of files?", "user": {"login": "yizephyr", "id": 22183905, "node_id": "MDQ6VXNlcjIyMTgzOTA1", "avatar_url": "https://avatars0.githubusercontent.com/u/22183905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yizephyr", "html_url": "https://github.com/yizephyr", "followers_url": "https://api.github.com/users/yizephyr/followers", "following_url": "https://api.github.com/users/yizephyr/following{/other_user}", "gists_url": "https://api.github.com/users/yizephyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/yizephyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yizephyr/subscriptions", "organizations_url": "https://api.github.com/users/yizephyr/orgs", "repos_url": "https://api.github.com/users/yizephyr/repos", "events_url": "https://api.github.com/users/yizephyr/events{/privacy}", "received_events_url": "https://api.github.com/users/yizephyr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-06T20:49:58Z", "updated_at": "2017-08-22T13:58:47Z", "closed_at": "2017-08-22T13:58:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to transfer files from the remote site to the local site by using:\r\n```\r\ntempChannel = pexpect.spawn('scp root@remote:/largeSizeFile /local_folder')\r\ntempChannel.expect('assword:')\r\ntempChannel.sendline(my_password)\r\n```\r\nIf I do this without sleep, I will get a \"blank\" file, so I try to do:\r\n```\r\ntempChannel = pexpect.spawn('scp root@remote:/largeSizeFile /local_folder')\r\ntempChannel.expect('assword:')\r\ntempChannel.sendline(my_password)\r\ntime.sleep(1)\r\n```\r\nand it works well. Then I try to shorten the sleep time, say ```time.sleep(0.05)```\r\nI will get \"part\" of the content of the file instead of intact file. \r\nTherefore, it looks like the sleep time does really matter in this case.\r\nDo I wrongly use the function? or how do I solve this issue if I don't wanna freeze my runtime. \r\n\r\nbtw, when I try \r\n```\r\npexpect.run('scp root@remote:/largeSizeFile /local_folder', events={\"assword:\", \"my_password\"})\r\n```\r\nit will freeze for a while and then finishes without correctly transferring.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/420", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/420/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/420/events", "html_url": "https://github.com/pexpect/pexpect/issues/420", "id": 233213059, "node_id": "MDU6SXNzdWUyMzMyMTMwNTk=", "number": 420, "title": "^] kills pexcept.spawn process", "user": {"login": "nateprewitt", "id": 5271761, "node_id": "MDQ6VXNlcjUyNzE3NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/5271761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nateprewitt", "html_url": "https://github.com/nateprewitt", "followers_url": "https://api.github.com/users/nateprewitt/followers", "following_url": "https://api.github.com/users/nateprewitt/following{/other_user}", "gists_url": "https://api.github.com/users/nateprewitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/nateprewitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nateprewitt/subscriptions", "organizations_url": "https://api.github.com/users/nateprewitt/orgs", "repos_url": "https://api.github.com/users/nateprewitt/repos", "events_url": "https://api.github.com/users/nateprewitt/events{/privacy}", "received_events_url": "https://api.github.com/users/nateprewitt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-02T15:10:46Z", "updated_at": "2017-06-02T16:09:16Z", "closed_at": "2017-06-02T16:09:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're currently experiencing an issue when using `pexpect.spawn` in combination with vim navigation characters. `^]` (`ctrl-]`) is used to [navigate tags](http://vimdoc.sourceforge.net/htmldoc/tagsrch.html) in vim but seems to be acting as an interrupt inside of `pexpect.spawn`. That means anytime the user tries to use the this command in vim, it immediately halts the `pexpect.spawn` process.\r\n\r\nI haven't been able to find any documentation suggesting ^] is reserved for SIGINT or SIGHUP. Is there a specific reason this is implemented inside of pexpect? I can't seem to reproduce this behaviour in `subprocess` which I realize is slightly different.\r\n\r\nHere's a simple repro:\r\n```python\r\nimport pexpect\r\n\r\ncmd = \"sleep 500\"\r\n\r\nc = pexpect.spawn(cmd)\r\nc.interact()\r\nc.close()\r\n```\r\n\r\nPlease let me know if I can provide any extra information, or if I'm missing something obvious. Thanks!\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/418", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/418/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/418/events", "html_url": "https://github.com/pexpect/pexpect/issues/418", "id": 232776658, "node_id": "MDU6SXNzdWUyMzI3NzY2NTg=", "number": 418, "title": "Redirect raw data from child's stdout to a local stdin process", "user": {"login": "ffatghub", "id": 3459027, "node_id": "MDQ6VXNlcjM0NTkwMjc=", "avatar_url": "https://avatars3.githubusercontent.com/u/3459027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffatghub", "html_url": "https://github.com/ffatghub", "followers_url": "https://api.github.com/users/ffatghub/followers", "following_url": "https://api.github.com/users/ffatghub/following{/other_user}", "gists_url": "https://api.github.com/users/ffatghub/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffatghub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffatghub/subscriptions", "organizations_url": "https://api.github.com/users/ffatghub/orgs", "repos_url": "https://api.github.com/users/ffatghub/repos", "events_url": "https://api.github.com/users/ffatghub/events{/privacy}", "received_events_url": "https://api.github.com/users/ffatghub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-06-01T06:21:33Z", "updated_at": "2017-06-12T11:58:30Z", "closed_at": "2017-06-12T11:55:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nbear with me, I am new to pexpect and I am stuck with this. I want to capture traffic with tcpdump \"two hops away\" using this technique (https://wiki.wireshark.org/CaptureSetup/Pipes#Remote_Capture). The code look like this:\r\n\r\n    opts = \"-o CheckHostIP=no -o LogLevel=quiet -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\"\r\n    child = pexpect.spawn(\"ssh \" + opts + \" -p 22 root@remote0\")\r\n    child.expect('assword: ')\r\n    child.send('rootpassword\\r')\r\n    child.expect('# ')\r\n    child.send('\\r')\r\n    # ssh again from remote0 to remote1\r\n    child.send(\"ssh \" + opts + \" -p 22 -i /tmp/key user@remote1\\r\")\r\n    child.expect('\\$ ')\r\n    child.send('sudo su - root\\r')\r\n    child.expect('# ')\r\n    child.send('tcpdump -i eth0\\r')\r\n\r\n    for line in child:\r\n        print(line)\r\n\r\nThis works fine, I can see traffic in/out eth0 at remote1 (as text emitted by tcpdump) on my local stdout.\r\n\r\nNow I ask tcpdump to produce binary data to stdin (in pcap format) and I want to send these data to local stdout for farther processing, I mean like \"rsniff.py | wireshark -k -i -\". The modified code is\r\n\r\n    opts = \"-o CheckHostIP=no -o LogLevel=quiet -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no\"\r\n    child = pexpect.spawn(\"ssh \" + opts + \" -p 22 root@remote0\")\r\n    child.expect('assword: ')\r\n    child.send('rootpassword\\r')\r\n    child.expect('# ')\r\n    child.send('\\r')\r\n    # ssh again from remote0 to remote1\r\n    child.send(\"ssh \" + opts + \" -p 22 -i /tmp/key user@remote1\\r\")\r\n    child.expect('\\$ ')\r\n    child.send('sudo su - root\\r')\r\n    child.expect('# ')\r\n    child.send('tcpdump -i eth0 -w -\\r')\r\n\r\n    while True:\r\n        data = child.read(1024)\r\n        sys.stdout.buffer.write(data)\r\n\r\nThis is not working, wireshark says that the data received is not in pcap format. I know I am missing something big here about tty or encoding... but after several hours I decided to ask for help :-)\r\n\r\nAny help would be much appreciated!\r\n\r\nThank you for the pexpect module!!!\r\nciao\r\nfra\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/410", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/410/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/410/events", "html_url": "https://github.com/pexpect/pexpect/issues/410", "id": 215686329, "node_id": "MDU6SXNzdWUyMTU2ODYzMjk=", "number": 410, "title": "logfile is not populated?", "user": {"login": "MengJueM", "id": 2742842, "node_id": "MDQ6VXNlcjI3NDI4NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2742842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MengJueM", "html_url": "https://github.com/MengJueM", "followers_url": "https://api.github.com/users/MengJueM/followers", "following_url": "https://api.github.com/users/MengJueM/following{/other_user}", "gists_url": "https://api.github.com/users/MengJueM/gists{/gist_id}", "starred_url": "https://api.github.com/users/MengJueM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MengJueM/subscriptions", "organizations_url": "https://api.github.com/users/MengJueM/orgs", "repos_url": "https://api.github.com/users/MengJueM/repos", "events_url": "https://api.github.com/users/MengJueM/events{/privacy}", "received_events_url": "https://api.github.com/users/MengJueM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-21T10:11:51Z", "updated_at": "2017-03-21T10:35:09Z", "closed_at": "2017-03-21T10:35:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I ran a simple demo by evaluating pexpect usage:\r\n\r\n```\r\nimport pexpect\r\nimport sys\r\n\r\npexpect.spawn('yes', logfile=sys.stdout)\r\n```\r\n\r\nI refer this demo from the official document, then I expect the 'y' should be printed in the current shell stdout, but the actual result is nothing happens. \r\n\r\nI also tried another demo:\r\n\r\n```\r\nimport pexpect\r\nimport sys\r\n\r\nf1 = open('~/test.log', 'wb')\r\npexpect.spawn('yes', logfile=f1)\r\nf1.close()\r\n```\r\n\r\nThe file is empty either.\r\n\r\nIs it a bug or just I just put the wrong logic?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/404", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/404/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/404/events", "html_url": "https://github.com/pexpect/pexpect/issues/404", "id": 209364417, "node_id": "MDU6SXNzdWUyMDkzNjQ0MTc=", "number": 404, "title": "Question about pexpect on Windows", "user": {"login": "muffins", "id": 1328916, "node_id": "MDQ6VXNlcjEzMjg5MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1328916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muffins", "html_url": "https://github.com/muffins", "followers_url": "https://api.github.com/users/muffins/followers", "following_url": "https://api.github.com/users/muffins/following{/other_user}", "gists_url": "https://api.github.com/users/muffins/gists{/gist_id}", "starred_url": "https://api.github.com/users/muffins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muffins/subscriptions", "organizations_url": "https://api.github.com/users/muffins/orgs", "repos_url": "https://api.github.com/users/muffins/repos", "events_url": "https://api.github.com/users/muffins/events{/privacy}", "received_events_url": "https://api.github.com/users/muffins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-22T06:29:49Z", "updated_at": "2017-02-22T16:28:47Z", "closed_at": "2017-02-22T15:48:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there!\r\n\r\nMy apologies if I'm posting in the wrong place, but I've been working to get pexpect working on Windows to try and support our integration tests for the osquery project.  The specific snippets of code I'm working to make cross platform [live on a branch I'm working on here](https://github.com/poppyseedplehzr/osquery/blob/win-integration-tests/tools/tests/test_base.py#L124), but I've been catching a slight snag with getting `PopenSpawn` to allow me to interact with the `osqueryi` process.\r\n\r\nI've tried toying around with interfacing with our client as follows:\r\n```\r\nIn [48]: osquery_proc = pexpect.popen_spawn.PopenSpawn([\"C:\\\\Users\\\\Nicholas\\\\projects\\\\repos\\\\osquery\\\\build\\\\windows10\\\\osquery\\\\Release\\\\osqueryi.ex\r\n    ...: e\"])\r\n    ...: PROMPT = u'osquery> '\r\n    ...: CONTINUATION_PROMPT = u'    ...> '\r\n    ...: ERROR_PREFIX = 'Error:'\r\n    ...: proc.echo = False\r\n    ...: osq = REPLWrapper(proc, PROMPT, None, continuation_prompt=CONTINUATION_PROMPT)\r\n    ...:\r\n                                                                                                                                                ---------------------------------------------------------------------------\r\nTIMEOUT                                   Traceback (most recent call last)\r\n<ipython-input-48-c1fbee283262> in <module>()\r\n      4 ERROR_PREFIX = 'Error:'\r\n      5 proc.echo = False\r\n----> 6 osq = REPLWrapper(proc, PROMPT, None, continuation_prompt=CONTINUATION_PROMPT)\r\n\r\nc:\\tools\\python2\\lib\\site-packages\\pexpect\\replwrap.pyc in __init__(self, cmd_or_spawn, orig_prompt, prompt_change, new_prompt, continuation_prompt, extra_init_cmd)\r\n     53         self.continuation_prompt = continuation_prompt\r\n     54\r\n---> 55         self._expect_prompt()\r\n     56\r\n     57         if extra_init_cmd is not None:\r\n\r\nc:\\tools\\python2\\lib\\site-packages\\pexpect\\replwrap.pyc in _expect_prompt(self, timeout)\r\n     64     def _expect_prompt(self, timeout=-1):\r\n     65         return self.child.expect_exact([self.prompt, self.continuation_prompt],\r\n---> 66                                        timeout=timeout)\r\n     67\r\n     68     def run_command(self, command, timeout=-1):\r\n\r\nc:\\tools\\python2\\lib\\site-packages\\pexpect\\spawnbase.pyc in expect_exact(self, pattern_list, timeout, searchwindowsize, async)\r\n    388             return expect_async(exp, timeout)\r\n    389         else:\r\n--> 390             return exp.expect_loop(timeout)\r\n    391\r\n    392     def expect_loop(self, searcher, timeout=-1, searchwindowsize=-1):\r\n\r\nc:\\tools\\python2\\lib\\site-packages\\pexpect\\expect.pyc in expect_loop(self, timeout)\r\n    105             return self.eof(e)\r\n    106         except TIMEOUT as e:\r\n--> 107             return self.timeout(e)\r\n    108         except:\r\n    109             self.errored()\r\n\r\nc:\\tools\\python2\\lib\\site-packages\\pexpect\\expect.pyc in timeout(self, err)\r\n     68             if err is not None:\r\n     69                 msg = str(err) + '\\n' + msg\r\n---> 70             raise TIMEOUT(msg)\r\n     71\r\n     72     def errored(self):\r\n\r\nTIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x0000000005101128>\r\nsearcher: searcher_string:\r\n    0: \"osquery> \"\r\n    1: \"    ...> \"\r\n<pexpect.popen_spawn.PopenSpawn object at 0x0000000005101128>\r\nsearcher: searcher_string:\r\n    0: \"osquery> \"\r\n    1: \"    ...> \"\r\n```\r\nI've noticed that if I try and just start a `PopenSpawn` session with the `osqueryi` binary and `read`, all I get back is `''`. It seems like somewhere along the line I'm not getting back any of the spawning terminal messages? I'd truly rather not use wexpect or the others just to get this functality up and rolling, especially considering we're not looking to do anything more complicated than just interact with the osquery shell and daemon processes.\r\n\r\nLastly, I've been reading through all of y'alls docs, and I get the impression that I'm missing something trivial somewhere, as it seems that the basics of pexpect should be functioning on Windows. Any thoughts on how I could troubleshoot? I'm on a Windows 10 system but can jump on other builds if it's known to work on earlier releases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/397", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/397/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/397/events", "html_url": "https://github.com/pexpect/pexpect/issues/397", "id": 197334663, "node_id": "MDU6SXNzdWUxOTczMzQ2NjM=", "number": 397, "title": "expect in expect", "user": {"login": "Zuckonit", "id": 988858, "node_id": "MDQ6VXNlcjk4ODg1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/988858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zuckonit", "html_url": "https://github.com/Zuckonit", "followers_url": "https://api.github.com/users/Zuckonit/followers", "following_url": "https://api.github.com/users/Zuckonit/following{/other_user}", "gists_url": "https://api.github.com/users/Zuckonit/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zuckonit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zuckonit/subscriptions", "organizations_url": "https://api.github.com/users/Zuckonit/orgs", "repos_url": "https://api.github.com/users/Zuckonit/repos", "events_url": "https://api.github.com/users/Zuckonit/events{/privacy}", "received_events_url": "https://api.github.com/users/Zuckonit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56834860, "node_id": "MDU6TGFiZWw1NjgzNDg2MA==", "url": "https://api.github.com/repos/pexpect/pexpect/labels/question", "name": "question", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-23T09:07:02Z", "updated_at": "2016-12-24T16:55:49Z", "closed_at": "2016-12-24T16:33:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "assume I am in host A and I wanna execute command ```sudo su admin -c  'ls /home/admin'``` in host B. I have the permissions of sudo and user_A, that means there will be two times of prompt entering the password if I spawn below command, How can this be realized in pexepct\r\n\r\n```\r\nssh -t user_A@hostB \"sudo su admin -c  'ls /home/admin'\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/393", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/393/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/393/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/393/events", "html_url": "https://github.com/pexpect/pexpect/issues/393", "id": 193089310, "node_id": "MDU6SXNzdWUxOTMwODkzMTA=", "number": 393, "title": "Failure on Travis", "user": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-02T11:00:50Z", "updated_at": "2016-12-04T22:12:29Z", "closed_at": "2016-12-04T22:12:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I guess something in Travis' infrastructure has changed, leading to this in one of the diagnostic tools run before the real tests:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./tools/display-terminalinfo.py\", line 209, in <module>\r\n    main()\r\n  File \"./tools/display-terminalinfo.py\", line 204, in main\r\n    print('os.ttyname({0}) => {1}'.format(fd, os.ttyname(fd)))\r\nOSError: [Errno 0] Error\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/385", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/385/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/385/events", "html_url": "https://github.com/pexpect/pexpect/issues/385", "id": 184062887, "node_id": "MDU6SXNzdWUxODQwNjI4ODc=", "number": 385, "title": "pexpect with long stdout - maxread and searchwindowsize example", "user": {"login": "aavella77", "id": 4260632, "node_id": "MDQ6VXNlcjQyNjA2MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4260632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aavella77", "html_url": "https://github.com/aavella77", "followers_url": "https://api.github.com/users/aavella77/followers", "following_url": "https://api.github.com/users/aavella77/following{/other_user}", "gists_url": "https://api.github.com/users/aavella77/gists{/gist_id}", "starred_url": "https://api.github.com/users/aavella77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aavella77/subscriptions", "organizations_url": "https://api.github.com/users/aavella77/orgs", "repos_url": "https://api.github.com/users/aavella77/repos", "events_url": "https://api.github.com/users/aavella77/events{/privacy}", "received_events_url": "https://api.github.com/users/aavella77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-19T20:16:23Z", "updated_at": "2018-02-10T12:29:24Z", "closed_at": "2018-02-10T12:29:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nEnvironment:\npexpect (2.3)\npython 2.7.5\ncentos 7\n\nI am trying a pexpect script that throws large amounts of data to stdout.  I see that the display on the screen is very slow and takes more than 3 to 4 hours to come back with the prompt.  I have read the documentation but I cannot figure out how to configure the maxread and searhwindowsize parameters.  Are there examples on the Internet? or can someone provide them?  Is this a bug?\n\n```\nchild = pexpect.spawn('ssh %s@%s' % (admin_username, mgmnt_ip), env = os.environ, maxread=100000000, searchwindowsize=2000)\n\ncmd = 'python my-script.py -c config.json'  \nif not cli.run_in_session(child,cmd,prompt,28800):\n    assert 0, \"%s command failed\" % cmd \n```\n\nThanks,\nAlejandro\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/384", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/384/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/384/events", "html_url": "https://github.com/pexpect/pexpect/issues/384", "id": 183871498, "node_id": "MDU6SXNzdWUxODM4NzE0OTg=", "number": 384, "title": "`yield from` is not adapt python2.7", "user": {"login": "zjjott", "id": 3733548, "node_id": "MDQ6VXNlcjM3MzM1NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3733548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zjjott", "html_url": "https://github.com/zjjott", "followers_url": "https://api.github.com/users/zjjott/followers", "following_url": "https://api.github.com/users/zjjott/following{/other_user}", "gists_url": "https://api.github.com/users/zjjott/gists{/gist_id}", "starred_url": "https://api.github.com/users/zjjott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zjjott/subscriptions", "organizations_url": "https://api.github.com/users/zjjott/orgs", "repos_url": "https://api.github.com/users/zjjott/repos", "events_url": "https://api.github.com/users/zjjott/events{/privacy}", "received_events_url": "https://api.github.com/users/zjjott/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-19T05:51:10Z", "updated_at": "2019-02-11T01:24:02Z", "closed_at": "2016-10-19T08:06:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\npexpect/async.py\", line 16\n        transport, pw = yield from asyncio.get_event_loop()\\\n                                 ^\n    SyntaxError: invalid syntax\n```\n\nand `setup.py` say pexpect is adapt for python2.7,now when we use `pip install pexpect` or `pip install ipython==5.1.0` will raise this exception\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/383", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/383/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/383/events", "html_url": "https://github.com/pexpect/pexpect/issues/383", "id": 183436951, "node_id": "MDU6SXNzdWUxODM0MzY5NTE=", "number": 383, "title": "ptyprocess.PtyProcessError raised on close", "user": {"login": "kristopher-h", "id": 8008457, "node_id": "MDQ6VXNlcjgwMDg0NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8008457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kristopher-h", "html_url": "https://github.com/kristopher-h", "followers_url": "https://api.github.com/users/kristopher-h/followers", "following_url": "https://api.github.com/users/kristopher-h/following{/other_user}", "gists_url": "https://api.github.com/users/kristopher-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/kristopher-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kristopher-h/subscriptions", "organizations_url": "https://api.github.com/users/kristopher-h/orgs", "repos_url": "https://api.github.com/users/kristopher-h/repos", "events_url": "https://api.github.com/users/kristopher-h/events{/privacy}", "received_events_url": "https://api.github.com/users/kristopher-h/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-17T14:48:07Z", "updated_at": "2017-08-22T13:49:01Z", "closed_at": "2017-08-22T13:49:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I ran into a situation where a ptyprocess.PtyProcessError is raised when trying to close a pty_spawn.spawn object and that is not possible (ptyprocess.ptyprocess.PtyProcessError: Could not terminate the child.). I'm thinking the call to self.ptyproc.close should be wrapped in _wrap_ptyprocess_err? This to avoid having to be aware of ptyprocess exceptions in higher layers.\n\nE.g.:\n\n```\ndef close(self, force=True):\n    '''This closes the connection with the child application. Note that\n    calling close() more than once is valid. This emulates standard Python\n    behavior with files. Set force to True if you want to make sure that\n    the child is terminated (SIGKILL is sent if the child ignores SIGHUP\n    and SIGINT). '''\n\n    self.flush()\n    with _wrap_ptyprocess_err():\n        # PtyprocessError can be raised if it is not possible to close child process.\n        self.ptyproc.close(force=force)\n    ...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/381", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/381/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/381/events", "html_url": "https://github.com/pexpect/pexpect/issues/381", "id": 182062995, "node_id": "MDU6SXNzdWUxODIwNjI5OTU=", "number": 381, "title": "Spawnu : UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff  invalid start byte", "user": {"login": "BrokenEncoder", "id": 22751146, "node_id": "MDQ6VXNlcjIyNzUxMTQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/22751146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrokenEncoder", "html_url": "https://github.com/BrokenEncoder", "followers_url": "https://api.github.com/users/BrokenEncoder/followers", "following_url": "https://api.github.com/users/BrokenEncoder/following{/other_user}", "gists_url": "https://api.github.com/users/BrokenEncoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrokenEncoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrokenEncoder/subscriptions", "organizations_url": "https://api.github.com/users/BrokenEncoder/orgs", "repos_url": "https://api.github.com/users/BrokenEncoder/repos", "events_url": "https://api.github.com/users/BrokenEncoder/events{/privacy}", "received_events_url": "https://api.github.com/users/BrokenEncoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-10T16:50:51Z", "updated_at": "2017-07-19T13:51:24Z", "closed_at": "2017-07-19T13:51:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im having an issue when using spawnu during a ssh session when the remote machine responds with the following characters in the output: \n\n\"\u00ff\u00ff\u00ff\u00ff\"\n\nHeres the error the I  received: \n\nFile \"/usr/lib/python3.3/site-packages/pexpect/spawnbase.py\", line 321, in expect\n    timeout, searchwindowsize, async)\n  File \"/usr/lib/python3.3/site-packages/pexpect/spawnbase.py\", line 345, in expect_list\n    return exp.expect_loop(timeout)\n  File \"/usr/lib/python3.3/site-packages/pexpect/expect.py\", line 99, in expect_loop\n    incoming = spawn.read_nonblocking(spawn.maxread, timeout)\n  File \"/usr/lib/python3.3/site-packages/pexpect/pty_spawn.py\", line 465, in read_nonblocking\n    return super(spawn, self).read_nonblocking(size)\n  File \"/usr/lib/python3.3/site-packages/pexpect/spawnbase.py\", line 162, in read_nonblocking\n    s = self._decoder.decode(s, final=False)\n  File \"/usr/lib64/python3.3/codecs.py\", line 300, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 273: invalid start byte\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/378", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/378/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/378/events", "html_url": "https://github.com/pexpect/pexpect/issues/378", "id": 179008708, "node_id": "MDU6SXNzdWUxNzkwMDg3MDg=", "number": 378, "title": "can't use in my win7,64bit, python 2.7.12", "user": {"login": "heartbeast", "id": 11706335, "node_id": "MDQ6VXNlcjExNzA2MzM1", "avatar_url": "https://avatars2.githubusercontent.com/u/11706335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heartbeast", "html_url": "https://github.com/heartbeast", "followers_url": "https://api.github.com/users/heartbeast/followers", "following_url": "https://api.github.com/users/heartbeast/following{/other_user}", "gists_url": "https://api.github.com/users/heartbeast/gists{/gist_id}", "starred_url": "https://api.github.com/users/heartbeast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heartbeast/subscriptions", "organizations_url": "https://api.github.com/users/heartbeast/orgs", "repos_url": "https://api.github.com/users/heartbeast/repos", "events_url": "https://api.github.com/users/heartbeast/events{/privacy}", "received_events_url": "https://api.github.com/users/heartbeast/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-24T03:48:00Z", "updated_at": "2016-09-26T06:48:35Z", "closed_at": "2016-09-26T06:48:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "install use pip.\ncode:\nimport pexpect\nchild = pexpect.popen_spawn.PopenSpawn('adb shell')\nerror msg:\nAttributeError: 'module' object has no attribute 'popen_spawn'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/372", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/372/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/372/events", "html_url": "https://github.com/pexpect/pexpect/issues/372", "id": 172316338, "node_id": "MDU6SXNzdWUxNzIzMTYzMzg=", "number": 372, "title": "Pexpect.child.expect does not wait ", "user": {"login": "cihantunc", "id": 1801750, "node_id": "MDQ6VXNlcjE4MDE3NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1801750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cihantunc", "html_url": "https://github.com/cihantunc", "followers_url": "https://api.github.com/users/cihantunc/followers", "following_url": "https://api.github.com/users/cihantunc/following{/other_user}", "gists_url": "https://api.github.com/users/cihantunc/gists{/gist_id}", "starred_url": "https://api.github.com/users/cihantunc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cihantunc/subscriptions", "organizations_url": "https://api.github.com/users/cihantunc/orgs", "repos_url": "https://api.github.com/users/cihantunc/repos", "events_url": "https://api.github.com/users/cihantunc/events{/privacy}", "received_events_url": "https://api.github.com/users/cihantunc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-21T11:17:12Z", "updated_at": "2016-08-21T22:12:55Z", "closed_at": "2016-08-21T22:12:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am spawning an SSH connection that applies apt-get update and then apt-get install <programs>. My steps are as follows: \n\n``` python\nchild.sendline('apt-get update && echo STEP_DONE')\nchild.expect('STEP_DONE')\nchild.sendline('apt-get install <programs> && echo STEP_DONE')\nchild.expect('STEP_DONE')\nchild.sendline('OTHER_CMDs')\n```\n\nwhile expect waits for update, it does not wait for apt-get install to completed and moves on to the other cmds immediately. While other cmds are being executed, install still tries to install the programs (this can be seen by the mixed output of install and other cmds and it moves to other cmds immediately, so it is visible that it does not install). It behaves as if apt-get install and echo STEP_DONE are executed at the same time. child.match shows STEP_DONE as well. \n\nMaybe I am missing something, but I couldn't solve this behavior. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/371", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/371/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/371/events", "html_url": "https://github.com/pexpect/pexpect/issues/371", "id": 172308053, "node_id": "MDU6SXNzdWUxNzIzMDgwNTM=", "number": 371, "title": "User can get a exit code of a command by pxssh?", "user": {"login": "Hochikong", "id": 7195822, "node_id": "MDQ6VXNlcjcxOTU4MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7195822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hochikong", "html_url": "https://github.com/Hochikong", "followers_url": "https://api.github.com/users/Hochikong/followers", "following_url": "https://api.github.com/users/Hochikong/following{/other_user}", "gists_url": "https://api.github.com/users/Hochikong/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hochikong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hochikong/subscriptions", "organizations_url": "https://api.github.com/users/Hochikong/orgs", "repos_url": "https://api.github.com/users/Hochikong/repos", "events_url": "https://api.github.com/users/Hochikong/events{/privacy}", "received_events_url": "https://api.github.com/users/Hochikong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-21T06:51:34Z", "updated_at": "2016-08-21T13:40:45Z", "closed_at": "2016-08-21T13:40:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to get the exit code of commands,pxssh can do that?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/370", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/370/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/370/events", "html_url": "https://github.com/pexpect/pexpect/issues/370", "id": 172288823, "node_id": "MDU6SXNzdWUxNzIyODg4MjM=", "number": 370, "title": "4.3.1 release?", "user": {"login": "takluyver", "id": 327925, "node_id": "MDQ6VXNlcjMyNzkyNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takluyver", "html_url": "https://github.com/takluyver", "followers_url": "https://api.github.com/users/takluyver/followers", "following_url": "https://api.github.com/users/takluyver/following{/other_user}", "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}", "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions", "organizations_url": "https://api.github.com/users/takluyver/orgs", "repos_url": "https://api.github.com/users/takluyver/repos", "events_url": "https://api.github.com/users/takluyver/events{/privacy}", "received_events_url": "https://api.github.com/users/takluyver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-20T20:18:58Z", "updated_at": "2016-08-21T20:18:15Z", "closed_at": "2016-08-21T20:18:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'd like to do a new release to get the fix from #362 out there, because it's causing issues in downstream projects (takluyver/bash_kernel#55). @jquast @MountainRider: is there anything else that you think should be done before we do another release?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/365", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/365/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/365/events", "html_url": "https://github.com/pexpect/pexpect/issues/365", "id": 170233052, "node_id": "MDU6SXNzdWUxNzAyMzMwNTI=", "number": 365, "title": "python3 + fdspawn has str vs. byte errors", "user": {"login": "rustyhowell", "id": 347223, "node_id": "MDQ6VXNlcjM0NzIyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/347223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustyhowell", "html_url": "https://github.com/rustyhowell", "followers_url": "https://api.github.com/users/rustyhowell/followers", "following_url": "https://api.github.com/users/rustyhowell/following{/other_user}", "gists_url": "https://api.github.com/users/rustyhowell/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustyhowell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustyhowell/subscriptions", "organizations_url": "https://api.github.com/users/rustyhowell/orgs", "repos_url": "https://api.github.com/users/rustyhowell/repos", "events_url": "https://api.github.com/users/rustyhowell/events{/privacy}", "received_events_url": "https://api.github.com/users/rustyhowell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-09T18:09:28Z", "updated_at": "2016-08-11T22:26:43Z", "closed_at": "2016-08-11T22:26:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using py.test-3, I get this error when running some tests with fdspawn.\nI'm on pexpect-3.3, and python 3.4.\n\nThe error can be initiated by fdspawn.send()\n\n```\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pexpect.fdpexpect.fdspawn object at 0x7f99ae22ea20>, char = 'x'\n\n    def sendcontrol(self, char):\n\n        '''Helper method that wraps send() with mnemonic access for sending control\n            character to the child (such as Ctrl-C or Ctrl-D).  For example, to send\n            Ctrl-G (ASCII 7, bell, '\\a')::\n\n                child.sendcontrol('g')\n\n            See also, sendintr() and sendeof().\n            '''\n\n        char = char.lower()\n        a = ord(char)\n        if a >= 97 and a <= 122:\n            a = a - ord('a') + 1\n>           return self.send(self._chr(a))\n\n/usr/local/lib/python3.4/dist-packages/pexpect/__init__.py:1114: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pexpect.fdpexpect.fdspawn object at 0x7f99ae22ea20>, s = b'\\x18'\n\n    def send(self, s):\n        '''Sends string ``s`` to the child process, returning the number of\n            bytes written. If a logfile is specified, a copy is written to that\n            log. '''\n\n        time.sleep(self.delaybeforesend)\n\n        s = self._coerce_send_string(s)\n>       self._log(s, 'send')\n\n/usr/local/lib/python3.4/dist-packages/pexpect/__init__.py:1084: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pexpect.fdpexpect.fdspawn object at 0x7f99ae22ea20>, s = b'\\x18', direction = 'send'\n\n    def _log(self, s, direction):\n        if self.logfile is not None:\n>           self.logfile.write(s)\nE           TypeError: must be str, not bytes\n\n/usr/local/lib/python3.4/dist-packages/pexpect/__init__.py:904: TypeError\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/357", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/357/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/357/events", "html_url": "https://github.com/pexpect/pexpect/issues/357", "id": 162473064, "node_id": "MDU6SXNzdWUxNjI0NzMwNjQ=", "number": 357, "title": "pexpect 4.1.0 not Python 2.7 compatible?", "user": {"login": "ccazabon", "id": 7227064, "node_id": "MDQ6VXNlcjcyMjcwNjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7227064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccazabon", "html_url": "https://github.com/ccazabon", "followers_url": "https://api.github.com/users/ccazabon/followers", "following_url": "https://api.github.com/users/ccazabon/following{/other_user}", "gists_url": "https://api.github.com/users/ccazabon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccazabon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccazabon/subscriptions", "organizations_url": "https://api.github.com/users/ccazabon/orgs", "repos_url": "https://api.github.com/users/ccazabon/repos", "events_url": "https://api.github.com/users/ccazabon/events{/privacy}", "received_events_url": "https://api.github.com/users/ccazabon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-27T14:58:58Z", "updated_at": "2016-06-27T15:05:04Z", "closed_at": "2016-06-27T15:05:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "pexpect/async.py contains syntax which isn't valid in Python 2.7:\n\n`\n  File \".../lib/python2.7/site-packages/pexpect-4.1.0-py2.7.egg/pexpect/async.py\", line 16\n    transport, pw = yield from asyncio.get_event_loop()\n                             ^\nSyntaxError: invalid syntax\n`\n\nI didn't see anything in the release notes about dropping Python 2.7 support, so I think this must have been accidental?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/355", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/355/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/355/events", "html_url": "https://github.com/pexpect/pexpect/issues/355", "id": 160157336, "node_id": "MDU6SXNzdWUxNjAxNTczMzY=", "number": 355, "title": "Won't install on Python 2.7", "user": {"login": "ukch", "id": 973865, "node_id": "MDQ6VXNlcjk3Mzg2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/973865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ukch", "html_url": "https://github.com/ukch", "followers_url": "https://api.github.com/users/ukch/followers", "following_url": "https://api.github.com/users/ukch/following{/other_user}", "gists_url": "https://api.github.com/users/ukch/gists{/gist_id}", "starred_url": "https://api.github.com/users/ukch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ukch/subscriptions", "organizations_url": "https://api.github.com/users/ukch/orgs", "repos_url": "https://api.github.com/users/ukch/repos", "events_url": "https://api.github.com/users/ukch/events{/privacy}", "received_events_url": "https://api.github.com/users/ukch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-14T11:24:24Z", "updated_at": "2016-06-16T02:10:37Z", "closed_at": "2016-06-14T11:53:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "The latest version of pexpect uses the `yield from` syntax, which is Python 3 only, but setup is configured for Python 2.7+.\n\nAttempting to install via pip yields the following error:\n\n```\nCompiling /tmp/pip-build-YyEzkz/pexpect/pexpect/async.py ...\n  File \"/tmp/pip-build-YyEzkz/pexpect/pexpect/async.py\", line 16\n    transport, pw = yield from asyncio.get_event_loop()\\\n                             ^\nSyntaxError: invalid syntax\n```\n\nEither this library should be marked as Python 3 only, or the syntax should be made compatible with both versions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/352", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/352/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/352/events", "html_url": "https://github.com/pexpect/pexpect/issues/352", "id": 158955769, "node_id": "MDU6SXNzdWUxNTg5NTU3Njk=", "number": 352, "title": "prompt method on pxssh.pxssh takes too long on \"large output\" (~14MByte)", "user": {"login": "AlonElharar1", "id": 11492054, "node_id": "MDQ6VXNlcjExNDkyMDU0", "avatar_url": "https://avatars0.githubusercontent.com/u/11492054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlonElharar1", "html_url": "https://github.com/AlonElharar1", "followers_url": "https://api.github.com/users/AlonElharar1/followers", "following_url": "https://api.github.com/users/AlonElharar1/following{/other_user}", "gists_url": "https://api.github.com/users/AlonElharar1/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlonElharar1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlonElharar1/subscriptions", "organizations_url": "https://api.github.com/users/AlonElharar1/orgs", "repos_url": "https://api.github.com/users/AlonElharar1/repos", "events_url": "https://api.github.com/users/AlonElharar1/events{/privacy}", "received_events_url": "https://api.github.com/users/AlonElharar1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-07T15:38:14Z", "updated_at": "2018-02-10T12:29:36Z", "closed_at": "2018-02-10T12:29:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "While running the following lines:\n        connection.sendline(\"cat  file_size_of_14_megabytes.log\")\n        connection.prompt():\n\nThe connection.prompt() takes \"too long\":\n\"too long\" is means that cat 14 megabytes takes about 150 seconds - ~10 seconds for 1 single Mega.\nThe \"prompt\" method eventually goes to \"def expect_loop(self, timeout=-1):\" method on \"Expecter\" class.\nOn the following lines from implementation there is several problems:\n\n```\nWhile True:\n       idx = self.new_data(incoming)\n       ...\n       incoming = spawn.read_nonblocking(spawn.maxread, timeout)\n       time.sleep(0.0001)\n```\n1. The spawn.maxread defined to 2048, is too small number, but that number as no affect since the limit on OSX-El Capitan is 1024. the spawn.maxread number has no affect even if it defined to millions.\n2. On the while loop for each incoming(small size) we check for new data on \"idx = self.new_data(incoming)\" - and that takes a lot of time.\n\nThe solution:\nThe solution is to read nonblocking data with greater size, so the \"new_data\" method handle a bigger data.\n\nThe solution is on \"expect_loop(self, timeout=-1)\" method:\n\n```\nwhile True:\n            ....\n            # No match at this point\n            if (timeout is not None) and (timeout < 0):\n                    return self.timeout()\n            # Still have time left, so read more data\n       (-) incoming = spawn.read_nonblocking(spawn.maxread, timeout)\n       (+) incoming = \"\"\n       (+) for _ in range(30):\n       (+)     try:\n       (+)         incoming += spawn.read_nonblocking(spawn.maxread, 0.5)\n       (+)     except Exception:\n       (+)         break\n           time.sleep(0.0001)\n       ....\n```\n- The \"magic numbers\" (0.5, 30) should be constant/parameter.\n- The expect Exception can replaced to Timeout exception.\n- My mail is elharrar.alon@gmail.com\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/351", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/351/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/351/events", "html_url": "https://github.com/pexpect/pexpect/issues/351", "id": 158411302, "node_id": "MDU6SXNzdWUxNTg0MTEzMDI=", "number": 351, "title": "fdexpect no longer handles serial port file descriptors", "user": {"login": "jhps", "id": 635469, "node_id": "MDQ6VXNlcjYzNTQ2OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/635469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhps", "html_url": "https://github.com/jhps", "followers_url": "https://api.github.com/users/jhps/followers", "following_url": "https://api.github.com/users/jhps/following{/other_user}", "gists_url": "https://api.github.com/users/jhps/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhps/subscriptions", "organizations_url": "https://api.github.com/users/jhps/orgs", "repos_url": "https://api.github.com/users/jhps/repos", "events_url": "https://api.github.com/users/jhps/events{/privacy}", "received_events_url": "https://api.github.com/users/jhps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2016-06-03T17:03:41Z", "updated_at": "2016-07-11T15:19:47Z", "closed_at": "2016-07-05T14:33:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "When fdexpect was changed to be a subclass of spawnbase rather than spawn it lost the ability to handle file descriptors that are in non-blocking mode.\n\ne.g.:\n\nfd = os.open(\"/dev/ttyS0\", os.O_NONBLOCK|os.O_RDWR|os.O_NOCTTY)\nth = pexpect.fdpexpect.fdspawn(fd)\nth.expect([\"stuff\", pexpect.TIMEOUT],5):\n\nNo longer works.\n\nI would consider this a major regression. This was a common low overhead way of handling serial ports or sockets.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/347", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/347/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/347/events", "html_url": "https://github.com/pexpect/pexpect/issues/347", "id": 152956689, "node_id": "MDU6SXNzdWUxNTI5NTY2ODk=", "number": 347, "title": "Problems with async expect", "user": {"login": "selfuryon", "id": 2993917, "node_id": "MDQ6VXNlcjI5OTM5MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2993917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selfuryon", "html_url": "https://github.com/selfuryon", "followers_url": "https://api.github.com/users/selfuryon/followers", "following_url": "https://api.github.com/users/selfuryon/following{/other_user}", "gists_url": "https://api.github.com/users/selfuryon/gists{/gist_id}", "starred_url": "https://api.github.com/users/selfuryon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selfuryon/subscriptions", "organizations_url": "https://api.github.com/users/selfuryon/orgs", "repos_url": "https://api.github.com/users/selfuryon/repos", "events_url": "https://api.github.com/users/selfuryon/events{/privacy}", "received_events_url": "https://api.github.com/users/selfuryon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56834856, "node_id": "MDU6TGFiZWw1NjgzNDg1Ng==", "url": "https://api.github.com/repos/pexpect/pexpect/labels/bug", "name": "bug", "color": "e11d21", "default": true, "description": null}, {"id": 203947018, "node_id": "MDU6TGFiZWwyMDM5NDcwMTg=", "url": "https://api.github.com/repos/pexpect/pexpect/labels/needs-research", "name": "needs-research", "color": "fbca04", "default": false, "description": null}, {"id": 167953600, "node_id": "MDU6TGFiZWwxNjc5NTM2MDA=", "url": "https://api.github.com/repos/pexpect/pexpect/labels/needs-tests", "name": "needs-tests", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-04T08:30:53Z", "updated_at": "2016-10-08T14:01:40Z", "closed_at": "2016-10-08T14:01:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to write simple test script with async expect (Python 3.5.1 and Pexpect from github):\n\n``` python\n@asyncio.coroutine\ndef test_ssh_expect_async(num):\n    print('Task #{0} start'.format(num))\n    p = pexpect.spawn('ssh localhost', encoding='utf8')\n    #p.logfile = sys.stdout\n    yield from p.expect('password', async=True)\n    p.sendline('***')\n    yield from p.expect(r'@self-VirtualBox\\:', async=True)\n    p.sendline('uptime')\n    yield from p.expect(r'@self-VirtualBox\\:', async=True)\n    p.sendline('uname -a')\n    yield from p.expect(r'@self-VirtualBox\\:', async=True)\n    p.sendline('ll')\n    yield from p.expect(r'@self-VirtualBox\\:', async=True)\n    print('Task #{0} end'.format(num))\n\n@asyncio.coroutine\ndef test_loop():\n    tasks = []\n    for i in range(1, 5):\n        tasks.append(test_ssh_expect_async(i))\n    yield from asyncio.wait(tasks)\n    print('All Tasks done')\n\n\nprint('--------------Async--------------------')\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(test_loop())\n```\n\nAnd if I use `range (1,3)` or less in `test_loop()` - all will be fine:\n\n```\nself@self-VirtualBox:/media/sf_netdev$ python3 simple-test.py \n--------------Async--------------------\nTask #3 running\nTask #1 running\nTask #2 running\nTask #3 closed\nTask #1 closed\nTask #2 closed\nAll Tasks done\n```\n\nBut if I increase upper limit - script will not work:\n\n```\nself@self-VirtualBox:/media/sf_netdev$ python3 simple-test.py \n--------------Async--------------------\nTask #3 running\nTask #1 running\nTask #4 running\nTask #2 running\nException in callback BaseSelectorEventLoop.add_reader(11, <bound method...d=11 polling>>)\nhandle: <Handle BaseSelectorEventLoop.add_reader(11, <bound method...d=11 polling>>)>\nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/asyncio/selector_events.py\", line 234, in add_reader\n    key = self._selector.get_key(fd)\n  File \"/usr/lib/python3.5/selectors.py\", line 191, in get_key\n    raise KeyError(\"{!r} is not registered\".format(fileobj)) from None\nKeyError: '11 is not registered'\n\nDuring handling of the above exception, another exception occurred:\n...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/345", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/345/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/345/events", "html_url": "https://github.com/pexpect/pexpect/issues/345", "id": 150851334, "node_id": "MDU6SXNzdWUxNTA4NTEzMzQ=", "number": 345, "title": "pexpect 4.0.1  - searcher in output is NULL", "user": {"login": "novakmi", "id": 3268450, "node_id": "MDQ6VXNlcjMyNjg0NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3268450?v=4", "gravatar_id": "", "url": "https://api.github.com/users/novakmi", "html_url": "https://github.com/novakmi", "followers_url": "https://api.github.com/users/novakmi/followers", "following_url": "https://api.github.com/users/novakmi/following{/other_user}", "gists_url": "https://api.github.com/users/novakmi/gists{/gist_id}", "starred_url": "https://api.github.com/users/novakmi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/novakmi/subscriptions", "organizations_url": "https://api.github.com/users/novakmi/orgs", "repos_url": "https://api.github.com/users/novakmi/repos", "events_url": "https://api.github.com/users/novakmi/events{/privacy}", "received_events_url": "https://api.github.com/users/novakmi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-25T13:07:14Z", "updated_at": "2016-05-19T13:38:36Z", "closed_at": "2016-05-19T13:38:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like searcher value reported in failed `expect` is always NULL from 4.0.x.\n\nRun following script to reproduce:\n\n<pre>\n#!/usr/bin/python\nimport pexpect\nchild = pexpect.spawn('ls -l')\nchild.expect('total')\nprint \"searcher as string %s\" % str(child.searcher)\nprint\nprint \"searcher as rep %r\" % child.searcher\nprint\nchild2 = pexpect.spawn('ls -l')\nchild2.expect('total2')`\n</pre>\n\n\nWith pexpect 3.3 the output is:\n\n<pre>\nsearcher as string searcher_re:\n    0: re.compile(\"total\")\n\nsearcher as rep &lt;pexpect.searcher_re object at 0x7f127ec6b2d0&gt;\n....\nversion: 3.3\ncommand: /bin/ls\nargs: ['/bin/ls', '-l']\nsearcher: &lt;pexpect.searcher_re object at 0x7f127ec6b310&gt;\nbuffer (last 100 chars): ''\nbefore (last 100 chars): 'total 4\\r\\n-rwxrwxr-x 1 user user 251 Apr 25 14:51 pexpt_test.py\\r\\n'\nafter: &lt;class 'pexpect.EOF'&gt;\nmatch: None\n</pre>\n\n\nwith pexpect 4.0.1 the output is\n\n<pre>\nsearcher as string None\n\nsearcher as rep None\n....\ncommand: /bin/ls\nargs: ['/bin/ls', '-l']\nsearcher: None\nbuffer (last 100 chars): ''\nbefore (last 100 chars): 'total 4\\r\\n-rwxrwxr-x 1 user user 251 Apr 25 14:51 pexpt_test.py\\r\\n'\nafter: &lt;class 'pexpect.exceptions.EOF'&gt;\nmatch: None\nmatch_index: None\nexitstatus: 0\nflag_eof: True\npid: 32087\n</pre>\n\n- As you can see, the `searcher` in 4.0.1 is always NULL and is not reported.\n\nIn addition:\n- For 3.3. the sercher is printed as object `%r`, which does not give user much information, it should be printed as `str()` so user can see what was expected (see `print` commands in the example script)\n- For 4.0.1 `pexpect` version is not printed anymore  (see `version: 3.3.` for 3.3. output)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/344", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/344/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/344/events", "html_url": "https://github.com/pexpect/pexpect/issues/344", "id": 149256218, "node_id": "MDU6SXNzdWUxNDkyNTYyMTg=", "number": 344, "title": "\"pexpect.pxssh.ExceptionPxssh: could not set shell prompt\" on script that used to work", "user": {"login": "Committing", "id": 7887860, "node_id": "MDQ6VXNlcjc4ODc4NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7887860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Committing", "html_url": "https://github.com/Committing", "followers_url": "https://api.github.com/users/Committing/followers", "following_url": "https://api.github.com/users/Committing/following{/other_user}", "gists_url": "https://api.github.com/users/Committing/gists{/gist_id}", "starred_url": "https://api.github.com/users/Committing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Committing/subscriptions", "organizations_url": "https://api.github.com/users/Committing/orgs", "repos_url": "https://api.github.com/users/Committing/repos", "events_url": "https://api.github.com/users/Committing/events{/privacy}", "received_events_url": "https://api.github.com/users/Committing/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56834860, "node_id": "MDU6TGFiZWw1NjgzNDg2MA==", "url": "https://api.github.com/repos/pexpect/pexpect/labels/question", "name": "question", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-04-18T20:02:52Z", "updated_at": "2016-05-22T18:20:00Z", "closed_at": "2016-05-19T13:45:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was affected by the 123reg blackout where they deleted all their VPS'.\n\nI have rebuilt my web server (Same IP) and I am now trying to run the same python script to connect to my other (same) server.\n\nI get this error every time I try now and I cannot stop it.\n\n![image](https://i.gyazo.com/0a7f5093ce7b5324ba84c307fb455304.png)\n\nThe script couldn't be more simple:\n\n```\nfrom pexpect import pxssh\ns = pxssh.pxssh()\n\nif not s.login ('{server_ip}', '{server_user}', '{server_pass}'):\n    print \"SSH session failed on login.\"\nelse:\n    s.sendline(\"touch /var/node/example.txt;\")\n    s.prompt()\n    print s.before\n    s.logout()\n```\n\n---\n\nI have managed to supposedly get it to connect by altering it to this but then no commands are successful when I try them:\n\n```\nfrom pexpect import pxssh\ns = pxssh.pxssh()\n\nif not s.login ('{server_ip}', '{server_user}', '{server_pass}, auto_prompt_reset=False'):\n    print \"SSH session failed on login.\"\nelse:\n    s.sendline(\"touch /var/node/example.txt;\")\n    s.prompt()\n    print s.before\n    s.logout()\n```\n\nI used to connect to this server fine every time before without issue. It is only since I have rebuilt the server (Plesk) that it was stopped working and it's driving me nuts! :)\n\nAny ideas?\n\nEdit: I have tried using both python 2.6.6 and 2.7 but both fail with the same error.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/342", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/342/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/342/events", "html_url": "https://github.com/pexpect/pexpect/issues/342", "id": 146168369, "node_id": "MDU6SXNzdWUxNDYxNjgzNjk=", "number": 342, "title": "best practice for remote control spawned qemu images", "user": {"login": "teobo", "id": 6930861, "node_id": "MDQ6VXNlcjY5MzA4NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6930861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teobo", "html_url": "https://github.com/teobo", "followers_url": "https://api.github.com/users/teobo/followers", "following_url": "https://api.github.com/users/teobo/following{/other_user}", "gists_url": "https://api.github.com/users/teobo/gists{/gist_id}", "starred_url": "https://api.github.com/users/teobo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teobo/subscriptions", "organizations_url": "https://api.github.com/users/teobo/orgs", "repos_url": "https://api.github.com/users/teobo/repos", "events_url": "https://api.github.com/users/teobo/events{/privacy}", "received_events_url": "https://api.github.com/users/teobo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56834860, "node_id": "MDU6TGFiZWw1NjgzNDg2MA==", "url": "https://api.github.com/repos/pexpect/pexpect/labels/question", "name": "question", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-06T02:33:07Z", "updated_at": "2016-05-19T13:48:22Z", "closed_at": "2016-05-19T13:48:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n1)being newbie I dare asking for **best practice for remote controlling qemu** (even so it is much qemu topic):\nSome times I got the I idea that on the long run, there could be better ways to remote control a quest. Maybe ssh and keys, as soon as possible. Normally the spawned process needs to first started. \n-For connecting to a running guest, you needed a second pexpect process then, dont you?\n-Or you may say pexpect and qemu is perfect form beginning to end: for installing packages, starting and stopping services \n-and as there is no other out of box option, neither, qemu \"user network mode\" offers no IP-Connection from the host. So connecting from the host by ssh is that easy neither.\n-one might alternatively opt to chroot into the image, configure ssh-server at init, and go without pexpect for that task?\n\n2)Another problem is that much qemu -images offered boot directly to the window manager and not to the terminal login. How can this be secured? Are not there any kernel boot option to guide the init process to the terminal.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/341", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/341/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/341/events", "html_url": "https://github.com/pexpect/pexpect/issues/341", "id": 146164473, "node_id": "MDU6SXNzdWUxNDYxNjQ0NzM=", "number": 341, "title": "file created will have disappeared next reboot", "user": {"login": "teobo", "id": 6930861, "node_id": "MDQ6VXNlcjY5MzA4NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6930861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teobo", "html_url": "https://github.com/teobo", "followers_url": "https://api.github.com/users/teobo/followers", "following_url": "https://api.github.com/users/teobo/following{/other_user}", "gists_url": "https://api.github.com/users/teobo/gists{/gist_id}", "starred_url": "https://api.github.com/users/teobo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teobo/subscriptions", "organizations_url": "https://api.github.com/users/teobo/orgs", "repos_url": "https://api.github.com/users/teobo/repos", "events_url": "https://api.github.com/users/teobo/events{/privacy}", "received_events_url": "https://api.github.com/users/teobo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-06T02:12:03Z", "updated_at": "2016-04-06T17:27:32Z", "closed_at": "2016-04-06T17:27:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n using a snippet as this the file created will have disappeared next reboot what happened?\n That is 1.txt is not existing after next reboot anymore. \n What would be a good practice to create persistent files?\ntia\n\n```\nchild.sendline(user)\nchild.expect('(?i)password:')\nchild.sendline(password)\nchild.expect(\".*\\# \")\nchild.send(\"echo hello>1.txt\\r\")\n\nchild.expect(\".*\\# \")\nchild.sendline(\"ls /root/\\r\")\nchild.expect(\".*\\# \")\nchild.sendline(\"echo hell >/root/12.txt\\r\")\nchild.expect(\".*\\# \")\n```\n\n...\n\noutputs:\n\n```\nroot@debian-amd64:~# ls /root/\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/339", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/339/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/339/events", "html_url": "https://github.com/pexpect/pexpect/issues/339", "id": 140925021, "node_id": "MDU6SXNzdWUxNDA5MjUwMjE=", "number": 339, "title": "pxssh import issue", "user": {"login": "rubycarlin", "id": 6087591, "node_id": "MDQ6VXNlcjYwODc1OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6087591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rubycarlin", "html_url": "https://github.com/rubycarlin", "followers_url": "https://api.github.com/users/rubycarlin/followers", "following_url": "https://api.github.com/users/rubycarlin/following{/other_user}", "gists_url": "https://api.github.com/users/rubycarlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/rubycarlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rubycarlin/subscriptions", "organizations_url": "https://api.github.com/users/rubycarlin/orgs", "repos_url": "https://api.github.com/users/rubycarlin/repos", "events_url": "https://api.github.com/users/rubycarlin/events{/privacy}", "received_events_url": "https://api.github.com/users/rubycarlin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56834860, "node_id": "MDU6TGFiZWw1NjgzNDg2MA==", "url": "https://api.github.com/repos/pexpect/pexpect/labels/question", "name": "question", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-15T09:55:01Z", "updated_at": "2016-05-19T13:51:20Z", "closed_at": "2016-05-19T13:51:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "import pxssh\n\nTraceback (most recent call last):\n  File \"<pyshell#1>\", line 1, in <module>\n    import pxssh\nImportError: No module named pxssh\n\nfrom pexpect import pxssh\n\nTraceback (most recent call last):\n  File \"<pyshell#3>\", line 1, in <module>\n    from pexpect import pxssh\n  File \"C:\\Python27\\lib\\site-packages\\pexpect-4.0.1-py2.7.egg\\pexpect\\pxssh.py\", line 23, in <module>\n    from pexpect import ExceptionPexpect, TIMEOUT, EOF, spawn\nImportError: cannot import name spawn\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/336", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/336/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/336/events", "html_url": "https://github.com/pexpect/pexpect/issues/336", "id": 138328777, "node_id": "MDU6SXNzdWUxMzgzMjg3Nzc=", "number": 336, "title": "pxssh login not working with password warning", "user": {"login": "joelcollinsdc", "id": 124740, "node_id": "MDQ6VXNlcjEyNDc0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/124740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joelcollinsdc", "html_url": "https://github.com/joelcollinsdc", "followers_url": "https://api.github.com/users/joelcollinsdc/followers", "following_url": "https://api.github.com/users/joelcollinsdc/following{/other_user}", "gists_url": "https://api.github.com/users/joelcollinsdc/gists{/gist_id}", "starred_url": "https://api.github.com/users/joelcollinsdc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joelcollinsdc/subscriptions", "organizations_url": "https://api.github.com/users/joelcollinsdc/orgs", "repos_url": "https://api.github.com/users/joelcollinsdc/repos", "events_url": "https://api.github.com/users/joelcollinsdc/events{/privacy}", "received_events_url": "https://api.github.com/users/joelcollinsdc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56834860, "node_id": "MDU6TGFiZWw1NjgzNDg2MA==", "url": "https://api.github.com/repos/pexpect/pexpect/labels/question", "name": "question", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-03T23:26:16Z", "updated_at": "2016-05-19T13:54:12Z", "closed_at": "2016-05-19T13:54:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm (still) working on a script to reset passwords... now trying with pxssh\n\nthis line:\n\n`i = self.expect([\"(?i)are you sure you want to continue connecting\", original_prompt, \"(?i)(?:password)|(?:passphrase for key)\", \"(?i)permission denied\", \"(?i)terminal type\", TIMEOUT, \"(?i)connection closed by remote host\"], timeout=login_timeout)`\n\nfails (i = 2) when this string is returned after the login:\nWarning: your password will expire in 3 days\n\nI realize the doc describes .hushlogin, which does work when I add this... but i'm hoping theres another way.  Is there a way that that that prompt can be made to not trigger the i=2 logic without a .hushlogin file?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/334", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/334/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/334/events", "html_url": "https://github.com/pexpect/pexpect/issues/334", "id": 138238117, "node_id": "MDU6SXNzdWUxMzgyMzgxMTc=", "number": 334, "title": "support request: passmass potential changes / improvements", "user": {"login": "joelcollinsdc", "id": 124740, "node_id": "MDQ6VXNlcjEyNDc0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/124740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joelcollinsdc", "html_url": "https://github.com/joelcollinsdc", "followers_url": "https://api.github.com/users/joelcollinsdc/followers", "following_url": "https://api.github.com/users/joelcollinsdc/following{/other_user}", "gists_url": "https://api.github.com/users/joelcollinsdc/gists{/gist_id}", "starred_url": "https://api.github.com/users/joelcollinsdc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joelcollinsdc/subscriptions", "organizations_url": "https://api.github.com/users/joelcollinsdc/orgs", "repos_url": "https://api.github.com/users/joelcollinsdc/repos", "events_url": "https://api.github.com/users/joelcollinsdc/events{/privacy}", "received_events_url": "https://api.github.com/users/joelcollinsdc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-03T17:05:39Z", "updated_at": "2016-03-03T22:06:07Z", "closed_at": "2016-03-03T22:06:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a few questions around passmass:\n- the log file records passwords, perhaps we should remove the log file by default but describe how to add it back in to troubleshoot?  happy to comment out the log line in a PR if you recommend this approach\n- I did some dumb stuff to my password prompt ([\\e[0;31m][\\u@\\h \\W]\\$[\\e[0m] ), do you have a recommended way I could add some additional characters to COMMAND_PROMPT = '[$#] ' to accommodate this or am I out of luck?\n- [removed 3rd question]\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/332", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/332/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/332/events", "html_url": "https://github.com/pexpect/pexpect/issues/332", "id": 138217623, "node_id": "MDU6SXNzdWUxMzgyMTc2MjM=", "number": 332, "title": "passmass not working", "user": {"login": "joelcollinsdc", "id": 124740, "node_id": "MDQ6VXNlcjEyNDc0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/124740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joelcollinsdc", "html_url": "https://github.com/joelcollinsdc", "followers_url": "https://api.github.com/users/joelcollinsdc/followers", "following_url": "https://api.github.com/users/joelcollinsdc/following{/other_user}", "gists_url": "https://api.github.com/users/joelcollinsdc/gists{/gist_id}", "starred_url": "https://api.github.com/users/joelcollinsdc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joelcollinsdc/subscriptions", "organizations_url": "https://api.github.com/users/joelcollinsdc/orgs", "repos_url": "https://api.github.com/users/joelcollinsdc/repos", "events_url": "https://api.github.com/users/joelcollinsdc/events{/privacy}", "received_events_url": "https://api.github.com/users/joelcollinsdc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-03T15:55:54Z", "updated_at": "2016-05-19T13:56:03Z", "closed_at": "2016-05-19T13:56:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this when trying to run passmass (python 2.7)\n\nTraceback (most recent call last):\n  File \"./passmass.py\", line 116, in <module>\n    main()\n  File \"./passmass.py\", line 106, in main\n    child = login(host, user, password)\n  File \"./passmass.py\", line 49, in login\n    child.setlog (fout)\n  File \"/usr/lib/python2.7/dist-packages/pexpect/**init**.py\", line 1721, in setlog\n    'member variable.')\npexpect.ExceptionPexpect: This method is no longer supported or allowed. Just assign a value to the logfile member variable.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/331", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/331/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/331/events", "html_url": "https://github.com/pexpect/pexpect/issues/331", "id": 137880921, "node_id": "MDU6SXNzdWUxMzc4ODA5MjE=", "number": 331, "title": "replwrap.run_command stdout & stderr hook", "user": {"login": "jkgeyti", "id": 617033, "node_id": "MDQ6VXNlcjYxNzAzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/617033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkgeyti", "html_url": "https://github.com/jkgeyti", "followers_url": "https://api.github.com/users/jkgeyti/followers", "following_url": "https://api.github.com/users/jkgeyti/following{/other_user}", "gists_url": "https://api.github.com/users/jkgeyti/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkgeyti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkgeyti/subscriptions", "organizations_url": "https://api.github.com/users/jkgeyti/orgs", "repos_url": "https://api.github.com/users/jkgeyti/repos", "events_url": "https://api.github.com/users/jkgeyti/events{/privacy}", "received_events_url": "https://api.github.com/users/jkgeyti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56834860, "node_id": "MDU6TGFiZWw1NjgzNDg2MA==", "url": "https://api.github.com/repos/pexpect/pexpect/labels/question", "name": "question", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-03-02T14:00:32Z", "updated_at": "2016-05-19T14:07:34Z", "closed_at": "2016-05-19T14:07:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running slow commands with occasional output in replwrap, it would be good to be able to receive output as it's written to stdout/stderr.\n\nFor my own purpose, I've just added an optional lambda argument to `replwrap.run_command`, that is called with `self.child.before` in the inner loop, whenever it's appended to `res` (see below), but it would be good to have this implemented in a more rigorous manner, separating stdout from stderr output.\n\n```\ndef run_command(self, command, timeout=-1, progress_fn=None): # added progress_fn\n    ...\n    for line in cmdlines[1:]:\n        ...\n        res.append(self.child.before)\n        progress_fn(self.child.before) # added line\n    ...\n    return u''.join(res + [self.child.before])\n```\n\nI'd be happy to take a stab at it, but I haven't looked further into the source, and wanted to get some feedback on the idea first.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/329", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/329/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/329/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/329/events", "html_url": "https://github.com/pexpect/pexpect/issues/329", "id": 135632170, "node_id": "MDU6SXNzdWUxMzU2MzIxNzA=", "number": 329, "title": "Execution returns <pexpect.popen_spawn.PopenSpawn object at 0x029678F0>", "user": {"login": "msmosso", "id": 530015, "node_id": "MDQ6VXNlcjUzMDAxNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/530015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msmosso", "html_url": "https://github.com/msmosso", "followers_url": "https://api.github.com/users/msmosso/followers", "following_url": "https://api.github.com/users/msmosso/following{/other_user}", "gists_url": "https://api.github.com/users/msmosso/gists{/gist_id}", "starred_url": "https://api.github.com/users/msmosso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msmosso/subscriptions", "organizations_url": "https://api.github.com/users/msmosso/orgs", "repos_url": "https://api.github.com/users/msmosso/repos", "events_url": "https://api.github.com/users/msmosso/events{/privacy}", "received_events_url": "https://api.github.com/users/msmosso/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56834860, "node_id": "MDU6TGFiZWw1NjgzNDg2MA==", "url": "https://api.github.com/repos/pexpect/pexpect/labels/question", "name": "question", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-23T04:45:40Z", "updated_at": "2016-02-24T11:51:55Z", "closed_at": "2016-02-24T11:51:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\n\nWhen I run the following code, i'm receiving just <pexpect.popen_spawn.PopenSpawn object at 0x029678F0>\n\nWhat's wrong?\n\nThanks in advance.\n\n```\nimport pexpect\nfrom pexpect import popen_spawn\nimport sys\n\ntry:\n    co = pexpect.popen_spawn.PopenSpawn('ftp localhost',encoding=\"utf-8\")\n    co.expect(\"\",timeout=30)\n    co.logfile = sys.stdout\n    co.timeout = 4\n    co.expect(\":\")\n    co.sendline(\"test\")\n    co.expect(\".*word:.*\")\n    co.sendline(\"test123\")\n    co.sendline('dir')\n    co.expect('ftp>')\n    co.close()\n\n\nexcept Exception as e:\n    print(co)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/328", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/328/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/328/events", "html_url": "https://github.com/pexpect/pexpect/issues/328", "id": 135625153, "node_id": "MDU6SXNzdWUxMzU2MjUxNTM=", "number": 328, "title": "AttributeError: 'module' object has no attribute 'popen_spawn'", "user": {"login": "msmosso", "id": 530015, "node_id": "MDQ6VXNlcjUzMDAxNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/530015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msmosso", "html_url": "https://github.com/msmosso", "followers_url": "https://api.github.com/users/msmosso/followers", "following_url": "https://api.github.com/users/msmosso/following{/other_user}", "gists_url": "https://api.github.com/users/msmosso/gists{/gist_id}", "starred_url": "https://api.github.com/users/msmosso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msmosso/subscriptions", "organizations_url": "https://api.github.com/users/msmosso/orgs", "repos_url": "https://api.github.com/users/msmosso/repos", "events_url": "https://api.github.com/users/msmosso/events{/privacy}", "received_events_url": "https://api.github.com/users/msmosso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-23T04:00:41Z", "updated_at": "2018-01-13T09:50:30Z", "closed_at": "2016-02-23T04:28:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\n\nI'm facing the following issue\n\n```\nC:\\Users\\Matheus>python\nPython 2.7.11 (v2.7.11:6d1b6a68f775, Dec  5 2015, 20:32:19) [MSC v.1500 32 bit (Intel)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pexpect\n>>> p = pexpect.popen_spawn.PopenSpawn('dir')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'module' object has no attribute 'popen_spawn'\n```\n\nDo you have any clues?\n\nThanks in advance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/324", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/324/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/324/events", "html_url": "https://github.com/pexpect/pexpect/issues/324", "id": 132710725, "node_id": "MDU6SXNzdWUxMzI3MTA3MjU=", "number": 324, "title": "How to handle killed process", "user": {"login": "egorf", "id": 7365554, "node_id": "MDQ6VXNlcjczNjU1NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7365554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egorf", "html_url": "https://github.com/egorf", "followers_url": "https://api.github.com/users/egorf/followers", "following_url": "https://api.github.com/users/egorf/following{/other_user}", "gists_url": "https://api.github.com/users/egorf/gists{/gist_id}", "starred_url": "https://api.github.com/users/egorf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egorf/subscriptions", "organizations_url": "https://api.github.com/users/egorf/orgs", "repos_url": "https://api.github.com/users/egorf/repos", "events_url": "https://api.github.com/users/egorf/events{/privacy}", "received_events_url": "https://api.github.com/users/egorf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-10T14:17:43Z", "updated_at": "2016-02-10T15:14:25Z", "closed_at": "2016-02-10T14:51:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nI recently [asked a question](https://github.com/pexpect/pexpect/issues/322) about killing a process from another thread. \n\nHow do I check if the process was killed or finished correctly by itself? What I did in the first place was to check `child.signalstatus` was not `None` after `child.expect(pexpect.EOF)` occurred. However, that does not  really seem to be stable and sometimes `child.signalstatus` stays `None` after the process is killed. \n\nIs that how it is supposed to be and I am doing something wrong or is it a bug?\nHow else can I check if the process was killed? \n\nPython 2.7.3, Pexpect 3.3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/322", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/322/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/322/events", "html_url": "https://github.com/pexpect/pexpect/issues/322", "id": 129494956, "node_id": "MDU6SXNzdWUxMjk0OTQ5NTY=", "number": 322, "title": "Can not kill spawned child from another thread", "user": {"login": "egorf", "id": 7365554, "node_id": "MDQ6VXNlcjczNjU1NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7365554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egorf", "html_url": "https://github.com/egorf", "followers_url": "https://api.github.com/users/egorf/followers", "following_url": "https://api.github.com/users/egorf/following{/other_user}", "gists_url": "https://api.github.com/users/egorf/gists{/gist_id}", "starred_url": "https://api.github.com/users/egorf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egorf/subscriptions", "organizations_url": "https://api.github.com/users/egorf/orgs", "repos_url": "https://api.github.com/users/egorf/repos", "events_url": "https://api.github.com/users/egorf/events{/privacy}", "received_events_url": "https://api.github.com/users/egorf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56834860, "node_id": "MDU6TGFiZWw1NjgzNDg2MA==", "url": "https://api.github.com/repos/pexpect/pexpect/labels/question", "name": "question", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-28T16:10:28Z", "updated_at": "2016-01-29T11:15:13Z", "closed_at": "2016-01-29T10:39:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \n\nIs there a correct way to expect a killed process? When I try to kill a process, started by another thread, I can't see the `EOF` exception, but instead see the standard 30 seconds timeout.\n\nI am using `Python 2.7.3`, `pexpect 3.3`. I can't upgrade the packages at the moment.\n\nPlease take a look at this example(nvm the creepy ChildHolder name). I run `sleep 5` command in a separate thread, then run spawn.close() in the main thread. Instead of exiting immediately after the command, I need to wait 30 seconds. \n\n```\nimport threading\nimport pexpect\nimport time\n\nclass ChildHolder:\n\n    def __init__(self):\n        self.child = 0\n\n    def do_stuff(self):\n        print(\"Spawning\")\n        self.child = pexpect.spawn(\"sleep 5\")\n        print(\"Expecting\")\n        self.child.expect(pexpect.EOF)\n        print(\"Done\")\n\nprint(\"Pexpect testing\")\nch = ChildHolder()\n\ntest_thread = threading.Thread(target = ch.do_stuff)\ntest_thread.start()\nprint(\"thread started\")\n\ntime.sleep(1)\n\nch.child.close()\nprint(\"Process killed\")\n\nprint(\"Waiting for join\")\ntest_thread.join()\nprint(\"Over\")\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/321", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/321/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/321/events", "html_url": "https://github.com/pexpect/pexpect/issues/321", "id": 128552631, "node_id": "MDU6SXNzdWUxMjg1NTI2MzE=", "number": 321, "title": " AttributeError: 'module' object has no attribute 'spawn' (New Issue)", "user": {"login": "redraven984", "id": 13949732, "node_id": "MDQ6VXNlcjEzOTQ5NzMy", "avatar_url": "https://avatars3.githubusercontent.com/u/13949732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redraven984", "html_url": "https://github.com/redraven984", "followers_url": "https://api.github.com/users/redraven984/followers", "following_url": "https://api.github.com/users/redraven984/following{/other_user}", "gists_url": "https://api.github.com/users/redraven984/gists{/gist_id}", "starred_url": "https://api.github.com/users/redraven984/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redraven984/subscriptions", "organizations_url": "https://api.github.com/users/redraven984/orgs", "repos_url": "https://api.github.com/users/redraven984/repos", "events_url": "https://api.github.com/users/redraven984/events{/privacy}", "received_events_url": "https://api.github.com/users/redraven984/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-25T14:52:34Z", "updated_at": "2016-01-25T15:42:07Z", "closed_at": "2016-01-25T15:42:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\n\nI'm getting the same error described here: https://github.com/pexpect/pexpect/issues/166\n\nAttributeError: 'module' object has no attribute 'spawn'\n\nI checked the path and it looks like python is referencing the correct location (site-packages). I am running windows 8.1 and python 2.7.\n\nWhat else should I check?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/318", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/318/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/318/events", "html_url": "https://github.com/pexpect/pexpect/issues/318", "id": 126410672, "node_id": "MDU6SXNzdWUxMjY0MTA2NzI=", "number": 318, "title": "pip install error on python2", "user": {"login": "IlyaSukhanov", "id": 1637068, "node_id": "MDQ6VXNlcjE2MzcwNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1637068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IlyaSukhanov", "html_url": "https://github.com/IlyaSukhanov", "followers_url": "https://api.github.com/users/IlyaSukhanov/followers", "following_url": "https://api.github.com/users/IlyaSukhanov/following{/other_user}", "gists_url": "https://api.github.com/users/IlyaSukhanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/IlyaSukhanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IlyaSukhanov/subscriptions", "organizations_url": "https://api.github.com/users/IlyaSukhanov/orgs", "repos_url": "https://api.github.com/users/IlyaSukhanov/repos", "events_url": "https://api.github.com/users/IlyaSukhanov/events{/privacy}", "received_events_url": "https://api.github.com/users/IlyaSukhanov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56834860, "node_id": "MDU6TGFiZWw1NjgzNDg2MA==", "url": "https://api.github.com/repos/pexpect/pexpect/labels/question", "name": "question", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-13T12:43:12Z", "updated_at": "2016-01-13T19:28:03Z", "closed_at": "2016-01-13T16:59:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Get the following error when running `pip install pexpect` in a clean python2 virtualenv\n\n> Installing collected packages: pexpect, ptyprocess\n>  Running setup.py install for pexpect\n>      File \"/home/user/.virtualenvs/pexpect_test/lib/python2.7/site-packages/pexpect/async.py\", line 16\n>        transport, pw = yield from asyncio.get_event_loop()\\\n>                                 ^\n>    SyntaxError: invalid syntax\n\nThe same command works in python3 virtualenv.\n\nIs python2 supported?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/317", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/317/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/317/events", "html_url": "https://github.com/pexpect/pexpect/issues/317", "id": 125998798, "node_id": "MDU6SXNzdWUxMjU5OTg3OTg=", "number": 317, "title": "Read text after matched text or without expect", "user": {"login": "pamolloy", "id": 996930, "node_id": "MDQ6VXNlcjk5NjkzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/996930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pamolloy", "html_url": "https://github.com/pamolloy", "followers_url": "https://api.github.com/users/pamolloy/followers", "following_url": "https://api.github.com/users/pamolloy/following{/other_user}", "gists_url": "https://api.github.com/users/pamolloy/gists{/gist_id}", "starred_url": "https://api.github.com/users/pamolloy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pamolloy/subscriptions", "organizations_url": "https://api.github.com/users/pamolloy/orgs", "repos_url": "https://api.github.com/users/pamolloy/repos", "events_url": "https://api.github.com/users/pamolloy/events{/privacy}", "received_events_url": "https://api.github.com/users/pamolloy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 56834860, "node_id": "MDU6TGFiZWw1NjgzNDg2MA==", "url": "https://api.github.com/repos/pexpect/pexpect/labels/question", "name": "question", "color": "bfd4f2", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-01-11T17:46:13Z", "updated_at": "2016-01-14T01:36:06Z", "closed_at": "2016-01-14T01:36:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm connecting to a device and trying to login. The state is unknown, but since I'm connecting through `minicom` there is a consistent welcome message. Manually connecting with `minicom`, I simply hit Enter and then may see a user prompt, root prompt or login prompt. Additionally, when logging in I sometimes run into other weird messages.\n\nHow can I check the text after the text that was matched by the expected pattern? Or how can I check the output without calling `expect()`?\n\n> The `before` property will contain all text up to the expected string pattern. The `after` string will contain the text that was matched by the expected pattern.\n\nThe above naming is a bit confusing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/316", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/316/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/316/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/316/events", "html_url": "https://github.com/pexpect/pexpect/issues/316", "id": 125805394, "node_id": "MDU6SXNzdWUxMjU4MDUzOTQ=", "number": 316, "title": "conda install appears incomplete", "user": {"login": "wasade", "id": 474290, "node_id": "MDQ6VXNlcjQ3NDI5MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/474290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wasade", "html_url": "https://github.com/wasade", "followers_url": "https://api.github.com/users/wasade/followers", "following_url": "https://api.github.com/users/wasade/following{/other_user}", "gists_url": "https://api.github.com/users/wasade/gists{/gist_id}", "starred_url": "https://api.github.com/users/wasade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wasade/subscriptions", "organizations_url": "https://api.github.com/users/wasade/orgs", "repos_url": "https://api.github.com/users/wasade/repos", "events_url": "https://api.github.com/users/wasade/events{/privacy}", "received_events_url": "https://api.github.com/users/wasade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-01-10T07:20:04Z", "updated_at": "2016-02-16T01:56:13Z", "closed_at": "2016-01-10T11:58:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm unable to do an import of pexpect after a conda install. It appears that the `exceptions.py` file is missing. Details below using a new conda environment, clean pexpect install on CentOS 6.6\n\n``` bash\n$ conda install pexpect\nFetching package metadata: ....\nSolving package specifications: .\nPackage plan for installation in environment /home/REMOVED/miniconda3/envs/test:\n\nThe following NEW packages will be INSTALLED:\n\n    pexpect: 3.3-py27_0\n\nProceed ([y]/n)? y\n\nLinking packages ...\n[      COMPLETE      ]|##############################################################################################################################################| 100%\n$ python -c \"import pexpect\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/home/REMOVED/miniconda3/envs/test/lib/python2.7/site-packages/pexpect/__init__.py\", line 69, in <module>\n    from .exceptions import ExceptionPexpect, EOF, TIMEOUT\nImportError: No module named exceptions\n$ ls /home/REMOVED/miniconda3/envs/icu/lib/python2.7/site-packages/pexpect/\nANSI.py  ANSI.pyc  fdpexpect.py  fdpexpect.pyc  FSM.py  FSM.pyc  __init__.py  __init__.pyc  pxssh.py  pxssh.pyc  replwrap.py  replwrap.pyc  screen.py  screen.pyc\n$ python --version\nPython 2.7.11 :: Continuum Analytics, Inc.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/315", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/315/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/315/events", "html_url": "https://github.com/pexpect/pexpect/issues/315", "id": 125527796, "node_id": "MDU6SXNzdWUxMjU1Mjc3OTY=", "number": 315, "title": "Issues with asyncio on Python 3.5", "user": {"login": "takeda", "id": 411978, "node_id": "MDQ6VXNlcjQxMTk3OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/411978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takeda", "html_url": "https://github.com/takeda", "followers_url": "https://api.github.com/users/takeda/followers", "following_url": "https://api.github.com/users/takeda/following{/other_user}", "gists_url": "https://api.github.com/users/takeda/gists{/gist_id}", "starred_url": "https://api.github.com/users/takeda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takeda/subscriptions", "organizations_url": "https://api.github.com/users/takeda/orgs", "repos_url": "https://api.github.com/users/takeda/repos", "events_url": "https://api.github.com/users/takeda/events{/privacy}", "received_events_url": "https://api.github.com/users/takeda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 262334027, "node_id": "MDU6TGFiZWwyNjIzMzQwMjc=", "url": "https://api.github.com/repos/pexpect/pexpect/labels/needs-code", "name": "needs-code", "color": "d4c5f9", "default": false, "description": null}, {"id": 260881691, "node_id": "MDU6TGFiZWwyNjA4ODE2OTE=", "url": "https://api.github.com/repos/pexpect/pexpect/labels/needs-decision", "name": "needs-decision", "color": "bfdadc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-01-08T02:21:34Z", "updated_at": "2017-08-22T13:24:58Z", "closed_at": "2017-08-22T13:24:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's very difficult to use methods that have async parameter such as expect() in Python 3.5.\n\nThe keyword 'async' is reserved in async coroutines (e.g. \"async def function\") which causes python to throw syntax error.\n\nIf possible instead of renaming the variable can pexpect support asyncio in similar fashion to for example https://github.com/cablehead/python-consul\n\nfor example\n\n```\nc = consul.Consul()\n```\n\nuses blocking mode\n\n```\nc = consul.aio.Consul()\n```\n\nuses asyncio\n\nPassing `async = true` each time when using expect() and related methods is a bit annoying.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/314", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/314/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/314/events", "html_url": "https://github.com/pexpect/pexpect/issues/314", "id": 125195043, "node_id": "MDU6SXNzdWUxMjUxOTUwNDM=", "number": 314, "title": "interact display corrupted", "user": {"login": "2020sebastian", "id": 2660509, "node_id": "MDQ6VXNlcjI2NjA1MDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2660509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/2020sebastian", "html_url": "https://github.com/2020sebastian", "followers_url": "https://api.github.com/users/2020sebastian/followers", "following_url": "https://api.github.com/users/2020sebastian/following{/other_user}", "gists_url": "https://api.github.com/users/2020sebastian/gists{/gist_id}", "starred_url": "https://api.github.com/users/2020sebastian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/2020sebastian/subscriptions", "organizations_url": "https://api.github.com/users/2020sebastian/orgs", "repos_url": "https://api.github.com/users/2020sebastian/repos", "events_url": "https://api.github.com/users/2020sebastian/events{/privacy}", "received_events_url": "https://api.github.com/users/2020sebastian/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-06T15:16:10Z", "updated_at": "2016-02-15T01:02:29Z", "closed_at": "2016-02-15T01:02:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\ndef jumpTwice():\n        process = pexpect.spawn(\"ssh -o 'StrictHostKeyChecking no' \"+user+\"@\"+firstHost, maxread=5000)\n        process.expect(\"assword:\")\n        process.sendline(onePass)\n        process.sendline(\"\\r\")\n        process.sendline(\"ssh -o 'StrictHostKeyChecking no' \"+user+\"@\"+ secondHost)\n        process.expect(\"assword\")\n        process.sendline(onePass)\n        process.sendline(\"ssh -o 'StrictHostKeyChecking no' \"+systemUser+\"@\"+userHost)\n        process.sendline(\"\\r\")\n        i = process.expect(\"assword\")\n        if i == 0:\n            process.sendline(Pass)\n\n        process.sendline(\"bash\")\n\n        try:\n            process.interact()\n            sys.exit(0)\n        except:\n            sys.exit(1)\n```\n\nUsing this to log in to linux boxes and works fine for just navigating around, but when I \"less\" a larger log file I can't move up and down with arrows, just page up/down, and the output gets corrupted.\n\nAfter I exit from the boxes and back to my localhost, output stays corrupted (if I do ls -al it will try and overwrite over what's on the screen instead of clearing it)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/pexpect/pexpect/issues/305", "repository_url": "https://api.github.com/repos/pexpect/pexpect", "labels_url": "https://api.github.com/repos/pexpect/pexpect/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/pexpect/pexpect/issues/305/comments", "events_url": "https://api.github.com/repos/pexpect/pexpect/issues/305/events", "html_url": "https://github.com/pexpect/pexpect/issues/305", "id": 121060896, "node_id": "MDU6SXNzdWUxMjEwNjA4OTY=", "number": 305, "title": "\"Timeout exceeded\" when using replwrap", "user": {"login": "ajmazurie", "id": 240550, "node_id": "MDQ6VXNlcjI0MDU1MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/240550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajmazurie", "html_url": "https://github.com/ajmazurie", "followers_url": "https://api.github.com/users/ajmazurie/followers", "following_url": "https://api.github.com/users/ajmazurie/following{/other_user}", "gists_url": "https://api.github.com/users/ajmazurie/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajmazurie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajmazurie/subscriptions", "organizations_url": "https://api.github.com/users/ajmazurie/orgs", "repos_url": "https://api.github.com/users/ajmazurie/repos", "events_url": "https://api.github.com/users/ajmazurie/events{/privacy}", "received_events_url": "https://api.github.com/users/ajmazurie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-08T17:45:49Z", "updated_at": "2015-12-12T22:13:42Z", "closed_at": "2015-12-12T22:13:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI had success in the past using `pexpect` to bring a BASH terminal-like interface in a Jupyter notebook. Today however I'm having a \"Timeout exceeded\" error when doing so and I'm not sure what is causing the problem. The simplest code reproducing this error on my machine is as follows:\n\n``` python\nPython 2.7.10 (default, Sep 28 2015, 20:58:10) \n[GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.72)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pexpect.replwrap\n>>> pexpect.replwrap.bash()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/ajmazurie/.pyenv/versions/jupyter/lib/python2.7/site-packages/pexpect/replwrap.py\", line 113, in bash\n    extra_init_cmd=\"export PAGER=cat\")\n  File \"/Users/ajmazurie/.pyenv/versions/jupyter/lib/python2.7/site-packages/pexpect/replwrap.py\", line 51, in __init__\n    prompt_change.format(new_prompt, continuation_prompt))\n  File \"/Users/ajmazurie/.pyenv/versions/jupyter/lib/python2.7/site-packages/pexpect/replwrap.py\", line 61, in set_prompt\n    self.child.expect(orig_prompt)\n  File \"/Users/ajmazurie/.pyenv/versions/jupyter/lib/python2.7/site-packages/pexpect/spawnbase.py\", line 315, in expect\n    timeout, searchwindowsize, async)\n  File \"/Users/ajmazurie/.pyenv/versions/jupyter/lib/python2.7/site-packages/pexpect/spawnbase.py\", line 339, in expect_list\n    return exp.expect_loop(timeout)\n  File \"/Users/ajmazurie/.pyenv/versions/jupyter/lib/python2.7/site-packages/pexpect/expect.py\", line 104, in expect_loop\n    return self.timeout(e)\n  File \"/Users/ajmazurie/.pyenv/versions/jupyter/lib/python2.7/site-packages/pexpect/expect.py\", line 68, in timeout\n    raise TIMEOUT(msg)\npexpect.exceptions.TIMEOUT: Timeout exceeded.\n<pexpect.pty_spawn.spawn object at 0x10548e890>\ncommand: /bin/bash\nargs: ['/bin/bash', '--rcfile', '/Users/ajmazurie/.pyenv/versions/jupyter/lib/python2.7/site-packages/pexpect/bashrc.sh']\nsearcher: None\nbuffer (last 100 chars): u'\\x1b[?1034h(jupyter)%{\\x1b[33m%}Indigo %B%{\\x1b[33m%}%30<...<%~%b %{\\x1b[36m%}%% %{\\x1b[00m%}'\nbefore (last 100 chars): u'\\x1b[?1034h(jupyter)%{\\x1b[33m%}Indigo %B%{\\x1b[33m%}%30<...<%~%b %{\\x1b[36m%}%% %{\\x1b[00m%}'\nafter: <class 'pexpect.exceptions.TIMEOUT'>\nmatch: None\nmatch_index: None\nexitstatus: None\nflag_eof: False\npid: 95592\nchild_fd: 5\nclosed: False\ntimeout: 30\ndelimiter: <class 'pexpect.exceptions.EOF'>\nlogfile: None\nlogfile_read: None\nlogfile_send: None\nmaxread: 2000\nignorecase: False\nsearchwindowsize: None\ndelaybeforesend: 0.05\ndelayafterclose: 0.1\ndelayafterterminate: 0.1\n>>> \n```\n\nNote that there is no such file `'/Users/ajmazurie/.pyenv/versions/jupyter/lib/python2.7/site-packages/pexpect/bashrc.sh`; not sure if that is relevant.\n\nBest,\nAurelien\n", "performed_via_github_app": null, "score": 1.0}]}