{"total_count": 22, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/noahmorrison/chevron/issues/58", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/58/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/58/events", "html_url": "https://github.com/noahmorrison/chevron/issues/58", "id": 494238569, "node_id": "MDU6SXNzdWU0OTQyMzg1Njk=", "number": 58, "title": "Feature Request: Chevron support of parsing template", "user": {"login": "spra85", "id": 423943, "node_id": "MDQ6VXNlcjQyMzk0Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/423943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spra85", "html_url": "https://github.com/spra85", "followers_url": "https://api.github.com/users/spra85/followers", "following_url": "https://api.github.com/users/spra85/following{/other_user}", "gists_url": "https://api.github.com/users/spra85/gists{/gist_id}", "starred_url": "https://api.github.com/users/spra85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spra85/subscriptions", "organizations_url": "https://api.github.com/users/spra85/orgs", "repos_url": "https://api.github.com/users/spra85/repos", "events_url": "https://api.github.com/users/spra85/events{/privacy}", "received_events_url": "https://api.github.com/users/spra85/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-16T19:40:22Z", "updated_at": "2019-09-27T15:53:04Z", "closed_at": "2019-09-27T15:53:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use Pystache's `parse` method so we know what variables/conditionals/etc. are in a given template.  I'm curious if there's been any thought to supporting something like that in Chevon?  Through perusing the source code, I didn't see anything like that available but not mentioned in the README but I may have missed it.\r\n\r\n```\r\n>>> parsed = pystache.parse(u\"Hey {{#who}}{{.}}!{{/who}}\")\r\n>>> print parsed\r\n[u'Hey ', _SectionNode(key=u'who', index_begin=12, index_end=18, parsed=[_EscapeNode(key=u'.'), u'!'])]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/56", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/56/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/56/events", "html_url": "https://github.com/noahmorrison/chevron/issues/56", "id": 439561925, "node_id": "MDU6SXNzdWU0Mzk1NjE5MjU=", "number": 56, "title": "Is there a way to disable html escaping globally?", "user": {"login": "jeking3", "id": 11771245, "node_id": "MDQ6VXNlcjExNzcxMjQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/11771245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeking3", "html_url": "https://github.com/jeking3", "followers_url": "https://api.github.com/users/jeking3/followers", "following_url": "https://api.github.com/users/jeking3/following{/other_user}", "gists_url": "https://api.github.com/users/jeking3/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeking3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeking3/subscriptions", "organizations_url": "https://api.github.com/users/jeking3/orgs", "repos_url": "https://api.github.com/users/jeking3/repos", "events_url": "https://api.github.com/users/jeking3/events{/privacy}", "received_events_url": "https://api.github.com/users/jeking3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-02T12:20:12Z", "updated_at": "2019-10-27T20:03:55Z", "closed_at": "2019-05-02T12:43:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some projects like ansible and stackstorm use template engines on YAML data streams.  In this case the `{{ variable }}` is used without escaping.  Requiring `{{{ variable }}}` or `{{& variable }}` is unfamiliar to most folks.  It would be nice to have a global default escaping mode where the default is HTML but an option would be None.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/52", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/52/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/52/events", "html_url": "https://github.com/noahmorrison/chevron/issues/52", "id": 433946877, "node_id": "MDU6SXNzdWU0MzM5NDY4Nzc=", "number": 52, "title": "Accessing nth element of array", "user": {"login": "alanyee", "id": 1873994, "node_id": "MDQ6VXNlcjE4NzM5OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1873994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanyee", "html_url": "https://github.com/alanyee", "followers_url": "https://api.github.com/users/alanyee/followers", "following_url": "https://api.github.com/users/alanyee/following{/other_user}", "gists_url": "https://api.github.com/users/alanyee/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanyee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanyee/subscriptions", "organizations_url": "https://api.github.com/users/alanyee/orgs", "repos_url": "https://api.github.com/users/alanyee/repos", "events_url": "https://api.github.com/users/alanyee/events{/privacy}", "received_events_url": "https://api.github.com/users/alanyee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-16T19:26:24Z", "updated_at": "2019-11-25T05:07:45Z", "closed_at": "2019-04-17T07:03:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "The feature is present in other language implementations of mustache like JS, but it does not seem in this one.\r\n\r\nIdeally, we can get something like\r\n```\r\n>>> chevron.render('Hello, {{ mustache.0 }}!', {'mustache': ['World']})\r\n'Hello, World!'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/49", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/49/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/49/events", "html_url": "https://github.com/noahmorrison/chevron/issues/49", "id": 423876626, "node_id": "MDU6SXNzdWU0MjM4NzY2MjY=", "number": 49, "title": "Leading whitespace not preserved when using partials", "user": {"login": "cocoroutine", "id": 42218371, "node_id": "MDQ6VXNlcjQyMjE4Mzcx", "avatar_url": "https://avatars0.githubusercontent.com/u/42218371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cocoroutine", "html_url": "https://github.com/cocoroutine", "followers_url": "https://api.github.com/users/cocoroutine/followers", "following_url": "https://api.github.com/users/cocoroutine/following{/other_user}", "gists_url": "https://api.github.com/users/cocoroutine/gists{/gist_id}", "starred_url": "https://api.github.com/users/cocoroutine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cocoroutine/subscriptions", "organizations_url": "https://api.github.com/users/cocoroutine/orgs", "repos_url": "https://api.github.com/users/cocoroutine/repos", "events_url": "https://api.github.com/users/cocoroutine/events{/privacy}", "received_events_url": "https://api.github.com/users/cocoroutine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-21T18:21:20Z", "updated_at": "2019-04-07T17:12:52Z", "closed_at": "2019-04-07T17:12:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Leading whitespace is not preserved when looping through a list in a partial. It gets weirder when you have nested blocks with tags. Examples below. Tested on 0.13.1\r\n\r\ntemplate\r\n```\r\n<xml>\r\n                <partial>\r\n                {{>partial}}\r\n                </partial>\r\n</xml>\r\n```\r\n\r\npartial\r\n```\r\n{{#items}}\r\n    {{#numbers}}\r\n    <number>\r\n        {{.}}\r\n    </number>\r\n    {{/numbers}}\r\n{{/items}}\r\n```\r\n\r\ndata\r\n```\r\ndata = { 'items': { 'numbers':  [ 'one', 'two' ] } }  \r\n```\r\n\r\nExpected output\r\n```\r\n<xml>\r\n                <partial>\r\n                    <number>\r\n                        one\r\n                    </number>\r\n                    <number>\r\n                        two\r\n                   </number>\r\n                </partial>\r\n</xml>\r\n```\r\n\r\nActual output\r\n```\r\n<xml>\r\n                <partial>\r\n                    <number>\r\n        one\r\n    </number>\r\n    <number>\r\n        two\r\n    </number>\r\n                </partial>\r\n</xml>\r\n```\r\n\r\n#### Nested blocks, weirder\r\n\r\npartial_worse\r\n```\r\n{{#items}}\r\n<items>\r\n    {{#numbers}}\r\n    <number>\r\n        {{.}}\r\n    </number>\r\n    {{/numbers}}\r\n</items>\r\n{{/items}}\r\n\r\n```\r\n\r\nActual output\r\n```\r\n<xml>\r\n                <partial>\r\n                <items>\r\n                    <number>\r\n        one\r\n    </number>\r\n    <number>\r\n        two\r\n    </number>\r\n</items>\r\n                </partial>\r\n</xml>\r\n```\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/48", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/48/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/48/events", "html_url": "https://github.com/noahmorrison/chevron/issues/48", "id": 423870455, "node_id": "MDU6SXNzdWU0MjM4NzA0NTU=", "number": 48, "title": "Template doesn't complete rendering, if key doesn't exist in partial", "user": {"login": "cocoroutine", "id": 42218371, "node_id": "MDQ6VXNlcjQyMjE4Mzcx", "avatar_url": "https://avatars0.githubusercontent.com/u/42218371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cocoroutine", "html_url": "https://github.com/cocoroutine", "followers_url": "https://api.github.com/users/cocoroutine/followers", "following_url": "https://api.github.com/users/cocoroutine/following{/other_user}", "gists_url": "https://api.github.com/users/cocoroutine/gists{/gist_id}", "starred_url": "https://api.github.com/users/cocoroutine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cocoroutine/subscriptions", "organizations_url": "https://api.github.com/users/cocoroutine/orgs", "repos_url": "https://api.github.com/users/cocoroutine/repos", "events_url": "https://api.github.com/users/cocoroutine/events{/privacy}", "received_events_url": "https://api.github.com/users/cocoroutine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-21T18:06:33Z", "updated_at": "2019-04-07T17:10:03Z", "closed_at": "2019-04-07T17:10:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI believe there is an issue when a key does not exist in the data within a partial. After rendering the partial with a missing key, it should complete rendering of the template. However this is not the case as of 0.13.1. It doesn't return to rendering the rest of the template.\r\n\r\n\r\n\r\ntemplate:\r\n```\r\n<xml>\r\n                <partial>\r\n                {{>partial_none}}\r\n                </partial>\r\n</xml>\r\n\r\ndata = {\"text\": \"hello\"}\r\n```\r\n\r\npartial_none:\r\n```\r\n{{#no_key}} key doesn't exist {{/no_key}}\r\n```\r\n\r\nexpected output:\r\n```\r\n<xml>\r\n                <partial>\r\n                </partial>\r\n</xml>\r\n```\r\n\r\nactual output:\r\n```\r\n<xml>\r\n                <partial>\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/47", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/47/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/47/events", "html_url": "https://github.com/noahmorrison/chevron/issues/47", "id": 377586854, "node_id": "MDU6SXNzdWUzNzc1ODY4NTQ=", "number": 47, "title": "Feature Request: Support Nuitka", "user": {"login": "Jeeppler", "id": 2007739, "node_id": "MDQ6VXNlcjIwMDc3Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2007739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jeeppler", "html_url": "https://github.com/Jeeppler", "followers_url": "https://api.github.com/users/Jeeppler/followers", "following_url": "https://api.github.com/users/Jeeppler/following{/other_user}", "gists_url": "https://api.github.com/users/Jeeppler/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jeeppler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jeeppler/subscriptions", "organizations_url": "https://api.github.com/users/Jeeppler/orgs", "repos_url": "https://api.github.com/users/Jeeppler/repos", "events_url": "https://api.github.com/users/Jeeppler/events{/privacy}", "received_events_url": "https://api.github.com/users/Jeeppler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-05T21:19:15Z", "updated_at": "2018-11-07T17:26:22Z", "closed_at": "2018-11-07T02:30:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Nuitka](http://nuitka.net/pages/overview.html) is a Python to C cross-compiler. I want to use Nuitka for a command line tool. This command line tool uses Chevron. However, there is one problem Chevron uses dynamic import statements. Nuitka does not run the code and therefore is not able to figure out what should be imported, when dynamic imports are used.\r\n\r\nChevron has three imports which fail (one import fails in PyYAML):\r\n\r\n```\r\n$ python3 -m nuitka --follow-imports mycli.py \r\nNuitka:WARNING:/usr/local/lib/python3.6/dist-packages/chevron/renderer.py:12: Cannot find 'tokenizer' in package 'chevron' as absolute import (tried tokenizer).\r\nNuitka:WARNING:/usr/local/lib/python3.6/dist-packages/chevron/main.py:15: Cannot find 'renderer' in package 'chevron' as absolute import (tried renderer).\r\nNuitka:WARNING:/usr/local/lib/python3.6/dist-packages/chevron/main.py:16: Cannot find 'metadata' in package 'chevron' as absolute import (tried metadata).\r\nNuitka:WARNING:/usr/local/lib/python3.6/dist-packages/yaml/cyaml.py:5: Cannot find '_yaml' in package 'yaml' as absolute import (tried _yaml).\r\nNuitka:WARNING:Unresolved '__import__' call at '/usr/local/lib/python3.6/dist-packages/yaml/constructor.py:505' may require use of '--include-plugin-directory' or '--include-plugin-files'.\r\nNuitka:WARNING:Unresolved '__import__' call at '/usr/local/lib/python3.6/dist-packages/yaml/constructor.py:521' may require use of '--include-plugin-directory' or '--include-plugin-files'.\r\n```\r\n\r\nIt would be nice if Chevron could use static imports or find another way supporting Nuitka.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/42", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/42/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/42/events", "html_url": "https://github.com/noahmorrison/chevron/issues/42", "id": 365562252, "node_id": "MDU6SXNzdWUzNjU1NjIyNTI=", "number": 42, "title": "Drop Python 2.6, 3.2, and 3.3 from Travis CI", "user": {"login": "akosthekiss", "id": 9976482, "node_id": "MDQ6VXNlcjk5NzY0ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/9976482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akosthekiss", "html_url": "https://github.com/akosthekiss", "followers_url": "https://api.github.com/users/akosthekiss/followers", "following_url": "https://api.github.com/users/akosthekiss/following{/other_user}", "gists_url": "https://api.github.com/users/akosthekiss/gists{/gist_id}", "starred_url": "https://api.github.com/users/akosthekiss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akosthekiss/subscriptions", "organizations_url": "https://api.github.com/users/akosthekiss/orgs", "repos_url": "https://api.github.com/users/akosthekiss/repos", "events_url": "https://api.github.com/users/akosthekiss/events{/privacy}", "received_events_url": "https://api.github.com/users/akosthekiss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-01T17:25:37Z", "updated_at": "2018-10-03T14:43:46Z", "closed_at": "2018-10-03T14:07:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Diagnostics for the Python 2.6 job:\r\n\r\n```\r\nDEPRECATION: Python 2.6 is no longer supported by the Python core team\r\npycparser requires Python '>=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*' but the running Python is 2.6.9\r\nThe command \"pip install coveralls\" failed and exited with 1\r\n```\r\n\r\nDiagnostics for the Python 3.2 and 3.3 jobs:\r\n\r\n```\r\n$ tox\r\nFile \"/home/travis/virtualenv/python3.3.6/lib/python3.3/site-packages/pkg_resources/__init__.py\", line 90, in <module>\r\n  raise RuntimeError(\"Python 3.4 or later is required\")\r\nRuntimeError: Python 3.4 or later is required\r\n```\r\n\r\nIn the first case, coveralls cannot be installed anymore (because of a dependency), while in the last two cases, tox fails (because setuptools has dropped support for Python 3.3 since v40.0.0). It might be possible to get some of the job running with workarounds (e.g., by disabling coveralls for py2.6, or by downgrading setuptools for py3.2 and py3.3), but they are quite old variants unsupported by either the core Python team or by a quite core Python package, so they may not be worth the efforts.\r\n\r\nI'd be willing to submit a PR to drop these if you'd agree.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/39", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/39/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/39/events", "html_url": "https://github.com/noahmorrison/chevron/issues/39", "id": 364798220, "node_id": "MDU6SXNzdWUzNjQ3OTgyMjA=", "number": 39, "title": "Looping through nested array", "user": {"login": "dvdvnl", "id": 6626772, "node_id": "MDQ6VXNlcjY2MjY3NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6626772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvdvnl", "html_url": "https://github.com/dvdvnl", "followers_url": "https://api.github.com/users/dvdvnl/followers", "following_url": "https://api.github.com/users/dvdvnl/following{/other_user}", "gists_url": "https://api.github.com/users/dvdvnl/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvdvnl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvdvnl/subscriptions", "organizations_url": "https://api.github.com/users/dvdvnl/orgs", "repos_url": "https://api.github.com/users/dvdvnl/repos", "events_url": "https://api.github.com/users/dvdvnl/events{/privacy}", "received_events_url": "https://api.github.com/users/dvdvnl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-28T08:51:55Z", "updated_at": "2018-09-29T05:42:29Z", "closed_at": "2018-09-29T05:42:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI encountered a bug in chevron (Python 3.7.0, chevron 0.12.2) where looping through nested arrays leads to an erroneous output. It appears as if the closing tag (`{{/.}}`) of an inner loop gets mixed up with the closing tag of an outer loop.\r\n\r\nRunning the code\r\n```python\r\nimport chevron\r\n\r\nwith open('test.txt', 'w') as file:\r\n    with open('test.mustache', 'r') as template:\r\n        file.write(chevron.render(template, {\r\n            'loop': [\r\n                [\r\n                    [\r\n                        'Lorem',\r\n                        'ipsum',\r\n                        'dolor',\r\n                        'sit'\r\n                    ],\r\n                    [\r\n                        'amet',\r\n                        'consectetur',\r\n                        'adipiscing',\r\n                        'elit'\r\n                    ]\r\n                ],\r\n                [\r\n                    [\r\n                        'sed',\r\n                        'do',\r\n                        'eiusmod'\r\n                    ],\r\n                    [\r\n                        'tempor',\r\n                        'incididunt',\r\n                        'ut'\r\n                    ]\r\n                ],\r\n                [\r\n                    [\r\n                        'labore',\r\n                        'et',\r\n                        'dolore'\r\n                    ], [\r\n                        'magna',\r\n                        'aliqua'\r\n                    ]\r\n                ]\r\n            ]\r\n        }))\r\n```\r\nwith the template\r\n```mustache\r\n--- level 0\r\n{{#loop}}\r\n    --- level 1\r\n    {{#.}}\r\n        --- level 2\r\n        {{#.}}\r\n            --- level 3\r\n            {{.}}\r\n            --- /level 3\r\n        {{/.}}\r\n        --- /level 2 (I get lost sometimes)\r\n    {{/.}}\r\n    --- /level 1\r\n{{/loop}}\r\n--- /level 0\r\n```\r\noutputs\r\n```text\r\n--- level 0\r\n    --- level 1\r\n        --- level 2\r\n            --- level 3\r\n            Lorem\r\n            --- /level 3\r\n            --- level 3\r\n            ipsum\r\n            --- /level 3\r\n            --- level 3\r\n            dolor\r\n            --- /level 3\r\n            --- level 3\r\n            sit\r\n            --- /level 3\r\n        --- level 2\r\n            --- level 3\r\n            amet\r\n            --- /level 3\r\n            --- level 3\r\n            consectetur\r\n            --- /level 3\r\n            --- level 3\r\n            adipiscing\r\n            --- /level 3\r\n            --- level 3\r\n            elit\r\n            --- /level 3\r\n        --- /level 2 (I get lost sometimes)\r\n    --- /level 1\r\n[...]\r\n```\r\nwhere the line `--- /level 2 (I get lost sometimes)` does not show up after the inner loop ended as long as the outer one is not finished. Whereas in the same example written in [JS on JSFiddle](http://jsfiddle.net/8Lha7kn6/) it works as I would expect it to:\r\n```\r\n\r\n--- level 0\r\n    --- level 1\r\n        --- level 2\r\n            --- level 3\r\n            Lorem\r\n            --- /level 3\r\n            --- level 3\r\n            ipsum\r\n            --- /level 3\r\n            --- level 3\r\n            dolor\r\n            --- /level 3\r\n            --- level 3\r\n            sit\r\n            --- /level 3\r\n        --- /level 2 (I get lost sometimes)\r\n        --- level 2\r\n            --- level 3\r\n            amet\r\n            --- /level 3\r\n            --- level 3\r\n            consectetur\r\n            --- /level 3\r\n            --- level 3\r\n            adipiscing\r\n            --- /level 3\r\n            --- level 3\r\n            elit\r\n            --- /level 3\r\n        --- /level 2 (I get lost sometimes)\r\n    --- /level 1\r\n[...]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/37", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/37/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/37/events", "html_url": "https://github.com/noahmorrison/chevron/issues/37", "id": 362456475, "node_id": "MDU6SXNzdWUzNjI0NTY0NzU=", "number": 37, "title": "Partial File's Extension", "user": {"login": "jonioni", "id": 31494475, "node_id": "MDQ6VXNlcjMxNDk0NDc1", "avatar_url": "https://avatars0.githubusercontent.com/u/31494475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonioni", "html_url": "https://github.com/jonioni", "followers_url": "https://api.github.com/users/jonioni/followers", "following_url": "https://api.github.com/users/jonioni/following{/other_user}", "gists_url": "https://api.github.com/users/jonioni/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonioni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonioni/subscriptions", "organizations_url": "https://api.github.com/users/jonioni/orgs", "repos_url": "https://api.github.com/users/jonioni/repos", "events_url": "https://api.github.com/users/jonioni/events{/privacy}", "received_events_url": "https://api.github.com/users/jonioni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-21T05:01:42Z", "updated_at": "2018-10-03T14:01:31Z", "closed_at": "2018-10-03T14:01:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm wondering if chevron would support partial files without file extension?\r\n\r\nIt just needs to modify one line in `_get_partial`:\r\n\r\n```python\r\ndef _get_partial(name, partials_dict, partials_path, partials_ext):\r\n    \"\"\"Load a partial\"\"\"\r\n    try:\r\n        # Maybe the partial is in the dictionary\r\n        return partials_dict[name]\r\n    except KeyError:\r\n        # Nope...\r\n        try:\r\n            # Maybe it's in the file system\r\n            path = partials_path + '/' + name + '.' + partials_ext\r\n            with open(path, 'r') as partial:\r\n                return partial.read()\r\n\r\n        except IOError:\r\n            # Alright I give up on you\r\n            return ''\r\n```\r\n\r\nThe line:\r\n\r\n```python\r\npath = partials_path + '/' + name + '.' + partials_ext\r\n```\r\n\r\ncan be modified to:\r\n\r\n```python\r\npath = partials_path + '/' + name + ('.' + partials_ext if partials_ext else '')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/35", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/35/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/35/events", "html_url": "https://github.com/noahmorrison/chevron/issues/35", "id": 353400564, "node_id": "MDU6SXNzdWUzNTM0MDA1NjQ=", "number": 35, "title": "Suggestion: Adding a 'replacer' function, like in JSON.stringify()", "user": {"login": "talamus", "id": 1710153, "node_id": "MDQ6VXNlcjE3MTAxNTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1710153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/talamus", "html_url": "https://github.com/talamus", "followers_url": "https://api.github.com/users/talamus/followers", "following_url": "https://api.github.com/users/talamus/following{/other_user}", "gists_url": "https://api.github.com/users/talamus/gists{/gist_id}", "starred_url": "https://api.github.com/users/talamus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/talamus/subscriptions", "organizations_url": "https://api.github.com/users/talamus/orgs", "repos_url": "https://api.github.com/users/talamus/repos", "events_url": "https://api.github.com/users/talamus/events{/privacy}", "received_events_url": "https://api.github.com/users/talamus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-23T14:13:38Z", "updated_at": "2018-08-25T01:38:50Z", "closed_at": "2018-08-24T00:34:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nCould it be possible to have an optional replacer function for the values, like the one in JSON.stringify()?\r\n\r\nOur problem is that our booleans are getting written out as \"True\" and \"False\" when the template we are writing them expects them to be in \"true\" and \"false\" format.\r\n\r\nOf course -- the same thing could be used to convert datetime objects into some specific format, like these beautifully ugly \"/Date(1239018869048)/\" .Net things.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/33", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/33/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/33/events", "html_url": "https://github.com/noahmorrison/chevron/issues/33", "id": 353146056, "node_id": "MDU6SXNzdWUzNTMxNDYwNTY=", "number": 33, "title": "List rendering is overly restrictive", "user": {"login": "gber", "id": 1668189, "node_id": "MDQ6VXNlcjE2NjgxODk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1668189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gber", "html_url": "https://github.com/gber", "followers_url": "https://api.github.com/users/gber/followers", "following_url": "https://api.github.com/users/gber/following{/other_user}", "gists_url": "https://api.github.com/users/gber/gists{/gist_id}", "starred_url": "https://api.github.com/users/gber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gber/subscriptions", "organizations_url": "https://api.github.com/users/gber/orgs", "repos_url": "https://api.github.com/users/gber/repos", "events_url": "https://api.github.com/users/gber/events{/privacy}", "received_events_url": "https://api.github.com/users/gber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-22T22:15:06Z", "updated_at": "2019-09-17T11:38:18Z", "closed_at": "2018-10-03T13:49:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently rendering of lists is very restrictive as it only accepts python's built-in `list` type.  IMHO that is not pythonic since it does not allow for duck typing or even subclasses of `list`.  This causes problems for me when I pass YAML data parsed by ruamel.yaml into it which uses list-like types for YAML lists.  AFAICS it should not be a problem to check for any iterable type (except a `str` in python3) instead and then loop over it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/30", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/30/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/30/events", "html_url": "https://github.com/noahmorrison/chevron/issues/30", "id": 343156613, "node_id": "MDU6SXNzdWUzNDMxNTY2MTM=", "number": 30, "title": "Extra newline", "user": {"login": "LucidOne", "id": 234196, "node_id": "MDQ6VXNlcjIzNDE5Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/234196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucidOne", "html_url": "https://github.com/LucidOne", "followers_url": "https://api.github.com/users/LucidOne/followers", "following_url": "https://api.github.com/users/LucidOne/following{/other_user}", "gists_url": "https://api.github.com/users/LucidOne/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucidOne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucidOne/subscriptions", "organizations_url": "https://api.github.com/users/LucidOne/orgs", "repos_url": "https://api.github.com/users/LucidOne/repos", "events_url": "https://api.github.com/users/LucidOne/events{/privacy}", "received_events_url": "https://api.github.com/users/LucidOne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-20T15:44:20Z", "updated_at": "2018-07-21T01:04:08Z", "closed_at": "2018-07-21T00:14:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "test.template\r\n```\r\nThis is a {{test}}.\r\n```\r\n\r\ntest.yml\r\n```\r\n---\r\ntest: \"failed test\"\r\n```\r\n\r\n```bash\r\n$ chevron -d test.yml test.template \r\nThis is a new test.\r\n\r\n$\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/28", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/28/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/28/events", "html_url": "https://github.com/noahmorrison/chevron/issues/28", "id": 330963788, "node_id": "MDU6SXNzdWUzMzA5NjM3ODg=", "number": 28, "title": "Missing UTF-8 encoding for \"no-escape\" variables", "user": {"login": "lksnmnn", "id": 4983285, "node_id": "MDQ6VXNlcjQ5ODMyODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4983285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lksnmnn", "html_url": "https://github.com/lksnmnn", "followers_url": "https://api.github.com/users/lksnmnn/followers", "following_url": "https://api.github.com/users/lksnmnn/following{/other_user}", "gists_url": "https://api.github.com/users/lksnmnn/gists{/gist_id}", "starred_url": "https://api.github.com/users/lksnmnn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lksnmnn/subscriptions", "organizations_url": "https://api.github.com/users/lksnmnn/orgs", "repos_url": "https://api.github.com/users/lksnmnn/repos", "events_url": "https://api.github.com/users/lksnmnn/events{/privacy}", "received_events_url": "https://api.github.com/users/lksnmnn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-10T12:13:50Z", "updated_at": "2018-06-17T11:45:27Z", "closed_at": "2018-06-17T11:45:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Issue\r\nI tried rendering a variable without escaping HTML but got an error due to missing UTF-8 encoding.\r\n\r\n## Example\r\nTemplate: `{{& content}}`\r\nData: `{ \"content\": \"<a>My link with \u00c4 german umlaut</a>\"}`\r\nStack trace\r\n```\r\nTraceback (most recent call last):\r\n  File \"generate_site.py\", line 35, in <module>\r\n    partials_ext=PARTIALS_EXTENTION)\r\n  File \"/usr/local/lib/python2.7/site-packages/chevron/renderer.py\", line 232, in render\r\n    def_ldel=def_ldel, def_rdel=def_rdel)\r\n  File \"/usr/local/lib/python2.7/site-packages/chevron/renderer.py\", line 206, in render\r\n    output += str(_get_key(key, scopes))\r\n\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xf6' in position 182: ordinal not in range(128)\r\n```\r\n\r\n## Solution\r\nUse UTF-8 encoding for `no-escape` rendering as well. \r\n\r\n## PR\r\nSee https://github.com/noahmorrison/chevron/pull/29\r\n\r\nAlso I recommend refactoring the rendering method such that the UTF-8 encoding is done by default. This will remove the duplicate code and prevent similar errors in the future.\r\n\r\nCheers,\r\nLukas", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/27", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/27/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/27/events", "html_url": "https://github.com/noahmorrison/chevron/issues/27", "id": 330239985, "node_id": "MDU6SXNzdWUzMzAyMzk5ODU=", "number": 27, "title": "Support Section Lambdas", "user": {"login": "dunkelstern", "id": 456385, "node_id": "MDQ6VXNlcjQ1NjM4NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/456385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dunkelstern", "html_url": "https://github.com/dunkelstern", "followers_url": "https://api.github.com/users/dunkelstern/followers", "following_url": "https://api.github.com/users/dunkelstern/following{/other_user}", "gists_url": "https://api.github.com/users/dunkelstern/gists{/gist_id}", "starred_url": "https://api.github.com/users/dunkelstern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dunkelstern/subscriptions", "organizations_url": "https://api.github.com/users/dunkelstern/orgs", "repos_url": "https://api.github.com/users/dunkelstern/repos", "events_url": "https://api.github.com/users/dunkelstern/events{/privacy}", "received_events_url": "https://api.github.com/users/dunkelstern/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-07T11:57:07Z", "updated_at": "2018-09-14T15:38:38Z", "closed_at": "2018-08-24T02:16:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently if a section is a function, the function will not be called.\r\n\r\nExample:\r\n```python\r\ntemplate = '{{{postcode}}} {{#first}} {{{city}}} || {{{town}}} || {{{village}}} || {{{state}}} {{/first}}'\r\n```\r\nSo i define `first` to be a function that does something to the content of the section\r\n\r\n```python\r\ndef first(content):\r\n    return \"not implemented\"\r\n\r\ndata = {\r\n    \"postcode\": \"1234\",\r\n    \"city\": \"Mustache City\",\r\n    \"state\": \"Nowhere\",\r\n    \"first\": first,\r\n}\r\n\r\nprint(chevron.render(template, data))\r\n```\r\n\r\nWhat currently happens: `1234 || || || `\r\nWhat I intend to happen: `1234 not implemented`\r\n\r\nOf course in reality when implementing the `first` function proper, i would like to have: `1234 Mustache City`\r\n\r\nThis is an example from https://github.com/OpenCageData/address-formatting, they use a yaml file for defining how to format an address for another country which contains mustache templates.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/26", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/26/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/26/events", "html_url": "https://github.com/noahmorrison/chevron/issues/26", "id": 316044695, "node_id": "MDU6SXNzdWUzMTYwNDQ2OTU=", "number": 26, "title": "process substitution does not work", "user": {"login": "dkrieger", "id": 19599607, "node_id": "MDQ6VXNlcjE5NTk5NjA3", "avatar_url": "https://avatars0.githubusercontent.com/u/19599607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkrieger", "html_url": "https://github.com/dkrieger", "followers_url": "https://api.github.com/users/dkrieger/followers", "following_url": "https://api.github.com/users/dkrieger/following{/other_user}", "gists_url": "https://api.github.com/users/dkrieger/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkrieger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkrieger/subscriptions", "organizations_url": "https://api.github.com/users/dkrieger/orgs", "repos_url": "https://api.github.com/users/dkrieger/repos", "events_url": "https://api.github.com/users/dkrieger/events{/privacy}", "received_events_url": "https://api.github.com/users/dkrieger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-19T21:18:56Z", "updated_at": "2018-04-27T16:57:43Z", "closed_at": "2018-04-20T17:54:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Process substitution (`<(echo \"string\")`) does not work for either DATA or TEMPLATE.\r\n\r\n```\r\n#!/bin/bash\r\nchevron -d <(printf '{\"foo\":\"bar\"}') <(printf 'Let'\"'\"'s go to the {{foo}} after work.')\r\n```\r\nyields\r\n```\r\nusage: chevron [-h] [-v] [-d DATA] [-p PARTIALS_PATH] [-e PARTIALS_EXT]\r\n               [-l DEF_LDEL] [-r DEF_RDEL]\r\n               template\r\nchevron: error: The file /dev/fd/63 does not exist!\r\n```\r\n\r\nSame result when replacing either argument with a real file.\r\n\r\nAnecdotally, I cannot think of another CLI tool that accepts filenames as input that chokes on process substitution, so I hope this isn't a wontfix situation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/24", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/24/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/24/events", "html_url": "https://github.com/noahmorrison/chevron/issues/24", "id": 265789449, "node_id": "MDU6SXNzdWUyNjU3ODk0NDk=", "number": 24, "title": "Release new version please", "user": {"login": "tomhamiltonstubber", "id": 8955690, "node_id": "MDQ6VXNlcjg5NTU2OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8955690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomhamiltonstubber", "html_url": "https://github.com/tomhamiltonstubber", "followers_url": "https://api.github.com/users/tomhamiltonstubber/followers", "following_url": "https://api.github.com/users/tomhamiltonstubber/following{/other_user}", "gists_url": "https://api.github.com/users/tomhamiltonstubber/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomhamiltonstubber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomhamiltonstubber/subscriptions", "organizations_url": "https://api.github.com/users/tomhamiltonstubber/orgs", "repos_url": "https://api.github.com/users/tomhamiltonstubber/repos", "events_url": "https://api.github.com/users/tomhamiltonstubber/events{/privacy}", "received_events_url": "https://api.github.com/users/tomhamiltonstubber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-16T14:26:04Z", "updated_at": "2018-06-16T14:36:59Z", "closed_at": "2018-06-16T14:36:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you push the new version to PyPi please?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/18", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/18/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/18/events", "html_url": "https://github.com/noahmorrison/chevron/issues/18", "id": 236941077, "node_id": "MDU6SXNzdWUyMzY5NDEwNzc=", "number": 18, "title": "Use custom error not SyntaxError", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-19T16:04:04Z", "updated_at": "2017-06-19T21:24:34Z", "closed_at": "2017-06-19T21:24:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I believe `SyntaxError` should be reserved for errors in python syntax. \r\n\r\nChevron should use it's own exception(s) not hijack SyntaxError.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/17", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/17/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/17/events", "html_url": "https://github.com/noahmorrison/chevron/issues/17", "id": 235565551, "node_id": "MDU6SXNzdWUyMzU1NjU1NTE=", "number": 17, "title": "If statements coerces objects to boolean ", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-13T14:03:48Z", "updated_at": "2017-06-15T04:32:58Z", "closed_at": "2017-06-14T04:40:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Best described by example:\r\n\r\nIn js:\r\n\r\n```js\r\nvar Mustache = require('mustache')\r\n\r\nvar body = '{{#foobar}}\\n' +\r\n           '  {{#link}}\\n' +\r\n           '  <a href=\"{{{ link }}}\">{{ text}}</a>\\n' +\r\n           '  {{/link}}\\n' +\r\n           '  {{^link}}\\n' +\r\n           '  {{ . }}\\n' +\r\n           '  {{/link}}\\n' +\r\n           '{{/foobar}}';\r\n\r\nvar values = [\r\n    'foo',\r\n    'bar',\r\n    {'link': '/', 'text': 'link test'},\r\n    {'link': '/x', 'text': 'x'},\r\n    'spam'\r\n]\r\n\r\nconsole.log(Mustache.render(body, {'foobar': values}))\r\n```\r\n```\r\n  foo\r\n  bar\r\n  <a href=\"/\">link test</a>\r\n  <a href=\"/x\">x</a>\r\n  spam\r\n```\r\n\r\nIn python using pystache and chevron:\r\n```python\r\nimport pystache\r\nimport chevron\r\n\r\nbody = \"\"\"\r\n{{#foobar}}\r\n  {{#link}}\r\n  <a href=\"{{{ link }}}\">{{ text}}</a>\r\n  {{/link}}\r\n  {{^link}}\r\n  {{ . }}\r\n  {{/link}}\r\n{{/foobar}}\r\n\"\"\"\r\n\r\nvalues = [\r\n    'foo',\r\n    'bar',\r\n    {'link': '/', 'text': 'link test'},\r\n    {'link': '/x', 'text': 'x'},\r\n    'spam'\r\n]\r\n\r\nprint('pystache:')\r\nprint(pystache.render(body, {'foobar': values}))\r\n\r\nprint('chevron:')\r\nprint(chevron.render(body, {'foobar': values}))\r\n```\r\n\r\nOutput:\r\n```\r\npystache:\r\n\r\n  foo\r\n  bar\r\n  <a href=\"/\">link test</a>\r\n  <a href=\"/x\">x</a>\r\n  spam\r\n\r\nchevron:\r\n\r\n  True\r\n  True\r\n  <a href=\"/\">link test</a>\r\n  <a href=\"/x\">x</a>\r\n  True\r\n```\r\n\r\nThe values of the list are displayed as bools if the if statement `{{#link}}` is included. Obviously, without that the values display properly.\r\n\r\nI've no idea what the spec says about this but I think chrevon should behave the same as mustache.js.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/15", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/15/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/15/events", "html_url": "https://github.com/noahmorrison/chevron/issues/15", "id": 65579411, "node_id": "MDU6SXNzdWU2NTU3OTQxMQ==", "number": 15, "title": "Add debugging", "user": {"login": "noahmorrison", "id": 7417485, "node_id": "MDQ6VXNlcjc0MTc0ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7417485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noahmorrison", "html_url": "https://github.com/noahmorrison", "followers_url": "https://api.github.com/users/noahmorrison/followers", "following_url": "https://api.github.com/users/noahmorrison/following{/other_user}", "gists_url": "https://api.github.com/users/noahmorrison/gists{/gist_id}", "starred_url": "https://api.github.com/users/noahmorrison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noahmorrison/subscriptions", "organizations_url": "https://api.github.com/users/noahmorrison/orgs", "repos_url": "https://api.github.com/users/noahmorrison/repos", "events_url": "https://api.github.com/users/noahmorrison/events{/privacy}", "received_events_url": "https://api.github.com/users/noahmorrison/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-01T01:10:51Z", "updated_at": "2015-04-08T02:52:49Z", "closed_at": "2015-04-08T02:52:49Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Right now invalid templates don't give very descriptive error messages, would be nice if they gave line number and the specific problem.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/11", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/11/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/11/events", "html_url": "https://github.com/noahmorrison/chevron/issues/11", "id": 55277853, "node_id": "MDU6SXNzdWU1NTI3Nzg1Mw==", "number": 11, "title": "Convert README.md to README.rst and use to populate long_description", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-01-23T12:47:27Z", "updated_at": "2015-01-25T04:11:13Z", "closed_at": "2015-01-25T04:11:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Then your PyPI page can have a nice description\n\nI usually use pandoc to convert from Markdown to reST. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/10", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/10/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/10/events", "html_url": "https://github.com/noahmorrison/chevron/issues/10", "id": 55277673, "node_id": "MDU6SXNzdWU1NTI3NzY3Mw==", "number": 10, "title": "Add PyPI badge to README", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-23T12:45:14Z", "updated_at": "2015-01-25T04:11:13Z", "closed_at": "2015-01-25T04:11:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "E.g.: from pypip.in, shields.io, etc. \n\nNice to see project is on PyPI and what latest released version is. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noahmorrison/chevron/issues/6", "repository_url": "https://api.github.com/repos/noahmorrison/chevron", "labels_url": "https://api.github.com/repos/noahmorrison/chevron/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/noahmorrison/chevron/issues/6/comments", "events_url": "https://api.github.com/repos/noahmorrison/chevron/issues/6/events", "html_url": "https://github.com/noahmorrison/chevron/issues/6", "id": 55244479, "node_id": "MDU6SXNzdWU1NTI0NDQ3OQ==", "number": 6, "title": "No setup.py?", "user": {"login": "msabramo", "id": 305268, "node_id": "MDQ6VXNlcjMwNTI2OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/305268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msabramo", "html_url": "https://github.com/msabramo", "followers_url": "https://api.github.com/users/msabramo/followers", "following_url": "https://api.github.com/users/msabramo/following{/other_user}", "gists_url": "https://api.github.com/users/msabramo/gists{/gist_id}", "starred_url": "https://api.github.com/users/msabramo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msabramo/subscriptions", "organizations_url": "https://api.github.com/users/msabramo/orgs", "repos_url": "https://api.github.com/users/msabramo/repos", "events_url": "https://api.github.com/users/msabramo/events{/privacy}", "received_events_url": "https://api.github.com/users/msabramo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-23T04:40:34Z", "updated_at": "2015-01-23T12:33:18Z", "closed_at": "2015-01-23T04:48:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Did you forget to commit it?\n", "performed_via_github_app": null, "score": 1.0}]}