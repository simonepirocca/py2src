{"total_count": 76, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/137", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/137/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/137/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/137", "id": 619600379, "node_id": "MDU6SXNzdWU2MTk2MDAzNzk=", "number": 137, "title": "bytes object serialization is not work fine", "user": {"login": "bright-pan", "id": 463740, "node_id": "MDQ6VXNlcjQ2Mzc0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/463740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bright-pan", "html_url": "https://github.com/bright-pan", "followers_url": "https://api.github.com/users/bright-pan/followers", "following_url": "https://api.github.com/users/bright-pan/following{/other_user}", "gists_url": "https://api.github.com/users/bright-pan/gists{/gist_id}", "starred_url": "https://api.github.com/users/bright-pan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bright-pan/subscriptions", "organizations_url": "https://api.github.com/users/bright-pan/orgs", "repos_url": "https://api.github.com/users/bright-pan/repos", "events_url": "https://api.github.com/users/bright-pan/events{/privacy}", "received_events_url": "https://api.github.com/users/bright-pan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-17T03:28:03Z", "updated_at": "2020-05-17T07:03:27Z", "closed_at": "2020-05-17T07:03:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport base64\r\nimport rapidjson\r\n\r\nfrom rapidjson import BM_NONE\r\n\r\n\r\ndata = b'\\t\\x08\\x00\\x00xl/worksheets/sheet1.xmlPK\\x01\\x02\\x14\\x03\\x14\\x00\\x00\\x00\\x08\\x00%\\x07\\xb1P\\x83\\\\#\\xed{\\x02\\x00\\x00 \\r\\x00\\x00\\r\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x01I\\x11\\x00\\x00xl/styles.xmlPK\\x01\\x02\\x14\\x03\\x14\\x00\\x00\\x00\\x08\\x00%\\x07\\xb1P<\\xe1\\xa5\\x85\\xc0\\x00\\x00\\x00\\x16\\x02\\x00\\x00\\x0b\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x01\\xef\\x13\\x00\\x00_rels/.relsPK\\x01\\x02\\x14\\x03\\x14\\x00\\x00\\x00\\x08\\x00%\\x07\\xb1P9\\x04\\xab)J\\x01\\x00\\x00/\\x02\\x00\\x00\\x0f\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x01\\xd8\\x14\\x00\\x00xl/workbook.xmlPK\\x01\\x02\\x14\\x03\\x14\\x00\\x00\\x00\\x08\\x00%\\x07\\xb1P\\xa1-6u\\xaf\\x00\\x00\\x00\\xfb\\x01\\x00\\x00\\x1a\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80\\x01O\\x16\\x00\\x00xl/_rels/workbook.xml.relsPK\\x01\\x02'\r\n\r\n\r\nclass ExtendJSONEncoder(rapidjson.Encoder):\r\n    def default(self, obj):\r\n        if isinstance(obj, bytes):\r\n            return base64.encodebytes(obj).decode('ascii')\r\n        else:\r\n            raise TypeError('%r is not JSON serializable' % obj)\r\n\r\n\r\nrapidjson.dumps(data, bytes_mode=BM_NONE, default=ExtendJSONEncoder())\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/jason/Archsys/archsys/utils/test.py\", line 18, in <module>\r\n    rapidjson.dumps(data, bytes_mode=BM_NONE, default=ExtendJSONEncoder())\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xb1 in position 42: invalid start byte\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/132", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/132/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/132/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/132", "id": 571048648, "node_id": "MDU6SXNzdWU1NzEwNDg2NDg=", "number": 132, "title": "ISO8601 should allow for any number of fractional seconds", "user": {"login": "karlseguin", "id": 206480, "node_id": "MDQ6VXNlcjIwNjQ4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/206480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karlseguin", "html_url": "https://github.com/karlseguin", "followers_url": "https://api.github.com/users/karlseguin/followers", "following_url": "https://api.github.com/users/karlseguin/following{/other_user}", "gists_url": "https://api.github.com/users/karlseguin/gists{/gist_id}", "starred_url": "https://api.github.com/users/karlseguin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karlseguin/subscriptions", "organizations_url": "https://api.github.com/users/karlseguin/orgs", "repos_url": "https://api.github.com/users/karlseguin/repos", "events_url": "https://api.github.com/users/karlseguin/events{/privacy}", "received_events_url": "https://api.github.com/users/karlseguin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-26T03:41:02Z", "updated_at": "2020-03-12T08:26:50Z", "closed_at": "2020-03-12T08:26:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From what I can tell, ISO8601 allows 0 or more fractional seconds. Rapidjson only works with 0, 3 or 6 digits. This means that valid ISO8601 dates. such as `1997-07-16T19:20:30.45+01:00` and `2020-02-25T10:43:18.70076105Z`, are not properly handled. The latter case is how Go outputs its `time.Time` structure.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/130", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/130/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/130/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/130", "id": 568449922, "node_id": "MDU6SXNzdWU1Njg0NDk5MjI=", "number": 130, "title": "Benchmark: Might be worth including hyperjson and orjson", "user": {"login": "hartwork", "id": 1577132, "node_id": "MDQ6VXNlcjE1NzcxMzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1577132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hartwork", "html_url": "https://github.com/hartwork", "followers_url": "https://api.github.com/users/hartwork/followers", "following_url": "https://api.github.com/users/hartwork/following{/other_user}", "gists_url": "https://api.github.com/users/hartwork/gists{/gist_id}", "starred_url": "https://api.github.com/users/hartwork/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hartwork/subscriptions", "organizations_url": "https://api.github.com/users/hartwork/orgs", "repos_url": "https://api.github.com/users/hartwork/repos", "events_url": "https://api.github.com/users/hartwork/events{/privacy}", "received_events_url": "https://api.github.com/users/hartwork/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-02-20T17:13:29Z", "updated_at": "2020-02-29T17:23:30Z", "closed_at": "2020-02-29T17:23:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nThe benchmark at https://python-rapidjson.readthedocs.io/en/latest/benchmarks.html does not include the potentially most interesting contender \u2014 [orjson](https://pypi.org/project/orjson/) \u2014 now that [ujson and](https://pypi.org/project/ujson/#history) [yajl are dead](https://pypi.org/project/yajl/#history). Are there plans benchmarking against orjson?\r\n\r\nBest, Sebastian", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/128", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/128/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/128/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/128", "id": 568159272, "node_id": "MDU6SXNzdWU1NjgxNTkyNzI=", "number": 128, "title": "Fix simple typo: tollerance -> tolerance", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-20T09:20:39Z", "updated_at": "2020-02-20T16:40:51Z", "closed_at": "2020-02-20T16:40:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in tests/test_refs_count.py.\nShould read `tolerance` rather than `tollerance`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/126", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/126/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/126/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/126", "id": 521695913, "node_id": "MDU6SXNzdWU1MjE2OTU5MTM=", "number": 126, "title": "Possible memory leak in Validator ", "user": {"login": "wcloete", "id": 15867618, "node_id": "MDQ6VXNlcjE1ODY3NjE4", "avatar_url": "https://avatars0.githubusercontent.com/u/15867618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wcloete", "html_url": "https://github.com/wcloete", "followers_url": "https://api.github.com/users/wcloete/followers", "following_url": "https://api.github.com/users/wcloete/following{/other_user}", "gists_url": "https://api.github.com/users/wcloete/gists{/gist_id}", "starred_url": "https://api.github.com/users/wcloete/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wcloete/subscriptions", "organizations_url": "https://api.github.com/users/wcloete/orgs", "repos_url": "https://api.github.com/users/wcloete/repos", "events_url": "https://api.github.com/users/wcloete/events{/privacy}", "received_events_url": "https://api.github.com/users/wcloete/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-11-12T17:34:43Z", "updated_at": "2019-11-13T13:36:27Z", "closed_at": "2019-11-13T13:36:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for a really great project!\r\n\r\nUnfortunately I have observed that when validating invalid events the `rapidjson.Validator` leaks a little memory. Here is some sample code to reproduce it (tested on Python 3.7.3, MacOS Mojave, with python-rapidjson 0.8.0).\r\n\r\n```\r\nimport rapidjson\r\nimport gc\r\nimport tracemalloc\r\n\r\nschema = \"\"\"{\r\n    \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r\n    \"required\": [\"id\", \"name\"],\r\n    \"type\": \"object\",\r\n    \"properties\": {\r\n        \"id\": {\"type\": \"integer\"},\r\n        \"name\": {\"type\": \"string\"}\r\n    }\r\n}\"\"\".encode(\"utf-8\")\r\n\r\nobj = \"\"\"{\r\n    \"id\": 50\r\n}\"\"\".encode(\"utf-8\")\r\n\r\nvalidate = rapidjson.Validator(schema)\r\nsnapshots = []\r\n\r\n# start the test\r\ntracemalloc.start()\r\nfor _ in range(2):\r\n    for _ in range(500000):\r\n        try:\r\n            validate(obj)\r\n        except rapidjson.ValidationError:\r\n            pass\r\n    # garbage collect before taking snapshot to exclude memory that is \r\n    gc.collect()\r\n    snapshots.append(tracemalloc.take_snapshot())\r\n\r\n# report\r\nfor stat in snapshots[1].compare_to(snapshots[0], \"traceback\")[:10]:\r\n    print(stat)\r\n```\r\n\r\nThis returns something like:\r\n```\r\nminimal_memory_test.py:27: size=123 MiB (+61.5 MiB), count=1999982 (+1000000), average=64 B\r\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/tracemalloc.py:397: size=600 B (+600 B), count=4 (+4), average=150 B\r\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/tracemalloc.py:534: size=488 B (+488 B), count=2 (+2), average=244 B\r\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/tracemalloc.py:291: size=112 B (+112 B), count=2 (+2), average=56 B\r\n/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/tracemalloc.py:532: size=128 B (+64 B), count=2 (+1), average=64 B\r\nminimal_memory_test.py:32: size=464 B (+32 B), count=2 (+1), average=232 B\r\nminimal_memory_test.py:31: size=59 B (+0 B), count=1 (+0), average=59 B\r\nminimal_memory_test.py:24: size=48 B (+0 B), count=1 (+0), average=48 B\r\nminimal_memory_test.py:25: size=28 B (+0 B), count=1 (+0), average=28 B\r\n```\r\n\r\nNote the ~64B leak for the line `validate(obj)`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/125", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/125/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/125/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/125", "id": 516586642, "node_id": "MDU6SXNzdWU1MTY1ODY2NDI=", "number": 125, "title": "Tests fail with Python 3.8", "user": {"login": "dbast", "id": 2790401, "node_id": "MDQ6VXNlcjI3OTA0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2790401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbast", "html_url": "https://github.com/dbast", "followers_url": "https://api.github.com/users/dbast/followers", "following_url": "https://api.github.com/users/dbast/following{/other_user}", "gists_url": "https://api.github.com/users/dbast/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbast/subscriptions", "organizations_url": "https://api.github.com/users/dbast/orgs", "repos_url": "https://api.github.com/users/dbast/repos", "events_url": "https://api.github.com/users/dbast/events{/privacy}", "received_events_url": "https://api.github.com/users/dbast/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-02T13:05:27Z", "updated_at": "2019-11-13T11:08:03Z", "closed_at": "2019-11-13T11:08:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Failure is persistent with Python 3.8 on linux/osx/win (64bit):\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n____________________________ test_intenums_as_ints _____________________________\r\n\r\n    @pytest.mark.unit\r\n    def test_intenums_as_ints():\r\n        class IE(enum.IntEnum):\r\n            val = 123\r\n            bigval = 123123123123123123123123\r\n    \r\n>       assert rj.dumps([IE.val, IE.bigval]) == \"[123,123123123123123123123123]\"\r\nE       AssertionError: assert '[<IE.val: 12...23123123123>]' == '[123,12312312...123123123123]'\r\nE         - [<IE.val: 123>,<IE.bigval: 123123123123123123123123>]\r\nE         + [123,123123123123123123123123]\r\n\r\ntests/test_enum.py:22: AssertionError\r\n========= 1 failed, 679 passed, 16 skipped, 2 xfailed in 2.65 seconds ==========\r\n```\r\n\r\nSee also https://github.com/conda-forge/python-rapidjson-feedstock/pull/21", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/123", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/123/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/123/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/123", "id": 513659615, "node_id": "MDU6SXNzdWU1MTM2NTk2MTU=", "number": 123, "title": "Support PrettyFormatOptions.kFormatSingleLineArray when serializing", "user": {"login": "hongquan", "id": 314607, "node_id": "MDQ6VXNlcjMxNDYwNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/314607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hongquan", "html_url": "https://github.com/hongquan", "followers_url": "https://api.github.com/users/hongquan/followers", "following_url": "https://api.github.com/users/hongquan/following{/other_user}", "gists_url": "https://api.github.com/users/hongquan/gists{/gist_id}", "starred_url": "https://api.github.com/users/hongquan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hongquan/subscriptions", "organizations_url": "https://api.github.com/users/hongquan/orgs", "repos_url": "https://api.github.com/users/hongquan/repos", "events_url": "https://api.github.com/users/hongquan/events{/privacy}", "received_events_url": "https://api.github.com/users/hongquan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-29T02:43:31Z", "updated_at": "2019-11-04T04:30:45Z", "closed_at": "2019-11-04T04:30:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add support to \"dump\" for printing array in single line.\r\n\r\nIt is supported in C++ RapidJSON, but is not supported in Python binding yet.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/122", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/122/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/122/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/122", "id": 476504162, "node_id": "MDU6SXNzdWU0NzY1MDQxNjI=", "number": 122, "title": "Allow bytes object to be caught by Encoder.default", "user": {"login": "bpeake-illuscio", "id": 44302546, "node_id": "MDQ6VXNlcjQ0MzAyNTQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/44302546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpeake-illuscio", "html_url": "https://github.com/bpeake-illuscio", "followers_url": "https://api.github.com/users/bpeake-illuscio/followers", "following_url": "https://api.github.com/users/bpeake-illuscio/following{/other_user}", "gists_url": "https://api.github.com/users/bpeake-illuscio/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpeake-illuscio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpeake-illuscio/subscriptions", "organizations_url": "https://api.github.com/users/bpeake-illuscio/orgs", "repos_url": "https://api.github.com/users/bpeake-illuscio/repos", "events_url": "https://api.github.com/users/bpeake-illuscio/events{/privacy}", "received_events_url": "https://api.github.com/users/bpeake-illuscio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-08-04T01:19:11Z", "updated_at": "2019-08-09T11:13:24Z", "closed_at": "2019-08-09T11:13:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the standard json library, bytes (builtin binary type) objects are passed to JSONEncoder.default when they are encountered. Rapidjson does not pass them into Encoder.default, instead it always tries to encode them as utf-8.\r\n\r\nI have quite a few places where I am storing file data as a binary blob in a mongodb database. Services can then serialize that to json by converting it to a hex string. However, because I cannot catch bytes values in a custom implementation of default, I get an error.\r\n\r\nExample:\r\n\r\n```\r\nfrom json import JSONEncoder\r\nfrom rapidjson import Encoder as RAPIDEncoder\r\n\r\n\r\nclass CustomJSONEncoder(JSONEncoder):\r\n\r\n    def default(self, o):\r\n        print(\"OBJECT PASSED REFERENCE\")\r\n        if isinstance(o, bytes):\r\n            return o.hex()\r\n        else:\r\n            return o\r\n\r\n\r\nclass CustomRAPIDEncoder(RAPIDEncoder):\r\n\r\n    def default(self, o):\r\n        print(\"OBJECT PASSED RAPID\")\r\n        if isinstance(o, bytes):\r\n            return o.hex()\r\n        else:\r\n            return o\r\n\r\n\r\njson_reference = CustomJSONEncoder()\r\nrapid_implementation = CustomRAPIDEncoder()\r\n\r\n\r\nif __name__ == '__main__':\r\n    with open(\"./automation.png\", mode=\"rb\") as f:\r\n        bin_data = f.read()\r\n\r\n    to_encode = {\"data\": bin_data}\r\n\r\n    encoded_reference = json_reference.encode(to_encode)\r\n    print(\"ENCODED BY JSON:\", encoded_reference)\r\n\r\n    encoded_rapid = rapid_implementation(to_encode)\r\n    print(\"ENCODED BY RAPID:\", encoded_rapid)\r\n```\r\n\r\n\r\nOutput:\r\n\r\n```\r\nOBJECT PASSED REFERENCE\r\nENCODED BY JSON: {\"data\": \"89504e470d0a1a0a000....\r\nTraceback (most recent call last):\r\n  File \"...\", line 38, in <module>\r\n    encoded_rapid = rapid_implementation(to_encode)\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x89 in position 0: invalid start byte\r\n```\r\n\r\nHere is the png used in this example for binary data:\r\n\r\n![automation](https://user-images.githubusercontent.com/44302546/62418324-2ef9b600-b61b-11e9-80d8-753742552328.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/121", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/121/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/121/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/121", "id": 425303237, "node_id": "MDU6SXNzdWU0MjUzMDMyMzc=", "number": 121, "title": "Incompatible IntEnum encoding", "user": {"login": "lVlayhem", "id": 3033401, "node_id": "MDQ6VXNlcjMwMzM0MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3033401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lVlayhem", "html_url": "https://github.com/lVlayhem", "followers_url": "https://api.github.com/users/lVlayhem/followers", "following_url": "https://api.github.com/users/lVlayhem/following{/other_user}", "gists_url": "https://api.github.com/users/lVlayhem/gists{/gist_id}", "starred_url": "https://api.github.com/users/lVlayhem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lVlayhem/subscriptions", "organizations_url": "https://api.github.com/users/lVlayhem/orgs", "repos_url": "https://api.github.com/users/lVlayhem/repos", "events_url": "https://api.github.com/users/lVlayhem/events{/privacy}", "received_events_url": "https://api.github.com/users/lVlayhem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-26T09:17:59Z", "updated_at": "2019-05-11T08:05:27Z", "closed_at": "2019-05-11T08:05:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "python-rapidjson behaves differently from json and ujson when encoding IntEnums.\r\n```\r\nimport enum\r\nimport json\r\nimport ujson\r\nimport rapidjson\r\n\r\nclass SomeInt(enum.IntEnum):\r\n    val = 123\r\n\r\n\r\nprint([json.dumps(SomeInt.val), ujson.dumps(SomeInt.val), rapidjson.dumps(SomeInt.val)])\r\n```\r\nThis code produces:\r\n`['123', '123', 'SomeInt.val']`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/119", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/119/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/119/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/119", "id": 421906396, "node_id": "MDU6SXNzdWU0MjE5MDYzOTY=", "number": 119, "title": "Decoder with OrderedDict does not work.", "user": {"login": "spritetong", "id": 1411199, "node_id": "MDQ6VXNlcjE0MTExOTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1411199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spritetong", "html_url": "https://github.com/spritetong", "followers_url": "https://api.github.com/users/spritetong/followers", "following_url": "https://api.github.com/users/spritetong/following{/other_user}", "gists_url": "https://api.github.com/users/spritetong/gists{/gist_id}", "starred_url": "https://api.github.com/users/spritetong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spritetong/subscriptions", "organizations_url": "https://api.github.com/users/spritetong/orgs", "repos_url": "https://api.github.com/users/spritetong/repos", "events_url": "https://api.github.com/users/spritetong/events{/privacy}", "received_events_url": "https://api.github.com/users/spritetong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-17T10:30:27Z", "updated_at": "2019-05-11T08:05:04Z", "closed_at": "2019-05-11T08:05:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following codes causes that subclasses of \"class dict\" (such as OrderedDict) do not work:\r\n\r\nif (PyDict_Check(current.object))\r\n        // If it's a standard dictionary, this is +20% faster\r\n        rc = PyDict_SetItem(current.object, key, value);\r\nelse\r\n        rc = PyObject_SetItem(current.object, key, value);\r\n\r\n[Decoder.py.txt](https://github.com/python-rapidjson/python-rapidjson/files/2975015/Decoder.py.txt)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/118", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/118/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/118/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/118", "id": 421026370, "node_id": "MDU6SXNzdWU0MjEwMjYzNzA=", "number": 118, "title": "Raise JSONDecodeError instead of ValueError when passing invalid JSON?", "user": {"login": "maxalbert", "id": 2692805, "node_id": "MDQ6VXNlcjI2OTI4MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2692805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxalbert", "html_url": "https://github.com/maxalbert", "followers_url": "https://api.github.com/users/maxalbert/followers", "following_url": "https://api.github.com/users/maxalbert/following{/other_user}", "gists_url": "https://api.github.com/users/maxalbert/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxalbert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxalbert/subscriptions", "organizations_url": "https://api.github.com/users/maxalbert/orgs", "repos_url": "https://api.github.com/users/maxalbert/repos", "events_url": "https://api.github.com/users/maxalbert/events{/privacy}", "received_events_url": "https://api.github.com/users/maxalbert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-14T13:44:33Z", "updated_at": "2019-05-11T08:04:35Z", "closed_at": "2019-05-11T08:04:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `json` module in the Python standard library raises a `JSONDecodeError` if invalid JSON is passed to `json.loads()`, while `rapidjson` raises a `ValueError`.\r\n\r\nThis inconsistency means you can't easily swap `import json` for `import rapidjson as json` if you are catching possible `JSONDecodeError` exceptions.\r\n\r\nWould it be possible for `rapidjson` to raise a `JSONDecodeError` instead of a `ValueError`?\r\n\r\nExample to reproduce:\r\n```python\r\n>>> import json\r\n>>> json.loads('{'})\r\nJSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)\r\n```\r\nvs.\r\n```python\r\n>>> import rapidjson\r\n>>> rapidjson.loads('{'})\r\nValueError: Parse error at offset 1: Missing a name for object member.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/117", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/117/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/117/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/117", "id": 420462719, "node_id": "MDU6SXNzdWU0MjA0NjI3MTk=", "number": 117, "title": "Memory leaking in load", "user": {"login": "KKomarov", "id": 14128194, "node_id": "MDQ6VXNlcjE0MTI4MTk0", "avatar_url": "https://avatars0.githubusercontent.com/u/14128194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KKomarov", "html_url": "https://github.com/KKomarov", "followers_url": "https://api.github.com/users/KKomarov/followers", "following_url": "https://api.github.com/users/KKomarov/following{/other_user}", "gists_url": "https://api.github.com/users/KKomarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/KKomarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KKomarov/subscriptions", "organizations_url": "https://api.github.com/users/KKomarov/orgs", "repos_url": "https://api.github.com/users/KKomarov/repos", "events_url": "https://api.github.com/users/KKomarov/events{/privacy}", "received_events_url": "https://api.github.com/users/KKomarov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2019-03-13T12:01:50Z", "updated_at": "2019-06-11T11:02:45Z", "closed_at": "2019-06-10T11:46:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see constantly growing memory with `rapidjson.load` comparing to standard `json.load`\r\nI unpacked about 10k gzipped json files like this\r\n```\r\nfor file_name in os.listdir(path):\r\n   with open(os.path.join(path, file_name), 'rb') as f:\r\n        content = f.read()\r\n        with BytesIO(contents) as file_object:\r\n            with gzip.GzipFile(fileobj=file_object, filename='objects.json') as archive:\r\n                return rapidjson.load(archive)\r\n```\r\nMemory consumption of rapidjson\r\n![image](https://user-images.githubusercontent.com/14128194/54277368-b5e0c000-45a0-11e9-8f7f-fe540e3137d9.png)\r\nWith json lib memory is almost constant.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/116", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/116/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/116/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/116", "id": 413402334, "node_id": "MDU6SXNzdWU0MTM0MDIzMzQ=", "number": 116, "title": "Support Python 3.7", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-02-22T13:24:45Z", "updated_at": "2019-05-11T08:00:46Z", "closed_at": "2019-05-11T08:00:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice if Travis config was updated to also test on Python 3.7 and `setup.py` was then updated to add a trove classifier for Python 3.7.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/115", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/115/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/115/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/115", "id": 408481359, "node_id": "MDU6SXNzdWU0MDg0ODEzNTk=", "number": 115, "title": "object_hook memory leak", "user": {"login": "mklokocka", "id": 1583189, "node_id": "MDQ6VXNlcjE1ODMxODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1583189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mklokocka", "html_url": "https://github.com/mklokocka", "followers_url": "https://api.github.com/users/mklokocka/followers", "following_url": "https://api.github.com/users/mklokocka/following{/other_user}", "gists_url": "https://api.github.com/users/mklokocka/gists{/gist_id}", "starred_url": "https://api.github.com/users/mklokocka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mklokocka/subscriptions", "organizations_url": "https://api.github.com/users/mklokocka/orgs", "repos_url": "https://api.github.com/users/mklokocka/repos", "events_url": "https://api.github.com/users/mklokocka/events{/privacy}", "received_events_url": "https://api.github.com/users/mklokocka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-02-09T23:16:45Z", "updated_at": "2019-02-11T09:13:40Z", "closed_at": "2019-02-11T09:13:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "OS: MacOS High Sierra\r\nPython version: 3.7.1\r\nRapidjson version: 0.6.3\r\n\r\nIt seems I am facing a memory leak problem when using rapidjson.loads and utilizing an object hook. Here is an example code:\r\n\r\n```\r\nimport rapidjson\r\nfrom datetime import timedelta\r\nimport tracemalloc\r\n\r\ntracemalloc.start()\r\n\r\ndef object_hook(td):\r\n    if '__td__' in td:\r\n        return timedelta(td['__td__'])\r\n    else:\r\n        return td\r\n\r\ndef parse_json():\r\n    data = []\r\n    for i in range(1, 100):\r\n        data.append({\"name\": f\"a{i}\", \"timestamp\": timedelta(seconds=i)})\r\n\r\n    a = rapidjson.dumps(\r\n        data,\r\n        datetime_mode=rapidjson.DM_ISO8601,\r\n        default=lambda td: {\"__td__\": td.total_seconds()} if isinstance(td, timedelta) else td,\r\n    )\r\n\r\n    data = rapidjson.loads(\r\n        a,\r\n        datetime_mode=rapidjson.DM_ISO8601,\r\n        object_hook=object_hook\r\n    )\r\n    return data\r\n\r\nprint(\"before\")\r\nif tracemalloc.is_tracing():\r\n    snapshot = tracemalloc.take_snapshot()\r\n    top_stats = snapshot.statistics('lineno')\r\n    print([str(x) for x in top_stats[:10]])\r\n\r\nfor _ in range(1000):\r\n    parse_json()\r\n\r\nprint(\"after\")\r\nif tracemalloc.is_tracing():\r\n    snapshot = tracemalloc.take_snapshot()\r\n    top_stats = snapshot.statistics('lineno')\r\n    print([str(x) for x in top_stats[:10]])\r\n```\r\n\r\nAfter running this I get: `'memleaktest.py:9: size=3867 KiB, count=99000, average=40 B'` as the first line of the tracemalloc output. I tried using `objgraph` as well, but it did not show any Python objects, so it seems like a C++ malloc issue here.\r\n\r\nI am using rapidjson in production and my, fairly simple, API is slowly eating memory and this is the prime suspect (getting a tracemalloc pointer to the line basically the same as the one here).\r\n\r\nIs this working as intended? Do you need any more information to pinpoint the problem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/113", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/113/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/113/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/113", "id": 383562617, "node_id": "MDU6SXNzdWUzODM1NjI2MTc=", "number": 113, "title": "ValidationError in tests/test_validator.py:70", "user": {"login": "kbabioch", "id": 1918279, "node_id": "MDQ6VXNlcjE5MTgyNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1918279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbabioch", "html_url": "https://github.com/kbabioch", "followers_url": "https://api.github.com/users/kbabioch/followers", "following_url": "https://api.github.com/users/kbabioch/following{/other_user}", "gists_url": "https://api.github.com/users/kbabioch/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbabioch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbabioch/subscriptions", "organizations_url": "https://api.github.com/users/kbabioch/orgs", "repos_url": "https://api.github.com/users/kbabioch/repos", "events_url": "https://api.github.com/users/kbabioch/events{/privacy}", "received_events_url": "https://api.github.com/users/kbabioch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-22T14:38:40Z", "updated_at": "2019-02-11T09:02:22Z", "closed_at": "2019-02-11T09:02:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to build this package for openSUSE. You can find the full build log [here](https://build.opensuse.org/build/home:kbabioch:ansible-container/openSUSE_Tumbleweed/x86_64/python-rapidjson/_log). I get the following error:\r\n\r\n```\r\n[    6s] =================================== FAILURES ===================================                                                                                                                          \r\n[    6s]  test_additional_and_pattern_properties_valid[{\"I_0\": 23}-{\"type\":\"object\",\"patternProperties\":{\"^S_\":{\"type\":\"string\"},\"^I_\":{\"type\":\"integer\"}},\"additionalProperties\":false}]                          \r\n[    6s]                                                                                                                                                                                                           \r\n[    6s] schema = '{\"type\":\"object\",\"patternProperties\":{\"^S_\":{\"type\":\"string\"},\"^I_\":{\"type\":\"integer\"}},\"additionalProperties\":false}'                                                                          \r\n[    6s] json = '{\"I_0\": 23}'\r\n[    6s]\r\n[    6s]     @pytest.mark.parametrize('schema', [\r\n[    6s]         rj.dumps({\r\n[    6s]             \"type\": \"object\",\r\n[    6s]             \"patternProperties\": {\r\n[    6s]                 \"^S_\": { \"type\": \"string\" },\r\n[    6s]                 \"^I_\": { \"type\": \"integer\" }\r\n[    6s]             },\r\n[    6s]             \"additionalProperties\": False\r\n[    6s]         }),\r\n[    6s]     ])\r\n[    6s]     @pytest.mark.parametrize('json', [\r\n[    6s]          '{\"I_0\": 23}',\r\n[    6s]          '{\"S_1\": \"the quick brown fox jumps over the lazy dog\"}',\r\n[    6s]          pytest.param('{\"I_2\": \"A string\"}', marks=pytest.mark.xfail),\r\n[    6s]          pytest.param('{\"keyword\": \"value\"}', marks=pytest.mark.xfail),\r\n[    6s]     ])\r\n[    6s]     @pytest.mark.unit\r\n[    6s]     def test_additional_and_pattern_properties_valid(schema, json):\r\n[    6s]         validate = rj.Validator(schema)\r\n[    6s] >       validate(json)\r\n[    6s] E       rapidjson.ValidationError: ('type', '#', '#/I_0')\r\n[    6s]\r\n[    6s] tests/test_validator.py:70: ValidationError\r\n[    6s]  test_additional_and_pattern_properties_valid[{\"S_1\": \"the quick brown fox jumps over the lazy dog\"}-{\"type\":\"object\",\"patternProperties\":{\"^S_\":{\"type\":\"string\"},\"^I_\":{\"type\":\"integer\"}},\"additionalP$\r\noperties\":false}]\r\n[    6s]\r\n[    6s] schema = '{\"type\":\"object\",\"patternProperties\":{\"^S_\":{\"type\":\"string\"},\"^I_\":{\"type\":\"integer\"}},\"additionalProperties\":false}'                                                                         \r\n[    6s] json = '{\"S_1\": \"the quick brown fox jumps over the lazy dog\"}'                         \r\n[    6s]                                                                                                                                                                                                           \r\n[    6s]     @pytest.mark.parametrize('schema', [                                                                                                                                                                  \r\n[    6s]         rj.dumps({                                                                                                                                                                                        \r\n[    6s]             \"type\": \"object\",                                                                                                                                                                             \r\n[    6s]             \"patternProperties\": {                                                                                                                                                                        \r\n[    6s]                 \"^S_\": { \"type\": \"string\" },                                                                                                                                                              \r\n[    6s]                 \"^I_\": { \"type\": \"integer\" }                                                                                                                                                              \r\n[    6s]             },                                                                                                                                                                                            \r\n[    6s]             \"additionalProperties\": False                                                                                                                                                                 \r\n[    6s]         }),                                                                                                                                                                                               \r\n[    6s]     ])                                                                                                                                                                                                    \r\n[    6s]     @pytest.mark.parametrize('json', [                                                                                                                                                                    \r\n[    6s]          '{\"I_0\": 23}',                                                                                                                                                                                   \r\n[    6s]          '{\"S_1\": \"the quick brown fox jumps over the lazy dog\"}',                                                                                                                                        \r\n[    6s]          pytest.param('{\"I_2\": \"A string\"}', marks=pytest.mark.xfail),                                                                                                                                    \r\n[    6s]          pytest.param('{\"keyword\": \"value\"}', marks=pytest.mark.xfail),\r\n[    6s]     ])\r\n[    6s]     @pytest.mark.unit                                                           \r\n[    6s]     def test_additional_and_pattern_properties_valid(schema, json):                                                                                                             \r\n[    6s]         validate = rj.Validator(schema)\r\n[    6s] >       validate(json)                                                                                                          \r\n[    6s] E       rapidjson.ValidationError: ('type', '#', '#/S_1')\r\n[    6s]\r\n[    6s] tests/test_validator.py:70: ValidationError\r\n```\r\n\r\nNot sure what is going on here, but this might be related to #111 105. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/112", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/112/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/112/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/112", "id": 362727335, "node_id": "MDU6SXNzdWUzNjI3MjczMzU=", "number": 112, "title": "Big Int roundtrip is broken.", "user": {"login": "sam-s", "id": 1596894, "node_id": "MDQ6VXNlcjE1OTY4OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1596894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam-s", "html_url": "https://github.com/sam-s", "followers_url": "https://api.github.com/users/sam-s/followers", "following_url": "https://api.github.com/users/sam-s/following{/other_user}", "gists_url": "https://api.github.com/users/sam-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam-s/subscriptions", "organizations_url": "https://api.github.com/users/sam-s/orgs", "repos_url": "https://api.github.com/users/sam-s/repos", "events_url": "https://api.github.com/users/sam-s/events{/privacy}", "received_events_url": "https://api.github.com/users/sam-s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-21T18:27:13Z", "updated_at": "2019-02-11T09:13:18Z", "closed_at": "2019-02-11T09:13:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "`rapidjson` can serialize big integers but **cannot** deserialize them:\r\n```\r\n>>> rapidjson.loads(rapidjson.dumps(10**1000))\r\nValueError: Parse error at offset 0: Number too big to be stored in double\r\n```\r\n`Python 3.7.0`\r\n`rapidjson.__version__='0.6.3'`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/110", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/110/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/110/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/110", "id": 346949799, "node_id": "MDU6SXNzdWUzNDY5NDk3OTk=", "number": 110, "title": "Compiling with rj-include-dir cannot work", "user": {"login": "kbabioch", "id": 1918279, "node_id": "MDQ6VXNlcjE5MTgyNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1918279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbabioch", "html_url": "https://github.com/kbabioch", "followers_url": "https://api.github.com/users/kbabioch/followers", "following_url": "https://api.github.com/users/kbabioch/following{/other_user}", "gists_url": "https://api.github.com/users/kbabioch/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbabioch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbabioch/subscriptions", "organizations_url": "https://api.github.com/users/kbabioch/orgs", "repos_url": "https://api.github.com/users/kbabioch/repos", "events_url": "https://api.github.com/users/kbabioch/events{/privacy}", "received_events_url": "https://api.github.com/users/kbabioch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-02T10:19:47Z", "updated_at": "2019-02-11T09:13:02Z", "closed_at": "2019-02-11T09:13:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to compile python-rapidjson with a system-wide installation of rapidjson using the `--rj-include-dir`.\r\n\r\nThis fails with an error message along those lines:\r\n\r\n    RapidJSON sources not found: if you cloned the git repository,\r\n\r\nLooking at the code, this is the location, where this is triggered:\r\n\r\nhttps://github.com/python-rapidjson/python-rapidjson/blob/ab1035333f7a1960b64f3e77474f04ac27600cd2/setup.py#L32-L36\r\n\r\nSince the `--rj-include-dir` option is only checked for later on, this cannot work:\r\n\r\nhttps://github.com/python-rapidjson/python-rapidjson/blob/ab1035333f7a1960b64f3e77474f04ac27600cd2/setup.py#L47-L59\r\n\r\nThis needs to be re-arranged. Looking in os.path.join(ROOT_PATH, 'rapidjson', 'include') for the sources before even evaluating the --rj-include-dir cannot work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/108", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/108/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/108/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/108", "id": 346738365, "node_id": "MDU6SXNzdWUzNDY3MzgzNjU=", "number": 108, "title": "Mismatch between documentation and example code for `Encoder::default(value)`", "user": {"login": "daehlith", "id": 24817, "node_id": "MDQ6VXNlcjI0ODE3", "avatar_url": "https://avatars0.githubusercontent.com/u/24817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daehlith", "html_url": "https://github.com/daehlith", "followers_url": "https://api.github.com/users/daehlith/followers", "following_url": "https://api.github.com/users/daehlith/following{/other_user}", "gists_url": "https://api.github.com/users/daehlith/gists{/gist_id}", "starred_url": "https://api.github.com/users/daehlith/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daehlith/subscriptions", "organizations_url": "https://api.github.com/users/daehlith/orgs", "repos_url": "https://api.github.com/users/daehlith/repos", "events_url": "https://api.github.com/users/daehlith/events{/privacy}", "received_events_url": "https://api.github.com/users/daehlith/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-01T19:34:35Z", "updated_at": "2018-08-01T20:21:59Z", "closed_at": "2018-08-01T20:21:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nthe docs for the [Encoder class](http://python-rapidjson.readthedocs.io/en/latest/encoder.html#rapidjson.Encoder.default) say to raise a `TypeError` if it cannot return a JSON encodable version of `value`:\r\n> If implemented, this method is called whenever the serialization machinery finds a Python object that it does not recognize: if possible, the method should returns a JSON encodable version of the value, otherwise raise a TypeError\r\n\r\nYet, the example code provided raises a `ValueError` instead:\r\n```python\r\nclass PointEncoder(Encoder):\r\n   def default(self, obj):\r\n     if isinstance(obj, Point):\r\n       return {'x': obj.x, 'y': obj.y}\r\n     else:\r\n       raise ValueError('%r is not JSON serializable' % obj)\r\n```\r\nIMHO the example should return a `TypeError` to be consistent with the documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/107", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/107/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/107/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/107", "id": 346299986, "node_id": "MDU6SXNzdWUzNDYyOTk5ODY=", "number": 107, "title": "indent=1 prevents saving files with a single number", "user": {"login": "sam-s", "id": 1596894, "node_id": "MDQ6VXNlcjE1OTY4OTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1596894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sam-s", "html_url": "https://github.com/sam-s", "followers_url": "https://api.github.com/users/sam-s/followers", "following_url": "https://api.github.com/users/sam-s/following{/other_user}", "gists_url": "https://api.github.com/users/sam-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/sam-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sam-s/subscriptions", "organizations_url": "https://api.github.com/users/sam-s/orgs", "repos_url": "https://api.github.com/users/sam-s/repos", "events_url": "https://api.github.com/users/sam-s/events{/privacy}", "received_events_url": "https://api.github.com/users/sam-s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-31T18:08:38Z", "updated_at": "2019-02-11T09:12:32Z", "closed_at": "2019-02-11T09:12:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "When saving a number of a file with `indent=1`, nothing is written:\r\n```\r\n>>> rapidjson.dumps(100,indent=1)\r\n'100'\r\n```\r\nhowever\r\n```\r\nwith open(\"zzz\",\"w\") as fd:\r\n    rapidjson.dump(100,fd,indent=1)\r\n```\r\ncreates an *empty* file `zzz`.\r\n\r\nNote that \r\n```\r\nwith open(\"zzz\",\"w\") as fd:\r\n    rapidjson.dump(100,fd)\r\n```\r\nand\r\n```\r\nwith open(\"zzz\",\"w\") as fd:\r\n    rapidjson.dump([100],fd,indent=1)\r\n```\r\nwork correctly as expected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/106", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/106/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/106/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/106", "id": 343437129, "node_id": "MDU6SXNzdWUzNDM0MzcxMjk=", "number": 106, "title": "Integrate more benchmarks on \"real world\" JSON samples", "user": {"login": "lelit", "id": 412797, "node_id": "MDQ6VXNlcjQxMjc5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/412797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lelit", "html_url": "https://github.com/lelit", "followers_url": "https://api.github.com/users/lelit/followers", "following_url": "https://api.github.com/users/lelit/following{/other_user}", "gists_url": "https://api.github.com/users/lelit/gists{/gist_id}", "starred_url": "https://api.github.com/users/lelit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lelit/subscriptions", "organizations_url": "https://api.github.com/users/lelit/orgs", "repos_url": "https://api.github.com/users/lelit/repos", "events_url": "https://api.github.com/users/lelit/events{/privacy}", "received_events_url": "https://api.github.com/users/lelit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-22T20:44:40Z", "updated_at": "2019-02-11T09:12:05Z", "closed_at": "2019-02-11T09:12:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Accordingly to [mujson](https://github.com/mattgiles/mujson#python-3) `python-rapidjson` ranks at the sixth place loading several _real world_ JSON samples :disappointed: ...\r\n\r\nTo be fair, maybe the [benchmark section](http://python-rapidjson.readthedocs.io/en/latest/benchmarks.html) should include, or at least mention those cases.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/105", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/105/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/105/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/105", "id": 335862617, "node_id": "MDU6SXNzdWUzMzU4NjI2MTc=", "number": 105, "title": "Test failures in 0.6.2 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-26T15:01:04Z", "updated_at": "2018-06-26T15:07:13Z", "closed_at": "2018-06-26T15:07:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n=================================== FAILURES ===================================\r\n test_additional_and_pattern_properties_valid[{\"I_0\": 23}-{\"type\":\"object\",\"patternProperties\":{\"^S_\":{\"type\":\"string\"},\"^I_\":{\"type\":\"integer\"}},\"additionalProperties\":false}]\r\n\r\nschema = '{\"type\":\"object\",\"patternProperties\":{\"^S_\":{\"type\":\"string\"},\"^I_\":{\"type\":\"integer\"}},\"additionalProperties\":false}'\r\njson = '{\"I_0\": 23}'\r\n\r\n    @pytest.mark.parametrize('schema', [\r\n        rj.dumps({\r\n            \"type\": \"object\",\r\n            \"patternProperties\": {\r\n                \"^S_\": { \"type\": \"string\" },\r\n                \"^I_\": { \"type\": \"integer\" }\r\n            },\r\n            \"additionalProperties\": False\r\n        }),\r\n    ])\r\n    @pytest.mark.parametrize('json', [\r\n         '{\"I_0\": 23}',\r\n         '{\"S_1\": \"the quick brown fox jumps over the lazy dog\"}',\r\n         pytest.param('{\"I_2\": \"A string\"}', marks=pytest.mark.xfail),\r\n         pytest.param('{\"keyword\": \"value\"}', marks=pytest.mark.xfail),\r\n    ])\r\n    @pytest.mark.unit\r\n    def test_additional_and_pattern_properties_valid(schema, json):\r\n        validate = rj.Validator(schema)\r\n>       validate(json)\r\nE       rapidjson.ValidationError: ('type', '#', '#/I_0')\r\n\r\ntests/test_validator.py:70: ValidationError\r\n test_additional_and_pattern_properties_valid[{\"S_1\": \"the quick brown fox jumps over the lazy dog\"}-{\"type\":\"object\",\"patternProperties\":{\"^S_\":{\"type\":\"string\"},\"^I_\":{\"type\":\"integer\"}},\"additionalProperties\":false}]\r\n\r\nschema = '{\"type\":\"object\",\"patternProperties\":{\"^S_\":{\"type\":\"string\"},\"^I_\":{\"type\":\"integer\"}},\"additionalProperties\":false}'\r\njson = '{\"S_1\": \"the quick brown fox jumps over the lazy dog\"}'\r\n\r\n    @pytest.mark.parametrize('schema', [\r\n        rj.dumps({\r\n            \"type\": \"object\",\r\n            \"patternProperties\": {\r\n                \"^S_\": { \"type\": \"string\" },\r\n                \"^I_\": { \"type\": \"integer\" }\r\n            },\r\n            \"additionalProperties\": False\r\n        }),\r\n    ])\r\n    @pytest.mark.parametrize('json', [\r\n         '{\"I_0\": 23}',\r\n         '{\"S_1\": \"the quick brown fox jumps over the lazy dog\"}',\r\n         pytest.param('{\"I_2\": \"A string\"}', marks=pytest.mark.xfail),\r\n         pytest.param('{\"keyword\": \"value\"}', marks=pytest.mark.xfail),\r\n    ])\r\n    @pytest.mark.unit\r\n    def test_additional_and_pattern_properties_valid(schema, json):\r\n        validate = rj.Validator(schema)\r\n>       validate(json)\r\nE       rapidjson.ValidationError: ('type', '#', '#/S_1')\r\n\r\ntests/test_validator.py:70: ValidationError\r\n========= 2 failed, 666 passed, 16 skipped, 2 xfailed in 1.15 seconds ==========\r\n```\r\n\r\nAny hints?\r\n\r\nPlatform is:\r\n```\r\nplatform linux -- Python 3.6.5, pytest-3.6.2, py-1.5.3, pluggy-0.6.0 -- /usr/bin/python\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/102", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/102/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/102/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/102", "id": 328690606, "node_id": "MDU6SXNzdWUzMjg2OTA2MDY=", "number": 102, "title": "Update rapidjson to pull in bugfixes for additionalProperties and patternProperties", "user": {"login": "acmiyaguchi", "id": 3304040, "node_id": "MDQ6VXNlcjMzMDQwNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3304040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acmiyaguchi", "html_url": "https://github.com/acmiyaguchi", "followers_url": "https://api.github.com/users/acmiyaguchi/followers", "following_url": "https://api.github.com/users/acmiyaguchi/following{/other_user}", "gists_url": "https://api.github.com/users/acmiyaguchi/gists{/gist_id}", "starred_url": "https://api.github.com/users/acmiyaguchi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acmiyaguchi/subscriptions", "organizations_url": "https://api.github.com/users/acmiyaguchi/orgs", "repos_url": "https://api.github.com/users/acmiyaguchi/repos", "events_url": "https://api.github.com/users/acmiyaguchi/events{/privacy}", "received_events_url": "https://api.github.com/users/acmiyaguchi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-01T23:44:35Z", "updated_at": "2018-06-06T06:55:04Z", "closed_at": "2018-06-06T06:55:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have been [experiencing issues](https://github.com/mozilla-services/edge-validator/issues/20) with `patternProperties` and `additionalProperties` behaviors in a schema validation service.\r\n\r\nI actually ran into the same problem with [a lua binding](https://github.com/mozilla-services/mozilla-pipeline-schemas/pull/132) that was solved by bumping the version from 1.1.2 to 1.1.3 after an appropriate PR was merged in.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/101", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/101/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/101/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/101", "id": 321083193, "node_id": "MDU6SXNzdWUzMjEwODMxOTM=", "number": 101, "title": "float precious issue", "user": {"login": "epheien", "id": 3406908, "node_id": "MDQ6VXNlcjM0MDY5MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3406908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epheien", "html_url": "https://github.com/epheien", "followers_url": "https://api.github.com/users/epheien/followers", "following_url": "https://api.github.com/users/epheien/following{/other_user}", "gists_url": "https://api.github.com/users/epheien/gists{/gist_id}", "starred_url": "https://api.github.com/users/epheien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epheien/subscriptions", "organizations_url": "https://api.github.com/users/epheien/orgs", "repos_url": "https://api.github.com/users/epheien/repos", "events_url": "https://api.github.com/users/epheien/events{/privacy}", "received_events_url": "https://api.github.com/users/epheien/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-08T08:04:31Z", "updated_at": "2018-06-06T07:29:35Z", "closed_at": "2018-06-06T07:29:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nPython 3.5.4 (v3.5.4:3f56838, Aug  8 2017, 02:07:06) [MSC v.1900 32 bit (Intel)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import rapidjson as rjson\r\n>>> import json\r\n>>> d = {'a': 0.1+0.2}\r\n>>> d\r\n{'a': 0.30000000000000004}\r\n>>> json.dumps(d)\r\n'{\"a\": 0.30000000000000004}'\r\n>>> rjson.dumps(d)\r\n'{\"a\":0.30000000000000007}'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/100", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/100/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/100/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/100", "id": 316172552, "node_id": "MDU6SXNzdWUzMTYxNzI1NTI=", "number": 100, "title": "Option to keep tuples on the same line", "user": {"login": "adrientetar", "id": 1250894, "node_id": "MDQ6VXNlcjEyNTA4OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1250894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrientetar", "html_url": "https://github.com/adrientetar", "followers_url": "https://api.github.com/users/adrientetar/followers", "following_url": "https://api.github.com/users/adrientetar/following{/other_user}", "gists_url": "https://api.github.com/users/adrientetar/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrientetar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrientetar/subscriptions", "organizations_url": "https://api.github.com/users/adrientetar/orgs", "repos_url": "https://api.github.com/users/adrientetar/repos", "events_url": "https://api.github.com/users/adrientetar/events{/privacy}", "received_events_url": "https://api.github.com/users/adrientetar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-20T08:22:53Z", "updated_at": "2018-04-20T13:49:05Z", "closed_at": "2018-04-20T12:25:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using rapidjson (great package, thank you!) to dump contents to a json file, and I use `indent=0` to get a readable/diffable file.\r\n\r\nHowever I have many tuples in my files, such as transformation matrices, and (though JSON has no tuple type) it would be nice to have them all on the same line instead of broken down, which makes the file harder tor ead and larger.\r\n\r\nSo basically:\r\n\r\n~~~py\r\n[{\"matrix\": (1, 0, 0, 1, 181, 0)}, {\"matrix\": (1, 0, 0, 1, 0, 0)}]\r\n~~~\r\n\r\nwould become:\r\n\r\n~~~py\r\n[\r\n{\r\n\"matrix\": [1, 0, 0, 1, 181, 0]\r\n},\r\n{\r\n\"matrix\": [1, 0, 0, 1, 181, 0]\r\n}\r\n]\r\n~~~\r\n\r\ninstead of:\r\n\r\n~~~py\r\n[\r\n{\r\n\"matrix\": [\r\n1,\r\n0,\r\n0,\r\n1,\r\n181,\r\n0\r\n]\r\n},\r\n{\r\n\"matrix\": [\r\n1,\r\n0,\r\n0,\r\n1,\r\n181,\r\n0\r\n]\r\n}\r\n]\r\n~~~\r\n\r\nbecause tuples wouldn't get flattened.\r\n\r\nDoes that sound reasonable / is it feasible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/98", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/98/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/98/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/98", "id": 310337113, "node_id": "MDU6SXNzdWUzMTAzMzcxMTM=", "number": 98, "title": "Benchmarks and ensure_ascii=False", "user": {"login": "socketpair", "id": 1157412, "node_id": "MDQ6VXNlcjExNTc0MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1157412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/socketpair", "html_url": "https://github.com/socketpair", "followers_url": "https://api.github.com/users/socketpair/followers", "following_url": "https://api.github.com/users/socketpair/following{/other_user}", "gists_url": "https://api.github.com/users/socketpair/gists{/gist_id}", "starred_url": "https://api.github.com/users/socketpair/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/socketpair/subscriptions", "organizations_url": "https://api.github.com/users/socketpair/orgs", "repos_url": "https://api.github.com/users/socketpair/repos", "events_url": "https://api.github.com/users/socketpair/events{/privacy}", "received_events_url": "https://api.github.com/users/socketpair/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-04-01T16:46:34Z", "updated_at": "2018-06-06T07:27:59Z", "closed_at": "2018-06-06T07:27:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Original JSON (Python 3.6) performance differs completely in performance for unicode strings that contain non-us-ascii characters. So, could you provide performance comparison for case `ensure_ascii=False` and national symbols in source strings? I mean `dumps() / dump()`. This is important since size of JSON document with `ensure_ascii=True` is mush bigger than with `False`.\r\n\r\nfor example, `.dumps('\u043f\u0440\u0438\u0432\u0435\u0442, \u043c\u0438\u0440!' * 1000)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/97", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/97/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/97/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/97", "id": 309713144, "node_id": "MDU6SXNzdWUzMDk3MTMxNDQ=", "number": 97, "title": "Release ETA?", "user": {"login": "23doors", "id": 1051101, "node_id": "MDQ6VXNlcjEwNTExMDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1051101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/23doors", "html_url": "https://github.com/23doors", "followers_url": "https://api.github.com/users/23doors/followers", "following_url": "https://api.github.com/users/23doors/following{/other_user}", "gists_url": "https://api.github.com/users/23doors/gists{/gist_id}", "starred_url": "https://api.github.com/users/23doors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/23doors/subscriptions", "organizations_url": "https://api.github.com/users/23doors/orgs", "repos_url": "https://api.github.com/users/23doors/repos", "events_url": "https://api.github.com/users/23doors/events{/privacy}", "received_events_url": "https://api.github.com/users/23doors/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-29T11:08:14Z", "updated_at": "2018-03-31T06:59:35Z", "closed_at": "2018-03-31T06:59:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recently discovered your library. Any ETA on new release? Found that current PyPI version (0.4.3) does not define RawJSON which is a pretty awesome feature and main reason for me to switch to rapidjson. For now, I'll just use github master but of course pypi released version is preferred.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/93", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/93/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/93/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/93", "id": 286602443, "node_id": "MDU6SXNzdWUyODY2MDI0NDM=", "number": 93, "title": "default for loads", "user": {"login": "alka2", "id": 13791173, "node_id": "MDQ6VXNlcjEzNzkxMTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/13791173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alka2", "html_url": "https://github.com/alka2", "followers_url": "https://api.github.com/users/alka2/followers", "following_url": "https://api.github.com/users/alka2/following{/other_user}", "gists_url": "https://api.github.com/users/alka2/gists{/gist_id}", "starred_url": "https://api.github.com/users/alka2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alka2/subscriptions", "organizations_url": "https://api.github.com/users/alka2/orgs", "repos_url": "https://api.github.com/users/alka2/repos", "events_url": "https://api.github.com/users/alka2/events{/privacy}", "received_events_url": "https://api.github.com/users/alka2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-01-07T21:48:32Z", "updated_at": "2018-02-08T20:16:07Z", "closed_at": "2018-02-08T20:16:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "is it possible to add `default`  for `loads` function like `dumps`?  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/91", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/91/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/91/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/91", "id": 284166066, "node_id": "MDU6SXNzdWUyODQxNjYwNjY=", "number": 91, "title": "Class inheritance seems weird", "user": {"login": "href", "id": 273163, "node_id": "MDQ6VXNlcjI3MzE2Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/273163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/href", "html_url": "https://github.com/href", "followers_url": "https://api.github.com/users/href/followers", "following_url": "https://api.github.com/users/href/following{/other_user}", "gists_url": "https://api.github.com/users/href/gists{/gist_id}", "starred_url": "https://api.github.com/users/href/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/href/subscriptions", "organizations_url": "https://api.github.com/users/href/orgs", "repos_url": "https://api.github.com/users/href/repos", "events_url": "https://api.github.com/users/href/events{/privacy}", "received_events_url": "https://api.github.com/users/href/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-22T13:41:22Z", "updated_at": "2017-12-23T11:20:06Z", "closed_at": "2017-12-22T18:48:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe not a bug, but I found something odd. The following custom class cannot be used:\r\n\r\n```python\r\nfrom rapidjson import Encoder\r\n\r\nclass MyEncoder(Encoder):\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n```\r\n\r\nThis results in the following error:\r\n\r\n```python\r\n>>> MyEncoder(sort_keys=True)\r\nTypeError: object.__init__() takes no parameters\r\n```\r\n\r\nDoes this make sense? Or is this an indicator that the Encoder class is maybe not set up correctly?\r\n\r\nIn any case, I'd be very interested to learn why this happens :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/87", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/87/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/87/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/87", "id": 280820368, "node_id": "MDU6SXNzdWUyODA4MjAzNjg=", "number": 87, "title": "Warnings during compile for v0.2.7", "user": {"login": "hajapy", "id": 21218230, "node_id": "MDQ6VXNlcjIxMjE4MjMw", "avatar_url": "https://avatars3.githubusercontent.com/u/21218230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hajapy", "html_url": "https://github.com/hajapy", "followers_url": "https://api.github.com/users/hajapy/followers", "following_url": "https://api.github.com/users/hajapy/following{/other_user}", "gists_url": "https://api.github.com/users/hajapy/gists{/gist_id}", "starred_url": "https://api.github.com/users/hajapy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hajapy/subscriptions", "organizations_url": "https://api.github.com/users/hajapy/orgs", "repos_url": "https://api.github.com/users/hajapy/repos", "events_url": "https://api.github.com/users/hajapy/events{/privacy}", "received_events_url": "https://api.github.com/users/hajapy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-12-10T16:00:35Z", "updated_at": "2017-12-21T11:16:23Z", "closed_at": "2017-12-21T11:16:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was updating the conda-forge feedstock to 0.2.7 and noticed the following warnings in the builds for linux and os x. Full logs here: \r\nhttps://circleci.com/gh/conda-forge/python-rapidjson-feedstock/tree/pull%2F6 \r\nhttps://travis-ci.org/conda-forge/python-rapidjson-feedstock/builds/314361977\r\n\r\n```\r\ncc1plus: warning: command line option \u2018-Wstrict-prototypes\u2019 is valid for C/ObjC but not for C++ [enabled by default]\r\n./rapidjson.cpp:1145:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n };\r\n ^\r\n./rapidjson.cpp:1145:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:1145:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:1145:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:1145:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:1145:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:1145:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:1145:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n };\r\n ^\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n./rapidjson.cpp:2250:1: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n```\r\n\r\n```\r\n./rapidjson.cpp:1136:6: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n    {\"datetime_mode\",\r\n\r\n     ^\r\n\r\n./rapidjson.cpp:1137:63: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n     T_UINT, offsetof(DecoderObject, datetimeMode), READONLY, \"datetime_mode\"},\r\n\r\n                                                              ^\r\n\r\n./rapidjson.cpp:1138:6: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n    {\"uuid_mode\",\r\n\r\n     ^\r\n\r\n./rapidjson.cpp:1139:59: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n     T_UINT, offsetof(DecoderObject, uuidMode), READONLY, \"uuid_mode\"},\r\n\r\n                                                          ^\r\n\r\n./rapidjson.cpp:1140:6: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n    {\"number_mode\",\r\n\r\n     ^\r\n\r\n./rapidjson.cpp:1141:61: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n     T_UINT, offsetof(DecoderObject, numberMode), READONLY, \"number_mode\"},\r\n\r\n                                                            ^\r\n\r\n./rapidjson.cpp:1142:6: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n    {\"parse_mode\",\r\n\r\n     ^\r\n\r\n./rapidjson.cpp:1143:60: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n     T_UINT, offsetof(DecoderObject, parseMode), READONLY, \"parse_mode\"},\r\n\r\n                                                           ^\r\n\r\n./rapidjson.cpp:2233:6: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n    {\"skip_invalid_keys\",\r\n\r\n     ^\r\n\r\n./rapidjson.cpp:2234:66: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n     T_BOOL, offsetof(EncoderObject, skipInvalidKeys), READONLY, \"skip_invalid_keys\"},\r\n\r\n                                                                 ^\r\n\r\n./rapidjson.cpp:2235:6: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n    {\"ensure_ascii\",\r\n\r\n     ^\r\n\r\n./rapidjson.cpp:2236:62: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n     T_BOOL, offsetof(EncoderObject, ensureAscii), READONLY, \"ensure_ascii\"},\r\n\r\n                                                             ^\r\n\r\n./rapidjson.cpp:2237:6: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n    {\"indent\",\r\n\r\n     ^\r\n\r\n./rapidjson.cpp:2238:57: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n     T_UINT, offsetof(EncoderObject, indent), READONLY, \"indent\"},\r\n\r\n                                                        ^\r\n\r\n./rapidjson.cpp:2239:6: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n    {\"sort_keys\",\r\n\r\n     ^\r\n\r\n./rapidjson.cpp:2240:62: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n     T_BOOL, offsetof(EncoderObject, ensureAscii), READONLY, \"sort_keys\"},\r\n\r\n                                                             ^\r\n\r\n./rapidjson.cpp:2241:6: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n    {\"max_recursion_depth\",\r\n\r\n     ^\r\n\r\n./rapidjson.cpp:2242:68: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n     T_UINT, offsetof(EncoderObject, maxRecursionDepth), READONLY, \"max_recursion_depth\"},\r\n\r\n                                                                   ^\r\n\r\n./rapidjson.cpp:2243:6: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n    {\"datetime_mode\",\r\n\r\n     ^\r\n\r\n./rapidjson.cpp:2244:63: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n     T_UINT, offsetof(EncoderObject, datetimeMode), READONLY, \"datetime_mode\"},\r\n\r\n                                                              ^\r\n\r\n./rapidjson.cpp:2245:6: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n    {\"uuid_mode\",\r\n\r\n     ^\r\n\r\n./rapidjson.cpp:2246:59: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n     T_UINT, offsetof(EncoderObject, uuidMode), READONLY, \"uuid_mode\"},\r\n\r\n                                                          ^\r\n\r\n./rapidjson.cpp:2247:6: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n    {\"number_mode\",\r\n\r\n     ^\r\n\r\n./rapidjson.cpp:2248:61: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n\r\n     T_UINT, offsetof(EncoderObject, numberMode), READONLY, \"number_mode\"},\r\n\r\n                                                            ^\r\n\r\n24 warnings generated.\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/86", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/86/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/86/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/86", "id": 279130494, "node_id": "MDU6SXNzdWUyNzkxMzA0OTQ=", "number": 86, "title": "Install latest version on Mac OS", "user": {"login": "alka2", "id": 13791173, "node_id": "MDQ6VXNlcjEzNzkxMTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/13791173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alka2", "html_url": "https://github.com/alka2", "followers_url": "https://api.github.com/users/alka2/followers", "following_url": "https://api.github.com/users/alka2/following{/other_user}", "gists_url": "https://api.github.com/users/alka2/gists{/gist_id}", "starred_url": "https://api.github.com/users/alka2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alka2/subscriptions", "organizations_url": "https://api.github.com/users/alka2/orgs", "repos_url": "https://api.github.com/users/alka2/repos", "events_url": "https://api.github.com/users/alka2/events{/privacy}", "received_events_url": "https://api.github.com/users/alka2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-04T20:06:21Z", "updated_at": "2017-12-04T20:07:33Z", "closed_at": "2017-12-04T20:07:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting gcc error when I try to install latest version on Mac OS:\r\n\r\n```\r\n./rapidjson.cpp:1653:17: error: use of undeclared identifier 'isnan'; did you mean 'std::isnan'?\r\n              if (Py_IS_NAN(d)) {\r\n\r\n./rapidjson.cpp:1661:24: error: use of undeclared identifier 'isinf'\r\n              } else if (Py_IS_INFINITY(d)) {\r\n\r\n....\r\n\r\n\r\n ./rapidjson.cpp:2246:61: warning: conversion from string literal to 'char *' is deprecated [-Wc++11-compat-deprecated-writable-strings]\r\n         T_UINT, offsetof(EncoderObject, numberMode), READONLY, \"number_mode\"},\r\n                                                                ^\r\n24 warnings and 2 errors generated.\r\nerror: command 'gcc' failed with exit status 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/84", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/84/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/84/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/84", "id": 270322539, "node_id": "MDU6SXNzdWUyNzAzMjI1Mzk=", "number": 84, "title": "Generalize support for lists and tuples to extend to iterators", "user": {"login": "hexaclock", "id": 931659, "node_id": "MDQ6VXNlcjkzMTY1OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/931659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hexaclock", "html_url": "https://github.com/hexaclock", "followers_url": "https://api.github.com/users/hexaclock/followers", "following_url": "https://api.github.com/users/hexaclock/following{/other_user}", "gists_url": "https://api.github.com/users/hexaclock/gists{/gist_id}", "starred_url": "https://api.github.com/users/hexaclock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hexaclock/subscriptions", "organizations_url": "https://api.github.com/users/hexaclock/orgs", "repos_url": "https://api.github.com/users/hexaclock/repos", "events_url": "https://api.github.com/users/hexaclock/events{/privacy}", "received_events_url": "https://api.github.com/users/hexaclock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-11-01T14:16:40Z", "updated_at": "2017-12-20T17:54:52Z", "closed_at": "2017-12-20T17:54:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great to be able to serialize, for example, a generator as that can be more efficient in terms of memory consumption; instead of having to construct a list of N items prior to serializing them, python-rapidjson could consume items from a generator and produce a JSON list.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/80", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/80/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/80/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/80", "id": 259731069, "node_id": "MDU6SXNzdWUyNTk3MzEwNjk=", "number": 80, "title": "Support for stream (equivalent to json.load/json.dump)", "user": {"login": "xavierhardy", "id": 1199175, "node_id": "MDQ6VXNlcjExOTkxNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1199175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xavierhardy", "html_url": "https://github.com/xavierhardy", "followers_url": "https://api.github.com/users/xavierhardy/followers", "following_url": "https://api.github.com/users/xavierhardy/following{/other_user}", "gists_url": "https://api.github.com/users/xavierhardy/gists{/gist_id}", "starred_url": "https://api.github.com/users/xavierhardy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xavierhardy/subscriptions", "organizations_url": "https://api.github.com/users/xavierhardy/orgs", "repos_url": "https://api.github.com/users/xavierhardy/repos", "events_url": "https://api.github.com/users/xavierhardy/events{/privacy}", "received_events_url": "https://api.github.com/users/xavierhardy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-09-22T07:48:16Z", "updated_at": "2018-02-10T19:48:14Z", "closed_at": "2018-01-05T11:27:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "We would like to be able to parse streams/file objects to avoid having to read first the entire stream and then parse it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/79", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/79/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/79/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/79", "id": 257377185, "node_id": "MDU6SXNzdWUyNTczNzcxODU=", "number": 79, "title": "cannot install on windows 7", "user": {"login": "baditaflorin", "id": 2330999, "node_id": "MDQ6VXNlcjIzMzA5OTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2330999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baditaflorin", "html_url": "https://github.com/baditaflorin", "followers_url": "https://api.github.com/users/baditaflorin/followers", "following_url": "https://api.github.com/users/baditaflorin/following{/other_user}", "gists_url": "https://api.github.com/users/baditaflorin/gists{/gist_id}", "starred_url": "https://api.github.com/users/baditaflorin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baditaflorin/subscriptions", "organizations_url": "https://api.github.com/users/baditaflorin/orgs", "repos_url": "https://api.github.com/users/baditaflorin/repos", "events_url": "https://api.github.com/users/baditaflorin/events{/privacy}", "received_events_url": "https://api.github.com/users/baditaflorin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-13T13:17:57Z", "updated_at": "2017-09-13T13:51:13Z", "closed_at": "2017-09-13T13:44:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "C:\\Users\\florinb>python -3.4 -m pip install python-rapidjson\r\nUnknown option: -.\r\nusage: python [option] ... [-c cmd | -m mod | file | -] [arg] ...\r\nTry `python -h' for more information.\r\n\r\nC:\\Users\\florinb>python -3 -m pip install python-rapidjson\r\nC:\\Python27\\lib\\site-packages\\pip\\_vendor\\requests\\auth.py:44: DeprecationWarning: Overriding __eq__ blocks inheritance of __hash_\r\n  class HTTPBasicAuth(AuthBase):\r\nC:\\Python27\\lib\\site-packages\\pip\\_vendor\\requests\\auth.py:73: DeprecationWarning: Overriding __eq__ blocks inheritance of __hash_\r\n  class HTTPDigestAuth(AuthBase):\r\nC:\\Python27\\lib\\site-packages\\ipaddress.py:82: DeprecationWarning: Overriding __eq__ blocks inheritance of __hash__ in 3.x\r\n  class _TotalOrderingMixin(object):\r\nCollecting python-rapidjson\r\n  Using cached python-rapidjson-0.2.3.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"c:\\users\\florinb\\appdata\\local\\temp\\pip-build-13fr8v\\python-rapidjson\\setup.py\", line 28, in <module>\r\n        raise NotImplementedError(\"Only Python 3+ is supported.\")\r\n    NotImplementedError: Only Python 3+ is supported.\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in c:\\users\\florinb\\appdata\\local\\temp\\pip-build-13fr8v\\python-rapidjs\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/78", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/78/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/78/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/78", "id": 256529150, "node_id": "MDU6SXNzdWUyNTY1MjkxNTA=", "number": 78, "title": "Unable to compile MacOS wheel for Python 3.4", "user": {"login": "lelit", "id": 412797, "node_id": "MDQ6VXNlcjQxMjc5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/412797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lelit", "html_url": "https://github.com/lelit", "followers_url": "https://api.github.com/users/lelit/followers", "following_url": "https://api.github.com/users/lelit/following{/other_user}", "gists_url": "https://api.github.com/users/lelit/gists{/gist_id}", "starred_url": "https://api.github.com/users/lelit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lelit/subscriptions", "organizations_url": "https://api.github.com/users/lelit/orgs", "repos_url": "https://api.github.com/users/lelit/repos", "events_url": "https://api.github.com/users/lelit/events{/privacy}", "received_events_url": "https://api.github.com/users/lelit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2017-09-10T18:22:52Z", "updated_at": "2017-12-21T11:15:04Z", "closed_at": "2017-12-20T18:00:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Under MacOS/clang, the compilation of the module with Python 3.4 runtime fails, see https://travis-ci.org/python-rapidjson/python-rapidjson/jobs/273856525", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/77", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/77/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/77/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/77", "id": 256331691, "node_id": "MDU6SXNzdWUyNTYzMzE2OTE=", "number": 77, "title": "Install and Build fails for OSX", "user": {"login": "carlpulley", "id": 176421, "node_id": "MDQ6VXNlcjE3NjQyMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/176421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlpulley", "html_url": "https://github.com/carlpulley", "followers_url": "https://api.github.com/users/carlpulley/followers", "following_url": "https://api.github.com/users/carlpulley/following{/other_user}", "gists_url": "https://api.github.com/users/carlpulley/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlpulley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlpulley/subscriptions", "organizations_url": "https://api.github.com/users/carlpulley/orgs", "repos_url": "https://api.github.com/users/carlpulley/repos", "events_url": "https://api.github.com/users/carlpulley/events{/privacy}", "received_events_url": "https://api.github.com/users/carlpulley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-08T18:12:46Z", "updated_at": "2017-09-10T06:45:04Z", "closed_at": "2017-09-10T06:45:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Building or installing python-rapidjson on OSX currently fails with the following error:\r\n```\r\n./rapidjson.cpp:560:25: error: implicit instantiation of undefined template 'std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >'\r\n            std::string zstr(str, length);\r\n```\r\n\r\nIf one edits the `rapidjson.cpp` file and adds the following additional imports:\r\n```\r\n#include <string>\r\n#include <sstream>\r\n#include <iostream>\r\n```\r\nthen the build will now succeed.\r\n\r\nIf acceptable, I can generate a PR with these changes added. If I do this, should I scope these additions to OSX/Darwin build environments?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/75", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/75/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/75/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/75", "id": 253061282, "node_id": "MDU6SXNzdWUyNTMwNjEyODI=", "number": 75, "title": "--prompt for venv ?", "user": {"login": "step21", "id": 46968, "node_id": "MDQ6VXNlcjQ2OTY4", "avatar_url": "https://avatars2.githubusercontent.com/u/46968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/step21", "html_url": "https://github.com/step21", "followers_url": "https://api.github.com/users/step21/followers", "following_url": "https://api.github.com/users/step21/following{/other_user}", "gists_url": "https://api.github.com/users/step21/gists{/gist_id}", "starred_url": "https://api.github.com/users/step21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/step21/subscriptions", "organizations_url": "https://api.github.com/users/step21/orgs", "repos_url": "https://api.github.com/users/step21/repos", "events_url": "https://api.github.com/users/step21/events{/privacy}", "received_events_url": "https://api.github.com/users/step21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-26T04:29:12Z", "updated_at": "2017-09-10T15:37:47Z", "closed_at": "2017-09-10T12:12:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great to have some info for what kind of system you require. In my tests, the Makefiles fail because when trying to set up python/venv they use `--promot` which is not available as a commandline option. When I checked the docs, it seems like this is an API function but not necessarily available as a commandline argument. This is on Ubuntu 16.04.3 with an up to date python installation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/73", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/73/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/73/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/73", "id": 247172516, "node_id": "MDU6SXNzdWUyNDcxNzI1MTY=", "number": 73, "title": "Relaxed JSON syntax from rapidjson-1.1", "user": {"login": "cavanaug", "id": 59479, "node_id": "MDQ6VXNlcjU5NDc5", "avatar_url": "https://avatars0.githubusercontent.com/u/59479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cavanaug", "html_url": "https://github.com/cavanaug", "followers_url": "https://api.github.com/users/cavanaug/followers", "following_url": "https://api.github.com/users/cavanaug/following{/other_user}", "gists_url": "https://api.github.com/users/cavanaug/gists{/gist_id}", "starred_url": "https://api.github.com/users/cavanaug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cavanaug/subscriptions", "organizations_url": "https://api.github.com/users/cavanaug/orgs", "repos_url": "https://api.github.com/users/cavanaug/repos", "events_url": "https://api.github.com/users/cavanaug/events{/privacy}", "received_events_url": "https://api.github.com/users/cavanaug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-01T19:15:31Z", "updated_at": "2017-08-24T10:28:49Z", "closed_at": "2017-08-24T10:28:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Id like to be able to use the relaxed json syntax optionally allowed in rapidjson-1.1.   (See http://rapidjson.org/md_doc_dom.html)\r\n\r\nSpecifically\r\n  kParseTrailingCommasFlag\r\n  kParseCommentsFlag\r\n\r\nIm not worried about roundtrip read/write, but at this point just for read.\r\n\r\nI think this just needs a blessed parameter exposed to allow for these to be enabled at the C lib.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/72", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/72/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/72/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/72", "id": 245733216, "node_id": "MDU6SXNzdWUyNDU3MzMyMTY=", "number": 72, "title": "bundled wheel?", "user": {"login": "lyssdod", "id": 2615950, "node_id": "MDQ6VXNlcjI2MTU5NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2615950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lyssdod", "html_url": "https://github.com/lyssdod", "followers_url": "https://api.github.com/users/lyssdod/followers", "following_url": "https://api.github.com/users/lyssdod/following{/other_user}", "gists_url": "https://api.github.com/users/lyssdod/gists{/gist_id}", "starred_url": "https://api.github.com/users/lyssdod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lyssdod/subscriptions", "organizations_url": "https://api.github.com/users/lyssdod/orgs", "repos_url": "https://api.github.com/users/lyssdod/repos", "events_url": "https://api.github.com/users/lyssdod/events{/privacy}", "received_events_url": "https://api.github.com/users/lyssdod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-26T14:04:09Z", "updated_at": "2017-07-26T15:26:51Z", "closed_at": "2017-07-26T15:26:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nAny chance on binary wheel package which doesn't require compilation? I have no problems compiling it on my box, but some machines are a bit strict regarding installing compilers and stuff", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/71", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/71/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/71/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/71", "id": 223308615, "node_id": "MDU6SXNzdWUyMjMzMDg2MTU=", "number": 71, "title": "Schema validation support??", "user": {"login": "cavanaug", "id": 59479, "node_id": "MDQ6VXNlcjU5NDc5", "avatar_url": "https://avatars0.githubusercontent.com/u/59479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cavanaug", "html_url": "https://github.com/cavanaug", "followers_url": "https://api.github.com/users/cavanaug/followers", "following_url": "https://api.github.com/users/cavanaug/following{/other_user}", "gists_url": "https://api.github.com/users/cavanaug/gists{/gist_id}", "starred_url": "https://api.github.com/users/cavanaug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cavanaug/subscriptions", "organizations_url": "https://api.github.com/users/cavanaug/orgs", "repos_url": "https://api.github.com/users/cavanaug/repos", "events_url": "https://api.github.com/users/cavanaug/events{/privacy}", "received_events_url": "https://api.github.com/users/cavanaug/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-04-21T08:04:24Z", "updated_at": "2017-08-24T10:29:29Z", "closed_at": "2017-08-24T10:29:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any plans for adding the schema validation support from RapidJson??\r\n\r\nhttps://github.com/miloyip/rapidjson/blob/master/doc/schema.md\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/70", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/70/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/70/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/70", "id": 220720920, "node_id": "MDU6SXNzdWUyMjA3MjA5MjA=", "number": 70, "title": "Support for Python 2.7", "user": {"login": "erichiggins", "id": 507145, "node_id": "MDQ6VXNlcjUwNzE0NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/507145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erichiggins", "html_url": "https://github.com/erichiggins", "followers_url": "https://api.github.com/users/erichiggins/followers", "following_url": "https://api.github.com/users/erichiggins/following{/other_user}", "gists_url": "https://api.github.com/users/erichiggins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erichiggins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erichiggins/subscriptions", "organizations_url": "https://api.github.com/users/erichiggins/orgs", "repos_url": "https://api.github.com/users/erichiggins/repos", "events_url": "https://api.github.com/users/erichiggins/events{/privacy}", "received_events_url": "https://api.github.com/users/erichiggins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-04-10T17:51:39Z", "updated_at": "2017-08-07T12:59:21Z", "closed_at": "2017-07-03T09:48:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saw the statement that this project doesn't support \"legacy versions of Python\" in the README. However, many companies still rely on Python 2.7 in production systems and having tooling that supports both 2 and 3 provides a better upgrade path.\r\n\r\nIs it trivial for you to also support 2.7? Would you please consider adding that support so forks/patches are not necessary?  If you're not willing to do the work yourself, would you accept a PR that adds this support?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/69", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/69/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/69/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/69", "id": 215297422, "node_id": "MDU6SXNzdWUyMTUyOTc0MjI=", "number": 69, "title": "cant install on OSX Maverick (10.9.5) python 3.4.3", "user": {"login": "sejans", "id": 16455523, "node_id": "MDQ6VXNlcjE2NDU1NTIz", "avatar_url": "https://avatars1.githubusercontent.com/u/16455523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sejans", "html_url": "https://github.com/sejans", "followers_url": "https://api.github.com/users/sejans/followers", "following_url": "https://api.github.com/users/sejans/following{/other_user}", "gists_url": "https://api.github.com/users/sejans/gists{/gist_id}", "starred_url": "https://api.github.com/users/sejans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sejans/subscriptions", "organizations_url": "https://api.github.com/users/sejans/orgs", "repos_url": "https://api.github.com/users/sejans/repos", "events_url": "https://api.github.com/users/sejans/events{/privacy}", "received_events_url": "https://api.github.com/users/sejans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-19T21:42:22Z", "updated_at": "2017-03-25T15:05:38Z", "closed_at": "2017-03-25T15:05:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "After pip install python-rapidjson\r\nThe following output happens\r\nCollecting python-rapidjson\r\n  Using cached python-rapidjson-0.0.11.tar.gz\r\nInstalling collected packages: python-rapidjson\r\n  Running setup.py install for python-rapidjson ... error\r\n    Complete output from command /Library/Frameworks/Python.framework/Versions/3.4/bin/python3.4 -u -c \"import setuptools, tokenize;__file__='/private/var/folders/cm/dwsx5_yn5p92nzfyrn8g68wr0000gn/T/pip-build-4fiy0ttq/python-rapidjson/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /var/folders/cm/dwsx5_yn5p92nzfyrn8g68wr0000gn/T/pip-8yx2m6bb-record/install-record.txt --single-version-externally-managed --compile:\r\n    running install\r\n    running build\r\n    running build_ext\r\n    building 'rapidjson' extension\r\n    creating build\r\n    creating build/temp.macosx-10.6-intel-3.4\r\n    creating build/temp.macosx-10.6-intel-3.4/python-rapidjson\r\n    gcc-4.2 -fno-strict-aliasing -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -I./rapidjson/include -I/Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m -c ./python-rapidjson/rapidjson.cpp -o build/temp.macosx-10.6-intel-3.4/./python-rapidjson/rapidjson.o -pedantic\r\n    In file included from /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/Python.h:78,\r\n                     from ./python-rapidjson/rapidjson.cpp:1:\r\n    /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/longobject.h:88: error: ISO C++ does not support 'long long'\r\n    /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/longobject.h:89: error: ISO C++ does not support 'long long'\r\n    /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/longobject.h:90: error: ISO C++ does not support 'long long'\r\n    /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/longobject.h:91: error: ISO C++ does not support 'long long'\r\n    /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/longobject.h:92: error: ISO C++ does not support 'long long'\r\n    /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/longobject.h:93: error: ISO C++ does not support 'long long'\r\n    In file included from ./rapidjson/include/rapidjson/writer.h:21,\r\n                     from ./python-rapidjson/rapidjson.cpp:11:\r\n    ./rapidjson/include/rapidjson/internal/dtoa.h:32: warning: unknown option after '#pragma GCC diagnostic' kind\r\n    In file included from /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/Python.h:78,\r\n                     from ./python-rapidjson/rapidjson.cpp:1:\r\n    /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/longobject.h:88: error: ISO C++ does not support 'long long'\r\n    /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/longobject.h:89: error: ISO C++ does not support 'long long'\r\n    /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/longobject.h:90: error: ISO C++ does not support 'long long'\r\n    /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/longobject.h:91: error: ISO C++ does not support 'long long'\r\n    /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/longobject.h:92: error: ISO C++ does not support 'long long'\r\n    /Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m/longobject.h:93: error: ISO C++ does not support 'long long'\r\n    In file included from ./rapidjson/include/rapidjson/writer.h:21,\r\n                     from ./python-rapidjson/rapidjson.cpp:11:\r\n    ./rapidjson/include/rapidjson/internal/dtoa.h:32: warning: unknown option after '#pragma GCC diagnostic' kind\r\n    fatal error: /Library/Developer/CommandLineTools/usr/bin/lipo: can't figure out the architecture type of: /var/folders/cm/dwsx5_yn5p92nzfyrn8g68wr0000gn/T//cccQX3Nv.out\r\n    error: command 'gcc-4.2' failed with exit status 1\r\n\r\n    ----------------------------------------\r\nCommand \"/Library/Frameworks/Python.framework/Versions/3.4/bin/python3.4 -u -c \"import setuptools, tokenize;__file__='/private/var/folders/cm/dwsx5_yn5p92nzfyrn8g68wr0000gn/T/pip-build-4fiy0ttq/python-rapidjson/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /var/folders/cm/dwsx5_yn5p92nzfyrn8g68wr0000gn/T/pip-8yx2m6bb-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /private/var/folders/cm/dwsx5_yn5p92nzfyrn8g68wr0000gn/T/pip-build-4fiy0ttq/python-rapidjson/\r\n\r\n-----------\r\nHave tried to uninstall XCode and install Command Line tools, didnt help.\r\nCurrently\r\n```\r\ngcc --version\r\n\r\nConfigured with: --prefix=/Library/Developer/CommandLineTools/usr --with-gxx-include-dir=/usr/include/c++/4.2.1\r\nApple LLVM version 6.0 (clang-600.0.57) (based on LLVM 3.5svn)\r\nTarget: x86_64-apple-darwin13.4.0\r\nThread model: posix\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/68", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/68/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/68/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/68", "id": 213726957, "node_id": "MDU6SXNzdWUyMTM3MjY5NTc=", "number": 68, "title": "Request for opinion: different way to specify related options", "user": {"login": "lelit", "id": 412797, "node_id": "MDQ6VXNlcjQxMjc5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/412797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lelit", "html_url": "https://github.com/lelit", "followers_url": "https://api.github.com/users/lelit/followers", "following_url": "https://api.github.com/users/lelit/following{/other_user}", "gists_url": "https://api.github.com/users/lelit/gists{/gist_id}", "starred_url": "https://api.github.com/users/lelit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lelit/subscriptions", "organizations_url": "https://api.github.com/users/lelit/orgs", "repos_url": "https://api.github.com/users/lelit/repos", "events_url": "https://api.github.com/users/lelit/events{/privacy}", "received_events_url": "https://api.github.com/users/lelit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-13T10:31:14Z", "updated_at": "2017-08-24T10:29:51Z", "closed_at": "2017-08-24T10:29:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While (re)implementing some features I'd like to propose for acceptance (_native numbers_ and issue #61 for example), it occurred to me that there is some kind of dichotomy in the way they are activated by passing different arguments to the exposed API functions.\r\n\r\nSince I'm going to work toward a 0.1 release, it seems the right time to unify the two styles, assuming there is some consensus. Since I'm obviously biased, I'm asking your opinion here.\r\n\r\nOne style, inherited by the standard library `json` module, uses a set of _boolean_ options to enable/disable different behaviours: for example, we have `allow_nan` to enable `NaN` recognition, and `use_decimal` to prefer `decimal.Decimal` over plain floats.\r\n\r\nThe other style, which I used to implement the support for `datetime` objects, uses a single option `datetime_mode` that takes a combination of _bit flags_ to select a particular serialization format and different behaviours wrt timezones. This allowed me to restrict the number of options accepted by the API.\r\n\r\nAn example of the former is:\r\n```python\r\n>>> print(dumps(foo, allow_nan=False, use_decimal=True)\r\n```\r\n\r\nwhile the latter looks like:\r\n```python\r\n>>> print(dumps(foo, datetime_mode=DM_ISO8601 | DM_NAIVE_IS_UTC)\r\n```\r\n\r\nTo implement _native numbers_ (that is, to tell underlying RapidJSON to use architecture native numbers, a much faster codepath than the _infinite precision_ one), I could code it either as:\r\n```python\r\n>>> result = loads(json, native_numbers=True, use_decimal=True)\r\n```\r\n\r\nor like:\r\n```python\r\n>>> result = loads(json, number_mode=NM_NATIVE_NUMBERS | NM_DECIMAL_FLOATS)\r\n```\r\n\r\n(the focus being on the _bitset_ `number_mode` option, not on flag's names).\r\n\r\nWhat do you think? Which style would you prefer?\r\n\r\nIf standalone options is considered better, should I (re\u00b2)implement `datetime` handling in that style?\r\nIf instead we go the _bitset_ way, should I remove/deprecate the old options or leave them untouched?\r\n\r\nThank you for any feedback!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/67", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/67/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/67/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/67", "id": 212599288, "node_id": "MDU6SXNzdWUyMTI1OTkyODg=", "number": 67, "title": "Automatically deploy sdist and wheel on PyPI", "user": {"login": "lelit", "id": 412797, "node_id": "MDQ6VXNlcjQxMjc5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/412797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lelit", "html_url": "https://github.com/lelit", "followers_url": "https://api.github.com/users/lelit/followers", "following_url": "https://api.github.com/users/lelit/following{/other_user}", "gists_url": "https://api.github.com/users/lelit/gists{/gist_id}", "starred_url": "https://api.github.com/users/lelit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lelit/subscriptions", "organizations_url": "https://api.github.com/users/lelit/orgs", "repos_url": "https://api.github.com/users/lelit/repos", "events_url": "https://api.github.com/users/lelit/events{/privacy}", "received_events_url": "https://api.github.com/users/lelit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-08T00:12:16Z", "updated_at": "2017-08-16T16:18:23Z", "closed_at": "2017-08-16T15:45:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice to configure Travis CI to automatically upload sdist and binary wheel to PyPI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/65", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/65/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/65/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/65", "id": 211359483, "node_id": "MDU6SXNzdWUyMTEzNTk0ODM=", "number": 65, "title": "[versioning] use minor version and free patch version for minor fixes", "user": {"login": "sbellem", "id": 125458, "node_id": "MDQ6VXNlcjEyNTQ1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/125458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbellem", "html_url": "https://github.com/sbellem", "followers_url": "https://api.github.com/users/sbellem/followers", "following_url": "https://api.github.com/users/sbellem/following{/other_user}", "gists_url": "https://api.github.com/users/sbellem/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbellem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbellem/subscriptions", "organizations_url": "https://api.github.com/users/sbellem/orgs", "repos_url": "https://api.github.com/users/sbellem/repos", "events_url": "https://api.github.com/users/sbellem/events{/privacy}", "received_events_url": "https://api.github.com/users/sbellem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-02T11:08:49Z", "updated_at": "2017-08-16T15:45:45Z", "closed_at": "2017-08-16T15:45:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is just a suggestion regarding versioning. Given `{major}.{minor}.{patch}`, it may be worth considering using the `minor` version for releases, and thus freeing the `patch` version for hot fixes. For instance, having a release `0.1.0` allows for multiple very minor patches/fixes: `0.1.1`, `0.1.2`, `0.1.3`, etc.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/63", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/63/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/63/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/63", "id": 211356872, "node_id": "MDU6SXNzdWUyMTEzNTY4NzI=", "number": 63, "title": "Pip installation fails", "user": {"login": "thevishvish", "id": 4707062, "node_id": "MDQ6VXNlcjQ3MDcwNjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4707062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thevishvish", "html_url": "https://github.com/thevishvish", "followers_url": "https://api.github.com/users/thevishvish/followers", "following_url": "https://api.github.com/users/thevishvish/following{/other_user}", "gists_url": "https://api.github.com/users/thevishvish/gists{/gist_id}", "starred_url": "https://api.github.com/users/thevishvish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thevishvish/subscriptions", "organizations_url": "https://api.github.com/users/thevishvish/orgs", "repos_url": "https://api.github.com/users/thevishvish/repos", "events_url": "https://api.github.com/users/thevishvish/events{/privacy}", "received_events_url": "https://api.github.com/users/thevishvish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-02T10:57:35Z", "updated_at": "2017-03-02T11:51:42Z", "closed_at": "2017-03-02T11:51:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since release 0.0.9 pip installation fails on python 3.5.1:\r\n\r\n```\r\nCollecting python-rapidjson\r\n  Downloading python-rapidjson-0.0.9.tar.gz (126kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 133kB 845kB/s\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/private/var/folders/x6/dp4jcb4j0v10f_6tvgr4dr200000gn/T/pip-build-3yn_8369/python-rapidjson/setup.py\", line 43, in <module>\r\n        with open('CHANGES.rst', encoding='utf-8') as f:\r\n    FileNotFoundError: [Errno 2] No such file or directory: 'CHANGES.rst'\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/x6/dp4jcb4j0v10f_6tvgr4dr200000gn/T/pip-build-3yn_8369/python-rapidjson/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/62", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/62/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/62/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/62", "id": 211356615, "node_id": "MDU6SXNzdWUyMTEzNTY2MTU=", "number": 62, "title": "0.0.9 fails to install - FileNotFoundError: [Errno 2] No such file or directory: 'CHANGES.rst'", "user": {"login": "sbellem", "id": 125458, "node_id": "MDQ6VXNlcjEyNTQ1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/125458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbellem", "html_url": "https://github.com/sbellem", "followers_url": "https://api.github.com/users/sbellem/followers", "following_url": "https://api.github.com/users/sbellem/following{/other_user}", "gists_url": "https://api.github.com/users/sbellem/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbellem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbellem/subscriptions", "organizations_url": "https://api.github.com/users/sbellem/orgs", "repos_url": "https://api.github.com/users/sbellem/repos", "events_url": "https://api.github.com/users/sbellem/events{/privacy}", "received_events_url": "https://api.github.com/users/sbellem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-02T10:56:27Z", "updated_at": "2017-03-02T12:03:21Z", "closed_at": "2017-03-02T12:03:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```bash\r\n$ pip install python-rapidjson\r\nCollecting python-rapidjson\r\n  Using cached python-rapidjson-0.0.9.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-q9nkddjq/python-rapidjson/setup.py\", line 43, in <module>\r\n        with open('CHANGES.rst', encoding='utf-8') as f:\r\n    FileNotFoundError: [Errno 2] No such file or directory: 'CHANGES.rst'\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-q9nkddjq/python-rapidjson/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/61", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/61/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/61/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/61", "id": 209515841, "node_id": "MDU6SXNzdWUyMDk1MTU4NDE=", "number": 61, "title": "unix timestamp", "user": {"login": "alka2", "id": 13791173, "node_id": "MDQ6VXNlcjEzNzkxMTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/13791173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alka2", "html_url": "https://github.com/alka2", "followers_url": "https://api.github.com/users/alka2/followers", "following_url": "https://api.github.com/users/alka2/following{/other_user}", "gists_url": "https://api.github.com/users/alka2/gists{/gist_id}", "starred_url": "https://api.github.com/users/alka2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alka2/subscriptions", "organizations_url": "https://api.github.com/users/alka2/orgs", "repos_url": "https://api.github.com/users/alka2/repos", "events_url": "https://api.github.com/users/alka2/events{/privacy}", "received_events_url": "https://api.github.com/users/alka2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 39, "created_at": "2017-02-22T16:58:10Z", "updated_at": "2017-07-03T09:47:51Z", "closed_at": "2017-07-03T09:47:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Rapidjson supports ISO8601 format for datetime object in dump. Possible to add support for unix timestamp? \r\n(can be handled with \"default\" parameter in dump but it is nice to have it built-in).   ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/60", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/60/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/60/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/60", "id": 202516829, "node_id": "MDU6SXNzdWUyMDI1MTY4Mjk=", "number": 60, "title": "Enable the possibility to not bundle rapidjson with the package?", "user": {"login": "SylvainCorlay", "id": 2397974, "node_id": "MDQ6VXNlcjIzOTc5NzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SylvainCorlay", "html_url": "https://github.com/SylvainCorlay", "followers_url": "https://api.github.com/users/SylvainCorlay/followers", "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}", "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}", "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions", "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs", "repos_url": "https://api.github.com/users/SylvainCorlay/repos", "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}", "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-23T12:06:22Z", "updated_at": "2017-03-02T13:11:03Z", "closed_at": "2017-03-02T09:47:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Both rapidjson and python-rapidjson have been bundled for conda-forge,\r\n\r\nHowever, the latter makes use of the `rapidjson` submodule.\r\n\r\nIt would probably make sense for the `setup.py` to handle the case where an installation prefix for rapidjson is provided instead of a submodule.\r\n\r\nFor reference, such a `setup.py` has been done for `pyzmq` which can either bundle zeromq or not.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/57", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/57/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/57/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/57", "id": 202157111, "node_id": "MDU6SXNzdWUyMDIxNTcxMTE=", "number": 57, "title": "Null-bytes in dictionary keys", "user": {"login": "feedingaliencat", "id": 7736881, "node_id": "MDQ6VXNlcjc3MzY4ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7736881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feedingaliencat", "html_url": "https://github.com/feedingaliencat", "followers_url": "https://api.github.com/users/feedingaliencat/followers", "following_url": "https://api.github.com/users/feedingaliencat/following{/other_user}", "gists_url": "https://api.github.com/users/feedingaliencat/gists{/gist_id}", "starred_url": "https://api.github.com/users/feedingaliencat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feedingaliencat/subscriptions", "organizations_url": "https://api.github.com/users/feedingaliencat/orgs", "repos_url": "https://api.github.com/users/feedingaliencat/repos", "events_url": "https://api.github.com/users/feedingaliencat/events{/privacy}", "received_events_url": "https://api.github.com/users/feedingaliencat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-20T14:44:49Z", "updated_at": "2017-03-02T09:45:53Z", "closed_at": "2017-03-02T09:45:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Follows up https://github.com/kenrobbins/python-rapidjson/issues/38\r\n\r\nThe issue persists for dictionary keys:\r\n\r\n```\r\n(Pdb) import json\r\n(Pdb) json.dumps({'\\x00': 'a'})\r\n'{\"\\\\u0000\": \"a\"}'\r\n\r\n(Pdb) import rapidjson\r\n(Pdb) rapidjson.dumps({'\\x00': 'a'})\r\n'{\"\":\"a\"}'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/56", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/56/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/56/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/56", "id": 201897829, "node_id": "MDU6SXNzdWUyMDE4OTc4Mjk=", "number": 56, "title": "Intallation error on latest git version", "user": {"login": "MaryWeeb", "id": 16361449, "node_id": "MDQ6VXNlcjE2MzYxNDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/16361449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaryWeeb", "html_url": "https://github.com/MaryWeeb", "followers_url": "https://api.github.com/users/MaryWeeb/followers", "following_url": "https://api.github.com/users/MaryWeeb/following{/other_user}", "gists_url": "https://api.github.com/users/MaryWeeb/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaryWeeb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaryWeeb/subscriptions", "organizations_url": "https://api.github.com/users/MaryWeeb/orgs", "repos_url": "https://api.github.com/users/MaryWeeb/repos", "events_url": "https://api.github.com/users/MaryWeeb/events{/privacy}", "received_events_url": "https://api.github.com/users/MaryWeeb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-19T15:52:14Z", "updated_at": "2017-01-21T00:02:08Z", "closed_at": "2017-01-21T00:02:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Windows:\r\n```\r\nCollecting https://github.com/kenrobbins/python-rapidjson/archive/master.zip\r\n  Downloading https://github.com/kenrobbins/python-rapidjson/archive/master.zip\r\n     / 40kB 204kB/s\r\nInstalling collected packages: python-rapidjson\r\n  Running setup.py install for python-rapidjson ... error\r\n    Complete output from command d:\\program_files\\python_3.6\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\martijn\\\\AppData\\\\Local\\\\Temp\\\\pip-hkd_uxv6-build\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record C:\\Users\\martijn\\AppData\\Local\\Temp\\pip-q5huswg_-record\\install-record.txt --single-version-externally-managed --compile:\r\n    running install\r\n    running build\r\n    running build_ext\r\n    building 'rapidjson' extension\r\n    creating build\r\n    creating build\\temp.win32-3.6\r\n    creating build\\temp.win32-3.6\\Release\r\n    creating build\\temp.win32-3.6\\Release\\python-rapidjson\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -I./rapidjson/include -Id:\\program_files\\python_3.6\\include -Id:\\program_files\\python_3.6\\include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.10240.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\8.1\\include\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\8.1\\include\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\8.1\\include\\winrt\" /EHsc /Tp./python-rapidjson/rapidjson.cpp /Fobuild\\temp.win32-3.6\\Release\\./python-rapidjson/rapidjson.obj\r\n    rapidjson.cpp\r\n    ./python-rapidjson/rapidjson.cpp(9): fatal error C1083: Cannot open include file: 'rapidjson/reader.h': No such file or directory\r\n    error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.0\\\\VC\\\\BIN\\\\cl.exe' failed with exit status 2\r\n\r\n    ----------------------------------------\r\nCommand \"d:\\program_files\\python_3.6\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\martijn\\\\AppData\\\\Local\\\\Temp\\\\pip-hkd_uxv6-build\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record C:\\Users\\martijn\\AppData\\Local\\Temp\\pip-q5huswg_-record\\install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in C:\\Users\\martijn\\AppData\\Local\\Temp\\pip-hkd_uxv6-build\\\r\n```\r\n\r\nLinux subsystem (Win10):\r\n```\r\nCollecting https://github.com/kenrobbins/python-rapidjson/archive/master.zip\r\n  Downloading https://github.com/kenrobbins/python-rapidjson/archive/master.zip\r\nInstalling collected packages: python-rapidjson\r\n  Running setup.py install for python-rapidjson ... error\r\n    Complete output from command /usr/bin/python3.5 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-nmn11f9r-build/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-u164wex7-record/install-record.txt --single-version-externally-managed --compile:\r\n    running install\r\n    running build\r\n    running build_ext\r\n    building 'rapidjson' extension\r\n    creating build\r\n    creating build/temp.linux-x86_64-3.5\r\n    creating build/temp.linux-x86_64-3.5/python-rapidjson\r\n    x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -fPIC -I./rapidjson/include -I/usr/include/python3.5m -c ./python-rapidjson/rapidjson.cpp -o build/temp.linux-x86_64-3.5/./python-rapidjson/rapidjson.o\r\n    cc1plus: warning: command line option \u2018-Wstrict-prototypes\u2019 is valid for C/ObjC but not for C++ [enabled by default]\r\n    ./python-rapidjson/rapidjson.cpp:9:30: fatal error: rapidjson/reader.h: No such file or directory\r\n     #include \"rapidjson/reader.h\"\r\n                                  ^\r\n    compilation terminated.\r\n    error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\r\n\r\n    ----------------------------------------\r\nCommand \"/usr/bin/python3.5 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-nmn11f9r-build/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-u164wex7-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-nmn11f9r-build/\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/54", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/54/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/54/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/54", "id": 200855242, "node_id": "MDU6SXNzdWUyMDA4NTUyNDI=", "number": 54, "title": "Error installing on ubuntu", "user": {"login": "emptyr1", "id": 2340951, "node_id": "MDQ6VXNlcjIzNDA5NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2340951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emptyr1", "html_url": "https://github.com/emptyr1", "followers_url": "https://api.github.com/users/emptyr1/followers", "following_url": "https://api.github.com/users/emptyr1/following{/other_user}", "gists_url": "https://api.github.com/users/emptyr1/gists{/gist_id}", "starred_url": "https://api.github.com/users/emptyr1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emptyr1/subscriptions", "organizations_url": "https://api.github.com/users/emptyr1/orgs", "repos_url": "https://api.github.com/users/emptyr1/repos", "events_url": "https://api.github.com/users/emptyr1/events{/privacy}", "received_events_url": "https://api.github.com/users/emptyr1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-15T08:01:38Z", "updated_at": "2017-01-15T08:02:33Z", "closed_at": "2017-01-15T08:02:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to install this on ubuntu. However, getting errors:\r\nI have g++ version 5.4\r\n\r\n```\r\n...\r\n...\r\n  creating build/temp.linux-x86_64-2.7\r\n  creating build/temp.linux-x86_64-2.7/python-rapidjson\r\n  gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I./rapidjson/include -I/home/ubuntu/anaconda2/include/python2.7 -c ./python-rapidjson/rapidjson.cpp -o build/temp.linux-x86_64-2.7/./python-rapidjson/rapidjson.o\r\n  cc1plus: warning: command line option \u2018-Wstrict-prototypes\u2019 is valid for C/ObjC but not for C++\r\n  ./python-rapidjson/rapidjson.cpp: In member function \u2018bool PyHandler::NaN()\u2019:\r\n  ./python-rapidjson/rapidjson.cpp:232:43: error: too few arguments to function \u2018PyObject* PyFloat_FromString(PyObject*, char**)\u2019\r\n               value = PyFloat_FromString(str);\r\n                                             ^\r\n  In file included from /home/ubuntu/anaconda2/include/python2.7/Python.h:89:0,\r\n                   from ./python-rapidjson/rapidjson.cpp:1:\r\n  /home/ubuntu/anaconda2/include/python2.7/floatobject.h:48:24: note: declared here\r\n   PyAPI_FUNC(PyObject *) PyFloat_FromString(PyObject*, char** junk);\r\n                          ^\r\n  ./python-rapidjson/rapidjson.cpp: In member function \u2018bool PyHandler::Infinity(bool)\u2019:\r\n  ./python-rapidjson/rapidjson.cpp:262:43: error: too few arguments to function \u2018PyObject* PyFloat_FromString(PyObject*, char**)\u2019\r\n               value = PyFloat_FromString(str);\r\n                                             ^\r\n  In file included from /home/ubuntu/anaconda2/include/python2.7/Python.h:89:0,\r\n                   from ./python-rapidjson/rapidjson.cpp:1:\r\n  /home/ubuntu/anaconda2/include/python2.7/floatobject.h:48:24: note: declared here\r\n   PyAPI_FUNC(PyObject *) PyFloat_FromString(PyObject*, char** junk);\r\n                          ^\r\n  ./python-rapidjson/rapidjson.cpp: In member function \u2018bool PyHandler::RawNumber(const char*, rapidjson::SizeType, bool)\u2019:\r\n  ./python-rapidjson/rapidjson.cpp:334:49: error: too few arguments to function \u2018PyObject* PyFloat_FromString(PyObject*, char**)\u2019\r\n                   value = PyFloat_FromString(pystr);\r\n                                                   ^\r\n  In file included from /home/ubuntu/anaconda2/include/python2.7/Python.h:89:0,\r\n                   from ./python-rapidjson/rapidjson.cpp:1:\r\n  /home/ubuntu/anaconda2/include/python2.7/floatobject.h:48:24: note: declared here\r\n   PyAPI_FUNC(PyObject *) PyFloat_FromString(PyObject*, char** junk);\r\n                          ^\r\n  ./python-rapidjson/rapidjson.cpp: In member function \u2018bool PyHandler::HandleIso8601(const char*, rapidjson::SizeType)\u2019:\r\n  ./python-rapidjson/rapidjson.cpp:558:89: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n                                                                     rapidjson_timezone_utc);\r\n                                                                                           ^\r\n  ./python-rapidjson/rapidjson.cpp:558:89: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n  ./python-rapidjson/rapidjson.cpp:642:89: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n                                                                     rapidjson_timezone_utc);\r\n                                                                                           ^\r\n  ./python-rapidjson/rapidjson.cpp:642:89: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\r\n  ./python-rapidjson/rapidjson.cpp: In function \u2018PyObject* rapidjson_loads(PyObject*, PyObject*, PyObject*)\u2019:\r\n  ./python-rapidjson/rapidjson.cpp:763:66: error: \u2018PyUnicode_AsUTF8AndSize\u2019 was not declared in this scope\r\n           jsonStr = PyUnicode_AsUTF8AndSize(jsonObject, &jsonStrLen);\r\n                                                                    ^\r\n  ./python-rapidjson/rapidjson.cpp:816:47: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\r\n                   emsg = PyUnicode_AsUTF8(evalue);\r\n                                                 ^\r\n  ./python-rapidjson/rapidjson.cpp: In function \u2018PyObject* rapidjson_dumps_internal(WriterT*, BufferT*, PyObject*, int, int, PyObject*, int, int, unsigned int, DatetimeMode, UuidMode)\u2019:\r\n  ./python-rapidjson/rapidjson.cpp:923:68: error: there are no arguments to \u2018PyUnicode_AsUTF8AndSize\u2019 that depend on a template parameter, so a declaration of \u2018PyUnicode_AsUTF8AndSize\u2019 must be available [-fpermissive]\r\n               char* decStr = PyUnicode_AsUTF8AndSize(decStrObj, &size);\r\n                                                                      ^\r\n  ./python-rapidjson/rapidjson.cpp:923:68: note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing the use of an undeclared name is deprecated)\r\n  ./python-rapidjson/rapidjson.cpp:938:68: error: there are no arguments to \u2018PyUnicode_AsUTF8AndSize\u2019 that depend on a template parameter, so a declaration of \u2018PyUnicode_AsUTF8AndSize\u2019 must be available [-fpermissive]\r\n               char* intStr = PyUnicode_AsUTF8AndSize(intStrObj, &size);\r\n                                                                      ^\r\n  ./python-rapidjson/rapidjson.cpp:983:57: error: there are no arguments to \u2018PyUnicode_AsUTF8AndSize\u2019 that depend on a template parameter, so a declaration of \u2018PyUnicode_AsUTF8AndSize\u2019 must be available [-fpermissive]\r\n               char* s = PyUnicode_AsUTF8AndSize(object, &l);\r\n                                                           ^\r\n  ./python-rapidjson/rapidjson.cpp:1019:61: error: there are no arguments to \u2018PyUnicode_AsUTF8\u2019 that depend on a template parameter, so a declaration of \u2018PyUnicode_AsUTF8\u2019 must be available [-fpermissive]\r\n                           char* key_str = PyUnicode_AsUTF8(key);\r\n                                                               ^\r\n  ./python-rapidjson/rapidjson.cpp:1034:61: error: there are no arguments to \u2018PyUnicode_AsUTF8\u2019 that depend on a template parameter, so a declaration of \u2018PyUnicode_AsUTF8\u2019 must be available [-fpermissive]\r\n                           char* key_str = PyUnicode_AsUTF8(key);\r\n                                                               ^\r\n  ./python-rapidjson/rapidjson.cpp:1195:95: error: there are no arguments to \u2018PyUnicode_AsUTF8\u2019 that depend on a template parameter, so a declaration of \u2018PyUnicode_AsUTF8\u2019 must be available [-fpermissive]\r\n               PyErr_Format(PyExc_TypeError, \"%s is not JSON serializable\", PyUnicode_AsUTF8(repr));\r\n                                                                                                 ^\r\n  ./python-rapidjson/rapidjson.cpp: At global scope:\r\n  ./python-rapidjson/rapidjson.cpp:1343:8: error: \u2018PyModuleDef\u2019 does not name a type\r\n   static PyModuleDef rapidjson_module = {\r\n          ^\r\n  In file included from /usr/include/locale.h:28:0,\r\n                   from /usr/include/c++/5/clocale:42,\r\n...\r\n....\r\n\r\n   In file included from ./python-rapidjson/rapidjson.cpp:1:0:\r\n    ./python-rapidjson/docstrings.h: At global scope:\r\n    ./python-rapidjson/docstrings.h:4:14: warning: \u2018rapidjson_module_docstring\u2019 defined but not used [-Wunused-variable]\r\n     PyDoc_STRVAR(rapidjson_module_docstring,\r\n                  ^\r\n    /home/ubuntu/anaconda2/include/python2.7/Python.h:170:37: note: in definition of macro \u2018PyDoc_VAR\u2019\r\n     #define PyDoc_VAR(name) static char name[]\r\n                                         ^\r\n    ./python-rapidjson/docstrings.h:4:1: note: in expansion of macro \u2018PyDoc_STRVAR\u2019\r\n     PyDoc_STRVAR(rapidjson_module_docstring,\r\n     ^\r\n    ./python-rapidjson/rapidjson.cpp:1337:1: warning: \u2018rapidjson_functions\u2019 defined but not used [-Wunused-variable]\r\n     rapidjson_functions[] = {\r\n     ^\r\n    error: command 'gcc' failed with exit status 1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/51", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/51/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/51/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/51", "id": 197652433, "node_id": "MDU6SXNzdWUxOTc2NTI0MzM=", "number": 51, "title": "Failed to install this package from source code on Win10", "user": {"login": "myd7349", "id": 5435649, "node_id": "MDQ6VXNlcjU0MzU2NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5435649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myd7349", "html_url": "https://github.com/myd7349", "followers_url": "https://api.github.com/users/myd7349/followers", "following_url": "https://api.github.com/users/myd7349/following{/other_user}", "gists_url": "https://api.github.com/users/myd7349/gists{/gist_id}", "starred_url": "https://api.github.com/users/myd7349/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myd7349/subscriptions", "organizations_url": "https://api.github.com/users/myd7349/orgs", "repos_url": "https://api.github.com/users/myd7349/repos", "events_url": "https://api.github.com/users/myd7349/events{/privacy}", "received_events_url": "https://api.github.com/users/myd7349/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-27T06:13:34Z", "updated_at": "2017-02-17T11:20:24Z", "closed_at": "2017-01-26T12:36:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey, guys!\r\nI encountered several compilation errors while installing from source on my PC.\r\n\r\nMy environment:\r\nOS: Win10 Simplified Chinese(So the default system encoding is GBK, not UTF-8)\r\nPython version: Python 3.6\r\nVS2015(vc14) is also installed on my PC.\r\n\r\n1. \r\nThe first error is about `setup.py`.\r\n>D:\\GitHub\\python-rapidjson>py -3 setup.py install\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 27, in <module>\r\n    long_description = f.read()\r\nUnicodeDecodeError: 'gbk' codec can't decode byte 0xa6 in position 4092: illegal multibyte sequence\r\n\r\nAfter I changed code below:\r\n```python\r\nwith open('README.rst') as f:\r\n    long_description = f.read()\r\n```\r\nto\r\n```python\r\nwith open('README.rst', encoding='utf-8') as f:\r\n    long_description = f.read()\r\n```\r\nThis error disappeared.\r\n\r\n2. \r\nThe second error is about `python-rapidjson/rapidjson.cpp`:\r\n>...\r\nrunning build_ext\r\nbuilding 'rapidjson' extension\r\nD:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -I./rapidjson/include \"-ID:\\Program Files\\Python36\\include\" \"-ID:\\Program Files\\Python36\\include\" \"-ID:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\INCLUDE\" \"-ID:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\ATLMFC\\INCLUDE\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.10240.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\8.1\\include\\\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\8.1\\include\\\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\8.1\\include\\\\winrt\" /EHsc /Tp./python-rapidjson/rapidjson.cpp /Fobuild\\temp.win-amd64-3.6\\Release\\./python-rapidjson/rapidjson.obj\r\nrapidjson.cpp\r\n./python-rapidjson/rapidjson.cpp(341): error C2131: expression did not evaluate to a constant\r\n./python-rapidjson/rapidjson.cpp(341): note: failure was caused by non-constant arguments or reference to a non-constant symbol\r\n./python-rapidjson/rapidjson.cpp(341): note: see usage of 'length'\r\n./python-rapidjson/rapidjson.cpp(344): error C3863: array type 'char [length+]' is not assignable\r\n\r\nSo I had to change code:\r\n```cpp\r\n            char zstr[length + 1];\r\n\r\n            strncpy(zstr, str, length);\r\n            zstr[length] = '\\0';\r\n\r\n            value = PyLong_FromString(zstr, NULL, 10);\r\n```\r\nto\r\n```cpp\r\n            std::string zstr(str, length);\r\n\r\n            value = PyLong_FromString(zstr.c_str(), NULL, 10);\r\n```\r\n\r\n3.\r\nThe last error I encountered:\r\n>./python-rapidjson/rapidjson.cpp(1060): error C2556: 'char (*__timezone(void))[10]': overloaded function differs only by return type from 'long *__timezone(void)'\r\nC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.10240.0\\ucrt\\time.h(73): note: see declaration of '__timezone'\r\n./python-rapidjson/rapidjson.cpp(1060): error C2373: '__timezone': redefinition; different type modifiers\r\nC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.10240.0\\ucrt\\time.h(73): note: see declaration of '__timezone'\r\n\r\nIt seems that `timezone` is defined as a macro. So, again MSVC failed to compile.\r\nSo, I renamed variable `timezone` to `timeZone`.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/49", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/49/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/49/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/49", "id": 194532593, "node_id": "MDU6SXNzdWUxOTQ1MzI1OTM=", "number": 49, "title": "0.7 release package seems to be missing the rapidjson C sources", "user": {"login": "sanga", "id": 2088, "node_id": "MDQ6VXNlcjIwODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanga", "html_url": "https://github.com/sanga", "followers_url": "https://api.github.com/users/sanga/followers", "following_url": "https://api.github.com/users/sanga/following{/other_user}", "gists_url": "https://api.github.com/users/sanga/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanga/subscriptions", "organizations_url": "https://api.github.com/users/sanga/orgs", "repos_url": "https://api.github.com/users/sanga/repos", "events_url": "https://api.github.com/users/sanga/events{/privacy}", "received_events_url": "https://api.github.com/users/sanga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-09T07:42:01Z", "updated_at": "2016-12-09T10:02:49Z", "closed_at": "2016-12-09T10:02:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pip install bails our as it's missing a rapidjson header\r\n\r\n```pip3 install python-rapidjson\r\nCollecting python-rapidjson\r\n  Using cached python-rapidjson-0.0.7.tar.gz\r\nBuilding wheels for collected packages: python-rapidjson\r\n  Running setup.py bdist_wheel for python-rapidjson ... error\r\n  Complete output from command /usr/local/opt/python3/bin/python3.5 -u -c \"import setuptools, tokenize;__file__='/private/var/folders/k8/92852d8j4qb73d8ch8dzd61c0000gn/T/pip-build-u0fjfury/python-rapidjson/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /var/folders/k8/92852d8j4qb73d8ch8dzd61c0000gn/T/tmpoeh3nkjwpip-wheel- --python-tag cp35:\r\n  running bdist_wheel\r\n  running build\r\n  running build_ext\r\n  /usr/local/lib/python3.5/site-packages/Cython/Distutils/old_build_ext.py:30: UserWarning: Cython.Distutils.old_build_ext does not properly handle dependencies and is deprecated.\r\n    \"Cython.Distutils.old_build_ext does not properly handle dependencies \"\r\n  building 'rapidjson' extension\r\n  creating build\r\n  creating build/temp.macosx-10.11-x86_64-3.5\r\n  creating build/temp.macosx-10.11-x86_64-3.5/python-rapidjson\r\n  clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -I./rapidjson/include -I/usr/local/include -I/usr/local/opt/openssl/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/include/python3.5m -c ./python-rapidjson/rapidjson.cpp -o build/temp.macosx-10.11-x86_64-3.5/./python-rapidjson/rapidjson.o\r\n  ./python-rapidjson/rapidjson.cpp:9:10: fatal error: 'rapidjson/reader.h' file not found\r\n  #include \"rapidjson/reader.h\"\r\n           ^\r\n  1 error generated.\r\n  error: command 'clang' failed with exit status 1```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/48", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/48/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/48/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/48", "id": 190656765, "node_id": "MDU6SXNzdWUxOTA2NTY3NjU=", "number": 48, "title": "Segfaults and wrong parse errors when using object_hook", "user": {"login": "lightblu", "id": 3353324, "node_id": "MDQ6VXNlcjMzNTMzMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3353324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lightblu", "html_url": "https://github.com/lightblu", "followers_url": "https://api.github.com/users/lightblu/followers", "following_url": "https://api.github.com/users/lightblu/following{/other_user}", "gists_url": "https://api.github.com/users/lightblu/gists{/gist_id}", "starred_url": "https://api.github.com/users/lightblu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lightblu/subscriptions", "organizations_url": "https://api.github.com/users/lightblu/orgs", "repos_url": "https://api.github.com/users/lightblu/repos", "events_url": "https://api.github.com/users/lightblu/events{/privacy}", "received_events_url": "https://api.github.com/users/lightblu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-21T09:09:06Z", "updated_at": "2017-03-05T15:59:47Z", "closed_at": "2017-03-05T15:59:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, I am not really sure about my diagnosis because it is not easy to reproduce, but I have ran tests often and long enough to be quite sure. It seems like I'm seeing segfaults or irreproducible (i.e. when feeding the json again, it parses just fine) parse errors (\"ValueError: Parse error at offset 2881568: Terminate parsing due to Handler error.\") when using rapidjson.loads with an object_hook callback.\r\n\r\nUsing Python's faulthandler, the segfaults come from no definite place. The offset the parse error happens is always on the \"},\" between two records (so after the object_hook callback has been called?).\r\n\r\nI tried this with Alpine Linux 3.4.4 and their Python 3.5 apks,  a freshly compiled Python 3.5.2, and also a freshly compiled Python 3.5.2 on latest Debian. python-rapidjson is 0.0.6 from PyPI.\r\n\r\nMy application is a AWS Kinesis client app, which just parses jsons from the incoming stream and writes these to S3. I cannot reproduce without writing to S3, so it seems like boto3/urllib3/socket interaction is required for this to happen. Chances to see this increase when under load (continuously parsing ~9MB jsons) and using multiple threads, although I experienced these faults also completely single threaded.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/42", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/42/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/42/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/42", "id": 173619102, "node_id": "MDU6SXNzdWUxNzM2MTkxMDI=", "number": 42, "title": "What about using upstream RapidJSON 1.1?", "user": {"login": "lelit", "id": 412797, "node_id": "MDQ6VXNlcjQxMjc5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/412797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lelit", "html_url": "https://github.com/lelit", "followers_url": "https://api.github.com/users/lelit/followers", "following_url": "https://api.github.com/users/lelit/following{/other_user}", "gists_url": "https://api.github.com/users/lelit/gists{/gist_id}", "starred_url": "https://api.github.com/users/lelit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lelit/subscriptions", "organizations_url": "https://api.github.com/users/lelit/orgs", "repos_url": "https://api.github.com/users/lelit/repos", "events_url": "https://api.github.com/users/lelit/events{/privacy}", "received_events_url": "https://api.github.com/users/lelit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-08-27T22:42:01Z", "updated_at": "2016-12-09T10:03:26Z", "closed_at": "2016-12-09T10:03:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi Ken,\n\nI spent some hours \"rebasing\" py-rapidjson on top of current RapidJSON version 1.1, released a [few days ago](https://github.com/miloyip/rapidjson/commit/f54b0e47a08782a6131cc3d60f94d038fa6e0a51]). \n\nThe branch currently working ok, all tests pass; also, with a grain of salt, after a few iteration of the benchmarks, it seems almost always perform slightly better than current master. Where it is slower, its mainly caused by a few other impacting (hopefully) changes, that I may either try to smooth, or extract in a different branch, or forget about, at your option:\n- [ ] does not use native C++ \"numbers\" (ie floats and ints), but rather use the \"raw value\", to parse them thru `{PyFloat|PyDecimal|PyLong}_FromString()`: for this reason, I dropped the option \"precise_floats\"\n- [ ] I did not (yet?) rebased/cherrypicked your `str` optimizations to the writer you made [here](https://github.com/kenrobbins/python-rapidjson/commit/648936ff62d0bc3cc18e162dfcedd2efdb91be82) and [here](https://github.com/kenrobbins/python-rapidjson/commit/697c15c036a8be6d0b69d112f9c2a3a174886fb8)\n- [ ] I used a submodule to bring in upstream RapidJSON sources, which, expecially if you bless me on doing point 2 above, seems a better/cleaner solution rather than including just the sources as it was; it's of course up to you, I can just easily use subtree to include it while keeping its history/reference with the upstream sources, or simply copy version 1.1 upstream, like before, should you prefer that\n\nCurrent state is in my [rj-v1.1-as-submodule](https://github.com/lelit/python-rapidjson/tree/rj-v1.1-as-submodule).\n\nAm I on the right path? Could any parts of that branch be accepted as a PR?\n\nThank you!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/38", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/38/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/38/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/38", "id": 161928309, "node_id": "MDU6SXNzdWUxNjE5MjgzMDk=", "number": 38, "title": "Null-bytes are stripped out", "user": {"login": "feedingaliencat", "id": 7736881, "node_id": "MDQ6VXNlcjc3MzY4ODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7736881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/feedingaliencat", "html_url": "https://github.com/feedingaliencat", "followers_url": "https://api.github.com/users/feedingaliencat/followers", "following_url": "https://api.github.com/users/feedingaliencat/following{/other_user}", "gists_url": "https://api.github.com/users/feedingaliencat/gists{/gist_id}", "starred_url": "https://api.github.com/users/feedingaliencat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/feedingaliencat/subscriptions", "organizations_url": "https://api.github.com/users/feedingaliencat/orgs", "repos_url": "https://api.github.com/users/feedingaliencat/repos", "events_url": "https://api.github.com/users/feedingaliencat/events{/privacy}", "received_events_url": "https://api.github.com/users/feedingaliencat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-23T13:52:09Z", "updated_at": "2016-08-26T23:08:51Z", "closed_at": "2016-08-26T23:08:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I found that `'\\x00'` is encoded as `''`\nIt represents an incompatibily with the standard `json` module, which maintains it as `'\\x00'`.\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/37", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/37/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/37/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/37", "id": 125252241, "node_id": "MDU6SXNzdWUxMjUyNTIyNDE=", "number": 37, "title": "Compilation errors when installing from PyPi and git", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-06T20:08:20Z", "updated_at": "2017-03-02T09:45:08Z", "closed_at": "2017-03-02T09:45:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nCollecting git+https://github.com/kenrobbins/python-rapidjson\n  Cloning https://github.com/kenrobbins/python-rapidjson to /tmp/pip-54hC76-build\nInstalling collected packages: python-rapidjson\n  Running setup.py install for python-rapidjson\n    Complete output from command /home/omer/.virtualenvs/playground/bin/python2.7 -c \"import setuptools, tokenize;__file__='/tmp/pip-54hC76-build/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-RoOWJP-record/install-record.txt --single-version-externally-managed --compile --install-headers /home/omer/.virtualenvs/playground/include/site/python2.7/python-rapidjson:\n    running install\n    running build\n    running build_ext\n    building 'rapidjson' extension\n    creating build\n    creating build/temp.linux-x86_64-2.7\n    creating build/temp.linux-x86_64-2.7/python-rapidjson\n    gcc -pthread -fno-strict-aliasing -g -O2 -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -I./thirdparty/rapidjson/include -I/home/omer/.pyenv/versions/2.7.10/include/python2.7 -c ./python-rapidjson/rapidjson.cpp -o build/temp.linux-x86_64-2.7/./python-rapidjson/rapidjson.o\n    cc1plus: warning: command line option \u2018-Wstrict-prototypes\u2019 is valid for C/ObjC but not for C++\n    ./python-rapidjson/rapidjson.cpp: In member function \u2018bool PyHandler::NaN()\u2019:\n    ./python-rapidjson/rapidjson.cpp:199:43: error: too few arguments to function \u2018PyObject* PyFloat_FromString(PyObject*, char**)\u2019\n                 value = PyFloat_FromString(str);\n                                               ^\n    In file included from /home/omer/.pyenv/versions/2.7.10/include/python2.7/Python.h:89:0,\n                     from ./python-rapidjson/rapidjson.cpp:1:\n    /home/omer/.pyenv/versions/2.7.10/include/python2.7/floatobject.h:48:24: note: declared here\n     PyAPI_FUNC(PyObject *) PyFloat_FromString(PyObject*, char** junk);\n                            ^\n    ./python-rapidjson/rapidjson.cpp: In member function \u2018bool PyHandler::Infinity(bool)\u2019:\n    ./python-rapidjson/rapidjson.cpp:229:43: error: too few arguments to function \u2018PyObject* PyFloat_FromString(PyObject*, char**)\u2019\n                 value = PyFloat_FromString(str);\n                                               ^\n    In file included from /home/omer/.pyenv/versions/2.7.10/include/python2.7/Python.h:89:0,\n                     from ./python-rapidjson/rapidjson.cpp:1:\n    /home/omer/.pyenv/versions/2.7.10/include/python2.7/floatobject.h:48:24: note: declared here\n     PyAPI_FUNC(PyObject *) PyFloat_FromString(PyObject*, char** junk);\n                            ^\n    ./python-rapidjson/rapidjson.cpp: In function \u2018PyObject* rapidjson_loads(PyObject*, PyObject*, PyObject*)\u2019:\n    ./python-rapidjson/rapidjson.cpp:342:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n         };\n         ^\n    ./python-rapidjson/rapidjson.cpp:342:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp:342:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp:342:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp:342:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp:366:66: error: \u2018PyUnicode_AsUTF8AndSize\u2019 was not declared in this scope\n             jsonStr = PyUnicode_AsUTF8AndSize(jsonObject, &jsonStrLen);\n                                                                      ^\n    ./python-rapidjson/rapidjson.cpp:401:47: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                     emsg = PyUnicode_AsUTF8(evalue);\n                                                   ^\n    ./python-rapidjson/rapidjson.cpp: In function \u2018PyObject* rapidjson_dumps_internal(WriterT*, BufferT*, PyObject*, int, int, PyObject*, int, int, unsigned int, DatetimeMode)\u2019:\n    ./python-rapidjson/rapidjson.cpp:513:68: error: there are no arguments to \u2018PyUnicode_AsUTF8AndSize\u2019 that depend on a template parameter, so a declaration of \u2018PyUnicode_AsUTF8AndSize\u2019 must be available [-fpermissive]\n                 char* decStr = PyUnicode_AsUTF8AndSize(decStrObj, &size);\n                                                                        ^\n    ./python-rapidjson/rapidjson.cpp:513:68: note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing the use of an undeclared name is deprecated)\n    ./python-rapidjson/rapidjson.cpp:571:46: error: there are no arguments to \u2018PyUnicode_AsUTF8\u2019 that depend on a template parameter, so a declaration of \u2018PyUnicode_AsUTF8\u2019 must be available [-fpermissive]\n                 char* s = PyUnicode_AsUTF8(object);\n                                                  ^\n    ./python-rapidjson/rapidjson.cpp:607:61: error: there are no arguments to \u2018PyUnicode_AsUTF8\u2019 that depend on a template parameter, so a declaration of \u2018PyUnicode_AsUTF8\u2019 must be available [-fpermissive]\n                             char* key_str = PyUnicode_AsUTF8(key);\n                                                                 ^\n    ./python-rapidjson/rapidjson.cpp:622:61: error: there are no arguments to \u2018PyUnicode_AsUTF8\u2019 that depend on a template parameter, so a declaration of \u2018PyUnicode_AsUTF8\u2019 must be available [-fpermissive]\n                             char* key_str = PyUnicode_AsUTF8(key);\n                                                                 ^\n    ./python-rapidjson/rapidjson.cpp:721:95: error: there are no arguments to \u2018PyUnicode_AsUTF8\u2019 that depend on a template parameter, so a declaration of \u2018PyUnicode_AsUTF8\u2019 must be available [-fpermissive]\n                 PyErr_Format(PyExc_TypeError, \"%s is not JSON serializable\", PyUnicode_AsUTF8(repr));\n                                                                                                   ^\n    ./python-rapidjson/rapidjson.cpp: In function \u2018PyObject* rapidjson_dumps(PyObject*, PyObject*, PyObject*)\u2019:\n    ./python-rapidjson/rapidjson.cpp:781:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n         };\n         ^\n    ./python-rapidjson/rapidjson.cpp:781:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp:781:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp:781:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp:781:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp:781:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp:781:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp:781:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp:781:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp:781:5: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n    ./python-rapidjson/rapidjson.cpp: At global scope:\n    ./python-rapidjson/rapidjson.cpp:852:8: error: \u2018PyModuleDef\u2019 does not name a type\n     static PyModuleDef rapidjson_module = {\n            ^\n    In file included from /usr/include/locale.h:28:0,\n                     from /usr/include/c++/5/clocale:42,\n                     from /usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h:41,\n                     from /usr/include/c++/5/bits/localefwd.h:40,\n                     from /usr/include/c++/5/string:43,\n                     from ./python-rapidjson/rapidjson.cpp:5:\n    ./python-rapidjson/rapidjson.cpp: In function \u2018void PyInit_rapidjson()\u2019:\n    ./python-rapidjson/rapidjson.cpp:867:16: error: return-statement with a value, in function returning 'void' [-fpermissive]\n             return NULL;\n                    ^\n    ./python-rapidjson/rapidjson.cpp:874:31: error: \u2018rapidjson_module\u2019 was not declared in this scope\n         module = PyModule_Create(&rapidjson_module);\n                                   ^\n    ./python-rapidjson/rapidjson.cpp:874:47: error: \u2018PyModule_Create\u2019 was not declared in this scope\n         module = PyModule_Create(&rapidjson_module);\n                                                   ^\n    In file included from /usr/include/locale.h:28:0,\n                     from /usr/include/c++/5/clocale:42,\n                     from /usr/include/x86_64-linux-gnu/c++/5/bits/c++locale.h:41,\n                     from /usr/include/c++/5/bits/localefwd.h:40,\n                     from /usr/include/c++/5/string:43,\n                     from ./python-rapidjson/rapidjson.cpp:5:\n    ./python-rapidjson/rapidjson.cpp:876:16: error: return-statement with a value, in function returning 'void' [-fpermissive]\n             return NULL;\n                    ^\n    ./python-rapidjson/rapidjson.cpp:888:12: error: return-statement with a value, in function returning 'void' [-fpermissive]\n         return module;\n                ^\n    ./python-rapidjson/rapidjson.cpp: In instantiation of \u2018PyObject* rapidjson_dumps_internal(WriterT*, BufferT*, PyObject*, int, int, PyObject*, int, int, unsigned int, DatetimeMode) [with WriterT = rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::ASCII<> >, rapidjson::UTF8<>, rapidjson::ASCII<> >; BufferT = rapidjson::GenericStringBuffer<rapidjson::ASCII<> >; PyObject = _object]\u2019:\n    ./python-rapidjson/rapidjson.cpp:821:20:   required from here\n    ./python-rapidjson/rapidjson.cpp:513:51: error: \u2018PyUnicode_AsUTF8AndSize\u2019 was not declared in this scope\n                 char* decStr = PyUnicode_AsUTF8AndSize(decStrObj, &size);\n                                                       ^\n    ./python-rapidjson/rapidjson.cpp:571:39: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                 char* s = PyUnicode_AsUTF8(object);\n                                           ^\n    ./python-rapidjson/rapidjson.cpp:607:57: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                             char* key_str = PyUnicode_AsUTF8(key);\n                                                             ^\n    ./python-rapidjson/rapidjson.cpp:622:57: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                             char* key_str = PyUnicode_AsUTF8(key);\n                                                             ^\n    ./python-rapidjson/rapidjson.cpp:660:58: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n                     PyObject* utcOffset = PyObject_CallMethod(object, \"utcoffset\", NULL);\n                                                              ^\n    ./python-rapidjson/rapidjson.cpp:721:90: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                 PyErr_Format(PyExc_TypeError, \"%s is not JSON serializable\", PyUnicode_AsUTF8(repr));\n                                                                                              ^\n    ./python-rapidjson/rapidjson.cpp: In instantiation of \u2018PyObject* rapidjson_dumps_internal(WriterT*, BufferT*, PyObject*, int, int, PyObject*, int, int, unsigned int, DatetimeMode) [with WriterT = rapidjson::Writer<rapidjson::GenericStringBuffer<rapidjson::UTF8<> > >; BufferT = rapidjson::GenericStringBuffer<rapidjson::UTF8<> >; PyObject = _object]\u2019:\n    ./python-rapidjson/rapidjson.cpp:826:20:   required from here\n    ./python-rapidjson/rapidjson.cpp:513:51: error: \u2018PyUnicode_AsUTF8AndSize\u2019 was not declared in this scope\n                 char* decStr = PyUnicode_AsUTF8AndSize(decStrObj, &size);\n                                                       ^\n    ./python-rapidjson/rapidjson.cpp:571:39: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                 char* s = PyUnicode_AsUTF8(object);\n                                           ^\n    ./python-rapidjson/rapidjson.cpp:607:57: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                             char* key_str = PyUnicode_AsUTF8(key);\n                                                             ^\n    ./python-rapidjson/rapidjson.cpp:622:57: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                             char* key_str = PyUnicode_AsUTF8(key);\n                                                             ^\n    ./python-rapidjson/rapidjson.cpp:660:58: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n                     PyObject* utcOffset = PyObject_CallMethod(object, \"utcoffset\", NULL);\n                                                              ^\n    ./python-rapidjson/rapidjson.cpp:721:90: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                 PyErr_Format(PyExc_TypeError, \"%s is not JSON serializable\", PyUnicode_AsUTF8(repr));\n                                                                                              ^\n    ./python-rapidjson/rapidjson.cpp: In instantiation of \u2018PyObject* rapidjson_dumps_internal(WriterT*, BufferT*, PyObject*, int, int, PyObject*, int, int, unsigned int, DatetimeMode) [with WriterT = rapidjson::PrettyWriter<rapidjson::GenericStringBuffer<rapidjson::ASCII<> >, rapidjson::UTF8<>, rapidjson::ASCII<> >; BufferT = rapidjson::GenericStringBuffer<rapidjson::ASCII<> >; PyObject = _object]\u2019:\n    ./python-rapidjson/rapidjson.cpp:833:16:   required from here\n    ./python-rapidjson/rapidjson.cpp:513:51: error: \u2018PyUnicode_AsUTF8AndSize\u2019 was not declared in this scope\n                 char* decStr = PyUnicode_AsUTF8AndSize(decStrObj, &size);\n                                                       ^\n    ./python-rapidjson/rapidjson.cpp:571:39: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                 char* s = PyUnicode_AsUTF8(object);\n                                           ^\n    ./python-rapidjson/rapidjson.cpp:607:57: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                             char* key_str = PyUnicode_AsUTF8(key);\n                                                             ^\n    ./python-rapidjson/rapidjson.cpp:622:57: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                             char* key_str = PyUnicode_AsUTF8(key);\n                                                             ^\n    ./python-rapidjson/rapidjson.cpp:660:58: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n                     PyObject* utcOffset = PyObject_CallMethod(object, \"utcoffset\", NULL);\n                                                              ^\n    ./python-rapidjson/rapidjson.cpp:721:90: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                 PyErr_Format(PyExc_TypeError, \"%s is not JSON serializable\", PyUnicode_AsUTF8(repr));\n                                                                                              ^\n    ./python-rapidjson/rapidjson.cpp: In instantiation of \u2018PyObject* rapidjson_dumps_internal(WriterT*, BufferT*, PyObject*, int, int, PyObject*, int, int, unsigned int, DatetimeMode) [with WriterT = rapidjson::PrettyWriter<rapidjson::GenericStringBuffer<rapidjson::UTF8<> > >; BufferT = rapidjson::GenericStringBuffer<rapidjson::UTF8<> >; PyObject = _object]\u2019:\n    ./python-rapidjson/rapidjson.cpp:839:16:   required from here\n    ./python-rapidjson/rapidjson.cpp:513:51: error: \u2018PyUnicode_AsUTF8AndSize\u2019 was not declared in this scope\n                 char* decStr = PyUnicode_AsUTF8AndSize(decStrObj, &size);\n                                                       ^\n    ./python-rapidjson/rapidjson.cpp:571:39: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                 char* s = PyUnicode_AsUTF8(object);\n                                           ^\n    ./python-rapidjson/rapidjson.cpp:607:57: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                             char* key_str = PyUnicode_AsUTF8(key);\n                                                             ^\n    ./python-rapidjson/rapidjson.cpp:622:57: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                             char* key_str = PyUnicode_AsUTF8(key);\n                                                             ^\n    ./python-rapidjson/rapidjson.cpp:660:58: warning: deprecated conversion from string constant to \u2018char*\u2019 [-Wwrite-strings]\n                     PyObject* utcOffset = PyObject_CallMethod(object, \"utcoffset\", NULL);\n                                                              ^\n    ./python-rapidjson/rapidjson.cpp:721:90: error: \u2018PyUnicode_AsUTF8\u2019 was not declared in this scope\n                 PyErr_Format(PyExc_TypeError, \"%s is not JSON serializable\", PyUnicode_AsUTF8(repr));\n                                                                                              ^\n    In file included from ./python-rapidjson/rapidjson.cpp:14:0:\n    ./python-rapidjson/docstrings.h: At global scope:\n    ./python-rapidjson/docstrings.h:4:20: warning: \u2018rapidjson_module_docstring\u2019 defined but not used [-Wunused-variable]\n     static const char* rapidjson_module_docstring =\n                        ^\n    ./python-rapidjson/rapidjson.cpp:846:1: warning: \u2018rapidjson_functions\u2019 defined but not used [-Wunused-variable]\n     rapidjson_functions[] = {\n     ^\n    error: command 'gcc' failed with exit status 1\n\n    ----------------------------------------\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/34", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/34/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/34/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/34", "id": 114478693, "node_id": "MDU6SXNzdWUxMTQ0Nzg2OTM=", "number": 34, "title": "accept and ignore `separators` kwarg", "user": {"login": "jab", "id": 64992, "node_id": "MDQ6VXNlcjY0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/64992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jab", "html_url": "https://github.com/jab", "followers_url": "https://api.github.com/users/jab/followers", "following_url": "https://api.github.com/users/jab/following{/other_user}", "gists_url": "https://api.github.com/users/jab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jab/subscriptions", "organizations_url": "https://api.github.com/users/jab/orgs", "repos_url": "https://api.github.com/users/jab/repos", "events_url": "https://api.github.com/users/jab/events{/privacy}", "received_events_url": "https://api.github.com/users/jab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-01T16:23:53Z", "updated_at": "2017-07-03T09:48:32Z", "closed_at": "2017-07-03T09:48:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently if a `separators` kwarg is passed to `dumps` a `TypeError` is thrown (\"'separators' is an invalid keyword argument for this function\").\n\nCallers don't always have the ability to suppress `separators` from being passed (e.g. mitsuhiko/flask#1602).\n\nInstead of throwing when `separators` is passed, would you consider just ignoring it? If it were used for something more important, you could make the argument that it's better to fail loudly than silently, but given the above, and that `separators` is only used for pretty printing, I think just documenting that `separators` is ignored is reasonable. What do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/31", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/31/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/31/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/31", "id": 107303708, "node_id": "MDU6SXNzdWUxMDczMDM3MDg=", "number": 31, "title": "slow encoding", "user": {"login": "kenrobbins", "id": 189204, "node_id": "MDQ6VXNlcjE4OTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/189204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenrobbins", "html_url": "https://github.com/kenrobbins", "followers_url": "https://api.github.com/users/kenrobbins/followers", "following_url": "https://api.github.com/users/kenrobbins/following{/other_user}", "gists_url": "https://api.github.com/users/kenrobbins/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenrobbins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenrobbins/subscriptions", "organizations_url": "https://api.github.com/users/kenrobbins/orgs", "repos_url": "https://api.github.com/users/kenrobbins/repos", "events_url": "https://api.github.com/users/kenrobbins/events{/privacy}", "received_events_url": "https://api.github.com/users/kenrobbins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-19T01:58:12Z", "updated_at": "2015-09-20T05:48:58Z", "closed_at": "2015-09-20T05:41:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "> We should look at why this slowed down so much. I think the decoding is still fine even though it got slower, the encoding is even slower than simplejson.\n\nSee #30 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/29", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/29/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/29/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/29", "id": 107287831, "node_id": "MDU6SXNzdWUxMDcyODc4MzE=", "number": 29, "title": " experiment with releasing the GIL on python-rapidjson so it could be faster across threads", "user": {"login": "kenrobbins", "id": 189204, "node_id": "MDQ6VXNlcjE4OTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/189204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenrobbins", "html_url": "https://github.com/kenrobbins", "followers_url": "https://api.github.com/users/kenrobbins/followers", "following_url": "https://api.github.com/users/kenrobbins/following{/other_user}", "gists_url": "https://api.github.com/users/kenrobbins/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenrobbins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenrobbins/subscriptions", "organizations_url": "https://api.github.com/users/kenrobbins/orgs", "repos_url": "https://api.github.com/users/kenrobbins/repos", "events_url": "https://api.github.com/users/kenrobbins/events{/privacy}", "received_events_url": "https://api.github.com/users/kenrobbins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-18T22:18:16Z", "updated_at": "2016-08-26T23:09:40Z", "closed_at": "2016-08-26T23:09:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": " experiment with releasing the GIL on python-rapidjson so it could be faster across threads\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/26", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/26/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/26/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/26", "id": 106485993, "node_id": "MDU6SXNzdWUxMDY0ODU5OTM=", "number": 26, "title": "allow_nan on loads?", "user": {"login": "kenrobbins", "id": 189204, "node_id": "MDQ6VXNlcjE4OTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/189204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenrobbins", "html_url": "https://github.com/kenrobbins", "followers_url": "https://api.github.com/users/kenrobbins/followers", "following_url": "https://api.github.com/users/kenrobbins/following{/other_user}", "gists_url": "https://api.github.com/users/kenrobbins/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenrobbins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenrobbins/subscriptions", "organizations_url": "https://api.github.com/users/kenrobbins/orgs", "repos_url": "https://api.github.com/users/kenrobbins/repos", "events_url": "https://api.github.com/users/kenrobbins/events{/privacy}", "received_events_url": "https://api.github.com/users/kenrobbins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-15T06:00:31Z", "updated_at": "2015-09-20T18:33:36Z", "closed_at": "2015-09-20T18:33:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "allow_nan is a param on dumps. should it be a param on loads too?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/25", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/25/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/25/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/25", "id": 106485378, "node_id": "MDU6SXNzdWUxMDY0ODUzNzg=", "number": 25, "title": "indent param", "user": {"login": "kenrobbins", "id": 189204, "node_id": "MDQ6VXNlcjE4OTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/189204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenrobbins", "html_url": "https://github.com/kenrobbins", "followers_url": "https://api.github.com/users/kenrobbins/followers", "following_url": "https://api.github.com/users/kenrobbins/following{/other_user}", "gists_url": "https://api.github.com/users/kenrobbins/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenrobbins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenrobbins/subscriptions", "organizations_url": "https://api.github.com/users/kenrobbins/orgs", "repos_url": "https://api.github.com/users/kenrobbins/repos", "events_url": "https://api.github.com/users/kenrobbins/events{/privacy}", "received_events_url": "https://api.github.com/users/kenrobbins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-15T05:54:39Z", "updated_at": "2015-09-20T16:46:40Z", "closed_at": "2015-09-20T16:46:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "if a string is passed to indent, the indent char is the first char of the string and the indent char count is the length of the indent string. e.g. indent=\"\\t\\t\" would be 2 tabs (but so would indent=\"\\tA\". \n\ndecide whether to keep this. might be nice if someone wanted to use tabs instead of spaces.\n\nif kept, need to raise an exception if the string is not ascii.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/24", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/24/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/24/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/24", "id": 106485201, "node_id": "MDU6SXNzdWUxMDY0ODUyMDE=", "number": 24, "title": "redo benchmarks", "user": {"login": "kenrobbins", "id": 189204, "node_id": "MDQ6VXNlcjE4OTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/189204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenrobbins", "html_url": "https://github.com/kenrobbins", "followers_url": "https://api.github.com/users/kenrobbins/followers", "following_url": "https://api.github.com/users/kenrobbins/following{/other_user}", "gists_url": "https://api.github.com/users/kenrobbins/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenrobbins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenrobbins/subscriptions", "organizations_url": "https://api.github.com/users/kenrobbins/orgs", "repos_url": "https://api.github.com/users/kenrobbins/repos", "events_url": "https://api.github.com/users/kenrobbins/events{/privacy}", "received_events_url": "https://api.github.com/users/kenrobbins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-15T05:52:54Z", "updated_at": "2016-12-09T10:03:19Z", "closed_at": "2016-12-09T10:03:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "after things are somewhat finalized, redo benchmarks. the numbers will have changed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/23", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/23/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/23/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/23", "id": 106485062, "node_id": "MDU6SXNzdWUxMDY0ODUwNjI=", "number": 23, "title": "datetime mode", "user": {"login": "kenrobbins", "id": 189204, "node_id": "MDQ6VXNlcjE4OTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/189204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenrobbins", "html_url": "https://github.com/kenrobbins", "followers_url": "https://api.github.com/users/kenrobbins/followers", "following_url": "https://api.github.com/users/kenrobbins/following{/other_user}", "gists_url": "https://api.github.com/users/kenrobbins/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenrobbins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenrobbins/subscriptions", "organizations_url": "https://api.github.com/users/kenrobbins/orgs", "repos_url": "https://api.github.com/users/kenrobbins/repos", "events_url": "https://api.github.com/users/kenrobbins/events{/privacy}", "received_events_url": "https://api.github.com/users/kenrobbins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-15T05:51:24Z", "updated_at": "2015-09-21T03:31:58Z", "closed_at": "2015-09-21T03:31:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "currently, there is 'none' and 'iso8601'. iso8601 should include the time zone. might want another mode that ignores the time zone as well. also need to expose the constants in python.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/22", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/22/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/22/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/22", "id": 106484961, "node_id": "MDU6SXNzdWUxMDY0ODQ5NjE=", "number": 22, "title": "document loads and dumps", "user": {"login": "kenrobbins", "id": 189204, "node_id": "MDQ6VXNlcjE4OTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/189204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenrobbins", "html_url": "https://github.com/kenrobbins", "followers_url": "https://api.github.com/users/kenrobbins/followers", "following_url": "https://api.github.com/users/kenrobbins/following{/other_user}", "gists_url": "https://api.github.com/users/kenrobbins/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenrobbins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenrobbins/subscriptions", "organizations_url": "https://api.github.com/users/kenrobbins/orgs", "repos_url": "https://api.github.com/users/kenrobbins/repos", "events_url": "https://api.github.com/users/kenrobbins/events{/privacy}", "received_events_url": "https://api.github.com/users/kenrobbins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-09-15T05:50:29Z", "updated_at": "2017-01-26T21:56:04Z", "closed_at": "2017-01-26T15:14:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "document loads and dumps and their parameters\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/20", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/20/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/20/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/20", "id": 106374501, "node_id": "MDU6SXNzdWUxMDYzNzQ1MDE=", "number": 20, "title": "Support ``indent`` kwargs with the pretty print writer", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-14T16:05:46Z", "updated_at": "2015-09-14T16:10:34Z", "closed_at": "2015-09-14T16:10:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/18", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/18/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/18/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/18", "id": 106265129, "node_id": "MDU6SXNzdWUxMDYyNjUxMjk=", "number": 18, "title": "Add native lib benchmarks docs ", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-09-14T03:32:57Z", "updated_at": "2017-03-02T09:44:03Z", "closed_at": "2017-03-02T09:44:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "this is a nice benchmark to show why rapid json is good\n\nhttps://github.com/miloyip/nativejson-benchmark/blob/master/README.md\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/17", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/17/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/17/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/17", "id": 105766906, "node_id": "MDU6SXNzdWUxMDU3NjY5MDY=", "number": 17, "title": "Floating point number discrepancy", "user": {"login": "kenrobbins", "id": 189204, "node_id": "MDQ6VXNlcjE4OTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/189204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenrobbins", "html_url": "https://github.com/kenrobbins", "followers_url": "https://api.github.com/users/kenrobbins/followers", "following_url": "https://api.github.com/users/kenrobbins/following{/other_user}", "gists_url": "https://api.github.com/users/kenrobbins/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenrobbins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenrobbins/subscriptions", "organizations_url": "https://api.github.com/users/kenrobbins/orgs", "repos_url": "https://api.github.com/users/kenrobbins/repos", "events_url": "https://api.github.com/users/kenrobbins/events{/privacy}", "received_events_url": "https://api.github.com/users/kenrobbins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-10T09:19:38Z", "updated_at": "2015-09-14T05:35:26Z", "closed_at": "2015-09-14T05:35:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See #8 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/16", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/16/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/16/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/16", "id": 105757287, "node_id": "MDU6SXNzdWUxMDU3NTcyODc=", "number": 16, "title": "Check for circular references", "user": {"login": "kenrobbins", "id": 189204, "node_id": "MDQ6VXNlcjE4OTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/189204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenrobbins", "html_url": "https://github.com/kenrobbins", "followers_url": "https://api.github.com/users/kenrobbins/followers", "following_url": "https://api.github.com/users/kenrobbins/following{/other_user}", "gists_url": "https://api.github.com/users/kenrobbins/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenrobbins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenrobbins/subscriptions", "organizations_url": "https://api.github.com/users/kenrobbins/orgs", "repos_url": "https://api.github.com/users/kenrobbins/repos", "events_url": "https://api.github.com/users/kenrobbins/events{/privacy}", "received_events_url": "https://api.github.com/users/kenrobbins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-10T08:20:03Z", "updated_at": "2015-09-14T05:34:52Z", "closed_at": "2015-09-14T05:34:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See #6 \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/14", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/14/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/14/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/14", "id": 105756695, "node_id": "MDU6SXNzdWUxMDU3NTY2OTU=", "number": 14, "title": "Can't dump bytes", "user": {"login": "kenrobbins", "id": 189204, "node_id": "MDQ6VXNlcjE4OTIwNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/189204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenrobbins", "html_url": "https://github.com/kenrobbins", "followers_url": "https://api.github.com/users/kenrobbins/followers", "following_url": "https://api.github.com/users/kenrobbins/following{/other_user}", "gists_url": "https://api.github.com/users/kenrobbins/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenrobbins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenrobbins/subscriptions", "organizations_url": "https://api.github.com/users/kenrobbins/orgs", "repos_url": "https://api.github.com/users/kenrobbins/repos", "events_url": "https://api.github.com/users/kenrobbins/events{/privacy}", "received_events_url": "https://api.github.com/users/kenrobbins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-10T08:15:14Z", "updated_at": "2015-09-10T08:19:05Z", "closed_at": "2015-09-10T08:19:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See #9. \n\nSerialize bytes as if it were a UTF-8 encoded string.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/13", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/13/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/13/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/13", "id": 105724606, "node_id": "MDU6SXNzdWUxMDU3MjQ2MDY=", "number": 13, "title": "Add support for kwarg `allow_nan`", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-10T03:22:59Z", "updated_at": "2015-09-15T05:58:48Z", "closed_at": "2015-09-15T05:58:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/11", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/11/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/11/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/11", "id": 105723668, "node_id": "MDU6SXNzdWUxMDU3MjM2Njg=", "number": 11, "title": "Add support for `ensure_ascii` kwarg", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-10T03:09:15Z", "updated_at": "2015-09-14T05:31:03Z", "closed_at": "2015-09-14T05:31:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is `True` by default so I think its important\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/7", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/7/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/7/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/7", "id": 105717258, "node_id": "MDU6SXNzdWUxMDU3MTcyNTg=", "number": 7, "title": "Should we coerce keys to strings if they are invalid types?", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-09-10T01:55:13Z", "updated_at": "2018-07-12T06:21:34Z", "closed_at": "2015-09-14T16:07:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently the libraries aren't consistent on this:\n\n``` python\n>>> import json\n>>> json.dumps({True: False})\n'{\"true\": false}'\n>>> json.loads(json.dumps({True: False}))\n{'true': False}\n\n>>> import ujson\n>>> ujson.dumps({True: False})\n'{\"True\":false}'\n>>> ujson.loads(ujson.dumps({True: False}))\n{'True': False}\n>>> \n```\n\nBut `rapidjson` raises a `TypeError`:\n\n``` python\n>>> import rapidjson\n>>> rapidjson.dumps({True: False})\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: keys must be a string\n```\n\nI'm kind of ok with that but wondering how compatible we want to be\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/4", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/4/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/4/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/4", "id": 105671259, "node_id": "MDU6SXNzdWUxMDU2NzEyNTk=", "number": 4, "title": "Add support for `use_decimal` kwarg", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-09T19:48:58Z", "updated_at": "2015-09-14T05:37:59Z", "closed_at": "2015-09-14T05:37:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/3", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/3/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/3/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/3", "id": 105670939, "node_id": "MDU6SXNzdWUxMDU2NzA5Mzk=", "number": 3, "title": "Add support for `separators` kwarg", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-09T19:47:29Z", "updated_at": "2015-09-14T16:07:25Z", "closed_at": "2015-09-14T16:07:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/2", "repository_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson", "labels_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/2/comments", "events_url": "https://api.github.com/repos/python-rapidjson/python-rapidjson/issues/2/events", "html_url": "https://github.com/python-rapidjson/python-rapidjson/issues/2", "id": 105670920, "node_id": "MDU6SXNzdWUxMDU2NzA5MjA=", "number": 2, "title": "Add support for `sort_keys` kwarg", "user": {"login": "sontek", "id": 151924, "node_id": "MDQ6VXNlcjE1MTkyNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/151924?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sontek", "html_url": "https://github.com/sontek", "followers_url": "https://api.github.com/users/sontek/followers", "following_url": "https://api.github.com/users/sontek/following{/other_user}", "gists_url": "https://api.github.com/users/sontek/gists{/gist_id}", "starred_url": "https://api.github.com/users/sontek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sontek/subscriptions", "organizations_url": "https://api.github.com/users/sontek/orgs", "repos_url": "https://api.github.com/users/sontek/repos", "events_url": "https://api.github.com/users/sontek/events{/privacy}", "received_events_url": "https://api.github.com/users/sontek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-09T19:47:21Z", "updated_at": "2015-09-14T05:29:11Z", "closed_at": "2015-09-14T05:29:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}]}