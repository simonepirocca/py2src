{"total_count": 13, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/suds-community/suds/issues/35", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/35/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/35/events", "html_url": "https://github.com/suds-community/suds/issues/35", "id": 593260149, "node_id": "MDU6SXNzdWU1OTMyNjAxNDk=", "number": 35, "title": "README improvements / clarification", "user": {"login": "hansfn", "id": 92755, "node_id": "MDQ6VXNlcjkyNzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/92755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hansfn", "html_url": "https://github.com/hansfn", "followers_url": "https://api.github.com/users/hansfn/followers", "following_url": "https://api.github.com/users/hansfn/following{/other_user}", "gists_url": "https://api.github.com/users/hansfn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hansfn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hansfn/subscriptions", "organizations_url": "https://api.github.com/users/hansfn/orgs", "repos_url": "https://api.github.com/users/hansfn/repos", "events_url": "https://api.github.com/users/hansfn/events{/privacy}", "received_events_url": "https://api.github.com/users/hansfn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-03T09:51:07Z", "updated_at": "2020-05-11T19:04:56Z", "closed_at": "2020-05-09T13:55:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just some ideas:\r\n\r\n- The descriptions says \"A community fork of the jurko fork.\". I can not see that this info is part of the README. IMHO I think you need to repeat it since the README should be self contained.\r\n- Make it clear which Python versions are supported or at least which versions you try to support.\r\n- Split the README in two files - a shorter README file with installation instructions and made an Hello World example and a longer USAGE file or DOCUMENTATION file with the rest of the info.\r\n- I assume the sentence \"This is hopefully just a temporary fork of the original suds Python library project created because the original project development seems to have stalled. Should be reintegrated back into the original project if it ever gets revived again.\" is coming from the jurko fork? However, the Fedora hosted version will never come back. And it might be read as you want this project reintegrated in the jurko fork. Maybe just delete it?\r\n\r\nThx for reading this far. If none of the above make sense to you, just close the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/suds-community/suds/issues/33", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/33/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/33/events", "html_url": "https://github.com/suds-community/suds/issues/33", "id": 573630069, "node_id": "MDU6SXNzdWU1NzM2MzAwNjk=", "number": 33, "title": "Non-standard service name", "user": {"login": "MrLucio", "id": 38764097, "node_id": "MDQ6VXNlcjM4NzY0MDk3", "avatar_url": "https://avatars0.githubusercontent.com/u/38764097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrLucio", "html_url": "https://github.com/MrLucio", "followers_url": "https://api.github.com/users/MrLucio/followers", "following_url": "https://api.github.com/users/MrLucio/following{/other_user}", "gists_url": "https://api.github.com/users/MrLucio/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrLucio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrLucio/subscriptions", "organizations_url": "https://api.github.com/users/MrLucio/orgs", "repos_url": "https://api.github.com/users/MrLucio/repos", "events_url": "https://api.github.com/users/MrLucio/events{/privacy}", "received_events_url": "https://api.github.com/users/MrLucio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-01T22:44:49Z", "updated_at": "2020-04-08T08:06:58Z", "closed_at": "2020-04-08T01:46:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cannot call a service with non-standard service name (example: `client.service.wsExtAuth..ckAuth`).\r\n\r\nTried with [this](https://stackoverflow.com/questions/34539092/python-suds-client-and-not-standard-service-name) solution but got this error:\r\n\r\n> SAXParseException: <unknown>:77:13: not well-formed (invalid token)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/suds-community/suds/issues/29", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/29/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/29/events", "html_url": "https://github.com/suds-community/suds/issues/29", "id": 534109526, "node_id": "MDU6SXNzdWU1MzQxMDk1MjY=", "number": 29, "title": "Allow setting timeout per endpoint (or per call)", "user": {"login": "phillbaker", "id": 94505, "node_id": "MDQ6VXNlcjk0NTA1", "avatar_url": "https://avatars0.githubusercontent.com/u/94505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phillbaker", "html_url": "https://github.com/phillbaker", "followers_url": "https://api.github.com/users/phillbaker/followers", "following_url": "https://api.github.com/users/phillbaker/following{/other_user}", "gists_url": "https://api.github.com/users/phillbaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/phillbaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phillbaker/subscriptions", "organizations_url": "https://api.github.com/users/phillbaker/orgs", "repos_url": "https://api.github.com/users/phillbaker/repos", "events_url": "https://api.github.com/users/phillbaker/events{/privacy}", "received_events_url": "https://api.github.com/users/phillbaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-06T16:11:46Z", "updated_at": "2019-12-18T17:31:20Z", "closed_at": "2019-12-18T17:31:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently a timeout can be set per client so that it is enforced globally for the client. However, if a specific endpoint is slow and a service wants to enforce a different timeout per endpoint, that is not (easily) possible.\r\n\r\nEach service call does the following:\r\nhttps://github.com/suds-community/suds/blob/7ed17b730ec06fc633c6bc0bcb2eeec45b7ab6d0/suds/client.py#L747\r\nhttps://github.com/suds-community/suds/blob/7ed17b730ec06fc633c6bc0bcb2eeec45b7ab6d0/suds/transport/http.py#L80\r\nhttps://github.com/suds-community/suds/blob/7ed17b730ec06fc633c6bc0bcb2eeec45b7ab6d0/suds/transport/http.py#L127\r\n\r\nCurrently all invocations of calls accept a `__inject` parameter: https://github.com/suds-community/suds#message-injection--diagnosticstesting", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/suds-community/suds/issues/27", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/27/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/27/events", "html_url": "https://github.com/suds-community/suds/issues/27", "id": 486008071, "node_id": "MDU6SXNzdWU0ODYwMDgwNzE=", "number": 27, "title": "Headers passed into suds.client.Client() are not used in WSDL and XSD requests", "user": {"login": "chris-griffin", "id": 1795659, "node_id": "MDQ6VXNlcjE3OTU2NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1795659?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-griffin", "html_url": "https://github.com/chris-griffin", "followers_url": "https://api.github.com/users/chris-griffin/followers", "following_url": "https://api.github.com/users/chris-griffin/following{/other_user}", "gists_url": "https://api.github.com/users/chris-griffin/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-griffin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-griffin/subscriptions", "organizations_url": "https://api.github.com/users/chris-griffin/orgs", "repos_url": "https://api.github.com/users/chris-griffin/repos", "events_url": "https://api.github.com/users/chris-griffin/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-griffin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-08-27T20:05:21Z", "updated_at": "2020-01-29T07:17:58Z", "closed_at": "2019-12-21T16:53:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "`suds.client.Client()` allows you to pass in custom HTTP headers to be used in the requests to the SOAP webservice\r\n\r\nFor example: \r\n\r\n```py\r\nsuds.client.Client(url, headers={'Host': '127.0.0.1'})\r\n```\r\n\r\nThis will correctly set the Host HTTP header for SOAP operation requests. However, it will not correctly set the Host HTTP for the initial WSDL and subsequent XSD requests.\r\n\r\nThis can be problematic if the webservice requires a specific HTTP header for all requests (including the initial WSDL load).\r\n\r\nIt looks like this is where we would need to add the headers for the WSDL request\r\n\r\nhttps://github.com/suds-community/suds/blob/c94298c87dd6675330d660ba6a1fd56265e03c48/suds/reader.py#L165-L196\r\n\r\nAnd here for the subsequent XSD requests\r\n\r\nhttps://github.com/suds-community/suds/blob/c94298c87dd6675330d660ba6a1fd56265e03c48/suds/xsd/sxbasic.py#L587-L598", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/suds-community/suds/issues/25", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/25/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/25/events", "html_url": "https://github.com/suds-community/suds/issues/25", "id": 483836603, "node_id": "MDU6SXNzdWU0ODM4MzY2MDM=", "number": 25, "title": "Is suds-community currently compatible with suds-jurko?", "user": {"login": "aseques", "id": 555542, "node_id": "MDQ6VXNlcjU1NTU0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/555542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseques", "html_url": "https://github.com/aseques", "followers_url": "https://api.github.com/users/aseques/followers", "following_url": "https://api.github.com/users/aseques/following{/other_user}", "gists_url": "https://api.github.com/users/aseques/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseques/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseques/subscriptions", "organizations_url": "https://api.github.com/users/aseques/orgs", "repos_url": "https://api.github.com/users/aseques/repos", "events_url": "https://api.github.com/users/aseques/events{/privacy}", "received_events_url": "https://api.github.com/users/aseques/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-08-22T08:10:36Z", "updated_at": "2019-09-06T06:05:39Z", "closed_at": "2019-09-06T06:05:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry if this can be found somewhere else, but I can't find it, I have a current setup working with suds-jurko, I would like to migrate it to a maintained fork. I have this code that has been working for a couple of years:\r\n```\r\nfrom suds import client\r\nfrom suds.sudsobject import asdict\r\nfrom suds import WebFault\r\n```\r\nBut now I get an error when importing the class.\r\n```\r\n    from suds import client\r\nImportError: cannot import name 'client' from 'suds' (unknown location) \r\n```\r\nIssue might be very basic but I haven't been able to fix it, also I was thinking that remove suds-jurko and adding instead suds-community would do the job.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/suds-community/suds/issues/20", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/20/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/20/events", "html_url": "https://github.com/suds-community/suds/issues/20", "id": 458114641, "node_id": "MDU6SXNzdWU0NTgxMTQ2NDE=", "number": 20, "title": "Allow backward compatible version updates via unknown message parts", "user": {"login": "phillbaker", "id": 94505, "node_id": "MDQ6VXNlcjk0NTA1", "avatar_url": "https://avatars0.githubusercontent.com/u/94505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phillbaker", "html_url": "https://github.com/phillbaker", "followers_url": "https://api.github.com/users/phillbaker/followers", "following_url": "https://api.github.com/users/phillbaker/following{/other_user}", "gists_url": "https://api.github.com/users/phillbaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/phillbaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phillbaker/subscriptions", "organizations_url": "https://api.github.com/users/phillbaker/orgs", "repos_url": "https://api.github.com/users/phillbaker/repos", "events_url": "https://api.github.com/users/phillbaker/events{/privacy}", "received_events_url": "https://api.github.com/users/phillbaker/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1068089351, "node_id": "MDU6TGFiZWwxMDY4MDg5MzUx", "url": "https://api.github.com/repos/suds-community/suds/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1068089353, "node_id": "MDU6TGFiZWwxMDY4MDg5MzUz", "url": "https://api.github.com/repos/suds-community/suds/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 1068089352, "node_id": "MDU6TGFiZWwxMDY4MDg5MzUy", "url": "https://api.github.com/repos/suds-community/suds/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-19T16:38:31Z", "updated_at": "2019-06-23T16:10:22Z", "closed_at": "2019-06-23T16:10:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, if a message element is not defined in the schema, an exception is raised of the form `<element> not mapped to message part`, coming from:\r\n\r\nhttps://github.com/suds-community/suds/blob/26647749781855b9b31ec496516cb799f5f04e33/suds/bindings/binding.py#L206-L207\r\n\r\n## A modest proposal\r\n\r\nIt seems like this exception could be optionally _not_ raised via a new configuration option so that unknown elements were simply excluded from the built response structure. These unknown elements could also be logged so that there's some record of something wonky going on.\r\n\r\nI'd be interested to see how other libraries handle this, but from some anecdotal experiences, it seems like suds is unusually in strictly enforcing this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/suds-community/suds/issues/18", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/18/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/18/events", "html_url": "https://github.com/suds-community/suds/issues/18", "id": 444301094, "node_id": "MDU6SXNzdWU0NDQzMDEwOTQ=", "number": 18, "title": "Exception Error", "user": {"login": "RituRajSingh878", "id": 37741324, "node_id": "MDQ6VXNlcjM3NzQxMzI0", "avatar_url": "https://avatars2.githubusercontent.com/u/37741324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RituRajSingh878", "html_url": "https://github.com/RituRajSingh878", "followers_url": "https://api.github.com/users/RituRajSingh878/followers", "following_url": "https://api.github.com/users/RituRajSingh878/following{/other_user}", "gists_url": "https://api.github.com/users/RituRajSingh878/gists{/gist_id}", "starred_url": "https://api.github.com/users/RituRajSingh878/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RituRajSingh878/subscriptions", "organizations_url": "https://api.github.com/users/RituRajSingh878/orgs", "repos_url": "https://api.github.com/users/RituRajSingh878/repos", "events_url": "https://api.github.com/users/RituRajSingh878/events{/privacy}", "received_events_url": "https://api.github.com/users/RituRajSingh878/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-15T08:22:48Z", "updated_at": "2019-05-20T02:27:33Z", "closed_at": "2019-05-20T02:27:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/suds-community/suds/blob/6fb0a829337b5037a66c20aae6f89b41acd77e40/suds/transport/http.py#L68\r\n\r\nI think this line will be -\r\n`except urllib2.HTTPError as e:`\r\nand there are many more lines present like this and they are showing an error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/suds-community/suds/issues/14", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/14/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/14/events", "html_url": "https://github.com/suds-community/suds/issues/14", "id": 402469624, "node_id": "MDU6SXNzdWU0MDI0Njk2MjQ=", "number": 14, "title": "Breaking behavior change was introduced in Jurko unreleased code", "user": {"login": "guifran001", "id": 28606462, "node_id": "MDQ6VXNlcjI4NjA2NDYy", "avatar_url": "https://avatars0.githubusercontent.com/u/28606462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guifran001", "html_url": "https://github.com/guifran001", "followers_url": "https://api.github.com/users/guifran001/followers", "following_url": "https://api.github.com/users/guifran001/following{/other_user}", "gists_url": "https://api.github.com/users/guifran001/gists{/gist_id}", "starred_url": "https://api.github.com/users/guifran001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guifran001/subscriptions", "organizations_url": "https://api.github.com/users/guifran001/orgs", "repos_url": "https://api.github.com/users/guifran001/repos", "events_url": "https://api.github.com/users/guifran001/events{/privacy}", "received_events_url": "https://api.github.com/users/guifran001/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-23T23:05:29Z", "updated_at": "2019-01-31T03:44:31Z", "closed_at": "2019-01-31T03:44:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following commit\r\nhttps://github.com/suds-community/suds/commit/b6d1d0979e1847a6b8f267be1888892e9327c2a6\r\nintroduced a behavior change that breaks code that was using suds-jurko 0.6.\r\n\r\nSince, this code was never released, I wonder if the commit could be reverted. \r\nOriginally, it was to fix this problem:\r\nhttps://bitbucket.org/jurko/suds/issues/81\r\n\r\nThe original behavior was (suds-jurko 0.6):\r\nWhen creating a sudsojbect.Object this way:  client.factory.create(\"myObjectr\"), the instanciated object has all its optional attributes were set to None and not added into the payload when calling a service with this object as argument.\r\n\r\nThe new behavior is (suds-community):\r\nWhen creating a sudsojbect.Object this way:  client.factory.create(\"myObject\"), the instantiated object has all its optional attributes set. When calling a service with  with this object as argument will result with having those optional attributes in the payload as <OptionalAttribute/>.\r\n\r\nI don't think the new behavior is correct, because if one updates a SOAP service to add an optional attribute to an object, it is absurd that all the clients using suds will start to add it by default and therefore change the expected behavior (the absence of an optional attribute is different than the presence of an empty attribute (for the server we are using at least)).\r\n\r\nI've not been able to think of a solution for the original issue though, but it should not be fixed like that.\r\n\r\nCan the commit be reverted ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/suds-community/suds/issues/11", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/11/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/11/events", "html_url": "https://github.com/suds-community/suds/issues/11", "id": 395657562, "node_id": "MDU6SXNzdWUzOTU2NTc1NjI=", "number": 11, "title": "http basic auth - 401 error - HttpTransport lost request.headers", "user": {"login": "guifran001", "id": 28606462, "node_id": "MDQ6VXNlcjI4NjA2NDYy", "avatar_url": "https://avatars0.githubusercontent.com/u/28606462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guifran001", "html_url": "https://github.com/guifran001", "followers_url": "https://api.github.com/users/guifran001/followers", "following_url": "https://api.github.com/users/guifran001/following{/other_user}", "gists_url": "https://api.github.com/users/guifran001/gists{/gist_id}", "starred_url": "https://api.github.com/users/guifran001/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guifran001/subscriptions", "organizations_url": "https://api.github.com/users/guifran001/orgs", "repos_url": "https://api.github.com/users/guifran001/repos", "events_url": "https://api.github.com/users/guifran001/events{/privacy}", "received_events_url": "https://api.github.com/users/guifran001/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-03T17:21:35Z", "updated_at": "2019-01-03T20:53:59Z", "closed_at": "2019-01-03T20:53:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Originally from: https://bitbucket.org/jurko/suds/issues/135/http-basic-auth-401-error-httptransport\r\nPull request was already existing:  https://bitbucket.org/jurko/suds/pull-requests/43/httptransportopen-pass-request-headers-to\r\n\r\nI will open a pr with the fix", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/suds-community/suds/issues/6", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/6/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/6/events", "html_url": "https://github.com/suds-community/suds/issues/6", "id": 370780375, "node_id": "MDU6SXNzdWUzNzA3ODAzNzU=", "number": 6, "title": "Rename Python Package to suds ", "user": {"login": "ovnicraft", "id": 31282, "node_id": "MDQ6VXNlcjMxMjgy", "avatar_url": "https://avatars1.githubusercontent.com/u/31282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ovnicraft", "html_url": "https://github.com/ovnicraft", "followers_url": "https://api.github.com/users/ovnicraft/followers", "following_url": "https://api.github.com/users/ovnicraft/following{/other_user}", "gists_url": "https://api.github.com/users/ovnicraft/gists{/gist_id}", "starred_url": "https://api.github.com/users/ovnicraft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ovnicraft/subscriptions", "organizations_url": "https://api.github.com/users/ovnicraft/orgs", "repos_url": "https://api.github.com/users/ovnicraft/repos", "events_url": "https://api.github.com/users/ovnicraft/events{/privacy}", "received_events_url": "https://api.github.com/users/ovnicraft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-16T20:13:09Z", "updated_at": "2018-10-18T00:56:27Z", "closed_at": "2018-10-18T00:56:27Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Package still suds-jurko, could be better if its renamed to suds, this result on:\r\n`pip install suds`\r\n\r\ni ran `pip search suds` and got this result: \r\n\r\nhttps://gist.github.com/ovnicraft/98e5f90fe9e054d34f7b4f137b70f755\r\n\r\nPossible nice to have", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/suds-community/suds/issues/4", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/4/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/4/events", "html_url": "https://github.com/suds-community/suds/issues/4", "id": 369673471, "node_id": "MDU6SXNzdWUzNjk2NzM0NzE=", "number": 4, "title": "Upload source archive to PyPI", "user": {"login": "btb", "id": 149551, "node_id": "MDQ6VXNlcjE0OTU1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/149551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/btb", "html_url": "https://github.com/btb", "followers_url": "https://api.github.com/users/btb/followers", "following_url": "https://api.github.com/users/btb/following{/other_user}", "gists_url": "https://api.github.com/users/btb/gists{/gist_id}", "starred_url": "https://api.github.com/users/btb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/btb/subscriptions", "organizations_url": "https://api.github.com/users/btb/orgs", "repos_url": "https://api.github.com/users/btb/repos", "events_url": "https://api.github.com/users/btb/events{/privacy}", "received_events_url": "https://api.github.com/users/btb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-12T19:02:33Z", "updated_at": "2018-10-30T20:16:54Z", "closed_at": "2018-10-17T04:13:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The only wheel on pypi is for python 3, so soap-community can't be installed on 2.7. PyPI ought to at at least have the source archive (.tar.gz) which will make this possible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/suds-community/suds/issues/3", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/3/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/3/events", "html_url": "https://github.com/suds-community/suds/issues/3", "id": 367030494, "node_id": "MDU6SXNzdWUzNjcwMzA0OTQ=", "number": 3, "title": "Service description's namespaces breaks implementation on adding namespaces", "user": {"login": "phillbaker", "id": 94505, "node_id": "MDQ6VXNlcjk0NTA1", "avatar_url": "https://avatars0.githubusercontent.com/u/94505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phillbaker", "html_url": "https://github.com/phillbaker", "followers_url": "https://api.github.com/users/phillbaker/followers", "following_url": "https://api.github.com/users/phillbaker/following{/other_user}", "gists_url": "https://api.github.com/users/phillbaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/phillbaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phillbaker/subscriptions", "organizations_url": "https://api.github.com/users/phillbaker/orgs", "repos_url": "https://api.github.com/users/phillbaker/repos", "events_url": "https://api.github.com/users/phillbaker/events{/privacy}", "received_events_url": "https://api.github.com/users/phillbaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-05T01:51:40Z", "updated_at": "2019-06-23T16:10:22Z", "closed_at": "2019-06-23T16:10:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`ServiceDescription` sorts the namespaces as retrieved from the wsdl/xsds, here:\r\n\r\nhttps://github.com/suds-community/suds/blob/d1695dbd7eea3bde0bd88f4b98a78927c2075016/suds/servicedefinition.py#L124\r\n\r\nHowever, if a service owner updates the wsdl to add a namespace (in what they believe is a backward compatible way), sorting the namespaces alphabetically may re-order the namespaces. E.g.:\r\n```diff\r\n-    <xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:tns=\"urn:ws:foo:com:tns:v1_00\" xmlns:ns1=\"urn:ws:foo:com:bar:old:v1_00\" elementFormDefault=\"qualified\" targetNamespace=\"urn:ws:foo:com:common:v1_00\">\r\n+    <xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"  xmlns:tns=\"urn:ws:foo:com:tns:v1_00\" xmlns:ns2=\"urn:ws:foo:com:bar:new:v1_00\"  xmlns:ns1=\"urn:ws:foo:com:bar:old:v1_00\" elementFormDefault=\"qualified\" targetNamespace=\"urn:ws:foo:com:common:v1_00\">\r\n        <xs:import namespace=\"urn:ws:eplinc:com:cgs:old:v1_00\" />\r\n+        <xs:import namespace=\"urn:ws:eplinc:com:cgs:new:v1_00\" />\r\n</xs:schema>\r\n```\r\nCode like:\r\n```\r\nclient = Client(...)\r\nclient.factory.create('ns1:MessageHeader')  # using the urn:ws:foo:com:bar:old namespace\r\n```\r\nWill break at runtime, because it's resorted to ns2 alphabetically (after the `urn:ws:foo:com:bar:new` namespace). It has to be updated to:\r\n```\r\nclient.factory.create('ns2:MessageHeader')  # using the urn:ws:foo:com:bar:old namespace\r\n```\r\n\r\nProposal: because simply deleting the sorting will also re-order the namespaces in a backwards-incompatible manner, move this sorting to be behind an option that is true by default, but can be turned off; in the next major release, make this false by default.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/suds-community/suds/issues/2", "repository_url": "https://api.github.com/repos/suds-community/suds", "labels_url": "https://api.github.com/repos/suds-community/suds/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/suds-community/suds/issues/2/comments", "events_url": "https://api.github.com/repos/suds-community/suds/issues/2/events", "html_url": "https://github.com/suds-community/suds/issues/2", "id": 364716659, "node_id": "MDU6SXNzdWUzNjQ3MTY2NTk=", "number": 2, "title": "Python 3.6 support", "user": {"login": "phillbaker", "id": 94505, "node_id": "MDQ6VXNlcjk0NTA1", "avatar_url": "https://avatars0.githubusercontent.com/u/94505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phillbaker", "html_url": "https://github.com/phillbaker", "followers_url": "https://api.github.com/users/phillbaker/followers", "following_url": "https://api.github.com/users/phillbaker/following{/other_user}", "gists_url": "https://api.github.com/users/phillbaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/phillbaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phillbaker/subscriptions", "organizations_url": "https://api.github.com/users/phillbaker/orgs", "repos_url": "https://api.github.com/users/phillbaker/repos", "events_url": "https://api.github.com/users/phillbaker/events{/privacy}", "received_events_url": "https://api.github.com/users/phillbaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-28T02:19:20Z", "updated_at": "2019-05-21T02:01:55Z", "closed_at": "2019-05-21T02:01:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As seen in https://travis-ci.org/suds-community/suds/jobs/432776899, python3.6 doesn't like null bytes in file names. We should update the tests to reflect this and then test against 3.6 on travis.", "performed_via_github_app": null, "score": 1.0}]}