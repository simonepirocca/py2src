{"total_count": 174, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/286", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/286/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/286/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/286", "id": 493052460, "node_id": "MDU6SXNzdWU0OTMwNTI0NjA=", "number": 286, "title": "Check if payment was recieved.", "user": {"login": "anishanne", "id": 22670462, "node_id": "MDQ6VXNlcjIyNjcwNDYy", "avatar_url": "https://avatars2.githubusercontent.com/u/22670462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anishanne", "html_url": "https://github.com/anishanne", "followers_url": "https://api.github.com/users/anishanne/followers", "following_url": "https://api.github.com/users/anishanne/following{/other_user}", "gists_url": "https://api.github.com/users/anishanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/anishanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anishanne/subscriptions", "organizations_url": "https://api.github.com/users/anishanne/orgs", "repos_url": "https://api.github.com/users/anishanne/repos", "events_url": "https://api.github.com/users/anishanne/events{/privacy}", "received_events_url": "https://api.github.com/users/anishanne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-12T22:08:49Z", "updated_at": "2019-10-29T07:41:26Z", "closed_at": "2019-10-29T07:41:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have a payment ID how do I check if a payment was received?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/285", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/285/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/285/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/285", "id": 492923600, "node_id": "MDU6SXNzdWU0OTI5MjM2MDA=", "number": 285, "title": "Order not found", "user": {"login": "annshress", "id": 6479061, "node_id": "MDQ6VXNlcjY0NzkwNjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6479061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/annshress", "html_url": "https://github.com/annshress", "followers_url": "https://api.github.com/users/annshress/followers", "following_url": "https://api.github.com/users/annshress/following{/other_user}", "gists_url": "https://api.github.com/users/annshress/gists{/gist_id}", "starred_url": "https://api.github.com/users/annshress/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/annshress/subscriptions", "organizations_url": "https://api.github.com/users/annshress/orgs", "repos_url": "https://api.github.com/users/annshress/repos", "events_url": "https://api.github.com/users/annshress/events{/privacy}", "received_events_url": "https://api.github.com/users/annshress/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-12T17:00:09Z", "updated_at": "2019-09-12T17:02:37Z", "closed_at": "2019-09-12T17:02:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "* SDK/Library version:  1.13.1 (python sdk)\r\n* paypal version: 5.0.71 (js sdk)\r\n* Environment: Sandbox\r\n* `PayPal-Debug-ID`: dc61770184498\r\n* Language: Python 3.5.2\r\n\r\n### Issue description\r\nAPI: get order\r\n\r\nCurrent api is requesting on `/v1/payments/orders/{order_id}` which fails with Resource not found.\r\n\r\nHowever, changing the endpoint to `v2` instead of `v1`, solves the issue.\r\n\r\n![image](https://user-images.githubusercontent.com/6479061/64804660-eb498300-d5ae-11e9-8a9f-027ef0247274.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/284", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/284/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/284/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/284", "id": 480350554, "node_id": "MDU6SXNzdWU0ODAzNTA1NTQ=", "number": 284, "title": "exception on payout create", "user": {"login": "alonsnir", "id": 6851175, "node_id": "MDQ6VXNlcjY4NTExNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6851175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alonsnir", "html_url": "https://github.com/alonsnir", "followers_url": "https://api.github.com/users/alonsnir/followers", "following_url": "https://api.github.com/users/alonsnir/following{/other_user}", "gists_url": "https://api.github.com/users/alonsnir/gists{/gist_id}", "starred_url": "https://api.github.com/users/alonsnir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alonsnir/subscriptions", "organizations_url": "https://api.github.com/users/alonsnir/orgs", "repos_url": "https://api.github.com/users/alonsnir/repos", "events_url": "https://api.github.com/users/alonsnir/events{/privacy}", "received_events_url": "https://api.github.com/users/alonsnir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1509339377, "node_id": "MDU6TGFiZWwxNTA5MzM5Mzc3", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-support", "name": "sdk-support", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-13T20:23:08Z", "updated_at": "2019-11-04T07:37:59Z", "closed_at": "2019-11-04T07:37:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 1.13.1\r\n* Environment: Sandbox\r\n* Language, language version, and OS: python 3.6, iOS\r\n\r\n### Issue description\r\n\r\nPayout error handling doesn't work as documented. When for example, trying to create Payout with unsufficient funds, then instead of receiving error in the resulting 'error' attribute an exception thrown.  \r\nSo instead of sample:  \r\n```\r\nif payout.create(sync_mode=True):\r\n    print(\"payout[%s] created successfully\" %\r\n          (payout.batch_header.payout_batch_id))\r\nelse:\r\n    print(payout.error)\r\n```\r\n\r\nShould be:\r\n```\r\ntry:\r\n    if payout.create():\r\n        print(\"payout[%s] created successfully\" % (payout.batch_header.payout_batch_id))\r\n    else:\r\n        print(payout.error)\r\nexcept:\r\n    # handle exception\r\n```\r\nRestful api returns in the same case the following structure with status 422\r\n```\r\n{\r\n    \"name\": \"INSUFFICIENT_FUNDS\",\r\n    \"message\": \"Sender does not have sufficient funds. Please add funds and retry.\",\r\n    \"debug_id\": \"c58d63e7d5527\",\r\n    \"information_link\": \"https://developer.paypal.com/docs/api/payments.payouts-batch/#errors\",\r\n    \"links\": []\r\n}\r\n```\r\nCould someone please suggest how to handle this? I don't see how to extract this info from the exception.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/283", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/283/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/283/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/283", "id": 476058383, "node_id": "MDU6SXNzdWU0NzYwNTgzODM=", "number": 283, "title": "Webhook notify `PAYMENT.SALE.COMPLETED` twice", "user": {"login": "fatrbaby", "id": 4350262, "node_id": "MDQ6VXNlcjQzNTAyNjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/4350262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fatrbaby", "html_url": "https://github.com/fatrbaby", "followers_url": "https://api.github.com/users/fatrbaby/followers", "following_url": "https://api.github.com/users/fatrbaby/following{/other_user}", "gists_url": "https://api.github.com/users/fatrbaby/gists{/gist_id}", "starred_url": "https://api.github.com/users/fatrbaby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fatrbaby/subscriptions", "organizations_url": "https://api.github.com/users/fatrbaby/orgs", "repos_url": "https://api.github.com/users/fatrbaby/repos", "events_url": "https://api.github.com/users/fatrbaby/events{/privacy}", "received_events_url": "https://api.github.com/users/fatrbaby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-02T08:23:31Z", "updated_at": "2019-08-02T08:46:56Z", "closed_at": "2019-08-02T08:46:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: 1.14.0\r\n* Environment: sandbox\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs -->\r\n* Language, language version, and OS: <!-- Example: Java 1.8.0_101-b13 on Ubuntu 16.10 -->\r\n\r\n### Issue description\r\n\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\nEvent `PAYMENT.SALE.COMPLETED` notify us twice sometimes, The payload is exactly the same twice.\r\n\r\nHere is the code process the Webhook:\r\n\r\n```PHP\r\n    public function notify(Request $request)\r\n    {\r\n        $body = $request->getContent();\r\n        $content = json_decode($body, true);\r\n\r\n        if (json_last_error() != JSON_ERROR_NONE) {\r\n            return response('FAIL');\r\n        }\r\n\r\n        $event = Arr::get($content, 'event_type');\r\n        $paymentId = Arr::get($content, 'resource.id');\r\n        $orderNumber = Arr::get($content, 'resource.custom');\r\n\r\n        if (strtoupper($event) != 'PAYMENT.SALE.COMPLETED') {\r\n            return response('SUCCESS');\r\n        } else {\r\n            logger($body);\r\n        }\r\n\r\n        $headers = $request->headers->all();\r\n        $headers = array_change_key_case($headers, CASE_UPPER);\r\n\r\n        $verifier = new VerifyWebhookSignature();\r\n        $verifier->setAuthAlgo(Arr::get($headers, 'PAYPAL-AUTH-ALGO.0'));\r\n        $verifier->setTransmissionId(Arr::get($headers, 'PAYPAL-TRANSMISSION-ID.0'));\r\n        $verifier->setCertUrl(Arr::get($headers, 'PAYPAL-CERT-URL.0'));\r\n        $verifier->setWebhookId(config('pay.paypal.webhooks.payment_sale_completed'));\r\n        $verifier->setTransmissionSig(Arr::get($headers, 'PAYPAL-TRANSMISSION-SIG.0'));\r\n        $verifier->setTransmissionTime(Arr::get($headers, 'PAYPAL-TRANSMISSION-TIME.0'));\r\n        $verifier->setRequestBody($body);\r\n\r\n        try {\r\n            /** @var \\PayPal\\Api\\VerifyWebhookSignatureResponse $output */\r\n            $output = $verifier->post($this->startPayPal());\r\n            $status = $output->getVerificationStatus();\r\n\r\n            if (strtoupper($status) == 'SUCCESS') {\r\n                #$paymentId = Arr::get($content, 'resource.id');\r\n                #$orderNumber = Arr::get($content, 'resource.custom');\r\n\r\n                if ($paymentId && $orderNumber) {\r\n                    event(new OrderPaid($orderNumber, $paymentId));\r\n                } else {\r\n                    logger(\"Order number:{$orderNumber}, Payment id:{$paymentId}\");\r\n                }\r\n            }\r\n\r\n            return response($status);\r\n        } catch (Exception $ex) {\r\n            logger($ex->getMessage());\r\n            throw $ex;\r\n        }\r\n    }\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/282", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/282/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/282/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/282", "id": 472976793, "node_id": "MDU6SXNzdWU0NzI5NzY3OTM=", "number": 282, "title": "Products and Plans", "user": {"login": "pauloangelo", "id": 2043043, "node_id": "MDQ6VXNlcjIwNDMwNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2043043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pauloangelo", "html_url": "https://github.com/pauloangelo", "followers_url": "https://api.github.com/users/pauloangelo/followers", "following_url": "https://api.github.com/users/pauloangelo/following{/other_user}", "gists_url": "https://api.github.com/users/pauloangelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pauloangelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pauloangelo/subscriptions", "organizations_url": "https://api.github.com/users/pauloangelo/orgs", "repos_url": "https://api.github.com/users/pauloangelo/repos", "events_url": "https://api.github.com/users/pauloangelo/events{/privacy}", "received_events_url": "https://api.github.com/users/pauloangelo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-25T17:09:50Z", "updated_at": "2019-12-13T05:52:12Z", "closed_at": "2019-12-13T05:52:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: Latest, in git\r\n* Environment: any\r\n* Language, language version, and OS: Python\r\n\r\n### Issue description\r\n\r\nIs there implementation for Products and Plans, such as described in the reference guide https://developer.paypal.com/docs/subscriptions/integrate/#2-create-a-product  ?\r\n\r\nThank you in advance.\r\n\r\nPaulo Angelo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/281", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/281/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/281/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/281", "id": 472777426, "node_id": "MDU6SXNzdWU0NzI3Nzc0MjY=", "number": 281, "title": "Get requests made by SDK has bodys with 'null' string", "user": {"login": "bronvic", "id": 8941791, "node_id": "MDQ6VXNlcjg5NDE3OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8941791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bronvic", "html_url": "https://github.com/bronvic", "followers_url": "https://api.github.com/users/bronvic/followers", "following_url": "https://api.github.com/users/bronvic/following{/other_user}", "gists_url": "https://api.github.com/users/bronvic/gists{/gist_id}", "starred_url": "https://api.github.com/users/bronvic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bronvic/subscriptions", "organizations_url": "https://api.github.com/users/bronvic/orgs", "repos_url": "https://api.github.com/users/bronvic/repos", "events_url": "https://api.github.com/users/bronvic/events{/privacy}", "received_events_url": "https://api.github.com/users/bronvic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1509339377, "node_id": "MDU6TGFiZWwxNTA5MzM5Mzc3", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-support", "name": "sdk-support", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-25T10:04:15Z", "updated_at": "2019-10-30T10:59:25Z", "closed_at": "2019-10-30T10:59:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: 1.13.1 <!-- Example: 4.7.2 -->\r\n* Environment: <!-- Is this issue in Sandbox or Production? -->\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs -->\r\n* Language, language version, and OS: <!-- Example: Java 1.8.0_101-b13 on Ubuntu 16.10 -->\r\n\r\n### Issue description\r\nI found that [here](https://github.com/paypal/PayPal-Python-SDK/blob/master/paypalrestsdk/api.py#L171) parameter body can be `None`. And it will be `None` if you calling `api request` method from [`get`](https://github.com/paypal/PayPal-Python-SDK/blob/master/paypalrestsdk/api.py#L268).\r\n\r\nSo when you call `data=json.dumps(body)` with `body=None` you will get `'null'` string and after all it will become body of GET request\r\n\r\nThis is acceptable, but does not appear to be expected behavior", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/280", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/280/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/280/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/280", "id": 460325198, "node_id": "MDU6SXNzdWU0NjAzMjUxOTg=", "number": 280, "title": "No payment history", "user": {"login": "apepenkov", "id": 39992738, "node_id": "MDQ6VXNlcjM5OTkyNzM4", "avatar_url": "https://avatars0.githubusercontent.com/u/39992738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apepenkov", "html_url": "https://github.com/apepenkov", "followers_url": "https://api.github.com/users/apepenkov/followers", "following_url": "https://api.github.com/users/apepenkov/following{/other_user}", "gists_url": "https://api.github.com/users/apepenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/apepenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apepenkov/subscriptions", "organizations_url": "https://api.github.com/users/apepenkov/orgs", "repos_url": "https://api.github.com/users/apepenkov/repos", "events_url": "https://api.github.com/users/apepenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/apepenkov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1509339377, "node_id": "MDU6TGFiZWwxNTA5MzM5Mzc3", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-support", "name": "sdk-support", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-25T09:54:05Z", "updated_at": "2019-10-29T07:44:22Z", "closed_at": "2019-10-29T07:44:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: 1.13.1\r\n* Environment: Producion\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs -->\r\n* Language, language version, and OS: Python 3.7 Windows 10 x64\r\n\r\n### Issue description\r\n\r\n\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/39992738/60088910-22469000-9748-11e9-945d-82c5a656a7a9.png)\r\nCannot see any payment via AIP\r\n![\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435](https://user-images.githubusercontent.com/39992738/60088785-eb707a00-9747-11e9-805e-aed0fd093999.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/278", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/278/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/278/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/278", "id": 453628187, "node_id": "MDU6SXNzdWU0NTM2MjgxODc=", "number": 278, "title": "BillingAgreement.execute(token) stopped working", "user": {"login": "aviox-git", "id": 47270302, "node_id": "MDQ6VXNlcjQ3MjcwMzAy", "avatar_url": "https://avatars1.githubusercontent.com/u/47270302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aviox-git", "html_url": "https://github.com/aviox-git", "followers_url": "https://api.github.com/users/aviox-git/followers", "following_url": "https://api.github.com/users/aviox-git/following{/other_user}", "gists_url": "https://api.github.com/users/aviox-git/gists{/gist_id}", "starred_url": "https://api.github.com/users/aviox-git/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aviox-git/subscriptions", "organizations_url": "https://api.github.com/users/aviox-git/orgs", "repos_url": "https://api.github.com/users/aviox-git/repos", "events_url": "https://api.github.com/users/aviox-git/events{/privacy}", "received_events_url": "https://api.github.com/users/aviox-git/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1509339377, "node_id": "MDU6TGFiZWwxNTA5MzM5Mzc3", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-support", "name": "sdk-support", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-07T17:55:21Z", "updated_at": "2019-12-30T12:52:03Z", "closed_at": "2019-11-25T07:43:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "i am facing other issue payment execute not working at my end here is my code any idea why?\r\n\r\n> payment_token = request.GET.get('token', '')\r\n\r\n> print(payment_token)\r\n> billing_agreement_response = paypalrestsdk.BillingAgreement.execute(payment_token)\r\n\r\ni am getting payment token but final result is empty.\r\n\r\n> billing_agreement_response.id\r\nthis returns null.\r\nMy final delivery is stuck due to this. Didn't found any solution anywhere\r\nThere is another instersting thing. It wasn't working at start then it start working then it stopped again. I think it works only in the day :D\r\n\r\n_Originally posted by @aviox-git in https://github.com/paypal/PayPal-Python-SDK/issues/263#issuecomment-499975120_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/273", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/273/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/273/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/273", "id": 398919944, "node_id": "MDU6SXNzdWUzOTg5MTk5NDQ=", "number": 273, "title": "BillingAgreement.execute returns empty response", "user": {"login": "dmonn", "id": 6407031, "node_id": "MDQ6VXNlcjY0MDcwMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6407031?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmonn", "html_url": "https://github.com/dmonn", "followers_url": "https://api.github.com/users/dmonn/followers", "following_url": "https://api.github.com/users/dmonn/following{/other_user}", "gists_url": "https://api.github.com/users/dmonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmonn/subscriptions", "organizations_url": "https://api.github.com/users/dmonn/orgs", "repos_url": "https://api.github.com/users/dmonn/repos", "events_url": "https://api.github.com/users/dmonn/events{/privacy}", "received_events_url": "https://api.github.com/users/dmonn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1509339377, "node_id": "MDU6TGFiZWwxNTA5MzM5Mzc3", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-support", "name": "sdk-support", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-14T14:45:50Z", "updated_at": "2019-11-06T09:02:16Z", "closed_at": "2019-11-06T09:02:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 1.13.1\r\n* Environment: Production\r\n* `PayPal-Debug-ID` values: -\r\n* Language, language version, and OS: Python3.6 on Ubuntu 16.04\r\n\r\n### Issue description\r\n\r\nI have Billing Agreements API set up in production for about 9 months, without problem. Now, in some cases where the agreement is active for 6+ months, when running `BillingAgreement.execute(<id>)` It returns `{}` as response.\r\n\r\nIn the backend, I can see that the payment is still running and the agreement still has the same ID. What is the issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/271", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/271/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/271/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/271", "id": 382393351, "node_id": "MDU6SXNzdWUzODIzOTMzNTE=", "number": 271, "title": "Payment Capture Fails Intermittently", "user": {"login": "penguinstampede", "id": 2476990, "node_id": "MDQ6VXNlcjI0NzY5OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2476990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/penguinstampede", "html_url": "https://github.com/penguinstampede", "followers_url": "https://api.github.com/users/penguinstampede/followers", "following_url": "https://api.github.com/users/penguinstampede/following{/other_user}", "gists_url": "https://api.github.com/users/penguinstampede/gists{/gist_id}", "starred_url": "https://api.github.com/users/penguinstampede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/penguinstampede/subscriptions", "organizations_url": "https://api.github.com/users/penguinstampede/orgs", "repos_url": "https://api.github.com/users/penguinstampede/repos", "events_url": "https://api.github.com/users/penguinstampede/events{/privacy}", "received_events_url": "https://api.github.com/users/penguinstampede/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1509339377, "node_id": "MDU6TGFiZWwxNTA5MzM5Mzc3", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-support", "name": "sdk-support", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-19T21:08:04Z", "updated_at": "2019-11-01T06:51:28Z", "closed_at": "2019-11-01T06:51:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "At times I receive a PAYER_CANNOT_PAY error when trying to capture an already-authorized transaction.  My understanding is that PAYER_CANNOT_PAY should be returned in the authorization step, and after that the funds are already on hold.\r\n\r\nSometimes re-running the capture using the SDK works, but most of the time the re-capture fails as well.\r\n\r\nThat being said, in Paypal I'm able to still manually capture these authorizations.  I'm not sure what's happening here especially since most of the time auth-and-capture works without issue.\r\n\r\nHere are a couple Exceptions with Debug IDs:\r\n\r\n```\r\nException: {u'message': u'Combination of payer and payee settings mean that this buyer cannot pay this seller.', u'debug_id': u'5b3f62923e71a', u'name': u'PAYER_CANNOT_PAY', u'information_link': u'https://developer.paypal.com/docs/api/payments/#errors'}\r\n```\r\n\r\n```\r\nException: {u'message': u'Combination of payer and payee settings mean that this buyer cannot pay this seller.', u'debug_id': u'3cc5113d26c19', u'name': u'PAYER_CANNOT_PAY', u'information_link': u'https://developer.paypal.com/docs/api/payments/#errors'}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/269", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/269/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/269/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/269", "id": 366745896, "node_id": "MDU6SXNzdWUzNjY3NDU4OTY=", "number": 269, "title": "Everytime Getting \"(DUPLICATE_REQUEST_ID)PayPal-Request-Id header was already used.\" for PayPal Pro requests in Python-sdk.", "user": {"login": "vikas-git", "id": 30626319, "node_id": "MDQ6VXNlcjMwNjI2MzE5", "avatar_url": "https://avatars3.githubusercontent.com/u/30626319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vikas-git", "html_url": "https://github.com/vikas-git", "followers_url": "https://api.github.com/users/vikas-git/followers", "following_url": "https://api.github.com/users/vikas-git/following{/other_user}", "gists_url": "https://api.github.com/users/vikas-git/gists{/gist_id}", "starred_url": "https://api.github.com/users/vikas-git/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vikas-git/subscriptions", "organizations_url": "https://api.github.com/users/vikas-git/orgs", "repos_url": "https://api.github.com/users/vikas-git/repos", "events_url": "https://api.github.com/users/vikas-git/events{/privacy}", "received_events_url": "https://api.github.com/users/vikas-git/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1509339377, "node_id": "MDU6TGFiZWwxNTA5MzM5Mzc3", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-support", "name": "sdk-support", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-04T11:31:19Z", "updated_at": "2019-11-05T07:16:49Z", "closed_at": "2019-11-05T07:16:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using paypalrestsdk==1.13.1 package with python 3.6 for paypal payment and I hit given request\r\n\r\n```\r\nimport paypalrestsdk\r\n\r\ndef pay_via_cc():    \r\n    paypalrestsdk.configure({\r\n        \"mode\": \"sandbox\", # sandbox or live\r\n        \"client_id\": \"MY_PAYPAL_CLIENT_ID\",\r\n        \"client_secret\": \"MY_PAYPAL_SECRET_ID\" \r\n    })\r\n\r\n    try:\r\n        payment = paypalrestsdk.Payment({\r\n            \"intent\": \"sale\",\r\n            \"payer\": {\r\n                \"payment_method\": \"credit_card\",\r\n                \"funding_instruments\": [{\r\n                    \"credit_card\": {\r\n                        \"type\": \"visa\",\r\n                        \"number\": \"4247xxxxxxxxxxxx\",\r\n                        \"expire_month\": \"05\",\r\n                        \"expire_year\": \"2021\",\r\n                        \"cvv2\": \"xxx\",\r\n                        \"first_name\": \"Joe\",\r\n                        \"last_name\": \"Shopper\" \r\n                    }\r\n                }]\r\n            },\r\n            \"transactions\": [{\r\n                \"item_list\": {\r\n                    \"items\": [{\r\n                        \"name\": \"item\",\r\n                        \"sku\": \"item\",\r\n                        \"price\": \"1.00\",\r\n                        \"currency\": \"USD\",\r\n                        \"quantity\": 1 \r\n                    }]\r\n                },\r\n                \"amount\": {\r\n                    \"total\": \"1.00\",\r\n                    \"currency\": \"USD\" \r\n                },\r\n                \"description\": \"This is the payment transaction description.\" \r\n            }]\r\n        })\r\n        \r\n        if payment.create():\r\n            print('/n')\r\n            print(payment)\r\n            print(\"Payment created successfully\")\r\n        else:\r\n            print( payment.error )\r\n        print(payment.request_id)\r\n    except Exception as e:\r\n        print(e)\r\n    \r\n\r\nif __name__ == '__main__':\r\n    pay_via_cc()\r\n\r\n```\r\n\r\nit's getting error on every hit which is look like \r\n`{'name': 'DUPLICATE_REQUEST_ID', 'message': 'PayPal-Request-Id header was already used.', 'information_link': 'https://developer.paypal.com/docs/api/payments/#errors', 'debug_id': 'b42f6f655ea6c'}`\r\n\r\nand when i print request_id (actually i go to library code and it shows the way how can i get request_id) by using payment.request_id  in try block so it will generate different request_id on every time. so I don't think that issue related with request_id.\r\n\r\nPlease give me any solution I stuck from 2 days on same thing\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/267", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/267/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/267/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/267", "id": 357537096, "node_id": "MDU6SXNzdWUzNTc1MzcwOTY=", "number": 267, "title": "missing payout api support?", "user": {"login": "jiamo", "id": 732751, "node_id": "MDQ6VXNlcjczMjc1MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/732751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiamo", "html_url": "https://github.com/jiamo", "followers_url": "https://api.github.com/users/jiamo/followers", "following_url": "https://api.github.com/users/jiamo/following{/other_user}", "gists_url": "https://api.github.com/users/jiamo/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiamo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiamo/subscriptions", "organizations_url": "https://api.github.com/users/jiamo/orgs", "repos_url": "https://api.github.com/users/jiamo/repos", "events_url": "https://api.github.com/users/jiamo/events{/privacy}", "received_events_url": "https://api.github.com/users/jiamo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1635811324, "node_id": "MDU6TGFiZWwxNjM1ODExMzI0", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/2.0%20beta", "name": "2.0 beta", "color": "2e3296", "default": false, "description": ""}, {"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-06T07:54:24Z", "updated_at": "2019-12-20T11:19:28Z", "closed_at": "2019-12-20T11:19:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "* SDK/Library version: 2.0.0-rc2\r\nIt seem to me the latest sdk don't support payout?  Like the content in this url: https://developer.paypal.com/docs/api/payments.payouts-batch/v1/\r\n\r\nDoes it mean I must do api in curl or wrap by myself? Or do you have plan support the payout api?\r\n\r\nI also find this example in master branch https://github.com/paypal/PayPal-Python-SDK/blob/master/samples/payout/create.py \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/266", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/266/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/266/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/266", "id": 356938833, "node_id": "MDU6SXNzdWUzNTY5Mzg4MzM=", "number": 266, "title": "Why is there no adaptivepayments-sdk-python", "user": {"login": "smallevil", "id": 198904, "node_id": "MDQ6VXNlcjE5ODkwNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/198904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smallevil", "html_url": "https://github.com/smallevil", "followers_url": "https://api.github.com/users/smallevil/followers", "following_url": "https://api.github.com/users/smallevil/following{/other_user}", "gists_url": "https://api.github.com/users/smallevil/gists{/gist_id}", "starred_url": "https://api.github.com/users/smallevil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smallevil/subscriptions", "organizations_url": "https://api.github.com/users/smallevil/orgs", "repos_url": "https://api.github.com/users/smallevil/repos", "events_url": "https://api.github.com/users/smallevil/events{/privacy}", "received_events_url": "https://api.github.com/users/smallevil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-04T19:08:18Z", "updated_at": "2019-11-07T11:09:56Z", "closed_at": "2019-11-07T11:09:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to use python's adaptivepayments??", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/264", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/264/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/264/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/264", "id": 347642045, "node_id": "MDU6SXNzdWUzNDc2NDIwNDU=", "number": 264, "title": "can't get payment history", "user": {"login": "grepwood", "id": 4225739, "node_id": "MDQ6VXNlcjQyMjU3Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4225739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grepwood", "html_url": "https://github.com/grepwood", "followers_url": "https://api.github.com/users/grepwood/followers", "following_url": "https://api.github.com/users/grepwood/following{/other_user}", "gists_url": "https://api.github.com/users/grepwood/gists{/gist_id}", "starred_url": "https://api.github.com/users/grepwood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grepwood/subscriptions", "organizations_url": "https://api.github.com/users/grepwood/orgs", "repos_url": "https://api.github.com/users/grepwood/repos", "events_url": "https://api.github.com/users/grepwood/events{/privacy}", "received_events_url": "https://api.github.com/users/grepwood/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1509339377, "node_id": "MDU6TGFiZWwxNTA5MzM5Mzc3", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-support", "name": "sdk-support", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-04T19:17:21Z", "updated_at": "2019-11-06T06:33:49Z", "closed_at": "2019-11-06T06:33:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 1.13.1\r\n* Environment: Production\r\n* `PayPal-Debug-ID` values: what? where?\r\n* Language, language version, and OS: Python 3.6, Gentoo Linux\r\n\r\n### Issue description\r\n\r\nI have the following code:\r\n```\r\n#!/usr/bin/env python3.6\r\nimport paypalrestsdk\r\npaypalrestsdk.configure({\"mode\": \"live\", \"client_id\": \"not_telling\", \"client_secret\": \"not_telling\"})\r\npayment_history = paypalrestsdk.Payment.all({\"count\": 10})\r\npayment_history.payments\r\n```\r\n\r\nAccording to examples in the readme, this should get me 10 last transactions, but it doesn't get me squat. I tried to call `paypalrestsdk.Payment.find(\"insert_transaction_id_that_I_got_from_paypal_dashboard\")` but it threw an exception:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/mdec/.local/lib64/python3.6/site-packages/paypalrestsdk/resource.py\", line 110, in find\r\n    return cls(api.get(url, refresh_token=refresh_token), api=api)\r\n  File \"/home/mdec/.local/lib64/python3.6/site-packages/paypalrestsdk/api.py\", line 268, in get\r\n    return self.request(util.join_url(self.endpoint, action), 'GET', headers=headers or {}, refresh_token=refresh_token)\r\n  File \"/home/mdec/.local/lib64/python3.6/site-packages/paypalrestsdk/api.py\", line 171, in request\r\n    return self.http_call(url, method, data=json.dumps(body), headers=http_headers)\r\n  File \"/home/mdec/.local/lib64/python3.6/site-packages/paypalrestsdk/api.py\", line 214, in http_call\r\n    return self.handle_response(response, response.content.decode('utf-8'))\r\n  File \"/home/mdec/.local/lib64/python3.6/site-packages/paypalrestsdk/api.py\", line 231, in handle_response\r\n    raise exceptions.ResourceNotFound(response, content)\r\npaypalrestsdk.exceptions.ResourceNotFound: Failed. Response status: 404. Response message: Not Found. Error message: {\"name\":\"INVALID_RESOURCE_ID\",\"message\":\"Requested resource ID was not found.\",\"information_link\":\"https://developer.paypal.com/docs/api/payments/#errors\",\"debug_id\":\"is_it_safe_to_post_this?\"}\r\n```\r\n\r\nThe results of using this SDK are really underwhelming to say the least. How can I search my PayPal payments (incoming payments actually) history based on payment comments? I want to search for payments which comment start with \"payment for customer XYZ\". Doing this would save a lot of time and energy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/261", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/261/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/261/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/261", "id": 340435406, "node_id": "MDU6SXNzdWUzNDA0MzU0MDY=", "number": 261, "title": "installation error", "user": {"login": "jianming", "id": 238326, "node_id": "MDQ6VXNlcjIzODMyNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/238326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jianming", "html_url": "https://github.com/jianming", "followers_url": "https://api.github.com/users/jianming/followers", "following_url": "https://api.github.com/users/jianming/following{/other_user}", "gists_url": "https://api.github.com/users/jianming/gists{/gist_id}", "starred_url": "https://api.github.com/users/jianming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jianming/subscriptions", "organizations_url": "https://api.github.com/users/jianming/orgs", "repos_url": "https://api.github.com/users/jianming/repos", "events_url": "https://api.github.com/users/jianming/events{/privacy}", "received_events_url": "https://api.github.com/users/jianming/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1509339377, "node_id": "MDU6TGFiZWwxNTA5MzM5Mzc3", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-support", "name": "sdk-support", "color": "e99695", "default": false, "description": ""}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-11T23:05:19Z", "updated_at": "2019-11-06T06:32:31Z", "closed_at": "2019-11-06T06:32:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ubuntu 16.4, Python 2.7, Pip 1.5.4\r\n\r\nHere is the error I got, how to fix?\r\n\r\nsudo pip install paypalrestsdk\r\nDownloading/unpacking paypalrestsdk\r\nCleaning up...\r\nException:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/dist-packages/pip/basecommand.py\", line 122, in main\r\n    status = self.run(options, args)\r\n  File \"/usr/lib/python2.7/dist-packages/pip/commands/install.py\", line 278, in run\r\n    requirement_set.prepare_files(finder, force_root_egg_info=self.bundle, bundle=self.bundle)\r\n  File \"/usr/lib/python2.7/dist-packages/pip/req.py\", line 1198, in prepare_files\r\n    do_download,\r\n  File \"/usr/lib/python2.7/dist-packages/pip/req.py\", line 1376, in unpack_url\r\n    self.session,\r\n  File \"/usr/lib/python2.7/dist-packages/pip/download.py\", line 546, in unpack_http_url\r\n    resp = session.get(target_url, stream=True)\r\n  File \"/usr/share/python-wheels/requests-2.2.1-py2.py3-none-any.whl/requests/sessions.py\", line 467, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/usr/lib/python2.7/dist-packages/pip/download.py\", line 237, in request\r\n    return super(PipSession, self).request(method, url, *args, **kwargs)\r\n  File \"/usr/share/python-wheels/requests-2.2.1-py2.py3-none-any.whl/requests/sessions.py\", line 455, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/usr/share/python-wheels/requests-2.2.1-py2.py3-none-any.whl/requests/sessions.py\", line 558, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/usr/share/python-wheels/requests-2.2.1-py2.py3-none-any.whl/requests/adapters.py\", line 330, in send\r\n    timeout=timeout\r\n  File \"/usr/share/python-wheels/urllib3-1.7.1-py2.py3-none-any.whl/urllib3/connectionpool.py\", line 562, in urlopen\r\n    body=body, headers=headers)\r\n  File \"/usr/share/python-wheels/urllib3-1.7.1-py2.py3-none-any.whl/urllib3/connectionpool.py\", line 387, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python2.7/httplib.py\", line 1017, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/usr/lib/python2.7/httplib.py\", line 1051, in _send_request\r\n    self.endheaders(body)\r\n  File \"/usr/lib/python2.7/httplib.py\", line 1013, in endheaders\r\n    self._send_output(message_body)\r\n  File \"/usr/lib/python2.7/httplib.py\", line 864, in _send_output\r\n    self.send(msg)\r\n  File \"/usr/lib/python2.7/httplib.py\", line 826, in send\r\n    self.connect()\r\n  File \"/usr/share/python-wheels/urllib3-1.7.1-py2.py3-none-any.whl/urllib3/connectionpool.py\", line 145, in connect\r\n    match_hostname(self.sock.getpeercert(),\r\n  File \"/usr/share/python-wheels/urllib3-1.7.1-py2.py3-none-any.whl/urllib3/contrib/pyopenssl.py\", line 313, in getpeercert\r\n    for value in get_subj_alt_name(x509)\r\n  File \"/usr/share/python-wheels/urllib3-1.7.1-py2.py3-none-any.whl/urllib3/contrib/pyopenssl.py\", line 94, in get_subj_alt_name\r\n    asn1Spec=general_names)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyasn1/codec/ber/decoder.py\", line 825, in __call__\r\n    stGetValueDecoder, self, substrateFun\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyasn1/codec/ber/decoder.py\", line 391, in valueDecoder\r\n    r.verifySizeSpec()\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyasn1/type/base.py\", line 252, in verifySizeSpec\r\n    def verifySizeSpec(self): self._sizeSpec(self)\r\n  File \"/usr/local/lib/python2.7/dist-packages/pyasn1/type/constraint.py\", line 32, in __call__\r\n    '%s failed at: \\\"%s\\\"' % (self, sys.exc_info()[1])\r\nValueConstraintError: ConstraintsIntersection(ConstraintsIntersection(), ValueSizeConstraint(1, 64)) failed at: \"ValueSizeConstraint(1, 64) failed at: \"SubjectAltName().setComponents(GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('r.ssl.fastly.net', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.addthis.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.addthisedge.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.adwerx.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.alittlecraft.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.alittlecraft.it', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.alittlemarket.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.alittlemarket.it', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.alittlemercerie.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.bighatads.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.buzzfeed.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.catchpoint.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.cnn.io', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.corednacdn.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.dollarshaveclub.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.domfee.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.eater.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.fastlylabs.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.files.saymedia-content.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.finncdn.no', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.ft.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.geonet.org.nz', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.hipmunkstaging.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.houselogic.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.issuu.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.isu.pub', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.jackthreads.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.lostmy.name', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.meetupstatic.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.netzwelt.de', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.nfl.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.pagar.me', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.picmonkey.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.pypi.io', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.pypi.org', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.pythonhosted.org', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.r29static.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.realself.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.rtbf.be', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.sbnation.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.shakr.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.shiftpreview.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.static.rtbf.be', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.streamable.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.surfly.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.theverge.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.thrillist.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.tissuu.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.vox-cdn.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.vox.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.voxmedia.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.w-x.co', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.watch.aetnd.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.wework.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('*.wired.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('adwerx.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('alittlecraft.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('alittlecraft.it', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('alittlemarket.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('alittlemarket.it', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('alittlemercerie.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('alpha.entrepreneur.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('api.shiftcommerce.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('assets-staging.themuse.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('buzzfeed.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('dev.api.cerebro.cnn.io', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('dev.historyvault.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('dev.lifetimemovieclub.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('eater.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('entrepreneur.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('fastly.shiekhdev.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('ft.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('h2.hipmunkstaging.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('i.gse.io', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('lostmy.name', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('preview.entrepreneur.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('pythonhosted.org', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('qa.safariflow.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('realself.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('rtbf.be', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('ssl.netzwelt.de', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('stag2.wired.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('stag3.wired.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('stag4.wired.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('static.refinery29.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('static.wixstatic.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('streamable.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('surfly.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('theverge.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('ticketcity.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('vox-cdn.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('vox.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('wired.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('www.dexigner.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('www.entrepreneur.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('www.joyent.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('www.qa.safariflow.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('www.stackpop.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), GeneralName(componentType=NamedTypes(NamedType('otherName', AnotherName(componentType=NamedTypes(NamedType('type-id', ObjectIdentifier('<no value>')), NamedType('value', Any(tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0))))), tagSet=TagSet((), Tag(tagClass=128, tagFormat=32, tagId=0)))), NamedType('rfc822Name', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=1)))), NamedType('dNSName', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))), NamedType('directoryName', Name(componentType=NamedTypes(NamedType('', RDNSequence())), tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=4)))), NamedType('uniformResourceIdentifier', IA5String(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=6)))), NamedType('iPAddress', OctetString(tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=7)))), NamedType('registeredID', ObjectIdentifier('<no value>')))).setComponents(None, None, IA5String('www.ticketcity.com', tagSet=TagSet((), Tag(tagClass=128, tagFormat=0, tagId=2)))))\"\"\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/259", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/259/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/259/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/259", "id": 326751091, "node_id": "MDU6SXNzdWUzMjY3NTEwOTE=", "number": 259, "title": "how to get the sale_id with payment response ?", "user": {"login": "Chaoyingz", "id": 32626585, "node_id": "MDQ6VXNlcjMyNjI2NTg1", "avatar_url": "https://avatars1.githubusercontent.com/u/32626585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chaoyingz", "html_url": "https://github.com/Chaoyingz", "followers_url": "https://api.github.com/users/Chaoyingz/followers", "following_url": "https://api.github.com/users/Chaoyingz/following{/other_user}", "gists_url": "https://api.github.com/users/Chaoyingz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chaoyingz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chaoyingz/subscriptions", "organizations_url": "https://api.github.com/users/Chaoyingz/orgs", "repos_url": "https://api.github.com/users/Chaoyingz/repos", "events_url": "https://api.github.com/users/Chaoyingz/events{/privacy}", "received_events_url": "https://api.github.com/users/Chaoyingz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-26T16:38:12Z", "updated_at": "2018-05-26T16:45:52Z", "closed_at": "2018-05-26T16:45:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: <!-- Example: 4.7.2 -->\r\n* Environment: <!-- Is this issue in Sandbox or Production? -->\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs -->\r\n* Language, language version, and OS: <!-- Example: Java 1.8.0_101-b13 on Ubuntu 16.10 -->\r\n\r\n### Issue description\r\n\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/258", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/258/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/258/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/258", "id": 326143100, "node_id": "MDU6SXNzdWUzMjYxNDMxMDA=", "number": 258, "title": "Returns True but doesn't send invoice", "user": {"login": "Mehodin", "id": 32092714, "node_id": "MDQ6VXNlcjMyMDkyNzE0", "avatar_url": "https://avatars0.githubusercontent.com/u/32092714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mehodin", "html_url": "https://github.com/Mehodin", "followers_url": "https://api.github.com/users/Mehodin/followers", "following_url": "https://api.github.com/users/Mehodin/following{/other_user}", "gists_url": "https://api.github.com/users/Mehodin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mehodin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mehodin/subscriptions", "organizations_url": "https://api.github.com/users/Mehodin/orgs", "repos_url": "https://api.github.com/users/Mehodin/repos", "events_url": "https://api.github.com/users/Mehodin/events{/privacy}", "received_events_url": "https://api.github.com/users/Mehodin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-24T14:17:21Z", "updated_at": "2018-06-13T01:15:53Z", "closed_at": "2018-06-13T01:15:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! So im trying to send an API call for creating an invoice in the Live mode (.py obviously) it returns True, but doesn't actually send it.\r\n\r\n`from paypalrestsdk import Invoice\r\nimport paypalrestsdk\r\nimport logging\r\n\r\n\r\ndef SendPayment(email):\r\n    paypalrestsdk.configure({\r\n    \"mode\": \"live\",\r\n    \"client_id\": \"\",#id there, is correct\r\n    \"client_secret\": \"\" })#secret there, is correct\r\n\r\n\r\n    invoice = Invoice({\r\n      'merchant_info': {\r\n      \"email\": \"Email@Gmail.com\", #replaced with fake, but is correct\r\n      },\r\n      \"billing_info\": [{\r\n        \"email\": str(email)\r\n      }],\r\n      \"items\": [{\r\n          \"name\": \"Henesys General Store Payment\",\r\n          \"quantity\": 1,\r\n          \"unit_price\": {\r\n            \"currency\": \"USD\",\r\n            \"value\": 2\r\n          }\r\n        }],\r\n    })\r\n\r\n    response = invoice.create()\r\n    return response\r\n\r\nprint(SendPayment('CustomerEmail@gmail.com'))#correct\r\n`\r\n\r\nhow do i fix this?\r\n\r\n`C:\\Users\\Name\\Desktop\\StoreBot>py payment.py\r\nTrue`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/257", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/257/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/257/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/257", "id": 324931718, "node_id": "MDU6SXNzdWUzMjQ5MzE3MTg=", "number": 257, "title": "Create Reference Transactions Endpoint manager.", "user": {"login": "agutierrezrodriguez", "id": 21063855, "node_id": "MDQ6VXNlcjIxMDYzODU1", "avatar_url": "https://avatars2.githubusercontent.com/u/21063855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agutierrezrodriguez", "html_url": "https://github.com/agutierrezrodriguez", "followers_url": "https://api.github.com/users/agutierrezrodriguez/followers", "following_url": "https://api.github.com/users/agutierrezrodriguez/following{/other_user}", "gists_url": "https://api.github.com/users/agutierrezrodriguez/gists{/gist_id}", "starred_url": "https://api.github.com/users/agutierrezrodriguez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agutierrezrodriguez/subscriptions", "organizations_url": "https://api.github.com/users/agutierrezrodriguez/orgs", "repos_url": "https://api.github.com/users/agutierrezrodriguez/repos", "events_url": "https://api.github.com/users/agutierrezrodriguez/events{/privacy}", "received_events_url": "https://api.github.com/users/agutierrezrodriguez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824745, "node_id": "MDU6TGFiZWwxODA4MjQ3NDU=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-enhancement", "name": "sdk-enhancement", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-21T14:14:43Z", "updated_at": "2019-12-20T11:20:52Z", "closed_at": "2019-12-20T11:20:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 1.12.0\r\n* Environment: Sandbox and Live\r\n* Language, language version, and OS: Python 2.7 with virtualenv on Arch Linux.\r\n\r\n### Issue description\r\nImplement reference transactions endpoint to this library (/v1/billing-agreements/).\r\nhttps://developer.paypal.com/docs/limited-release/reference-transactions/\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/256", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/256/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/256/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/256", "id": 321436314, "node_id": "MDU6SXNzdWUzMjE0MzYzMTQ=", "number": 256, "title": "Django paypalrestsdk error - OpenSSL.SSL.Error: [('SSL routines', 'tls_process_server_certificate', 'certificate verify failed')]", "user": {"login": "axilaris", "id": 3638099, "node_id": "MDQ6VXNlcjM2MzgwOTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3638099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/axilaris", "html_url": "https://github.com/axilaris", "followers_url": "https://api.github.com/users/axilaris/followers", "following_url": "https://api.github.com/users/axilaris/following{/other_user}", "gists_url": "https://api.github.com/users/axilaris/gists{/gist_id}", "starred_url": "https://api.github.com/users/axilaris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/axilaris/subscriptions", "organizations_url": "https://api.github.com/users/axilaris/orgs", "repos_url": "https://api.github.com/users/axilaris/repos", "events_url": "https://api.github.com/users/axilaris/events{/privacy}", "received_events_url": "https://api.github.com/users/axilaris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-09T05:33:33Z", "updated_at": "2018-05-20T04:35:47Z", "closed_at": "2018-05-20T04:35:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: \r\npyOpenSSL==17.5.0\r\npaypalrestsdk==1.13.1 \r\nDjango==1.11.7\r\ncryptography==2.1.3\r\n* Environment: Sandbox\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs --> I cant find this\r\n* Language, language version, and OS: MacOS 10.13.1 High Sierra\r\n\r\n### Issue description\r\nI am programming on Django and using paypalrestsdk https://github.com/paypal/PayPal-Python-SDK\r\n\r\nI am getting this error:\r\n\r\nOpenSSL.SSL.Error: [('SSL routines', 'tls_process_server_certificate', 'certificate verify failed')]\r\nBasically I have created BillingPlan(code snippet https://gist.github.com/axilaris/2f9cf8f5c27a8a2095c5c9abf0dc4121), and this appears:\r\n\r\nPayment created successfully\r\n2018-05-08 22:44:45,358 INFO Request[POST]: https://api.sandbox.paypal.com/v1/oauth2/token\r\n2018-05-08 22:44:45,358 DEBUG Level: sandbox\r\n2018-05-08 22:44:45,358 DEBUG Request: \r\nHeaders: {'Authorization': 'Basic QVZ2cEhjMExScXFkcEFQZy1QZm1DU19jVlFNYTV1V3lsaXpBMXRpMDRjcm4tZF9jbWdyVFF5N0ZQOVZOcnlfdXRZN0IwZk91cEJSQlluVzM6RUpIcV9GLWwxbmNJLTY3YmFLYmREcWRJMVMtcGNOWkxwWjdvX29mcG10eGQ4ZlVRM2drQTFQR1J5ZzBOZER6VDY1dE5URlY2Y29lWDVVdHM=', 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/json', 'User-Agent': 'PayPalSDK/PayPal-Python-SDK 1.13.1 (requests 2.12.1; python 3.6.3; OpenSSL 1.0.2k 26 Jan 2017)', 'PayPal-Request-Id': 'b337cb66-b036-4a0a-9f70-aaa7011e73bb'}\r\nBody: grant_type=client_credentials\r\n2018-05-08 22:44:45,362 DEBUG Starting new HTTPS connection (1): api.sandbox.paypal.com\r\nFrom cffi callback <function _verify_callback at 0x12972a268>:\r\nTraceback (most recent call last):\r\nFile \"/Users/some/Documents/project/somedotcom/somedotcomenv/lib/python3.6/site-packages/OpenSSL/SSL.py\", line 313, in wrapper\r\n_lib.X509_up_ref(x509)\r\n...\r\nFile \"/Users/some/Documents/project/somedotcom/somedotcomenv/lib/python3.6/site-packages/OpenSSL/_util.py\", line 54, in exception_from_error_queue\r\nraise exception_type(errors)\r\nOpenSSL.SSL.Error: [('SSL routines', 'tls_process_server_certificate', 'certificate verify failed')]\r\nmore complete detail of the traces can be found here: https://gist.github.com/axilaris/c181aaaa8261add4240fb2d042bd1ffc\r\n\r\nHow do I resolve this error ? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/254", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/254/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/254/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/254", "id": 317279676, "node_id": "MDU6SXNzdWUzMTcyNzk2NzY=", "number": 254, "title": "Download Transaction Activity", "user": {"login": "dlink", "id": 1687825, "node_id": "MDQ6VXNlcjE2ODc4MjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1687825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlink", "html_url": "https://github.com/dlink", "followers_url": "https://api.github.com/users/dlink/followers", "following_url": "https://api.github.com/users/dlink/following{/other_user}", "gists_url": "https://api.github.com/users/dlink/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlink/subscriptions", "organizations_url": "https://api.github.com/users/dlink/orgs", "repos_url": "https://api.github.com/users/dlink/repos", "events_url": "https://api.github.com/users/dlink/events{/privacy}", "received_events_url": "https://api.github.com/users/dlink/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-04-24T15:29:15Z", "updated_at": "2018-05-02T14:40:21Z", "closed_at": "2018-05-02T14:40:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,  Can PayPal-Python-SDK be used pull down paypal Activity?  I am looking to write Data Warehouse ETLs with PayPal transaction Activity.  Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/253", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/253/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/253/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/253", "id": 314961976, "node_id": "MDU6SXNzdWUzMTQ5NjE5NzY=", "number": 253, "title": "\u6253\u6405\u4e86\u501f\u697c \u51fa\u4e00\u4e2apaypal.vip\u57df\u540d", "user": {"login": "ilovebamboo", "id": 6214084, "node_id": "MDQ6VXNlcjYyMTQwODQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6214084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilovebamboo", "html_url": "https://github.com/ilovebamboo", "followers_url": "https://api.github.com/users/ilovebamboo/followers", "following_url": "https://api.github.com/users/ilovebamboo/following{/other_user}", "gists_url": "https://api.github.com/users/ilovebamboo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilovebamboo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilovebamboo/subscriptions", "organizations_url": "https://api.github.com/users/ilovebamboo/orgs", "repos_url": "https://api.github.com/users/ilovebamboo/repos", "events_url": "https://api.github.com/users/ilovebamboo/events{/privacy}", "received_events_url": "https://api.github.com/users/ilovebamboo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-17T08:46:11Z", "updated_at": "2018-04-17T14:47:30Z", "closed_at": "2018-04-17T14:47:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: <!-- Example: 4.7.2 -->\r\n* Environment: <!-- Is this issue in Sandbox or Production? -->\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs -->\r\n* Language, language version, and OS: <!-- Example: Java 1.8.0_101-b13 on Ubuntu 16.10 -->\r\n\r\n### Issue description\r\n\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/252", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/252/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/252/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/252", "id": 313570773, "node_id": "MDU6SXNzdWUzMTM1NzA3NzM=", "number": 252, "title": "Error when execute token (live mode)", "user": {"login": "vnlinh112", "id": 16601841, "node_id": "MDQ6VXNlcjE2NjAxODQx", "avatar_url": "https://avatars0.githubusercontent.com/u/16601841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnlinh112", "html_url": "https://github.com/vnlinh112", "followers_url": "https://api.github.com/users/vnlinh112/followers", "following_url": "https://api.github.com/users/vnlinh112/following{/other_user}", "gists_url": "https://api.github.com/users/vnlinh112/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnlinh112/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnlinh112/subscriptions", "organizations_url": "https://api.github.com/users/vnlinh112/orgs", "repos_url": "https://api.github.com/users/vnlinh112/repos", "events_url": "https://api.github.com/users/vnlinh112/events{/privacy}", "received_events_url": "https://api.github.com/users/vnlinh112/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-12T04:12:49Z", "updated_at": "2018-04-12T07:50:28Z", "closed_at": "2018-04-12T07:50:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: 1.13.1\r\n* Environment: Production\r\n* `PayPal-Debug-ID` values: d7287f9c481b3, 84e2130c3363e, 85f6bc89adcd9\r\n* Language, language version, and OS: python-2.7.14 on MacOs High Sierra 10.13.3, Ubuntu 17.10\r\n\r\n### Issue description\r\n\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\n\r\nI am developing subscription using Paypal. It worked well on live mode until yesterday. Now I cannot execute token on live mode (still ok in sandbox mode). Steps:\r\n\r\n- create billing plan, billing agreement, ask for approval\r\n- when user is redirected with token, call `BillingAgreement.execute(token)` but it return `{}`\r\n\r\nPlease help me.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/249", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/249/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/249/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/249", "id": 311982595, "node_id": "MDU6SXNzdWUzMTE5ODI1OTU=", "number": 249, "title": "Docs for 2.0 RC are wrong", "user": {"login": "rfleschenberg", "id": 4319330, "node_id": "MDQ6VXNlcjQzMTkzMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4319330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rfleschenberg", "html_url": "https://github.com/rfleschenberg", "followers_url": "https://api.github.com/users/rfleschenberg/followers", "following_url": "https://api.github.com/users/rfleschenberg/following{/other_user}", "gists_url": "https://api.github.com/users/rfleschenberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/rfleschenberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rfleschenberg/subscriptions", "organizations_url": "https://api.github.com/users/rfleschenberg/orgs", "repos_url": "https://api.github.com/users/rfleschenberg/repos", "events_url": "https://api.github.com/users/rfleschenberg/events{/privacy}", "received_events_url": "https://api.github.com/users/rfleschenberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-06T13:47:40Z", "updated_at": "2018-04-06T14:43:43Z", "closed_at": "2018-04-06T14:43:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/paypal/PayPal-Python-SDK/blob/2.0-beta/docs/Migrating.md\r\n\r\n```python\r\nenv = paypal.PayPalEnvironment(client_id, client_secret, mode=paypalrestsdk.PayPalEnvironment.SANDBOX)\r\n```\r\n\r\nThis references ``paypalrestsdk.PayPalEnvironment.SANDBOX``, but that object is not imported anywhere. Looking at the source, such a thing does not seem to exist anywhere. I guess this should be something like this?\r\n\r\n```python\r\nenv = paypal.environment.SandboxEnvironment(client_id, client_secret)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/248", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/248/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/248/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/248", "id": 311460787, "node_id": "MDU6SXNzdWUzMTE0NjA3ODc=", "number": 248, "title": "Payment object cannot be serializable.", "user": {"login": "pons1991", "id": 2655456, "node_id": "MDQ6VXNlcjI2NTU0NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2655456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pons1991", "html_url": "https://github.com/pons1991", "followers_url": "https://api.github.com/users/pons1991/followers", "following_url": "https://api.github.com/users/pons1991/following{/other_user}", "gists_url": "https://api.github.com/users/pons1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/pons1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pons1991/subscriptions", "organizations_url": "https://api.github.com/users/pons1991/orgs", "repos_url": "https://api.github.com/users/pons1991/repos", "events_url": "https://api.github.com/users/pons1991/events{/privacy}", "received_events_url": "https://api.github.com/users/pons1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-05T03:27:27Z", "updated_at": "2018-04-13T16:26:53Z", "closed_at": "2018-04-13T16:26:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whenever I am creating a payment, There is an object \"payment\" is being created. \r\n\r\nI am not able to make it as a JSON. Whenever I am trying to make it serialize, Its showing \"payment cannot be serializable\"\r\n\r\nAny Idea where I am missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/246", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/246/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/246/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/246", "id": 308152615, "node_id": "MDU6SXNzdWUzMDgxNTI2MTU=", "number": 246, "title": "Add timeout (with potential default)", "user": {"login": "nh2d", "id": 638456, "node_id": "MDQ6VXNlcjYzODQ1Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/638456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nh2d", "html_url": "https://github.com/nh2d", "followers_url": "https://api.github.com/users/nh2d/followers", "following_url": "https://api.github.com/users/nh2d/following{/other_user}", "gists_url": "https://api.github.com/users/nh2d/gists{/gist_id}", "starred_url": "https://api.github.com/users/nh2d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nh2d/subscriptions", "organizations_url": "https://api.github.com/users/nh2d/orgs", "repos_url": "https://api.github.com/users/nh2d/repos", "events_url": "https://api.github.com/users/nh2d/events{/privacy}", "received_events_url": "https://api.github.com/users/nh2d/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-23T19:27:36Z", "updated_at": "2018-04-06T15:13:07Z", "closed_at": "2018-04-06T15:13:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/245", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/245/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/245/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/245", "id": 302056818, "node_id": "MDU6SXNzdWUzMDIwNTY4MTg=", "number": 245, "title": "How to get payment.execute error?", "user": {"login": "alexturpin", "id": 134339, "node_id": "MDQ6VXNlcjEzNDMzOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/134339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexturpin", "html_url": "https://github.com/alexturpin", "followers_url": "https://api.github.com/users/alexturpin/followers", "following_url": "https://api.github.com/users/alexturpin/following{/other_user}", "gists_url": "https://api.github.com/users/alexturpin/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexturpin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexturpin/subscriptions", "organizations_url": "https://api.github.com/users/alexturpin/orgs", "repos_url": "https://api.github.com/users/alexturpin/repos", "events_url": "https://api.github.com/users/alexturpin/events{/privacy}", "received_events_url": "https://api.github.com/users/alexturpin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-04T04:34:50Z", "updated_at": "2018-03-06T19:18:29Z", "closed_at": "2018-03-06T19:18:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 1.13.1\r\n* Environment: Sandbox & production\r\n* `PayPal-Debug-ID` values: N/A\r\n* Language, language version, and OS: Python 3.6.3, Ubuntu 16.04\r\n\r\n### Issue description\r\n\r\nWhen `payment.execute` fails and returns `False`, how can we get more info about what happened? [The sample code](https://github.com/paypal/PayPal-Python-SDK/blob/master/samples/payment/execute.py) says to use `payment.error`. At least for me that raises a `TypeError: 'dict' object is not callable`. Doing `payment['error']` instead raises a `KeyError`. I had a look at the `payment` object and it doesn't look like there is any error information in it.\r\n\r\nAny other way to obtain that information?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/244", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/244/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/244/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/244", "id": 298103438, "node_id": "MDU6SXNzdWUyOTgxMDM0Mzg=", "number": 244, "title": "use Balance Accounts API with paypalrestsdk", "user": {"login": "chapkovski", "id": 5639776, "node_id": "MDQ6VXNlcjU2Mzk3NzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5639776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chapkovski", "html_url": "https://github.com/chapkovski", "followers_url": "https://api.github.com/users/chapkovski/followers", "following_url": "https://api.github.com/users/chapkovski/following{/other_user}", "gists_url": "https://api.github.com/users/chapkovski/gists{/gist_id}", "starred_url": "https://api.github.com/users/chapkovski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chapkovski/subscriptions", "organizations_url": "https://api.github.com/users/chapkovski/orgs", "repos_url": "https://api.github.com/users/chapkovski/repos", "events_url": "https://api.github.com/users/chapkovski/events{/privacy}", "received_events_url": "https://api.github.com/users/chapkovski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824745, "node_id": "MDU6TGFiZWwxODA4MjQ3NDU=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-enhancement", "name": "sdk-enhancement", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-18T17:50:08Z", "updated_at": "2018-02-22T16:59:23Z", "closed_at": "2018-02-22T16:59:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry for a total newbie question but my attempts to get the balance using PayPal Python SDK fails.\r\nHere is the code:\r\n\r\n```\r\nimport paypalrestsdk\r\nCLIENT_ID = 'XXX'\r\nCLIENT_SECRET = 'YYY'\r\na = paypalrestsdk.Api(client_id=CLIENT_ID, client_secret=CLIENT_SECRET)\r\na.get('https://api.sandbox.paypal.com/v2/wallet/balance-accounts')\r\n```\r\n\r\nI use paypalrestsdk version 1.13.1\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/243", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/243/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/243/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/243", "id": 296293667, "node_id": "MDU6SXNzdWUyOTYyOTM2Njc=", "number": 243, "title": "python crash on runtime error : \"KeyError : 0\", if I don't have billing plan", "user": {"login": "MatthieuBarbu", "id": 30758776, "node_id": "MDQ6VXNlcjMwNzU4Nzc2", "avatar_url": "https://avatars1.githubusercontent.com/u/30758776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MatthieuBarbu", "html_url": "https://github.com/MatthieuBarbu", "followers_url": "https://api.github.com/users/MatthieuBarbu/followers", "following_url": "https://api.github.com/users/MatthieuBarbu/following{/other_user}", "gists_url": "https://api.github.com/users/MatthieuBarbu/gists{/gist_id}", "starred_url": "https://api.github.com/users/MatthieuBarbu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MatthieuBarbu/subscriptions", "organizations_url": "https://api.github.com/users/MatthieuBarbu/orgs", "repos_url": "https://api.github.com/users/MatthieuBarbu/repos", "events_url": "https://api.github.com/users/MatthieuBarbu/events{/privacy}", "received_events_url": "https://api.github.com/users/MatthieuBarbu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-12T08:16:22Z", "updated_at": "2018-02-12T10:02:02Z", "closed_at": "2018-02-12T10:01:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 1.13.1\r\n* Environment: Sandbox\r\n* `PayPal-Debug-ID` values: 7129857b7fe28, 7129857b7fe28\r\n* Language, language version, and OS: Python 3.5.3, Debian 9.3\r\n\r\n### Issue description\r\nHello,\r\nIf I try this ( variable api is OK and fully configured):\r\n\r\n    try:\r\n        paypal_billing_plan = paypalrestsdk.BillingPlan.all(\r\n            {\r\n                \"status\": \"CREATED\",\r\n                \"total_required\": \"yes\"\r\n            },\r\n            api=api\r\n        )\r\n    except Exception as e:\r\n        print(str(e))\r\n\r\npython crash on runtime error : \"KeyError : 0\" in resource.py line 80, if I don't have billing plan...\r\n\r\nHow to can know billing plan is empty?\r\n\r\nCordially\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/239", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/239/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/239/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/239", "id": 293251034, "node_id": "MDU6SXNzdWUyOTMyNTEwMzQ=", "number": 239, "title": "Sync API: DataTypes returned", "user": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824753, "node_id": "MDU6TGFiZWwxODA4MjQ3NTM=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-bug", "name": "sdk-bug", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-31T17:45:34Z", "updated_at": "2018-02-02T20:51:35Z", "closed_at": "2018-02-02T20:50:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "* SDK/Library version: 2.0 beta\r\n\r\n### Issue description\r\n\r\nThe Sync API is returning data as expected, and this is brilliant.\r\n\r\nI have a quick question on the datatypes being returned which happen to be `braintreehttp.http_response`\r\n\r\nThey have dot notation access, which is great, but I can't see if they have any equivalent to pythons `dictionary.get('key', None)` method to stop me from having to write lots of \r\n\r\n```python\r\ntry:\r\n    currency_code = transaction.transaction_amount.currency_code\r\nexcept AttributeError:\r\n    currency_code = None\r\n```\r\n\r\nCan you let me know if there are methods to turn these into dictionaries etc, I can't seem to make this happen.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/237", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/237/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/237/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/237", "id": 292734680, "node_id": "MDU6SXNzdWUyOTI3MzQ2ODA=", "number": 237, "title": "Sync API beta ", "user": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-30T10:43:40Z", "updated_at": "2018-01-30T15:40:56Z", "closed_at": "2018-01-30T15:30:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "* SDK/Library version: sync beta\r\n* Environment: Sandbox\r\n* Language, language version, and OS: Python 3.4.3 OSX 10.13\r\n\r\n### Issue description\r\n\r\nFollowing example to request info from Sync API\r\n\r\n\r\n```python\r\nimport paypalrestsdk\r\nenv = paypalrestsdk.SandboxEnvironment(client_id=myclientid,\r\n                                        client_secret=myclientsecret)\r\n\r\nclient = paypalrestsdk.PayPalHttpClient(environment=env)\r\n\r\none_week_ago = datetime.datetime.now() - datetime.timedelta(days=7)\r\n\r\none_week_ago_iso = one_week_ago.isoformat()\r\n\r\npayment_sync = paypalrestsdk.SearchGetRequest()\r\npayment_sync.body({\r\n    \"start_date\" : \"2018-01-22T18:01:46.627248\"\r\n})\r\n\r\n```\r\n\r\nRunning debugger in Pycharm at the point I attempt to add to the .body() the search parameters I get\r\n\r\n``` python   \r\n\"start_date\" : \"2018-01-22T18:01:46.627248\"\r\nTypeError: 'NoneType' object is not callable\r\n```\r\n\r\nIts dying in the `BufferedIncrementalDecoder` in `codecs.py`\r\n\r\nAm I using the SearchGetRequest() incorrectly (I followed the pattern in the overview docs for the beta SDK which has \r\n\r\n```python\r\npayment_create_request = paypalrestsdk.PaymentCreateRequest()\r\npayment_create_request.body({\r\n    \"payer\": {\r\n        \"payment_method\": \"paypal\"\r\n    },\r\n    \"intent\": \"sale\",\r\n    \"transactions\": [{\r\n        \"amount\": {\r\n            \"total\": \"10\",\r\n            \"currency\": \"USD\"\r\n        }\r\n    }],\r\n    \"redirect_urls\": {\r\n        \"cancel_url\": \"http://paypal.com/cancel\",\r\n        \"return_url\": \"http://paypal.com/return\"\r\n    }\r\n})\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/232", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/232/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/232/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/232", "id": 292297639, "node_id": "MDU6SXNzdWUyOTIyOTc2Mzk=", "number": 232, "title": "getting payer id dynamically ", "user": {"login": "sanster9292", "id": 11487696, "node_id": "MDQ6VXNlcjExNDg3Njk2", "avatar_url": "https://avatars2.githubusercontent.com/u/11487696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanster9292", "html_url": "https://github.com/sanster9292", "followers_url": "https://api.github.com/users/sanster9292/followers", "following_url": "https://api.github.com/users/sanster9292/following{/other_user}", "gists_url": "https://api.github.com/users/sanster9292/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanster9292/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanster9292/subscriptions", "organizations_url": "https://api.github.com/users/sanster9292/orgs", "repos_url": "https://api.github.com/users/sanster9292/repos", "events_url": "https://api.github.com/users/sanster9292/events{/privacy}", "received_events_url": "https://api.github.com/users/sanster9292/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-01-29T06:31:41Z", "updated_at": "2018-08-31T10:01:25Z", "closed_at": "2018-02-21T15:15:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys,\r\nI am using the docs and the samples to set up the payment system using the API. I am having trouble coming up with a way to dynamically get the payer id since it will change with every transaction. \r\n\r\nIf i copy and paste the payer id returned in the url returned upon approval, the code i have written works. I want it to be dynamic and not have to copy paste it every time. \r\n\r\nAny help is greatly appreciated.\r\n\r\nHere is what I have written so far, \r\n`\r\nimport paypalrestsdk\r\nfrom paypalrestsdk  import Payment , Authorization\r\nimport webbrowser\r\nimport logging\r\nlogging.basicConfig(level=logging.INFO)\r\n\r\n\r\napi = paypalrestsdk.configure({\r\n\t\"mode\": \"sandbox\",\r\n\t\"client_id\":\"AWS8AXDl92eE0dKJ10RHoGu8h_q_i_Qdc1HnxXRjVYBbgN31hIujHCvDJNeeLHQs1EwLQd7dIpfGtliS\",\r\n\t\"client_secret\":\"ECDrJOiU4i-rTiMNOY6tU6HmHXO0JOw9xEX7JA5PVHJK7md8K-0NXNorhACv-f3xDTJfgRi_RKLKeyWb\"\r\n\r\n})\r\n\r\n # Create Payment object\r\n\r\npayment = Payment({\r\n  \"intent\": \"authorize\",\r\n\r\n  # Set payment method\r\n  \"payer\": {\r\n    \"payment_method\": \"paypal\"\r\n  },\r\n\r\n   # Set redirect urls\r\n  \"redirect_urls\": {\r\n    \"return_url\": \"http://localhost:8000/index\",\r\n    \"cancel_url\": \"http://localhost:8000/cancel\"\r\n  },\r\n\r\n   # Set transaction object\r\n  \"transactions\": [{\r\n    \"amount\": {\r\n      \"total\": \"4.54\",\r\n      \"currency\": \"USD\"\r\n    },\r\n    \"description\": \"payment description\"\r\n  }]\r\n})\r\n\r\npayment.create()\r\n       #Create Payment and return status\r\n\r\nif payment.create():\r\n\tprint(\"Payment[%s] created successfully\"% (payment.id))\r\n\r\n\t#Redirect if successful\r\n\tfor link in payment.links:\r\n\t\tif link.rel == \"approval_url\":\r\n\t\t\tredirectURL = str(link.href)\r\n\t\t\tprint(\"Redirect for approval, CLICK THE LINK BELOW \")\r\n\t\t\tprint(\" \")\r\n\t\t\tprint(\" \")\r\n\t\t\tprint(redirectURL)\r\n\t\t\twebbrowser.open(redirectURL)\r\n\r\nelse:\r\n\tprint(\"Error while creating payment\")\r\n\tprint(payment.error)\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/229", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/229/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/229/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/229", "id": 291307453, "node_id": "MDU6SXNzdWUyOTEzMDc0NTM=", "number": 229, "title": "No support for OrdersApi", "user": {"login": "exit99", "id": 7441147, "node_id": "MDQ6VXNlcjc0NDExNDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7441147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exit99", "html_url": "https://github.com/exit99", "followers_url": "https://api.github.com/users/exit99/followers", "following_url": "https://api.github.com/users/exit99/following{/other_user}", "gists_url": "https://api.github.com/users/exit99/gists{/gist_id}", "starred_url": "https://api.github.com/users/exit99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exit99/subscriptions", "organizations_url": "https://api.github.com/users/exit99/orgs", "repos_url": "https://api.github.com/users/exit99/repos", "events_url": "https://api.github.com/users/exit99/events{/privacy}", "received_events_url": "https://api.github.com/users/exit99/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824745, "node_id": "MDU6TGFiZWwxODA4MjQ3NDU=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-enhancement", "name": "sdk-enhancement", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-24T18:10:18Z", "updated_at": "2018-02-21T15:16:44Z", "closed_at": "2018-02-21T15:16:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The orders api is not supported. \r\nhttps://developer.paypal.com/docs/api/orders/#orders.\r\n\r\nCould be added like so...\r\n```\r\nclass Orders(Create, Find):\r\n    path=\"/v1/checkout/orders\"\r\n\r\n    # cancel method\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/228", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/228/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/228/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/228", "id": 290888567, "node_id": "MDU6SXNzdWUyOTA4ODg1Njc=", "number": 228, "title": "sync api addition", "user": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-01-23T15:51:34Z", "updated_at": "2018-02-21T15:18:51Z", "closed_at": "2018-02-21T15:18:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nDo you have a roadmap for adding in the new sync api ?\r\n\r\nThanks\r\n\r\nAlex", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/226", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/226/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/226/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/226", "id": 281307300, "node_id": "MDU6SXNzdWUyODEzMDczMDA=", "number": 226, "title": "KeyError `id` when canceling billing agreement", "user": {"login": "sebbekarlsson", "id": 6907725, "node_id": "MDQ6VXNlcjY5MDc3MjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6907725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebbekarlsson", "html_url": "https://github.com/sebbekarlsson", "followers_url": "https://api.github.com/users/sebbekarlsson/followers", "following_url": "https://api.github.com/users/sebbekarlsson/following{/other_user}", "gists_url": "https://api.github.com/users/sebbekarlsson/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebbekarlsson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebbekarlsson/subscriptions", "organizations_url": "https://api.github.com/users/sebbekarlsson/orgs", "repos_url": "https://api.github.com/users/sebbekarlsson/repos", "events_url": "https://api.github.com/users/sebbekarlsson/events{/privacy}", "received_events_url": "https://api.github.com/users/sebbekarlsson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-12T09:08:40Z", "updated_at": "2017-12-12T13:27:17Z", "closed_at": "2017-12-12T13:27:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: 1.13.1\r\n* Environment: sandbox\r\n* `PayPal-Debug-ID` values: unknown\r\n* Language, language version, and OS: Macos Python 2.7\r\n\r\n### Issue description\r\n\r\n<img width=\"1138\" alt=\"screen shot 2017-12-12 at 10 06 39\" src=\"https://user-images.githubusercontent.com/6907725/33875982-61aeb192-df24-11e7-9ccb-f29e616b1e61.png\">\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/225", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/225/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/225/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/225", "id": 277954606, "node_id": "MDU6SXNzdWUyNzc5NTQ2MDY=", "number": 225, "title": "SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure Python 2.6", "user": {"login": "khieu", "id": 3444839, "node_id": "MDQ6VXNlcjM0NDQ4Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3444839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khieu", "html_url": "https://github.com/khieu", "followers_url": "https://api.github.com/users/khieu/followers", "following_url": "https://api.github.com/users/khieu/following{/other_user}", "gists_url": "https://api.github.com/users/khieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/khieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khieu/subscriptions", "organizations_url": "https://api.github.com/users/khieu/orgs", "repos_url": "https://api.github.com/users/khieu/repos", "events_url": "https://api.github.com/users/khieu/events{/privacy}", "received_events_url": "https://api.github.com/users/khieu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-30T00:14:58Z", "updated_at": "2017-12-13T19:55:01Z", "closed_at": "2017-12-13T19:55:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: <!-- Example: 4.7.2 -->\r\npaypalrestsdk 1.13.1\r\n* Environment: <!-- Is this issue in Sandbox or Production? -->\r\nSandbox\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs -->\r\n* Language, language version, and OS: <!-- Example: Java 1.8.0_101-b13 on Ubuntu 16.10 -->\r\nPython 2.6, Mac OS Sierra 10.12.6\r\n\r\n### Issue description\r\nI'm testing out the Payouts API through basic setup with client_id and client_secrets, then make a call to Payout just like the example in this link https://github.com/paypal/PayPal-Python-SDK/blob/master/samples/payout/create_single_payout.py\r\nWhen I run the script, I get this error:\r\n`raise SSLError(e, request=request)\r\nrequests.exceptions.SSLError: [Errno 1] _ssl.c:493: error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure`\r\n\r\nI have tried a few things such as updating OpenSSL to version 1.0.2, reinstall requests with `[security]` option, I also verified my python and TLS version through this instruction:\r\nhttps://github.com/paypal/tls-update#python\r\nand get `PayPal_Connection_OK`.\r\nHowever I still get the same alert handshake failure.\r\n\r\nI want to ask if it's possible to resolve this issue without updating to python 2.7 ?\r\n\r\nThanks!\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/224", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/224/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/224/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/224", "id": 272910281, "node_id": "MDU6SXNzdWUyNzI5MTAyODE=", "number": 224, "title": "Show all available versions on PyPI", "user": {"login": "andreif", "id": 259691, "node_id": "MDQ6VXNlcjI1OTY5MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/259691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreif", "html_url": "https://github.com/andreif", "followers_url": "https://api.github.com/users/andreif/followers", "following_url": "https://api.github.com/users/andreif/following{/other_user}", "gists_url": "https://api.github.com/users/andreif/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreif/subscriptions", "organizations_url": "https://api.github.com/users/andreif/orgs", "repos_url": "https://api.github.com/users/andreif/repos", "events_url": "https://api.github.com/users/andreif/events{/privacy}", "received_events_url": "https://api.github.com/users/andreif/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-10T11:59:27Z", "updated_at": "2017-11-10T17:34:02Z", "closed_at": "2017-11-10T17:33:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The beta is currently broken (#223) and it's not clear what version is stable without running pip. I believe it's possible to configure the package on PyPI for showing all versions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/221", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/221/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/221/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/221", "id": 264098530, "node_id": "MDU6SXNzdWUyNjQwOTg1MzA=", "number": 221, "title": "Dependencies are not available ", "user": {"login": "santhoshlfms", "id": 5546770, "node_id": "MDQ6VXNlcjU1NDY3NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5546770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santhoshlfms", "html_url": "https://github.com/santhoshlfms", "followers_url": "https://api.github.com/users/santhoshlfms/followers", "following_url": "https://api.github.com/users/santhoshlfms/following{/other_user}", "gists_url": "https://api.github.com/users/santhoshlfms/gists{/gist_id}", "starred_url": "https://api.github.com/users/santhoshlfms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santhoshlfms/subscriptions", "organizations_url": "https://api.github.com/users/santhoshlfms/orgs", "repos_url": "https://api.github.com/users/santhoshlfms/repos", "events_url": "https://api.github.com/users/santhoshlfms/events{/privacy}", "received_events_url": "https://api.github.com/users/santhoshlfms/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824753, "node_id": "MDU6TGFiZWwxODA4MjQ3NTM=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-bug", "name": "sdk-bug", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-10T04:50:43Z", "updated_at": "2017-10-11T15:27:37Z", "closed_at": "2017-10-11T15:27:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### Issue description\r\n\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\nDependencies braintreehttp 1.4.0 is not available in the registry how to get 1.4.0 version and also paypalrestsdk 2.0.0b2 is not available in registry \r\n\r\n![image](https://user-images.githubusercontent.com/5546770/31369821-9bcace94-ada4-11e7-8854-30b8c32793f9.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/220", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/220/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/220/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/220", "id": 264065443, "node_id": "MDU6SXNzdWUyNjQwNjU0NDM=", "number": 220, "title": "Api constructor won't allow mode in create_with_paypal_security_test.py", "user": {"login": "davidlmontgomery", "id": 1782012, "node_id": "MDQ6VXNlcjE3ODIwMTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1782012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidlmontgomery", "html_url": "https://github.com/davidlmontgomery", "followers_url": "https://api.github.com/users/davidlmontgomery/followers", "following_url": "https://api.github.com/users/davidlmontgomery/following{/other_user}", "gists_url": "https://api.github.com/users/davidlmontgomery/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidlmontgomery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidlmontgomery/subscriptions", "organizations_url": "https://api.github.com/users/davidlmontgomery/orgs", "repos_url": "https://api.github.com/users/davidlmontgomery/repos", "events_url": "https://api.github.com/users/davidlmontgomery/events{/privacy}", "received_events_url": "https://api.github.com/users/davidlmontgomery/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824753, "node_id": "MDU6TGFiZWwxODA4MjQ3NTM=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-bug", "name": "sdk-bug", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-10T00:43:40Z", "updated_at": "2017-10-16T15:41:28Z", "closed_at": "2017-10-16T15:41:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 1.13.1\r\n* Environment: Sandbox\r\n\r\n### Issue description\r\n\r\nThe front page of this repository points out the importance of checking for a compliant version of TLS, and directs developers to https://github.com/paypal/PayPal-Python-SDK/blob/master/samples/payment/create_with_paypal_security_test.py to check this issue.\r\n\r\nThis script sets the mode to \"security-test-sandbox\", which config.py's \\_\\_endpoint_map\\_\\_ maps to \"https://test-api.sandbox.paypal.com/\". \r\n\r\nBut the Api constructor contains the following check:\r\n```python\r\n  if self.mode != \"live\" and self.mode != \"sandbox\":\r\n    raise exceptions.InvalidConfig(\"Configuration Mode Invalid\", \"Received: %s\" % (self.mode), \"Required: live or sandbox\")\r\n```\r\nThus, the sample code cannot work. A mode of \"security-test-sandbox\" is not allowed.\r\n\r\nThe following change seems to give the desired results:\r\n```python\r\npaypal.configure({\r\n    \"mode\": \"sandbox\",\r\n    \"endpoint\": paypal.config.__endpoint_map__[\"security-test-sandbox\"],\r\n    \"client_id\": \"<CLIENT_ID>\",\r\n    \"client_secret\": \"<CLIENT_SECRET>\"\r\n})\r\n```\r\nAlternatively, the constructor could allow a mode of \"security-test-sandbox\".\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/216", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/216/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/216/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/216", "id": 253208381, "node_id": "MDU6SXNzdWUyNTMyMDgzODE=", "number": 216, "title": "Dispute API?", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824745, "node_id": "MDU6TGFiZWwxODA4MjQ3NDU=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-enhancement", "name": "sdk-enhancement", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-08-28T02:01:13Z", "updated_at": "2017-09-12T20:25:41Z", "closed_at": "2017-09-12T20:25:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "It doesn't look like this sdk implements the Dispute API.\r\n\r\nI'd like to be able to do eg. `Dispute.find(\"PP-000-042-580-XXX\")` and get a Dispute object.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/215", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/215/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/215/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/215", "id": 252701930, "node_id": "MDU6SXNzdWUyNTI3MDE5MzA=", "number": 215, "title": "Constat 500 Internal Server Error when using the Payouts API", "user": {"login": "AlecsGherghel", "id": 12795061, "node_id": "MDQ6VXNlcjEyNzk1MDYx", "avatar_url": "https://avatars1.githubusercontent.com/u/12795061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlecsGherghel", "html_url": "https://github.com/AlecsGherghel", "followers_url": "https://api.github.com/users/AlecsGherghel/followers", "following_url": "https://api.github.com/users/AlecsGherghel/following{/other_user}", "gists_url": "https://api.github.com/users/AlecsGherghel/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlecsGherghel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlecsGherghel/subscriptions", "organizations_url": "https://api.github.com/users/AlecsGherghel/orgs", "repos_url": "https://api.github.com/users/AlecsGherghel/repos", "events_url": "https://api.github.com/users/AlecsGherghel/events{/privacy}", "received_events_url": "https://api.github.com/users/AlecsGherghel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-24T19:13:54Z", "updated_at": "2017-08-25T14:34:11Z", "closed_at": "2017-08-25T14:34:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 1.13.1\r\n* Environment: sandbox\r\n* `PayPal-Debug-ID` values: c1932bd0c106d, 39ed501928fc4\r\n* Language, language version, and OS: python 2.7.11 on Ubuntu 14.10\r\n\r\n### Issue description\r\nHey! I'm trying to create a batch payout in sandbox, using only one recipient. The payload i'm using for the Payout object looks like this:\r\n`{\r\n   'items':[\r\n      {\r\n         'note':'Thank You!',\r\n         'amount':{\r\n            'currency':'USD',\r\n            'value':'0.99'\r\n         },\r\n         'sender_item_id':'201403140002',\r\n         'recipient_type':'EMAIL',\r\n         'receiver':'x@x.eu'\r\n      }\r\n   ],\r\n   'sender_batch_header':{\r\n      'email_subject':'You have a payment from X!',\r\n      'sender_batch_id':'ATZBZEGEIOMT'\r\n   }\r\n}`\r\n\r\nConstantly getting 500 Internal Server Error with the following message:\r\n`{\r\n   \"name\":\"INTERNAL_ERROR\",\r\n   \"message\":\"An internal service error has occurred.\",\r\n   \"debug_id\":\"d2f960dd11018\",\r\n   \"information_link\":\"https://developer.paypal.com/docs/api/payments.payouts-batch/#errors\"\r\n}`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/214", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/214/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/214/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/214", "id": 251081505, "node_id": "MDU6SXNzdWUyNTEwODE1MDU=", "number": 214, "title": "paypalrestsdk==2.0.0b1 is on pypi but not installable", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824753, "node_id": "MDU6TGFiZWwxODA4MjQ3NTM=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-bug", "name": "sdk-bug", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-17T21:45:26Z", "updated_at": "2017-08-18T16:20:40Z", "closed_at": "2017-08-18T16:10:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n% pip install paypalrestsdk==2.0.0b1\r\nCollecting paypalrestsdk==2.0.0b1\r\n  Downloading paypalrestsdk-2.0.0b1-py2.py3-none-any.whl (43kB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 51kB 331kB/s \r\nCollecting braintreehttp>=1.2.3 (from paypalrestsdk==2.0.0b1)\r\n  Could not find a version that satisfies the requirement braintreehttp>=1.2.3 (from paypalrestsdk==2.0.0b1) (from versions: 0.1.0, 0.1.1, 0.1.3, 0.2.0)\r\nNo matching distribution found for braintreehttp>=1.2.3 (from paypalrestsdk==2.0.0b1)\r\n```\r\n\r\nAny idea what's up with this? Is the 2.0.0b1 release a mistake?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/211", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/211/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/211/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/211", "id": 239801610, "node_id": "MDU6SXNzdWUyMzk4MDE2MTA=", "number": 211, "title": "test", "user": {"login": "ppmtscory", "id": 6306449, "node_id": "MDQ6VXNlcjYzMDY0NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6306449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppmtscory", "html_url": "https://github.com/ppmtscory", "followers_url": "https://api.github.com/users/ppmtscory/followers", "following_url": "https://api.github.com/users/ppmtscory/following{/other_user}", "gists_url": "https://api.github.com/users/ppmtscory/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppmtscory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppmtscory/subscriptions", "organizations_url": "https://api.github.com/users/ppmtscory/orgs", "repos_url": "https://api.github.com/users/ppmtscory/repos", "events_url": "https://api.github.com/users/ppmtscory/events{/privacy}", "received_events_url": "https://api.github.com/users/ppmtscory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-30T14:49:08Z", "updated_at": "2017-06-30T14:49:29Z", "closed_at": "2017-06-30T14:49:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: <!-- Example: 4.7.2 -->\r\n* Environment: <!-- Is this issue in Sandbox or Production? -->\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs -->\r\n* Language, language version, and OS: <!-- Example: Java 1.8.0_101-b13 on Ubuntu 16.10 -->\r\n\r\n### Issue description\r\n\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/210", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/210/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/210/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/210", "id": 238784912, "node_id": "MDU6SXNzdWUyMzg3ODQ5MTI=", "number": 210, "title": "Refunds not working", "user": {"login": "HugoSPT", "id": 4753490, "node_id": "MDQ6VXNlcjQ3NTM0OTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4753490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HugoSPT", "html_url": "https://github.com/HugoSPT", "followers_url": "https://api.github.com/users/HugoSPT/followers", "following_url": "https://api.github.com/users/HugoSPT/following{/other_user}", "gists_url": "https://api.github.com/users/HugoSPT/gists{/gist_id}", "starred_url": "https://api.github.com/users/HugoSPT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HugoSPT/subscriptions", "organizations_url": "https://api.github.com/users/HugoSPT/orgs", "repos_url": "https://api.github.com/users/HugoSPT/repos", "events_url": "https://api.github.com/users/HugoSPT/events{/privacy}", "received_events_url": "https://api.github.com/users/HugoSPT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-27T09:10:57Z", "updated_at": "2017-07-05T15:41:09Z", "closed_at": "2017-07-05T15:41:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\nNot able to create refunds\r\n\r\n* SDK/Library version: 1.12.0\r\n* Environment: Sandbox\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs -->\r\n* Language, language version, and OS: Python 3.6.0 on OS X El Capitan 10.11.6\r\n\r\n### Issue description\r\nWhen I try to create a refund I get one of two errors:\r\n1. Calling `Sale.refund({\"amount\": {\"currency\": \"USD\", \"total\": amount['value']}})` returns a PayPal errors saying I cannot create partial refunds;\r\n2. Calling `Sale.refund()` I got a library errors saying I need to provide some attributes.\r\n\r\nLooking for the API 2. shouldn't be a problem since not passing attributes means create a full refund.\r\n\r\nHow can I circumvent this issue?\r\n\r\nThank you in advance.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/209", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/209/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/209/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/209", "id": 238295463, "node_id": "MDU6SXNzdWUyMzgyOTU0NjM=", "number": 209, "title": "How to avoid repeated authorisation by catching the token till it expires?", "user": {"login": "cijo7", "id": 11996726, "node_id": "MDQ6VXNlcjExOTk2NzI2", "avatar_url": "https://avatars0.githubusercontent.com/u/11996726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cijo7", "html_url": "https://github.com/cijo7", "followers_url": "https://api.github.com/users/cijo7/followers", "following_url": "https://api.github.com/users/cijo7/following{/other_user}", "gists_url": "https://api.github.com/users/cijo7/gists{/gist_id}", "starred_url": "https://api.github.com/users/cijo7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cijo7/subscriptions", "organizations_url": "https://api.github.com/users/cijo7/orgs", "repos_url": "https://api.github.com/users/cijo7/repos", "events_url": "https://api.github.com/users/cijo7/events{/privacy}", "received_events_url": "https://api.github.com/users/cijo7/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-06-24T05:05:26Z", "updated_at": "2017-07-05T15:41:48Z", "closed_at": "2017-07-05T15:41:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: <!-- Example: 4.7.2 -->\r\n* Environment: <!-- Is this issue in Sandbox or Production? -->\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs -->\r\n* Language, language version, and OS: <!-- Example: Java 1.8.0_101-b13 on Ubuntu 16.10 -->\r\n\r\n### Issue description\r\n\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\nThe following is the logs from a normal request with the SDK.\r\nINFO:paypalrestsdk.api:Request[POST]: https://api.sandbox.paypal.com/v1/oauth2/token\r\nINFO:paypalrestsdk.api:Response[200]: OK, Duration: 4.636123s.\r\nINFO:paypalrestsdk.api:PayPal-Request-Id: xxxxxxx-xxxx-xxxxx-xxxxx-xxxxxxxxxxxxx\r\nINFO:paypalrestsdk.api:Request[POST]: https://api.sandbox.paypal.com/v1/payments/billing-agreements\r\nINFO:paypalrestsdk.api:Response[201]: Created, Duration: 6.574508s.\r\nHow can i avoid repeated authorizations by caching the Bearer token so that a new payment url could be obtained with a single request. Is there a built-in way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/206", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/206/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/206/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/206", "id": 236440563, "node_id": "MDU6SXNzdWUyMzY0NDA1NjM=", "number": 206, "title": "GetBalance API operation not available?", "user": {"login": "mpetyx", "id": 681407, "node_id": "MDQ6VXNlcjY4MTQwNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/681407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpetyx", "html_url": "https://github.com/mpetyx", "followers_url": "https://api.github.com/users/mpetyx/followers", "following_url": "https://api.github.com/users/mpetyx/following{/other_user}", "gists_url": "https://api.github.com/users/mpetyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpetyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpetyx/subscriptions", "organizations_url": "https://api.github.com/users/mpetyx/orgs", "repos_url": "https://api.github.com/users/mpetyx/repos", "events_url": "https://api.github.com/users/mpetyx/events{/privacy}", "received_events_url": "https://api.github.com/users/mpetyx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-16T10:15:12Z", "updated_at": "2017-06-17T19:35:45Z", "closed_at": "2017-06-17T19:35:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI just wanted to ask if [this](https://developer.paypal.com/docs/classic/api/merchant/GetBalance_API_Operation_NVP/) operation is available within this SDK.\r\nI couldn't find anything related to GetBalance here, and I am a little bit worried to be honest.\r\n\r\nThank you in advance, for your response.\r\n\r\nRegards,\r\nMichael.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/205", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/205/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/205/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/205", "id": 235468074, "node_id": "MDU6SXNzdWUyMzU0NjgwNzQ=", "number": 205, "title": "PP payuts error", "user": {"login": "DmitryNoven", "id": 23530680, "node_id": "MDQ6VXNlcjIzNTMwNjgw", "avatar_url": "https://avatars0.githubusercontent.com/u/23530680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DmitryNoven", "html_url": "https://github.com/DmitryNoven", "followers_url": "https://api.github.com/users/DmitryNoven/followers", "following_url": "https://api.github.com/users/DmitryNoven/following{/other_user}", "gists_url": "https://api.github.com/users/DmitryNoven/gists{/gist_id}", "starred_url": "https://api.github.com/users/DmitryNoven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DmitryNoven/subscriptions", "organizations_url": "https://api.github.com/users/DmitryNoven/orgs", "repos_url": "https://api.github.com/users/DmitryNoven/repos", "events_url": "https://api.github.com/users/DmitryNoven/events{/privacy}", "received_events_url": "https://api.github.com/users/DmitryNoven/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-13T08:01:09Z", "updated_at": "2018-08-02T16:42:10Z", "closed_at": "2017-06-16T06:50:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: <!-- Example: 4.7.2 -->1.12.0\r\n* Environment: <!-- Is this issue in Sandbox or Production? --> sandbox\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs --> 96fd161854607\r\n* Language, language version, and OS: <!-- Example: Java 1.8.0_101-b13 on Ubuntu 16.10 -->ubuntu 16.10\r\n\r\n### Issue description\r\n\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\nWhen i am trying to use payouts i  getting this error\r\n paypalrestsdk.exceptions.ForbiddenAccess: Failed. Response status: 403. Response message: Forbidden. Error message: {\"name\":\"REQUIRED_SCOPE_MISSING\",\"message\":\"Access token does not have required scope.\",\"information_link\":\"https://developer.paypal.com/docs/api/payments.payouts-batch/#errors\"}\r\n\r\nCode similar to example : \r\nsender_batch_id = ''.join(\r\n            random.choice(string.ascii_uppercase) for i in range(12))\r\n        \r\n        payout = paypalrestsdk.Payout({\r\n            \"sender_batch_header\": {\r\n                \"sender_batch_id\": sender_batch_id,\r\n                \"email_subject\": \"You have a payment\"\r\n            },\r\n            \"items\": [\r\n                {\r\n                    \"recipient_type\": \"EMAIL\",\r\n                    \"amount\": {\r\n                        \"value\": 0.99,\r\n                        \"currency\": \"USD\"\r\n                    },\r\n                    \"receiver\": request.data.get('receiver'),\r\n                    \"note\": \"Thank you.\",\r\n                    \"sender_item_id\": \"item_1\"\r\n                }\r\n            ]\r\n        })\r\n\r\n        if payout.create(sync_mode=False):\r\n            print(\"payout[%s] created successfully\" %\r\n                  (payout.batch_header.payout_batch_id))\r\n        else:\r\n            print(payout.error)\r\n        return Response({\r\n            'response': payout.error.message\r\n        })\r\n\r\n\r\nMy config including client_id and client_secret\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/203", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/203/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/203/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/203", "id": 233528323, "node_id": "MDU6SXNzdWUyMzM1MjgzMjM=", "number": 203, "title": "PPsubscribe in heroku app shows SSL Error", "user": {"login": "jrsenthilk23", "id": 29057296, "node_id": "MDQ6VXNlcjI5MDU3Mjk2", "avatar_url": "https://avatars1.githubusercontent.com/u/29057296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrsenthilk23", "html_url": "https://github.com/jrsenthilk23", "followers_url": "https://api.github.com/users/jrsenthilk23/followers", "following_url": "https://api.github.com/users/jrsenthilk23/following{/other_user}", "gists_url": "https://api.github.com/users/jrsenthilk23/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrsenthilk23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrsenthilk23/subscriptions", "organizations_url": "https://api.github.com/users/jrsenthilk23/orgs", "repos_url": "https://api.github.com/users/jrsenthilk23/repos", "events_url": "https://api.github.com/users/jrsenthilk23/events{/privacy}", "received_events_url": "https://api.github.com/users/jrsenthilk23/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-05T08:45:06Z", "updated_at": "2019-05-14T08:15:39Z", "closed_at": "2017-06-14T19:33:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just clicked on the http://ppsubscribe.herokuapp.com/ and logged in using \"customer\" and \"cpass\" but i get a SSL error. Is it being maintained still?\r\n\r\nThis is the error:\r\nrequests.exceptions.SSLError\r\nSSLError: [Errno 1] _ssl.c:510: error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure\r\n\r\nThanks\r\n\r\n<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: <!-- Example: 4.7.2 -->\r\n* Environment: <!-- Is this issue in Sandbox or Production? -->\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs -->\r\n* Language, language version, and OS: <!-- Example: Java 1.8.0_101-b13 on Ubuntu 16.10 -->\r\n\r\n### Issue description\r\n\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/202", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/202/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/202/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/202", "id": 232860082, "node_id": "MDU6SXNzdWUyMzI4NjAwODI=", "number": 202, "title": "Add clear error message if invalid mode is configured", "user": {"login": "NazarTopolsky", "id": 7715385, "node_id": "MDQ6VXNlcjc3MTUzODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7715385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NazarTopolsky", "html_url": "https://github.com/NazarTopolsky", "followers_url": "https://api.github.com/users/NazarTopolsky/followers", "following_url": "https://api.github.com/users/NazarTopolsky/following{/other_user}", "gists_url": "https://api.github.com/users/NazarTopolsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/NazarTopolsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NazarTopolsky/subscriptions", "organizations_url": "https://api.github.com/users/NazarTopolsky/orgs", "repos_url": "https://api.github.com/users/NazarTopolsky/repos", "events_url": "https://api.github.com/users/NazarTopolsky/events{/privacy}", "received_events_url": "https://api.github.com/users/NazarTopolsky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-01T12:17:28Z", "updated_at": "2018-02-05T20:39:08Z", "closed_at": "2018-02-05T20:39:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General information\r\n\r\n* SDK/Library version: 1.12.0\r\n* Environment: Any (see description)\r\n* Python: 2.7.10\r\n\r\n### Issue description\r\n\r\nCurrently, it is possible to pass any gibberish to `paypalrestsdk.configure` as `mode`, and it will happily accept it. Creating payment with such gibberish mode doesn't work, obviously.\r\n\r\nMinimal example:\r\n\r\n    paypalrestsdk.configure({\r\n        \"mode\": \"gibberish mode\",  # offending line\r\n        \"client_id\": settings.PAYPAL_CLIENT_ID,\r\n        \"client_secret\": settings.PAYPAL_CLIENT_SECRET\r\n    })\r\n    payment_info = {\r\n        \"intent\": \"sale\",\r\n        \"payer\": {\"payment_method\": \"paypal\"},\r\n        \"transactions\": [{\r\n            \"item_list\": {\"items\": [{\"name\": \"item\",\r\n                                              \"sku\": \"item\",\r\n                                              \"price\": \"1.00\",\r\n                                              \"currency\": \"USD\",\r\n                                              \"quantity\": 1}]},\r\n            \"amount\": {\"total\": \"1.00\",\r\n                              \"currency\": \"USD\"},\r\n        }],\r\n        \"redirect_urls\": {\"return_url\": '/',\r\n                                  \"cancel_url\": '/cancel/'}\r\n    }\r\n    payment = paypalrestsdk.Payment(payment_info)\r\n    payment.create()\r\n\r\nThe code above yields a following error:\r\n\r\n    Traceback (most recent call last):\r\n    File \"/projects/paypal_example.py\", line 36, in <module>\r\n        payment.create()\r\n    File \"/python_env/local/lib/python2.7/site-packages/paypalrestsdk/resource.py\", line 163, in create\r\n        new_attributes = self.api.post(self.path, self.to_dict(), headers, refresh_token)\r\n    File \"/python_env/local/lib/python2.7/site-packages/paypalrestsdk/api.py\", line 272, in post\r\n        return self.request(util.join_url(self.endpoint, action), 'POST', body=params or {}, headers=headers or {}, refresh_token=refresh_token)\r\n    File \"/python_env/local/lib/python2.7/site-packages/paypalrestsdk/util.py\", line 22, in join_url\r\n        url = re.sub(r'/?$', re.sub(r'^/?', '/', path), url)\r\n    File \"/python_env/lib/python2.7/re.py\", line 155, in sub\r\n        return _compile(pattern, flags).sub(repl, string, count)\r\n    TypeError: expected string or buffer\r\n\r\nAs I understand, in this case `Api` object uses default endpoint from `paypalrestsdk.config.__endpoint_map__`, but uses `.get`, so incorrect mode yields `None`.\r\n\r\nI think it would be better to fail earlier, say, in `Api.__init__`, and throw something like\r\n\r\n    ValueError: incorrect mode; expected \"sandbox\" or \"live\"\r\n\r\ninstead of spilling internals like that.\r\n\r\nI understand that docs explicitly specify that only \"sandbox\" or \"live\" settings can be used, but readable error message is always an improvement.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/200", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/200/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/200/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/200", "id": 231048155, "node_id": "MDU6SXNzdWUyMzEwNDgxNTU=", "number": 200, "title": "Any plans for fully implementing Future Payments in PayPal-Python-SDK?", "user": {"login": "helgihg", "id": 1698313, "node_id": "MDQ6VXNlcjE2OTgzMTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1698313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/helgihg", "html_url": "https://github.com/helgihg", "followers_url": "https://api.github.com/users/helgihg/followers", "following_url": "https://api.github.com/users/helgihg/following{/other_user}", "gists_url": "https://api.github.com/users/helgihg/gists{/gist_id}", "starred_url": "https://api.github.com/users/helgihg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/helgihg/subscriptions", "organizations_url": "https://api.github.com/users/helgihg/orgs", "repos_url": "https://api.github.com/users/helgihg/repos", "events_url": "https://api.github.com/users/helgihg/events{/privacy}", "received_events_url": "https://api.github.com/users/helgihg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-05-24T13:54:17Z", "updated_at": "2017-06-02T14:14:26Z", "closed_at": "2017-06-02T14:14:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm sorry if this is the improper place to ask. Please direct me to the proper channels if I'm asking in the wrong place, but my question regards PayPal-Python-SDK specifically, not PayPal as a whole, so I figure this is the best place to start.\r\n\r\nWe're interested in using Future Payments, but the documentation seems to assume mobile development for that feature. We're not, however, developing a mobile app and have no reason to create one.\r\n\r\nSpecifically, in order to do Future Payments, an authorization code using OAuth2 is required. There is nothing mobile-specific about OAuth2 so I wonder why it's mobile-specific at PayPal. Information on the matter seems to be scarce, and it is unclear whether this is a temporary arrangement or a design choice.\r\n\r\nSo what I'm wondering, ultimately is this: Is full support for Future Payments planned for PayPal-Python-SDK in the near future?\r\n\r\nhttps://developer.paypal.com/docs/integration/mobile/make-future-payment/#get-an-auth-code", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/198", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/198/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/198/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/198", "id": 229371271, "node_id": "MDU6SXNzdWUyMjkzNzEyNzE=", "number": 198, "title": "'An unknown error occurred' when trying to create a payment", "user": {"login": "jinchuika", "id": 5230176, "node_id": "MDQ6VXNlcjUyMzAxNzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5230176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinchuika", "html_url": "https://github.com/jinchuika", "followers_url": "https://api.github.com/users/jinchuika/followers", "following_url": "https://api.github.com/users/jinchuika/following{/other_user}", "gists_url": "https://api.github.com/users/jinchuika/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinchuika/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinchuika/subscriptions", "organizations_url": "https://api.github.com/users/jinchuika/orgs", "repos_url": "https://api.github.com/users/jinchuika/repos", "events_url": "https://api.github.com/users/jinchuika/events{/privacy}", "received_events_url": "https://api.github.com/users/jinchuika/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-17T14:26:37Z", "updated_at": "2017-05-17T15:44:06Z", "closed_at": "2017-05-17T15:21:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: Python .12.0\r\n* Environment: Sandbox\r\n* `PayPal-Debug-ID` values: f65dc62e9d3c2\r\n* Language, language version, and OS: Python 3.5 on Ubuntu Server 16.04\r\n\r\nWhen ever I try to make a payment using credit card (the one provided in docs for testing purposes), it returns the next error:\r\n`{'name': 'UNKNOWN_ERROR', 'message': 'An unknown error occurred.', 'information_link': 'https://developer.paypal.com/webapps/developer/docs/api/#UNKNOWN_ERROR', 'debug_id': 'f65dc62e9d3c2'}`\r\n\r\nI literaly copy/pasted my method from another project I used in the same account that worked some months ago (but I wasn't able to test again).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/196", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/196/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/196/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/196", "id": 223193966, "node_id": "MDU6SXNzdWUyMjMxOTM5NjY=", "number": 196, "title": "WebhookEvent.verify() returns [('rsa routines', 'INT_RSA_VERIFY', 'bad signature') using Django", "user": {"login": "dhruvsingh", "id": 1695796, "node_id": "MDQ6VXNlcjE2OTU3OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1695796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhruvsingh", "html_url": "https://github.com/dhruvsingh", "followers_url": "https://api.github.com/users/dhruvsingh/followers", "following_url": "https://api.github.com/users/dhruvsingh/following{/other_user}", "gists_url": "https://api.github.com/users/dhruvsingh/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhruvsingh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhruvsingh/subscriptions", "organizations_url": "https://api.github.com/users/dhruvsingh/orgs", "repos_url": "https://api.github.com/users/dhruvsingh/repos", "events_url": "https://api.github.com/users/dhruvsingh/events{/privacy}", "received_events_url": "https://api.github.com/users/dhruvsingh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-04-20T20:43:26Z", "updated_at": "2019-11-08T12:06:50Z", "closed_at": "2017-04-25T16:55:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: 1.11.5\r\n* Environment: <!-- Is this issue in Sandbox or Production? --> Sandbox\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs --> None\r\n* Language, language version, and OS: <!-- Example: Java 1.8.0_101-b13 on Ubuntu 16.10 --> Ubuntu 14.04 LTS, Python 2.7.6, Django 1.8.10\r\n\r\nThe issues I looked at before posting my problem are:\r\n1. #157 \r\n2. #166 \r\n3. #179 \r\n\r\n### Issue description\r\n\r\nI'm sending WebhookEvents to my local development environment (via ngrok) using PayPal's Webhooks. I created a webhook on ```developer.paypal.com``` under the SANDBOX WEBHOOKS. When I try to verify the WebhookEvent using the post data from the sandbox, I get a response of:\r\n\r\n[('rsa routines', 'INT_RSA_VERIFY', 'bad signature')]\r\n\r\nI can't see what I'm doing wrong. Here is the data I'm using, based on the http request from PayPal.\r\n\r\n```\r\nself.request.META = \r\n{'wsgi.multiprocess': False, 'HTTP_PAYPAL_AUTH_VERSION': 'v2', u'SCRIPT_NAME': u'', 'REQUEST_METHOD': 'POST', 'HTTP_PAYPAL_TRANSMISSION_ID': '266ae2c0-25ef-11e7-8be9-6b62a8a99ac4', 'PATH_INFO': u'/membership/payment/status/', 'SERVER_PROTOCOL': 'HTTP/1.1', 'QUERY_STRING': '', 'HTTP_PAYPAL_TRANSMISSION_SIG': 'sce/6hKttWL/wrNuPpe7bC2M28Q/HseR71JLP38p5vDzGkgZdG1/UUIe1Pbt1+KvTAVXwhw3QhIxJr4m6NlFNCi2BYyUdZNkybyXr6PBiDu06gvOGFxSylZA9f44kQ09laS1aSWgjIIXZmdtqoxJughhFK8VbjqG5iGv4TxdWM0NxtVdO+Qiay1zyErRPvJNPjVOHnmFiFZtQ+Jhgg0xTRSxBYEwb1rJ2oL77yK8UzA0DULx1/Q6TYu6d2FeSpPVz8mkn2r45XifJ3709BeQKcxKqo3xX2IdYoz5QRmZO2Md+6oKMjxz01Vy5cGhfJOOiDDdRySSe5asD/R4bxVD0A==', 'UWSGI_SCHEME': 'https', 'CONTENT_LENGTH': '2080', 'HTTP_USER_AGENT': 'PayPal/AUHD-210.0-32002342', 'SERVER_NAME': 'api-staging.learn-skillz.com', 'REMOTE_ADDR': '173.0.82.126', 'HTTP_PAYPAL_CERT_URL': 'https://api.sandbox.paypal.com/v1/notifications/certs/CERT-360caa42-fca2a594-aecacc47', 'wsgi.url_scheme': 'https', 'SERVER_PORT': '443', 'uwsgi.node': 'ip-172-31-20-197', 'DOCUMENT_ROOT': '/usr/share/nginx/html', 'HTTP_CONTENT_LENGTH': '2080', 'wsgi.input': <uwsgi._Input object at 0x7f4685fef708>, 'HTTP_HOST': 'api-staging.learn-skillz.com', 'wsgi.multithread': False, 'wsgi.version': (1, 0), 'HTTP_CONTENT_TYPE': 'application/json', 'HTTP_PAYPAL_TRANSMISSION_TIME': '2017-04-20T17:31:13Z', 'REQUEST_URI': '/membership/payment/status/', 'HTTP_ACCEPT': '*/*', 'HTTP_CORRELATION_ID': '244e869f840e0', 'wsgi.run_once': False, 'wsgi.errors': <open file 'wsgi_errors', mode 'w' at 0x7f468721a030>, 'REMOTE_PORT': '38441', 'uwsgi.version': '1.9.17.1-debian', 'CONTENT_TYPE': 'application/json', 'wsgi.file_wrapper': <built-in function uwsgi_sendfile>, u'CSRF_COOKIE': u'IPl21R3PXjGNvTTCXhSJZdAxoo1DjhnC', 'HTTP_PAYPAL_AUTH_ALGO': 'SHA256withRSA'}\r\n```\r\n\r\n```\r\nself.request.data = '\r\n{\"resource\": {\"description\": \"this is aggreement description of paypal payment\", \"links\": [{\"href\": \"api.sandbox.paypal.com/v1/payments/billing-agreements/I-D75430VUDDYM\", \"method\": \"GET\", \"rel\": \"self\"}], \"agreement_details\": {\"num_cycles_remaining\": \"1\", \"next_billing_date\": \"2017-04-20T10:00:00Z\", \"num_cycles_completed\": \"0\", \"failed_payment_count\": \"0\", \"final_payment_due_date\": \"1970-01-01T00:00:00Z\", \"outstanding_balance\": {\"value\": \"0.00\"}}, \"payer\": {\"payment_method\": \"paypal\", \"status\": \"verified\", \"payer_info\": {\"shipping_address\": {\"city\": \"San Jose\", \"line1\": \"1 Main St\", \"recipient_name\": \"test buyer\", \"state\": \"CA\", \"postal_code\": \"95131\", \"country_code\": \"US\"}, \"first_name\": \"test\", \"last_name\": \"buyer\", \"email\": \"support-buyer@learn-skillz.com\", \"payer_id\": \"LUTSS7YKHHM8N\"}}, \"start_date\": \"2017-04-20T07:00:00Z\", \"state\": \"Active\", \"plan\": {\"payment_definitions\": [{\"charge_models\": [{\"amount\": {\"value\": \"0.00\"}, \"type\": \"TAX\"}, {\"amount\": {\"value\": \"0.00\"}, \"type\": \"SHIPPING\"}], \"type\": \"TRIAL\", \"amount\": {\"value\": \"0.00\"}, \"frequency\": \"Day\", \"cycles\": \"1\", \"frequency_interval\": \"1\"}, {\"charge_models\": [{\"amount\": {\"value\": \"0.00\"}, \"type\": \"TAX\"}, {\"amount\": {\"value\": \"0.00\"}, \"type\": \"SHIPPING\"}], \"type\": \"REGULAR\", \"amount\": {\"value\": \"29.99\"}, \"frequency\": \"Day\", \"cycles\": \"0\", \"frequency_interval\": \"1\"}], \"merchant_preferences\": {\"max_fail_attempts\": \"1\", \"setup_fee\": {\"value\": \"0.00\"}, \"auto_bill_amount\": \"YES\"}, \"curr_code\": \"USD\", \"links\": []}, \"shipping_address\": {\"city\": \"San Jose\", \"line1\": \"1 Main St\", \"recipient_name\": \"test buyer\", \"state\": \"CA\", \"postal_code\": \"95131\", \"country_code\": \"US\"}, \"id\": \"I-D75430VUDDYM\"}, \"event_type\": \"BILLING.SUBSCRIPTION.CREATED\", \"links\": [{\"href\": \"https://api.sandbox.paypal.com/v1/notifications/webhooks-events/WH-1CN58512SU554860M-3HH12985DY1848520\", \"method\": \"GET\", \"rel\": \"self\"}, {\"href\": \"https://api.sandbox.paypal.com/v1/notifications/webhooks-events/WH-1CN58512SU554860M-3HH12985DY1848520/resend\", \"method\": \"POST\", \"rel\": \"resend\"}], \"summary\": \"A billing subscription was created\", \"event_version\": \"1.0\", \"create_time\": \"2017-04-20T17:31:12.858Z\", \"id\": \"WH-1CN58512SU554860M-3HH12985DY1848520\", \"resource_type\": \"Agreement\"}\r\n'\r\n```\r\n\r\n```\r\nWEBHOOK_ID = \"0FM01498EV869870X\"\r\n```\r\n\r\n```\r\nimport paypalrestsdk\r\nresponse = paypalrestsdk.WebhookEvent.verify(\r\n    transmission_id=self.request.META['HTTP_PAYPAL_TRANSMISSION_ID'],\r\n    timestamp=self.request.META['HTTP_PAYPAL_TRANSMISSION_TIME'],\r\n    webhook_id=WEBHOOK_ID,\r\n    event_body=str(self.request.data),\r\n    cert_url=self.request.META['HTTP_PAYPAL_CERT_URL'],\r\n    actual_sig=self.request.META['HTTP_PAYPAL_TRANSMISSION_SIG'],\r\n    auth_algo=self.request.META['HTTP_PAYPAL_AUTH_ALGO']\r\n)\r\n```\r\n\r\nI also tried the following request(with variations in encode/decode), but in vain.\r\n\r\n```\r\nimport paypalrestsdk\r\nresponse = paypalrestsdk.WebhookEvent.verify(\r\n    transmission_id=self.request.META['HTTP_PAYPAL_TRANSMISSION_ID'].encode('utf-8'),\r\n    timestamp=self.request.META['HTTP_PAYPAL_TRANSMISSION_TIME'].encode('utf-8'),\r\n    webhook_id=WEBHOOK_ID,\r\n    event_body=str(self.request.data),\r\n    cert_url=self.request.META['HTTP_PAYPAL_CERT_URL'].encode('utf-8'),\r\n    actual_sig=self.request.META['HTTP_PAYPAL_TRANSMISSION_SIG'].encode('utf-8'),\r\n    auth_algo=self.request.META['HTTP_PAYPAL_AUTH_ALGO'].encode('utf-8')\r\n)\r\n```\r\n\r\nCan you please point me in the right direction?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/195", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/195/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/195/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/195", "id": 221439079, "node_id": "MDU6SXNzdWUyMjE0MzkwNzk=", "number": 195, "title": "invoice pagination works incorrectly", "user": {"login": "JosephDev", "id": 7818008, "node_id": "MDQ6VXNlcjc4MTgwMDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7818008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JosephDev", "html_url": "https://github.com/JosephDev", "followers_url": "https://api.github.com/users/JosephDev/followers", "following_url": "https://api.github.com/users/JosephDev/following{/other_user}", "gists_url": "https://api.github.com/users/JosephDev/gists{/gist_id}", "starred_url": "https://api.github.com/users/JosephDev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JosephDev/subscriptions", "organizations_url": "https://api.github.com/users/JosephDev/orgs", "repos_url": "https://api.github.com/users/JosephDev/repos", "events_url": "https://api.github.com/users/JosephDev/events{/privacy}", "received_events_url": "https://api.github.com/users/JosephDev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": {"login": "randstraw", "id": 6819909, "node_id": "MDQ6VXNlcjY4MTk5MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6819909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/randstraw", "html_url": "https://github.com/randstraw", "followers_url": "https://api.github.com/users/randstraw/followers", "following_url": "https://api.github.com/users/randstraw/following{/other_user}", "gists_url": "https://api.github.com/users/randstraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/randstraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/randstraw/subscriptions", "organizations_url": "https://api.github.com/users/randstraw/orgs", "repos_url": "https://api.github.com/users/randstraw/repos", "events_url": "https://api.github.com/users/randstraw/events{/privacy}", "received_events_url": "https://api.github.com/users/randstraw/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "randstraw", "id": 6819909, "node_id": "MDQ6VXNlcjY4MTk5MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6819909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/randstraw", "html_url": "https://github.com/randstraw", "followers_url": "https://api.github.com/users/randstraw/followers", "following_url": "https://api.github.com/users/randstraw/following{/other_user}", "gists_url": "https://api.github.com/users/randstraw/gists{/gist_id}", "starred_url": "https://api.github.com/users/randstraw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/randstraw/subscriptions", "organizations_url": "https://api.github.com/users/randstraw/orgs", "repos_url": "https://api.github.com/users/randstraw/repos", "events_url": "https://api.github.com/users/randstraw/events{/privacy}", "received_events_url": "https://api.github.com/users/randstraw/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2017-04-13T02:08:40Z", "updated_at": "2017-04-13T21:05:15Z", "closed_at": "2017-04-13T21:00:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "* SDK/Library version: latest version (current github) \r\n* Environment: SandBox\r\n* `PayPal-Debug-ID` values: \r\n* Language, language version, and OS: OSX, python 3.5.2\r\n\r\n### Issue description\r\nI tried figure out how paginate invoices. while testing, I've got a funny result that invoice IDs are duplicated in results.\r\n\r\nif the page_size >= total_count than result is fine. no duplication ID\r\nhowever, if page_size < total_count than IDs are duplicated in results even if I create several requests to retrieve all list. \r\n\r\nexample results:\r\ntotal count: 21, page_size: 21, page: 0 => return 21 UNIQUE invoices\r\ntotal count: 21, page_size: 50, page: 0 => return 21 UNIQUE invoices\r\n\r\n**total count: 21, page_size: 10, page: 5 => return 19 UNIQUE invoices\r\ntotal count: 21, page_size: 10, page: 0,1,2 => return 12 UNIQUE invoices**\r\n\r\nHere is my sample search code. \r\n```\r\noptions = {\r\n  \"page_size\": 30,\r\n  \"total_count_required\": True,\r\n  \"status\": [\"SENT\"],\r\n  \"page\": 0\r\n}\r\ninvoices = paypalrestsdk.Invoice.search(options)\r\n```\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/194", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/194/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/194/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/194", "id": 220318810, "node_id": "MDU6SXNzdWUyMjAzMTg4MTA=", "number": 194, "title": "RATE LIMIT REACHED", "user": {"login": "campanate", "id": 14114908, "node_id": "MDQ6VXNlcjE0MTE0OTA4", "avatar_url": "https://avatars0.githubusercontent.com/u/14114908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/campanate", "html_url": "https://github.com/campanate", "followers_url": "https://api.github.com/users/campanate/followers", "following_url": "https://api.github.com/users/campanate/following{/other_user}", "gists_url": "https://api.github.com/users/campanate/gists{/gist_id}", "starred_url": "https://api.github.com/users/campanate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/campanate/subscriptions", "organizations_url": "https://api.github.com/users/campanate/orgs", "repos_url": "https://api.github.com/users/campanate/repos", "events_url": "https://api.github.com/users/campanate/events{/privacy}", "received_events_url": "https://api.github.com/users/campanate/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-07T20:22:59Z", "updated_at": "2017-04-10T14:30:40Z", "closed_at": "2017-04-10T14:29:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I change sdk to live, he send several requests to paypal payment and return error 429, sandbox works fine. Someone?\r\n\r\n    try:\r\n        mode = 'live'\r\n        if mode == 'sandbox':\r\n            paypalrestsdk.configure(sandbox)\r\n        else:\r\n            paypalrestsdk.configure(live)\r\n        validacao = validate_data(data)\r\n        if validacao['status'] == 'error':\r\n            return validacao\r\n        payment = paypalrestsdk.Payment({\r\n            \"intent\": \"sale\",\r\n            \"payer\": {\r\n                \"payment_method\": \"credit_card\",\r\n                \"funding_instruments\": [{\r\n                    \"credit_card\": {\r\n                        \"type\": data['flag'],\r\n                        \"number\": data['number'],\r\n                        \"expire_month\": data['month'],\r\n                        \"expire_year\": data['year'],\r\n                        \"cvv2\": data['cvv'],\r\n                        \"first_name\": data['first_name'],\r\n                        \"last_name\": data['last_name']}}]},\r\n            \"transactions\": [{\r\n                \"item_list\": {\r\n                    \"items\": [{\r\n                        \"name\": \"item\",\r\n                        \"sku\": \"item\",\r\n                        \"price\": \"1.00\",\r\n                        \"currency\": \"USD\",\r\n                        \"quantity\": 1}]},\r\n                \"amount\": {\r\n                    \"total\": \"1.00\",\r\n                    \"currency\": \"USD\"},\r\n                \"description\": \"Description.\"}]})\r\n\r\n        if payment.create():\r\n            return {'status': \"Payment created successfully\"}\r\n\r\n        return {'status': 'error', 'message': payment.error}\r\n    except Exception as e:\r\n        print(e)\r\n        return {'error': 'Transa\u00e7\u00e3o n\u00e3o autorizada.', 'message': e.message}\r\n\r\nFailed. Response status: 429. Response message: Too Many Requests. Error message: {\"name\":\"RATE_LIMIT_REACHED\",\"debug_id\":\"########\",\"message\":\"Too many requests. Blocked due to rate limiting.\"}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/192", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/192/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/192/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/192", "id": 215927441, "node_id": "MDU6SXNzdWUyMTU5Mjc0NDE=", "number": 192, "title": "3LQB1zTJAka1Fb13n1TpHs9advhAdaVYLF", "user": {"login": "Raynellc", "id": 26239733, "node_id": "MDQ6VXNlcjI2MjM5NzMz", "avatar_url": "https://avatars3.githubusercontent.com/u/26239733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Raynellc", "html_url": "https://github.com/Raynellc", "followers_url": "https://api.github.com/users/Raynellc/followers", "following_url": "https://api.github.com/users/Raynellc/following{/other_user}", "gists_url": "https://api.github.com/users/Raynellc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Raynellc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Raynellc/subscriptions", "organizations_url": "https://api.github.com/users/Raynellc/orgs", "repos_url": "https://api.github.com/users/Raynellc/repos", "events_url": "https://api.github.com/users/Raynellc/events{/privacy}", "received_events_url": "https://api.github.com/users/Raynellc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-22T01:31:01Z", "updated_at": "2017-03-22T01:31:21Z", "closed_at": "2017-03-22T01:31:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!-- ** General notice: if you have an API issue, see our [REST API issues](https://github.com/paypal/PayPal-REST-API-issues) repository, or contact [PayPal Tech Support](https://developer.paypal.com/support/). ** -->\r\n### General information\r\n\r\n* SDK/Library version: <!-- Example: 4.7.2 -->\r\n* Environment: <!-- Is this issue in Sandbox or Production? -->\r\n* `PayPal-Debug-ID` values: <!-- Report PayPal-Debug-IDs from any logs -->\r\n* Language, language version, and OS: <!-- Example: Java 1.8.0_101-b13 on Ubuntu 16.10 -->\r\n\r\n### Issue description\r\n\r\n<!-- To help us quickly reproduce your issue, include as many details as possible, such as logs, steps to reproduce, and so on.  If the issue reports a new feature, follow the [user story](https://en.wikipedia.org/wiki/User_story) format to clearly describe the use case. -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/190", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/190/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/190/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/190", "id": 211700299, "node_id": "MDU6SXNzdWUyMTE3MDAyOTk=", "number": 190, "title": "Payment MALFORMED_REQUEST errror, Incoming JSON request does not map to API request", "user": {"login": "rostagnolisandro", "id": 3819939, "node_id": "MDQ6VXNlcjM4MTk5Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3819939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rostagnolisandro", "html_url": "https://github.com/rostagnolisandro", "followers_url": "https://api.github.com/users/rostagnolisandro/followers", "following_url": "https://api.github.com/users/rostagnolisandro/following{/other_user}", "gists_url": "https://api.github.com/users/rostagnolisandro/gists{/gist_id}", "starred_url": "https://api.github.com/users/rostagnolisandro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rostagnolisandro/subscriptions", "organizations_url": "https://api.github.com/users/rostagnolisandro/orgs", "repos_url": "https://api.github.com/users/rostagnolisandro/repos", "events_url": "https://api.github.com/users/rostagnolisandro/events{/privacy}", "received_events_url": "https://api.github.com/users/rostagnolisandro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-03T14:20:41Z", "updated_at": "2017-03-24T13:50:06Z", "closed_at": "2017-03-24T13:50:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there! \r\nI'm using version 1.12.0, installed from pip.\r\nEverything works ok, but I can't execute the Payment.replace() method in order to update the amount of a payment. This is the error I receive:\r\n\r\ndebug_id=6d630d1ca64bc\r\ninformation_link=https://developer.paypal.com/webapps/developer/docs/api/#MALFORMED_REQUEST\r\nmessage=Incoming JSON request does not map to API request\r\nname=MALFORMED_REQUEST\r\n\r\nThe code portion where I do the update is this:\r\n\r\n`payment = pp.Payment.find(request.args(0))`\r\n`payment.replace({\r\n        \"transactions\": [{\r\n            \"amount\": {\r\n                \"total\": \"1.11\",\r\n                \"currency\": \"USD\",\r\n            },\r\n            \"item_list\": {\r\n                \"items\": [\r\n                    {\r\n                        \"name\": \"test\",\r\n                        \"description\": \"test\",\r\n                        \"quantity\": \"1\",\r\n                        \"price\": \"1.11\",\r\n                        \"currency\": \"USD\"\r\n                    },\r\n                ]\r\n            }\r\n        }]\r\n    })`\r\n\r\nIs this a bug in the SDK or am I missing something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/188", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/188/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/188/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/188", "id": 209947434, "node_id": "MDU6SXNzdWUyMDk5NDc0MzQ=", "number": 188, "title": "Payment REST API UNKNOWN_ERROR", "user": {"login": "omistler", "id": 14960383, "node_id": "MDQ6VXNlcjE0OTYwMzgz", "avatar_url": "https://avatars1.githubusercontent.com/u/14960383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omistler", "html_url": "https://github.com/omistler", "followers_url": "https://api.github.com/users/omistler/followers", "following_url": "https://api.github.com/users/omistler/following{/other_user}", "gists_url": "https://api.github.com/users/omistler/gists{/gist_id}", "starred_url": "https://api.github.com/users/omistler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omistler/subscriptions", "organizations_url": "https://api.github.com/users/omistler/orgs", "repos_url": "https://api.github.com/users/omistler/repos", "events_url": "https://api.github.com/users/omistler/events{/privacy}", "received_events_url": "https://api.github.com/users/omistler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-24T03:02:23Z", "updated_at": "2017-03-13T21:53:56Z", "closed_at": "2017-03-13T18:30:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): Sandbox\r\n- PayPal-Debug-ID(s) (from any logs): 33e47094207e\r\n- Version of Python used: 3.5.0 \r\n- SDK Version: 1.12.0\r\n\r\n### Issue Description\r\n\r\n> Please include as many details (logs, steps to reproduce, frameworks/dependencies) as you can to help us reproduce this issue faster.\r\n\r\nTried the default payment/create_with_credit_card payment example within my application and it return the next error:\r\n\r\nError while creating payment:\r\n{'message': 'An unknown error occurred.', 'information_link': 'https://developer.paypal.com/webapps/developer/docs/api/#UNKNOWN_ERROR', 'name': 'UNKNOWN_ERROR', 'debug_id': '33e47094207e'}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/187", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/187/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/187/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/187", "id": 208753875, "node_id": "MDU6SXNzdWUyMDg3NTM4NzU=", "number": 187, "title": "'Show Sale Details' response does not include parent_payment, billing_agreement_id", "user": {"login": "pianostringquartet", "id": 18562836, "node_id": "MDQ6VXNlcjE4NTYyODM2", "avatar_url": "https://avatars0.githubusercontent.com/u/18562836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pianostringquartet", "html_url": "https://github.com/pianostringquartet", "followers_url": "https://api.github.com/users/pianostringquartet/followers", "following_url": "https://api.github.com/users/pianostringquartet/following{/other_user}", "gists_url": "https://api.github.com/users/pianostringquartet/gists{/gist_id}", "starred_url": "https://api.github.com/users/pianostringquartet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pianostringquartet/subscriptions", "organizations_url": "https://api.github.com/users/pianostringquartet/orgs", "repos_url": "https://api.github.com/users/pianostringquartet/repos", "events_url": "https://api.github.com/users/pianostringquartet/events{/privacy}", "received_events_url": "https://api.github.com/users/pianostringquartet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-19T22:55:05Z", "updated_at": "2017-02-21T20:38:23Z", "closed_at": "2017-02-21T20:38:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): Live\r\n- PayPal-Debug-ID(s) (from any logs): None\r\n- Version of Python used: 2.7\r\n- SDK Version: 1.12.0\r\n\r\n### Issue Description\r\n\r\n> Please include as many details (logs, steps to reproduce, frameworks/dependencies) as you can to help us reproduce this issue faster.\r\n\r\nThe 'show sale details' response does not seem to include the parent_payment and billing_agreement_id fields, contrary to the Payments API docs for 'show sale details'. \r\n\r\n(I'm providing a transaction_id (whose transaction_type is 'SALE') found from a payment_detail object found in an invoice object's payments array.)\r\n\r\nAm I missing something here?\r\n\r\nThank you for help!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/186", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/186/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/186/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/186", "id": 207498166, "node_id": "MDU6SXNzdWUyMDc0OTgxNjY=", "number": 186, "title": "Check user exists or not based on email / Mobile number/  PayPal ID", "user": {"login": "prasadmuley", "id": 1956733, "node_id": "MDQ6VXNlcjE5NTY3MzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1956733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prasadmuley", "html_url": "https://github.com/prasadmuley", "followers_url": "https://api.github.com/users/prasadmuley/followers", "following_url": "https://api.github.com/users/prasadmuley/following{/other_user}", "gists_url": "https://api.github.com/users/prasadmuley/gists{/gist_id}", "starred_url": "https://api.github.com/users/prasadmuley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prasadmuley/subscriptions", "organizations_url": "https://api.github.com/users/prasadmuley/orgs", "repos_url": "https://api.github.com/users/prasadmuley/repos", "events_url": "https://api.github.com/users/prasadmuley/events{/privacy}", "received_events_url": "https://api.github.com/users/prasadmuley/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-14T12:10:05Z", "updated_at": "2017-11-10T20:12:29Z", "closed_at": "2017-02-14T15:11:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): Sandbox\r\n- PayPal-Debug-ID(s) (from any logs): \r\n- Version of Python used: 2.7\r\n- SDK Version: 1.12.0\r\n\r\n### Issue Description\r\nHi Team,\r\n\r\n   I've to check whether user's PayPal account exists or not before transferring money. User's account can be verified based on email / phone / PayPal ID.  I searched a lot and didn't find any API / Method. Is there any rest API available?\r\n\r\nIf there is no API available, what is the ideal way to check user exists or not?\r\n \r\n\r\n\r\n> Please include as many details (logs, steps to reproduce, frameworks/dependencies) as you can to help us reproduce this issue faster.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/185", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/185/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/185/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/185", "id": 207360239, "node_id": "MDU6SXNzdWUyMDczNjAyMzk=", "number": 185, "title": "Search invoice option doesn't work", "user": {"login": "JosephDev", "id": 7818008, "node_id": "MDQ6VXNlcjc4MTgwMDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7818008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JosephDev", "html_url": "https://github.com/JosephDev", "followers_url": "https://api.github.com/users/JosephDev/followers", "following_url": "https://api.github.com/users/JosephDev/following{/other_user}", "gists_url": "https://api.github.com/users/JosephDev/gists{/gist_id}", "starred_url": "https://api.github.com/users/JosephDev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JosephDev/subscriptions", "organizations_url": "https://api.github.com/users/JosephDev/orgs", "repos_url": "https://api.github.com/users/JosephDev/repos", "events_url": "https://api.github.com/users/JosephDev/events{/privacy}", "received_events_url": "https://api.github.com/users/JosephDev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-02-13T22:34:54Z", "updated_at": "2017-03-24T18:57:45Z", "closed_at": "2017-03-24T18:57:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): Sandbox\r\n- PayPal-Debug-ID(s) (from any logs):\r\n- Version of Python used: 3.5.2\r\n- SDK Version: 1.12.0\r\n\r\n### Issue Description\r\n\r\nSearch invoice path is different from [API document](https://developer.paypal.com/docs/api/invoicing/#invoices_search). \r\nI changed the url on PR #184. It works fine except searching invoice by its status.\r\nI tried searching request with status parameter using curl but it doesn't work either. \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/182", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/182/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/182/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/182", "id": 202942166, "node_id": "MDU6SXNzdWUyMDI5NDIxNjY=", "number": 182, "title": "Webhook for INVOICING.INVOICE.PAID does not return any Invoice data", "user": {"login": "gkachru", "id": 6730544, "node_id": "MDQ6VXNlcjY3MzA1NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6730544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkachru", "html_url": "https://github.com/gkachru", "followers_url": "https://api.github.com/users/gkachru/followers", "following_url": "https://api.github.com/users/gkachru/following{/other_user}", "gists_url": "https://api.github.com/users/gkachru/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkachru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkachru/subscriptions", "organizations_url": "https://api.github.com/users/gkachru/orgs", "repos_url": "https://api.github.com/users/gkachru/repos", "events_url": "https://api.github.com/users/gkachru/events{/privacy}", "received_events_url": "https://api.github.com/users/gkachru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-24T21:15:41Z", "updated_at": "2017-04-11T10:43:20Z", "closed_at": "2017-01-27T21:00:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode: Sandbox\r\n- PayPal-Debug-ID(s) (from any logs): NA\r\n- Version of Python used: 2.7.12\r\n- SDK Version: 1.12.0\r\n\r\n### Issue Description\r\n\r\nWebhook POST data validates correctly using WebhookEvent.verify, however it does not contain any data about the invoice itself. Please find below the response I have been getting:\r\n\r\n```\r\n{\"id\":\"WH-09E65532S0903350P-6JH87154GP593045B\",\"event_version\":\"1.0\",\"create_time\":\"2017-01-24T20:48:07Z\",\"resource_type\":\"invoices\",\"event_type\":\"INVOICING.INVOICE.PAID\",\"summary\":\"An invoice has been paid\",\"resource\":{\"invoice\":null},\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v1/notifications/webhooks-events/WH-09E65532S0903350P-6JH87154GP593045B\",\"rel\":\"self\",\"method\":\"GET\"},{\"href\":\"https://api.sandbox.paypal.com/v1/notifications/webhooks-events/WH-09E65532S0903350P-6JH87154GP593045B/resend\",\"rel\":\"resend\",\"method\":\"POST\"}]}\r\n```\r\n\r\nSteps to reproduce:\r\n1. Create a webhook URL in the sandbox to listen to  INVOICING.INVOICE.PAID\r\n2. Create and send an invoice using the rest API in the sandbox\r\n3. Use a sandbox testing buyer account to pay for the item. Alternatively, mark the invoice as paid in the sandbox UI.\r\n4. Webhook event received contains `\"resource\":{\"invoice\":null}` and has no actually invoice data.\r\n\r\nNotes:\r\n- Response visible in developer portal under Sandbox > Webhook Events is the same as that received by the webhook listener.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/181", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/181/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/181/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/181", "id": 200170572, "node_id": "MDU6SXNzdWUyMDAxNzA1NzI=", "number": 181, "title": "ppsubscribe fails no matter what", "user": {"login": "chppppp", "id": 7140485, "node_id": "MDQ6VXNlcjcxNDA0ODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7140485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chppppp", "html_url": "https://github.com/chppppp", "followers_url": "https://api.github.com/users/chppppp/followers", "following_url": "https://api.github.com/users/chppppp/following{/other_user}", "gists_url": "https://api.github.com/users/chppppp/gists{/gist_id}", "starred_url": "https://api.github.com/users/chppppp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chppppp/subscriptions", "organizations_url": "https://api.github.com/users/chppppp/orgs", "repos_url": "https://api.github.com/users/chppppp/repos", "events_url": "https://api.github.com/users/chppppp/events{/privacy}", "received_events_url": "https://api.github.com/users/chppppp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-11T18:25:46Z", "updated_at": "2017-01-11T19:02:52Z", "closed_at": "2017-01-11T19:02:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): sandbox\r\n- PayPal-Debug-ID(s) (from any logs): none\r\n- Version of Python used: 2.7\r\n- SDK Version: latest\r\n\r\n### Issue Description\r\n\r\nI put my REST API ID and Secret into paypal_config.py but all of my sandbox and live creds fail. Is this expected behavior? Is there a way to see an actual detailed error message in this?\r\n\r\nError: Invalid username or password \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/179", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/179/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/179/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/179", "id": 196311938, "node_id": "MDU6SXNzdWUxOTYzMTE5Mzg=", "number": 179, "title": "WebhookEvent.verify() keeps failing.", "user": {"login": "Fudster", "id": 5642609, "node_id": "MDQ6VXNlcjU2NDI2MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5642609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fudster", "html_url": "https://github.com/Fudster", "followers_url": "https://api.github.com/users/Fudster/followers", "following_url": "https://api.github.com/users/Fudster/following{/other_user}", "gists_url": "https://api.github.com/users/Fudster/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fudster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fudster/subscriptions", "organizations_url": "https://api.github.com/users/Fudster/orgs", "repos_url": "https://api.github.com/users/Fudster/repos", "events_url": "https://api.github.com/users/Fudster/events{/privacy}", "received_events_url": "https://api.github.com/users/Fudster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-19T01:00:13Z", "updated_at": "2018-01-09T19:58:49Z", "closed_at": "2016-12-22T02:42:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): Live\r\n- PayPal-Debug-ID(s) (from any logs):\r\n- Version of Python used: Python3\r\n- SDK Version: latest?\r\n\r\n### Issue Description\r\nI have the following code in flask\r\n```\r\n@app.route('/hook', methods=['GET', 'POST'])\r\n def hook():\r\n    event_body = flask.request.get_json()\r\n    event_body2 = str(event_body)\r\n    transmission_id = flask.request.headers['Paypal-Transmission-Id']\r\n    timestamp = flask.request.headers['Paypal-Transmission-Time']\r\n    webhook_id = \"5D775547EB8632131\"\r\n    actual_signature = flask.request.headers['Paypal-Transmission-Sig']\r\n    cert_url = flask.request.headers['Paypal-Cert-Url']\r\n    auth_algo = flask.request.headers['PayPal-Auth-Algo']\r\n    \r\n    response = WebhookEvent.verify(\r\n    transmission_id, timestamp, webhook_id, event_body2, cert_url, actual_signature, auth_algo)\r\n    ##This is for debugging purposes.\r\n    print(transmission_id, timestamp, webhook_id, event_body2, cert_url, actual_signature, auth_algo)\r\n    print(response)\r\n    return ('', 200) \r\n ```\r\n\r\nResult: \r\n\r\n```  \r\n[('rsa routines', 'INT_RSA_VERIFY', 'bad signature')]\r\nf565f1c0-c585-11e6-a9b4-6d0fbb177076 2016-12-19T00:56:21Z 5D775547EB8632131 {'id': 'WH-6DV15051B6532453R-8L780555V8880535E', 'event_version': '1.0', 'create_time': '2016-12-19T00:56:21Z', 'resource': {'invoice': {'metadata': {'cancelledDate': None, 'cancelledBy': None, 'lastSentDate': '2016-12-18 14:25:24 PST', 'lastUpdatedBy': None, 'createdBy': None, 'lastSentBy': None, 'payerViewUrl': None, 'lastUpdatedDate': '2016-12-18 14:26:20 PST', 'firstSentDate': '2016-12-18 14:25:24 PST', 'createdDate': '2016-12-18 14:25:24 PST'}, 'id': 'INV2-T56D-X7T5-WU56-WAQY', 'taxInclusive': False, 'logoUrl': None, 'tip': None, 'shippingInfo': None, 'currencyCode': None, 'discount': None, 'paidAmount': {'other': {'currencyCode': 'USD', 'value': '0.08'}, 'paypal': None}, 'merchantInfo': {'address': None, 'additionalInfo': None, 'fax': None, 'taxId': None, 'email': 'fudster777@gmail.com', 'additionalInfoLabel': None, 'businessName': None, 'phone': None, 'lastName': None, 'website': None, 'firstName': None}, 'taxCalculatedAfterDiscount': False, 'referrerCode': None, 'minimumAmountDue': None, 'number': '0005', 'invoiceDateTime': None, 'status': 'MARKED_AS_REFUNDED', 'shipping': None, 'custom': None, 'uri': None, 'invoiceDate': '2016-12-18 PST', 'ccInfo': None, 'merchantMemo': None, 'templateId': 'TEMP-3D07347177101702G', 'terms': None, 'note': None, 'reference': None, 'allowPartialPayments': None, 'refunds': [{'date': '2016-12-18 16:55:37 PST', 'type': 'EXTERNAL', 'amount': {'currencyCode': 'USD', 'value': '0.08'}, 'transactionId': None, 'note': None}], 'refundedAmount': {'other': {'currencyCode': 'USD', 'value': '0.08'}, 'paypal': None}, 'additionalData': None, 'billingInfo': [{'notificationPreference': None, 'website': None, 'address': None, 'additionalInfo': None, 'fax': None, 'language': None, 'email': 'test@exmaple.com', 'additionalInfoLabel': None, 'businessName': None, 'phone': None, 'lastName': None, 'firstName': None}], 'payments': [{'transactionType': None, 'date': '2016-12-18 00:00:00 PST', 'note': 'Dev test\\r\\n', 'amount': {'currencyCode': 'USD', 'value': '0.08'}, 'type': 'EXTERNAL', 'transactionId': None, 'method': 'OTHER'}], 'totalAmount': {'currencyCode': 'USD', 'value': '0.08'}, 'attachments': None, 'paymentTerm': None, 'links': None, 'items': [{'quantity': 1.0, 'imageUrl': None, 'name': 'Twitter Followers - High Quality', 'tax': None, 'description': None, 'unitOfMeasure': None, 'discount': None, 'date': None, 'unitPrice': {'currencyCode': 'USD', 'value': '0.08'}}]}}, 'resource_type': 'invoices', 'links': [{'method': 'GET', 'rel': 'self', 'href': 'https://api.paypal.com/v1/notifications/webhooks-events/WH-6DV15051B6532453R-8L780555V8880535E'}, {'method': 'POST', 'rel': 'resend', 'href': 'https://api.paypal.com/v1/notifications/webhooks-events/WH-6DV15051B6532453R-8L780555V8880535E/resend'}], 'summary': 'An invoice has been refunded', 'event_type': 'INVOICING.INVOICE.REFUNDED'} https://api.paypal.com/v1/notifications/certs/CERT-360caa42-fca2a594-df8cd2d5 ABMVO9pxUZ7hmrHbJ2KdmU9a6LoIRb6SVzUFbyF5n6WnwFIuTNtYkBm1lby06W6CLs+wYB52DKaYUlYTY9z9UUsUSKO76Al2TOuQ+F89ZFBbmP22+1vHzPrCWlKvCMbm1GRFe9roGvP7JUe591EAOADsm4KBc34gWa78Zs4CjjHnvGZp57UR1b9x6z3U32M0IWwNr6QWHb/mMaZl9B6n6p8KvC13OsH4LeChmxKZzarO9Ysvlq05SLKYOXPVswMxVXUHWgOWvNcW+1g3Pa4QFGvExwi6+v8DX/sK0aSQxOrAI+80k5DrJLXFO6rKtml9TbHn+1jFQhTUX660sovgnQ== SHA256withRSA\r\nFalse\r\n ``` \r\n\r\n\r\nAm I doing something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/178", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/178/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/178/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/178", "id": 196041307, "node_id": "MDU6SXNzdWUxOTYwNDEzMDc=", "number": 178, "title": "Agreement approval_url does not work with checkout.js V4.0.0", "user": {"login": "WayneUong", "id": 8436742, "node_id": "MDQ6VXNlcjg0MzY3NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8436742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WayneUong", "html_url": "https://github.com/WayneUong", "followers_url": "https://api.github.com/users/WayneUong/followers", "following_url": "https://api.github.com/users/WayneUong/following{/other_user}", "gists_url": "https://api.github.com/users/WayneUong/gists{/gist_id}", "starred_url": "https://api.github.com/users/WayneUong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WayneUong/subscriptions", "organizations_url": "https://api.github.com/users/WayneUong/orgs", "repos_url": "https://api.github.com/users/WayneUong/repos", "events_url": "https://api.github.com/users/WayneUong/events{/privacy}", "received_events_url": "https://api.github.com/users/WayneUong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-16T11:43:25Z", "updated_at": "2017-01-05T20:28:52Z", "closed_at": "2017-01-05T20:28:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): Sandbox\r\n- PayPal-Debug-ID(s) (from any logs):\r\n- Version of Python used: latest\r\n- SDK Version: latest\r\n\r\n### Issue Description\r\n\r\nI used sample code to create a plan and agreement. Then use the latest checkout.js to process the token to redirect user to approve it. After the user clicked `Agree & Continue`, the popup just quits and goes `onCancel` callback is fired. `onAuthorize` is never called.\r\n\r\n> Please include as many details (logs, steps to reproduce, frameworks/dependencies) as you can to help us reproduce this issue faster.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/177", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/177/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/177/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/177", "id": 195955588, "node_id": "MDU6SXNzdWUxOTU5NTU1ODg=", "number": 177, "title": "express checkout url for aggreement redirects to the legacy non-responsive checkout", "user": {"login": "WayneUong", "id": 8436742, "node_id": "MDQ6VXNlcjg0MzY3NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8436742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WayneUong", "html_url": "https://github.com/WayneUong", "followers_url": "https://api.github.com/users/WayneUong/followers", "following_url": "https://api.github.com/users/WayneUong/following{/other_user}", "gists_url": "https://api.github.com/users/WayneUong/gists{/gist_id}", "starred_url": "https://api.github.com/users/WayneUong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WayneUong/subscriptions", "organizations_url": "https://api.github.com/users/WayneUong/orgs", "repos_url": "https://api.github.com/users/WayneUong/repos", "events_url": "https://api.github.com/users/WayneUong/events{/privacy}", "received_events_url": "https://api.github.com/users/WayneUong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-16T00:52:03Z", "updated_at": "2017-01-09T02:11:54Z", "closed_at": "2017-01-09T02:11:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): Sandbox\r\n- PayPal-Debug-ID(s) (from any logs): 339189c7540a5, 339189c7540a5\r\n- Version of Python used: 2.7\r\n- SDK Version: latest\r\n\r\n### Issue Description\r\n\r\nUsing sample code, I created an approval redirect link:\r\nhttps://www.sandbox.paypal.com/cgi-bin/webscr?cmd=_express-checkout&token=EC-0TT81510DJ312244S\r\n\r\nIt should shows the pretty express checkout screen, but instead it redirects to the old ugly one:\r\nhttps://www.sandbox.paypal.com/us/cgi-bin/webscr?cmd=_flow&SESSION=p6zYAIG4wldkE4A41uS8J2qsT1Q34XxQ4vIsnDfCZX7jzmujUyznhue7Pn4&dispatch=50a222a57771920b6a3d7b606239e4d529b525e0b7e69bf0224adecfb0124e9b61f737ba21b0819862118003bc2f4b4f47f01ef0a11094f0\r\n\r\nWorks fine with payments. Only redirects with agreements.\r\n\r\n> Please include as many details (logs, steps to reproduce, frameworks/dependencies) as you can to help us reproduce this issue faster.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/175", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/175/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/175/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/175", "id": 190826114, "node_id": "MDU6SXNzdWUxOTA4MjYxMTQ=", "number": 175, "title": "Webhook verification always fails.", "user": {"login": "kaste", "id": 8558, "node_id": "MDQ6VXNlcjg1NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaste", "html_url": "https://github.com/kaste", "followers_url": "https://api.github.com/users/kaste/followers", "following_url": "https://api.github.com/users/kaste/following{/other_user}", "gists_url": "https://api.github.com/users/kaste/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaste/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaste/subscriptions", "organizations_url": "https://api.github.com/users/kaste/orgs", "repos_url": "https://api.github.com/users/kaste/repos", "events_url": "https://api.github.com/users/kaste/events{/privacy}", "received_events_url": "https://api.github.com/users/kaste/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2016-11-21T20:24:51Z", "updated_at": "2018-05-02T15:44:50Z", "closed_at": "2017-01-04T15:04:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): sandbox\r\n- PayPal-Debug-ID(s) (from any logs):\r\n- Version of Python used: 2.7.11\r\n- SDK Version: \r\n\r\n### Issue Description\r\n\r\nI'm trying to verify a webhook event using the REST API https://developer.paypal.com/docs/api/webhooks/#verify-webhook-signature\r\n\r\nFollowing naive python code (using Flask)\r\n\r\n```\r\n@app.route('/paypal_receipt', methods=['POST'])\r\ndef ack_receipt():\r\n    payload = {\r\n        'auth_algo': request.headers['PAYPAL-AUTH-ALGO'],\r\n        'cert_url': request.headers['PAYPAL-CERT-URL'],\r\n        'transmission_id': request.headers['PAYPAL-TRANSMISSION-ID'],\r\n        'transmission_sig': request.headers['PAYPAL-TRANSMISSION-SIG'],\r\n        'transmission_time': request.headers['PAYPAL-TRANSMISSION-TIME'],\r\n        'webhook_id': \"5L518819FA0214926\",\r\n        'webhook_event': request.json\r\n    }\r\n\r\n    rv = paypal.post('/v1/notifications/verify-webhook-signature', payload)\r\n\r\n    logger.info('response:: %s' % rv)\r\n    try:\r\n        verification_status = rv['verification_status']\r\n    except KeyError:\r\n        abort(400)\r\n\r\n    if verification_status != 'SUCCESS':\r\n        logger.info('Verification failed')\r\n        abort(401)\r\n\r\n    queue.task(handle_receipt, request.json).enqueue()\r\n\r\n    return 'Ok', 200\r\n\r\n```\r\nUnfortunately `verification_status` is always `FAILURE`. What am I doing wrong here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/174", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/174/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/174/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/174", "id": 188652842, "node_id": "MDU6SXNzdWUxODg2NTI4NDI=", "number": 174, "title": "Send Money Transaction Details", "user": {"login": "dsanders11", "id": 5820654, "node_id": "MDQ6VXNlcjU4MjA2NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5820654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dsanders11", "html_url": "https://github.com/dsanders11", "followers_url": "https://api.github.com/users/dsanders11/followers", "following_url": "https://api.github.com/users/dsanders11/following{/other_user}", "gists_url": "https://api.github.com/users/dsanders11/gists{/gist_id}", "starred_url": "https://api.github.com/users/dsanders11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dsanders11/subscriptions", "organizations_url": "https://api.github.com/users/dsanders11/orgs", "repos_url": "https://api.github.com/users/dsanders11/repos", "events_url": "https://api.github.com/users/dsanders11/events{/privacy}", "received_events_url": "https://api.github.com/users/dsanders11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-11T00:06:37Z", "updated_at": "2016-11-29T22:45:46Z", "closed_at": "2016-11-29T22:45:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): Live\r\n- Version of Python used: 2.7.11\r\n- SDK Version: 1.11.7\r\n\r\n### Issue Description\r\n\r\nThere appears to be no way with the API to access needed information about money sent to a user via 'Send Money' on the PayPal website. This is often used to refund an unsatisfied customer after the ability to refund the original transaction has expired.\r\n\r\nCurrently the transaction ID which PayPal associates with these transactions can only be looked up via the `Sale` endpoint, which provides frustrating little information. Compared to the web view on the PayPal website there is almost no detail regarding the transaction. Most frustratingly PayPal recently changed to showing the amount sent in the local currency, and there is no way to get from the information returned on the `Sale` endpoint to the amount in USD which was actually used to fund the transaction.\r\n\r\nThis is a gaping hole in the current API and extremely frustrating. Is there any plan to fix this gap and provide the same information as is seen on the web view?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/171", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/171/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/171/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/171", "id": 187694765, "node_id": "MDU6SXNzdWUxODc2OTQ3NjU=", "number": 171, "title": "Critical problem with token_hash in Api", "user": {"login": "amir-hadi", "id": 234253, "node_id": "MDQ6VXNlcjIzNDI1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/234253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amir-hadi", "html_url": "https://github.com/amir-hadi", "followers_url": "https://api.github.com/users/amir-hadi/followers", "following_url": "https://api.github.com/users/amir-hadi/following{/other_user}", "gists_url": "https://api.github.com/users/amir-hadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/amir-hadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amir-hadi/subscriptions", "organizations_url": "https://api.github.com/users/amir-hadi/orgs", "repos_url": "https://api.github.com/users/amir-hadi/repos", "events_url": "https://api.github.com/users/amir-hadi/events{/privacy}", "received_events_url": "https://api.github.com/users/amir-hadi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824753, "node_id": "MDU6TGFiZWwxODA4MjQ3NTM=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-bug", "name": "sdk-bug", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-07T12:03:52Z", "updated_at": "2017-01-09T16:27:56Z", "closed_at": "2017-01-09T16:27:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): Live\r\n- PayPal-Debug-ID(s) (from any logs): Many\r\n- Version of Python used: 3.4\r\n- SDK Version: 1.9.0\r\n\r\n### Issue Description\r\n\r\nWe are using PayPal for 'classic' payments using the redirect method and now in a new app using future payments. This mixture of services used is dangerous, since the API object is global and caches a value, that maybe shouldn't be cached.\r\n\r\nThis is the steps to reproduce:\r\n1. Add a PayPal future payment method using the authorization code from the mobile device in `api.get_refresh_token(auth_code)`\r\n1.1. This will call the `get_token_hash` method and pass on the `authorization_code`.\r\n2. Create a Authorization/Payment (in the name of User A) using that `refresh_token` and a valid `correlation_id`.\r\n2.2. This will call `get_token_hash` with the `refresh_token` of a user, and the Authorization/Payment will be done in his name\r\n3. Create another Payment in the name of User B, without a `refresh_token`. This should create a 'classic' payment using a rediect to PayPal.\r\n3.1. But the token_hash of the user before is still cached in the global api object. Through this caching the token_hash of the user A will be sent for the Payment of user B.\r\n3.2. Somehow this leads to that the Payment of user B is instantly payed using the details of user A.\r\n\r\nThe only workaround of this is creating a new API object per Payment and passing the new API object into the `Payment.create` method, so no caching occurs.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/170", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/170/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/170/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/170", "id": 186959861, "node_id": "MDU6SXNzdWUxODY5NTk4NjE=", "number": 170, "title": "Resource.all() can't be iterated if empty", "user": {"login": "melinath", "id": 299979, "node_id": "MDQ6VXNlcjI5OTk3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/299979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/melinath", "html_url": "https://github.com/melinath", "followers_url": "https://api.github.com/users/melinath/followers", "following_url": "https://api.github.com/users/melinath/following{/other_user}", "gists_url": "https://api.github.com/users/melinath/gists{/gist_id}", "starred_url": "https://api.github.com/users/melinath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/melinath/subscriptions", "organizations_url": "https://api.github.com/users/melinath/orgs", "repos_url": "https://api.github.com/users/melinath/repos", "events_url": "https://api.github.com/users/melinath/events{/privacy}", "received_events_url": "https://api.github.com/users/melinath/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824745, "node_id": "MDU6TGFiZWwxODA4MjQ3NDU=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-enhancement", "name": "sdk-enhancement", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-03T01:11:21Z", "updated_at": "2019-12-20T11:22:01Z", "closed_at": "2019-12-20T11:22:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): Both, presumably\r\n- PayPal-Debug-ID(s) (from any logs): N/A\r\n- Version of Python used: 3.5\r\n- SDK Version: 1.11.7\r\n\r\n### Issue Description\r\n\r\n> Please include as many details (logs, steps to reproduce, frameworks/dependencies) as you can to help us reproduce this issue faster.\r\n\r\nI'm trying to create a web experience object \"singleton\" - i.e. I want to have a web experience object and create it if it doesn't exist. Here's the code I'm using:\r\n\r\n```python\r\ndef get_web_profile():\r\n    profiles = paypalrestsdk.WebProfile.all()\r\n    profile = None\r\n    for p in profiles:\r\n        if p.name == WEB_PROFILE_NAME:\r\n            profile = p\r\n            break\r\n\r\n    if not profile:\r\n        profile = create_web_profile()\r\n\r\n    return profile\r\n```\r\n\r\nLeaving aside that it's ridiculous I have to do this - this code doesn't work (though it should). Specifically, it fails when I try to iterate over the (empty, because I haven't created any yet) profiles object. More specifically, I get the following error:\r\n\r\n```\r\nFile <redacted> in get_web_profile\r\n    for p in profiles:\r\n  File \"<redacted>/paypalrestsdk/resource.py\", line 80, in __getitem__\r\n    return self.__data__[key]\r\n```\r\n\r\nSo basically, iteration is implemented with `__getitem__`. I suspect this may work when the list is populated, but if the list is empty, then `super(Resource, self).__setattr__('__data__', {})` (currently line 16) sets data to an empty dict, which isn't indexable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/169", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/169/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/169/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/169", "id": 186707961, "node_id": "MDU6SXNzdWUxODY3MDc5NjE=", "number": 169, "title": "Webhook validation fail when having CJK characters in invoice number", "user": {"login": "tokikanno", "id": 130347, "node_id": "MDQ6VXNlcjEzMDM0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/130347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tokikanno", "html_url": "https://github.com/tokikanno", "followers_url": "https://api.github.com/users/tokikanno/followers", "following_url": "https://api.github.com/users/tokikanno/following{/other_user}", "gists_url": "https://api.github.com/users/tokikanno/gists{/gist_id}", "starred_url": "https://api.github.com/users/tokikanno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tokikanno/subscriptions", "organizations_url": "https://api.github.com/users/tokikanno/orgs", "repos_url": "https://api.github.com/users/tokikanno/repos", "events_url": "https://api.github.com/users/tokikanno/events{/privacy}", "received_events_url": "https://api.github.com/users/tokikanno/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824753, "node_id": "MDU6TGFiZWwxODA4MjQ3NTM=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-bug", "name": "sdk-bug", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-02T04:07:47Z", "updated_at": "2017-01-09T16:27:34Z", "closed_at": "2017-01-09T16:27:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### General Information\r\n\r\n- Mode (Sandbox/Live): Live\r\n- PayPal-Debug-ID(s) (from any logs): None (client side SDK error)\r\n- Version of Python used: Python 2.7.6 (default, Jun 22 2015, 17:58:13) [GCC 4.8.2] on linux2\r\n- SDK Version: 1.11.7\r\n\r\n### Issue Description\r\n\r\n```python\r\n File \"/var/www/****************/paypal.py\", line 322, in _verify_webhook_request\r\n    transmission_auth_algo\r\n  File \"/usr/local/lib/python2.7/dist-packages/paypalrestsdk/notifications.py\", line 145, in verify\r\n    return WebhookEvent._verify_certificate(cert) and WebhookEvent._verify_signature(transmission_id, timestamp, webhook_id, event_body, cert, actual_sig, auth_algo)\r\n  File \"/usr/local/lib/python2.7/dist-packages/paypalrestsdk/notifications.py\", line 122, in _verify_signature\r\n    expected_sig = WebhookEvent._get_expected_sig(transmission_id, timestamp, webhook_id, event_body)\r\n  File \"/usr/local/lib/python2.7/dist-packages/paypalrestsdk/notifications.py\", line 53, in _get_expected_sig\r\n    expected_sig = transmission_id + \"|\" + timestamp + \"|\" + webhook_id + \"|\" + str(binascii.crc32(event_body.encode('utf-8')) & 0xffffffff)\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe6 in position 393: ordinal not in range(128)\r\n```\r\n\r\nIt crashed while processing the invoice_number field, this invoice number was written in CJK character.\r\n\r\n```\r\n\"invoice_number\": \"\u6e2c\u8a66\u6298\u8b93\u55ae\u81ea\u52d5\u5316\u8a02\u55ae\"\r\n```\r\n\r\nor\r\n\r\n```\r\ninvoice_number\":\"\\xe6\\xb8\\xac\\xe8\\xa9\\xa6\\xe6\\x8a\\x98\\xe8\\xae\\x93\\xe5\\x96\\xae\\xe8\\x87\\xaa\\xe5\\x8b\\x95\\xe5\\x8c\\x96\\xe8\\xa8\\x82\\xe5\\x96\\xae\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/168", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/168/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/168/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/168", "id": 183897756, "node_id": "MDU6SXNzdWUxODM4OTc3NTY=", "number": 168, "title": "Didn't receive payment with billing plan", "user": {"login": "amasty", "id": 1896832, "node_id": "MDQ6VXNlcjE4OTY4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1896832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amasty", "html_url": "https://github.com/amasty", "followers_url": "https://api.github.com/users/amasty/followers", "following_url": "https://api.github.com/users/amasty/following{/other_user}", "gists_url": "https://api.github.com/users/amasty/gists{/gist_id}", "starred_url": "https://api.github.com/users/amasty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amasty/subscriptions", "organizations_url": "https://api.github.com/users/amasty/orgs", "repos_url": "https://api.github.com/users/amasty/repos", "events_url": "https://api.github.com/users/amasty/events{/privacy}", "received_events_url": "https://api.github.com/users/amasty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-19T08:30:10Z", "updated_at": "2016-10-21T15:33:35Z", "closed_at": "2016-10-21T15:33:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Sandbox\n- PayPal-Debug-ID(s) (from any logs): \n- Version of Python used: 3.5.1\n- SDK Version: 1.11.7\n### Issue Description\n\nBilling plan\nID: P-3XU60145LM223782F2LHJLQA (27 usd per day)\n\nAgreement\nID: I-E0C4DG2LUYDW\n\nAfter execute agreement i received 1 payment.\nTransaction ID: 7X8115703P150521K\n\nIn message from IPN next payment date should be 'next_payment_date' : '03:00:00 Oct 18, 2016 PDT', \nToday 19 oct. I didn't receive any payment. \n\nAgreement is active. This from agreement object:\n\n```\n{\n  'state': 'Active',\n  ...\n  'next_billing_date': '2016-10-18T10:00:00Z',\n}\n```\n\nPDT time now\n1:36:04AM Wednesday, October 19, 2016\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/167", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/167/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/167/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/167", "id": 183432315, "node_id": "MDU6SXNzdWUxODM0MzIzMTU=", "number": 167, "title": "Invalid Path provided while update", "user": {"login": "amasty", "id": 1896832, "node_id": "MDQ6VXNlcjE4OTY4MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1896832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amasty", "html_url": "https://github.com/amasty", "followers_url": "https://api.github.com/users/amasty/followers", "following_url": "https://api.github.com/users/amasty/following{/other_user}", "gists_url": "https://api.github.com/users/amasty/gists{/gist_id}", "starred_url": "https://api.github.com/users/amasty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amasty/subscriptions", "organizations_url": "https://api.github.com/users/amasty/orgs", "repos_url": "https://api.github.com/users/amasty/repos", "events_url": "https://api.github.com/users/amasty/events{/privacy}", "received_events_url": "https://api.github.com/users/amasty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-17T14:31:09Z", "updated_at": "2017-03-17T23:30:47Z", "closed_at": "2017-03-17T23:30:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Sandbox\n- PayPal-Debug-ID(s) (from any logs): 751b71c96130a\n- Version of Python used: 3.5.1\n- SDK Version: 1.11.7\n### Issue Description\n\n```\n{'name': 'BUSINESS_VALIDATION_ERROR', 'message': 'Validation Error.', 'details': [{'issue': 'Invalid Path provided.', 'field': 'validation_error'}], 'information_link': 'https://developer.paypal.com/webapps/developer/docs/api/#BUSINESS_VALIDATION_ERROR', 'debug_id': '751b71c96130a'}\n```\n\nWhen i try update plan i got error.\n\nUpdating code:\n\n```\n        billing_plan_update_attributes = [\n            {\n                'op': 'replace',\n                'path': '/payment_definitions/{}'.format(payment_definitions_id),\n                'value': {\n                    'name': payment_definitions_name,\n                    'cycles': payment_definitions_cycles,\n                    'frequency': payment_definitions_frequency,\n                    'frequency_interval': payment_definitions_frequency_interval,\n                }\n            }\n        ]\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/166", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/166/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/166/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/166", "id": 182868418, "node_id": "MDU6SXNzdWUxODI4Njg0MTg=", "number": 166, "title": "WebHook.verify: OpenSSL.crypto.Error: [('rsa routines', 'INT_RSA_VERIFY', 'bad signature')]", "user": {"login": "ab77", "id": 2033996, "node_id": "MDQ6VXNlcjIwMzM5OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2033996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ab77", "html_url": "https://github.com/ab77", "followers_url": "https://api.github.com/users/ab77/followers", "following_url": "https://api.github.com/users/ab77/following{/other_user}", "gists_url": "https://api.github.com/users/ab77/gists{/gist_id}", "starred_url": "https://api.github.com/users/ab77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ab77/subscriptions", "organizations_url": "https://api.github.com/users/ab77/orgs", "repos_url": "https://api.github.com/users/ab77/repos", "events_url": "https://api.github.com/users/ab77/events{/privacy}", "received_events_url": "https://api.github.com/users/ab77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-13T18:44:57Z", "updated_at": "2016-10-15T17:26:15Z", "closed_at": "2016-10-15T17:26:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Both (but example given is for Sandbox)\n- PayPal-Debug-ID(s) (from any logs): HTTP_CORRELATION_ID: bc1774c113c00\n- Version of Python used: 2.7\n- SDK Version: Latest from GitHub\n### Issue Description\n\nThe example given in `samples/notifications/webhook-events/verify.py` verifies the signature baked into the script OK, however I am not able to verify any actual WebHook requests arriving from either Sandbox or Live PayPal environments (`[('rsa routines', 'INT_RSA_VERIFY', 'bad signature')]`).\n\n(relevant) HTTP headers:\n\n```\n[Thu Oct 13 17:58:14.345695 2016] [:error] [pid 16469]              'HTTP_CORRELATION_ID': 'bc1774c113c00',\n[Thu Oct 13 17:58:14.345761 2016] [:error] [pid 16469]              'HTTP_PAYPAL_AUTH_ALGO': 'SHA256withRSA',\n[Thu Oct 13 17:58:14.345792 2016] [:error] [pid 16469]              'HTTP_PAYPAL_AUTH_VERSION': 'v2',\n[Thu Oct 13 17:58:14.345868 2016] [:error] [pid 16469]              'HTTP_PAYPAL_CERT_URL': 'https://api.sandbox.paypal.com/v1/notifications/certs/CERT-360caa42-fca2a594-a5cafa77',\n[Thu Oct 13 17:58:14.345926 2016] [:error] [pid 16469]              'HTTP_PAYPAL_TRANSMISSION_ID': 'ac7f0d20-9169-11e6-a6f4-77339302725b',\n[Thu Oct 13 17:58:14.346083 2016] [:error] [pid 16469]              'HTTP_PAYPAL_TRANSMISSION_SIG': 'dc267aB+RlxLiMXvvgG7UDQeVb7X1DKmDDmSvA0yTaJz3nKA59E3CikkHlWmy++9DsWdm3XX+o5x5q6i2RNSZSsK9a0+9cVKNwISMOp00qOAD+DCrlZUKKu/mPtvWCSyw6MzioCGROYbmgjCr+8IWfnEiJn5MvlAj18MtRU1zdgvSS1e1KcJgXkWpX6Ey03EKEBwV//ouxxcOEwTj/JrS8wH7j0VNhQ1eqNKkWyJdLfthxEcP+VYT5NFHzvuhLu3Cp0hnwHF0k/c3qEkErfvBY9Rko8rHzHG6bg1AQBhVi9wCPHFQqBpGlZX4URilGx80sb/3hgByOiOA2Ew7StAqA==',\n[Thu Oct 13 17:58:14.346119 2016] [:error] [pid 16469]              'HTTP_PAYPAL_TRANSMISSION_TIME': '2016-10-13T17:22:53Z',\n[Thu Oct 13 17:58:14.346157 2016] [:error] [pid 16469]              'HTTP_USER_AGENT': 'PayPal/AUHD-208.0-25552773'\n```\n\nWebHook HTTP POST body (raw):\n\n```\n{\"id\":\"WH-5BF15834R7517054P-9WJ831867V640635C\",\"event_version\":\"1.0\",\"create_time\":\"2016-10-13T17:22:53Z\",\"resource_type\":\"Agreement\",\"event_type\":\"BILLING.SUBSCRIPTION.CREATED\",\"summary\":\"A billing subscription was created\",\"resource\":{\"agreement_details\":{\"outstanding_balance\":{\"value\":\"0.00\"},\"num_cycles_remaining\":\"1\",\"num_cycles_completed\":\"0\",\"next_billing_date\":\"2016-10-14T10:00:00Z\",\"final_payment_due_date\":\"1970-01-01T00:00:00Z\",\"failed_payment_count\":\"0\"},\"description\":\"7e12cb2cf2f2c6b88bfaa995522e688a352ab43a3664b71090be31d564c590\",\"links\":[{\"href\":\"api.sandbox.paypal.com/v1/payments/billing-agreements/I-S39EUDDY56AF\",\"rel\":\"self\",\"method\":\"GET\"}],\"shipping_address\":{\"recipient_name\":\"test buyer\",\"line1\":\"1 Main Terrace\",\"city\":\"Wolverhampton\",\"state\":\"West Midlands\",\"postal_code\":\"W12 4LQ\",\"country_code\":\"GB\"},\"id\":\"I-S39EUDDY56AF\",\"state\":\"Active\",\"payer\":{\"payment_method\":\"paypal\",\"status\":\"verified\",\"payer_info\":{\"email\":\"anton.belodedenko-buyer@gmail.com\",\"first_name\":\"test\",\"last_name\":\"buyer\",\"payer_id\":\"U4HSQBT9WCCES\",\"shipping_address\":{\"recipient_name\":\"test buyer\",\"line1\":\"1 Main Terrace\",\"city\":\"Wolverhampton\",\"state\":\"West Midlands\",\"postal_code\":\"W12 4LQ\",\"country_code\":\"GB\"}}},\"plan\":{\"curr_code\":\"EUR\",\"links\":[],\"payment_definitions\":[{\"type\":\"TRIAL\",\"frequency\":\"Month\",\"frequency_interval\":\"1\",\"amount\":{\"value\":\"0.00\"},\"cycles\":\"1\",\"charge_models\":[{\"type\":\"TAX\",\"amount\":{\"value\":\"0.00\"}},{\"type\":\"SHIPPING\",\"amount\":{\"value\":\"0.00\"}}]},{\"type\":\"REGULAR\",\"frequency\":\"Month\",\"frequency_interval\":\"1\",\"amount\":{\"value\":\"9.95\"},\"cycles\":\"0\",\"charge_models\":[{\"type\":\"TAX\",\"amount\":{\"value\":\"0.00\"}},{\"type\":\"SHIPPING\",\"amount\":{\"value\":\"0.00\"}}]}],\"merchant_preferences\":{\"setup_fee\":{\"value\":\"0.00\"},\"auto_bill_amount\":\"YES\",\"max_fail_attempts\":\"0\"}},\"start_date\":\"2016-10-14T07:00:00Z\"},\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v1/notifications/webhooks-events/WH-5BF15834R7517054P-9WJ831867V640635C\",\"rel\":\"self\",\"method\":\"GET\"},{\"href\":\"https://api.sandbox.paypal.com/v1/notifications/webhooks-events/WH-5BF15834R7517054P-9WJ831867V640635C/resend\",\"rel\":\"resend\",\"method\":\"POST\"}]}\n```\n\nSubstituting the below into the `verify.py` sample, gives `OpenSSL.crypto.Error: [('rsa routines', 'INT_RSA_VERIFY', 'bad signature')]`:\n\n```\nevent_body = '{\"id\":\"WH-5BF15834R7517054P-9WJ831867V640635C\",\"event_version\":\"1.0\",\"create_time\":\"2016-10-13T17:22:53Z\",\"resource_type\":\"Agreement\",\"event_type\":\"BILLING.SUBSCRIPTION.CREATED\",\"summary\":\"A billing subscription was created\",\"resource\":{\"agreement_details\":{\"outstanding_balance\":{\"value\":\"0.00\"},\"num_cycles_remaining\":\"1\",\"num_cycles_completed\":\"0\",\"next_billing_date\":\"2016-10-14T10:00:00Z\",\"final_payment_due_date\":\"1970-01-01T00:00:00Z\",\"failed_payment_count\":\"0\"},\"description\":\"7e12cb2cf2f2c6b88bfaa995522e688a352ab43a3664b71090be31d564c590\",\"links\":[{\"href\":\"api.sandbox.paypal.com/v1/payments/billing-agreements/I-S39EUDDY56AF\",\"rel\":\"self\",\"method\":\"GET\"}],\"shipping_address\":{\"recipient_name\":\"test buyer\",\"line1\":\"1 Main Terrace\",\"city\":\"Wolverhampton\",\"state\":\"West Midlands\",\"postal_code\":\"W12 4LQ\",\"country_code\":\"GB\"},\"id\":\"I-S39EUDDY56AF\",\"state\":\"Active\",\"payer\":{\"payment_method\":\"paypal\",\"status\":\"verified\",\"payer_info\":{\"email\":\"anton.belodedenko-buyer@gmail.com\",\"first_name\":\"test\",\"last_name\":\"buyer\",\"payer_id\":\"U4HSQBT9WCCES\",\"shipping_address\":{\"recipient_name\":\"test buyer\",\"line1\":\"1 Main Terrace\",\"city\":\"Wolverhampton\",\"state\":\"West Midlands\",\"postal_code\":\"W12 4LQ\",\"country_code\":\"GB\"}}},\"plan\":{\"curr_code\":\"EUR\",\"links\":[],\"payment_definitions\":[{\"type\":\"TRIAL\",\"frequency\":\"Month\",\"frequency_interval\":\"1\",\"amount\":{\"value\":\"0.00\"},\"cycles\":\"1\",\"charge_models\":[{\"type\":\"TAX\",\"amount\":{\"value\":\"0.00\"}},{\"type\":\"SHIPPING\",\"amount\":{\"value\":\"0.00\"}}]},{\"type\":\"REGULAR\",\"frequency\":\"Month\",\"frequency_interval\":\"1\",\"amount\":{\"value\":\"9.95\"},\"cycles\":\"0\",\"charge_models\":[{\"type\":\"TAX\",\"amount\":{\"value\":\"0.00\"}},{\"type\":\"SHIPPING\",\"amount\":{\"value\":\"0.00\"}}]}],\"merchant_preferences\":{\"setup_fee\":{\"value\":\"0.00\"},\"auto_bill_amount\":\"YES\",\"max_fail_attempts\":\"0\"}},\"start_date\":\"2016-10-14T07:00:00Z\"},\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v1/notifications/webhooks-events/WH-5BF15834R7517054P-9WJ831867V640635C\",\"rel\":\"self\",\"method\":\"GET\"},{\"href\":\"https://api.sandbox.paypal.com/v1/notifications/webhooks-events/WH-5BF15834R7517054P-9WJ831867V640635C/resend\",\"rel\":\"resend\",\"method\":\"POST\"}]}'\ntransmission_id = \"ac7f0d20-9169-11e6-a6f4-77339302725b\"\ntimestamp = \"2016-10-13T17:22:53Z\"\nwebhook_id = \"WH-5BF15834R7517054P-9WJ831867V640635C\"\nactual_signature = \"dc267aB+RlxLiMXvvgG7UDQeVb7X1DKmDDmSvA0yTaJz3nKA59E3CikkHlWmy++9DsWdm3XX+o5x5q6i2RNSZSsK9a0+9cVKNwISMOp00qOAD+DCrlZUKKu/mPtvWCSyw6MzioCGROYbmgjCr+8IWfnEiJn5MvlAj18MtRU1zdgvSS1e1KcJgXkWpX6Ey03EKEBwV//ouxxcOEwTj/JrS8wH7j0VNhQ1eqNKkWyJdLfthxEcP+VYT5NFHzvuhLu3Cp0hnwHF0k/c3qEkErfvBY9Rko8rHzHG6bg1AQBhVi9wCPHFQqBpGlZX4URilGx80sb/3hgByOiOA2Ew7StAqA==\"\ncert_url = 'https://api.sandbox.paypal.com/v1/notifications/certs/CERT-360caa42-fca2a594-a5cafa77'\nauth_algo = 'sha256WithRSAEncryption'\n```\n\nThe same occurs in Live. Any ideas what I am doing wrong?\n\nCheers!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/165", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/165/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/165/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/165", "id": 182749081, "node_id": "MDU6SXNzdWUxODI3NDkwODE=", "number": 165, "title": "Unable to create payment 500 error (sandbox)", "user": {"login": "Godod", "id": 595229, "node_id": "MDQ6VXNlcjU5NTIyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/595229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Godod", "html_url": "https://github.com/Godod", "followers_url": "https://api.github.com/users/Godod/followers", "following_url": "https://api.github.com/users/Godod/following{/other_user}", "gists_url": "https://api.github.com/users/Godod/gists{/gist_id}", "starred_url": "https://api.github.com/users/Godod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Godod/subscriptions", "organizations_url": "https://api.github.com/users/Godod/orgs", "repos_url": "https://api.github.com/users/Godod/repos", "events_url": "https://api.github.com/users/Godod/events{/privacy}", "received_events_url": "https://api.github.com/users/Godod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-13T10:11:34Z", "updated_at": "2016-10-14T17:23:09Z", "closed_at": "2016-10-14T17:23:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Mode (Sandbox/Live): Sandbox\n- PayPal-Debug-ID(s) (from any logs): f3468582a4df\n- Version of Python used: 3.5.2\n- SDK Version: 1.11.7\n\nHello all. I've try to create payment with this data:\n\n``` python\n{'redirect_urls': {'return_url': 'http://127.0.0.1:8000/processing/paypal/review/', 'cancel_url': 'http://127.0.0.1:8000/sale/100000/products/?p=100000-2&q=1'}, 'transactions': [{'order_url': 'http://127.0.0.1:8000/sale/100000/products/?p=100000-2&q=1', 'item_list': {'items': [{'price': '3.99', 'quantity': '1', 'tax': '0.84', 'description': 'Test product', 'currency': 'EUR', 'name': 'Test product'}]}, 'amount': {'total': '4.83', 'currency': 'EUR', 'details': {'subtotal': '3.99', 'shipping': '0', 'tax': '0.84'}}, 'notify_url': 'http://127.0.0.1:8000/processing/paypal/notify/', 'invoice_number': 'AA00125'}], 'intent': 'order', 'payer': {'payer_info': {'billing_address': {'phone': '+370123123', 'city': 'City', 'line1': 'Street', 'country_code': 'LT', 'postal_code': '12345'}}, 'payment_method': 'paypal'}}\n```\n\nBut paypal returned 500 error code. I had checked paypal docs and change only \"payment_method\" (available only credit_card instead of credit_card and paypal). And this continue 5-7 days. Before this 5-7 days all works. I nothing change in the code to create Payment. Where I've missing?\nThanks.\n\nP.S. Sorry for my bad English\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/164", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/164/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/164/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/164", "id": 181800239, "node_id": "MDU6SXNzdWUxODE4MDAyMzk=", "number": 164, "title": "Paypal returns 500 when creating a payment", "user": {"login": "blurrcat", "id": 2245575, "node_id": "MDQ6VXNlcjIyNDU1NzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2245575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blurrcat", "html_url": "https://github.com/blurrcat", "followers_url": "https://api.github.com/users/blurrcat/followers", "following_url": "https://api.github.com/users/blurrcat/following{/other_user}", "gists_url": "https://api.github.com/users/blurrcat/gists{/gist_id}", "starred_url": "https://api.github.com/users/blurrcat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blurrcat/subscriptions", "organizations_url": "https://api.github.com/users/blurrcat/orgs", "repos_url": "https://api.github.com/users/blurrcat/repos", "events_url": "https://api.github.com/users/blurrcat/events{/privacy}", "received_events_url": "https://api.github.com/users/blurrcat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-08T02:55:41Z", "updated_at": "2016-10-18T15:20:48Z", "closed_at": "2016-10-10T15:00:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Sandbox\n- PayPal-Debug-ID(s) (from any logs): 4ae18f0ad812e\n- Version of Python used: 3.5\n- SDK Version: 1.11.7\n### Issue Description\n\nPaypal returns 500 when I try to create a payment. The same code was working about 10 hours ago. This may be related to https://github.com/paypal/PayPal-PHP-SDK/issues/676. Though that issue is closed we're still experiencing this. Relevant traceback:\n\n```\nFile \"/usr/src/app/lucky/payment/paypal/api.py\", line 119, in post\n    if payment.create():\n  File \"/usr/local/lib/python3.5/site-packages/paypalrestsdk/resource.py\", line 163, in create\n    new_attributes = self.api.post(self.path, self.to_dict(), headers, refresh_token)\n  File \"/usr/local/lib/python3.5/site-packages/paypalrestsdk/api.py\", line 272, in post\n    return self.request(util.join_url(self.endpoint, action), 'POST', body=params or {}, headers=headers or {}, refresh_token=refresh_token)\n  File \"/usr/local/lib/python3.5/site-packages/paypalrestsdk/api.py\", line 164, in request\n    return self.http_call(url, method, data=json.dumps(body), headers=http_headers)\n  File \"/usr/local/lib/python3.5/site-packages/paypalrestsdk/api.py\", line 207, in http_call\n    return self.handle_response(response, response.content.decode('utf-8'))\n  File \"/usr/local/lib/python3.5/site-packages/paypalrestsdk/api.py\", line 236, in handle_response\n    raise exceptions.ServerError(response, content)\npaypalrestsdk.exceptions.ServerError: Failed. Response status: 500. Response message: Internal Server Error. Error message: {\"name\":\"INTERNAL_SERVICE_ERROR\",\"message\":\"An internal service error has occurred\",\"information_link\":\"https://developer.paypal.com/docs/api/#INTERNAL_SERVICE_ERROR\",\"debug_id\":\"4ae18f0ad812e\"}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/163", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/163/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/163/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/163", "id": 180720518, "node_id": "MDU6SXNzdWUxODA3MjA1MTg=", "number": 163, "title": "Agreements will not receive payment.sale.completed webhook if created before 8/23/16", "user": {"login": "mattLummus", "id": 6342564, "node_id": "MDQ6VXNlcjYzNDI1NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6342564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattLummus", "html_url": "https://github.com/mattLummus", "followers_url": "https://api.github.com/users/mattLummus/followers", "following_url": "https://api.github.com/users/mattLummus/following{/other_user}", "gists_url": "https://api.github.com/users/mattLummus/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattLummus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattLummus/subscriptions", "organizations_url": "https://api.github.com/users/mattLummus/orgs", "repos_url": "https://api.github.com/users/mattLummus/repos", "events_url": "https://api.github.com/users/mattLummus/events{/privacy}", "received_events_url": "https://api.github.com/users/mattLummus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-03T19:08:27Z", "updated_at": "2017-02-21T20:48:06Z", "closed_at": "2016-10-10T15:02:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Issue Description\n\nVia #132 [(Specific comment here...)](https://github.com/paypal/PayPal-Python-SDK/issues/132#issuecomment-251130368)\n\n> @ppmtscory  ...the billing agreement ID would be included in the PAYMENT.SALE.COMPLETED webhook. These events will only be sent for subscriptions that were set up after this went live which was towards the end of Aug...\n\nWhat this means is that currently in order for an existing application to use this webhook:\n\n1) The application will need to cancel their previous subscriptions\n2) Notify their customers that their subscriptions have been canceled and that they will need to re-execute a new one\n3) Their customers have to actually take the effort to go re-execute before the next payment cycle\n\nIf the customer doesn't follow through, the application will lose revenue.\n\nI have not seen this documented anywhere previously and this webhook has been live for 6 weeks at this point. \n\nThis issue may also result in a false positive because setting up new agreements during testing can result in expected behavior but previous agreements in production environments will be affected.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/162", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/162/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/162/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/162", "id": 180500821, "node_id": "MDU6SXNzdWUxODA1MDA4MjE=", "number": 162, "title": "Is there a way to use parallel payments in python-sdk?", "user": {"login": "BrittMcDanel", "id": 9492093, "node_id": "MDQ6VXNlcjk0OTIwOTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/9492093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrittMcDanel", "html_url": "https://github.com/BrittMcDanel", "followers_url": "https://api.github.com/users/BrittMcDanel/followers", "following_url": "https://api.github.com/users/BrittMcDanel/following{/other_user}", "gists_url": "https://api.github.com/users/BrittMcDanel/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrittMcDanel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrittMcDanel/subscriptions", "organizations_url": "https://api.github.com/users/BrittMcDanel/orgs", "repos_url": "https://api.github.com/users/BrittMcDanel/repos", "events_url": "https://api.github.com/users/BrittMcDanel/events{/privacy}", "received_events_url": "https://api.github.com/users/BrittMcDanel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-02T07:57:35Z", "updated_at": "2016-10-04T03:12:35Z", "closed_at": "2016-10-04T03:11:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nIs there a way to use parallel payments in python-sdk? If not, is there a way to use the implemented payout to send payments to multiple receivers while indicating who the primary receiver is? I do not see that functionality here:\n\nhttps://github.com/paypal/PayPal-Python-SDK/blob/master/samples/payout/create.py\n\nI would rather not have to use php, I see a php example here: \n\nhttps://devtools-paypal.com/guide/ap_parallel_payment/php?interactive=ON&env=sandbox\n\nas I am using currently using flask. \n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/161", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/161/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/161/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/161", "id": 180434644, "node_id": "MDU6SXNzdWUxODA0MzQ2NDQ=", "number": 161, "title": "Webhooks work on live mode but not sandbox", "user": {"login": "WayneUong", "id": 8436742, "node_id": "MDQ6VXNlcjg0MzY3NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8436742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WayneUong", "html_url": "https://github.com/WayneUong", "followers_url": "https://api.github.com/users/WayneUong/followers", "following_url": "https://api.github.com/users/WayneUong/following{/other_user}", "gists_url": "https://api.github.com/users/WayneUong/gists{/gist_id}", "starred_url": "https://api.github.com/users/WayneUong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WayneUong/subscriptions", "organizations_url": "https://api.github.com/users/WayneUong/orgs", "repos_url": "https://api.github.com/users/WayneUong/repos", "events_url": "https://api.github.com/users/WayneUong/events{/privacy}", "received_events_url": "https://api.github.com/users/WayneUong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-01T03:09:03Z", "updated_at": "2016-10-05T21:55:34Z", "closed_at": "2016-10-05T21:55:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Sanbox\n- PayPal-Debug-ID(s) (from any logs): 5c6f9ae6a4a8c, 5c6f9ae6a4a8c\n- Version of Python used: 2.7\n- SDK Version: latest\n### Issue Description\n\nI used the create billing plan sample code to test webhooks. I have an endpoint subscribing to all events. If I create a plan with live mode, a BILLING.PLAN.CREATED event was received. But if I create a sandbox plan, no events were received at all.\n\n> Please include as many details (logs, steps to reproduce, frameworks/dependencies) as you can to help us reproduce this issue faster.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/159", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/159/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/159/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/159", "id": 179068848, "node_id": "MDU6SXNzdWUxNzkwNjg4NDg=", "number": 159, "title": "dead link in README", "user": {"login": "aviau", "id": 2706882, "node_id": "MDQ6VXNlcjI3MDY4ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2706882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aviau", "html_url": "https://github.com/aviau", "followers_url": "https://api.github.com/users/aviau/followers", "following_url": "https://api.github.com/users/aviau/following{/other_user}", "gists_url": "https://api.github.com/users/aviau/gists{/gist_id}", "starred_url": "https://api.github.com/users/aviau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aviau/subscriptions", "organizations_url": "https://api.github.com/users/aviau/orgs", "repos_url": "https://api.github.com/users/aviau/repos", "events_url": "https://api.github.com/users/aviau/events{/privacy}", "received_events_url": "https://api.github.com/users/aviau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824753, "node_id": "MDU6TGFiZWwxODA4MjQ3NTM=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-bug", "name": "sdk-bug", "color": "e11d21", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-25T05:17:22Z", "updated_at": "2016-09-25T14:10:58Z", "closed_at": "2016-09-25T14:10:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://developer.paypal.com/webapps/developer/docs/integration/direct/rest-experience-overview/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/158", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/158/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/158/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/158", "id": 177886509, "node_id": "MDU6SXNzdWUxNzc4ODY1MDk=", "number": 158, "title": "Unable to cancel a billing agreement attached to an unverified profile.", "user": {"login": "samtregar", "id": 2212283, "node_id": "MDQ6VXNlcjIyMTIyODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2212283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samtregar", "html_url": "https://github.com/samtregar", "followers_url": "https://api.github.com/users/samtregar/followers", "following_url": "https://api.github.com/users/samtregar/following{/other_user}", "gists_url": "https://api.github.com/users/samtregar/gists{/gist_id}", "starred_url": "https://api.github.com/users/samtregar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samtregar/subscriptions", "organizations_url": "https://api.github.com/users/samtregar/orgs", "repos_url": "https://api.github.com/users/samtregar/repos", "events_url": "https://api.github.com/users/samtregar/events{/privacy}", "received_events_url": "https://api.github.com/users/samtregar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-09-19T20:19:16Z", "updated_at": "2016-10-17T14:22:07Z", "closed_at": "2016-10-17T14:22:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Live\n- PayPal-Debug-ID(s) (from any logs): None\n- Version of Python used: 2.7\n- SDK Version: 1.11.0\n### Issue Description\n\nThis code:\n\n`billing_agreement.cancel({\"note\": \"Canceling the agreement\"})`\n\nResults in this error when run with a billing agreement which is attached to an unverified profile:\n\n`Invalid profile status for cancel action; profile should be active or suspended`\n\nI don't see why the system should prevent me from cancelling a billing agreement if the profile is unverified.  \n\nThanks for the help! Please let me know if you need additional information to track down the problem.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/157", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/157/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/157/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/157", "id": 176778832, "node_id": "MDU6SXNzdWUxNzY3Nzg4MzI=", "number": 157, "title": "WebhookEvent.verify() returns [('rsa routines', 'INT_RSA_VERIFY', 'bad signature')]", "user": {"login": "yacobell", "id": 7707448, "node_id": "MDQ6VXNlcjc3MDc0NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7707448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yacobell", "html_url": "https://github.com/yacobell", "followers_url": "https://api.github.com/users/yacobell/followers", "following_url": "https://api.github.com/users/yacobell/following{/other_user}", "gists_url": "https://api.github.com/users/yacobell/gists{/gist_id}", "starred_url": "https://api.github.com/users/yacobell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yacobell/subscriptions", "organizations_url": "https://api.github.com/users/yacobell/orgs", "repos_url": "https://api.github.com/users/yacobell/repos", "events_url": "https://api.github.com/users/yacobell/events{/privacy}", "received_events_url": "https://api.github.com/users/yacobell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-13T23:42:37Z", "updated_at": "2016-10-05T21:18:34Z", "closed_at": "2016-10-05T21:18:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Sandbox\n- PayPal-Debug-ID(s) (from any logs): None\n- Version of Python used: 2.7\n- SDK Version: 1.11.7\n### Issue Description\n\nI'm sending WebhookEvents to my local development environment (via ngrok) using PayPal's Webhook Event Simulator. When I try to verify the WebhookEvent, I get a response of: \n\n`[('rsa routines', 'INT_RSA_VERIFY', 'bad signature')]`\n\nI narrowed it down to `crypto.verify(cert, b64decode(actual_sig), expected_sig.encode('utf-8'), auth_algo)` in `WebhookEvent._verify_signature()`. \n\nI can't see what I'm doing wrong. Here is the data I'm using, based on the http request from PayPal.\n\n```\ntransmission_id = '80d8bb40-79f3-11e6-844a-db178b84cf9d'\n\ntimestamp = '2016-09-13T20:49:02Z'\n\nwebhook_id = 'bc087a02fe241'\n\nactual_sig = 'Pi+TJY3168K/9ns53FshKZxWWNOnDluiPlKAGoEeWf1nyUKg5sltAMQH1eCKXruJPOgppP2h/iG0h9WECIJpwPvwJHfrJHObXoF0a1zyGD0Hd5/1RSXuX2S1dZ1PCBSFRIAbCUy7tW9osLgIyVyKL2dtIkf6QmY+D/LxaHnL00SRe3z6dudOJalo0jNAeZoDZV/vPLQAf0cfV34BWdJnuaiHa1eFqFFR/Pd+iOcCHVH0w3LSFA3HLk7odPugDUzZmVWfsxzKyIIm0rji+UgJP2N2hQpCxwS2nyUXgRirwm6E4rjFkfjkhA0NBbUrOseZzoJWoKhbjeThaJB91oHZig=='\n\ncert_url = 'https://api.paypal.com/v1/notifications/certs/CERT-360caa42-fca2a594-df8cd2d5'\n\nauth_algo = 'SHA256withRSA'\n\nevent_body = '{\"id\":\"WH-6W4482673W002281V-61985753LP2332451\",\"event_version\":\"1.0\",\"create_time\":\"2015-05-11T21:45:15Z\",\"resource_type\":\"sale\",\"event_type\":\"PAYMENT.SALE.PENDING\",\"summary\":\"Payment pending for EUR 3.76 EUR\",\"resource\":{\"id\":\"11139561TK568332L\",\"create_time\":\"2015-05-11T21:44:29Z\",\"update_time\":\"2015-05-11T21:44:29Z\",\"amount\":{\"total\":\"3.76\",\"currency\":\"EUR\"},\"payment_mode\":\"INSTANT_TRANSFER\",\"state\":\"pending\",\"reason_code\":\"RECEIVING_PREFERENCE_MANDATES_MANUAL_ACTION\",\"protection_eligibility\":\"INELIGIBLE\",\"parent_payment\":\"PAY-13V79659LS5126423KVISFPI\",\"links\":[{\"href\":\"https://api.paypal.com/v1/payments/sale/11139561TK568332L\",\"rel\":\"self\",\"method\":\"GET\"},{\"href\":\"https://api.paypal.com/v1/payments/sale/11139561TK568332L/refund\",\"rel\":\"refund\",\"method\":\"POST\"},{\"href\":\"https://api.paypal.com/v1/payments/payment/PAY-13V79659LS5126423KVISFPI\",\"rel\":\"parent_payment\",\"method\":\"GET\"}]},\"links\":[{\"href\":\"https://api.paypal.com/v1/notifications/webhooks-events/WH-6W4482673W002281V-61985753LP2332451\",\"rel\":\"self\",\"method\":\"GET\"},{\"href\":\"https://api.paypal.com/v1/notifications/webhooks-events/WH-6W4482673W002281V-61985753LP2332451/resend\",\"rel\":\"resend\",\"method\":\"POST\"}]}'\n```\n\nAny ideas what's going wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/156", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/156/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/156/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/156", "id": 175292114, "node_id": "MDU6SXNzdWUxNzUyOTIxMTQ=", "number": 156, "title": "GetVerifiedStatus returned or in general the 'verified_account' info", "user": {"login": "mpetyx", "id": 681407, "node_id": "MDQ6VXNlcjY4MTQwNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/681407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpetyx", "html_url": "https://github.com/mpetyx", "followers_url": "https://api.github.com/users/mpetyx/followers", "following_url": "https://api.github.com/users/mpetyx/following{/other_user}", "gists_url": "https://api.github.com/users/mpetyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpetyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpetyx/subscriptions", "organizations_url": "https://api.github.com/users/mpetyx/orgs", "repos_url": "https://api.github.com/users/mpetyx/repos", "events_url": "https://api.github.com/users/mpetyx/events{/privacy}", "received_events_url": "https://api.github.com/users/mpetyx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-06T16:29:03Z", "updated_at": "2016-09-15T19:46:22Z", "closed_at": "2016-09-15T19:46:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Question\n- Mode (Sandbox/Live):\n- Version of Python used: latest\n- SDK Version: latest\n### Issue Description\n\n> I am just interested if there is a way, to execute the [GetVerifiedStatus API Call](https://developer.paypal.com/docs/classic/api/adaptive-accounts/GetVerifiedStatus_API_Operation/) or having the  'verified_account'  from the  [userinfo = tokeninfo.userinfo()](https://github.com/paypal/PayPal-Python-SDK/blob/master/samples/openid_connect.py)\n> Looking at the examples, and the [REST API](https://developer.paypal.com/docs/api/identity/#tokenservice) couldn't find out exactly how to accomplish this with the present python library.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/155", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/155/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/155/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/155", "id": 175261925, "node_id": "MDU6SXNzdWUxNzUyNjE5MjU=", "number": 155, "title": "Auto-renew subscription", "user": {"login": "Godod", "id": 595229, "node_id": "MDQ6VXNlcjU5NTIyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/595229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Godod", "html_url": "https://github.com/Godod", "followers_url": "https://api.github.com/users/Godod/followers", "following_url": "https://api.github.com/users/Godod/following{/other_user}", "gists_url": "https://api.github.com/users/Godod/gists{/gist_id}", "starred_url": "https://api.github.com/users/Godod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Godod/subscriptions", "organizations_url": "https://api.github.com/users/Godod/orgs", "repos_url": "https://api.github.com/users/Godod/repos", "events_url": "https://api.github.com/users/Godod/events{/privacy}", "received_events_url": "https://api.github.com/users/Godod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-06T14:28:52Z", "updated_at": "2016-09-19T18:49:57Z", "closed_at": "2016-09-19T18:49:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all. How I can set auto-renew for subscriptions? Create a new agreement - it's undesirable method, because user must go to the site and \"buy the product\" once more.\nThank you\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/154", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/154/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/154/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/154", "id": 175240321, "node_id": "MDU6SXNzdWUxNzUyNDAzMjE=", "number": 154, "title": "Billing Plans and Billing Agreement - Order Summary goes empty", "user": {"login": "rodrigoimenes", "id": 8990835, "node_id": "MDQ6VXNlcjg5OTA4MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/8990835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigoimenes", "html_url": "https://github.com/rodrigoimenes", "followers_url": "https://api.github.com/users/rodrigoimenes/followers", "following_url": "https://api.github.com/users/rodrigoimenes/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigoimenes/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigoimenes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigoimenes/subscriptions", "organizations_url": "https://api.github.com/users/rodrigoimenes/orgs", "repos_url": "https://api.github.com/users/rodrigoimenes/repos", "events_url": "https://api.github.com/users/rodrigoimenes/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigoimenes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-06T12:58:07Z", "updated_at": "2016-10-17T18:10:52Z", "closed_at": "2016-10-17T18:10:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Mode (Sandbox/Live): Sandbox\n- Version of Python used: 2.7.6\n- SDK Version: 1.11.7\n\nHi, im using the billing plan / agreement and i have an issue.\n\nIm creating billing plan following the docs and when i redirect user to approval_url, the order summary (left side of the screen), the order summary is empty. (Only showing the \"description\" field.)\n\nWhen i used NVP, order summary was showing the price of the billing and all costs.\nBut when i tried to use in this SDK, no matter what i do, it goes wrong.\n\nCan someone help me?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/153", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/153/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/153/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/153", "id": 175133245, "node_id": "MDU6SXNzdWUxNzUxMzMyNDU=", "number": 153, "title": "sslv3 alert handshake failure", "user": {"login": "brighama", "id": 3300521, "node_id": "MDQ6VXNlcjMzMDA1MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3300521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brighama", "html_url": "https://github.com/brighama", "followers_url": "https://api.github.com/users/brighama/followers", "following_url": "https://api.github.com/users/brighama/following{/other_user}", "gists_url": "https://api.github.com/users/brighama/gists{/gist_id}", "starred_url": "https://api.github.com/users/brighama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brighama/subscriptions", "organizations_url": "https://api.github.com/users/brighama/orgs", "repos_url": "https://api.github.com/users/brighama/repos", "events_url": "https://api.github.com/users/brighama/events{/privacy}", "received_events_url": "https://api.github.com/users/brighama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-05T22:33:15Z", "updated_at": "2016-10-05T22:34:29Z", "closed_at": "2016-10-05T22:34:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Sandbox\n- PayPal-Debug-ID(s) (from any logs):\n- Version of Python used: 2.7.10\n- SDK Version: latest\n### Issue Description\n\n> Please include as many details (logs, steps to reproduce, frameworks/dependencies) as you can to help us reproduce this issue faster.  \n\nTrying to run the first \"payment\" example gives me an error:\n\nFile \"/Applications/PyCharm.app/Contents/helpers/pydev/pydevd.py\", line 1643, in run\n    pydev_imports.execfile(file, globals, locals)  # execute the script\n  File \"/Users/bo/src/todo4_bounty/paypal.py\", line 41, in <module>\n    if payment.create():\n  File \"/Library/Python/2.7/site-packages/paypalrestsdk/resource.py\", line 163, in create\n    new_attributes = self.api.post(self.path, self.to_dict(), headers, refresh_token)\n  File \"/Library/Python/2.7/site-packages/paypalrestsdk/api.py\", line 272, in post\n    return self.request(util.join_url(self.endpoint, action), 'POST', body=params or {}, headers=headers or {}, refresh_token=refresh_token)\n  File \"/Library/Python/2.7/site-packages/paypalrestsdk/api.py\", line 155, in request\n    self.headers(refresh_token=refresh_token, headers=headers or {}), headers or {})\n  File \"/Library/Python/2.7/site-packages/paypalrestsdk/api.py\", line 244, in headers\n    token_hash = self.get_token_hash(refresh_token=refresh_token, headers=headers or {})\n  File \"/Library/Python/2.7/site-packages/paypalrestsdk/api.py\", line 107, in get_token_hash\n    }, headers or {}))\n  File \"/Library/Python/2.7/site-packages/paypalrestsdk/api.py\", line 195, in http_call\n    method, url, proxies=self.proxies, **kwargs)\n  File \"/Library/Python/2.7/site-packages/requests-2.8.1-py2.7.egg/requests/api.py\", line 50, in request\n    response = session.request(method=method, url=url, *_kwargs)\n  File \"/Library/Python/2.7/site-packages/requests-2.8.1-py2.7.egg/requests/sessions.py\", line 468, in request\n    resp = self.send(prep, *_send_kwargs)\n  File \"/Library/Python/2.7/site-packages/requests-2.8.1-py2.7.egg/requests/sessions.py\", line 576, in send\n    r = adapter.send(request, *_kwargs)\n  File \"/Library/Python/2.7/site-packages/requests-2.8.1-py2.7.egg/requests/adapters.py\", line 433, in send\n    raise SSLError(e, request=request)\n*_requests.exceptions.SSLError: (\"bad handshake: Error([('SSL routines', 'SSL23_GET_SERVER_HELLO', 'sslv3 alert handshake failure')],)\",)**\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/151", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/151/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/151/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/151", "id": 174258130, "node_id": "MDU6SXNzdWUxNzQyNTgxMzA=", "number": 151, "title": "Failed. Response status: 500. Response message: Internal Server Error", "user": {"login": "Andrii-D", "id": 9039044, "node_id": "MDQ6VXNlcjkwMzkwNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/9039044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andrii-D", "html_url": "https://github.com/Andrii-D", "followers_url": "https://api.github.com/users/Andrii-D/followers", "following_url": "https://api.github.com/users/Andrii-D/following{/other_user}", "gists_url": "https://api.github.com/users/Andrii-D/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andrii-D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andrii-D/subscriptions", "organizations_url": "https://api.github.com/users/Andrii-D/orgs", "repos_url": "https://api.github.com/users/Andrii-D/repos", "events_url": "https://api.github.com/users/Andrii-D/events{/privacy}", "received_events_url": "https://api.github.com/users/Andrii-D/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-31T12:17:13Z", "updated_at": "2016-10-05T22:34:53Z", "closed_at": "2016-10-05T22:34:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Live\n- PayPal-Debug-ID(s) (from any logs): bac7577845936\n- Version of Python used: 2.7\n- SDK Version: 1.7.2\n### Issue Description\n\n> Please include as many details (logs, steps to reproduce, frameworks/dependencies) as you can to help us reproduce this issue faster.\n\nHello guys, recently we faced a problem with making payouts through paypalrestsdk. \nIn some cases we receive an error (listed below) while execution method `.create(sync_mode=True)`\nand decline current payout on our side, assuming you didn't do it on your side. \nBut, eventually, this payout was successful on your side! So we sent money to our customers but didn't track it in our system because of getting an exception from you SDK. \n\nPlease help us to properly handle this kind of situations!\n\nHere is an error which happened right [here](https://www.dropbox.com/s/y8j5qy1q3t4m8ih/Screenshot%202016-08-31%2015.14.27.png?dl=0):\n`Failed. Response status: 500. Response message: Internal Server Error. Error message: <html><head><title>JBoss Web/7.0.17.Final - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 500 - </h1><HR size=\"1\" noshade=\"noshade\"><p><b>type</b> Exception report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>The server encountered an internal error () that prevented it from fulfilling this request.</u></p><p><b>exception</b> <pre>java.lang.NoSuchMethodError: com.paypal.api.common.error.ApiError.setInternalCause(Ljava/lang/Throwable;)V\n    com.paypal.api.service.proxy.cxf.ErrorBodyFaultOutInterceptor.handleMessage(ErrorBodyFaultOutInterceptor.java:150)\n    org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:272)\n    org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver.onMessage(AbstractFaultChainInitiatorObserver.java:113)\n    org.apache.cxf.phase.PhaseInterceptorChain.doIntercept(PhaseInterceptorChain.java:336)\n    org.apache.cxf.transport.ChainInitiationObserver.onMessage(ChainInitiationObserver.java:121)\n    org.apache.cxf.transport.http.AbstractHTTPDestination.invoke(AbstractHTTPDestination.java:249)\n    org.apache.cxf.transport.servlet.ServletController.invokeDestination(ServletController.java:248)\n    org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:222)\n    org.apache.cxf.transport.servlet.ServletController.invoke(ServletController.java:153)\n    org.apache.cxf.transport.servlet.CXFNonSpringServlet.invoke(CXFNonSpringServlet.java:181)\n    org.apache.cxf.transport.servlet.AbstractHTTPServlet.handleRequest(AbstractHTTPServlet.java:289)\n    org.apache.cxf.transport.servlet.AbstractHTTPServlet.doPost(AbstractHTTPServlet.java:209)\n    javax.servlet.http.HttpServlet.service(HttpServlet.java:754)\n    org.apache.cxf.transport.servlet.AbstractHTTPServlet.service(AbstractHTTPServlet.java:265)\n    com.thetransactioncompany.cors.CORSFilter.doFilter(CORSFilter.java:213)\n    com.thetransactioncompany.cors.CORSFilter.doFilter(CORSFilter.java:292)\n    org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)\n    org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)\n    com.paypal.api.service.cors.BridgeFilter.doFilter(BridgeFilter.java:101)\n    org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)\n    org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)\n    org.tuckey.web.filters.urlrewrite.RuleChain.handleRewrite(RuleChain.java:176)\n    org.tuckey.web.filters.urlrewrite.RuleChain.doRules(RuleChain.java:145)\n    org.tuckey.web.filters.urlrewrite.UrlRewriter.processRequest(UrlRewriter.java:92)\n    org.tuckey.web.filters.urlrewrite.UrlRewriteFilter.doFilter(UrlRewriteFilter.java:394)\n    org.tuckey.web.filters.urlrewrite.NormalRewrittenUrl.doRewrite(NormalRewrittenUrl.java:213)\n    org.tuckey.web.filters.urlrewrite.RuleChain.handleRewrite(RuleChain.java:171)\n    org.tuckey.web.filters.urlrewrite.RuleChain.doRules(RuleChain.java:145)\n    org.tuckey.web.filters.urlrewrite.UrlRewriter.processRequest(UrlRewriter.java:92)\n    org.tuckey.web.filters.urlrewrite.UrlRewriteFilter.doFilter(UrlRewriteFilter.java:394)\n    com.paypal.foundation.service.rest.logging.CustomRestOuterTransactionCalFilter.doFilter(CustomRestOuterTransactionCalFilter.java:82)\n    org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)\n    org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)\n    com.paypal.api.service.UrlEncodeFilter.doFilter(UrlEncodeFilter.java:25)\n    com.paypal.api.service.LoggingFilter.doFilter(LoggingFilter.java:51)\n    com.paypal.api.service.host.HostHeaderFilter.doFilter(HostHeaderFilter.java:25)\n</pre></p><p><b>note</b> <u>The full stack trace of the root cause is available in the JBoss Web/7.0.17.Final logs.</u></p><HR size=\"1\" noshade=\"noshade\"><h3>JBoss Web/7.0.17.Final</h3></body></html>`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/150", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/150/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/150/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/150", "id": 172155318, "node_id": "MDU6SXNzdWUxNzIxNTUzMTg=", "number": 150, "title": "Templates not available", "user": {"login": "newgarden", "id": 8914644, "node_id": "MDQ6VXNlcjg5MTQ2NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8914644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newgarden", "html_url": "https://github.com/newgarden", "followers_url": "https://api.github.com/users/newgarden/followers", "following_url": "https://api.github.com/users/newgarden/following{/other_user}", "gists_url": "https://api.github.com/users/newgarden/gists{/gist_id}", "starred_url": "https://api.github.com/users/newgarden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newgarden/subscriptions", "organizations_url": "https://api.github.com/users/newgarden/orgs", "repos_url": "https://api.github.com/users/newgarden/repos", "events_url": "https://api.github.com/users/newgarden/events{/privacy}", "received_events_url": "https://api.github.com/users/newgarden/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824745, "node_id": "MDU6TGFiZWwxODA4MjQ3NDU=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-enhancement", "name": "sdk-enhancement", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-19T15:18:01Z", "updated_at": "2016-10-21T15:29:48Z", "closed_at": "2016-10-21T15:29:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode: Sandbox, Live\n- Version of Python used: 2.7\n- SDK Version: 1.11.7\n### Issue Description\n\nAccording to the Readme all the features of PayPal REST API's are supported. However, I couldn't find support for [Invoicing Templates API](https://developer.paypal.com/docs/api/invoicing/#templates).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/148", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/148/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/148/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/148", "id": 170469148, "node_id": "MDU6SXNzdWUxNzA0NjkxNDg=", "number": 148, "title": "Can't get Billing Agreement ID", "user": {"login": "wasabigeek", "id": 4256705, "node_id": "MDQ6VXNlcjQyNTY3MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4256705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wasabigeek", "html_url": "https://github.com/wasabigeek", "followers_url": "https://api.github.com/users/wasabigeek/followers", "following_url": "https://api.github.com/users/wasabigeek/following{/other_user}", "gists_url": "https://api.github.com/users/wasabigeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/wasabigeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wasabigeek/subscriptions", "organizations_url": "https://api.github.com/users/wasabigeek/orgs", "repos_url": "https://api.github.com/users/wasabigeek/repos", "events_url": "https://api.github.com/users/wasabigeek/events{/privacy}", "received_events_url": "https://api.github.com/users/wasabigeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-08-10T17:09:21Z", "updated_at": "2017-03-07T15:29:32Z", "closed_at": "2017-03-07T15:28:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Sandbox\n- PayPal-Debug-ID(s) (from any logs): N/A\n- Version of Python used: 2.7.6\n- SDK Version: 1.11.7\n### Issue Description\n\nIn the [API documentation](https://developer.paypal.com/docs/api/payments.billing-agreements#agreement_create_response), when a Billing Agreement is created, it's ID is supposed to be returned in the response. I can't seem to get this when I do:\n\n```\nif billing_agreement.create():\n            ...\n            id = billing_agreement.id\n            ...\n```\n\nIs that expected? I am able to get the Billing Plan ID using `billing_agreement.plan.id`, but as far as I can tell I can't get the Billing Agreement ID from that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/147", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/147/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/147/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/147", "id": 170002679, "node_id": "MDU6SXNzdWUxNzAwMDI2Nzk=", "number": 147, "title": "INTERNAL_SERVICE_ERROR", "user": {"login": "wasabigeek", "id": 4256705, "node_id": "MDQ6VXNlcjQyNTY3MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4256705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wasabigeek", "html_url": "https://github.com/wasabigeek", "followers_url": "https://api.github.com/users/wasabigeek/followers", "following_url": "https://api.github.com/users/wasabigeek/following{/other_user}", "gists_url": "https://api.github.com/users/wasabigeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/wasabigeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wasabigeek/subscriptions", "organizations_url": "https://api.github.com/users/wasabigeek/orgs", "repos_url": "https://api.github.com/users/wasabigeek/repos", "events_url": "https://api.github.com/users/wasabigeek/events{/privacy}", "received_events_url": "https://api.github.com/users/wasabigeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-08T19:19:49Z", "updated_at": "2016-08-08T19:34:34Z", "closed_at": "2016-08-08T19:34:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Sandbox\n- PayPal-Debug-ID(s) (from any logs): 33a4dbd541569, d1c8f26aaeb5f, 651a75f2383b1, 1d571b6c10986, cbda0e50b7ee9\n- Version of Python used: 2.7.6\n- SDK Version: paypalrestsdk==1.11.7\n### Issue Description\n\nServerError at /api/execute-payment\nFailed. Response status: 500. Response message: Internal Server Error. Error message: Failed. Response status: 500. Response message: Internal Server Error. Error message: {\"name\":\"INTERNAL_SERVICE_ERROR\",\"details\":[],\"message\":\"An internal service error has occurred\",\"information_link\":\"https://developer.paypal.com/docs/api/#INTERNAL_SERVICE_ERROR\",\"debug_id\":\"cbda0e50b7ee9\"}\n\nUsing Django, getting a few different errors when I try a few different code iterations. Latest (Which I'd like to add was working perfectly before):\n\n```\nclass ExecutePaymentView(APIView):\n    def post(self, request, format=None):\n        configure_paypal()\n        payment_id = request.data['payment_id']\n        payment = paypalrestsdk.Payment.find(payment_id)\n\n        response = {\"state\": \"failed\"}\n        if payment.execute({\"payer_id\": request.data['payer_id']}):\n            response['state'] = 'success'\n            Order.objects.filter(payment_id=payment_id).update(\n                sale_id=payment.transactions[0].related_resources[0].sale.id\n            )\n        else:\n            response['error'] = payment.error\n\n        return Response(response)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/146", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/146/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/146/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/146", "id": 168069004, "node_id": "MDU6SXNzdWUxNjgwNjkwMDQ=", "number": 146, "title": "CreateInvoice do not work.", "user": {"login": "imgrey", "id": 208242, "node_id": "MDQ6VXNlcjIwODI0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/208242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imgrey", "html_url": "https://github.com/imgrey", "followers_url": "https://api.github.com/users/imgrey/followers", "following_url": "https://api.github.com/users/imgrey/following{/other_user}", "gists_url": "https://api.github.com/users/imgrey/gists{/gist_id}", "starred_url": "https://api.github.com/users/imgrey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imgrey/subscriptions", "organizations_url": "https://api.github.com/users/imgrey/orgs", "repos_url": "https://api.github.com/users/imgrey/repos", "events_url": "https://api.github.com/users/imgrey/events{/privacy}", "received_events_url": "https://api.github.com/users/imgrey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-07-28T11:00:55Z", "updated_at": "2016-08-02T15:26:04Z", "closed_at": "2016-08-02T15:26:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode: Sandbox\n- PayPal-Debug-ID(s) (from any logs): \n- Version of Python used: 2.7.10\n- SDK Version: Commit 935535acf860c4e13d47a469b2087008c32c2ee1\n### Issue Description\n\nI've tried to create the following Invoice.\n\n{'items': [{'name': u'VPS #115 ( 14/06/2016 - 14/07/2016 )', 'unit_price': {'currency': 'USD', 'value': 15}, 'quantity': 1}, {'name': u'Transaction Fee', 'unit_price': 2, 'quantity': 1}], 'merchant_info': {'business_name': 'Me', 'first_name': 'Me', 'last_name': 'Me', 'email': 'sales-facilitator@xentime.com'}, 'billing_info': [{'email': 'test3@mememe.me'}]}\n\ninvoice.create() prints the following and returns False:\n\n**\\* ServerError: Failed. Response status: 500. Response message: Internal Server         Error. Error message:\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/143", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/143/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/143/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/143", "id": 165469522, "node_id": "MDU6SXNzdWUxNjU0Njk1MjI=", "number": 143, "title": "Payment created with `intent` set to \"authorize\" does not return an authorization ID ", "user": {"login": "zenweasel", "id": 72819, "node_id": "MDQ6VXNlcjcyODE5", "avatar_url": "https://avatars1.githubusercontent.com/u/72819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zenweasel", "html_url": "https://github.com/zenweasel", "followers_url": "https://api.github.com/users/zenweasel/followers", "following_url": "https://api.github.com/users/zenweasel/following{/other_user}", "gists_url": "https://api.github.com/users/zenweasel/gists{/gist_id}", "starred_url": "https://api.github.com/users/zenweasel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zenweasel/subscriptions", "organizations_url": "https://api.github.com/users/zenweasel/orgs", "repos_url": "https://api.github.com/users/zenweasel/repos", "events_url": "https://api.github.com/users/zenweasel/events{/privacy}", "received_events_url": "https://api.github.com/users/zenweasel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-14T03:41:26Z", "updated_at": "2016-07-14T17:53:03Z", "closed_at": "2016-07-14T17:52:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live):\n  Sandbx\n- PayPal-Debug-ID(s) (from any logs):\n- Version of Python used:\n  3.5.2\n- SDK Version:\n  v1.11.6\n### Issue Description\n\nI am trying to create a payment for later capture. According to the docs [here](https://developer.paypal.com/docs/integration/direct/capture-payment/#authorize-the-payment) if I set the `intent` to \"authorize\" I should get back an \"authorization\" object which contains an ID that I can then use to capture the payment. However I do not receive any \"authorization\" object, therefore the payment can never be captured.\n\nBelow is the test case code I am using. The `payment_object` payload is taken from the documentation.\n\n``` python\nimport paypalrestsdk\nimport logging\n\npaypalrestsdk.configure({\n  \"mode\": \"sandbox\", # sandbox or live\n  \"client_id\": \"<client_id>\",\n  \"client_secret\": \"<client_secret>\"})\n\npayment_object = {\n    \"intent\":\"authorize\",\n    \"payer\":{\n      \"payment_method\":\"credit_card\",\n      \"funding_instruments\":[\n        {\n          \"credit_card\":{\n            \"number\":\"5493022963692972\",\n            \"type\":\"mastercard\",\n            \"expire_month\":12,\n            \"expire_year\":2018,\n            \"cvv2\":874,\n            \"first_name\":\"Betsy\",\n            \"last_name\":\"Buyer\",\n            \"billing_address\":{\n              \"line1\":\"111 First Street\",\n              \"city\":\"Saratoga\",\n              \"state\":\"CA\",\n              \"postal_code\":\"95070\",\n              \"country_code\":\"US\"\n            }\n          }\n        }\n      ]\n    },\n    \"transactions\":[\n      {\n        \"amount\":{\n          \"total\":\"7.47\",\n          \"currency\":\"USD\",\n          \"details\":{\n            \"subtotal\":\"7.41\",\n            \"tax\":\"0.03\",\n            \"shipping\":\"0.03\"\n          }\n        }\n      }\n    ]\n};\n\npayment = paypalrestsdk.Payment(payment_object)\n\n# Create Payment and return status( True or False )\nif payment.create():\n    print(\"Payment[%s] created successfully\" % (payment.id))\n    print(payment)\n    assert(payment.transactions[0].related_resources)\nelse:\n    # Display Error message\n    print(\"Error while creating payment:\")\n    print(payment.error)\n```\n\nNote that this seems to be the same bug that is appearing here: https://github.com/paypal/PayPal-node-SDK/issues/168\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/142", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/142/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/142/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/142", "id": 163964583, "node_id": "MDU6SXNzdWUxNjM5NjQ1ODM=", "number": 142, "title": "When unable to get token_hash data, raises KeyError", "user": {"login": "elithompson", "id": 396997, "node_id": "MDQ6VXNlcjM5Njk5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/396997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elithompson", "html_url": "https://github.com/elithompson", "followers_url": "https://api.github.com/users/elithompson/followers", "following_url": "https://api.github.com/users/elithompson/following{/other_user}", "gists_url": "https://api.github.com/users/elithompson/gists{/gist_id}", "starred_url": "https://api.github.com/users/elithompson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elithompson/subscriptions", "organizations_url": "https://api.github.com/users/elithompson/orgs", "repos_url": "https://api.github.com/users/elithompson/repos", "events_url": "https://api.github.com/users/elithompson/events{/privacy}", "received_events_url": "https://api.github.com/users/elithompson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 180824745, "node_id": "MDU6TGFiZWwxODA4MjQ3NDU=", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/sdk-enhancement", "name": "sdk-enhancement", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-05T22:57:20Z", "updated_at": "2019-11-06T06:44:37Z", "closed_at": "2019-11-06T06:44:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Live\n- PayPal-Debug-ID(s) (from any logs): None\n- Version of Python used: 2.7.3\n- SDK Version: 1.11.5\n### Issue Description\n\nOn 2016-06-28, I spotted this traceback in my exception logs:\n\n`KeyError: 'token_type`\n\n``` text\nFile \"paypalrestsdk/payments.py\", line 224, in create\n    return super(Payout, self).create(**kwargs)\n  File \"paypalrestsdk/resource.py\", line 163, in create\n    new_attributes = self.api.post(self.path, self.to_dict(), headers, refresh_token)\n  File \"paypalrestsdk/api.py\", line 272, in post\n    return self.request(util.join_url(self.endpoint, action), 'POST', body=params or {}, headers=headers or {}, refresh_token=refresh_token)\n  File \"paypalrestsdk/api.py\", line 155, in request\n    self.headers(refresh_token=refresh_token), headers or {})\n  File \"paypalrestsdk/api.py\", line 247, in headers\n    \"Authorization\": (\"%s %s\" % (token_hash['token_type'], token_hash['access_token'])),\n```\n\nFrom Sentry: \n![image](https://cloud.githubusercontent.com/assets/396997/16602195/00630ad2-42c7-11e6-9617-511ee128f5ad.png)\n\nIt appears that the [`get_token_hash`](https://github.com/paypal/PayPal-Python-SDK/blob/master/paypalrestsdk/api.py#L70) method is returning a response (`token_hash`) which is just an empty dictionary and causing the `'token_type'` lookup to fail.\n\nMy guess is that some anomaly caused this, but the `headers` method should handle this situation a little better. I'd expect that if it didn't have the values it required that it would raise some appropriate exception.\n\nFor my use case, I just need to retry the payout operation, but I don't want to try/except on all `KeyError`s. Something like `AccessTokenMissing` or something similar would be great.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/141", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/141/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/141/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/141", "id": 163691481, "node_id": "MDU6SXNzdWUxNjM2OTE0ODE=", "number": 141, "title": "Webhooks Sandbox question", "user": {"login": "Godod", "id": 595229, "node_id": "MDQ6VXNlcjU5NTIyOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/595229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Godod", "html_url": "https://github.com/Godod", "followers_url": "https://api.github.com/users/Godod/followers", "following_url": "https://api.github.com/users/Godod/following{/other_user}", "gists_url": "https://api.github.com/users/Godod/gists{/gist_id}", "starred_url": "https://api.github.com/users/Godod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Godod/subscriptions", "organizations_url": "https://api.github.com/users/Godod/orgs", "repos_url": "https://api.github.com/users/Godod/repos", "events_url": "https://api.github.com/users/Godod/events{/privacy}", "received_events_url": "https://api.github.com/users/Godod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2016-07-04T14:47:01Z", "updated_at": "2017-03-21T14:26:24Z", "closed_at": "2016-07-20T16:52:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please, who can describe, how webhooks works in sandbox?\n\nI have 2 registered webhooks:\n![webhook](https://s32.postimg.org/hx32eydz9/Screenshot.png)\n\nwith right credentials, but in \"Webhooks Events\" menu - nothing ;( \n![webhook](https://s31.postimg.org/4lralkb97/Screenshot_1.png)\n\nI don't receive any webhooks when I pay by PayPal (payment).\nIn sandbox webhooks work? Thanks\n\nP.S. Url valid. When I'm simulate webhook - all ok.\nP.P.S Sorry for my bad English\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/139", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/139/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/139/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/139", "id": 161961743, "node_id": "MDU6SXNzdWUxNjE5NjE3NDM=", "number": 139, "title": "Payment resource does not allow replacements", "user": {"login": "maxdore", "id": 8946053, "node_id": "MDQ6VXNlcjg5NDYwNTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/8946053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxdore", "html_url": "https://github.com/maxdore", "followers_url": "https://api.github.com/users/maxdore/followers", "following_url": "https://api.github.com/users/maxdore/following{/other_user}", "gists_url": "https://api.github.com/users/maxdore/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxdore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxdore/subscriptions", "organizations_url": "https://api.github.com/users/maxdore/orgs", "repos_url": "https://api.github.com/users/maxdore/repos", "events_url": "https://api.github.com/users/maxdore/events{/privacy}", "received_events_url": "https://api.github.com/users/maxdore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-23T16:07:27Z", "updated_at": "2016-07-14T21:26:35Z", "closed_at": "2016-07-14T21:26:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "For PP-Plus, we need to do a patch-request towards the API for legal reasons. \n\nAs far as I understood the only change neccessary is that Payment inherits from Replace. If so, I can create a PR.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/137", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/137/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/137/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/137", "id": 159928015, "node_id": "MDU6SXNzdWUxNTk5MjgwMTU=", "number": 137, "title": "Find Buyer Address for Seller Protection", "user": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2016-06-13T11:23:50Z", "updated_at": "2017-03-17T23:18:03Z", "closed_at": "2017-03-17T23:17:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Live\n- Version of Python used: 3.5.1\n- SDK Version: 1.11.5\n### Issue Description\n\nI'm trying to get the following information from Orders Placed on our Website and Ebay.\n\nI can recover basic details from the API using Sale.find() and Order.find() but there is no buyer address for shipping and seller protection returned in these calls.\n\nI've attempted to use the documentation, but its not really helping. Can anyone tell me which call I should be using ?\n\nMany thanks\n\nAlex\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/136", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/136/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/136/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/136", "id": 158879820, "node_id": "MDU6SXNzdWUxNTg4Nzk4MjA=", "number": 136, "title": "SSL Error", "user": {"login": "Bobspadger", "id": 1614970, "node_id": "MDQ6VXNlcjE2MTQ5NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1614970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bobspadger", "html_url": "https://github.com/Bobspadger", "followers_url": "https://api.github.com/users/Bobspadger/followers", "following_url": "https://api.github.com/users/Bobspadger/following{/other_user}", "gists_url": "https://api.github.com/users/Bobspadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bobspadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bobspadger/subscriptions", "organizations_url": "https://api.github.com/users/Bobspadger/orgs", "repos_url": "https://api.github.com/users/Bobspadger/repos", "events_url": "https://api.github.com/users/Bobspadger/events{/privacy}", "received_events_url": "https://api.github.com/users/Bobspadger/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-07T09:36:35Z", "updated_at": "2016-06-13T14:11:26Z", "closed_at": "2016-06-13T14:11:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): Both\n- PayPal-Debug-ID(s) (from any logs):\n- Version of Python used: Python 3.4.4\n- SDK Version: paypalrestsdk==1.11.5\n### Issue Description\n\n> Attempting to just do a simple connect to either Sandbox or Live and I get the following error\n> \n> ```\n> requests.exceptions.SSLError: [SSL: SSLV3_ALERT_HANDSHAKE_FAILURE] sslv3 alert handshake failure (_ssl.c:600)\n> ```\n\nAny idea where this issue is cropping up ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/135", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/135/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/135/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/135", "id": 157744384, "node_id": "MDU6SXNzdWUxNTc3NDQzODQ=", "number": 135, "title": "Unknown Internal Server Error", "user": {"login": "orafaelfragoso", "id": 1163342, "node_id": "MDQ6VXNlcjExNjMzNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1163342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orafaelfragoso", "html_url": "https://github.com/orafaelfragoso", "followers_url": "https://api.github.com/users/orafaelfragoso/followers", "following_url": "https://api.github.com/users/orafaelfragoso/following{/other_user}", "gists_url": "https://api.github.com/users/orafaelfragoso/gists{/gist_id}", "starred_url": "https://api.github.com/users/orafaelfragoso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orafaelfragoso/subscriptions", "organizations_url": "https://api.github.com/users/orafaelfragoso/orgs", "repos_url": "https://api.github.com/users/orafaelfragoso/repos", "events_url": "https://api.github.com/users/orafaelfragoso/events{/privacy}", "received_events_url": "https://api.github.com/users/orafaelfragoso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-05-31T18:56:19Z", "updated_at": "2016-06-11T01:35:34Z", "closed_at": "2016-06-11T01:35:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "### General Information\n- Mode (Sandbox/Live): **Sandbox**\n- PayPal-Debug-ID(s) (from any logs): **b04bcdbf6b18e**\n- Version of Python used: **3.5.0**\n- SDK Version: **Paypal REST SDK 1.11.5**\n### Issue Description\n\nI'm using this lib with django and after I process the payment and get redirected back to my application, I'm getting this error: \n\n`paypalrestsdk.exceptions.ServerError: Failed. Response status: 500. Response message: Internal Server Erro\u2502\nr. Error message: {\"name\":\"INTERNAL_SERVICE_ERROR\",\"message\":\"An internal service error has occurred\",\"information_link\":\"https://developer.paypal.com/webapps/developer/docs/api/#INTERNAL_SERVICE_ERROR\",\"debug_i$\":\"a503a23a39c0a\"}`\n\nMy method looks like this (using Django 1.9):\n\n``` python\n    def checkout(cls, cart, instagram_user, payment_id, payer_id):\n        import paypalrestsdk\n        from django.conf import settings\n\n        paypalrestsdk.configure({\"mode\": settings.PAYPAL_MODE, \"client_id\": settings.CLIENT_ID, \"client_secret\": settings.CLIENT_SECRET})\n        payment = paypalrestsdk.Payment.find(payment_id)\n\n        payment.execute({\"payer_id\": payer_id})\n\n        order_id = payment['transactions'][0]['related_resources'][0]['order']['id']\n        order = paypalrestsdk.Order.find(order_id)\n        order.authorize({\"amount\": {\"currency\": settings.PAYPAL_CURRENCY, \"total\": str(cart.total)}})\n\n        payment_obj = Payment.objects.create(instagram_user=instagram_user, cart=cart, payment_id=payment_id, order_id=order_id, authorization_id=order['id'], buyer_id=payer_id)\n\n        return payment_obj, order\n```\n\nI already checked for the credentials, and I'm using all the right ones. I really don't know what's going on.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/132", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/132/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/132/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/132", "id": 154383386, "node_id": "MDU6SXNzdWUxNTQzODMzODY=", "number": 132, "title": "Need Webhook Event for Billing Agreement Payment", "user": {"login": "ppmtscory", "id": 6306449, "node_id": "MDQ6VXNlcjYzMDY0NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6306449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppmtscory", "html_url": "https://github.com/ppmtscory", "followers_url": "https://api.github.com/users/ppmtscory/followers", "following_url": "https://api.github.com/users/ppmtscory/following{/other_user}", "gists_url": "https://api.github.com/users/ppmtscory/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppmtscory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppmtscory/subscriptions", "organizations_url": "https://api.github.com/users/ppmtscory/orgs", "repos_url": "https://api.github.com/users/ppmtscory/repos", "events_url": "https://api.github.com/users/ppmtscory/events{/privacy}", "received_events_url": "https://api.github.com/users/ppmtscory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2016-05-12T02:24:25Z", "updated_at": "2019-08-20T06:05:55Z", "closed_at": "2016-08-23T15:43:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "New enhancement to track this feature which stems from #69.  An agreement was created and waiting for the payment to test for sure, but thinking that this may be the same underlying reason as #115.  Will use this issue to track and update accordingly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/131", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/131/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/131/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/131", "id": 151237357, "node_id": "MDU6SXNzdWUxNTEyMzczNTc=", "number": 131, "title": "Question about verifying email", "user": {"login": "jlariza", "id": 16421045, "node_id": "MDQ6VXNlcjE2NDIxMDQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/16421045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlariza", "html_url": "https://github.com/jlariza", "followers_url": "https://api.github.com/users/jlariza/followers", "following_url": "https://api.github.com/users/jlariza/following{/other_user}", "gists_url": "https://api.github.com/users/jlariza/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlariza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlariza/subscriptions", "organizations_url": "https://api.github.com/users/jlariza/orgs", "repos_url": "https://api.github.com/users/jlariza/repos", "events_url": "https://api.github.com/users/jlariza/events{/privacy}", "received_events_url": "https://api.github.com/users/jlariza/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-04-26T20:57:41Z", "updated_at": "2020-04-29T22:00:34Z", "closed_at": "2016-05-11T00:18:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\n\nI'm using this SDK to receive/send money from/to my users. Before I send money to them, I need to verify if the paypal email they provided me exists and is verified to avoid sending money to an external person. \n\nIs there a way to do it? I have not found it yet at the paypal documentation because it is too general. \n\nThank you!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/130", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/130/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/130/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/130", "id": 147644830, "node_id": "MDU6SXNzdWUxNDc2NDQ4MzA=", "number": 130, "title": "Webhook cert issue", "user": {"login": "tokikanno", "id": 130347, "node_id": "MDQ6VXNlcjEzMDM0Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/130347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tokikanno", "html_url": "https://github.com/tokikanno", "followers_url": "https://api.github.com/users/tokikanno/followers", "following_url": "https://api.github.com/users/tokikanno/following{/other_user}", "gists_url": "https://api.github.com/users/tokikanno/gists{/gist_id}", "starred_url": "https://api.github.com/users/tokikanno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tokikanno/subscriptions", "organizations_url": "https://api.github.com/users/tokikanno/orgs", "repos_url": "https://api.github.com/users/tokikanno/repos", "events_url": "https://api.github.com/users/tokikanno/events{/privacy}", "received_events_url": "https://api.github.com/users/tokikanno/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-04-12T06:20:50Z", "updated_at": "2016-09-05T09:30:46Z", "closed_at": "2016-09-05T09:30:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Recently, we've encountered into a PEM no start line error while processing webhook.\nThe traceback info is as following, the whole payment process is ok except this webhook call.\nThe source IP of the webhook call is from PayPal, so it may not be a hacker.\n\n``` python\n  File \"/usr/local/lib/python2.7/dist-packages/paypalrestsdk/notifications.py\", line 144, in verify\n    cert = WebhookEvent._get_cert(cert_url)\n  File \"/usr/local/lib/python2.7/dist-packages/paypalrestsdk/notifications.py\", line 110, in _get_cert\n    cert = crypto.load_certificate(crypto.FILETYPE_PEM, str(r.text))\n  File \"/usr/local/lib/python2.7/dist-packages/OpenSSL/crypto.py\", line 1511, in load_certificate\n    _raise_current_error()\n  File \"/usr/local/lib/python2.7/dist-packages/OpenSSL/_util.py\", line 48, in exception_from_error_queue\n    raise exception_type(errors)\nError: [('PEM routines', 'PEM_read_bio', 'no start line')]\n```\n\nBTW, the cert url is https://api.paypal.com/v1/notifications/certs/CERT-360caa42-fca2a594-df8cd2d5\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/129", "repository_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK", "labels_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/129/comments", "events_url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/issues/129/events", "html_url": "https://github.com/paypal/PayPal-Python-SDK/issues/129", "id": 144788213, "node_id": "MDU6SXNzdWUxNDQ3ODgyMTM=", "number": 129, "title": "PayPal return nothing.", "user": {"login": "test101test101", "id": 17761830, "node_id": "MDQ6VXNlcjE3NzYxODMw", "avatar_url": "https://avatars0.githubusercontent.com/u/17761830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/test101test101", "html_url": "https://github.com/test101test101", "followers_url": "https://api.github.com/users/test101test101/followers", "following_url": "https://api.github.com/users/test101test101/following{/other_user}", "gists_url": "https://api.github.com/users/test101test101/gists{/gist_id}", "starred_url": "https://api.github.com/users/test101test101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/test101test101/subscriptions", "organizations_url": "https://api.github.com/users/test101test101/orgs", "repos_url": "https://api.github.com/users/test101test101/repos", "events_url": "https://api.github.com/users/test101test101/events{/privacy}", "received_events_url": "https://api.github.com/users/test101test101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 31138295, "node_id": "MDU6TGFiZWwzMTEzODI5NQ==", "url": "https://api.github.com/repos/paypal/PayPal-Python-SDK/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2016-03-31T04:44:27Z", "updated_at": "2017-11-30T00:16:21Z", "closed_at": "2016-04-10T20:56:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have this script:\n\n```\nimport paypalrestsdk\npaypalrestsdk.configure({\n  \"mode\": \"live\", # sandbox or live\n  \"client_id\": \"MY KEY\",\n  \"client_secret\": \"MY SECRET\" })\n\npayment_history = paypalrestsdk.Payment.all({\"count\": 10})\npayment_history.payments\nfor payment in payment_history.payments:\n    print(\"  -> Payment[%s]\" % (payment.create_time))\n```\n\nBut I get this error:\n\n```\nNo handlers could be found for logger \"paypalrestsdk.api\"\n\n    for payment in payment_history.payments:\nTypeError: 'NoneType' object is not iterable\n```\n\nIf I run the script in `sandbox`I get diffrent error:\n\n```\nraise SSLError(e, request=request)\nrequests.exceptions.SSLError: [Errno 1] _ssl.c:504: error:14077410:SSL routines:SSL23_GET_SERVER_HELLO:sslv3 alert handshake failure\n\n```\n", "performed_via_github_app": null, "score": 1.0}]}