{"total_count": 54, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/micheles/decorator/issues/90", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/90/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/90/events", "html_url": "https://github.com/micheles/decorator/issues/90", "id": 665587523, "node_id": "MDU6SXNzdWU2NjU1ODc1MjM=", "number": 90, "title": "Where are the RTD docs?", "user": {"login": "altendky", "id": 543719, "node_id": "MDQ6VXNlcjU0MzcxOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/543719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/altendky", "html_url": "https://github.com/altendky", "followers_url": "https://api.github.com/users/altendky/followers", "following_url": "https://api.github.com/users/altendky/following{/other_user}", "gists_url": "https://api.github.com/users/altendky/gists{/gist_id}", "starred_url": "https://api.github.com/users/altendky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/altendky/subscriptions", "organizations_url": "https://api.github.com/users/altendky/orgs", "repos_url": "https://api.github.com/users/altendky/repos", "events_url": "https://api.github.com/users/altendky/events{/privacy}", "received_events_url": "https://api.github.com/users/altendky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-25T13:42:21Z", "updated_at": "2020-07-27T17:23:56Z", "closed_at": "2020-07-27T14:02:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://decorator.readthedocs.io/en/latest/ (found in #62) shows the RTD maze.  Where are the docs?  Perhaps set the GitHub repository URL to them and add to the readme.  Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/89", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/89/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/89/events", "html_url": "https://github.com/micheles/decorator/issues/89", "id": 663057359, "node_id": "MDU6SXNzdWU2NjMwNTczNTk=", "number": 89, "title": "decorator arguments disappear if no default value is given", "user": {"login": "visko-sc", "id": 66418513, "node_id": "MDQ6VXNlcjY2NDE4NTEz", "avatar_url": "https://avatars1.githubusercontent.com/u/66418513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/visko-sc", "html_url": "https://github.com/visko-sc", "followers_url": "https://api.github.com/users/visko-sc/followers", "following_url": "https://api.github.com/users/visko-sc/following{/other_user}", "gists_url": "https://api.github.com/users/visko-sc/gists{/gist_id}", "starred_url": "https://api.github.com/users/visko-sc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/visko-sc/subscriptions", "organizations_url": "https://api.github.com/users/visko-sc/orgs", "repos_url": "https://api.github.com/users/visko-sc/repos", "events_url": "https://api.github.com/users/visko-sc/events{/privacy}", "received_events_url": "https://api.github.com/users/visko-sc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-21T14:24:40Z", "updated_at": "2020-07-27T11:01:38Z", "closed_at": "2020-07-27T11:01:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Environment**: Ubuntu Linux 20.04, Python 3.8.2, decorator 4.4.2\r\n\r\nGiven I have this code:\r\n\r\n``` python\r\nfrom decorator import decorator\r\n\r\n\r\n@decorator\r\ndef my_decorator(func, myarg, *args, **kwargs):\r\n    print(f\"Decorator arg: {myarg}\")\r\n    return func(*args, **kwargs)\r\n\r\n\r\n@my_decorator(myarg='Hello')\r\ndef my_func():\r\n    pass\r\n\r\n\r\nif __name__ == '__main__':\r\n    my_func()\r\n```\r\n\r\nActual result:\r\n`TypeError: my_decorator() got an unexpected keyword argument 'myarg'`\r\n\r\nExpected result:\r\n\"Decorator arg: Hello\"\r\n\r\nNote: I figured out, that adding default value to myarg (i.e. myarg=None) resolves the issue, but it would be great not to have this restriction or highlight in the documentation that it doesn't work without it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/86", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/86/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/86/events", "html_url": "https://github.com/micheles/decorator/issues/86", "id": 612768875, "node_id": "MDU6SXNzdWU2MTI3Njg4NzU=", "number": 86, "title": "Issue with decorator function var with no defaults", "user": {"login": "curtisforrester", "id": 5033139, "node_id": "MDQ6VXNlcjUwMzMxMzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5033139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/curtisforrester", "html_url": "https://github.com/curtisforrester", "followers_url": "https://api.github.com/users/curtisforrester/followers", "following_url": "https://api.github.com/users/curtisforrester/following{/other_user}", "gists_url": "https://api.github.com/users/curtisforrester/gists{/gist_id}", "starred_url": "https://api.github.com/users/curtisforrester/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/curtisforrester/subscriptions", "organizations_url": "https://api.github.com/users/curtisforrester/orgs", "repos_url": "https://api.github.com/users/curtisforrester/repos", "events_url": "https://api.github.com/users/curtisforrester/events{/privacy}", "received_events_url": "https://api.github.com/users/curtisforrester/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-05T17:23:40Z", "updated_at": "2020-07-27T14:06:24Z", "closed_at": "2020-07-27T14:06:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm reluctant to say this is a \"bug\" or an issue, but I do have a question. BTW, love your decorator decorator :)\r\n\r\nMy signature is (in part)\r\n```\r\n@decorator\r\ndef log_message(func, logger=None, on_entry=True, on_exit=False, log_parms=False, ... *args, **kwargs):\r\n```\r\n\r\nWhen I did not include the default for `logger` I got an error when the module loaded. \r\n\r\n```\r\n...\r\n    @log_message(logger=LOG, on_exit=True, log_parms=True, log_return=True)\r\nTypeError: log_message() got an unexpected keyword argument 'logger'\r\n```\r\n\r\nShould I have been able to specify that parameter without a default?\r\n\r\nThe full decorator code (now, with the default) is:\r\n\r\n```\r\n@decorator\r\ndef log_message(func, logger=None, msg=None, on_entry=True, on_exit=False, log_parms=False, log_return=False, level=DEBUG, *args, **kwargs):\r\n\r\n    if not logger:\r\n        logger = logging.getLogger(func.__module__.__name__)\r\n\r\n    if on_entry and logger.isEnabledFor(level):\r\n        p_msg = ''\r\n\r\n        if log_parms:\r\n            # Need to skip the first positional for bound functions\r\n            spec = inspect.getfullargspec(func)\r\n            ndx = 1 if spec.args and spec.args[0] in ['cls', 'self'] else 0\r\n\r\n            p_args = ['{}={}'.format(spec.args[ndx], str(p)) for ndx, p in enumerate(args[ndx:], ndx)]\r\n            p_kwargs = '' if not kwargs else ', kwargs={}'.format(str(kwargs))\r\n\r\n            p_msg = ': args={}{}'.format(p_args, p_kwargs)\r\n\r\n        logger.log(level, '[enter] {}{}'.format(msg or '[{}]'.format(func.__name__), p_msg))\r\n\r\n    try:\r\n        data = func(*args, **kwargs)\r\n\r\n    except Exception as ex:\r\n        logger.exception(msg, exc_info=True)\r\n        raise\r\n\r\n    if on_exit and logger.isEnabledFor(level):\r\n        return_msg = 'Return: {}'.format(data) if log_return else ''\r\n        text = '[exit] {} {}'.format(msg or func.__name__, return_msg)\r\n\r\n        logger.log(level, text)\r\n\r\n    return data\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/84", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/84/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/84/events", "html_url": "https://github.com/micheles/decorator/issues/84", "id": 576798157, "node_id": "MDU6SXNzdWU1NzY3OTgxNTc=", "number": 84, "title": "Python 2 Deprecation Plan", "user": {"login": "sethtroisi", "id": 10172976, "node_id": "MDQ6VXNlcjEwMTcyOTc2", "avatar_url": "https://avatars2.githubusercontent.com/u/10172976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sethtroisi", "html_url": "https://github.com/sethtroisi", "followers_url": "https://api.github.com/users/sethtroisi/followers", "following_url": "https://api.github.com/users/sethtroisi/following{/other_user}", "gists_url": "https://api.github.com/users/sethtroisi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sethtroisi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sethtroisi/subscriptions", "organizations_url": "https://api.github.com/users/sethtroisi/orgs", "repos_url": "https://api.github.com/users/sethtroisi/repos", "events_url": "https://api.github.com/users/sethtroisi/events{/privacy}", "received_events_url": "https://api.github.com/users/sethtroisi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-06T09:17:50Z", "updated_at": "2020-03-08T05:46:37Z", "closed_at": "2020-03-07T21:26:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I'm working on deleting Python 2 code in numpy/scipy, which includes a copy of decorator (yay!).\r\n\r\nI see you mention full backwards support to python 2.6 in `src/tests/documentation.py`, but that seems to have been written ~5 years ago. With Python 2 no longer officially supported would you be interested in dropping Python 2 support? It looks like it's possible it would allow for the clean up of a few pieces of logic. I'm happy to help out if so.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/82", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/82/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/82/events", "html_url": "https://github.com/micheles/decorator/issues/82", "id": 575408455, "node_id": "MDU6SXNzdWU1NzU0MDg0NTU=", "number": 82, "title": "no new release on github", "user": {"login": "0xFF1E071F", "id": 55749371, "node_id": "MDQ6VXNlcjU1NzQ5Mzcx", "avatar_url": "https://avatars1.githubusercontent.com/u/55749371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xFF1E071F", "html_url": "https://github.com/0xFF1E071F", "followers_url": "https://api.github.com/users/0xFF1E071F/followers", "following_url": "https://api.github.com/users/0xFF1E071F/following{/other_user}", "gists_url": "https://api.github.com/users/0xFF1E071F/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xFF1E071F/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xFF1E071F/subscriptions", "organizations_url": "https://api.github.com/users/0xFF1E071F/orgs", "repos_url": "https://api.github.com/users/0xFF1E071F/repos", "events_url": "https://api.github.com/users/0xFF1E071F/events{/privacy}", "received_events_url": "https://api.github.com/users/0xFF1E071F/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-04T13:39:03Z", "updated_at": "2020-03-04T20:11:21Z", "closed_at": "2020-03-04T18:18:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello;\r\nnew release is now hosted on pypi.org. Can you add the latest release to here(github) please?\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/80", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/80/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/80/events", "html_url": "https://github.com/micheles/decorator/issues/80", "id": 568368954, "node_id": "MDU6SXNzdWU1NjgzNjg5NTQ=", "number": 80, "title": "Python 2.7: tests fail randomly", "user": {"login": "B4dM4n", "id": 448169, "node_id": "MDQ6VXNlcjQ0ODE2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/448169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/B4dM4n", "html_url": "https://github.com/B4dM4n", "followers_url": "https://api.github.com/users/B4dM4n/followers", "following_url": "https://api.github.com/users/B4dM4n/following{/other_user}", "gists_url": "https://api.github.com/users/B4dM4n/gists{/gist_id}", "starred_url": "https://api.github.com/users/B4dM4n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/B4dM4n/subscriptions", "organizations_url": "https://api.github.com/users/B4dM4n/orgs", "repos_url": "https://api.github.com/users/B4dM4n/repos", "events_url": "https://api.github.com/users/B4dM4n/events{/privacy}", "received_events_url": "https://api.github.com/users/B4dM4n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-20T15:10:49Z", "updated_at": "2020-02-29T05:09:57Z", "closed_at": "2020-02-29T05:09:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running `python2 setup.py test` multiple times yields multiple results. I could observe 3 different error outputs and one success output. Each variant seems to be equally likely.\r\n\r\n<details><summary>Error 1</summary>\r\n<p>\r\n\r\n```log\r\nrunning test\r\nrunning egg_info\r\nwriting src/decorator.egg-info/PKG-INFO\r\nwriting top-level names to src/decorator.egg-info/top_level.txt\r\nwriting dependency_links to src/decorator.egg-info/dependency_links.txt\r\nreading manifest file 'src/decorator.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwarning: no files found matching 'documentation.pdf'\r\nwriting manifest file 'src/decorator.egg-info/SOURCES.txt'\r\nrunning build_ext\r\ntest (tests.test.DocumentationTestCase) ... **********************************************************************\r\nFile \"/tmp/decorator-4.4.1/src/tests/documentation.py\", line 50, in tests.documentation.operation1\r\nFailed example:\r\n    operation1()\r\nExpected:\r\n    operation1 is slow\r\nGot nothing\r\n**********************************************************************\r\nFile \"/tmp/decorator-4.4.1/src/tests/documentation.py\", line 50, in tests.documentation.operation2\r\nFailed example:\r\n    operation2()\r\nExpected:\r\n    operation2 is slow\r\nGot nothing\r\n**********************************************************************\r\n2 items had failures:\r\n   1 of   1 in tests.documentation.operation1\r\n   1 of   1 in tests.documentation.operation2\r\n***Test Failed*** 2 failures.\r\nFAIL\r\ntest_singledispatch1 (tests.test.DocumentationTestCase) ... ok\r\ntest_singledispatch2 (tests.test.DocumentationTestCase) ... ok\r\ntest_add1 (tests.test.ExtraTestCase) ... ok\r\ntest_decorator_factory (tests.test.ExtraTestCase) ... ok\r\ntest_no_first_arg (tests.test.ExtraTestCase) ... ok\r\ntest_qualname (tests.test.ExtraTestCase) ... ok\r\ntest_signature (tests.test.ExtraTestCase) ... ok\r\ntest_unique_filenames (tests.test.ExtraTestCase) ... ok\r\ntest_gen123 (tests.test.GeneratorCallerTestCase) ... ok\r\ntest_c_classes (tests.test.TestSingleDispatch) ... ok\r\ntest_mro (tests.test.TestSingleDispatch) ... ok\r\ntest_mro_conflicts (tests.test.TestSingleDispatch) ... ok\r\ntest_register_abc (tests.test.TestSingleDispatch) ... ok\r\ntest_register_decorator (tests.test.TestSingleDispatch) ... ok\r\ntest_register_error (tests.test.TestSingleDispatch) ... ok\r\ntest_simple_overloads (tests.test.TestSingleDispatch) ... ok\r\ntest_wrapping_attributes (tests.test.TestSingleDispatch) ... ok\r\n\r\n======================================================================\r\nFAIL: test (tests.test.DocumentationTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/decorator-4.4.1/src/tests/test.py\", line 81, in test\r\n    self.assertEqual(err, 0)\r\nAssertionError: 2 != 0\r\n\r\n----------------------------------------------------------------------\r\nRan 18 tests in 5.631s\r\n\r\nFAILED (failures=1)\r\nTest failed: <unittest.runner.TextTestResult run=18 errors=0 failures=1>\r\nerror: Test failed: <unittest.runner.TextTestResult run=18 errors=0 failures=1>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\r\n<details><summary>Error 2</summary>\r\n<p>\r\n\r\n```log\r\nrunning test\r\nrunning egg_info\r\nwriting src/decorator.egg-info/PKG-INFO\r\nwriting top-level names to src/decorator.egg-info/top_level.txt\r\nwriting dependency_links to src/decorator.egg-info/dependency_links.txt\r\nreading manifest file 'src/decorator.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwarning: no files found matching 'documentation.pdf'\r\nwriting manifest file 'src/decorator.egg-info/SOURCES.txt'\r\nrunning build_ext\r\ntest (tests.test.DocumentationTestCase) ... **********************************************************************\r\nFile \"/tmp/decorator-4.4.1/src/tests/documentation.py\", line 50, in tests.documentation.operation1\r\nFailed example:\r\n    operation1()\r\nExpected:\r\n    operation1 is slow\r\nGot nothing\r\n**********************************************************************\r\n1 items had failures:\r\n   1 of   1 in tests.documentation.operation1\r\n***Test Failed*** 1 failures.\r\nFAIL\r\ntest_singledispatch1 (tests.test.DocumentationTestCase) ... ok\r\ntest_singledispatch2 (tests.test.DocumentationTestCase) ... ok\r\ntest_add1 (tests.test.ExtraTestCase) ... ok\r\ntest_decorator_factory (tests.test.ExtraTestCase) ... ok\r\ntest_no_first_arg (tests.test.ExtraTestCase) ... ok\r\ntest_qualname (tests.test.ExtraTestCase) ... ok\r\ntest_signature (tests.test.ExtraTestCase) ... ok\r\ntest_unique_filenames (tests.test.ExtraTestCase) ... ok\r\ntest_gen123 (tests.test.GeneratorCallerTestCase) ... ok\r\ntest_c_classes (tests.test.TestSingleDispatch) ... ok\r\ntest_mro (tests.test.TestSingleDispatch) ... ok\r\ntest_mro_conflicts (tests.test.TestSingleDispatch) ... ok\r\ntest_register_abc (tests.test.TestSingleDispatch) ... ok\r\ntest_register_decorator (tests.test.TestSingleDispatch) ... ok\r\ntest_register_error (tests.test.TestSingleDispatch) ... ok\r\ntest_simple_overloads (tests.test.TestSingleDispatch) ... ok\r\ntest_wrapping_attributes (tests.test.TestSingleDispatch) ... ok\r\n\r\n======================================================================\r\nFAIL: test (tests.test.DocumentationTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/decorator-4.4.1/src/tests/test.py\", line 81, in test\r\n    self.assertEqual(err, 0)\r\nAssertionError: 1 != 0\r\n\r\n----------------------------------------------------------------------\r\nRan 18 tests in 5.634s\r\n\r\nFAILED (failures=1)\r\nTest failed: <unittest.runner.TextTestResult run=18 errors=0 failures=1>\r\nerror: Test failed: <unittest.runner.TextTestResult run=18 errors=0 failures=1>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\r\n<details><summary>Error 3</summary>\r\n<p>\r\n\r\n```log\r\nrunning test\r\nrunning egg_info\r\nwriting src/decorator.egg-info/PKG-INFO\r\nwriting top-level names to src/decorator.egg-info/top_level.txt\r\nwriting dependency_links to src/decorator.egg-info/dependency_links.txt\r\nreading manifest file 'src/decorator.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwarning: no files found matching 'documentation.pdf'\r\nwriting manifest file 'src/decorator.egg-info/SOURCES.txt'\r\nrunning build_ext\r\ntest (tests.test.DocumentationTestCase) ... **********************************************************************\r\nFile \"/tmp/decorator-4.4.1/src/tests/documentation.py\", line 50, in tests.documentation.operation2\r\nFailed example:\r\n    operation2()\r\nExpected:\r\n    operation2 is slow\r\nGot nothing\r\n**********************************************************************\r\n1 items had failures:\r\n   1 of   1 in tests.documentation.operation2\r\n***Test Failed*** 1 failures.\r\nFAIL\r\ntest_singledispatch1 (tests.test.DocumentationTestCase) ... ok\r\ntest_singledispatch2 (tests.test.DocumentationTestCase) ... ok\r\ntest_add1 (tests.test.ExtraTestCase) ... ok\r\ntest_decorator_factory (tests.test.ExtraTestCase) ... ok\r\ntest_no_first_arg (tests.test.ExtraTestCase) ... ok\r\ntest_qualname (tests.test.ExtraTestCase) ... ok\r\ntest_signature (tests.test.ExtraTestCase) ... ok\r\ntest_unique_filenames (tests.test.ExtraTestCase) ... ok\r\ntest_gen123 (tests.test.GeneratorCallerTestCase) ... ok\r\ntest_c_classes (tests.test.TestSingleDispatch) ... ok\r\ntest_mro (tests.test.TestSingleDispatch) ... ok\r\ntest_mro_conflicts (tests.test.TestSingleDispatch) ... ok\r\ntest_register_abc (tests.test.TestSingleDispatch) ... ok\r\ntest_register_decorator (tests.test.TestSingleDispatch) ... ok\r\ntest_register_error (tests.test.TestSingleDispatch) ... ok\r\ntest_simple_overloads (tests.test.TestSingleDispatch) ... ok\r\ntest_wrapping_attributes (tests.test.TestSingleDispatch) ... ok\r\n\r\n======================================================================\r\nFAIL: test (tests.test.DocumentationTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/decorator-4.4.1/src/tests/test.py\", line 81, in test\r\n    self.assertEqual(err, 0)\r\nAssertionError: 1 != 0\r\n\r\n----------------------------------------------------------------------\r\nRan 18 tests in 5.632s\r\n\r\nFAILED (failures=1)\r\nTest failed: <unittest.runner.TextTestResult run=18 errors=0 failures=1>\r\nerror: Test failed: <unittest.runner.TextTestResult run=18 errors=0 failures=1>\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\r\n<details><summary>Success</summary>\r\n<p>\r\n\r\n```log\r\nrunning test\r\nrunning egg_info\r\nwriting src/decorator.egg-info/PKG-INFO\r\nwriting top-level names to src/decorator.egg-info/top_level.txt\r\nwriting dependency_links to src/decorator.egg-info/dependency_links.txt\r\nreading manifest file 'src/decorator.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwarning: no files found matching 'documentation.pdf'\r\nwriting manifest file 'src/decorator.egg-info/SOURCES.txt'\r\nrunning build_ext\r\ntest (tests.test.DocumentationTestCase) ... ok\r\ntest_singledispatch1 (tests.test.DocumentationTestCase) ... ok\r\ntest_singledispatch2 (tests.test.DocumentationTestCase) ... ok\r\ntest_add1 (tests.test.ExtraTestCase) ... ok\r\ntest_decorator_factory (tests.test.ExtraTestCase) ... ok\r\ntest_no_first_arg (tests.test.ExtraTestCase) ... ok\r\ntest_qualname (tests.test.ExtraTestCase) ... ok\r\ntest_signature (tests.test.ExtraTestCase) ... ok\r\ntest_unique_filenames (tests.test.ExtraTestCase) ... ok\r\ntest_gen123 (tests.test.GeneratorCallerTestCase) ... ok\r\ntest_c_classes (tests.test.TestSingleDispatch) ... ok\r\ntest_mro (tests.test.TestSingleDispatch) ... ok\r\ntest_mro_conflicts (tests.test.TestSingleDispatch) ... ok\r\ntest_register_abc (tests.test.TestSingleDispatch) ... ok\r\ntest_register_decorator (tests.test.TestSingleDispatch) ... ok\r\ntest_register_error (tests.test.TestSingleDispatch) ... ok\r\ntest_simple_overloads (tests.test.TestSingleDispatch) ... ok\r\ntest_wrapping_attributes (tests.test.TestSingleDispatch) ... ok\r\n\r\n----------------------------------------------------------------------\r\nRan 18 tests in 5.635s\r\n\r\nOK\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n# How to reproduce\r\n\r\nDockerfile\r\n```Dockerfile\r\nFROM debian:buster\r\n\r\nRUN apt-get update \\\r\n  && apt-get install -y python2 python-setuptools wget \\\r\n  && cd /tmp \\\r\n  && wget https://files.pythonhosted.org/packages/dc/c3/9d378af09f5737cfd524b844cd2fbb0d2263a35c11d712043daab290144d/decorator-4.4.1.tar.gz \\\r\n  && tar xf decorator-4.4.1.tar.gz \\\r\n  && rm decorator-4.4.1.tar.gz \\\r\n  && apt-get clean \\\r\n  && rm -R /var/lib/apt/lists\r\n\r\nWORKDIR /tmp/decorator-4.4.1\r\nENTRYPOINT [ \"/usr/bin/python2\", \"setup.py\", \"test\" ]\r\n```\r\n\r\n```bash\r\nfor i in {1..10}; do docker run --rm -it <image>; done\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/75", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/75/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/75/events", "html_url": "https://github.com/micheles/decorator/issues/75", "id": 545342286, "node_id": "MDU6SXNzdWU1NDUzNDIyODY=", "number": 75, "title": "Python 3.9: AttributeError: 'Thread' object has no attribute 'isAlive'", "user": {"login": "hroncok", "id": 2401856, "node_id": "MDQ6VXNlcjI0MDE4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2401856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroncok", "html_url": "https://github.com/hroncok", "followers_url": "https://api.github.com/users/hroncok/followers", "following_url": "https://api.github.com/users/hroncok/following{/other_user}", "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions", "organizations_url": "https://api.github.com/users/hroncok/orgs", "repos_url": "https://api.github.com/users/hroncok/repos", "events_url": "https://api.github.com/users/hroncok/events{/privacy}", "received_events_url": "https://api.github.com/users/hroncok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-04T22:54:31Z", "updated_at": "2020-01-07T08:59:53Z", "closed_at": "2020-01-07T08:59:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello, we are already testing packages in Fedora with Python 3.9.0a2. The tests of decorator fail with:\r\n\r\n```\r\n+ /usr/bin/python3 setup.py test\r\nrunning test\r\nWARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic test entry point independent of test runner are encouraged to use tox.\r\nrunning egg_info\r\nwriting src/decorator.egg-info/PKG-INFO\r\nwriting dependency_links to src/decorator.egg-info/dependency_links.txt\r\nwriting top-level names to src/decorator.egg-info/top_level.txt\r\nreading manifest file 'src/decorator.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwarning: no files found matching 'README.rst'\r\nwarning: no files found matching 'documentation.pdf'\r\nwriting manifest file 'src/decorator.egg-info/SOURCES.txt'\r\nrunning build_ext\r\ntest_before_after (tests.test.CoroutineTestCase) ... ok\r\ntest_coro_to_func (tests.test.CoroutineTestCase) ... ok\r\ntest (tests.test.DocumentationTestCase) ... **********************************************************************\r\nFile \"/builddir/build/BUILD/decorator-4.4.0/src/tests/documentation.py\", line 531, in tests.documentation\r\nFailed example:\r\n    print(read_data())  # data is not available yet\r\nException raised:\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib64/python3.9/doctest.py\", line 1329, in __run\r\n        exec(compile(example.source, filename, \"single\",\r\n      File \"<doctest tests.documentation[33]>\", line 1, in <module>\r\n        print(read_data())  # data is not available yet\r\n      File \"</builddir/build/BUILD/decorator-4.4.0/src/decorator.py:decorator-gen-26>\", line 2, in read_data\r\n      File \"/builddir/build/BUILD/decorator-4.4.0/src/tests/documentation.py\", line 1532, in blocking\r\n        elif f.thread.isAlive():\r\n    AttributeError: 'Thread' object has no attribute 'isAlive'\r\n**********************************************************************\r\nFile \"/builddir/build/BUILD/decorator-4.4.0/src/tests/documentation.py\", line 535, in tests.documentation\r\nFailed example:\r\n    print(read_data())  # data is not available yet\r\nException raised:\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib64/python3.9/doctest.py\", line 1329, in __run\r\n        exec(compile(example.source, filename, \"single\",\r\n      File \"<doctest tests.documentation[35]>\", line 1, in <module>\r\n        print(read_data())  # data is not available yet\r\n      File \"</builddir/build/BUILD/decorator-4.4.0/src/decorator.py:decorator-gen-26>\", line 2, in read_data\r\n      File \"/builddir/build/BUILD/decorator-4.4.0/src/tests/documentation.py\", line 1532, in blocking\r\n        elif f.thread.isAlive():\r\n    AttributeError: 'Thread' object has no attribute 'isAlive'\r\n**********************************************************************\r\nFile \"/builddir/build/BUILD/decorator-4.4.0/src/tests/documentation.py\", line 539, in tests.documentation\r\nFailed example:\r\n    print(read_data())\r\nException raised:\r\n    Traceback (most recent call last):\r\n      File \"/usr/lib64/python3.9/doctest.py\", line 1329, in __run\r\n        exec(compile(example.source, filename, \"single\",\r\n      File \"<doctest tests.documentation[37]>\", line 1, in <module>\r\n        print(read_data())\r\n      File \"</builddir/build/BUILD/decorator-4.4.0/src/decorator.py:decorator-gen-26>\", line 2, in read_data\r\n      File \"/builddir/build/BUILD/decorator-4.4.0/src/tests/documentation.py\", line 1532, in blocking\r\n        elif f.thread.isAlive():\r\n    AttributeError: 'Thread' object has no attribute 'isAlive'\r\n**********************************************************************\r\n1 items had failures:\r\n   3 of  88 in tests.documentation\r\n***Test Failed*** 3 failures.\r\nFAIL\r\ntest_singledispatch1 (tests.test.DocumentationTestCase) ... ok\r\ntest_singledispatch2 (tests.test.DocumentationTestCase) ... ok\r\ntest_add1 (tests.test.ExtraTestCase) ... ok\r\ntest_decorator_factory (tests.test.ExtraTestCase) ... ok\r\ntest_no_first_arg (tests.test.ExtraTestCase) ... ok\r\ntest_qualname (tests.test.ExtraTestCase) ... ok\r\ntest_signature (tests.test.ExtraTestCase) ... ok\r\ntest_unique_filenames (tests.test.ExtraTestCase) ... ok\r\ntest_gen123 (tests.test.GeneratorCallerTestCase) ... ok\r\ntest_c_classes (tests.test.TestSingleDispatch) ... ok\r\ntest_mro (tests.test.TestSingleDispatch) ... ok\r\ntest_mro_conflicts (tests.test.TestSingleDispatch) ... ok\r\ntest_register_abc (tests.test.TestSingleDispatch) ... ok\r\ntest_register_decorator (tests.test.TestSingleDispatch) ... ok\r\ntest_register_error (tests.test.TestSingleDispatch) ... ok\r\ntest_simple_overloads (tests.test.TestSingleDispatch) ... ok\r\ntest_wrapping_attributes (tests.test.TestSingleDispatch) ... ok\r\n\r\n======================================================================\r\nFAIL: test (tests.test.DocumentationTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/decorator-4.4.0/src/tests/test.py\", line 81, in test\r\n    self.assertEqual(err, 0)\r\nAssertionError: 3 != 0\r\n\r\n----------------------------------------------------------------------\r\nRan 20 tests in 5.660s\r\n\r\nFAILED (failures=1)\r\nTest failed: <unittest.runner.TextTestResult run=20 errors=0 failures=1>\r\n```\r\n\r\nIndeed,` isAlive()` is deprecated, use `is_alive()` instead:\r\n\r\n```\r\n$ python3.8 -c 'import threading; t = threading.Thread(); t.isAlive()'\r\n<string>:1: DeprecationWarning: isAlive() is deprecated, use is_alive() instead\r\n```\r\n\r\n```\r\n$ python3.9 -c 'import threading; t = threading.Thread(); t.isAlive()'\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\nAttributeError: 'Thread' object has no attribute 'isAlive'\r\n```\r\n\r\nWill submit a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/73", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/73/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/73/events", "html_url": "https://github.com/micheles/decorator/issues/73", "id": 516558029, "node_id": "MDU6SXNzdWU1MTY1NTgwMjk=", "number": 73, "title": "Use of __file__ breaks PyOxidizer", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-02T10:10:52Z", "updated_at": "2019-11-03T07:56:21Z", "closed_at": "2019-11-03T05:54:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears the use of `__file__` here is unnecessary, or could at least be `__name__ + 'py'` as a fallback.  See https://github.com/indygreg/PyOxidizer/issues/69", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/72", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/72/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/72/events", "html_url": "https://github.com/micheles/decorator/issues/72", "id": 498872086, "node_id": "MDU6SXNzdWU0OTg4NzIwODY=", "number": 72, "title": "PyPI page shows raw ReStructuredText source", "user": {"login": "mgedmin", "id": 159967, "node_id": "MDQ6VXNlcjE1OTk2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/159967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgedmin", "html_url": "https://github.com/mgedmin", "followers_url": "https://api.github.com/users/mgedmin/followers", "following_url": "https://api.github.com/users/mgedmin/following{/other_user}", "gists_url": "https://api.github.com/users/mgedmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgedmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgedmin/subscriptions", "organizations_url": "https://api.github.com/users/mgedmin/orgs", "repos_url": "https://api.github.com/users/mgedmin/repos", "events_url": "https://api.github.com/users/mgedmin/events{/privacy}", "received_events_url": "https://api.github.com/users/mgedmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-26T13:04:59Z", "updated_at": "2019-10-27T08:14:36Z", "closed_at": "2019-10-27T08:14:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently https://pypi.org/project/decorator/ shows raw ReStructuredText and looks like this:\r\n\r\n![Ekrano nuotrauka i\u0161 2019-09-26 16-02-59](https://user-images.githubusercontent.com/159967/65690178-2780e700-e077-11e9-9603-e946b1c2be4e.png)\r\n\r\nThis is typically caused by some ReST error, although I'm currently having trouble seeing what it might be.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/71", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/71/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/71/events", "html_url": "https://github.com/micheles/decorator/issues/71", "id": 468592626, "node_id": "MDU6SXNzdWU0Njg1OTI2MjY=", "number": 71, "title": "How do I create a \"signature-changing\" decorator with decorator.py?", "user": {"login": "mrmachine", "id": 51939, "node_id": "MDQ6VXNlcjUxOTM5", "avatar_url": "https://avatars3.githubusercontent.com/u/51939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrmachine", "html_url": "https://github.com/mrmachine", "followers_url": "https://api.github.com/users/mrmachine/followers", "following_url": "https://api.github.com/users/mrmachine/following{/other_user}", "gists_url": "https://api.github.com/users/mrmachine/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrmachine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrmachine/subscriptions", "organizations_url": "https://api.github.com/users/mrmachine/orgs", "repos_url": "https://api.github.com/users/mrmachine/repos", "events_url": "https://api.github.com/users/mrmachine/events{/privacy}", "received_events_url": "https://api.github.com/users/mrmachine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-16T11:09:17Z", "updated_at": "2019-07-22T08:44:30Z", "closed_at": "2019-07-18T10:30:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs (https://github.com/micheles/decorator/blob/master/docs/documentation.md#decoratordecorator) say:\r\n\r\n> The decorator function can be used as a signature-changing decorator, just like classmethod and staticmethod. \r\n\r\nBut then goes on to say:\r\n\r\n> But classmethod and staticmethod return generic objects which are not callable. Instead, decorator returns signature-preserving decorators (i.e. functions with a single argument).\r\n\r\nAnd the following trivial example doesn't appear to change the signature at all?\r\n\r\nWhat I want to do is create a decorator that will add a few optional keyword arguments to the decorated function. At first I thought I should be able to do something like:\r\n\r\n```python\r\n@decorator.decorator\r\ndef mydec(func, new_kw=None, another_new_kw=None, *args, **kwargs):\r\n    if new_kw:\r\n        # do something\r\n    return func(*args, **kwargs)\r\n```\r\n\r\nBut this returns a decorator factory (also useful, but not for me in this case).\r\n\r\nThen, I thought I could do it with `decorate`, like this:\r\n\r\n```python\r\ndef _mydec(func, new_kw=None, another_new_kw=None, *args, **kwargs):\r\n    if new_kw:\r\n        # do something else when the decorated function is executed\r\n    return func(*args, **kwargs)\r\n\r\ndef mydec(func):\r\n    newfunc = decorator.decorate(func, _mydec)\r\n    # do something else with func when the decorator is created\r\n    return newfunc\r\n```\r\n\r\nBut this doesn't work. The decorated function still only accepts the original keyword arguments.\r\n\r\nI guess the two methods are functionally equivalent, but `decorator.decorate` allows to do something with the original function at the time the decorator is created (vs at the time runtime, with `decorator.decorator`.\r\n\r\nI also found https://github.com/micheles/decorator/issues/55 and https://github.com/micheles/decorator/pull/58 which seem to imply that signature-changing decorators are not supported at all and go against the entire philosophy of `decorator.py`.\r\n\r\nBut this seems to be a direct contradiction of the quoted docs:\r\n\r\n> The decorator function can be used as a signature-changing decorator, just like classmethod and staticmethod. \r\n\r\nCan I use `decorator.py` to create signature-changing decorators, with new required or optional args or keyword args?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/69", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/69/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/69/events", "html_url": "https://github.com/micheles/decorator/issues/69", "id": 453698876, "node_id": "MDU6SXNzdWU0NTM2OTg4NzY=", "number": 69, "title": "Add `decorator` to the typeshed so it's useable in mypy-annotated code", "user": {"login": "RafiB", "id": 2770880, "node_id": "MDQ6VXNlcjI3NzA4ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2770880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RafiB", "html_url": "https://github.com/RafiB", "followers_url": "https://api.github.com/users/RafiB/followers", "following_url": "https://api.github.com/users/RafiB/following{/other_user}", "gists_url": "https://api.github.com/users/RafiB/gists{/gist_id}", "starred_url": "https://api.github.com/users/RafiB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RafiB/subscriptions", "organizations_url": "https://api.github.com/users/RafiB/orgs", "repos_url": "https://api.github.com/users/RafiB/repos", "events_url": "https://api.github.com/users/RafiB/events{/privacy}", "received_events_url": "https://api.github.com/users/RafiB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-06-07T21:23:10Z", "updated_at": "2019-10-27T07:48:55Z", "closed_at": "2019-10-27T07:48:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the moment using `@decorator` with the mypy option `--disallow-untyped-decorators` results in a mypy error since the library isn't type-annotated.\r\n\r\nvia email, Michele okay'd me adding the library to the typeshed (https://github.com/python/typeshed) -- posting here for visibility.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/68", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/68/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/68/events", "html_url": "https://github.com/micheles/decorator/issues/68", "id": 447045925, "node_id": "MDU6SXNzdWU0NDcwNDU5MjU=", "number": 68, "title": "Description could be \u201cdecorator  for Humans\u201d~", "user": {"login": "leafonsword", "id": 1754580, "node_id": "MDQ6VXNlcjE3NTQ1ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1754580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leafonsword", "html_url": "https://github.com/leafonsword", "followers_url": "https://api.github.com/users/leafonsword/followers", "following_url": "https://api.github.com/users/leafonsword/following{/other_user}", "gists_url": "https://api.github.com/users/leafonsword/gists{/gist_id}", "starred_url": "https://api.github.com/users/leafonsword/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leafonsword/subscriptions", "organizations_url": "https://api.github.com/users/leafonsword/orgs", "repos_url": "https://api.github.com/users/leafonsword/repos", "events_url": "https://api.github.com/users/leafonsword/events{/privacy}", "received_events_url": "https://api.github.com/users/leafonsword/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-22T10:05:11Z", "updated_at": "2019-10-27T08:07:20Z", "closed_at": "2019-10-27T08:07:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python has many \"XX  for Humans\"  third-party libs, for example-- Python HTTP Requests for Humans, SQL for Humans;\r\n\r\nYour decorator is an awesome and easy to use lib compared to Python official decorator,  why not modify Description to \u201cdecorator  for Humans\u201d \uff1f", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/67", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/67/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/67/events", "html_url": "https://github.com/micheles/decorator/issues/67", "id": 439795128, "node_id": "MDU6SXNzdWU0Mzk3OTUxMjg=", "number": 67, "title": "ContextManager + access the decorated function in __enter__", "user": {"login": "pmav99", "id": 411196, "node_id": "MDQ6VXNlcjQxMTE5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/411196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmav99", "html_url": "https://github.com/pmav99", "followers_url": "https://api.github.com/users/pmav99/followers", "following_url": "https://api.github.com/users/pmav99/following{/other_user}", "gists_url": "https://api.github.com/users/pmav99/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmav99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmav99/subscriptions", "organizations_url": "https://api.github.com/users/pmav99/orgs", "repos_url": "https://api.github.com/users/pmav99/repos", "events_url": "https://api.github.com/users/pmav99/events{/privacy}", "received_events_url": "https://api.github.com/users/pmav99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-02T21:24:16Z", "updated_at": "2019-05-07T13:11:32Z", "closed_at": "2019-05-07T13:11:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a context manager that creates some resources and cleans them up on exit. I would like, if possible, to use it as a decorator, too. But when I do, I also need to have access to the name of the decorated function. I managed to do this by subclassing `decorator.ContextManager` and overriding `__call__`:\r\n``` python\r\n    def __call__(self, func):\r\n        \"\"\"Context manager decorator\"\"\"\r\n        self.__func__ = func    # this is the line I added\r\n        return decorator.FunctionMaker.create(\r\n            func, \"with _self_: return _func_(%(shortsignature)s)\",\r\n            dict(_self_=self, _func_=func), __wrapped__=func)\r\n```\r\n\r\n1. Is it possible to achieve the same thing with \"vanilla\" `decorator.ContextManager`? \r\n2. If not, would you accept a PR for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/65", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/65/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/65/events", "html_url": "https://github.com/micheles/decorator/issues/65", "id": 431465038, "node_id": "MDU6SXNzdWU0MzE0NjUwMzg=", "number": 65, "title": "Looks like it works on staticmethods  in python3.7", "user": {"login": "yjqiang", "id": 8900942, "node_id": "MDQ6VXNlcjg5MDA5NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8900942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yjqiang", "html_url": "https://github.com/yjqiang", "followers_url": "https://api.github.com/users/yjqiang/followers", "following_url": "https://api.github.com/users/yjqiang/following{/other_user}", "gists_url": "https://api.github.com/users/yjqiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yjqiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yjqiang/subscriptions", "organizations_url": "https://api.github.com/users/yjqiang/orgs", "repos_url": "https://api.github.com/users/yjqiang/repos", "events_url": "https://api.github.com/users/yjqiang/events{/privacy}", "received_events_url": "https://api.github.com/users/yjqiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-04-10T12:04:00Z", "updated_at": "2019-04-10T14:04:59Z", "closed_at": "2019-04-10T13:26:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "> In Python 3.5, many such limitations have been removed, but I still think that it is cleaner and safer to decorate only functions. If you want to decorate things like classmethods/staticmethods and general callables - which I will never support in the decorator module - I suggest you to look at the wrapt project by Graeme Dumpleton.\r\n\r\n```py\r\nfrom decorator import decorator\r\nimport asyncio\r\nimport time\r\n\r\n\r\n@decorator\r\nasync def log_start_stop(func, *args, **kwargs):\r\n    t0 = int(time.time())\r\n    print(t0, f'core={func}, args={args},kwargs={kwargs}')\r\n    result = await func(*args, **kwargs)\r\n    t1 = int(time.time())\r\n    print(t1, f'result={result}')\r\n\r\n\r\nclass A:\r\n    @staticmethod\r\n    @log_start_stop\r\n    async def make_task(n):\r\n        for i in range(n):\r\n            await asyncio.sleep(1)\r\n        return 100\r\n\r\n\r\na = A()\r\nprint(a)\r\nloop = asyncio.get_event_loop()\r\ntry:\r\n    loop.run_until_complete(A.make_task(5))\r\nfinally:\r\n    loop.run_until_complete(loop.shutdown_asyncgens())\r\n    loop.close()\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/64", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/64/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/64/events", "html_url": "https://github.com/micheles/decorator/issues/64", "id": 418557868, "node_id": "MDU6SXNzdWU0MTg1NTc4Njg=", "number": 64, "title": "Dynamic decorator exception", "user": {"login": "yoelcortes", "id": 29529649, "node_id": "MDQ6VXNlcjI5NTI5NjQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/29529649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoelcortes", "html_url": "https://github.com/yoelcortes", "followers_url": "https://api.github.com/users/yoelcortes/followers", "following_url": "https://api.github.com/users/yoelcortes/following{/other_user}", "gists_url": "https://api.github.com/users/yoelcortes/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoelcortes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoelcortes/subscriptions", "organizations_url": "https://api.github.com/users/yoelcortes/orgs", "repos_url": "https://api.github.com/users/yoelcortes/repos", "events_url": "https://api.github.com/users/yoelcortes/events{/privacy}", "received_events_url": "https://api.github.com/users/yoelcortes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-07T23:11:03Z", "updated_at": "2019-03-08T05:12:56Z", "closed_at": "2019-03-08T04:43:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the decorator dynamically the function signature if ok, but an exception occurs:\r\n\r\nTHIS WORKS:\r\n``` python\r\ndef args_decorator(*args):\r\n    def funcval_wt_args(func):\r\n        def wrapper(value):\r\n            return func(value), args\r\n        return wrapper\r\n    return funcval_wt_args\r\n\r\n@args_decorator(1, 2, 3)\r\ndef func(x):\r\n    return x\r\n\r\nprint(func(10)) # -> (10, (1, 2, 3))\r\n```\r\n\r\nTHIS DOES NOT WORK:\r\n```python\r\nfrom decorator import decorator\r\n\r\ndef args_decorator(*args):\r\n    @decorator\r\n    def funcval_wt_args(func):\r\n        def wrapper(value):\r\n            return func(value), args\r\n        return wrapper\r\n    return funcval_wt_args\r\n\r\n@args_decorator(1, 2, 3)\r\ndef func(x):\r\n    return x\r\n\r\nprint(func(10)) # -> TypeError: funcval_wt_args() takes 1 positional argument but 2 were given\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/62", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/62/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/62/events", "html_url": "https://github.com/micheles/decorator/issues/62", "id": 402635712, "node_id": "MDU6SXNzdWU0MDI2MzU3MTI=", "number": 62, "title": "docs: first paragraph in first section (\"introduction\") section describe what this is/does", "user": {"login": "jmtd", "id": 63694, "node_id": "MDQ6VXNlcjYzNjk0", "avatar_url": "https://avatars1.githubusercontent.com/u/63694?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmtd", "html_url": "https://github.com/jmtd", "followers_url": "https://api.github.com/users/jmtd/followers", "following_url": "https://api.github.com/users/jmtd/following{/other_user}", "gists_url": "https://api.github.com/users/jmtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmtd/subscriptions", "organizations_url": "https://api.github.com/users/jmtd/orgs", "repos_url": "https://api.github.com/users/jmtd/repos", "events_url": "https://api.github.com/users/jmtd/events{/privacy}", "received_events_url": "https://api.github.com/users/jmtd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-24T10:19:22Z", "updated_at": "2019-03-08T17:23:18Z", "closed_at": "2019-03-08T17:23:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I read somewhere today that [\"In regards to PyPI, the \"decorator\" package is ~300 lines in total, and is one of the top most downloaded packages from pypi.\"](https://lwn.net/Articles/777407/). So I was curious and set off to read up on what the library is and what it does. \r\n\r\nYour README.rst does not explain what this library does, it just explains how to install it, or run the test suite, etc. The \"For the impatient\" is the closest to explaining what this does, by providing an example of using it for something. So it might be possible to extract what it does from that context, although I couldn't on first attempt.\r\n\r\nFollowing the link to the full docs, https://decorator.readthedocs.io/en/latest/, Nothing on the front page explains what this is or does, but fair enough, it's just a ToC. However, the \"introduction\" section does not explain what this or does, either. The next section, \"Whats new\", is not relevant if you don't know what it is or does (yet), and the section after that, \"Usefulness of decorators\", seems to explain *why* the libraries does what it does, without explaining *what* it does.\r\n\r\nI'm not trying to be too pedantic here. I've written a lot of Python, although I do not consider myself to be a Python programmer, in particular; and I suspect I've *used* decorators and probably even this library before (by virtue of hacking on something that used it). But despite that I genuinely do not know what this library does despite having read all of the above.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/61", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/61/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/61/events", "html_url": "https://github.com/micheles/decorator/issues/61", "id": 400244704, "node_id": "MDU6SXNzdWU0MDAyNDQ3MDQ=", "number": 61, "title": "4.3.1 missing from PyPI", "user": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars3.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-17T12:00:48Z", "updated_at": "2019-01-24T13:46:11Z", "closed_at": "2019-01-24T13:46:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The repo has a 4.3.1 release tagged from 6 months ago but the latest release on PyPI ist 4.3.0: https://pypi.org/project/decorator/#history\r\n\r\nIs this on purpose?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/59", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/59/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/59/events", "html_url": "https://github.com/micheles/decorator/issues/59", "id": 393793176, "node_id": "MDU6SXNzdWUzOTM3OTMxNzY=", "number": 59, "title": "A confused question.", "user": {"login": "nasyxx", "id": 5007613, "node_id": "MDQ6VXNlcjUwMDc2MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/5007613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nasyxx", "html_url": "https://github.com/nasyxx", "followers_url": "https://api.github.com/users/nasyxx/followers", "following_url": "https://api.github.com/users/nasyxx/following{/other_user}", "gists_url": "https://api.github.com/users/nasyxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/nasyxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nasyxx/subscriptions", "organizations_url": "https://api.github.com/users/nasyxx/orgs", "repos_url": "https://api.github.com/users/nasyxx/repos", "events_url": "https://api.github.com/users/nasyxx/events{/privacy}", "received_events_url": "https://api.github.com/users/nasyxx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-24T01:04:37Z", "updated_at": "2019-05-07T13:11:59Z", "closed_at": "2019-05-07T13:11:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "For the code below, I can use `handle()` with default `name=\"name\"` or `handle(name=\"h name\")`.  It extends a keyword parameter \"name\" of my `handle` function.\r\n\r\n```python\r\ndef get(url: str):\r\n    \"\"\"Get it.\"\"\"\r\n\r\n    def _decorator(func):\r\n        \"\"\"Decorate func.\"\"\"\r\n        res = f\"Got url: {url}\"\r\n\r\n        @wraps(func)\r\n        def wrapper(*, name: str = \"name\"):\r\n            \"\"\"Wrap func.\"\"\"\r\n            return func(f\"Name: {name}\\nThe url: {url}\\n{res}\")\r\n\r\n        return wrapper\r\n\r\n    return _decorator\r\n\r\n@get(\"(xxx.com)\")\r\ndef handle(res):\r\n    print(res)\r\n```\r\n\r\n```python\r\n>>> handle()\r\nName: name\r\nThe url: (xxx.com)\r\nGet url: (xxx.com)\r\n\r\n>>>handle(name = \"h name\")\r\nName: h name\r\nThe url: (xxx.com)\r\nGet url: (xxx.com)\r\n```\r\n\r\nWhen I used the decorator, is there a way for me to extend the keyword parameters of `handle` function as above?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/56", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/56/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/56/events", "html_url": "https://github.com/micheles/decorator/issues/56", "id": 374310633, "node_id": "MDU6SXNzdWUzNzQzMTA2MzM=", "number": 56, "title": "A decorated generator is not a generator... and other similar issues", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-26T09:55:26Z", "updated_at": "2018-11-04T05:14:35Z", "closed_at": "2018-11-04T05:14:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In a library for pytest I need to wrap a fixture written by the user. Pytest supports both generator and normal functions as fixture. I would like to preserve this nature in the decorated function.\r\n\r\nSurprisingly, `decorator` does not seem to support this case. Below the corresponding test. I will give it a try because I need the feature, and if it seems elegant/interesting enough, I might propose a PR.\r\n\r\n```python\r\nfrom inspect import isgeneratorfunction\r\nfrom decorator import decorate\r\n\r\n# A my_normal function\r\ndef my_normal():\r\n    for i in range(10):\r\n        print(i)\r\n    return\r\n\r\nassert not isgeneratorfunction(my_normal)\r\n\r\n\r\n# A generator\r\ndef my_generator():\r\n    for i in range(10):\r\n        print(i)\r\n        yield i\r\n\r\nassert isgeneratorfunction(my_generator)\r\n\r\n\r\n# A my_normal wrapper around a normal function\r\ndef normal_around_normal(f, *args, **kwargs):\r\n    return my_normal()\r\n\r\nassert not isgeneratorfunction(decorate(my_generator, normal_around_normal))\r\n\r\n\r\n# A my_normal wrapper around a generator function\r\ndef normal_around_gen(f, *args, **kwargs):\r\n    for res in my_generator():\r\n        # do not yield !\r\n        pass\r\n    return 15\r\n\r\nassert not isgeneratorfunction(decorate(my_generator, normal_around_gen))\r\n\r\n\r\n# A generator wrapper around a generator function\r\ndef gen_around_gen(f, *args, **kwargs):\r\n    for res in my_generator():\r\n        yield res\r\n\r\nassert isgeneratorfunction(decorate(my_generator, gen_around_gen))\r\n\r\n\r\n# A generator wrapper around a my_normal function\r\ndef gen_around_normal(f, *args, **kwargs):\r\n    yield my_normal()\r\n\r\nassert isgeneratorfunction(decorate(my_normal, gen_around_normal))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/55", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/55/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/55/events", "html_url": "https://github.com/micheles/decorator/issues/55", "id": 374304041, "node_id": "MDU6SXNzdWUzNzQzMDQwNDE=", "number": 55, "title": "Possibility to add additional arguments to the decorated function", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-26T09:38:18Z", "updated_at": "2019-03-08T17:11:16Z", "closed_at": "2019-01-24T14:08:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI'm a big fan of your library and I used it in many of [mine](https://github.com/smarie/OVERVIEW#python) :).\r\n\r\nI recently came in [pytest-steps](https://smarie.github.io/python-pytest-steps/) with the need to \r\n * add arguments to a decorated function\r\n * but tolerate that these arguments can already be there\r\n\r\nThe use-case is that the decorated function is a pytest test function, that can or can not already have the \"request\" argument in its signature, but I need the wrapped function to have it always. I came up with the following hack, maybe this is something you would be interested in ? \r\n\r\n```python\r\nclass MyFunctionMaker(FunctionMaker):\r\n    \"\"\"\r\n    Overrides FunctionMaker so that additional arguments can be inserted in the resulting signature.\r\n    \"\"\"\r\n\r\n    @classmethod\r\n    def create(cls, obj, body, evaldict, defaults=None,\r\n               doc=None, module=None, addsource=True, add_args=None, **attrs):\r\n        \"\"\"\r\n        Create a function from the strings name, signature and body.\r\n        evaldict is the evaluation dictionary. If addsource is true an\r\n        attribute __source__ is added to the result. The attributes attrs\r\n        are added, if any.\r\n        \"\"\"\r\n        if isinstance(obj, str):  # \"name(signature)\"\r\n            name, rest = obj.strip().split('(', 1)\r\n            signature = rest[:-1]  # strip a right parens\r\n            func = None\r\n        else:  # a function\r\n            name = None\r\n            signature = None\r\n            func = obj\r\n        self = cls(func, name, signature, defaults, doc, module)\r\n        ibody = '\\n'.join('    ' + line for line in body.splitlines())\r\n        caller = evaldict.get('_call_')  # when called from `decorate`\r\n        if caller and iscoroutinefunction(caller):\r\n            body = ('async def %(name)s(%(signature)s):\\n' + ibody).replace(\r\n                'return', 'return await')\r\n        else:\r\n            body = 'def %(name)s(%(signature)s):\\n' + ibody\r\n\r\n        # --- HACK part 1 -----\r\n        if add_args is not None:\r\n            for arg in add_args:\r\n                if arg not in self.args:\r\n                    self.args = [arg] + self.args\r\n                else:\r\n                    # the argument already exists in the wrapped function, no problem.\r\n                    pass\r\n\r\n            # update signatures (this is a copy of the init code)\r\n            allargs = list(self.args)\r\n            allshortargs = list(self.args)\r\n            if self.varargs:\r\n                allargs.append('*' + self.varargs)\r\n                allshortargs.append('*' + self.varargs)\r\n            elif self.kwonlyargs:\r\n                allargs.append('*')  # single star syntax\r\n            for a in self.kwonlyargs:\r\n                allargs.append('%s=None' % a)\r\n                allshortargs.append('%s=%s' % (a, a))\r\n            if self.varkw:\r\n                allargs.append('**' + self.varkw)\r\n                allshortargs.append('**' + self.varkw)\r\n            self.signature = ', '.join(allargs)\r\n            self.shortsignature = ', '.join(allshortargs)\r\n        # ---------------------------\r\n\r\n        func = self.make(body, evaldict, addsource, **attrs)\r\n\r\n        # ----- HACK part 2\r\n        if add_args is not None:\r\n            # delete this annotation otherwise the inspect.signature method relies on the wrapped object's signature\r\n            del func.__wrapped__\r\n\r\n        return func\r\n\r\n\r\ndef my_decorate(func, caller, extras=(), additional_args=None):\r\n    \"\"\"\r\n    A clone of 'decorate' with the possibility to add additional args to the function signature.\r\n    Additional arguments will be positional and will sit at the beginning of \r\n    \"\"\"\r\n    evaldict = dict(_call_=caller, _func_=func)\r\n    es = ''\r\n    for i, extra in enumerate(extras):\r\n        ex = '_e%d_' % i\r\n        evaldict[ex] = extra\r\n        es += ex + ', '\r\n    fun = MyFunctionMaker.create(\r\n        func, \"return _call_(_func_, %s%%(shortsignature)s)\" % es,\r\n        evaldict, add_args=reversed(additional_args or ()), __wrapped__=func)\r\n    if hasattr(func, '__qualname__'):\r\n        fun.__qualname__ = func.__qualname__\r\n    return fun\r\n```\r\n\r\nHere is how I use it in a complex case. One additional argument `________step_name_` is guaranteed to not be in the function signature, while the 'request' argument may or may not be there\r\n\r\n```python\r\n# -- first create the logic\r\ndef _execute_step_with_monitor(step_name, request, *args, **kwargs):\r\n    # ...\r\n\r\n# -- then create the appropriate function signature according to wrapped function signature\r\nif 'request' not in f_sig.parameters:\r\n    # easy: we can add it explicitly in our signature\r\n    def step_function_wrapper(f, ________step_name_, request, *args, **kwargs):\r\n        \"\"\"Executes a step with the execution monitor for this pytest node\"\"\"\r\n        _execute_step_with_monitor(________step_name_, request, *args, **kwargs)\r\nelse:\r\n    # harder: we have to retrieve the value for request. Thanks, inspect package !\r\n    def step_function_wrapper(f, ________step_name_, *args, **kwargs):\r\n        \"\"\"Executes a step with the execution monitor for this pytest node\"\"\"\r\n        request = f_sig.bind(*args, **kwargs).arguments['request']\r\n        _execute_step_with_monitor(________step_name_, request, *args, **kwargs)\r\n\r\n# decorate it so that its signature is the same than test_func, with just an additional argument for test step\r\n# and if needed an additional argument for request\r\nwrapped_test_function = my_decorate(test_func, step_function_wrapper,\r\n                                    additional_args=['________step_name_', 'request'])\r\n```\r\n\r\nIf you think that this feature is interesting, I can make a Pull Request.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/54", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/54/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/54/events", "html_url": "https://github.com/micheles/decorator/issues/54", "id": 368294544, "node_id": "MDU6SXNzdWUzNjgyOTQ1NDQ=", "number": 54, "title": "Fully signature preserving equivalent of functools.wraps", "user": {"login": "shoyer", "id": 1217238, "node_id": "MDQ6VXNlcjEyMTcyMzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shoyer", "html_url": "https://github.com/shoyer", "followers_url": "https://api.github.com/users/shoyer/followers", "following_url": "https://api.github.com/users/shoyer/following{/other_user}", "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions", "organizations_url": "https://api.github.com/users/shoyer/orgs", "repos_url": "https://api.github.com/users/shoyer/repos", "events_url": "https://api.github.com/users/shoyer/events{/privacy}", "received_events_url": "https://api.github.com/users/shoyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-10-09T16:26:48Z", "updated_at": "2019-03-08T17:24:20Z", "closed_at": "2019-03-08T17:24:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Python 3, `functools.wraps` nominally preserves function signatures, e.g.,\r\n```python\r\nimport functools\r\n\r\ndef original(x):\r\n    return x\r\n\r\n@functools.wraps(original)\r\ndef wrapper(*args, **kwargs):\r\n    return original(*args, **kwargs)\r\n```\r\nThe function has the right associated signature object (so introspection works properly) but abstraction is still a little leaky, e.g., for handling invalid function arguments:\r\n```\r\nIn [11]: wrapper(y=1)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-11-1e0b778ae20b> in <module>()\r\n----> 1 wrapper(y=1)\r\n\r\n<ipython-input-4-878d38897098> in wrapper(*args, **kwargs)\r\n      6 @functools.wraps(original)\r\n      7 def wrapper(*args, **kwargs):\r\n----> 8     return original(*args, **kwargs)\r\n\r\nTypeError: original() got an unexpected keyword argument 'y'\r\n```\r\n\r\nI think the decorator library can produce fully compatible function signatures, but the interface is a little different: \r\n```python\r\n@functools.partial(decorate, original)\r\ndef wrapper(original, *args, **kwargs):\r\n    return original(*args, **kwargs)\r\n```\r\nIn particular, it's awkward that I need to include the original function in the wrapper signature (e.g., `def wrapper(original, *args, **kwargs)` rather than `def wrapper(*args, **kwargs)` .\r\n\r\nIs there an easy way to write a drop-in replacement for `functools.wraps` with the decorator library?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/51", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/51/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/51/events", "html_url": "https://github.com/micheles/decorator/issues/51", "id": 345532484, "node_id": "MDU6SXNzdWUzNDU1MzI0ODQ=", "number": 51, "title": "@decorator.decorator on top of @decorator.decorator", "user": {"login": "wobeng", "id": 11966846, "node_id": "MDQ6VXNlcjExOTY2ODQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/11966846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wobeng", "html_url": "https://github.com/wobeng", "followers_url": "https://api.github.com/users/wobeng/followers", "following_url": "https://api.github.com/users/wobeng/following{/other_user}", "gists_url": "https://api.github.com/users/wobeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/wobeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wobeng/subscriptions", "organizations_url": "https://api.github.com/users/wobeng/orgs", "repos_url": "https://api.github.com/users/wobeng/repos", "events_url": "https://api.github.com/users/wobeng/events{/privacy}", "received_events_url": "https://api.github.com/users/wobeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-29T13:51:36Z", "updated_at": "2018-07-30T06:29:22Z", "closed_at": "2018-07-30T06:29:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport decorator\r\n\r\n\r\n@decorator.decorator\r\ndef first(f, *args, **kwargs):\r\n    print('Print this first')\r\n    return f(*args, **kwargs)\r\n\r\n@first\r\n@decorator.decorator\r\ndef second(f, *args, **kwargs):\r\n    print('Print this second')\r\n    return f(*args, **kwargs)\r\n\r\n@second\r\ndef main():\r\n    return\r\n```\r\n\r\nHi,  I was expecting the code to print out \r\n```\r\nPrint this first\r\nPrint this second\r\n```\r\n\r\nbut it's only printing out \r\n```\r\nPrint this first\r\n```\r\nAm I doing anything wrong?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/50", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/50/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/50/events", "html_url": "https://github.com/micheles/decorator/issues/50", "id": 321728981, "node_id": "MDU6SXNzdWUzMjE3Mjg5ODE=", "number": 50, "title": "The documentation of this library is not very accessible ", "user": {"login": "amirma", "id": 2546225, "node_id": "MDQ6VXNlcjI1NDYyMjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2546225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amirma", "html_url": "https://github.com/amirma", "followers_url": "https://api.github.com/users/amirma/followers", "following_url": "https://api.github.com/users/amirma/following{/other_user}", "gists_url": "https://api.github.com/users/amirma/gists{/gist_id}", "starred_url": "https://api.github.com/users/amirma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amirma/subscriptions", "organizations_url": "https://api.github.com/users/amirma/orgs", "repos_url": "https://api.github.com/users/amirma/repos", "events_url": "https://api.github.com/users/amirma/events{/privacy}", "received_events_url": "https://api.github.com/users/amirma/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-09T21:14:04Z", "updated_at": "2018-05-12T03:26:38Z", "closed_at": "2018-05-12T03:26:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm opening this as an issue because it is hindrance to it's usability. Even thought there are plenty of examples and explanation, the documentation is ineffective, in my subjective opinion. As a user I want to see/access the library API as fast as possible to see if it does what I need,  without having to scan through _Introduction, What\u2019s New in version 4, Usefulness of decorators, Definitions, Statement of the problem and The solution._\r\nSuggestions:\r\n- Put few simple examples on the README page showing the salient properties of the library.\r\n- Put the gist of the functionality in a separate section at the top of the documentation.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/49", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/49/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/49/events", "html_url": "https://github.com/micheles/decorator/issues/49", "id": 320298555, "node_id": "MDU6SXNzdWUzMjAyOTg1NTU=", "number": 49, "title": "How do I covert below using your decorator module", "user": {"login": "wobeng", "id": 11966846, "node_id": "MDQ6VXNlcjExOTY2ODQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/11966846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wobeng", "html_url": "https://github.com/wobeng", "followers_url": "https://api.github.com/users/wobeng/followers", "following_url": "https://api.github.com/users/wobeng/following{/other_user}", "gists_url": "https://api.github.com/users/wobeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/wobeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wobeng/subscriptions", "organizations_url": "https://api.github.com/users/wobeng/orgs", "repos_url": "https://api.github.com/users/wobeng/repos", "events_url": "https://api.github.com/users/wobeng/events{/privacy}", "received_events_url": "https://api.github.com/users/wobeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-04T14:33:45Z", "updated_at": "2018-05-11T02:26:09Z", "closed_at": "2018-05-11T02:26:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello micheles, \r\n\r\nGreat work\r\n\r\nHow do I covert below using your decorator module\r\n\r\n```\r\ndef decorator_name(f):\r\n    @another_decorator_name\r\n    def wrapper(*args, **kwargs):\r\n        return f(*args, **kwargs)\r\n\r\n    return wrapper\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/48", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/48/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/48/events", "html_url": "https://github.com/micheles/decorator/issues/48", "id": 314627634, "node_id": "MDU6SXNzdWUzMTQ2Mjc2MzQ=", "number": 48, "title": "4.3.0 has back-incompatible changes", "user": {"login": "tpoterba", "id": 10562794, "node_id": "MDQ6VXNlcjEwNTYyNzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/10562794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tpoterba", "html_url": "https://github.com/tpoterba", "followers_url": "https://api.github.com/users/tpoterba/followers", "following_url": "https://api.github.com/users/tpoterba/following{/other_user}", "gists_url": "https://api.github.com/users/tpoterba/gists{/gist_id}", "starred_url": "https://api.github.com/users/tpoterba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tpoterba/subscriptions", "organizations_url": "https://api.github.com/users/tpoterba/orgs", "repos_url": "https://api.github.com/users/tpoterba/repos", "events_url": "https://api.github.com/users/tpoterba/events{/privacy}", "received_events_url": "https://api.github.com/users/tpoterba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-16T12:25:48Z", "updated_at": "2018-05-05T03:22:10Z", "closed_at": "2018-05-05T03:22:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "The version 4.3.0 removes `getargspec` from the module, which broke some scripts that worked with 4.2.1. We've resolved our issues by relying on a specific snapshot instead of 4.x, but I imagine there are others who might be affected as well. \r\n\r\nWas this change intentional? Semantic versioning dictates that minor versions are back-compatible, so it might be best to add it back until a 5.x version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/47", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/47/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/47/events", "html_url": "https://github.com/micheles/decorator/issues/47", "id": 288395118, "node_id": "MDU6SXNzdWUyODgzOTUxMTg=", "number": 47, "title": "new release breaks IPython", "user": {"login": "spapini", "id": 35419564, "node_id": "MDQ6VXNlcjM1NDE5NTY0", "avatar_url": "https://avatars2.githubusercontent.com/u/35419564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spapini", "html_url": "https://github.com/spapini", "followers_url": "https://api.github.com/users/spapini/followers", "following_url": "https://api.github.com/users/spapini/following{/other_user}", "gists_url": "https://api.github.com/users/spapini/gists{/gist_id}", "starred_url": "https://api.github.com/users/spapini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spapini/subscriptions", "organizations_url": "https://api.github.com/users/spapini/orgs", "repos_url": "https://api.github.com/users/spapini/repos", "events_url": "https://api.github.com/users/spapini/events{/privacy}", "received_events_url": "https://api.github.com/users/spapini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-14T09:36:20Z", "updated_at": "2018-01-14T11:55:20Z", "closed_at": "2018-01-14T10:20:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback (most recent call last):\r\n  File \"/usr/local/bin/ipython\", line 7, in <module>\r\n    from IPython import start_ipython\r\n  File \"/usr/local/lib/python2.7/site-packages/IPython/__init__.py\", line 48, in <module>\r\n    from .core.application import Application\r\n  File \"/usr/local/lib/python2.7/site-packages/IPython/core/application.py\", line 23, in <module>\r\n    from traitlets.config.application import Application, catch_config_error\r\n  File \"/usr/local/lib/python2.7/site-packages/traitlets/config/__init__.py\", line 6, in <module>\r\n    from .application import *\r\n  File \"/usr/local/lib/python2.7/site-packages/traitlets/config/application.py\", line 120, in <module>\r\n    class Application(SingletonConfigurable):\r\n  File \"/usr/local/lib/python2.7/site-packages/traitlets/config/application.py\", line 291, in Application\r\n    def initialize(self, argv=None):\r\nTypeError: catch_config_error() takes exactly 2 arguments (1 given)\r\n\r\n\r\ncatch_config_error is a decorator decorated with this package", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/44", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/44/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/44/events", "html_url": "https://github.com/micheles/decorator/issues/44", "id": 257074858, "node_id": "MDU6SXNzdWUyNTcwNzQ4NTg=", "number": 44, "title": "Question concerning decorators with arguments", "user": {"login": "neimad1985", "id": 8987812, "node_id": "MDQ6VXNlcjg5ODc4MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8987812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neimad1985", "html_url": "https://github.com/neimad1985", "followers_url": "https://api.github.com/users/neimad1985/followers", "following_url": "https://api.github.com/users/neimad1985/following{/other_user}", "gists_url": "https://api.github.com/users/neimad1985/gists{/gist_id}", "starred_url": "https://api.github.com/users/neimad1985/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neimad1985/subscriptions", "organizations_url": "https://api.github.com/users/neimad1985/orgs", "repos_url": "https://api.github.com/users/neimad1985/repos", "events_url": "https://api.github.com/users/neimad1985/events{/privacy}", "received_events_url": "https://api.github.com/users/neimad1985/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-12T14:57:47Z", "updated_at": "2018-01-14T07:40:22Z", "closed_at": "2017-09-19T09:15:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "First thanks for the great work.\r\n\r\nI've been reading your whole documentation and I am certainly missing the point, I am struggling with a syntax issue, cannot find the proper one.\r\n\r\nSuppose I want to do the following dumb thing:\r\n\r\n```python\r\n\r\nimport decorator\r\n\r\ndef printer(text):\r\n    def _printer(func, *args, **kwargs):\r\n        print(text)\r\n        func(*args, **kwargs)\r\n    return decorator.decorator(_printer)\r\n\r\n@printer(\"Hello\")\r\ndef world():\r\n    print(\"World\")\r\n\r\n```\r\nWhen executing, I get the following result:\r\n```python\r\n>>>world()\r\nHello\r\nWorld\r\n```\r\nAnd that's totally fine !\r\n\r\n\r\nSuppose now that I want my text to be optional. To do so I give a default value of `None` to the `text` parameter, check whether there is something to print or not in my `_printer` function and omit the argument when decorating. Resulting in the following code: \r\n\r\n```python\r\nimport decorator\r\n\r\ndef printer(text=None):\r\n    def _printer(func, *args, **kwargs):\r\n        if text:\r\n            print(text)\r\n        func(*args, **kwargs)\r\n    return decorator.decorator(_printer)\r\n\r\n@printer()\r\ndef world():\r\n    print(\"World\")\r\n```\r\n\r\nExecution is now:\r\n```python\r\n>>>world()\r\nWorld\r\n```\r\n\r\nAnd once again that's fine but a detail bothers me, I am forced to write `@printer()` instead of `@printer` which I would prefer. But I cannot do so because if I do this leads to the following error:\r\n\r\n```python\r\n>>>world()\r\nTraceback (most recent call last):\r\n  File \"toto.py\", line 14, in <module>\r\n    world()\r\nTypeError: _printer() missing 1 required positional argument: 'func'\r\n```\r\n\r\nI have based my code on your `blocking` example in the documentation but that last detail beats me.\r\nIs there a way to modify this code to achieve what I want or must I stay with the `@printer()` syntax ?\r\nThanks very much.\r\n\r\nNeimad\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/42", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/42/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/42/events", "html_url": "https://github.com/micheles/decorator/issues/42", "id": 243255324, "node_id": "MDU6SXNzdWUyNDMyNTUzMjQ=", "number": 42, "title": "No support for adding parameters in decorators.", "user": {"login": "kfir-drivenets", "id": 21293663, "node_id": "MDQ6VXNlcjIxMjkzNjYz", "avatar_url": "https://avatars1.githubusercontent.com/u/21293663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kfir-drivenets", "html_url": "https://github.com/kfir-drivenets", "followers_url": "https://api.github.com/users/kfir-drivenets/followers", "following_url": "https://api.github.com/users/kfir-drivenets/following{/other_user}", "gists_url": "https://api.github.com/users/kfir-drivenets/gists{/gist_id}", "starred_url": "https://api.github.com/users/kfir-drivenets/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kfir-drivenets/subscriptions", "organizations_url": "https://api.github.com/users/kfir-drivenets/orgs", "repos_url": "https://api.github.com/users/kfir-drivenets/repos", "events_url": "https://api.github.com/users/kfir-drivenets/events{/privacy}", "received_events_url": "https://api.github.com/users/kfir-drivenets/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-16T17:59:19Z", "updated_at": "2017-07-23T13:19:08Z", "closed_at": "2017-07-23T13:19:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is no support for adding arguments to a decorated function inside a decorator.\r\nA simple example will show the issue.\r\n```python\r\nimport decorator\r\n\r\n@decorator.decorator\r\ndef foo(f, *args, **kwargs):\r\n    return f(1, *args, **kwargs)\r\n\r\ndef bar(a):\r\n    print \"bar got {}\".format(a)\r\n\r\nbar()\r\n```\r\n\r\nThe following code results in the following exception:\r\n```python\r\npython crap.py                                                                                                                                                                                                          \r\nTraceback (most recent call last):\r\n  File \"crap.py\", line 10, in <module>\r\n    bar()\r\nTypeError: bar() takes exactly 1 argument (0 given)\r\n```\r\n\r\nI understand that this error occurs since the decorator function copies the signature of the decorated function. Is there a way to make this work? Or is this not considered a valid use case for the decorator library?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/41", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/41/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/41/events", "html_url": "https://github.com/micheles/decorator/issues/41", "id": 232381683, "node_id": "MDU6SXNzdWUyMzIzODE2ODM=", "number": 41, "title": "Output coroutine functions", "user": {"login": "Victor-Savu", "id": 2445711, "node_id": "MDQ6VXNlcjI0NDU3MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2445711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Victor-Savu", "html_url": "https://github.com/Victor-Savu", "followers_url": "https://api.github.com/users/Victor-Savu/followers", "following_url": "https://api.github.com/users/Victor-Savu/following{/other_user}", "gists_url": "https://api.github.com/users/Victor-Savu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Victor-Savu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Victor-Savu/subscriptions", "organizations_url": "https://api.github.com/users/Victor-Savu/orgs", "repos_url": "https://api.github.com/users/Victor-Savu/repos", "events_url": "https://api.github.com/users/Victor-Savu/events{/privacy}", "received_events_url": "https://api.github.com/users/Victor-Savu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-05-30T21:04:53Z", "updated_at": "2017-07-16T23:59:33Z", "closed_at": "2017-06-26T21:29:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great if `@decorator` could be used to create decorators which produce [coroutine functions](https://docs.python.org/3/library/inspect.html#inspect.iscoroutinefunction).  Is there already such functionality and I just didn't find it? If not, would this be feasible? If so, are there any plans for this? Would you accept PRs?\r\n\r\nExample:\r\n```python\r\nfrom inspect import iscoroutinefunction\r\nfrom decorator import decorator\r\n\r\n@decorator\r\nasync def ensure_coro(function, *args, **kwargs): \r\n    ret = function(*args, **kwargs)\r\n    if iscoroutinefunction(function):\r\n        ret = await ret\r\n    return ret\r\n\r\n@ensure_coro\r\ndef foo():\r\n    return 42\r\n\r\nassert iscoroutinefunction(foo)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/40", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/40/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/40/events", "html_url": "https://github.com/micheles/decorator/issues/40", "id": 225260898, "node_id": "MDU6SXNzdWUyMjUyNjA4OTg=", "number": 40, "title": "nicer multiple decorator support", "user": {"login": "tolomea", "id": 805072, "node_id": "MDQ6VXNlcjgwNTA3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/805072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tolomea", "html_url": "https://github.com/tolomea", "followers_url": "https://api.github.com/users/tolomea/followers", "following_url": "https://api.github.com/users/tolomea/following{/other_user}", "gists_url": "https://api.github.com/users/tolomea/gists{/gist_id}", "starred_url": "https://api.github.com/users/tolomea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tolomea/subscriptions", "organizations_url": "https://api.github.com/users/tolomea/orgs", "repos_url": "https://api.github.com/users/tolomea/repos", "events_url": "https://api.github.com/users/tolomea/events{/privacy}", "received_events_url": "https://api.github.com/users/tolomea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-29T14:37:56Z", "updated_at": "2017-06-03T14:47:02Z", "closed_at": "2017-06-03T13:55:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had a suggestion and wasn't sure where to put it, the basic idea is could the decorate function support multiple decorators in a single call so that:\r\n\r\n    def my_decorator(func):\r\n        return decorate(decorate(func, _caller), _precondition_caller)\r\n\r\ncould be rewritten as:\r\n\r\n    def my_decorator(func):\r\n        return decorate(func, _precondition_caller, _caller)\r\n\r\nMaybe I'm just approaching decorator composition wrong, if so I'd love to see an alternative way. \r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/34", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/34/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/34/events", "html_url": "https://github.com/micheles/decorator/issues/34", "id": 174854701, "node_id": "MDU6SXNzdWUxNzQ4NTQ3MDE=", "number": 34, "title": "Deprecated Warning with Python 3.5", "user": {"login": "AdrianaG83", "id": 21369241, "node_id": "MDQ6VXNlcjIxMzY5MjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/21369241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdrianaG83", "html_url": "https://github.com/AdrianaG83", "followers_url": "https://api.github.com/users/AdrianaG83/followers", "following_url": "https://api.github.com/users/AdrianaG83/following{/other_user}", "gists_url": "https://api.github.com/users/AdrianaG83/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdrianaG83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdrianaG83/subscriptions", "organizations_url": "https://api.github.com/users/AdrianaG83/orgs", "repos_url": "https://api.github.com/users/AdrianaG83/repos", "events_url": "https://api.github.com/users/AdrianaG83/events{/privacy}", "received_events_url": "https://api.github.com/users/AdrianaG83/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "micheles", "id": 2463856, "node_id": "MDQ6VXNlcjI0NjM4NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2463856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micheles", "html_url": "https://github.com/micheles", "followers_url": "https://api.github.com/users/micheles/followers", "following_url": "https://api.github.com/users/micheles/following{/other_user}", "gists_url": "https://api.github.com/users/micheles/gists{/gist_id}", "starred_url": "https://api.github.com/users/micheles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micheles/subscriptions", "organizations_url": "https://api.github.com/users/micheles/orgs", "repos_url": "https://api.github.com/users/micheles/repos", "events_url": "https://api.github.com/users/micheles/events{/privacy}", "received_events_url": "https://api.github.com/users/micheles/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "micheles", "id": 2463856, "node_id": "MDQ6VXNlcjI0NjM4NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2463856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micheles", "html_url": "https://github.com/micheles", "followers_url": "https://api.github.com/users/micheles/followers", "following_url": "https://api.github.com/users/micheles/following{/other_user}", "gists_url": "https://api.github.com/users/micheles/gists{/gist_id}", "starred_url": "https://api.github.com/users/micheles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micheles/subscriptions", "organizations_url": "https://api.github.com/users/micheles/orgs", "repos_url": "https://api.github.com/users/micheles/repos", "events_url": "https://api.github.com/users/micheles/events{/privacy}", "received_events_url": "https://api.github.com/users/micheles/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2016-09-02T21:51:50Z", "updated_at": "2017-06-04T02:14:46Z", "closed_at": "2017-06-03T13:58:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI'm learning Python. I installed my first python program (Chatterbot 0.4.6) that uses NLTK. I installed last version of nltk (3.2.1), but it doesn't work for inspect.getargspec in decorators.py\n\nHow to solve this problem? I tried to install decorator.py and put it in nltk fold but nltk has a module named as decorators (not decorator).\n\nCan you help me, please?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/33", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/33/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/33/events", "html_url": "https://github.com/micheles/decorator/issues/33", "id": 170385663, "node_id": "MDU6SXNzdWUxNzAzODU2NjM=", "number": 33, "title": "Include \"argument-resolving decorator\" into decorator package ?", "user": {"login": "pakal", "id": 330629, "node_id": "MDQ6VXNlcjMzMDYyOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/330629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pakal", "html_url": "https://github.com/pakal", "followers_url": "https://api.github.com/users/pakal/followers", "following_url": "https://api.github.com/users/pakal/following{/other_user}", "gists_url": "https://api.github.com/users/pakal/gists{/gist_id}", "starred_url": "https://api.github.com/users/pakal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pakal/subscriptions", "organizations_url": "https://api.github.com/users/pakal/orgs", "repos_url": "https://api.github.com/users/pakal/repos", "events_url": "https://api.github.com/users/pakal/events{/privacy}", "received_events_url": "https://api.github.com/users/pakal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-10T10:35:59Z", "updated_at": "2017-01-16T04:55:52Z", "closed_at": "2017-01-16T04:55:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've developed a handy utility which looks like @decorator, but pre-resolves arguments before passing them to the wrapper function (using https://docs.python.org/2/library/inspect.html#inspect.getcallargs).\n\nIt's very useful when you need to decorate many functions, without knowing it advanced if they'll be passed arguments by position (<_args>) or by keywords (<_*kwargs>). Since incoming arguments are normalized in a simple dict, you can inspect and modify them freely. \n\nI used it to automatically inject or commit/rollback SQL sessions which travelled through program, for example.\n\nBelow is an example of use.\n\nWould you be OK for me to prepare a pull request including that utility next to the standard \"decorator\".\n\n```\n        @resolving_decorator\n        def inject_session(func, **all_kwargs):\n            if not all_kwargs[\"session\"]:\n                all_kwargs[\"session\"] = \"<SESSION>\"\n            return func(**all_kwargs)\n\n        @inject_session\n        def myfunc(session):\n            return session\n\n        assert myfunc(None) == myfunc(session=None) == \"<SESSION>\"\n        assert myfunc(\"<stuff>\") == myfunc(session=\"<stuff>\") == \"<stuff>\"\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/32", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/32/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/32/events", "html_url": "https://github.com/micheles/decorator/issues/32", "id": 159934673, "node_id": "MDU6SXNzdWUxNTk5MzQ2NzM=", "number": 32, "title": "bug in pypi distfile", "user": {"login": "0-wiz-0", "id": 2221844, "node_id": "MDQ6VXNlcjIyMjE4NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2221844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0-wiz-0", "html_url": "https://github.com/0-wiz-0", "followers_url": "https://api.github.com/users/0-wiz-0/followers", "following_url": "https://api.github.com/users/0-wiz-0/following{/other_user}", "gists_url": "https://api.github.com/users/0-wiz-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/0-wiz-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0-wiz-0/subscriptions", "organizations_url": "https://api.github.com/users/0-wiz-0/orgs", "repos_url": "https://api.github.com/users/0-wiz-0/repos", "events_url": "https://api.github.com/users/0-wiz-0/events{/privacy}", "received_events_url": "https://api.github.com/users/0-wiz-0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "micheles", "id": 2463856, "node_id": "MDQ6VXNlcjI0NjM4NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2463856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micheles", "html_url": "https://github.com/micheles", "followers_url": "https://api.github.com/users/micheles/followers", "following_url": "https://api.github.com/users/micheles/following{/other_user}", "gists_url": "https://api.github.com/users/micheles/gists{/gist_id}", "starred_url": "https://api.github.com/users/micheles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micheles/subscriptions", "organizations_url": "https://api.github.com/users/micheles/orgs", "repos_url": "https://api.github.com/users/micheles/repos", "events_url": "https://api.github.com/users/micheles/events{/privacy}", "received_events_url": "https://api.github.com/users/micheles/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "micheles", "id": 2463856, "node_id": "MDQ6VXNlcjI0NjM4NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2463856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micheles", "html_url": "https://github.com/micheles", "followers_url": "https://api.github.com/users/micheles/followers", "following_url": "https://api.github.com/users/micheles/following{/other_user}", "gists_url": "https://api.github.com/users/micheles/gists{/gist_id}", "starred_url": "https://api.github.com/users/micheles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micheles/subscriptions", "organizations_url": "https://api.github.com/users/micheles/orgs", "repos_url": "https://api.github.com/users/micheles/repos", "events_url": "https://api.github.com/users/micheles/events{/privacy}", "received_events_url": "https://api.github.com/users/micheles/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-06-13T12:04:50Z", "updated_at": "2017-01-16T04:53:20Z", "closed_at": "2017-01-16T04:53:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "The distfiles for decorator 4.0.9 and 4.0.10 contain a backup file, `src/decorator.egg-info/SOURCES.txt~`, that is installed. Please remove it for the next release.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/31", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/31/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/31/events", "html_url": "https://github.com/micheles/decorator/issues/31", "id": 158176855, "node_id": "MDU6SXNzdWUxNTgxNzY4NTU=", "number": 31, "title": "License?", "user": {"login": "jakirkham", "id": 3019665, "node_id": "MDQ6VXNlcjMwMTk2NjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3019665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakirkham", "html_url": "https://github.com/jakirkham", "followers_url": "https://api.github.com/users/jakirkham/followers", "following_url": "https://api.github.com/users/jakirkham/following{/other_user}", "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions", "organizations_url": "https://api.github.com/users/jakirkham/orgs", "repos_url": "https://api.github.com/users/jakirkham/repos", "events_url": "https://api.github.com/users/jakirkham/events{/privacy}", "received_events_url": "https://api.github.com/users/jakirkham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-02T15:56:19Z", "updated_at": "2016-06-02T18:31:21Z", "closed_at": "2016-06-02T18:31:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like BSD 3-clause. Is that correct?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/29", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/29/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/29/events", "html_url": "https://github.com/micheles/decorator/issues/29", "id": 142271122, "node_id": "MDU6SXNzdWUxNDIyNzExMjI=", "number": 29, "title": "@memoized_property", "user": {"login": "amigrave", "id": 93337, "node_id": "MDQ6VXNlcjkzMzM3", "avatar_url": "https://avatars1.githubusercontent.com/u/93337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amigrave", "html_url": "https://github.com/amigrave", "followers_url": "https://api.github.com/users/amigrave/followers", "following_url": "https://api.github.com/users/amigrave/following{/other_user}", "gists_url": "https://api.github.com/users/amigrave/gists{/gist_id}", "starred_url": "https://api.github.com/users/amigrave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amigrave/subscriptions", "organizations_url": "https://api.github.com/users/amigrave/orgs", "repos_url": "https://api.github.com/users/amigrave/repos", "events_url": "https://api.github.com/users/amigrave/events{/privacy}", "received_events_url": "https://api.github.com/users/amigrave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-21T06:54:01Z", "updated_at": "2016-06-07T02:20:19Z", "closed_at": "2016-06-07T02:20:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be cool if decorator includes a `@memoized_property` decorator for class methods.\n\neg: https://github.com/estebistec/python-memoized-property/blob/master/memoized_property.py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/27", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/27/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/27/events", "html_url": "https://github.com/micheles/decorator/issues/27", "id": 132090859, "node_id": "MDU6SXNzdWUxMzIwOTA4NTk=", "number": 27, "title": "broken release: pypi release 4.0.7 has 4.0.8 tgz/wheel", "user": {"login": "jensens", "id": 157140, "node_id": "MDQ6VXNlcjE1NzE0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/157140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jensens", "html_url": "https://github.com/jensens", "followers_url": "https://api.github.com/users/jensens/followers", "following_url": "https://api.github.com/users/jensens/following{/other_user}", "gists_url": "https://api.github.com/users/jensens/gists{/gist_id}", "starred_url": "https://api.github.com/users/jensens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jensens/subscriptions", "organizations_url": "https://api.github.com/users/jensens/orgs", "repos_url": "https://api.github.com/users/jensens/repos", "events_url": "https://api.github.com/users/jensens/events{/privacy}", "received_events_url": "https://api.github.com/users/jensens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-08T09:29:38Z", "updated_at": "2016-02-08T10:20:27Z", "closed_at": "2016-02-08T10:20:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "the release https://pypi.python.org/pypi/decorator/4.0.7 is broken. setuptools is not able to install it. reason: the files are all 4.0.8, but the pypi version number is 4.0.7. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/26", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/26/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/26/events", "html_url": "https://github.com/micheles/decorator/issues/26", "id": 131986821, "node_id": "MDU6SXNzdWUxMzE5ODY4MjE=", "number": 26, "title": "Decorator 4.0.8", "user": {"login": "papachoco", "id": 244702, "node_id": "MDQ6VXNlcjI0NDcwMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/244702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papachoco", "html_url": "https://github.com/papachoco", "followers_url": "https://api.github.com/users/papachoco/followers", "following_url": "https://api.github.com/users/papachoco/following{/other_user}", "gists_url": "https://api.github.com/users/papachoco/gists{/gist_id}", "starred_url": "https://api.github.com/users/papachoco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papachoco/subscriptions", "organizations_url": "https://api.github.com/users/papachoco/orgs", "repos_url": "https://api.github.com/users/papachoco/repos", "events_url": "https://api.github.com/users/papachoco/events{/privacy}", "received_events_url": "https://api.github.com/users/papachoco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-07T17:11:03Z", "updated_at": "2016-02-08T10:20:51Z", "closed_at": "2016-02-08T10:20:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nIt's there any way to place a sdist (legacy egg) for decorator 4.0.8 in pypi. We have legacy buildout code that requires it.\n\nThanks a lot\n\nCarlos\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/25", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/25/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/25/events", "html_url": "https://github.com/micheles/decorator/issues/25", "id": 131959184, "node_id": "MDU6SXNzdWUxMzE5NTkxODQ=", "number": 25, "title": "No files uploaded to PyPI for 4.0.7", "user": {"login": "The-Compiler", "id": 625793, "node_id": "MDQ6VXNlcjYyNTc5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/625793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/The-Compiler", "html_url": "https://github.com/The-Compiler", "followers_url": "https://api.github.com/users/The-Compiler/followers", "following_url": "https://api.github.com/users/The-Compiler/following{/other_user}", "gists_url": "https://api.github.com/users/The-Compiler/gists{/gist_id}", "starred_url": "https://api.github.com/users/The-Compiler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/The-Compiler/subscriptions", "organizations_url": "https://api.github.com/users/The-Compiler/orgs", "repos_url": "https://api.github.com/users/The-Compiler/repos", "events_url": "https://api.github.com/users/The-Compiler/events{/privacy}", "received_events_url": "https://api.github.com/users/The-Compiler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-07T11:12:51Z", "updated_at": "2016-02-08T05:27:12Z", "closed_at": "2016-02-07T15:31:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "[On PyPI](https://pypi.python.org/pypi/decorator/4.0.7) it seems the 4.0.7 release has nothing uploaded, so installing it fails:\n\n```\n$ pip install decorator==4.0.7\nCollecting decorator==4.0.7\n  Could not find a version that satisfies the requirement decorator==4.0.7 (from versions: 3.3.1, 3.3.2, 3.3.3, 3.4.0, 3.4.2, 4.0.0, 4.0.1, 4.0.2, 4.0.3, 4.0.4, 4.0.6)\nNo matching distribution found for decorator==4.0.7\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/23", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/23/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/23/events", "html_url": "https://github.com/micheles/decorator/issues/23", "id": 131454851, "node_id": "MDU6SXNzdWUxMzE0NTQ4NTE=", "number": 23, "title": "Newline insertion in FunctionMaker.make", "user": {"login": "azjps", "id": 7894671, "node_id": "MDQ6VXNlcjc4OTQ2NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7894671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azjps", "html_url": "https://github.com/azjps", "followers_url": "https://api.github.com/users/azjps/followers", "following_url": "https://api.github.com/users/azjps/following{/other_user}", "gists_url": "https://api.github.com/users/azjps/gists{/gist_id}", "starred_url": "https://api.github.com/users/azjps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azjps/subscriptions", "organizations_url": "https://api.github.com/users/azjps/orgs", "repos_url": "https://api.github.com/users/azjps/repos", "events_url": "https://api.github.com/users/azjps/events{/privacy}", "received_events_url": "https://api.github.com/users/azjps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-04T19:44:38Z", "updated_at": "2016-02-08T16:37:00Z", "closed_at": "2016-02-06T05:55:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I was wondering what the reason was behind removing the append of the newline in [this commit](https://github.com/micheles/decorator/commit/a26c55c0d527e1b09b996e29f9d9d816d085addd#diff-f8677e3ea7b2e149185e885e191e6ffe). As far as I can tell, without a trailing newline python 2.7.x will raise a `SyntaxError: unexpected EOF while parsing` for `compile(\"def foo(): return bar\", ..)` (and since its a SyntaxError, it can be pretty difficult to trace with the pdb family). Thanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/22", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/22/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/22/events", "html_url": "https://github.com/micheles/decorator/issues/22", "id": 123409467, "node_id": "MDU6SXNzdWUxMjM0MDk0Njc=", "number": 22, "title": "kwargs is empty with decorator", "user": {"login": "lichen2013", "id": 3983266, "node_id": "MDQ6VXNlcjM5ODMyNjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3983266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lichen2013", "html_url": "https://github.com/lichen2013", "followers_url": "https://api.github.com/users/lichen2013/followers", "following_url": "https://api.github.com/users/lichen2013/following{/other_user}", "gists_url": "https://api.github.com/users/lichen2013/gists{/gist_id}", "starred_url": "https://api.github.com/users/lichen2013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lichen2013/subscriptions", "organizations_url": "https://api.github.com/users/lichen2013/orgs", "repos_url": "https://api.github.com/users/lichen2013/repos", "events_url": "https://api.github.com/users/lichen2013/events{/privacy}", "received_events_url": "https://api.github.com/users/lichen2013/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-22T04:16:27Z", "updated_at": "2015-12-23T07:41:44Z", "closed_at": "2015-12-23T07:41:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python : 2.7,  decorator (4.0.4)\n\nTest with the following code:\n\n```\nimport decorator\n\n@decorator.decorator\ndef test_decorator(f, *args, **kwargs):\n    print('check args:')\n    print(args)\n    print('check kwargs')\n    print(kwargs)\n    return f(*args, **kwargs)\n\nclass TestObject(object):\n\n    @test_decorator\n    def test(self, x, y, z):\n        return x + y + z\n\n\ntest = TestObject()\ntest.test(x=2,y=2,z=4)\n```\n\nThe output is:\n\n```\ncheck args:\n(<__main__.TestObject object at 0x7f33a0b4ec50>, 2, 2, 4)\ncheck kwargs\n{}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/21", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/21/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/21/events", "html_url": "https://github.com/micheles/decorator/issues/21", "id": 121568942, "node_id": "MDU6SXNzdWUxMjE1Njg5NDI=", "number": 21, "title": "Tarball on PyPI contains src/tests/x.py which is not compatible with Py3", "user": {"login": "jelly", "id": 67428, "node_id": "MDQ6VXNlcjY3NDI4", "avatar_url": "https://avatars0.githubusercontent.com/u/67428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jelly", "html_url": "https://github.com/jelly", "followers_url": "https://api.github.com/users/jelly/followers", "following_url": "https://api.github.com/users/jelly/following{/other_user}", "gists_url": "https://api.github.com/users/jelly/gists{/gist_id}", "starred_url": "https://api.github.com/users/jelly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jelly/subscriptions", "organizations_url": "https://api.github.com/users/jelly/orgs", "repos_url": "https://api.github.com/users/jelly/repos", "events_url": "https://api.github.com/users/jelly/events{/privacy}", "received_events_url": "https://api.github.com/users/jelly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-10T20:19:49Z", "updated_at": "2015-12-11T04:17:17Z", "closed_at": "2015-12-11T04:17:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "The tarball which I use to package decorator in Arch Linux has the file x.py in it (which can not be found in the Git repo)\n\nThe file itself is not compatible with Python 3, which makes python3 setup.py test fail.\nI've created a patch for it in our [svn repo](https://projects.archlinux.org/svntogit/community.git/tree/trunk/print_unittest.patch?h=packages/python-decorator) but I rather see a fix in the tarball (so I don't have to patch it all the time)\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/17", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/17/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/17/events", "html_url": "https://github.com/micheles/decorator/issues/17", "id": 108331813, "node_id": "MDU6SXNzdWUxMDgzMzE4MTM=", "number": 17, "title": "Deleted", "user": {"login": "micheles", "id": 2463856, "node_id": "MDQ6VXNlcjI0NjM4NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2463856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micheles", "html_url": "https://github.com/micheles", "followers_url": "https://api.github.com/users/micheles/followers", "following_url": "https://api.github.com/users/micheles/following{/other_user}", "gists_url": "https://api.github.com/users/micheles/gists{/gist_id}", "starred_url": "https://api.github.com/users/micheles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micheles/subscriptions", "organizations_url": "https://api.github.com/users/micheles/orgs", "repos_url": "https://api.github.com/users/micheles/repos", "events_url": "https://api.github.com/users/micheles/events{/privacy}", "received_events_url": "https://api.github.com/users/micheles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-25T13:56:40Z", "updated_at": "2015-09-25T13:59:59Z", "closed_at": "2015-09-25T13:59:59Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/14", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/14/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/14/events", "html_url": "https://github.com/micheles/decorator/issues/14", "id": 107498117, "node_id": "MDU6SXNzdWUxMDc0OTgxMTc=", "number": 14, "title": "memoize decorator example has cache leak when used on an instance", "user": {"login": "rbu", "id": 65913, "node_id": "MDQ6VXNlcjY1OTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/65913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rbu", "html_url": "https://github.com/rbu", "followers_url": "https://api.github.com/users/rbu/followers", "following_url": "https://api.github.com/users/rbu/following{/other_user}", "gists_url": "https://api.github.com/users/rbu/gists{/gist_id}", "starred_url": "https://api.github.com/users/rbu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rbu/subscriptions", "organizations_url": "https://api.github.com/users/rbu/orgs", "repos_url": "https://api.github.com/users/rbu/repos", "events_url": "https://api.github.com/users/rbu/events{/privacy}", "received_events_url": "https://api.github.com/users/rbu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-21T12:15:33Z", "updated_at": "2015-09-25T02:22:07Z", "closed_at": "2015-09-25T02:22:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The memoize decorator as shown on https://pythonhosted.org/decorator/documentation.html#the-solution will cause a memory leak when decorating an `instancemethod`, as the instance (self) is considered part of the cache key and cached results are not cleaned up as the instance is deleted. In fact, the instance is never deleted as the cache key still holds a reference to it.\n\nWhile this does not necessarily need fixing (as it's just an example), there should be a big warning on the code. Or rather, maybe you can come up with a better example that can be implemented without such issues. The decorator as-is is currently copied to several projects or used as a base for extensions. See https://www.google.com/search?q=\"frozenset+is+used+to+ensure+hashability\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/13", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/13/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/13/events", "html_url": "https://github.com/micheles/decorator/issues/13", "id": 97634111, "node_id": "MDU6SXNzdWU5NzYzNDExMQ==", "number": 13, "title": "Brown bag Release 4.0.1 (readme missing from manifest)", "user": {"login": "phgross", "id": 485755, "node_id": "MDQ6VXNlcjQ4NTc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/485755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phgross", "html_url": "https://github.com/phgross", "followers_url": "https://api.github.com/users/phgross/followers", "following_url": "https://api.github.com/users/phgross/following{/other_user}", "gists_url": "https://api.github.com/users/phgross/gists{/gist_id}", "starred_url": "https://api.github.com/users/phgross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phgross/subscriptions", "organizations_url": "https://api.github.com/users/phgross/orgs", "repos_url": "https://api.github.com/users/phgross/repos", "events_url": "https://api.github.com/users/phgross/events{/privacy}", "received_events_url": "https://api.github.com/users/phgross/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-28T07:19:46Z", "updated_at": "2015-07-28T08:03:31Z", "closed_at": "2015-07-28T07:37:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "In commit 24d5f1539f0d876e4871ecca4f671d0710ab35bf you moved README.rst to a different place. However, because MANIFEST.in was not updated to reflect the new path, the README.txt file was not included in the source distribution for the 4.0.1 release, and now setup.py fails when trying to generate the description.\n\n```\nGetting distribution for 'decorator'.\nerror: docs/README.rst: No such file or directory\nAn error occurred when trying to install decorator 4.0.1. Look above this message for any errors that were output by easy_install.\nWhile:\n   Updating test.\n   Getting distribution for 'decorator'.\n Error: Couldn't install: decorator 4.0.1\n Attempt 1 of \"bin/buildout -n -t 5\" failed.\n```\n\n@micheles \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/12", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/12/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/12/events", "html_url": "https://github.com/micheles/decorator/issues/12", "id": 97633645, "node_id": "MDU6SXNzdWU5NzYzMzY0NQ==", "number": 12, "title": "4.0.1 No such file or directory: 'docs/README.rst'", "user": {"login": "barneyjackson", "id": 1398471, "node_id": "MDQ6VXNlcjEzOTg0NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1398471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barneyjackson", "html_url": "https://github.com/barneyjackson", "followers_url": "https://api.github.com/users/barneyjackson/followers", "following_url": "https://api.github.com/users/barneyjackson/following{/other_user}", "gists_url": "https://api.github.com/users/barneyjackson/gists{/gist_id}", "starred_url": "https://api.github.com/users/barneyjackson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barneyjackson/subscriptions", "organizations_url": "https://api.github.com/users/barneyjackson/orgs", "repos_url": "https://api.github.com/users/barneyjackson/repos", "events_url": "https://api.github.com/users/barneyjackson/events{/privacy}", "received_events_url": "https://api.github.com/users/barneyjackson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-28T07:15:54Z", "updated_at": "2015-07-28T07:43:02Z", "closed_at": "2015-07-28T07:43:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Upgrading to 4.0.1 (latest as of this moment) gives the following error:\n\n```\n$ pip install decorator==4.0.1\nDownloading/unpacking decorator==4.0.1\n  Running setup.py egg_info for package decorator\n    Traceback (most recent call last):\n      File \"<string>\", line 16, in <module>\n      File \"XXX/build/decorator/setup.py\", line 12, in <module>\n        long_description=open('docs/README.rst').read(),\n    IOError: [Errno 2] No such file or directory: 'docs/README.rst'\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 16, in <module>\n\n  File \"XXX/build/decorator/setup.py\", line 12, in <module>\n\n    long_description=open('docs/README.rst').read(),\n\nIOError: [Errno 2] No such file or directory: 'docs/README.rst'\n\n----------------------------------------\nCommand python setup.py egg_info failed with error code 1 in XXX/build/decorator\nStoring complete log in /home/ubuntu/.pip/pip.log\n```\n\nI see the fix in https://github.com/micheles/decorator/commit/18dd1e5efaca2f79688ed78e9ddabdfb647eea9e, but it doesn't seem to have done the job.\n\n4.0.0 works as expected.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/11", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/11/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/11/events", "html_url": "https://github.com/micheles/decorator/issues/11", "id": 97471467, "node_id": "MDU6SXNzdWU5NzQ3MTQ2Nw==", "number": 11, "title": "__qualname__ shold not be set if not existing", "user": {"login": "petrutlucian94", "id": 4570749, "node_id": "MDQ6VXNlcjQ1NzA3NDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4570749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrutlucian94", "html_url": "https://github.com/petrutlucian94", "followers_url": "https://api.github.com/users/petrutlucian94/followers", "following_url": "https://api.github.com/users/petrutlucian94/following{/other_user}", "gists_url": "https://api.github.com/users/petrutlucian94/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrutlucian94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrutlucian94/subscriptions", "organizations_url": "https://api.github.com/users/petrutlucian94/orgs", "repos_url": "https://api.github.com/users/petrutlucian94/repos", "events_url": "https://api.github.com/users/petrutlucian94/events{/privacy}", "received_events_url": "https://api.github.com/users/petrutlucian94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-27T14:06:59Z", "updated_at": "2015-07-28T07:39:09Z", "closed_at": "2015-07-28T03:55:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the moment, the **qualname** attribute is set as None if the decorated function does not have this attribute. This can be considered unexpected behavior and can cause problems in some cases.\n\nThis attribute should either not be set if the decorated function does not have it, either use the **name** value instead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/10", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/10/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/10/events", "html_url": "https://github.com/micheles/decorator/issues/10", "id": 96305511, "node_id": "MDU6SXNzdWU5NjMwNTUxMQ==", "number": 10, "title": "FunctionMaker does not understand sig. defaults", "user": {"login": "AXGKl", "id": 9989548, "node_id": "MDQ6VXNlcjk5ODk1NDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/9989548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AXGKl", "html_url": "https://github.com/AXGKl", "followers_url": "https://api.github.com/users/AXGKl/followers", "following_url": "https://api.github.com/users/AXGKl/following{/other_user}", "gists_url": "https://api.github.com/users/AXGKl/gists{/gist_id}", "starred_url": "https://api.github.com/users/AXGKl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AXGKl/subscriptions", "organizations_url": "https://api.github.com/users/AXGKl/orgs", "repos_url": "https://api.github.com/users/AXGKl/repos", "events_url": "https://api.github.com/users/AXGKl/events{/privacy}", "received_events_url": "https://api.github.com/users/AXGKl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-21T12:35:44Z", "updated_at": "2015-07-24T10:04:24Z", "closed_at": "2015-07-24T10:04:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\ngreat module !!\n\nLittle Issue: FunctionMaker does drop defaults in the sign. string:\n\n``` python\n(Pdb) sig = ('foo', 'bar')\n(Pdb) fsig = 'f1(%s=None)' % '=None, '.join(sig)\n(Pdb) fsig\n'f1(foo=None, bar=None)'\n(Pdb) f = decorator.FunctionMaker.create(fsig, 'pass', {}, addsource=True)\n(Pdb) f(1)\n*** TypeError: f1() takes exactly 2 arguments (1 given)\n(Pdb) inspect.getargspec(f)\nArgSpec(args=['foo', 'bar'], varargs=None, keywords=None, defaults=())\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/9", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/9/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/9/events", "html_url": "https://github.com/micheles/decorator/issues/9", "id": 83677624, "node_id": "MDU6SXNzdWU4MzY3NzYyNA==", "number": 9, "title": "usage of inspect functions deprecated in Python 3.5", "user": {"login": "rgommers", "id": 98330, "node_id": "MDQ6VXNlcjk4MzMw", "avatar_url": "https://avatars3.githubusercontent.com/u/98330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgommers", "html_url": "https://github.com/rgommers", "followers_url": "https://api.github.com/users/rgommers/followers", "following_url": "https://api.github.com/users/rgommers/following{/other_user}", "gists_url": "https://api.github.com/users/rgommers/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgommers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgommers/subscriptions", "organizations_url": "https://api.github.com/users/rgommers/orgs", "repos_url": "https://api.github.com/users/rgommers/repos", "events_url": "https://api.github.com/users/rgommers/events{/privacy}", "received_events_url": "https://api.github.com/users/rgommers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-01T20:26:09Z", "updated_at": "2015-07-24T10:04:11Z", "closed_at": "2015-07-24T10:04:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "`getfullargspec` and `formatargspec` are used in decorator.py but will be deprecated in Python 3.5.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/8", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/8/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/8/events", "html_url": "https://github.com/micheles/decorator/issues/8", "id": 71210495, "node_id": "MDU6SXNzdWU3MTIxMDQ5NQ==", "number": 8, "title": "File test.py is not included in the distribution archive.", "user": {"login": "santegoeds", "id": 45137, "node_id": "MDQ6VXNlcjQ1MTM3", "avatar_url": "https://avatars0.githubusercontent.com/u/45137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santegoeds", "html_url": "https://github.com/santegoeds", "followers_url": "https://api.github.com/users/santegoeds/followers", "following_url": "https://api.github.com/users/santegoeds/following{/other_user}", "gists_url": "https://api.github.com/users/santegoeds/gists{/gist_id}", "starred_url": "https://api.github.com/users/santegoeds/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santegoeds/subscriptions", "organizations_url": "https://api.github.com/users/santegoeds/orgs", "repos_url": "https://api.github.com/users/santegoeds/repos", "events_url": "https://api.github.com/users/santegoeds/events{/privacy}", "received_events_url": "https://api.github.com/users/santegoeds/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-27T08:06:02Z", "updated_at": "2015-07-24T10:04:01Z", "closed_at": "2015-07-24T10:04:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to run the tests from the distribution on pypi but file `test.py` is missing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/7", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/7/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/7/events", "html_url": "https://github.com/micheles/decorator/issues/7", "id": 70271343, "node_id": "MDU6SXNzdWU3MDI3MTM0Mw==", "number": 7, "title": "__qualname__ not updated", "user": {"login": "RazerM", "id": 1337586, "node_id": "MDQ6VXNlcjEzMzc1ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1337586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RazerM", "html_url": "https://github.com/RazerM", "followers_url": "https://api.github.com/users/RazerM/followers", "following_url": "https://api.github.com/users/RazerM/following{/other_user}", "gists_url": "https://api.github.com/users/RazerM/gists{/gist_id}", "starred_url": "https://api.github.com/users/RazerM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RazerM/subscriptions", "organizations_url": "https://api.github.com/users/RazerM/orgs", "repos_url": "https://api.github.com/users/RazerM/repos", "events_url": "https://api.github.com/users/RazerM/events{/privacy}", "received_events_url": "https://api.github.com/users/RazerM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-23T00:43:38Z", "updated_at": "2015-07-24T10:03:47Z", "closed_at": "2015-07-24T10:03:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "[`functools.update_wrapper`](https://hg.python.org/cpython/file/3.4/Lib/functools.py) sets `wrapper.__qualname__` to `wrapped.__qualname__`, is there a reason that `decorator.decorator` doesn't do the same?\n\nI tried searching for a reason this is the case, but came up blank.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/5", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/5/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/5/events", "html_url": "https://github.com/micheles/decorator/issues/5", "id": 63736064, "node_id": "MDU6SXNzdWU2MzczNjA2NA==", "number": 5, "title": "3.4.2 not documented", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-23T14:26:30Z", "updated_at": "2015-03-24T04:15:26Z", "closed_at": "2015-03-24T04:15:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "3.4.2 was pushed to PyPi but was not documented in the changelog\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/4", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/4/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/4/events", "html_url": "https://github.com/micheles/decorator/issues/4", "id": 63735947, "node_id": "MDU6SXNzdWU2MzczNTk0Nw==", "number": 4, "title": "No git tags", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-23T14:26:08Z", "updated_at": "2015-03-24T04:19:45Z", "closed_at": "2015-03-24T04:19:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are no git tags. It'd be great if there were git tags.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/3", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/3/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/3/events", "html_url": "https://github.com/micheles/decorator/issues/3", "id": 63190524, "node_id": "MDU6SXNzdWU2MzE5MDUyNA==", "number": 3, "title": "version 3.4.1 is not installable via pip", "user": {"login": "sigsergv", "id": 1030732, "node_id": "MDQ6VXNlcjEwMzA3MzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1030732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sigsergv", "html_url": "https://github.com/sigsergv", "followers_url": "https://api.github.com/users/sigsergv/followers", "following_url": "https://api.github.com/users/sigsergv/following{/other_user}", "gists_url": "https://api.github.com/users/sigsergv/gists{/gist_id}", "starred_url": "https://api.github.com/users/sigsergv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sigsergv/subscriptions", "organizations_url": "https://api.github.com/users/sigsergv/orgs", "repos_url": "https://api.github.com/users/sigsergv/repos", "events_url": "https://api.github.com/users/sigsergv/events{/privacy}", "received_events_url": "https://api.github.com/users/sigsergv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-20T08:48:32Z", "updated_at": "2015-03-22T13:15:54Z", "closed_at": "2015-03-22T13:15:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n% pip install -v decorator==3.4.1 \nCollecting decorator==3.4.1\n  Getting page https://pypi.python.org/simple/decorator/\n  Starting new HTTPS connection (1): pypi.python.org\n  \"GET /simple/decorator/ HTTP/1.1\" 200 488\n  URLs to search for versions for decorator==3.4.1:\n  * https://pypi.python.org/simple/decorator/\n  Getting page https://pypi.python.org/simple/decorator/\n  Analyzing links from page https://pypi.python.org/simple/decorator/\n    Found link https://pypi.python.org/packages/source/d/decorator/decorator-3.3.1.tar.gz#md5=a8fc62acd705f487a71bc406e19e0cc6 (from https://pypi.python.org/simple/decorator/), version: 3.3.1\n    Found link https://pypi.python.org/packages/source/d/decorator/decorator-3.3.2.tar.gz#md5=446f5165af67eb0fcd8fd28abd259e86 (from https://pypi.python.org/simple/decorator/), version: 3.3.2\n    Found link https://pypi.python.org/packages/source/d/decorator/decorator-3.3.3.tar.gz#md5=f5a0227cb1c34a0e7d5b7f9cd2ae3135 (from https://pypi.python.org/simple/decorator/), version: 3.3.3\n    Found link https://pypi.python.org/packages/source/d/decorator/decorator-3.4.0.tar.gz#md5=1e8756f719d746e2fc0dd28b41251356 (from https://pypi.python.org/simple/decorator/), version: 3.4.0\n    Skipping link http://code.google.com/p/micheles/source/browse/#hg%2Fdecorator (from https://pypi.python.org/simple/decorator/); not a file\n    Skipping link http://micheles.googlecode.com/hg/decorator/documentation.html (from https://pypi.python.org/simple/decorator/); unknown archive format: .html\n    Skipping link http://micheles.googlecode.com/hg/decorator/documentation.pdf (from https://pypi.python.org/simple/decorator/); unknown archive format: .pdf\n    Skipping link http://micheles.googlecode.com/hg/decorator/documentation3.html (from https://pypi.python.org/simple/decorator/); unknown archive format: .html\n    Skipping link http://micheles.googlecode.com/hg/decorator/documentation3.pdf (from https://pypi.python.org/simple/decorator/); unknown archive format: .pdf\n    Skipping link http://packages.python.org/distribute/ (from https://pypi.python.org/simple/decorator/); not a file\n    Skipping link http://science.webhostinggeeks.com/dekorater-modula (from https://pypi.python.org/simple/decorator/); not a file\n  Could not find a version that satisfies the requirement decorator==3.4.1 (from versions: 3.3.1, 3.3.2, 3.3.3, 3.4.0)\n  Cleaning up...\n  No distributions matching the version for decorator==3.4.1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/micheles/decorator/issues/2", "repository_url": "https://api.github.com/repos/micheles/decorator", "labels_url": "https://api.github.com/repos/micheles/decorator/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/micheles/decorator/issues/2/comments", "events_url": "https://api.github.com/repos/micheles/decorator/issues/2/events", "html_url": "https://github.com/micheles/decorator/issues/2", "id": 62240765, "node_id": "MDU6SXNzdWU2MjI0MDc2NQ==", "number": 2, "title": "args or kwargs", "user": {"login": "AdrianTeng", "id": 6933071, "node_id": "MDQ6VXNlcjY5MzMwNzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/6933071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdrianTeng", "html_url": "https://github.com/AdrianTeng", "followers_url": "https://api.github.com/users/AdrianTeng/followers", "following_url": "https://api.github.com/users/AdrianTeng/following{/other_user}", "gists_url": "https://api.github.com/users/AdrianTeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdrianTeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdrianTeng/subscriptions", "organizations_url": "https://api.github.com/users/AdrianTeng/orgs", "repos_url": "https://api.github.com/users/AdrianTeng/repos", "events_url": "https://api.github.com/users/AdrianTeng/events{/privacy}", "received_events_url": "https://api.github.com/users/AdrianTeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-16T23:56:11Z", "updated_at": "2017-12-28T04:37:22Z", "closed_at": "2015-03-18T12:42:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off, glad you are updating the project again!\n\nI was actually trying to fix [this issue](https://code.google.com/p/micheles/issues/detail?id=7&can=1) at your old repo and saw you have closed the issue as \"not an issue\".\n\nTo reiterate the problem, here is a test that shows the issue:\n\n```\n@decorator\ndef test_decorator(f, *args, **kwargs):\n    assert args == (1, 2)  # <---- failed here, args is (1,2,3,4) instead\n    assert kwargs == dict(c=3, d=4, e=5)  # <---- kwargs is dict(e=5)\n    return f(*args, **kwargs)\n\n@test_decorator\ndef foo(a, b, c=-1, d=-2, **kwargs):\n    assert kwargs['e'] == 5\n    return a, b, c, d\n\nassert foo(1, 2, c=3, d=4, e=5) == (1, 2, 3, 4)\n```\n\nIn this case, `args` giving `(1,2,3,4)` is the surprising behaviour. In fact, if we use vanilla python, we would have `args = (1, 2)` and `kwargs = dict(c=3, d=4, e=5)`:\n\n```\ndef decor(f):       \n    def wrapper(*args, **kwargs):\n        print args, kwargs\n        return f(*args,**kwargs)\n    return wrapper\n\n@decor              \ndef foo(a, b, c=-1,d=-2, **kwargs):\n    pass\n\nfoo(1,2,c=3,d=4,e=5)\n\n> (1, 2) {'c': 3, 'e': 5, 'd': 4}\n```\n\nOf `foo`'s parameters, I believe `a`, `b`, `c`, and `d` are called [_positional-or-keyword_ parameters](https://docs.python.org/3/glossary.html#term-parameter). IMHO we should do the _least_ surprising behaviour here, and put parameters that has default to be placed in `kwargs`.\n", "performed_via_github_app": null, "score": 1.0}]}