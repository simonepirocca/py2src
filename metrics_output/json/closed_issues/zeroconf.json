{"total_count": 97, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/291", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/291/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/291/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/291", "id": 679482480, "node_id": "MDU6SXNzdWU2Nzk0ODI0ODA=", "number": 291, "title": "Wrong argument list in call to ServiceBrowser constructor in Zeroconf.add_service_listener method", "user": {"login": "abadona", "id": 11464962, "node_id": "MDQ6VXNlcjExNDY0OTYy", "avatar_url": "https://avatars3.githubusercontent.com/u/11464962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abadona", "html_url": "https://github.com/abadona", "followers_url": "https://api.github.com/users/abadona/followers", "following_url": "https://api.github.com/users/abadona/following{/other_user}", "gists_url": "https://api.github.com/users/abadona/gists{/gist_id}", "starred_url": "https://api.github.com/users/abadona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abadona/subscriptions", "organizations_url": "https://api.github.com/users/abadona/orgs", "repos_url": "https://api.github.com/users/abadona/repos", "events_url": "https://api.github.com/users/abadona/events{/privacy}", "received_events_url": "https://api.github.com/users/abadona/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-15T02:21:45Z", "updated_at": "2020-08-15T07:45:36Z", "closed_at": "2020-08-15T07:45:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "The ServiceBrowser constructor is called with 3 positional arguments: (self, type_, listener), while the ServiceBrowser__init__ expects the 'handlers' list as a third positional argument. This is a critical bug, use of add_service_listener is not possible due to it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/289", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/289/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/289/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/289", "id": 678693473, "node_id": "MDU6SXNzdWU2Nzg2OTM0NzM=", "number": 289, "title": "Publish available services?", "user": {"login": "ekw", "id": 1308749, "node_id": "MDQ6VXNlcjEzMDg3NDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1308749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ekw", "html_url": "https://github.com/ekw", "followers_url": "https://api.github.com/users/ekw/followers", "following_url": "https://api.github.com/users/ekw/following{/other_user}", "gists_url": "https://api.github.com/users/ekw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ekw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ekw/subscriptions", "organizations_url": "https://api.github.com/users/ekw/orgs", "repos_url": "https://api.github.com/users/ekw/repos", "events_url": "https://api.github.com/users/ekw/events{/privacy}", "received_events_url": "https://api.github.com/users/ekw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-08-13T19:48:28Z", "updated_at": "2020-08-14T16:40:51Z", "closed_at": "2020-08-14T16:40:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can this module be used to publish available services, not just find/browse them?  I want to do the equivalent of avahi-publish-service from Windows OS, but can't find anything that allows me to do so.  There's a lot on discovering services via zeroconf on Windows, but not publishing services.  Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/288", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/288/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/288/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/288", "id": 676355466, "node_id": "MDU6SXNzdWU2NzYzNTU0NjY=", "number": 288, "title": "Zeroconf.get_service_info returns None", "user": {"login": "pawlizio", "id": 15065886, "node_id": "MDQ6VXNlcjE1MDY1ODg2", "avatar_url": "https://avatars1.githubusercontent.com/u/15065886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pawlizio", "html_url": "https://github.com/pawlizio", "followers_url": "https://api.github.com/users/pawlizio/followers", "following_url": "https://api.github.com/users/pawlizio/following{/other_user}", "gists_url": "https://api.github.com/users/pawlizio/gists{/gist_id}", "starred_url": "https://api.github.com/users/pawlizio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pawlizio/subscriptions", "organizations_url": "https://api.github.com/users/pawlizio/orgs", "repos_url": "https://api.github.com/users/pawlizio/repos", "events_url": "https://api.github.com/users/pawlizio/events{/privacy}", "received_events_url": "https://api.github.com/users/pawlizio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2020-08-10T19:15:11Z", "updated_at": "2020-08-19T08:33:43Z", "closed_at": "2020-08-19T08:33:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a velux KLF200 and trying to indentify its IP by it's mdns name. However using your example code does find the name of the device, but get_service_info always runs into timout. \r\n\r\nI aready increased the timeout to 60000, but still I only return None due to timeout. The strange thing is, when using in parallel Bonjour browser get_service_info immediately returns correct information. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/283", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/283/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/283/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/283/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/283", "id": 652597232, "node_id": "MDU6SXNzdWU2NTI1OTcyMzI=", "number": 283, "title": "get_service_info returns None when called from within listener after initialization", "user": {"login": "SwapnilPande", "id": 9200948, "node_id": "MDQ6VXNlcjkyMDA5NDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/9200948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SwapnilPande", "html_url": "https://github.com/SwapnilPande", "followers_url": "https://api.github.com/users/SwapnilPande/followers", "following_url": "https://api.github.com/users/SwapnilPande/following{/other_user}", "gists_url": "https://api.github.com/users/SwapnilPande/gists{/gist_id}", "starred_url": "https://api.github.com/users/SwapnilPande/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SwapnilPande/subscriptions", "organizations_url": "https://api.github.com/users/SwapnilPande/orgs", "repos_url": "https://api.github.com/users/SwapnilPande/repos", "events_url": "https://api.github.com/users/SwapnilPande/events{/privacy}", "received_events_url": "https://api.github.com/users/SwapnilPande/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T20:02:26Z", "updated_at": "2020-07-07T20:07:46Z", "closed_at": "2020-07-07T20:07:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am attempting to discover services using the provided example code. The only change I have made in the example code is changing the `service_type` in line 16 to `_googlemdt._tcp.local.`.\r\n\r\nIf the service is available before I start running the code, the service discovery works as expected. Here is the output I receive:\r\n```\r\nService green-rabbit._googlemdt._tcp.local. added, service info: ServiceInfo(type='_googlemdt._tcp.local.', name='green-rabbit._googlemdt._tcp.local.', addresses=[b'\\xc0\\xa8\\x01\\x18'], port=22, weight=0, priority=0, server='green-rabbit.local.', properties={})\r\n```\r\n\r\nHowever, if the service becomes available after the ServiceBrowser has been initialized, add_service is called when the service comes online but `get_service_info` returns None:\r\n```\r\nService green-rabbit._googlemdt._tcp.local. added, service info: None\r\n```\r\n\r\nI'm not sure what could be causing this issue, any thoughts on what might be wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/279", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/279/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/279/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/279", "id": 647243088, "node_id": "MDU6SXNzdWU2NDcyNDMwODg=", "number": 279, "title": "Remove obsolete RuntimeError", "user": {"login": "PhilippSelenium", "id": 31542906, "node_id": "MDQ6VXNlcjMxNTQyOTA2", "avatar_url": "https://avatars2.githubusercontent.com/u/31542906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhilippSelenium", "html_url": "https://github.com/PhilippSelenium", "followers_url": "https://api.github.com/users/PhilippSelenium/followers", "following_url": "https://api.github.com/users/PhilippSelenium/following{/other_user}", "gists_url": "https://api.github.com/users/PhilippSelenium/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhilippSelenium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhilippSelenium/subscriptions", "organizations_url": "https://api.github.com/users/PhilippSelenium/orgs", "repos_url": "https://api.github.com/users/PhilippSelenium/repos", "events_url": "https://api.github.com/users/PhilippSelenium/events{/privacy}", "received_events_url": "https://api.github.com/users/PhilippSelenium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-29T09:03:14Z", "updated_at": "2020-06-29T13:35:43Z", "closed_at": "2020-06-29T13:35:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "This RuntimeError https://github.com/jstasiak/python-zeroconf/blob/master/zeroconf/__init__.py#L2037\r\nis still raised despite the MR https://github.com/pydron/ifaddr/pull/21 referenced in the comment is merged.\r\nEither this comment is stale or the RuntimeError can be removed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/278", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/278/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/278/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/278", "id": 640615352, "node_id": "MDU6SXNzdWU2NDA2MTUzNTI=", "number": 278, "title": "Provide more examples ", "user": {"login": "ThangaAyyanar", "id": 18457002, "node_id": "MDQ6VXNlcjE4NDU3MDAy", "avatar_url": "https://avatars2.githubusercontent.com/u/18457002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThangaAyyanar", "html_url": "https://github.com/ThangaAyyanar", "followers_url": "https://api.github.com/users/ThangaAyyanar/followers", "following_url": "https://api.github.com/users/ThangaAyyanar/following{/other_user}", "gists_url": "https://api.github.com/users/ThangaAyyanar/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThangaAyyanar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThangaAyyanar/subscriptions", "organizations_url": "https://api.github.com/users/ThangaAyyanar/orgs", "repos_url": "https://api.github.com/users/ThangaAyyanar/repos", "events_url": "https://api.github.com/users/ThangaAyyanar/events{/privacy}", "received_events_url": "https://api.github.com/users/ThangaAyyanar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-17T17:23:12Z", "updated_at": "2020-06-23T13:18:58Z", "closed_at": "2020-06-23T13:18:58Z", "author_association": "NONE", "active_lock_reason": null, "body": " - Example to recieve and send data.\r\nAs a beginner to bonjour protocol stuff, i find it bit difficult to get started with this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/276", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/276/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/276/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/276", "id": 637854251, "node_id": "MDU6SXNzdWU2Mzc4NTQyNTE=", "number": 276, "title": "Zeroconf in exe file", "user": {"login": "KoenVda88", "id": 66839640, "node_id": "MDQ6VXNlcjY2ODM5NjQw", "avatar_url": "https://avatars1.githubusercontent.com/u/66839640?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KoenVda88", "html_url": "https://github.com/KoenVda88", "followers_url": "https://api.github.com/users/KoenVda88/followers", "following_url": "https://api.github.com/users/KoenVda88/following{/other_user}", "gists_url": "https://api.github.com/users/KoenVda88/gists{/gist_id}", "starred_url": "https://api.github.com/users/KoenVda88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KoenVda88/subscriptions", "organizations_url": "https://api.github.com/users/KoenVda88/orgs", "repos_url": "https://api.github.com/users/KoenVda88/repos", "events_url": "https://api.github.com/users/KoenVda88/events{/privacy}", "received_events_url": "https://api.github.com/users/KoenVda88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-06-12T16:00:05Z", "updated_at": "2020-06-15T09:21:48Z", "closed_at": "2020-06-15T09:21:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI would like to distribute an application with zeroconf include. I can build the the exe (using cx_freeze or pyinstaller). \r\nWhen I run the exe the zeroconf software does not give any callabacks about founded services while they are founded if I don't use the exe. In both cases I can make a connection to my devices, so the exe has network permissions. \r\n\r\nAny ideas that I could test as I don't get any errors?\r\n\r\nzerconf: v0.27.1\r\npython: 3.7.4\r\n\r\nThanks! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/275", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/275/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/275/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/275", "id": 633585957, "node_id": "MDU6SXNzdWU2MzM1ODU5NTc=", "number": 275, "title": "How to use zeroconf replace dns-sd", "user": {"login": "NullYing", "id": 10618381, "node_id": "MDQ6VXNlcjEwNjE4Mzgx", "avatar_url": "https://avatars2.githubusercontent.com/u/10618381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NullYing", "html_url": "https://github.com/NullYing", "followers_url": "https://api.github.com/users/NullYing/followers", "following_url": "https://api.github.com/users/NullYing/following{/other_user}", "gists_url": "https://api.github.com/users/NullYing/gists{/gist_id}", "starred_url": "https://api.github.com/users/NullYing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NullYing/subscriptions", "organizations_url": "https://api.github.com/users/NullYing/orgs", "repos_url": "https://api.github.com/users/NullYing/repos", "events_url": "https://api.github.com/users/NullYing/events{/privacy}", "received_events_url": "https://api.github.com/users/NullYing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-07T17:10:47Z", "updated_at": "2020-06-08T05:22:48Z", "closed_at": "2020-06-08T02:55:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "```bash\r\ndns-sd -R \"Library Color ddd\" _ipp._tcp.,_universal . 631 pdl=\"image/urf\" URF=\"\"\r\n```\r\n\r\nMy code\r\n\r\n```python\r\n#!/usr/bin/env python3\r\n\r\n\"\"\" Example of announcing a service (in this case, a fake HTTP server) \"\"\"\r\n\r\nimport argparse\r\nimport logging\r\nimport socket\r\nfrom time import sleep\r\n\r\nfrom zeroconf import IPVersion, ServiceInfo, Zeroconf\r\n\r\ndesc = {\r\n    \"pdl\": \"image/urf\",\r\n    \"URF\": \"\",\r\n}\r\n\r\nif __name__ == '__main__':\r\n    logging.basicConfig(level=logging.DEBUG)\r\n\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument('--debug', action='store_true')\r\n    version_group = parser.add_mutually_exclusive_group()\r\n    version_group.add_argument('--v6', action='store_true')\r\n    version_group.add_argument('--v6-only', action='store_true')\r\n    args = parser.parse_args()\r\n\r\n    if args.debug:\r\n        logging.getLogger('zeroconf').setLevel(logging.DEBUG)\r\n    if args.v6:\r\n        ip_version = IPVersion.All\r\n    elif args.v6_only:\r\n        ip_version = IPVersion.V6Only\r\n    else:\r\n        ip_version = IPVersion.V4Only\r\n\r\n    info = ServiceInfo(\r\n        \"_ipp._tcp.local.\",\r\n        \"Library Color ddd._ipp._tcp.local.\",\r\n        addresses=[socket.inet_aton(\"192.168.67.101\")],\r\n        port=631,\r\n        properties=desc,\r\n        server=\"Library Color ddd._ipp._tcp.local.\",\r\n        priority=40,\r\n    )\r\n\r\n    zeroconf = Zeroconf(ip_version=ip_version)\r\n    print(\"Registration of a service, press Ctrl-C to exit...\")\r\n    zeroconf.register_service(info)\r\n    try:\r\n        while True:\r\n            sleep(0.1)\r\n    except KeyboardInterrupt:\r\n        pass\r\n    finally:\r\n        print(\"Unregistering...\")\r\n        zeroconf.unregister_service(info)\r\n        zeroconf.close()\r\n\r\n```\r\n\r\nIt's wrong\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/272", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/272/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/272/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/272", "id": 628825581, "node_id": "MDU6SXNzdWU2Mjg4MjU1ODE=", "number": 272, "title": "After upgrading to 0.27.0 log is flooded with packets() made no progress adding records; returning", "user": {"login": "bdraco", "id": 663432, "node_id": "MDQ6VXNlcjY2MzQzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/663432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdraco", "html_url": "https://github.com/bdraco", "followers_url": "https://api.github.com/users/bdraco/followers", "following_url": "https://api.github.com/users/bdraco/following{/other_user}", "gists_url": "https://api.github.com/users/bdraco/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdraco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdraco/subscriptions", "organizations_url": "https://api.github.com/users/bdraco/orgs", "repos_url": "https://api.github.com/users/bdraco/repos", "events_url": "https://api.github.com/users/bdraco/events{/privacy}", "received_events_url": "https://api.github.com/users/bdraco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-06-02T01:07:21Z", "updated_at": "2020-06-05T14:39:10Z", "closed_at": "2020-06-05T09:16:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "`[zeroconf] packets() made no progress adding records; returning`\r\n\r\nI haven't had a chance to track down the cause.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/269", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/269/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/269/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/269", "id": 627523524, "node_id": "MDU6SXNzdWU2Mjc1MjM1MjQ=", "number": 269, "title": "Two exceptions raised", "user": {"login": "hegga", "id": 49037, "node_id": "MDQ6VXNlcjQ5MDM3", "avatar_url": "https://avatars3.githubusercontent.com/u/49037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hegga", "html_url": "https://github.com/hegga", "followers_url": "https://api.github.com/users/hegga/followers", "following_url": "https://api.github.com/users/hegga/following{/other_user}", "gists_url": "https://api.github.com/users/hegga/gists{/gist_id}", "starred_url": "https://api.github.com/users/hegga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hegga/subscriptions", "organizations_url": "https://api.github.com/users/hegga/orgs", "repos_url": "https://api.github.com/users/hegga/repos", "events_url": "https://api.github.com/users/hegga/events{/privacy}", "received_events_url": "https://api.github.com/users/hegga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-05-29T20:34:33Z", "updated_at": "2020-08-14T14:12:49Z", "closed_at": "2020-05-29T21:37:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running version 2.8.4 of HAP-python and version 0.27.0 of zeroconf. While trying to pair with HomeKit, as the driver starts up the following traceback is thrown:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/threading.py\", line 917, in _bootstrap_inner\r\n    self.run()\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 1312, in run\r\n    reader.handle_read(socket_)\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 1379, in handle_read\r\n    self.zc.handle_query(msg, None, _MDNS_PORT)\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 2676, in handle_query\r\n    service.text,\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 623, in __init__\r\n    assert isinstance(text, (bytes, type(None)))\r\nAssertionError\r\n\r\nFuture exception was never retrieved\r\nfuture: <Future finished exception=AssertionError()>\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/concurrent/futures/thread.py\", line 57, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/usr/local/lib/python3.7/dist-packages/pyhap/accessory_driver.py\", line 287, in _do_start\r\n    self.advertiser.register_service(self.mdns_service_info)\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 2374, in register_service\r\n    self._broadcast_service(info)\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 2414, in _broadcast_service\r\n    DNSText(info.name, _TYPE_TXT, _CLASS_IN | _CLASS_UNIQUE, info.other_ttl, info.text), 0\r\n  File \"/usr/local/lib/python3.7/dist-packages/zeroconf/__init__.py\", line 623, in __init__\r\n    assert isinstance(text, (bytes, type(None)))\r\nAssertionError\r\n```\r\n\r\nReverting back to version 0.26.3 of zeroconf removes the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/264", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/264/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/264/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/264", "id": 625466516, "node_id": "MDU6SXNzdWU2MjU0NjY1MTY=", "number": 264, "title": "Remove typing from install_requires", "user": {"login": "moubctez", "id": 12608048, "node_id": "MDQ6VXNlcjEyNjA4MDQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/12608048?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moubctez", "html_url": "https://github.com/moubctez", "followers_url": "https://api.github.com/users/moubctez/followers", "following_url": "https://api.github.com/users/moubctez/following{/other_user}", "gists_url": "https://api.github.com/users/moubctez/gists{/gist_id}", "starred_url": "https://api.github.com/users/moubctez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moubctez/subscriptions", "organizations_url": "https://api.github.com/users/moubctez/orgs", "repos_url": "https://api.github.com/users/moubctez/repos", "events_url": "https://api.github.com/users/moubctez/events{/privacy}", "received_events_url": "https://api.github.com/users/moubctez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-27T07:55:19Z", "updated_at": "2020-05-27T18:23:49Z", "closed_at": "2020-05-27T18:23:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Zeroconf claims to support Python versions 3.5 and above, and then defines \"typing\" as required for Python < 3.5, which will never be satisfied. Therefore, please remove \"typing\" from `install_requires`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/255", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/255/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/255/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/255", "id": 623932307, "node_id": "MDU6SXNzdWU2MjM5MzIzMDc=", "number": 255, "title": "Zeroconf.get_service_info seems broken in 0.26.0", "user": {"login": "emontnemery", "id": 14281572, "node_id": "MDQ6VXNlcjE0MjgxNTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/14281572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emontnemery", "html_url": "https://github.com/emontnemery", "followers_url": "https://api.github.com/users/emontnemery/followers", "following_url": "https://api.github.com/users/emontnemery/following{/other_user}", "gists_url": "https://api.github.com/users/emontnemery/gists{/gist_id}", "starred_url": "https://api.github.com/users/emontnemery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emontnemery/subscriptions", "organizations_url": "https://api.github.com/users/emontnemery/orgs", "repos_url": "https://api.github.com/users/emontnemery/repos", "events_url": "https://api.github.com/users/emontnemery/events{/privacy}", "received_events_url": "https://api.github.com/users/emontnemery/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 33, "created_at": "2020-05-24T19:46:21Z", "updated_at": "2020-05-26T20:50:14Z", "closed_at": "2020-05-26T20:50:14Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Several Home Assistant users have reported that cast devices can't be discovered correctly after a recent upgrade which bumps zeroconf from 0.25.1 to 0.26.1: https://github.com/home-assistant/core/issues/35922\r\n\r\nAccording to some testing, the problem appeared in 0.26.0, which adds jstasiak/python-zeroconf#239\r\n\r\nIt seems that the problem is that `Zeroconf.get_service_info` doesn't return anything useful in 0.26.0+, from the logs it seems that Zeroconf keeps sending queries but does not get or does not accept answers.\r\n\r\nDebug logs here:\r\nhttps://github.com/home-assistant/core/issues/35922#issuecomment-633261933\r\n\r\nFor context, this is the code in pychromecast which calls `Zeroconf.get_service_info`, look for the `add_service` and `service` prints in the logs:\r\n```py\r\n    def add_service(self, zconf, typ, name):\r\n        \"\"\" Add a service to the collection. \"\"\"\r\n        service = None\r\n        tries = 0\r\n        _LOGGER.debug(\"add_service %s, %s\", typ, name)\r\n        while service is None and tries < 4:\r\n            try:\r\n                service = zconf.get_service_info(typ, name)\r\n            except IOError:\r\n                # If the zeroconf fails to receive the necessary data we abort\r\n                # adding the service\r\n                break\r\n            tries += 1\r\n\r\n        if not service:\r\n            _LOGGER.debug(\"add_service failed to add %s, %s\", typ, name)\r\n            return\r\n```\r\n\r\n@mattsaxon, any idea?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/253", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/253/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/253/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/253", "id": 623864621, "node_id": "MDU6SXNzdWU2MjM4NjQ2MjE=", "number": 253, "title": "New release", "user": {"login": "0xFF1E071F", "id": 55749371, "node_id": "MDQ6VXNlcjU1NzQ5Mzcx", "avatar_url": "https://avatars1.githubusercontent.com/u/55749371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xFF1E071F", "html_url": "https://github.com/0xFF1E071F", "followers_url": "https://api.github.com/users/0xFF1E071F/followers", "following_url": "https://api.github.com/users/0xFF1E071F/following{/other_user}", "gists_url": "https://api.github.com/users/0xFF1E071F/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xFF1E071F/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xFF1E071F/subscriptions", "organizations_url": "https://api.github.com/users/0xFF1E071F/orgs", "repos_url": "https://api.github.com/users/0xFF1E071F/repos", "events_url": "https://api.github.com/users/0xFF1E071F/events{/privacy}", "received_events_url": "https://api.github.com/users/0xFF1E071F/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-24T13:27:01Z", "updated_at": "2020-05-26T11:41:17Z", "closed_at": "2020-05-24T19:47:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello can you plaese tag the new relase to github releases. I am making packages through downloading github releases.\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/250", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/250/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/250/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/250", "id": 622731673, "node_id": "MDU6SXNzdWU2MjI3MzE2NzM=", "number": 250, "title": "PyPi package includes stale files", "user": {"login": "emontnemery", "id": 14281572, "node_id": "MDQ6VXNlcjE0MjgxNTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/14281572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emontnemery", "html_url": "https://github.com/emontnemery", "followers_url": "https://api.github.com/users/emontnemery/followers", "following_url": "https://api.github.com/users/emontnemery/following{/other_user}", "gists_url": "https://api.github.com/users/emontnemery/gists{/gist_id}", "starred_url": "https://api.github.com/users/emontnemery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emontnemery/subscriptions", "organizations_url": "https://api.github.com/users/emontnemery/orgs", "repos_url": "https://api.github.com/users/emontnemery/repos", "events_url": "https://api.github.com/users/emontnemery/events{/privacy}", "received_events_url": "https://api.github.com/users/emontnemery/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-21T19:32:21Z", "updated_at": "2020-05-22T19:43:11Z", "closed_at": "2020-05-22T19:43:11Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "zeroconf PyPi package seems to include stale `zeroconf.py` from version 0.23.0, example:\r\n\r\n```(venv) erik@DESKTOP-A7438J1:/mnt/d/development/github/home-assistant_fork$ pip3 install --upgrade --force-reinstall zeroconf==0.25.1\r\nCollecting zeroconf==0.25.1\r\n  Using cached https://files.pythonhosted.org/packages/ea/e7/6b006639302b1a0dc9ee9b2e9366da5c93a2eaf7a94c180755c033cf96e1/zeroconf-0.25.1-py3-none-any.whl\r\nCollecting ifaddr (from zeroconf==0.25.1)\r\nInstalling collected packages: ifaddr, zeroconf\r\n  Found existing installation: ifaddr 0.1.6\r\n    Uninstalling ifaddr-0.1.6:\r\n      Successfully uninstalled ifaddr-0.1.6\r\nSuccessfully installed ifaddr-0.1.6 zeroconf-0.25.1\r\n(venv) erik@DESKTOP-A7438J1:/mnt/d/development/github/home-assistant_fork$ pip show -f zeroconf\r\nName: zeroconf\r\nVersion: 0.25.1\r\nSummary: Pure Python Multicast DNS Service Discovery Library (Bonjour/Avahi compatible)\r\nHome-page: https://github.com/jstasiak/python-zeroconf\r\nAuthor: Paul Scott-Murphy, William McBrine, Jakub Stasiak\r\nAuthor-email: UNKNOWN\r\nLicense: LGPL\r\nLocation: /mnt/d/development/github/home-assistant_fork/venv/lib/python3.7/site-packages\r\nRequires: ifaddr\r\nFiles:\r\n  __pycache__/zeroconf.cpython-37.pyc\r\n  zeroconf-0.25.1.dist-info/COPYING\r\n  zeroconf-0.25.1.dist-info/INSTALLER\r\n  zeroconf-0.25.1.dist-info/METADATA\r\n  zeroconf-0.25.1.dist-info/RECORD\r\n  zeroconf-0.25.1.dist-info/WHEEL\r\n  zeroconf-0.25.1.dist-info/top_level.txt\r\n  zeroconf.py  <--- This is version 0.23.0\r\n  zeroconf/__init__.py\r\n  zeroconf/__pycache__/__init__.cpython-37.pyc\r\n  zeroconf/__pycache__/test.cpython-37.pyc\r\n  zeroconf/py.typed\r\n  zeroconf/test.py\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/246", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/246/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/246/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/246", "id": 613039471, "node_id": "MDU6SXNzdWU2MTMwMzk0NzE=", "number": 246, "title": "Latest version has a performance regression", "user": {"login": "bdraco", "id": 663432, "node_id": "MDQ6VXNlcjY2MzQzMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/663432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdraco", "html_url": "https://github.com/bdraco", "followers_url": "https://api.github.com/users/bdraco/followers", "following_url": "https://api.github.com/users/bdraco/following{/other_user}", "gists_url": "https://api.github.com/users/bdraco/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdraco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdraco/subscriptions", "organizations_url": "https://api.github.com/users/bdraco/orgs", "repos_url": "https://api.github.com/users/bdraco/repos", "events_url": "https://api.github.com/users/bdraco/events{/privacy}", "received_events_url": "https://api.github.com/users/bdraco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-05-06T04:20:13Z", "updated_at": "2020-05-06T16:34:04Z", "closed_at": "2020-05-06T16:29:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've seen ~30% uptick in my Home Assistant instance cpu usage since upgrading.  \r\n\r\nThe profile hits on `__init__.py:1501` and `__init__.py:1503`\r\n\r\nIt looks like a similar issue to what I fixed in 37fa0a0d59a5b5d09295a462bf911e82d2d770ed\r\n\r\n@mattsaxon It looks like this changed recently. Any chance this can be optimized for a large cache?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/245", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/245/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/245/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/245", "id": 612377030, "node_id": "MDU6SXNzdWU2MTIzNzcwMzA=", "number": 245, "title": "mdns-repeater causes ChromeCast Audio devices to cease broadcasting mDNS responses when interface MTU exceeded", "user": {"login": "gjbadros", "id": 1500109, "node_id": "MDQ6VXNlcjE1MDAxMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1500109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gjbadros", "html_url": "https://github.com/gjbadros", "followers_url": "https://api.github.com/users/gjbadros/followers", "following_url": "https://api.github.com/users/gjbadros/following{/other_user}", "gists_url": "https://api.github.com/users/gjbadros/gists{/gist_id}", "starred_url": "https://api.github.com/users/gjbadros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gjbadros/subscriptions", "organizations_url": "https://api.github.com/users/gjbadros/orgs", "repos_url": "https://api.github.com/users/gjbadros/repos", "events_url": "https://api.github.com/users/gjbadros/events{/privacy}", "received_events_url": "https://api.github.com/users/gjbadros/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-05T06:48:30Z", "updated_at": "2020-05-27T20:37:11Z", "closed_at": "2020-05-27T20:04:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because I'm not sure of the right set of fixes, I'm filing this issue with each of:\r\nGoogle Chromecast/Home Team (via email),\r\nhttps://github.com/jstasiak/python-zeroconf,\r\nhttps://github.com/kennylevinsen/mdns-repeater,\r\nhttps://github.com/home-assistant/plugin-multicast, and\r\nhttps://github.com/home-assistant/core\r\n\r\nI just spent the weekend tracking this down as I apparently started using mdns-repeater\r\nunwittingly due to a change in HomeAssistant's hass.io and its new\r\nmulticast plugin\r\n(https://github.com/home-assistant/plugin-multicast). That resulted in\r\na revival of some terrible instability in my 30+ Google ChromeCast\r\nAudio (CCA) devices in my home -- the problem had gone away a couple\r\nmonths ago and I'd attributed it to IGMP issues, but I peeled the\r\nonion and this is what I found.\r\n\r\nBUG #1 CHROMECAST AUDIO DEVICE PROCESS CRASHES ENDING mDNS:\r\n\r\nThe mDNS announcing process of Google Chromecast Audios (a\r\ndiscontinued product, unfortunately) dies when triggered by the steps\r\nbelow using mdns-repeater and python zeroconf (via Home Assistant in my case).\r\n\r\nThe CCA crash manifests itself by the multicast messages announcing\r\nthe CCA and its audio groups stopping appearing.  E.g., if you do\r\n\r\ntcpdump -npi eno1 port 5353 and host [CCA_IP]\r\n\r\nyou'll see a couple of PTR responses coming from the devices every 10\r\nseconds, announcing something like:\r\n\r\nChromecast-Audio-dc.a.................f._googlecast._tcp.local: type TXT, class IN, cache flush\r\n\r\nwhen the set of steps below happens, these announcements end until either:\r\n\r\n1) the CCA reboots (power cycle); or\r\n\r\n2) the CCA is forced to switch to a new WAP; e.g., I have a script\r\nthat forces a client to reconnect to the WAP in order to kick this\r\nmDNS announcing process back on.\r\n\r\nWhen those announcements cease, the Google Home app on Android stops\r\nshowing \"Play Music\" links under that device in the display.  HOWEVER,\r\nthere is a per-physical-WAP (based off the MAC of the WAP, not SSID,\r\nso it is not shared across multiple mesh-networked WAPs on the same\r\nSSID) cache for Google Home, so you won't see the problem happen\r\nimmediately.  You instead, have to go to another room, ensure the phone\r\nis connected to a new WAP, and then see that \"Play Music\" will no\r\nlonger show up for that device.\r\n\r\nIt's worthing noting that the TCP socket interface to each ChromeCast Audio\r\ndevice is still working after the MDNS announcing process has died. E.g.,\r\nyou can still play music and control the device via TCP APIs, you just\r\ncan't discover the device via mDNS.\r\n\r\n\r\nBUG #1 SUMMARY - HIGH SEVERITY but probably NO FIX: Google ChromeCast\r\nAudio must not crash due to bad network data. (But this probably won't\r\nget fixed since Google Home/Mini do not have the bug and the CCA is a\r\ndiscontinued product.)\r\n\r\n\r\n\r\nBUG #2 PYTHON ZEROCONF SHOULD NOT SEND HUGE PACKETS\r\n\r\nI have 30+ ChromeCast Audio devices and over 80+ Google casting\r\ndevices.  A query response to _googlecast._tcp.locl. results in\r\na response that's almost 4KB, far larger than the 1500 MTU on\r\nmost ethernet switches.  E.g., if I modify examples/browser.py\r\nto interrogate like so:\r\n\r\n    browser = ServiceBrowser(zeroconf, \"_googlecast._tcp.local.\", handlers=[on_service_state_change])\r\n\r\nzeroconf will then publish those 4KB mDNS responses. They, of\r\ncourse, get IP fragmented and that seems to be find when multicasting\r\ndirectly to the CCAs and other devices.  However, RFC 6762\r\n(https://tools.ietf.org/html/rfc6762) section 17 states some\r\nrequirements for Multicast DNS Message Size, and the fourth paragraph reads:\r\n\r\n\"A Multicast DNS packet larger than the interface MTU, which is sent\r\n using fragments, MUST NOT contain more than one resource record.\"\r\n\r\nLarger than the interface MTU seems to me to mean that these Responses\r\nmust limit themselves to no more than 1500 octets (except in the\r\nspecial case of a long single record that's too big).  That's not the\r\nissue here -- the responses causing the crash are, e.g., 59 Resource\r\nRecords (RR) in the answer (not a single long one).\r\n\r\nFor whatever reason, that problem alone is not causing the ChromeCast\r\nAudios to crash, but I strongly suspect that fixing this problem would\r\nfix the stack.  I believe these MUST be broken up into separate UDP\r\npackets of length <= 1500 (the interface MTU) at the application layer\r\n(rather than using IP fragmentation).\r\n\r\nYou can reproduce this using avahi-publish to create lots of records in a\r\nsubdomain and then browsing that subdomain. The total length of the\r\nDNS records should exceed 2KB (for good measure to be sure it's\r\nbig enough).\r\n\r\nBUG #2 SUMMARY - MEDIUM SEVERITY AND STRAIGHTFORWARD FIX: python\r\nzeroconf MUST adhere to RFC 6762.\r\n\r\n\r\nBUG #3 MDNS-REPEATER SOMEHOW TICKLES BUG #1 WHEN PRESENTED WITH MDNS IP FRAGMENTS\r\n\r\nI've not investigated this thoroughly, but I suspect it's either due\r\nto some kind of UDP storm due to a cycle that crashes that CCAs\r\nbecause of the fragmentation, or some kind of packet rewriting.\r\n\r\nThe only other open issue on home-assistant/plugin-multicast seems\r\npossibly relevant\r\n(https://github.com/home-assistant/plugin-multicast/issues/1) and\r\njesserockz's note at the end is worth understanding/trying. I don't\r\nthink the mdns-repeater code should be mirroring all the interfaces,\r\nso if it is, that's a bug.\r\n\r\nNote that in the configuration where I can reproduce this,\r\nmdns-repeater is running inside Home Assistant's hass.io plugin called\r\nthe home-assistant/plugin-multicast\r\n\r\nI work around it by running a shell inside that docker environment and\r\nchanging the run command to comment out the running of mdns-repeater\r\n(since just docker stop-ping that container results in the hassio\r\nsupervisor restarting the container).\r\n\r\nIt may be worth noting that the machine on which hassio has many network interfaces:\r\n```\r\n$ ifconfig # output follows\r\ndocker0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\neno1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\neno2: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500\r\nenp2s0f0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500\r\nenp2s0f1: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500\r\nhassio: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\r\nveth0ac5dfe: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\nveth0ff2059: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\nveth1b05ec4: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\nveth3003e6f: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\nveth347b241: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\nveth54a968f: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\nveth748acbe: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\nvethc5fab43: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\nvethedd7c47: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\r\nvirbr0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500\r\n```\r\n\r\nBUG #3 SUMMARY - UNCERTAIN SEVERITY AND FIX. Confirm it's behaving\r\nas expected when there are multiple interfaces and in the presence\r\nof UDP packets undergoing IP fragmentation.\r\n\r\n\r\nSummary: I propose fixing python-zeroconf as the quickest and easiest\r\nchange, and ideally someone more in tune with what homeassistant is\r\ntrying to do with mdns-repeater could figure out the right fix to\r\nmdns-repeater and/or the way the multicast plugin is configured.\r\n\r\nLet me know what more information you need.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/236", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/236/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/236/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/236", "id": 591462396, "node_id": "MDU6SXNzdWU1OTE0NjIzOTY=", "number": 236, "title": "Regression in unique/shared handling for service browser in 0.24.5?", "user": {"login": "Jc2k", "id": 11544, "node_id": "MDQ6VXNlcjExNTQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/11544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jc2k", "html_url": "https://github.com/Jc2k", "followers_url": "https://api.github.com/users/Jc2k/followers", "following_url": "https://api.github.com/users/Jc2k/following{/other_user}", "gists_url": "https://api.github.com/users/Jc2k/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jc2k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jc2k/subscriptions", "organizations_url": "https://api.github.com/users/Jc2k/orgs", "repos_url": "https://api.github.com/users/Jc2k/repos", "events_url": "https://api.github.com/users/Jc2k/events{/privacy}", "received_events_url": "https://api.github.com/users/Jc2k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-31T22:03:48Z", "updated_at": "2020-04-03T11:33:21Z", "closed_at": "2020-04-03T11:02:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Home Assistant uses zeroconf to detect HomeKit (`_hap._tcp.local`) devices. Since it was updated to use 0.24.5 we've seen a couple of cases where discovery wasn't behaving correctly. With the help of an affected user we ran [browser.py](https://github.com/jstasiak/python-zeroconf/blob/master/examples/browser.py). This showed that 0.24.5 without any Home Assistant code triggered the error.\r\n\r\nEventually we discovered that they have devices on their network which have `srv` records that don't set the record as unique, and since #217 was merged this triggers an assertion in `get_service_info`:\r\n\r\n```\r\nException in thread zeroconf-ServiceBrowser__hap._tcp.local.:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/threading.py\", line 917, in _bootstrap_inner\r\n    self.run()\r\n  File \"/home/pi/homekit-debugging/venv/lib/python3.7/site-packages/zeroconf/__init__.py\", line 1504, in run\r\n    handler(self.zc)\r\n  File \"/home/pi/homekit-debugging/venv/lib/python3.7/site-packages/zeroconf/__init__.py\", line 1444, in <lambda>\r\n    zeroconf=zeroconf, service_type=self.type, name=name, state_change=state_change\r\n  File \"/home/pi/homekit-debugging/venv/lib/python3.7/site-packages/zeroconf/__init__.py\", line 1322, in fire\r\n    h(**kwargs)\r\n  File \"browser.py\", line 20, in on_service_state_change\r\n    info = zeroconf.get_service_info(service_type, name)\r\n  File \"/home/pi/homekit-debugging/venv/lib/python3.7/site-packages/zeroconf/__init__.py\", line 2191, in get_service_info\r\n    if info.request(self, timeout):\r\n  File \"/home/pi/homekit-debugging/venv/lib/python3.7/site-packages/zeroconf/__init__.py\", line 1762, in request\r\n    out.add_answer_at_time(zc.cache.get_by_details(self.name, _TYPE_SRV, _CLASS_IN), now)\r\n  File \"/home/pi/homekit-debugging/venv/lib/python3.7/site-packages/zeroconf/__init__.py\", line 907, in add_answer_at_time\r\n    assert record.unique\r\nAssertionError\r\n```\r\n\r\nUnplugging these devices allowed things to function normally.\r\n\r\nReverting to 0.24.4 (before #217) also allowed things to function normally.\r\n\r\nIf i understood correctly the check in #217 was for when publishing a zeroconf record? Is it possible to relax/disalbe the check when browsing? As obviously we can't do anything about vendors implementations of things.\r\n\r\nCCing @Neejoh as would not have been able to trace this issue without their devices and @mattsaxon in case you can shed any light on this?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/235", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/235/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/235/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/235", "id": 586285820, "node_id": "MDU6SXNzdWU1ODYyODU4MjA=", "number": 235, "title": "IP addresses change does not trigger update in browser", "user": {"login": "PhilippSelenium", "id": 31542906, "node_id": "MDQ6VXNlcjMxNTQyOTA2", "avatar_url": "https://avatars2.githubusercontent.com/u/31542906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhilippSelenium", "html_url": "https://github.com/PhilippSelenium", "followers_url": "https://api.github.com/users/PhilippSelenium/followers", "following_url": "https://api.github.com/users/PhilippSelenium/following{/other_user}", "gists_url": "https://api.github.com/users/PhilippSelenium/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhilippSelenium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhilippSelenium/subscriptions", "organizations_url": "https://api.github.com/users/PhilippSelenium/orgs", "repos_url": "https://api.github.com/users/PhilippSelenium/repos", "events_url": "https://api.github.com/users/PhilippSelenium/events{/privacy}", "received_events_url": "https://api.github.com/users/PhilippSelenium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsaxon", "id": 11351127, "node_id": "MDQ6VXNlcjExMzUxMTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11351127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsaxon", "html_url": "https://github.com/mattsaxon", "followers_url": "https://api.github.com/users/mattsaxon/followers", "following_url": "https://api.github.com/users/mattsaxon/following{/other_user}", "gists_url": "https://api.github.com/users/mattsaxon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsaxon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsaxon/subscriptions", "organizations_url": "https://api.github.com/users/mattsaxon/orgs", "repos_url": "https://api.github.com/users/mattsaxon/repos", "events_url": "https://api.github.com/users/mattsaxon/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsaxon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsaxon", "id": 11351127, "node_id": "MDQ6VXNlcjExMzUxMTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11351127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsaxon", "html_url": "https://github.com/mattsaxon", "followers_url": "https://api.github.com/users/mattsaxon/followers", "following_url": "https://api.github.com/users/mattsaxon/following{/other_user}", "gists_url": "https://api.github.com/users/mattsaxon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsaxon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsaxon/subscriptions", "organizations_url": "https://api.github.com/users/mattsaxon/orgs", "repos_url": "https://api.github.com/users/mattsaxon/repos", "events_url": "https://api.github.com/users/mattsaxon/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsaxon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2020-03-23T15:14:15Z", "updated_at": "2020-04-26T01:02:19Z", "closed_at": "2020-04-25T16:46:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Steps to reproduce\r\n1. Use example code from README:\r\n\r\n```\r\nfrom zeroconf import ServiceBrowser, Zeroconf\r\n\r\n\r\nclass MyListener:\r\n\r\n    def remove_service(self, zeroconf, type, name):\r\n        print(\"Service %s removed\" % (name,))\r\n\r\n    def add_service(self, zeroconf, type, name):\r\n        info = zeroconf.get_service_info(type, name)\r\n        print(\"Service %s added, service info: %s\" % (name, info))\r\n\r\n    def update_service(self, zeroconf, type, name):\r\n        info = zeroconf.get_service_info(type, name)\r\n        print(\"Service %s updated, service info: %s\" % (name, info))\r\n\r\nzeroconf = Zeroconf()\r\nlistener = MyListener()\r\nbrowser = ServiceBrowser(zeroconf, \"_http._tcp.local.\", listener)\r\ntry:\r\n    input(\"Press enter to exit...\\n\\n\")\r\nfinally:\r\n    zeroconf.close()\r\n```\r\n2. Change IP address\r\nexp: An update message is printed.\r\nact: Nothing is printed\r\n\r\n# Notes:\r\n1. I can see the packets sent in wireshark.\r\n2. It works with version 0.24.4\r\n\r\nzeroconf version: 0.24.5\r\npython version: 3.6.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/231", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/231/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/231/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/231", "id": 571940234, "node_id": "MDU6SXNzdWU1NzE5NDAyMzQ=", "number": 231, "title": "Different instances of ServiceInfo used for add and update service", "user": {"login": "PhilippSelenium", "id": 31542906, "node_id": "MDQ6VXNlcjMxNTQyOTA2", "avatar_url": "https://avatars2.githubusercontent.com/u/31542906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhilippSelenium", "html_url": "https://github.com/PhilippSelenium", "followers_url": "https://api.github.com/users/PhilippSelenium/followers", "following_url": "https://api.github.com/users/PhilippSelenium/following{/other_user}", "gists_url": "https://api.github.com/users/PhilippSelenium/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhilippSelenium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhilippSelenium/subscriptions", "organizations_url": "https://api.github.com/users/PhilippSelenium/orgs", "repos_url": "https://api.github.com/users/PhilippSelenium/repos", "events_url": "https://api.github.com/users/PhilippSelenium/events{/privacy}", "received_events_url": "https://api.github.com/users/PhilippSelenium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-27T09:34:24Z", "updated_at": "2020-06-26T06:55:27Z", "closed_at": "2020-06-26T06:55:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a device in my network that has two ports and announces mDNS on both ports for both IPv4 and IPv6 it is connected to two ports on my local PC.\r\nUsing avahi-browse I correctly get the IPv6 and IPv4 entries for both ports:\r\n```\r\navahi-browse -t  _http._tcp\r\n+   eth1 IPv6 MyDevice Web Interface               Web Site             local\r\n+   eth1 IPv4 MyDevice Web Interface               Web Site             local\r\n+   eth0 IPv6 MyDevice Web Interface               Web Site             local\r\n+   eth0 IPv4 MyDevice Web Interface               Web Site             local\r\n```\r\n\r\nBut when using Zeroconf with a listener as described in the README:\r\n```\r\nclass MyListener:\r\n\r\n    def add_service(self, zeroconf, type, name):\r\n            info = zeroconf.get_service_info(type, name)\r\n\r\n   def update_service(self, zeroconf, type, name):\r\n           info = zeroconf.get_service_info(type, name)\r\n``` \r\nThe IP addresses get overwritten because every call to https://github.com/jstasiak/python-zeroconf/blob/1ca023fae4b586679446ceaf3e2e9955ea5bf180/zeroconf/__init__.py#L2184 creates a new instance of ServiceInfo. Shouldn't the Zeroconf instance keep track of the ServiceInfo instance and/or have an update_service_info method?\r\n\r\nI can work around this problem by explicitly passing ip_eth0 and ip_eth1 to Zeroconf but it would be good to get all IPs in the ServiceInfo if the default of InterfaceChoice.All is set.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/229", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/229/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/229/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/229", "id": 565927924, "node_id": "MDU6SXNzdWU1NjU5Mjc5MjQ=", "number": 229, "title": "Duplicate updates sent to Listener Class", "user": {"login": "mattsaxon", "id": 11351127, "node_id": "MDQ6VXNlcjExMzUxMTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11351127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsaxon", "html_url": "https://github.com/mattsaxon", "followers_url": "https://api.github.com/users/mattsaxon/followers", "following_url": "https://api.github.com/users/mattsaxon/following{/other_user}", "gists_url": "https://api.github.com/users/mattsaxon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsaxon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsaxon/subscriptions", "organizations_url": "https://api.github.com/users/mattsaxon/orgs", "repos_url": "https://api.github.com/users/mattsaxon/repos", "events_url": "https://api.github.com/users/mattsaxon/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsaxon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "mattsaxon", "id": 11351127, "node_id": "MDQ6VXNlcjExMzUxMTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11351127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsaxon", "html_url": "https://github.com/mattsaxon", "followers_url": "https://api.github.com/users/mattsaxon/followers", "following_url": "https://api.github.com/users/mattsaxon/following{/other_user}", "gists_url": "https://api.github.com/users/mattsaxon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsaxon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsaxon/subscriptions", "organizations_url": "https://api.github.com/users/mattsaxon/orgs", "repos_url": "https://api.github.com/users/mattsaxon/repos", "events_url": "https://api.github.com/users/mattsaxon/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsaxon/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mattsaxon", "id": 11351127, "node_id": "MDQ6VXNlcjExMzUxMTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11351127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsaxon", "html_url": "https://github.com/mattsaxon", "followers_url": "https://api.github.com/users/mattsaxon/followers", "following_url": "https://api.github.com/users/mattsaxon/following{/other_user}", "gists_url": "https://api.github.com/users/mattsaxon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsaxon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsaxon/subscriptions", "organizations_url": "https://api.github.com/users/mattsaxon/orgs", "repos_url": "https://api.github.com/users/mattsaxon/repos", "events_url": "https://api.github.com/users/mattsaxon/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsaxon/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-02-16T16:04:07Z", "updated_at": "2020-02-21T19:55:01Z", "closed_at": "2020-02-21T19:55:01Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The code as it is now sends updates even when the new message received is identical to the old.\r\n\r\nThis resulted in duplicate update messages when there was in fact no update (apart from TTL refresh)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/221", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/221/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/221/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/221", "id": 553341488, "node_id": "MDU6SXNzdWU1NTMzNDE0ODg=", "number": 221, "title": "Unable to use zeroconf in jail", "user": {"login": "dekimsey", "id": 90741, "node_id": "MDQ6VXNlcjkwNzQx", "avatar_url": "https://avatars1.githubusercontent.com/u/90741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dekimsey", "html_url": "https://github.com/dekimsey", "followers_url": "https://api.github.com/users/dekimsey/followers", "following_url": "https://api.github.com/users/dekimsey/following{/other_user}", "gists_url": "https://api.github.com/users/dekimsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/dekimsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dekimsey/subscriptions", "organizations_url": "https://api.github.com/users/dekimsey/orgs", "repos_url": "https://api.github.com/users/dekimsey/repos", "events_url": "https://api.github.com/users/dekimsey/events{/privacy}", "received_events_url": "https://api.github.com/users/dekimsey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-22T06:41:35Z", "updated_at": "2020-02-19T20:35:39Z", "closed_at": "2020-02-19T20:35:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I found I was unable to load the zeroconf module in my jail because the jail's IPs are aliased from the main device. If I monkey-patched the `get_all_addresses()` function to _not exclude_ \"Host only netmasks\" zeroconf would load. Admittedly this behavior could still be wrong, but at least the demo browser now runs.\r\n\r\nSpecifically I removed the `and addr.network_prefix != 32` statement from the list comprehension on `get_all_addresses()`\r\n\r\nFreeBSD 12.1\r\nVersion: zeroconf-0.23.0\r\n\r\n```\r\n>>> zeroconf.Zeroconf(ip_version=IPVersion.V4Only)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/home/hass/.hass-venv/lib/python3.7/site-packages/zeroconf/__init__.py\", line 2134, in __init__\r\n    interfaces, unicast, ip_version, apple_p2p=apple_p2p\r\n  File \"/usr/home/hass/.hass-venv/lib/python3.7/site-packages/zeroconf/__init__.py\", line 2056, in create_sockets\r\n    interfaces = normalize_interface_choice(interfaces, ip_version)\r\n  File \"/usr/home/hass/.hass-venv/lib/python3.7/site-packages/zeroconf/__init__.py\", line 1925, in normalize_interface_choice\r\n    'No interfaces to listen on, check that any interfaces have IP version %s' % ip_version\r\nRuntimeError: No interfaces to listen on, check that any interfaces have IP version IPVersion.V4Only\r\n```\r\n\r\n```\r\n$ ifconfig\r\nre0: flags=8843<UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST> metric 0 mtu 1500\r\n        options=8209b<RXCSUM,TXCSUM,VLAN_MTU,VLAN_HWTAGGING,VLAN_HWCSUM,WOL_MAGIC,LINKSTATE>\r\n        ether bc:5f:f4:72:58:b1\r\n        inet 192.168.10.14 netmask 0xffffffff broadcast 192.168.10.14\r\n        media: Ethernet autoselect (100baseTX <full-duplex>)\r\n        status: active\r\nlo0: flags=8049<UP,LOOPBACK,RUNNING,MULTICAST> metric 0 mtu 16384\r\n        options=680003<RXCSUM,TXCSUM,LINKSTATE,RXCSUM_IPV6,TXCSUM_IPV6>\r\n        groups: lo\r\npflog0: flags=100<PROMISC> metric 0 mtu 33184\r\n        groups: pflog\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/220", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/220/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/220/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/220", "id": 553140795, "node_id": "MDU6SXNzdWU1NTMxNDA3OTU=", "number": 220, "title": "handle_response not behaving per mDNS specification", "user": {"login": "mattsaxon", "id": 11351127, "node_id": "MDQ6VXNlcjExMzUxMTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11351127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsaxon", "html_url": "https://github.com/mattsaxon", "followers_url": "https://api.github.com/users/mattsaxon/followers", "following_url": "https://api.github.com/users/mattsaxon/following{/other_user}", "gists_url": "https://api.github.com/users/mattsaxon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsaxon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsaxon/subscriptions", "organizations_url": "https://api.github.com/users/mattsaxon/orgs", "repos_url": "https://api.github.com/users/mattsaxon/repos", "events_url": "https://api.github.com/users/mattsaxon/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsaxon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-21T21:28:56Z", "updated_at": "2020-02-01T21:22:53Z", "closed_at": "2020-02-01T21:22:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Removed text as on further investigation, my original reading of the spec was incorrect.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/218", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/218/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/218/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/218", "id": 552604166, "node_id": "MDU6SXNzdWU1NTI2MDQxNjY=", "number": 218, "title": "Strange encoding in returned properties object", "user": {"login": "raman325", "id": 7243222, "node_id": "MDQ6VXNlcjcyNDMyMjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7243222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/raman325", "html_url": "https://github.com/raman325", "followers_url": "https://api.github.com/users/raman325/followers", "following_url": "https://api.github.com/users/raman325/following{/other_user}", "gists_url": "https://api.github.com/users/raman325/gists{/gist_id}", "starred_url": "https://api.github.com/users/raman325/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/raman325/subscriptions", "organizations_url": "https://api.github.com/users/raman325/orgs", "repos_url": "https://api.github.com/users/raman325/repos", "events_url": "https://api.github.com/users/raman325/events{/privacy}", "received_events_url": "https://api.github.com/users/raman325/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-21T03:29:58Z", "updated_at": "2020-01-21T03:45:46Z", "closed_at": "2020-01-21T03:45:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I'm using this module to discovery a particular service on my network and one of the properties is being returned in a strange encoding:\r\n`b'id': b'O>Qf\\xech\\xea\\x1cHI\\xa0\\xbd\\xe1\\x9aB'`\r\n\r\nI used another application (https://apps.apple.com/us/app/discovery-dns-sd-browser/id1381004916?mt=12) to scan my network and the id property returns something that's actually readable: `id=<4f3e5166 ec68ea1c 4849a0bd e19a42>`\r\n\r\nAny thoughts on how I convert the value returned from this module into the value returned in the Mac app? I notice some patterns that seem to match as demonstrated below if that helps. Thanks!\r\nO>Qf\\x**ec**h\\x**ea**\\x**1c**HI\\x _a0_ \\x _bd_ \\x**e1**\\x**9a**\r\n<4f3e5166 **ec**68**ea1c** 4849 _a0bd_ **e19a**42>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/216", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/216/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/216/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/216", "id": 548504522, "node_id": "MDU6SXNzdWU1NDg1MDQ1MjI=", "number": 216, "title": "0.24.4 isn't backward compatible?", "user": {"login": "AlexanderPavlenko", "id": 505121, "node_id": "MDQ6VXNlcjUwNTEyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/505121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexanderPavlenko", "html_url": "https://github.com/AlexanderPavlenko", "followers_url": "https://api.github.com/users/AlexanderPavlenko/followers", "following_url": "https://api.github.com/users/AlexanderPavlenko/following{/other_user}", "gists_url": "https://api.github.com/users/AlexanderPavlenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexanderPavlenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexanderPavlenko/subscriptions", "organizations_url": "https://api.github.com/users/AlexanderPavlenko/orgs", "repos_url": "https://api.github.com/users/AlexanderPavlenko/repos", "events_url": "https://api.github.com/users/AlexanderPavlenko/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexanderPavlenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-12T01:24:46Z", "updated_at": "2020-05-22T19:26:25Z", "closed_at": "2020-05-22T19:26:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/balloob/pychromecast/issues/332#issuecomment-570684042", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/215", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/215/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/215/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/215", "id": 548435315, "node_id": "MDU6SXNzdWU1NDg0MzUzMTU=", "number": 215, "title": "Subsequent calls to update do not trigger MyListener", "user": {"login": "mattsaxon", "id": 11351127, "node_id": "MDQ6VXNlcjExMzUxMTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11351127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsaxon", "html_url": "https://github.com/mattsaxon", "followers_url": "https://api.github.com/users/mattsaxon/followers", "following_url": "https://api.github.com/users/mattsaxon/following{/other_user}", "gists_url": "https://api.github.com/users/mattsaxon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsaxon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsaxon/subscriptions", "organizations_url": "https://api.github.com/users/mattsaxon/orgs", "repos_url": "https://api.github.com/users/mattsaxon/repos", "events_url": "https://api.github.com/users/mattsaxon/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsaxon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-11T14:19:58Z", "updated_at": "2020-02-21T19:55:43Z", "closed_at": "2020-02-21T19:55:43Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "When zeroconf.update_service(info_service) is called multiple times, the subsequent updates don't trigger the Listener, but if you terminate the application and try again the information is visible (i.e. when Add Service is called, the properties (TXT record) is correct).\r\n\r\nNote this doesn't always seem to occur and more investigation is required. I'm not sure at this stage if the behaviour is different with remote vs local interfaces", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/210", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/210/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/210/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/210", "id": 542159927, "node_id": "MDU6SXNzdWU1NDIxNTk5Mjc=", "number": 210, "title": "remove_service being called unexpectedly", "user": {"login": "mattsaxon", "id": 11351127, "node_id": "MDQ6VXNlcjExMzUxMTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11351127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsaxon", "html_url": "https://github.com/mattsaxon", "followers_url": "https://api.github.com/users/mattsaxon/followers", "following_url": "https://api.github.com/users/mattsaxon/following{/other_user}", "gists_url": "https://api.github.com/users/mattsaxon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsaxon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsaxon/subscriptions", "organizations_url": "https://api.github.com/users/mattsaxon/orgs", "repos_url": "https://api.github.com/users/mattsaxon/repos", "events_url": "https://api.github.com/users/mattsaxon/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsaxon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-24T15:33:03Z", "updated_at": "2019-12-30T22:39:16Z", "closed_at": "2019-12-30T22:39:16Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I had some services where remove_service on MyListener was being called unexpectedly.\r\n\r\nI debugged this and found that the reset_ttl method was not working as expected.\r\n\r\nWhilst it was resetting the TTL, it was not recalculating the expiration time and therefore the record was expiring regardless that reset_ttl has been called.\r\n\r\nI have provided a patch here https://github.com/jstasiak/python-zeroconf/pull/209", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/208", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/208/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/208/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/208", "id": 540238508, "node_id": "MDU6SXNzdWU1NDAyMzg1MDg=", "number": 208, "title": "Addition of Type hints with List[Callable[..., None]] raises TypeError in Python 3.5.2", "user": {"login": "dannymeloy", "id": 37411379, "node_id": "MDQ6VXNlcjM3NDExMzc5", "avatar_url": "https://avatars0.githubusercontent.com/u/37411379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dannymeloy", "html_url": "https://github.com/dannymeloy", "followers_url": "https://api.github.com/users/dannymeloy/followers", "following_url": "https://api.github.com/users/dannymeloy/following{/other_user}", "gists_url": "https://api.github.com/users/dannymeloy/gists{/gist_id}", "starred_url": "https://api.github.com/users/dannymeloy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dannymeloy/subscriptions", "organizations_url": "https://api.github.com/users/dannymeloy/orgs", "repos_url": "https://api.github.com/users/dannymeloy/repos", "events_url": "https://api.github.com/users/dannymeloy/events{/privacy}", "received_events_url": "https://api.github.com/users/dannymeloy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-19T10:56:42Z", "updated_at": "2019-12-23T15:01:05Z", "closed_at": "2019-12-23T15:00:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Issue https://github.com/python/typing/issues/259 highlights an issue with Python 3.5.2:\r\n\"When using typing for Dict where key or value can be Callable which has Ellipsis in argument it leads to TypeError: 'ellipsis' object is not iterable.\"\r\n\r\nDue to Ubuntu Xenial (and likely other platforms) being distributed with Python 3.5.2, this is an issue for a lot of platforms. Specifically the issue appears to be:\r\nhttps://github.com/jstasiak/python-zeroconf/blob/f7715874c2242b95cf9815549344ea66ac107b6e/zeroconf/__init__.py#L1307", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/204", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/204/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/204/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/204", "id": 529349047, "node_id": "MDU6SXNzdWU1MjkzNDkwNDc=", "number": 204, "title": "Local test shows test_lots_of_names (zeroconf.test.Names) ERROR", "user": {"login": "humingchun", "id": 2714046, "node_id": "MDQ6VXNlcjI3MTQwNDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2714046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/humingchun", "html_url": "https://github.com/humingchun", "followers_url": "https://api.github.com/users/humingchun/followers", "following_url": "https://api.github.com/users/humingchun/following{/other_user}", "gists_url": "https://api.github.com/users/humingchun/gists{/gist_id}", "starred_url": "https://api.github.com/users/humingchun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/humingchun/subscriptions", "organizations_url": "https://api.github.com/users/humingchun/orgs", "repos_url": "https://api.github.com/users/humingchun/repos", "events_url": "https://api.github.com/users/humingchun/events{/privacy}", "received_events_url": "https://api.github.com/users/humingchun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-27T13:33:33Z", "updated_at": "2019-11-27T16:29:02Z", "closed_at": "2019-11-27T16:29:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have tried to create a local testing environment, and find that test_lots_of_names failed (please refer to attached screenshot). Is this OK for local test? I wonder why GitHub shows this repo's build status is passing.\r\n\r\nAll dev packages in requirements-dev.txt and mypy and black are installed.\r\n\r\nPackage             Version\r\n------------------- ---------\r\nappdirs             1.4.3\r\nattrs               19.3.0\r\nautopep8            1.4.4\r\nblack               19.10b0\r\ncertifi             2019.9.11\r\nchardet             3.0.4\r\nClick               7.0\r\ncoverage            4.5.4\r\ncoveralls           1.8.2\r\ndocopt              0.6.2\r\nentrypoints         0.3\r\nflake8              3.7.9\r\nflake8-import-order 0.18.1\r\nflake8-polyfill     1.0.2\r\nidna                2.8\r\nifaddr              0.1.6\r\nmccabe              0.6.1\r\nmypy                0.740\r\nmypy-extensions     0.4.3\r\nnose                1.3.7\r\npathspec            0.6.0\r\npep8-naming         0.9.1\r\npip                 19.2.3\r\npycodestyle         2.5.0\r\npyflakes            2.1.1\r\nregex               2019.11.1\r\nrequests            2.22.0\r\nsetuptools          41.2.0\r\ntoml                0.10.0\r\ntyped-ast           1.4.0\r\ntyping-extensions   3.7.4.1\r\nurllib3             1.25.7\r\n\r\n![test_error](https://user-images.githubusercontent.com/2714046/69727309-4118da80-115d-11ea-88fe-e97a265ca3b0.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/200", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/200/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/200/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/200", "id": 521064757, "node_id": "MDU6SXNzdWU1MjEwNjQ3NTc=", "number": 200, "title": "Add a basic Sphinx configuration", "user": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-11T16:35:38Z", "updated_at": "2019-11-12T21:38:54Z", "closed_at": "2019-11-12T21:38:53Z", "author_association": "OWNER", "active_lock_reason": null, "body": "We already have a ReadTheDocs integration set up, just need some basic Sphinx configuration so that the documentation builds actually contain something. I think it's crucial to have this in order for people to be able to explore the API and the types involved without having to look at the source code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/199", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/199/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/199/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/199", "id": 521063808, "node_id": "MDU6SXNzdWU1MjEwNjM4MDg=", "number": 199, "title": "Distribute the py.typed marker", "user": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "dtantsur", "id": 531923, "node_id": "MDQ6VXNlcjUzMTkyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/531923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtantsur", "html_url": "https://github.com/dtantsur", "followers_url": "https://api.github.com/users/dtantsur/followers", "following_url": "https://api.github.com/users/dtantsur/following{/other_user}", "gists_url": "https://api.github.com/users/dtantsur/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtantsur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtantsur/subscriptions", "organizations_url": "https://api.github.com/users/dtantsur/orgs", "repos_url": "https://api.github.com/users/dtantsur/repos", "events_url": "https://api.github.com/users/dtantsur/events{/privacy}", "received_events_url": "https://api.github.com/users/dtantsur/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dtantsur", "id": 531923, "node_id": "MDQ6VXNlcjUzMTkyMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/531923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtantsur", "html_url": "https://github.com/dtantsur", "followers_url": "https://api.github.com/users/dtantsur/followers", "following_url": "https://api.github.com/users/dtantsur/following{/other_user}", "gists_url": "https://api.github.com/users/dtantsur/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtantsur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtantsur/subscriptions", "organizations_url": "https://api.github.com/users/dtantsur/orgs", "repos_url": "https://api.github.com/users/dtantsur/repos", "events_url": "https://api.github.com/users/dtantsur/events{/privacy}", "received_events_url": "https://api.github.com/users/dtantsur/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-11-11T16:33:50Z", "updated_at": "2019-11-18T21:07:54Z", "closed_at": "2019-11-18T21:07:53Z", "author_association": "OWNER", "active_lock_reason": null, "body": "We need the `py.typed` marker so that type checkers know to use type information provided by the package. In order to do that we need to switch from a single file (`zeroconf.py`) to a package which is unfortunate but seems necessary.\r\n\r\nMore information on this: https://www.python.org/dev/peps/pep-0561/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/198", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/198/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/198/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/198", "id": 521062122, "node_id": "MDU6SXNzdWU1MjEwNjIxMjI=", "number": 198, "title": "Try to merge the opendrop changes back", "user": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-11-11T16:30:42Z", "updated_at": "2019-12-17T15:14:37Z", "closed_at": "2019-12-17T14:06:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The opendrop changes are described as\r\n\r\n> We use a modified version of the python-zeroconf package (essentially adding rudimentary IPv6 and AWDL support) \r\n\r\nSince we have IPv6 support of our own now there may be some conflict but looking at the changes it shouldn't bee too bad to handle. I pushed a branch based on version 0.20.0 since that's the version opendrop seems to have used and I applied their version on top of it. This is the commit: https://github.com/jstasiak/python-zeroconf/commit/5db003ca3eaf336257421d53e4b39f585b9f5d41 (https://github.com/jstasiak/python-zeroconf/tree/opendrop-before-rebase branch).\r\n\r\nWhat we need to do is to rebase the commit on top of the current master branch, decide what we need to keep and resolve conflicts. If we decide against some of the opendrop changes maybe we could send a pull request to opendrop to make everyone happy?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/197", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/197/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/197/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/197", "id": 519971763, "node_id": "MDU6SXNzdWU1MTk5NzE3NjM=", "number": 197, "title": "pip and github do not have the same code for same version", "user": {"login": "Jicehef", "id": 16561463, "node_id": "MDQ6VXNlcjE2NTYxNDYz", "avatar_url": "https://avatars2.githubusercontent.com/u/16561463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jicehef", "html_url": "https://github.com/Jicehef", "followers_url": "https://api.github.com/users/Jicehef/followers", "following_url": "https://api.github.com/users/Jicehef/following{/other_user}", "gists_url": "https://api.github.com/users/Jicehef/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jicehef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jicehef/subscriptions", "organizations_url": "https://api.github.com/users/Jicehef/orgs", "repos_url": "https://api.github.com/users/Jicehef/repos", "events_url": "https://api.github.com/users/Jicehef/events{/privacy}", "received_events_url": "https://api.github.com/users/Jicehef/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-08T11:47:25Z", "updated_at": "2020-05-27T20:08:11Z", "closed_at": "2020-05-27T20:08:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "version 0.23.0 on pip does not have 'IPVersion' whereas it is present on github's version with same version number...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/193", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/193/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/193/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/193", "id": 510916007, "node_id": "MDU6SXNzdWU1MTA5MTYwMDc=", "number": 193, "title": "Attempting to bind specific interface using interfaces option doesn't work", "user": {"login": "kdart", "id": 33999, "node_id": "MDQ6VXNlcjMzOTk5", "avatar_url": "https://avatars2.githubusercontent.com/u/33999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kdart", "html_url": "https://github.com/kdart", "followers_url": "https://api.github.com/users/kdart/followers", "following_url": "https://api.github.com/users/kdart/following{/other_user}", "gists_url": "https://api.github.com/users/kdart/gists{/gist_id}", "starred_url": "https://api.github.com/users/kdart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kdart/subscriptions", "organizations_url": "https://api.github.com/users/kdart/orgs", "repos_url": "https://api.github.com/users/kdart/repos", "events_url": "https://api.github.com/users/kdart/events{/privacy}", "received_events_url": "https://api.github.com/users/kdart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-22T21:08:42Z", "updated_at": "2020-07-07T11:31:45Z", "closed_at": "2020-07-07T11:31:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation implies that `Zeroconf(interfaces=[<localIP>])` should restrict listening to one port. But it did not work because the actual socket is bound to all ports. \r\n\r\nThe following patch fixes it.\r\n\r\n```diff\r\n1747c1747\r\n< def new_socket(port: int = _MDNS_PORT) -> socket.socket:\r\n---\r\n> def new_socket(port: int = _MDNS_PORT, address: str = \"\") -> socket.socket:\r\n1778c1778\r\n<     s.bind(('', port))\r\n---\r\n>     s.bind((address, port))\r\n1840c1840\r\n<                 respond_socket = new_socket()\r\n---\r\n>                 respond_socket = new_socket(address=i)\r\n1843c1843\r\n<                 respond_socket = new_socket(port=0)\r\n---\r\n>                 respond_socket = new_socket(port=0, address=i)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/190", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/190/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/190/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/190", "id": 502881880, "node_id": "MDU6SXNzdWU1MDI4ODE4ODA=", "number": 190, "title": "discoverable by itself but not by dns-sd on Mac OS X", "user": {"login": "keepsimple1", "id": 7699244, "node_id": "MDQ6VXNlcjc2OTkyNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7699244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keepsimple1", "html_url": "https://github.com/keepsimple1", "followers_url": "https://api.github.com/users/keepsimple1/followers", "following_url": "https://api.github.com/users/keepsimple1/following{/other_user}", "gists_url": "https://api.github.com/users/keepsimple1/gists{/gist_id}", "starred_url": "https://api.github.com/users/keepsimple1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keepsimple1/subscriptions", "organizations_url": "https://api.github.com/users/keepsimple1/orgs", "repos_url": "https://api.github.com/users/keepsimple1/repos", "events_url": "https://api.github.com/users/keepsimple1/events{/privacy}", "received_events_url": "https://api.github.com/users/keepsimple1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-04T23:23:26Z", "updated_at": "2019-10-07T23:54:15Z", "closed_at": "2019-10-07T23:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using zeroconf ver `0.23.0`, and it works between 2 instances of python program on the same host (Mac OS X Mojave 10.14). But for some reason, `dns-sd` on Mac cannot discover the python program.  Any ideas why?  \r\n\r\nHere is my code to register service using zeroconf in Python:\r\n```\r\n        self.mdns_type = '_test-server._tcp.local.'\r\n        mdns_info = ServiceInfo(self.mdns_type,\r\n                                self.my_name + '.' + self.mdns_type,\r\n                                addresses=[socket.inet_aton(self.my_ipv4)],\r\n                                port=self.my_port)\r\n        self.zero_conf.register_service(mdns_info)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/189", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/189/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/189/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/189", "id": 498946327, "node_id": "MDU6SXNzdWU0OTg5NDYzMjc=", "number": 189, "title": "Network interfaces that are aliases of the same card causes exception", "user": {"login": "simonfagerholm", "id": 21139421, "node_id": "MDQ6VXNlcjIxMTM5NDIx", "avatar_url": "https://avatars3.githubusercontent.com/u/21139421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonfagerholm", "html_url": "https://github.com/simonfagerholm", "followers_url": "https://api.github.com/users/simonfagerholm/followers", "following_url": "https://api.github.com/users/simonfagerholm/following{/other_user}", "gists_url": "https://api.github.com/users/simonfagerholm/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonfagerholm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonfagerholm/subscriptions", "organizations_url": "https://api.github.com/users/simonfagerholm/orgs", "repos_url": "https://api.github.com/users/simonfagerholm/repos", "events_url": "https://api.github.com/users/simonfagerholm/events{/privacy}", "received_events_url": "https://api.github.com/users/simonfagerholm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-26T15:05:16Z", "updated_at": "2020-06-05T20:41:54Z", "closed_at": "2020-06-05T20:41:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nzeroc = zeroconf.Zeroconf()\r\n  File \"C:\\Users\\bomardier\\test-system\\Simulator\\venv\\lib\\site-packages\\zeroconf.py\", line 1817, in __init__\r\n    self._listen_socket.setsockopt(socket.IPPROTO_IP, socket.IP_ADD_MEMBERSHIP, _value)\r\nOSError: [WinError 10022] An invalid argument was supplied\r\n```\r\nThere is a check for `errno.EINVAL`, but not for `errno.WSAEINVAL` (10022), I think `WSAEINVAL` should be included with the same logmessage:\r\n```\r\nelif _errno == errno.EINVAL:\r\n    log.info('Interface of %s does not support multicast, ' 'it is expected in WSL', i)\r\n    continue\r\n```\r\nto\r\n\r\n```\r\nelif _errno in (errno.EINVAL, errno.WSAEINVAL):\r\n    log.info('Interface of %s does not support multicast, '  'it is expected in WSL', i)\r\n    continue\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/182", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/182/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/182/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/182", "id": 468318021, "node_id": "MDU6SXNzdWU0NjgzMTgwMjE=", "number": 182, "title": "SyntaxError: invalid syntax", "user": {"login": "probonopd", "id": 2480569, "node_id": "MDQ6VXNlcjI0ODA1Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/2480569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/probonopd", "html_url": "https://github.com/probonopd", "followers_url": "https://api.github.com/users/probonopd/followers", "following_url": "https://api.github.com/users/probonopd/following{/other_user}", "gists_url": "https://api.github.com/users/probonopd/gists{/gist_id}", "starred_url": "https://api.github.com/users/probonopd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/probonopd/subscriptions", "organizations_url": "https://api.github.com/users/probonopd/orgs", "repos_url": "https://api.github.com/users/probonopd/repos", "events_url": "https://api.github.com/users/probonopd/events{/privacy}", "received_events_url": "https://api.github.com/users/probonopd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-15T20:23:17Z", "updated_at": "2020-03-07T09:27:25Z", "closed_at": "2020-02-18T22:02:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n~> uname -a\r\nHaiku shredder 1 hrev53242 Jul 11 2019 19:13:24 x86_64 x86_64 Haiku\r\n\r\n~> python\r\nPython 2.7.16 (default, May 25 2019, 04:39:12) \r\n[GCC 7.3.0] on haiku1\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import zeroconf\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/packages/python-2.7.16-3/.self/non-packaged/lib/python2.7/site-packages/zeroconf.py\", line 189\r\n    def current_time_millis() -> float:\r\n                              ^\r\nSyntaxError: invalid syntax\r\n```\r\n\r\nVerified with `xubuntu-18.04-desktop-amd64.iso`:\r\n\r\n```\r\nme@host:~$ pip install zeroconf\r\n\r\nme@host:~$ python\r\nPython 2.7.15+ (default, Nov 27 2018, 23:36:35) \r\n[GCC 7.3.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n\r\n>>> import zeroconf\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/me/.local/lib/python2.7/site-packages/zeroconf.py\", line 189\r\n    def current_time_millis() -> float:\r\n                              ^\r\nSyntaxError: invalid syntax\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/178", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/178/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/178/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/178", "id": 457135154, "node_id": "MDU6SXNzdWU0NTcxMzUxNTQ=", "number": 178, "title": "unregister_all_services() causes suspicious service adds", "user": {"login": "keepsimple1", "id": 7699244, "node_id": "MDQ6VXNlcjc2OTkyNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7699244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keepsimple1", "html_url": "https://github.com/keepsimple1", "followers_url": "https://api.github.com/users/keepsimple1/followers", "following_url": "https://api.github.com/users/keepsimple1/following{/other_user}", "gists_url": "https://api.github.com/users/keepsimple1/gists{/gist_id}", "starred_url": "https://api.github.com/users/keepsimple1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keepsimple1/subscriptions", "organizations_url": "https://api.github.com/users/keepsimple1/orgs", "repos_url": "https://api.github.com/users/keepsimple1/repos", "events_url": "https://api.github.com/users/keepsimple1/events{/privacy}", "received_events_url": "https://api.github.com/users/keepsimple1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-17T20:32:26Z", "updated_at": "2020-07-07T11:32:47Z", "closed_at": "2020-07-07T11:32:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Similar to an old issue: #34 ,  with latest zeroconf 0.23.0, I still see the issue:  when `zero_conf.unregister_all_services()` is called, other browsers would receive both `remove_service` and `add_service` events,  and the `add_service` event has a later timestamp (about 6ms later).\r\n\r\nIf I change to use `zero_conf.unregister_service()`,  other browsers do not see `add_service` event but they are not getting `ServiceInfo` object in their `remove_service` callback. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/173", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/173/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/173/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/173", "id": 451607400, "node_id": "MDU6SXNzdWU0NTE2MDc0MDA=", "number": 173, "title": "examples/registration.py is not working", "user": {"login": "wodtko", "id": 29225297, "node_id": "MDQ6VXNlcjI5MjI1Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/29225297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wodtko", "html_url": "https://github.com/wodtko", "followers_url": "https://api.github.com/users/wodtko/followers", "following_url": "https://api.github.com/users/wodtko/following{/other_user}", "gists_url": "https://api.github.com/users/wodtko/gists{/gist_id}", "starred_url": "https://api.github.com/users/wodtko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wodtko/subscriptions", "organizations_url": "https://api.github.com/users/wodtko/orgs", "repos_url": "https://api.github.com/users/wodtko/repos", "events_url": "https://api.github.com/users/wodtko/events{/privacy}", "received_events_url": "https://api.github.com/users/wodtko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-03T17:44:04Z", "updated_at": "2020-05-31T12:50:54Z", "closed_at": "2020-05-31T12:50:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "when running the example the keyword addresses in ServiceInfo is invalid.\r\nchanging the line to:\r\naddress=socket.inet_aton(\"127.0.0.1\")\r\nresolves the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/172", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/172/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/172/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/172", "id": 451123167, "node_id": "MDU6SXNzdWU0NTExMjMxNjc=", "number": 172, "title": "Value None on send causes traceback", "user": {"login": "Kane610", "id": 24575746, "node_id": "MDQ6VXNlcjI0NTc1NzQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/24575746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kane610", "html_url": "https://github.com/Kane610", "followers_url": "https://api.github.com/users/Kane610/followers", "following_url": "https://api.github.com/users/Kane610/following{/other_user}", "gists_url": "https://api.github.com/users/Kane610/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kane610/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kane610/subscriptions", "organizations_url": "https://api.github.com/users/Kane610/orgs", "repos_url": "https://api.github.com/users/Kane610/repos", "events_url": "https://api.github.com/users/Kane610/events{/privacy}", "received_events_url": "https://api.github.com/users/Kane610/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-01T20:48:45Z", "updated_at": "2020-06-17T22:09:22Z", "closed_at": "2020-06-17T22:09:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting this error running Home Assistant component Zeroconf using this library.\r\n\r\nhttps://github.com/home-assistant/home-assistant/blob/dev/homeassistant/components/zeroconf/__init__.py\r\n\r\nPrint of value om line 905: None\r\n\r\nException in thread zeroconf-Engine:\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py\", line 917, in _bootstrap_inner\r\n    self.run()\r\n  File \"/Users/r/Documents/Dev/venv37/lib/python3.7/site-packages/zeroconf.py\", line 1148, in run\r\n    reader.handle_read(socket_)\r\n  File \"/Users/r/Documents/Dev/venv37/lib/python3.7/site-packages/zeroconf.py\", line 1197, in handle_read\r\n    self.zc.handle_query(msg, _MDNS_ADDR, _MDNS_PORT)\r\n  File \"/Users/r/Documents/Dev/venv37/lib/python3.7/site-packages/zeroconf.py\", line 2104, in handle_query\r\n    self.send(out, addr, port)\r\n  File \"/Users/r/Documents/Dev/venv37/lib/python3.7/site-packages/zeroconf.py\", line 2108, in send\r\n    packet = out.packet()\r\n  File \"/Users/r/Documents/Dev/venv37/lib/python3.7/site-packages/zeroconf.py\", line 1033, in packet\r\n    overrun_additionals += self.write_record(additional, 0)\r\n  File \"/Users/r/Documents/Dev/venv37/lib/python3.7/site-packages/zeroconf.py\", line 1001, in write_record\r\n    record.write(self)\r\n  File \"/Users/r/Documents/Dev/venv37/lib/python3.7/site-packages/zeroconf.py\", line 491, in write\r\n    out.write_string(self.address)\r\n  File \"/Users/r/Documents/Dev/venv37/lib/python3.7/site-packages/zeroconf.py\", line 906, in write_string\r\n    assert isinstance(value, bytes)\r\nAssertionError", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/171", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/171/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/171/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/171", "id": 448220106, "node_id": "MDU6SXNzdWU0NDgyMjAxMDY=", "number": 171, "title": "Some sockets are opened but never read. UDP socket buffer memory usage increases", "user": {"login": "nicoladefranceschi", "id": 118949, "node_id": "MDQ6VXNlcjExODk0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/118949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicoladefranceschi", "html_url": "https://github.com/nicoladefranceschi", "followers_url": "https://api.github.com/users/nicoladefranceschi/followers", "following_url": "https://api.github.com/users/nicoladefranceschi/following{/other_user}", "gists_url": "https://api.github.com/users/nicoladefranceschi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicoladefranceschi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicoladefranceschi/subscriptions", "organizations_url": "https://api.github.com/users/nicoladefranceschi/orgs", "repos_url": "https://api.github.com/users/nicoladefranceschi/repos", "events_url": "https://api.github.com/users/nicoladefranceschi/events{/privacy}", "received_events_url": "https://api.github.com/users/nicoladefranceschi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2019-05-24T15:07:43Z", "updated_at": "2020-07-07T11:29:07Z", "closed_at": "2020-07-07T11:29:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the Zeroconf class init, some sockets:\r\nhttps://github.com/jstasiak/python-zeroconf/blob/c7876108150cd251786db4ab52dadd1b2283d262/zeroconf.py#L1810\r\n\r\nare created in both the unicast and multicast case.\r\n\r\nBut here:\r\nhttps://github.com/jstasiak/python-zeroconf/blob/c7876108150cd251786db4ab52dadd1b2283d262/zeroconf.py#L1858-L1862\r\nin case of multicast, the `_respond_sockets` are never read.\r\n\r\nThis causes some problem with the Recv queue of UDP, because the OS (in my case Ubuntu) keeps all the packets in memory waiting for the socket to read them, but this never happens and the memory keeps growing \"forever\"!\r\n\r\nThis is my output of `sudo ss -nlpu`:\r\n```\r\nState     Recv-Q     Send-Q                                Local Address:Port            Peer Address:Port                                                     \r\nUNCONN    156416     0                                           0.0.0.0:5353                 0.0.0.0:*         users:((\"python\",pid=10571,fd=54))             \r\n```\r\n \r\n\r\n**To solve:**\r\nI tried running these two lines\r\nhttps://github.com/jstasiak/python-zeroconf/blob/c7876108150cd251786db4ab52dadd1b2283d262/zeroconf.py#L1861-L1862\r\neven in the case of multicast. \r\nThe problem is \"solved\".\r\n\r\nI'm sure that is not the right solution and may actually be logically wrong doing that for this case.\r\nI'm not an expert, but maybe there is a way to actually tell the OS that those sockets are not interested in listening for packets.\r\n\r\n\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/165", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/165/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/165/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/165", "id": 441341623, "node_id": "MDU6SXNzdWU0NDEzNDE2MjM=", "number": 165, "title": "Feature Request: Add ability to be notified on changes to service TXT record", "user": {"login": "mattsaxon", "id": 11351127, "node_id": "MDQ6VXNlcjExMzUxMTI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11351127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattsaxon", "html_url": "https://github.com/mattsaxon", "followers_url": "https://api.github.com/users/mattsaxon/followers", "following_url": "https://api.github.com/users/mattsaxon/following{/other_user}", "gists_url": "https://api.github.com/users/mattsaxon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattsaxon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattsaxon/subscriptions", "organizations_url": "https://api.github.com/users/mattsaxon/orgs", "repos_url": "https://api.github.com/users/mattsaxon/repos", "events_url": "https://api.github.com/users/mattsaxon/events{/privacy}", "received_events_url": "https://api.github.com/users/mattsaxon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-07T17:06:50Z", "updated_at": "2020-01-21T06:40:10Z", "closed_at": "2020-01-21T06:40:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "A service I'm using updates it status via changes to the TXT record of the service. I'd like, as a user of this service to be notified when the TXT record changes.\r\n\r\nI've provided a basic implementation here for discussion. https://github.com/jstasiak/python-zeroconf/pull/164", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/156", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/156/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/156/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/156", "id": 399333914, "node_id": "MDU6SXNzdWUzOTkzMzM5MTQ=", "number": 156, "title": "Exception when import module", "user": {"login": "AndreyFlyAway", "id": 26386838, "node_id": "MDQ6VXNlcjI2Mzg2ODM4", "avatar_url": "https://avatars0.githubusercontent.com/u/26386838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreyFlyAway", "html_url": "https://github.com/AndreyFlyAway", "followers_url": "https://api.github.com/users/AndreyFlyAway/followers", "following_url": "https://api.github.com/users/AndreyFlyAway/following{/other_user}", "gists_url": "https://api.github.com/users/AndreyFlyAway/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreyFlyAway/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreyFlyAway/subscriptions", "organizations_url": "https://api.github.com/users/AndreyFlyAway/orgs", "repos_url": "https://api.github.com/users/AndreyFlyAway/repos", "events_url": "https://api.github.com/users/AndreyFlyAway/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreyFlyAway/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-15T12:58:28Z", "updated_at": "2019-01-17T10:40:50Z", "closed_at": "2019-01-15T13:02:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI saw an error, when I just try to import the zeroconf module.\r\n\r\nText of excpetion:\r\n\r\n`Traceback (most recent call last):                              \r\n  File \"<stdin>\", line 1, in <module>                           \r\n  File \"C:\\Python27\\lib\\site-packages\\zeroconf.py\", line 175    \r\n    def current_time_millis() -> float:                         \r\n                              ^                                 \r\nSyntaxError: invalid syntax                                     \r\n>>> from zeroconf import ServiceBrowser, Zeroconf               \r\nTraceback (most recent call last):                              \r\n  File \"<stdin>\", line 1, in <module>                           \r\n  File \"C:\\Python27\\lib\\site-packages\\zeroconf.py\", line 175    \r\n    def current_time_millis() -> float:                         \r\n`\r\nIf I am not mytaken this syntaxis \" def current_time_millis() -> float: \"    used only for python3.X, but I use Python2.7 and after updating by pip I saw this error.\r\n\r\nI dont know what should I do with this, just clone repo to previous commit? \r\n\r\nI use Ubunut x64, Python 2.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/145", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/145/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/145/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/145", "id": 368672522, "node_id": "MDU6SXNzdWUzNjg2NzI1MjI=", "number": 145, "title": "Registring services with underscore failes", "user": {"login": "DittbernerC", "id": 4036297, "node_id": "MDQ6VXNlcjQwMzYyOTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/4036297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DittbernerC", "html_url": "https://github.com/DittbernerC", "followers_url": "https://api.github.com/users/DittbernerC/followers", "following_url": "https://api.github.com/users/DittbernerC/following{/other_user}", "gists_url": "https://api.github.com/users/DittbernerC/gists{/gist_id}", "starred_url": "https://api.github.com/users/DittbernerC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DittbernerC/subscriptions", "organizations_url": "https://api.github.com/users/DittbernerC/orgs", "repos_url": "https://api.github.com/users/DittbernerC/repos", "events_url": "https://api.github.com/users/DittbernerC/events{/privacy}", "received_events_url": "https://api.github.com/users/DittbernerC/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-10T13:43:04Z", "updated_at": "2018-10-10T13:59:14Z", "closed_at": "2018-10-10T13:59:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "if I try to register the service \"CustomerInformationService._ibisip_http.local.\" with the function **register_service()**, I get the error: \r\n\r\n`  File \"C:\\Program Files (x86)\\Python36-32\\lib\\site-packages\\zeroconf.py\", line 267, in service_type_name\r\n    \"A-Z, a-z, 0-9, hyphen ('-')%s\" % (name, \", underscore ('_')\" if allow_underscores else \"\"))\r\n\r\nzeroconf.BadTypeInNameException: Service name (ibisip_http) must contain only these characters: A-Z, a-z, 0-9, hyphen ('-')`\r\n\r\nThe problem seems to be in the function **check_service()** \r\n\r\nline 1936 should look like this:\r\n\r\n`service_name = service_type_name(info.name, allow_underscores=True)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/141", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/141/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/141/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/141", "id": 361918106, "node_id": "MDU6SXNzdWUzNjE5MTgxMDY=", "number": 141, "title": "Typing issue in 0.21.1", "user": {"login": "fake-name", "id": 1401239, "node_id": "MDQ6VXNlcjE0MDEyMzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1401239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fake-name", "html_url": "https://github.com/fake-name", "followers_url": "https://api.github.com/users/fake-name/followers", "following_url": "https://api.github.com/users/fake-name/following{/other_user}", "gists_url": "https://api.github.com/users/fake-name/gists{/gist_id}", "starred_url": "https://api.github.com/users/fake-name/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fake-name/subscriptions", "organizations_url": "https://api.github.com/users/fake-name/orgs", "repos_url": "https://api.github.com/users/fake-name/repos", "events_url": "https://api.github.com/users/fake-name/events{/privacy}", "received_events_url": "https://api.github.com/users/fake-name/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-19T20:38:33Z", "updated_at": "2018-09-20T04:29:11Z", "closed_at": "2018-09-19T22:14:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a clean venv on Ubuntu 16.04 LTS:\r\n\r\n```\r\n(venv) scrapeworker@scrape-worker-3:/scraper$ python\r\nPython 3.5.2 (default, Nov 23 2017, 16:37:01)\r\n[GCC 5.4.0 20160609] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import zeroconf\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/scraper/venv/lib/python3.5/site-packages/zeroconf.py\", line 320, in <module>\r\n    OptionalExcInfo = Tuple[Optional[Type[BaseException]], Optional[BaseException], Optional[TracebackType]]\r\n  File \"/usr/lib/python3.5/typing.py\", line 649, in __getitem__\r\n    return Union[arg, type(None)]\r\n  File \"/usr/lib/python3.5/typing.py\", line 552, in __getitem__\r\n    dict(self.__dict__), parameters, _root=True)\r\n  File \"/usr/lib/python3.5/typing.py\", line 512, in __new__\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n  File \"/usr/lib/python3.5/typing.py\", line 512, in <genexpr>\r\n    for t2 in all_params - {t1} if not isinstance(t2, TypeVar)):\r\n  File \"/usr/lib/python3.5/typing.py\", line 1077, in __subclasscheck__\r\n    if super().__subclasscheck__(cls):\r\n  File \"/usr/lib/python3.5/abc.py\", line 225, in __subclasscheck__\r\n    for scls in cls.__subclasses__():\r\nTypeError: descriptor '__subclasses__' of 'type' object needs an argument\r\n```\r\n\r\nReverting to zeroconf 0.20.0 fixes the issue.\r\n\r\nPossibly related to https://github.com/python/typing/issues/266?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/139", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/139/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/139/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/139", "id": 360773218, "node_id": "MDU6SXNzdWUzNjA3NzMyMTg=", "number": 139, "title": "zeroconf 0.21.0 claims python 3.4+, but imports typing", "user": {"login": "rtobar", "id": 620848, "node_id": "MDQ6VXNlcjYyMDg0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/620848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtobar", "html_url": "https://github.com/rtobar", "followers_url": "https://api.github.com/users/rtobar/followers", "following_url": "https://api.github.com/users/rtobar/following{/other_user}", "gists_url": "https://api.github.com/users/rtobar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtobar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtobar/subscriptions", "organizations_url": "https://api.github.com/users/rtobar/orgs", "repos_url": "https://api.github.com/users/rtobar/repos", "events_url": "https://api.github.com/users/rtobar/events{/privacy}", "received_events_url": "https://api.github.com/users/rtobar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-17T08:49:15Z", "updated_at": "2018-09-17T10:08:38Z", "closed_at": "2018-09-17T10:08:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe newest zeroconf release still claims python 3.4+ compatibility, but it actually fails to import on python 3.4+. The Travis builds pass because ``typing`` is installed as part of the ``requirements-dev.txt`` file, but when using a pure installation ``typing`` isn't included.\r\n\r\nWould it be possible to have a new release that either: a) drops 3.4 support, or b) adds the ``typing`` module when being installed under 3.4? I can provide a patch for the latter if required.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/133", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/133/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/133/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/133", "id": 328957712, "node_id": "MDU6SXNzdWUzMjg5NTc3MTI=", "number": 133, "title": "[Performance] 0.20.0 Seems to be more CPU-intensive than 0.17.6 on Mac OS X", "user": {"login": "LipuFei", "id": 2630468, "node_id": "MDQ6VXNlcjI2MzA0Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2630468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LipuFei", "html_url": "https://github.com/LipuFei", "followers_url": "https://api.github.com/users/LipuFei/followers", "following_url": "https://api.github.com/users/LipuFei/following{/other_user}", "gists_url": "https://api.github.com/users/LipuFei/gists{/gist_id}", "starred_url": "https://api.github.com/users/LipuFei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LipuFei/subscriptions", "organizations_url": "https://api.github.com/users/LipuFei/orgs", "repos_url": "https://api.github.com/users/LipuFei/repos", "events_url": "https://api.github.com/users/LipuFei/events{/privacy}", "received_events_url": "https://api.github.com/users/LipuFei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-04T08:33:49Z", "updated_at": "2020-02-20T21:19:38Z", "closed_at": "2020-02-20T21:19:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "**OS:** Mac OS X\r\n**Version:** 0.20.0\r\n**Python version:** 3.5.2\r\n\r\nOn a LAN with more than 100 devices that broadcast mDNS messages, zeroconf 0.20.0 seems to be way more CPU-intensive than 0.17.6. We have integrated zeroconf with an Qt-based GUI application. When it's idle, the process still has high busty CPU usage; when I disconnect all network connects or disable zeroconf completely, the CPU usage goes quiet. Please see the charts below:\r\n\r\n**Application idle, zeroconf on, network on**:\r\n![image](https://user-images.githubusercontent.com/2630468/40906822-4e09e9bc-67e2-11e8-9e75-4ae811116fcd.png)\r\n\r\n**Application idle, zeroconf off/network off**:\r\n![image](https://user-images.githubusercontent.com/2630468/40906865-701c0094-67e2-11e8-9b46-81c6fd3a3ab6.png)\r\n\r\nWhen I switch to 0.17.6, although the CPU usage is still busty, the application GUI seems way more responsive than when I used 0.20.0.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/125", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/125/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/125/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/125", "id": 308743733, "node_id": "MDU6SXNzdWUzMDg3NDM3MzM=", "number": 125, "title": "Remove DNSCache Entry not threadsafe?", "user": {"login": "cdce8p", "id": 30130371, "node_id": "MDQ6VXNlcjMwMTMwMzcx", "avatar_url": "https://avatars2.githubusercontent.com/u/30130371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdce8p", "html_url": "https://github.com/cdce8p", "followers_url": "https://api.github.com/users/cdce8p/followers", "following_url": "https://api.github.com/users/cdce8p/following{/other_user}", "gists_url": "https://api.github.com/users/cdce8p/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdce8p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdce8p/subscriptions", "organizations_url": "https://api.github.com/users/cdce8p/orgs", "repos_url": "https://api.github.com/users/cdce8p/repos", "events_url": "https://api.github.com/users/cdce8p/events{/privacy}", "received_events_url": "https://api.github.com/users/cdce8p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-26T21:34:36Z", "updated_at": "2018-05-13T20:32:44Z", "closed_at": "2018-05-13T20:32:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "A user from [Home-Assistant](https://www.home-assistant.io/) noticed a bug when a service gets `registered`, `unregistered` and `registered` (slightly changed) again. The [issue](https://github.com/home-assistant/home-assistant/issues/12868). It seems to be because an Entry isn't deleted from the DNSCache and therefore the new service with the same name and alias can't be registered.\r\n\r\nUsing `register_service(service_info, allow_name_change=True)` solves the issue, unfortunately doesn't work in that context. `unregister_all_services()` doesn't solve it.\r\n\r\nhttps://github.com/jstasiak/python-zeroconf/blob/0622570645116b0c45ee03d38b7b308be2026bd4/zeroconf.py#L1045-L1051\r\n\r\nI have added custom log statements to `zeroconf.py [DNSCache|remove]`. It seems like the threads `zeroconf-Reaper` and `zeroconf-Engine` both try to access `list_` at the same time and interleave. Maybe the log helps:\r\n```\r\n2018-03-26 20:46:50 WARNING (zeroconf-Reaper) [zeroconf] remove: entry <key: home assistant._hap._tcp.local., alias: None>\r\n2018-03-26 20:46:50 WARNING (zeroconf-Engine) [zeroconf] remove: entry <key: home assistant._hap._tcp.local., alias: None>\r\n2018-03-26 20:46:50 WARNING (zeroconf-Reaper) [zeroconf] remove: cache[key] <[record[srv,in,Home Assistant._hap._tcp.local.,0/0,raspberrypi.local.:51827]]>\r\n2018-03-26 20:46:50 WARNING (zeroconf-Engine) [zeroconf] remove: cache[key] <[record[srv,in,Home Assistant._hap._tcp.local.,0/0,raspberrypi.local.:51827]]>\r\n2018-03-26 20:46:50 WARNING (zeroconf-Reaper) [zeroconf] remove: index: 0\r\n2018-03-26 20:46:50 WARNING (zeroconf-Engine) [zeroconf] remove: index: 0\r\n2018-03-26 20:46:50 WARNING (zeroconf-Reaper) [zeroconf] remove: success\r\n2018-03-26 20:46:50 WARNING (zeroconf-Engine) [zeroconf] remove: error list.remove(x): x not in list ... entry <key: home assistant._hap._tcp.local., alias: None>\r\n```\r\nThe changed `remove` method is now:\r\n```py\r\ndef remove(self, entry):\r\n        \"\"\"Removes an entry\"\"\"\r\n        if '_hap._tcp.local' in entry.key:\r\n            log.warning('remove: entry <key: %s, alias: %s>', entry.key, getattr(entry, 'alias', None))\r\n        try:\r\n            list_ = self.cache[entry.key]\r\n            i = list_.index(entry)\r\n            if '_hap._tcp.local' in entry.key:\r\n                log.warning('remove: cache[key] <%s>', list_)\r\n                log.warning('remove: index: %s', i)\r\n            # raise KeyError('MyError')\r\n            list_.remove(entry)\r\n            # del list_[i]\r\n            if '_hap._tcp.local' in entry.key:\r\n                log.warning('remove: success')\r\n        except (KeyError, ValueError) as e:\r\n            if '_hap._tcp.local' in entry.key:\r\n                log.warning('remove: error %s ... entry <key: %s, alias: %s>', e, entry.key, getattr(entry, 'alias', None))\r\n            pass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/122", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/122/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/122/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/122", "id": 299100744, "node_id": "MDU6SXNzdWUyOTkxMDA3NDQ=", "number": 122, "title": "Python2 support has been quietly dropped", "user": {"login": "machinekoder", "id": 1467368, "node_id": "MDQ6VXNlcjE0NjczNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1467368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/machinekoder", "html_url": "https://github.com/machinekoder", "followers_url": "https://api.github.com/users/machinekoder/followers", "following_url": "https://api.github.com/users/machinekoder/following{/other_user}", "gists_url": "https://api.github.com/users/machinekoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/machinekoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/machinekoder/subscriptions", "organizations_url": "https://api.github.com/users/machinekoder/orgs", "repos_url": "https://api.github.com/users/machinekoder/repos", "events_url": "https://api.github.com/users/machinekoder/events{/privacy}", "received_events_url": "https://api.github.com/users/machinekoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-21T19:38:26Z", "updated_at": "2018-03-15T20:03:47Z", "closed_at": "2018-02-21T19:44:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python2 and 3.3 support has been dropped: https://github.com/jstasiak/python-zeroconf/commit/f22f421e4e6bf1ca7671b1eb540ba09fbf1e04b1\r\n\r\nBut Python2 is still live and active and widely used. Dropping support is not a good idea in my opinion.\r\n\r\nHowever, what really annoyed me is, that there is no warning that this version python-zeroconf doesn't support Python2, instead one get's random error messages. Cost me quite some time, as I assumed an error in my code.\r\n\r\nI suggest adding an import error for Python 2 and 3.3.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/107", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/107/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/107/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/107", "id": 237374909, "node_id": "MDU6SXNzdWUyMzczNzQ5MDk=", "number": 107, "title": "Question, service browsing/discover without dependencies?", "user": {"login": "gepd", "id": 7091609, "node_id": "MDQ6VXNlcjcwOTE2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7091609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gepd", "html_url": "https://github.com/gepd", "followers_url": "https://api.github.com/users/gepd/followers", "following_url": "https://api.github.com/users/gepd/following{/other_user}", "gists_url": "https://api.github.com/users/gepd/gists{/gist_id}", "starred_url": "https://api.github.com/users/gepd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gepd/subscriptions", "organizations_url": "https://api.github.com/users/gepd/orgs", "repos_url": "https://api.github.com/users/gepd/repos", "events_url": "https://api.github.com/users/gepd/events{/privacy}", "received_events_url": "https://api.github.com/users/gepd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-20T23:39:44Z", "updated_at": "2017-06-22T01:16:35Z", "closed_at": "2017-06-22T01:16:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm developing a plugin for **Sublime Text** who needs to discover the availables devices. I've been working for a while with `zeroconf` but there have been somes problems because ST runs the plugins in their own simplified version of python, so I've tried many ways to improve the installation of this library. \r\n\r\nThe last try was to download it with all dependecies, but netifaces is a library harder to make ir run because is a C library.\r\n\r\nSo my question is; There is a way to browse a service without all the dependencies, which ones are required by this feature? My idea is to make a lightweight version to only discover services.\r\n\r\nI'll really appreciate any help/ advice.\r\n\r\n**Edit:** I've tried with the others zeroconf repositories (paulsm, wmcbrine) who seems to not need netifaces dependencies, but it doesn't recognizes the same services than this repo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/106", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/106/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/106/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/106", "id": 235696666, "node_id": "MDU6SXNzdWUyMzU2OTY2NjY=", "number": 106, "title": "No module named zeroconf", "user": {"login": "Techassi", "id": 16667167, "node_id": "MDQ6VXNlcjE2NjY3MTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/16667167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Techassi", "html_url": "https://github.com/Techassi", "followers_url": "https://api.github.com/users/Techassi/followers", "following_url": "https://api.github.com/users/Techassi/following{/other_user}", "gists_url": "https://api.github.com/users/Techassi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Techassi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Techassi/subscriptions", "organizations_url": "https://api.github.com/users/Techassi/orgs", "repos_url": "https://api.github.com/users/Techassi/repos", "events_url": "https://api.github.com/users/Techassi/events{/privacy}", "received_events_url": "https://api.github.com/users/Techassi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-06-13T21:21:07Z", "updated_at": "2017-06-15T09:30:52Z", "closed_at": "2017-06-15T09:30:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\nI use your browser script to detect services in my network.\r\nSuddenly my script doesn't work anymore because python throws an ImportError: No module named zeroconf.\r\n\r\nBut it is installed and I even tried to uninstall and reinstall it. Didn't change the outcome.\r\nHope you can help me with this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/103", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/103/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/103/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/103", "id": 222383387, "node_id": "MDU6SXNzdWUyMjIzODMzODc=", "number": 103, "title": "Dependency issue with netifaces 0.10.4", "user": {"login": "postlund", "id": 5982179, "node_id": "MDQ6VXNlcjU5ODIxNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5982179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/postlund", "html_url": "https://github.com/postlund", "followers_url": "https://api.github.com/users/postlund/followers", "following_url": "https://api.github.com/users/postlund/following{/other_user}", "gists_url": "https://api.github.com/users/postlund/gists{/gist_id}", "starred_url": "https://api.github.com/users/postlund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/postlund/subscriptions", "organizations_url": "https://api.github.com/users/postlund/orgs", "repos_url": "https://api.github.com/users/postlund/repos", "events_url": "https://api.github.com/users/postlund/events{/privacy}", "received_events_url": "https://api.github.com/users/postlund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-18T11:19:56Z", "updated_at": "2017-06-13T07:27:55Z", "closed_at": "2017-06-13T07:27:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using python-zeroconf in my library, https://github.com/postlund/pyatv, but with release 0.19.0 I'm having issues resolving dependencies. It appears to be a well-known issue using this version with python3:\r\n\r\nhttps://bitbucket.org/al45tair/netifaces/issues/13/0104-install-is-broken-on-python-3x\r\nhttps://github.com/GNS3/gns3-server/issues/97\r\n\r\nSince Home Assistant (where I use this library) has pinned version 0.19.0, I cannot just blacklist that version until a more permanent fix is in place (that's not desirable anyways). There's a special version of netifaces that claims to solve this issue (gns3-netifaces), but using the latest version of netifaces would of course be more desirable. Can any developer weigh in on this as it blocks a release that I want to make?\r\n\r\n\r\nFor reference, this is the backtrace I see:\r\n\r\n```\r\nInstalled /home/postlund/pyatv/lib/python3.4/site-packages/six-1.10.0-py3.4.egg\r\nSearching for netifaces<=0.10.4\r\nReading https://pypi.python.org/simple/netifaces/\r\nBest match: netifaces 0.10.4\r\nDownloading https://pypi.python.org/packages/18/fa/dd13d4910aea339c0bb87d2b3838d8fd923c11869b1f6e741dbd0ff3bc00/netifaces-0.10.4.tar.gz#md5=36da76e2cfadd24cc7510c2c0012eb1e\r\nProcessing netifaces-0.10.4.tar.gz\r\nWriting /tmp/easy_install-87y982o4/netifaces-0.10.4/setup.cfg\r\nRunning netifaces-0.10.4/setup.py -q bdist_egg --dist-dir /tmp/easy_install-87y982o4/netifaces-0.10.4/egg-dist-tmp-1nh5a95c\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 42, in <module>\r\n    'Topic :: Home Automation',\r\n  File \"/usr/lib/python3.4/distutils/core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"/usr/lib/python3.4/distutils/dist.py\", line 955, in run_commands\r\n    self.run_command(cmd)\r\n  File \"/usr/lib/python3.4/distutils/dist.py\", line 974, in run_command\r\n    cmd_obj.run()\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/setuptools/command/develop.py\", line 32, in run\r\n    self.install_for_development()\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/setuptools/command/develop.py\", line 132, in install_for_development\r\n    self.process_distribution(None, self.dist, not self.no_deps)\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/setuptools/command/easy_install.py\", line 716, in process_distribution\r\n    [requirement], self.local_index, self.easy_install\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/pkg_resources.py\", line 631, in resolve\r\n    dist = best[req.key] = env.best_match(req, ws, installer)\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/pkg_resources.py\", line 874, in best_match\r\n    return self.obtain(req, installer)\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/pkg_resources.py\", line 886, in obtain\r\n    return installer(requirement)\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/setuptools/command/easy_install.py\", line 636, in easy_install\r\n    return self.install_item(spec, dist.location, tmpdir, deps)\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/setuptools/command/easy_install.py\", line 666, in install_item\r\n    dists = self.install_eggs(spec, download, tmpdir)\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/setuptools/command/easy_install.py\", line 856, in install_eggs\r\n    return self.build_and_install(setup_script, setup_base)\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/setuptools/command/easy_install.py\", line 1078, in build_and_install\r\n    self.run_setup(setup_script, setup_base, args)\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/setuptools/command/easy_install.py\", line 1063, in run_setup\r\n    run_setup(setup_script, args)\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/setuptools/sandbox.py\", line 68, in run_setup\r\n    DirectorySandbox(setup_dir).run(runner)\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/setuptools/sandbox.py\", line 114, in run\r\n    return func()\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/setuptools/sandbox.py\", line 67, in runner\r\n    _execfile(setup_script, ns)\r\n  File \"/home/postlund/pyatv/lib/python3.4/site-packages/setuptools/sandbox.py\", line 43, in _execfile\r\n    exec(code, globals, locals)\r\n  File \"/tmp/easy_install-87y982o4/netifaces-0.10.4/setup.py\", line 17, in <module>\r\n    description='Library for controlling an Apple TV',\r\nAttributeError: 'dict' object has no attribute 'print'\r\n```\r\n(it's the good ol' module-mix-up problem)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/102", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/102/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/102/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/102", "id": 207336820, "node_id": "MDU6SXNzdWUyMDczMzY4MjA=", "number": 102, "title": "Service name regex", "user": {"login": "CharlesBlonde", "id": 1319920, "node_id": "MDQ6VXNlcjEzMTk5MjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1319920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CharlesBlonde", "html_url": "https://github.com/CharlesBlonde", "followers_url": "https://api.github.com/users/CharlesBlonde/followers", "following_url": "https://api.github.com/users/CharlesBlonde/following{/other_user}", "gists_url": "https://api.github.com/users/CharlesBlonde/gists{/gist_id}", "starred_url": "https://api.github.com/users/CharlesBlonde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CharlesBlonde/subscriptions", "organizations_url": "https://api.github.com/users/CharlesBlonde/orgs", "repos_url": "https://api.github.com/users/CharlesBlonde/repos", "events_url": "https://api.github.com/users/CharlesBlonde/events{/privacy}", "received_events_url": "https://api.github.com/users/CharlesBlonde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-02-13T20:56:08Z", "updated_at": "2018-09-21T21:11:56Z", "closed_at": "2018-09-21T19:43:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm currently working on writing a library in order to control Dyson Pure Cool link devices (http://www.dyson.com/air-treatment/purifiers/dyson-pure-hot-cool-link.aspx) and I have an issue with the service name.\r\nThe service name is *dyson_mqtt* and the validation regex (https://github.com/jstasiak/python-zeroconf/blob/master/zeroconf.py#L151) doesn't accept this name because of the underscore.\r\n\r\nOf course, it's quite simple to provide a pull request to update this regex but I think this regex exists to follow the RFC. Can you confirm an underscore in the service name is not valid ?\r\n\r\nIf yes, what can be the best solution ? Right now I'm using an hacked version with the following regex:\r\n\r\n```python\r\n_HAS_ONLY_A_TO_Z_NUM_HYPHEN = re.compile(r'^[A-Za-z0-9\\-\\_]+$')\r\n```\r\n\r\nBut I would prefer to use an official version. If I have no choice I'll embedded this hacked version but I would like to avoid\r\n\r\nThanks for your help,\r\n\r\nCharles\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/101", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/101/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/101/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/101", "id": 205900811, "node_id": "MDU6SXNzdWUyMDU5MDA4MTE=", "number": 101, "title": "0.18.0 tests fail when running against python3 (3.6)", "user": {"login": "nullr0ute", "id": 1917405, "node_id": "MDQ6VXNlcjE5MTc0MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1917405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nullr0ute", "html_url": "https://github.com/nullr0ute", "followers_url": "https://api.github.com/users/nullr0ute/followers", "following_url": "https://api.github.com/users/nullr0ute/following{/other_user}", "gists_url": "https://api.github.com/users/nullr0ute/gists{/gist_id}", "starred_url": "https://api.github.com/users/nullr0ute/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nullr0ute/subscriptions", "organizations_url": "https://api.github.com/users/nullr0ute/orgs", "repos_url": "https://api.github.com/users/nullr0ute/repos", "events_url": "https://api.github.com/users/nullr0ute/events{/privacy}", "received_events_url": "https://api.github.com/users/nullr0ute/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-07T14:19:50Z", "updated_at": "2017-03-21T21:31:06Z", "closed_at": "2017-03-21T21:31:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running the tests (in Fedora 26) for python 3 against python 3.6 I get a test failure saying \"ModuleNotFoundError: No module named 'mock'\" when the mock plugin is reported at the the beginning of the test and the same test works against python2.\r\n\r\nOutput:\r\n\r\n<pre>\r\n+ cd python-zeroconf-0.18.0\r\n+ /usr/bin/python2 -m pytest -k 'not integration'\r\n============================= test session starts ==============================\r\nplatform linux2 -- Python 2.7.13, pytest-3.0.6, py-1.4.32, pluggy-0.4.0\r\nrootdir: /builddir/build/BUILD/python-zeroconf-0.18.0, inifile: \r\nplugins: mock-1.2\r\ncollected 39 items\r\ntest_zeroconf.py ...................................\r\n============================== 4 tests deselected ==============================\r\n=================== 35 passed, 4 deselected in 12.63 seconds ===================\r\n+ /usr/bin/python3 -m pytest -k 'not integration'\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.6.0, pytest-3.0.6, py-1.4.32, pluggy-0.4.0\r\nrootdir: /builddir/build/BUILD/python-zeroconf-0.18.0, inifile: \r\nplugins: mock-1.2\r\ncollected 39 items\r\ntest_zeroconf.py .......................F...........\r\n=================================== FAILURES ===================================\r\n___________________________ Names.test_lots_of_names ___________________________\r\nself = <test_zeroconf.Names testMethod=test_lots_of_names>\r\n    def test_lots_of_names(self):\r\n    \r\n        # instantiate a zeroconf instance\r\n        zc = Zeroconf(interfaces=['127.0.0.1'])\r\n    \r\n        # create a bunch of servers\r\n        type_ = \"_my-service._tcp.local.\"\r\n        name = 'a wonderful service'\r\n        server_count = 300\r\n        self.generate_many_hosts(zc, type_, name, server_count)\r\n    \r\n        # verify that name changing works\r\n        self.verify_name_change(zc, type_, name, server_count)\r\n    \r\n        # we are going to monkey patch the zeroconf send to check packet sizes\r\n        old_send = zc.send\r\n    \r\n        # needs to be a list so that we can modify it in our phony send\r\n        longest_packet = [0, None]\r\n    \r\n        def send(out, addr=r._MDNS_ADDR, port=r._MDNS_PORT):\r\n            \"\"\"Sends an outgoing packet.\"\"\"\r\n            packet = out.packet()\r\n            if longest_packet[0] < len(packet):\r\n                longest_packet[0] = len(packet)\r\n                longest_packet[1] = out\r\n            old_send(out, addr=addr, port=port)\r\n    \r\n        # monkey patch the zeroconf send\r\n        zc.send = send\r\n    \r\n        # dummy service callback\r\n        def on_service_state_change(zeroconf, service_type, state_change, name):\r\n            pass\r\n    \r\n        # start a browser\r\n        browser = ServiceBrowser(zc, type_, [on_service_state_change])\r\n    \r\n        # wait until the browse request packet has maxed out in size\r\n        sleep_count = 0\r\n        while sleep_count < 100 and \\\r\n                longest_packet[0] < r._MAX_MSG_ABSOLUTE - 100:\r\n            sleep_count += 1\r\n            time.sleep(0.1)\r\n    \r\n        browser.cancel()\r\n        time.sleep(0.5)\r\n    \r\n        import zeroconf\r\n        zeroconf.log.debug('sleep_count %d, sized %d',\r\n                           sleep_count, longest_packet[0])\r\n    \r\n        # now the browser has sent at least one request, verify the size\r\n        assert longest_packet[0] <= r._MAX_MSG_ABSOLUTE\r\n        assert longest_packet[0] >= r._MAX_MSG_ABSOLUTE - 100\r\n    \r\n        # mock zeroconf's logger warning() and debug()\r\n>       from mock import patch\r\nE       ModuleNotFoundError: No module named 'mock'\r\ntest_zeroconf.py:275: ModuleNotFoundError\r\n============================== 4 tests deselected ==============================\r\n============== 1 failed, 34 passed, 4 deselected in 17.47 seconds ==============\r\n</pre>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/100", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/100/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/100/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/100", "id": 204793260, "node_id": "MDU6SXNzdWUyMDQ3OTMyNjA=", "number": 100, "title": "DNSAddress class cannot handle __repr__ for ipv6 address.", "user": {"login": "tywtyw2002", "id": 576954, "node_id": "MDQ6VXNlcjU3Njk1NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/576954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tywtyw2002", "html_url": "https://github.com/tywtyw2002", "followers_url": "https://api.github.com/users/tywtyw2002/followers", "following_url": "https://api.github.com/users/tywtyw2002/following{/other_user}", "gists_url": "https://api.github.com/users/tywtyw2002/gists{/gist_id}", "starred_url": "https://api.github.com/users/tywtyw2002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tywtyw2002/subscriptions", "organizations_url": "https://api.github.com/users/tywtyw2002/orgs", "repos_url": "https://api.github.com/users/tywtyw2002/repos", "events_url": "https://api.github.com/users/tywtyw2002/events{/privacy}", "received_events_url": "https://api.github.com/users/tywtyw2002/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-02T06:32:14Z", "updated_at": "2020-03-07T23:42:31Z", "closed_at": "2020-03-07T23:42:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Although the commit `aa1f48433cbd4dbf52565ec0c2635e5d52a37086` improved DNS Incoming Packets parsing exceptions handling, it does not handle the ipv6 package in right way.\r\n\r\nI made some change to let zeroconf to handle the ipv6 address.\r\n```\r\n 427     def __repr__(self):\r\n 428         \"\"\"String representation\"\"\"\r\n 429         try:\r\n 430             return str(socket.inet_ntop(socket.AF_INET, self.address))\r\n 431         except ValueError:\r\n 432             return str(socket.inet_ntop(socket.AF_INET6, self.address))\r\n 433         except Exception as e:  # TODO stop catching all Exceptions\r\n 434             return str(self.address)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/99", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/99/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/99/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/99", "id": 201635341, "node_id": "MDU6SXNzdWUyMDE2MzUzNDE=", "number": 99, "title": "Allow _ in side of service.", "user": {"login": "wgaylord", "id": 2133449, "node_id": "MDQ6VXNlcjIxMzM0NDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/2133449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wgaylord", "html_url": "https://github.com/wgaylord", "followers_url": "https://api.github.com/users/wgaylord/followers", "following_url": "https://api.github.com/users/wgaylord/following{/other_user}", "gists_url": "https://api.github.com/users/wgaylord/gists{/gist_id}", "starred_url": "https://api.github.com/users/wgaylord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wgaylord/subscriptions", "organizations_url": "https://api.github.com/users/wgaylord/orgs", "repos_url": "https://api.github.com/users/wgaylord/repos", "events_url": "https://api.github.com/users/wgaylord/events{/privacy}", "received_events_url": "https://api.github.com/users/wgaylord/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-01-18T17:11:24Z", "updated_at": "2018-11-02T19:54:30Z", "closed_at": "2018-11-02T19:53:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Many services have a _ inside there service name. The current code does not allow for them to be used.\r\n\r\n(Latest pip install for py 2.7)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/97", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/97/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/97/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/97", "id": 199059908, "node_id": "MDU6SXNzdWUxOTkwNTk5MDg=", "number": 97, "title": "PyPi tarball is missing COPYING file", "user": {"login": "bachp", "id": 333807, "node_id": "MDQ6VXNlcjMzMzgwNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/333807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bachp", "html_url": "https://github.com/bachp", "followers_url": "https://api.github.com/users/bachp/followers", "following_url": "https://api.github.com/users/bachp/following{/other_user}", "gists_url": "https://api.github.com/users/bachp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bachp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bachp/subscriptions", "organizations_url": "https://api.github.com/users/bachp/orgs", "repos_url": "https://api.github.com/users/bachp/repos", "events_url": "https://api.github.com/users/bachp/events{/privacy}", "received_events_url": "https://api.github.com/users/bachp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-05T21:09:13Z", "updated_at": "2017-09-25T23:03:27Z", "closed_at": "2017-09-25T23:03:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be good to include the LICENSE file in the [tarball on PyPi](https://pypi.python.org/pypi/zeroconf/0.17.6).\r\nThis way upstream packagers like Yocto can automatically verify it during package creation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/96", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/96/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/96/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/96", "id": 198256685, "node_id": "MDU6SXNzdWUxOTgyNTY2ODU=", "number": 96, "title": "zeroconf.get_service_info(service_type, name) gives No Info", "user": {"login": "gaurav517", "id": 15346341, "node_id": "MDQ6VXNlcjE1MzQ2MzQx", "avatar_url": "https://avatars2.githubusercontent.com/u/15346341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurav517", "html_url": "https://github.com/gaurav517", "followers_url": "https://api.github.com/users/gaurav517/followers", "following_url": "https://api.github.com/users/gaurav517/following{/other_user}", "gists_url": "https://api.github.com/users/gaurav517/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurav517/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurav517/subscriptions", "organizations_url": "https://api.github.com/users/gaurav517/orgs", "repos_url": "https://api.github.com/users/gaurav517/repos", "events_url": "https://api.github.com/users/gaurav517/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurav517/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-01T04:53:41Z", "updated_at": "2017-01-01T06:07:54Z", "closed_at": "2017-01-01T06:07:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "zeroconf.get_service_info(service_type, name) gives `No Info` while running but it gives correct information while debugging. So, not sure what is happening.\r\n\r\nFollowing is the code (basically copy from example):\r\n\r\n```\r\n\r\nfrom __future__ import absolute_import, division, print_function, unicode_literals\r\n\r\n\"\"\" Example of browsing for a service (in this case, HTTP) \"\"\"\r\n\r\nimport logging\r\nimport socket\r\nimport sys\r\nfrom time import sleep\r\n\r\nfrom zeroconf import ServiceBrowser, ServiceStateChange, Zeroconf\r\n\r\n\r\ndef on_service_state_change(zeroconf, service_type, name, state_change):\r\n    print(\"Service %s of type %s state changed: %s\" % (name, service_type, state_change))\r\n\r\n    if state_change is ServiceStateChange.Added:\r\n        info = zeroconf.get_service_info(service_type, name)\r\n        if info:\r\n            print(\"  Address: %s:%d\" % (socket.inet_ntoa(info.address), info.port))\r\n            print(\"  Weight: %d, priority: %d\" % (info.weight, info.priority))\r\n            print(\"  Server: %s\" % (info.server,))\r\n            if info.properties:\r\n                print(\"  Properties are:\")\r\n                for key, value in info.properties.items():\r\n                    print(\"    %s: %s\" % (key, value))\r\n            else:\r\n                print(\"  No properties\")\r\n        else:\r\n            print(\"  No info\")\r\n        print('\\n')\r\n\r\nif __name__ == '__main__':\r\n    logging.basicConfig(level=logging.DEBUG)\r\n    if len(sys.argv) > 1:\r\n        assert sys.argv[1:] == ['--debug']\r\n        logging.getLogger('zeroconf').setLevel(logging.DEBUG)\r\n\r\n    zeroconf = Zeroconf()\r\n    print(\"\\nBrowsing services, press Ctrl-C to exit...\\n\")\r\n    browser = ServiceBrowser(zeroconf, \"_myservice._tcp.local.\", handlers=[on_service_state_change])\r\n\r\n    try:\r\n        while True:\r\n            sleep(0.1)\r\n    except KeyboardInterrupt:\r\n        pass\r\n    finally:\r\n        zeroconf.close()\r\n\r\n```\r\nI am running it on Windows by commenting `#if addr.get('netmask') != HOST_ONLY_NETWORK_MASK` because of windows discovery issue discussed in another thread. zeroconf version is 0.17.6.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/92", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/92/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/92/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/92", "id": 191795684, "node_id": "MDU6SXNzdWUxOTE3OTU2ODQ=", "number": 92, "title": "Travis build failing due to pinned flake8-import-order", "user": {"login": "hugovk", "id": 1324225, "node_id": "MDQ6VXNlcjEzMjQyMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1324225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugovk", "html_url": "https://github.com/hugovk", "followers_url": "https://api.github.com/users/hugovk/followers", "following_url": "https://api.github.com/users/hugovk/following{/other_user}", "gists_url": "https://api.github.com/users/hugovk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugovk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugovk/subscriptions", "organizations_url": "https://api.github.com/users/hugovk/orgs", "repos_url": "https://api.github.com/users/hugovk/repos", "events_url": "https://api.github.com/users/hugovk/events{/privacy}", "received_events_url": "https://api.github.com/users/hugovk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-26T09:07:27Z", "updated_at": "2017-02-01T17:19:27Z", "closed_at": "2017-02-01T17:19:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "This has started failing PRs. \r\n\r\nHere's from a build that's the same as latest master:\r\n```\r\n$ make flake8\r\nflake8 --max-line-length=110 examples *.py\r\nTraceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python2.7.9/bin/flake8\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/flake8/main/cli.py\", line 16, in main\r\n    app.run(argv)\r\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/flake8/main/application.py\", line 322, in run\r\n    self._run(argv)\r\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/flake8/main/application.py\", line 305, in _run\r\n    self.initialize(argv)\r\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/flake8/main/application.py\", line 296, in initialize\r\n    self.register_plugin_options()\r\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/flake8/main/application.py\", line 154, in register_plugin_options\r\n    self.check_plugins.register_options(self.option_manager)\r\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/flake8/plugins/manager.py\", line 488, in register_options\r\n    list(self.manager.map(register_and_enable))\r\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/flake8/plugins/manager.py\", line 284, in map\r\n    yield func(self.plugins[name], *args, **kwargs)\r\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/flake8/plugins/manager.py\", line 484, in register_and_enable\r\n    call_register_options(plugin)\r\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/flake8/plugins/manager.py\", line 380, in generated_function\r\n    return method(optmanager, *args, **kwargs)\r\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/flake8/plugins/manager.py\", line 230, in register_options\r\n    add_options(optmanager)\r\n  File \"/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/flake8_import_order/flake8_linter.py\", line 29, in add_options\r\n    parser.config_options.append(\"application-import-names\")\r\nAttributeError: 'OptionManager' object has no attribute 'config_options'\r\nmake: *** [flake8] Error 1\r\n```\r\nhttps://travis-ci.org/hugovk/python-zeroconf/builds/179008513\r\n\r\nflake8-import-order <0.6.0 doesn't work with flake8 3.0: https://github.com/PyCQA/flake8-import-order/issues/79\r\n\r\nQuick fix is to pin flake8. Proper fix is to unpin both, decide on a style and set that for flake8-import-order.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/90", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/90/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/90/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/90", "id": 185693163, "node_id": "MDU6SXNzdWUxODU2OTMxNjM=", "number": 90, "title": "ImportError: cannot import name ServiceBrowser", "user": {"login": "nejdetckenobi", "id": 4905664, "node_id": "MDQ6VXNlcjQ5MDU2NjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4905664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nejdetckenobi", "html_url": "https://github.com/nejdetckenobi", "followers_url": "https://api.github.com/users/nejdetckenobi/followers", "following_url": "https://api.github.com/users/nejdetckenobi/following{/other_user}", "gists_url": "https://api.github.com/users/nejdetckenobi/gists{/gist_id}", "starred_url": "https://api.github.com/users/nejdetckenobi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nejdetckenobi/subscriptions", "organizations_url": "https://api.github.com/users/nejdetckenobi/orgs", "repos_url": "https://api.github.com/users/nejdetckenobi/repos", "events_url": "https://api.github.com/users/nejdetckenobi/events{/privacy}", "received_events_url": "https://api.github.com/users/nejdetckenobi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 111955276, "node_id": "MDU6TGFiZWwxMTE5NTUyNzY=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-27T14:58:05Z", "updated_at": "2016-10-27T17:20:26Z", "closed_at": "2016-10-27T17:20:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI am trying to run the code below:\n\n```\nfrom six.moves import input\nfrom zeroconf import ServiceBrowser, Zeroconf\n\n\nclass MyListener(object):\n\n    def remove_service(self, zeroconf, type, name):\n        print(\"Service %s removed\" % (name,))\n\n    def add_service(self, zeroconf, type, name):\n        info = zeroconf.get_service_info(type, name)\n        print(\"Service %s added, service info: %s\" % (name, info))\n\n\nzeroconf = Zeroconf()\nlistener = MyListener()\nbrowser = ServiceBrowser(zeroconf, \"_http._tcp.local.\", listener)\ntry:\n    input(\"Press enter to exit...\\n\\n\")\nfinally:\n    zeroconf.close()\n\n```\n\nAnd getting the error below:\n\n```\nPython 2.7.12 (default, Jul  1 2016, 15:12:24) \n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import zeroconf\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"zeroconf.py\", line 2, in <module>\n    from zeroconf import ServiceBrowser, Zeroconf\nImportError: cannot import name ServiceBrowser\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/89", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/89/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/89/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/89", "id": 184264744, "node_id": "MDU6SXNzdWUxODQyNjQ3NDQ=", "number": 89, "title": "Let pip2 know where to find the latest zeroconf for Python2?", "user": {"login": "kjcole", "id": 459840, "node_id": "MDQ6VXNlcjQ1OTg0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/459840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjcole", "html_url": "https://github.com/kjcole", "followers_url": "https://api.github.com/users/kjcole/followers", "following_url": "https://api.github.com/users/kjcole/following{/other_user}", "gists_url": "https://api.github.com/users/kjcole/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjcole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjcole/subscriptions", "organizations_url": "https://api.github.com/users/kjcole/orgs", "repos_url": "https://api.github.com/users/kjcole/repos", "events_url": "https://api.github.com/users/kjcole/events{/privacy}", "received_events_url": "https://api.github.com/users/kjcole/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 111955274, "node_id": "MDU6TGFiZWwxMTE5NTUyNzQ=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-10-20T15:38:00Z", "updated_at": "2020-06-05T20:08:05Z", "closed_at": "2020-06-05T20:08:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sadly, in spite of claims to the contrary, Python 2 is not yet dead, and I find myself in need of ZeroconfServiceTypes, which hasn't made it into the Python 2 package...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/85", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/85/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/85/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/85", "id": 180483150, "node_id": "MDU6SXNzdWUxODA0ODMxNTA=", "number": 85, "title": "Service Not Found - Help to debug", "user": {"login": "gepd", "id": 7091609, "node_id": "MDQ6VXNlcjcwOTE2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7091609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gepd", "html_url": "https://github.com/gepd", "followers_url": "https://api.github.com/users/gepd/followers", "following_url": "https://api.github.com/users/gepd/following{/other_user}", "gists_url": "https://api.github.com/users/gepd/gists{/gist_id}", "starred_url": "https://api.github.com/users/gepd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gepd/subscriptions", "organizations_url": "https://api.github.com/users/gepd/orgs", "repos_url": "https://api.github.com/users/gepd/repos", "events_url": "https://api.github.com/users/gepd/events{/privacy}", "received_events_url": "https://api.github.com/users/gepd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-01T22:12:37Z", "updated_at": "2019-02-17T20:31:11Z", "closed_at": "2019-02-17T20:31:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "For a while I was using the [How do I se it](https://github.com/jstasiak/python-zeroconf#how-do-i-use-it) example to discover IoT devices as esp8266 (with `_arduino` as service name), but I'm having a problem since last week. None device is found when I run the example.\n\nThe first I thought, it was problem of my device, but when I run the Arduino IDE, it's listed as mDNS service.\n\nIn the Arduino's github shows that `_arduino` is the name of the service: https://github.com/esp8266/Arduino/blob/master/libraries/ESP8266mDNS/ESP8266mDNS.cpp#L891\n\nI've disabled my firewall thinking it may be the problem, but same results. And now other people using nodemcu devices have  reported me the same issue, so I guess isn't my configuration. \n\nMy question is, do you have any recomendation to know where is the problem?\n\nI've used `--debug` as argument but the output isn't very clear to me:\n\n`DEBUG:zeroconf:Sending <zeroconf.DNSOutgoing object at 0x02A1A690> as '\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x08_arduino\\x04_tcp\\x05local\\x00\\x00\\x0c\\x00\\x01'...`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/84", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/84/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/84/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/84", "id": 179746956, "node_id": "MDU6SXNzdWUxNzk3NDY5NTY=", "number": 84, "title": "No service found under Windows but working under Ubuntu VM.", "user": {"login": "basic-settings", "id": 1815983, "node_id": "MDQ6VXNlcjE4MTU5ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1815983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basic-settings", "html_url": "https://github.com/basic-settings", "followers_url": "https://api.github.com/users/basic-settings/followers", "following_url": "https://api.github.com/users/basic-settings/following{/other_user}", "gists_url": "https://api.github.com/users/basic-settings/gists{/gist_id}", "starred_url": "https://api.github.com/users/basic-settings/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basic-settings/subscriptions", "organizations_url": "https://api.github.com/users/basic-settings/orgs", "repos_url": "https://api.github.com/users/basic-settings/repos", "events_url": "https://api.github.com/users/basic-settings/events{/privacy}", "received_events_url": "https://api.github.com/users/basic-settings/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-09-28T11:26:56Z", "updated_at": "2017-03-21T21:25:20Z", "closed_at": "2017-03-21T21:18:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am facing some issues in setting up a client/ServiceBrowser that works under both Win and Linux.\n\nI have the following set-up:\n- Win 7 connected to domain\n  - Ethernet config uses IPv4 with Subnet Mask 255.255.255.0\n- Ubuntu VM running on the same system in Oracle VirtualBox with Win Ethernet as Bridged Adapter \n  `enp0s3    Link encap:Ethernet  HWaddr 08:00:27:55:62:63  \n        inet addr:10.121.44.95  Bcast:10.121.44.255  Mask:255.255.255.0\n        inet6 addr: fe80::aa6b:92c:17c4:cfc8/64 Scope:Link\n        UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n        RX packets:1837029 errors:0 dropped:0 overruns:0 frame:0\n        TX packets:110395 errors:0 dropped:0 overruns:0 carrier:0\n        collisions:0 txqueuelen:1000 \n        RX bytes:467243091 (467.2 MB)  TX bytes:7871423 (7.8 MB)`\n- The broadcasting systems are running on different Debian systems connected to the network domain\n\nIf I run the ServiceBrowser from Windows I don't get any return back. I used the example Browser to test the set-up.\n`from zeroconf import ServiceBrowser, Zeroconf\n\nclass MyListener(object):\n\n```\ndef remove_service(self, zeroconf, type, name):\n    print(\"Service %s removed\" % (name,))\n\ndef add_service(self, zeroconf, type, name):\n    info = zeroconf.get_service_info(type, name)\n    print(\"Service %s added, service info: %s\" % (name, info))\n```\n\nzeroconf = Zeroconf()\nlistener = MyListener()\nbrowser = ServiceBrowser(zeroconf, \"_tntsrv._tcp.local.\", listener)\ntry:\n    input(\"Press enter to exit...\\n\\n\")\nfinally:\n    zeroconf.close()`\nRunning from withing Ubuntu, it returns all the available services (as expected).\n\nI noticed that if I change `HOST_ONLY_NETWORK_MASK` from `255.255.255.255` to `255.255.255.0` the opposite happens, where it works under Windows but not under Ubuntu.\n\nThis seems to ocurr in line 1603\n`if addr.get('netmask') != HOST_ONLY_NETWORK_MASK`\n\nI'm not experienced enough to find a common ground, but is there any posibility so that it'll work under both systems?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/80", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/80/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/80/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/80", "id": 167171889, "node_id": "MDU6SXNzdWUxNjcxNzE4ODk=", "number": 80, "title": "Possible error when checking length of service name", "user": {"login": "lidickman", "id": 20608548, "node_id": "MDQ6VXNlcjIwNjA4NTQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/20608548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lidickman", "html_url": "https://github.com/lidickman", "followers_url": "https://api.github.com/users/lidickman/followers", "following_url": "https://api.github.com/users/lidickman/following{/other_user}", "gists_url": "https://api.github.com/users/lidickman/gists{/gist_id}", "starred_url": "https://api.github.com/users/lidickman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lidickman/subscriptions", "organizations_url": "https://api.github.com/users/lidickman/orgs", "repos_url": "https://api.github.com/users/lidickman/repos", "events_url": "https://api.github.com/users/lidickman/events{/privacy}", "received_events_url": "https://api.github.com/users/lidickman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398832410, "node_id": "MDU6TGFiZWwzOTg4MzI0MTA=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/Need%20Info", "name": "Need Info", "color": "c5def5", "default": false, "description": null}, {"id": 111955277, "node_id": "MDU6TGFiZWwxMTE5NTUyNzc=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-23T07:04:53Z", "updated_at": "2016-07-25T16:06:59Z", "closed_at": "2016-07-25T16:06:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I\u2019ve been using version 0.17.5 your zeroconf library \u2013 very helpful!  When I upgraded to the 0.17.6 version, I received errors that the length of the service name was greater than 15 characters (zeroconf.py around line 223).  However, in reading the mDNS spec (RFC 6762), mDNS increased the length of the name to 255 characters.  Am I understanding this correctly?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/79", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/79/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/79/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/79", "id": 166978870, "node_id": "MDU6SXNzdWUxNjY5Nzg4NzA=", "number": 79, "title": "remove_service not working?", "user": {"login": "gepd", "id": 7091609, "node_id": "MDQ6VXNlcjcwOTE2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7091609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gepd", "html_url": "https://github.com/gepd", "followers_url": "https://api.github.com/users/gepd/followers", "following_url": "https://api.github.com/users/gepd/following{/other_user}", "gists_url": "https://api.github.com/users/gepd/gists{/gist_id}", "starred_url": "https://api.github.com/users/gepd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gepd/subscriptions", "organizations_url": "https://api.github.com/users/gepd/orgs", "repos_url": "https://api.github.com/users/gepd/repos", "events_url": "https://api.github.com/users/gepd/events{/privacy}", "received_events_url": "https://api.github.com/users/gepd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 111955277, "node_id": "MDU6TGFiZWwxMTE5NTUyNzc=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-22T06:30:58Z", "updated_at": "2016-07-29T02:06:18Z", "closed_at": "2016-07-29T02:06:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running the example in the main page:\n\n```\nfrom six.moves import input\nfrom zeroconf import ServiceBrowser, Zeroconf\n\n\nclass MyListener(object):\n\n    def remove_service(self, zeroconf, type, name):\n        print(\"Service %s removed\" % (name,))\n\n    def add_service(self, zeroconf, type, name):\n        info = zeroconf.get_service_info(type, name)\n        print(\"Service %s added, service info: %s\" % (name, info))\n\n\nzeroconf = Zeroconf()\nlistener = MyListener()\nbrowser = ServiceBrowser(zeroconf, \"_http._tcp.local.\", listener)\ntry:\n    input(\"Press enter to exit...\\n\\n\")\nfinally:\n    zeroconf.close()\n```\n\nI don't know really if the `remove_service`  listener is not working or I'm doing something wrong.\n\nI've a 'Nodemcu' device, I'm browsing in `_arduino._tcp.local.` so when I turn on the device I can see all the available information. But when I unplug the device, nothing happens. \n\nThe `Service name removed` text should appears inmediatle or should I wait?\n\nHow could I solve this issue?\n\nI'm using Py 2.7\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/78", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/78/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/78/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/78", "id": 166883359, "node_id": "MDU6SXNzdWUxNjY4ODMzNTk=", "number": 78, "title": "deque mutated during iteration", "user": {"login": "gbiddison", "id": 797192, "node_id": "MDQ6VXNlcjc5NzE5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/797192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbiddison", "html_url": "https://github.com/gbiddison", "followers_url": "https://api.github.com/users/gbiddison/followers", "following_url": "https://api.github.com/users/gbiddison/following{/other_user}", "gists_url": "https://api.github.com/users/gbiddison/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbiddison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbiddison/subscriptions", "organizations_url": "https://api.github.com/users/gbiddison/orgs", "repos_url": "https://api.github.com/users/gbiddison/repos", "events_url": "https://api.github.com/users/gbiddison/events{/privacy}", "received_events_url": "https://api.github.com/users/gbiddison/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398832410, "node_id": "MDU6TGFiZWwzOTg4MzI0MTA=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/Need%20Info", "name": "Need Info", "color": "c5def5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-07-21T18:12:42Z", "updated_at": "2020-07-07T20:13:03Z", "closed_at": "2020-07-07T20:13:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing this error infrequently (17.7.dev):\nIt looks like this stops the service advertisement completely.\n\n``` python\nException in thread zeroconf-Engine:\nTraceback (most recent call last):\n  File \"/usr/lib/python3.4/threading.py\", line 920, in _bootstrap_inner\n    self.run()\n  File \"/usr/local/lib/python3.4/dist-packages/zeroconf.py\", line 1106, in run\n    reader.handle_read(socket_)\n  File \"/usr/local/lib/python3.4/dist-packages/zeroconf.py\", line 1164, in handle_read\n    self.zc.handle_response(msg)\n  File \"/usr/local/lib/python3.4/dist-packages/zeroconf.py\", line 1937, in handle_response\n    self.update_record(now, record)\n  File \"/usr/local/lib/python3.4/dist-packages/zeroconf.py\", line 1918, in update_record\n    self.notify_all()\n  File \"/usr/local/lib/python3.4/dist-packages/zeroconf.py\", line 1720, in notify_all\n    self.condition.notify_all()\n  File \"/usr/lib/python3.4/threading.py\", line 358, in notify_all\n    self.notify(len(self._waiters))\n  File \"/usr/lib/python3.4/threading.py\", line 341, in notify\n    waiters_to_notify = _deque(_islice(all_waiters, n))\nRuntimeError: deque mutated during iteration\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/74", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/74/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/74/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/74", "id": 165102615, "node_id": "MDU6SXNzdWUxNjUxMDI2MTU=", "number": 74, "title": "zeroconf.BadTypeInNameException for valid service name", "user": {"login": "nils-werner", "id": 88704, "node_id": "MDQ6VXNlcjg4NzA0", "avatar_url": "https://avatars1.githubusercontent.com/u/88704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nils-werner", "html_url": "https://github.com/nils-werner", "followers_url": "https://api.github.com/users/nils-werner/followers", "following_url": "https://api.github.com/users/nils-werner/following{/other_user}", "gists_url": "https://api.github.com/users/nils-werner/gists{/gist_id}", "starred_url": "https://api.github.com/users/nils-werner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nils-werner/subscriptions", "organizations_url": "https://api.github.com/users/nils-werner/orgs", "repos_url": "https://api.github.com/users/nils-werner/repos", "events_url": "https://api.github.com/users/nils-werner/events{/privacy}", "received_events_url": "https://api.github.com/users/nils-werner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 111955272, "node_id": "MDU6TGFiZWwxMTE5NTUyNzI=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-07-12T15:01:17Z", "updated_at": "2017-11-10T23:30:33Z", "closed_at": "2016-07-14T13:47:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "With 0.17.6 service names like\n\n```\n6d86f882b90facee9170ad3439d72a4d6ee9f511._zget._http._tcp.local\n```\n\nstopped working. I was under the impression that service names [had to be designed like this](https://tools.ietf.org/html/rfc6763#section-7.2). Is this assumption wrong or is your [service name validator](https://github.com/jstasiak/python-zeroconf/commit/88fa0595cd880b6d82ac8580512461e64eb32d6b) too strict?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/66", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/66/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/66/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/66", "id": 164621499, "node_id": "MDU6SXNzdWUxNjQ2MjE0OTk=", "number": 66, "title": "Implement Name Compression in DNSOutgoing()", "user": {"login": "stephenrauch", "id": 10407290, "node_id": "MDQ6VXNlcjEwNDA3Mjkw", "avatar_url": "https://avatars1.githubusercontent.com/u/10407290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephenrauch", "html_url": "https://github.com/stephenrauch", "followers_url": "https://api.github.com/users/stephenrauch/followers", "following_url": "https://api.github.com/users/stephenrauch/following{/other_user}", "gists_url": "https://api.github.com/users/stephenrauch/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephenrauch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephenrauch/subscriptions", "organizations_url": "https://api.github.com/users/stephenrauch/orgs", "repos_url": "https://api.github.com/users/stephenrauch/repos", "events_url": "https://api.github.com/users/stephenrauch/events{/privacy}", "received_events_url": "https://api.github.com/users/stephenrauch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 111955274, "node_id": "MDU6TGFiZWwxMTE5NTUyNzQ=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-08T21:38:44Z", "updated_at": "2016-07-10T03:18:45Z", "closed_at": "2016-07-10T03:18:45Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "To make packets smaller should implement name compression from [rfc6762](https://tools.ietf.org/html/rfc6762#page-50)\n\n**_18.14.  Name Compression**_\n\n_When generating Multicast DNS messages, implementations SHOULD use\nname compression wherever possible to compress the names of resource\nrecords, by replacing some or all of the resource record name with a\ncompact two-byte reference to an appearance of that data somewhere\nearlier in the message [RFC1035]._\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/65", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/65/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/65/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/65", "id": 164619096, "node_id": "MDU6SXNzdWUxNjQ2MTkwOTY=", "number": 65, "title": "unpack without bounds check stops ServiceBrowser", "user": {"login": "gbiddison", "id": 797192, "node_id": "MDQ6VXNlcjc5NzE5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/797192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbiddison", "html_url": "https://github.com/gbiddison", "followers_url": "https://api.github.com/users/gbiddison/followers", "following_url": "https://api.github.com/users/gbiddison/following{/other_user}", "gists_url": "https://api.github.com/users/gbiddison/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbiddison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbiddison/subscriptions", "organizations_url": "https://api.github.com/users/gbiddison/orgs", "repos_url": "https://api.github.com/users/gbiddison/repos", "events_url": "https://api.github.com/users/gbiddison/events{/privacy}", "received_events_url": "https://api.github.com/users/gbiddison/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 111955272, "node_id": "MDU6TGFiZWwxMTE5NTUyNzI=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "stephenrauch", "id": 10407290, "node_id": "MDQ6VXNlcjEwNDA3Mjkw", "avatar_url": "https://avatars1.githubusercontent.com/u/10407290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephenrauch", "html_url": "https://github.com/stephenrauch", "followers_url": "https://api.github.com/users/stephenrauch/followers", "following_url": "https://api.github.com/users/stephenrauch/following{/other_user}", "gists_url": "https://api.github.com/users/stephenrauch/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephenrauch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephenrauch/subscriptions", "organizations_url": "https://api.github.com/users/stephenrauch/orgs", "repos_url": "https://api.github.com/users/stephenrauch/repos", "events_url": "https://api.github.com/users/stephenrauch/events{/privacy}", "received_events_url": "https://api.github.com/users/stephenrauch/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "stephenrauch", "id": 10407290, "node_id": "MDQ6VXNlcjEwNDA3Mjkw", "avatar_url": "https://avatars1.githubusercontent.com/u/10407290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephenrauch", "html_url": "https://github.com/stephenrauch", "followers_url": "https://api.github.com/users/stephenrauch/followers", "following_url": "https://api.github.com/users/stephenrauch/following{/other_user}", "gists_url": "https://api.github.com/users/stephenrauch/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephenrauch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephenrauch/subscriptions", "organizations_url": "https://api.github.com/users/stephenrauch/orgs", "repos_url": "https://api.github.com/users/stephenrauch/repos", "events_url": "https://api.github.com/users/stephenrauch/events{/privacy}", "received_events_url": "https://api.github.com/users/stephenrauch/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-07-08T21:22:43Z", "updated_at": "2016-07-11T17:17:19Z", "closed_at": "2016-07-11T17:17:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "This exception is occuring at intervals since 0.17.6; stops the browser thread. Exception always occurs in a pair.\nMay be a bad packet, since the unpack looks to be unpacking based on packet information.\n\n``` python\nException in thread zeroconf-Engine:\nTraceback (most recent call last):\n  File \"//anaconda/envs/py34/lib/python3.4/threading.py\", line 911, in _bootstrap_inner\n    self.run()\n  File \"/Users/gbiddison/source/sygo/tools/BeagleDiff/zeroconf.py\", line 957, in run\n    reader.handle_read(socket_)\n  File \"/Users/gbiddison/source/sygo/tools/BeagleDiff/zeroconf.py\", line 994, in handle_read\n    msg = DNSIncoming(data)\n  File \"/Users/gbiddison/source/sygo/tools/BeagleDiff/zeroconf.py\", line 569, in __init__\n    self.read_others()\n  File \"/Users/gbiddison/source/sygo/tools/BeagleDiff/zeroconf.py\", line 618, in read_others\n    type_, class_, ttl, length = self.unpack(b'!HHiH')\n  File \"/Users/gbiddison/source/sygo/tools/BeagleDiff/zeroconf.py\", line 574, in unpack\n    format_, self.data[self.offset:self.offset + length])\nstruct.error: unpack requires a bytes object of length 10\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/64", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/64/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/64/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/64", "id": 164612019, "node_id": "MDU6SXNzdWUxNjQ2MTIwMTk=", "number": 64, "title": "9000 byte packet limit is not honored.", "user": {"login": "stephenrauch", "id": 10407290, "node_id": "MDQ6VXNlcjEwNDA3Mjkw", "avatar_url": "https://avatars1.githubusercontent.com/u/10407290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephenrauch", "html_url": "https://github.com/stephenrauch", "followers_url": "https://api.github.com/users/stephenrauch/followers", "following_url": "https://api.github.com/users/stephenrauch/following{/other_user}", "gists_url": "https://api.github.com/users/stephenrauch/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephenrauch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephenrauch/subscriptions", "organizations_url": "https://api.github.com/users/stephenrauch/orgs", "repos_url": "https://api.github.com/users/stephenrauch/repos", "events_url": "https://api.github.com/users/stephenrauch/events{/privacy}", "received_events_url": "https://api.github.com/users/stephenrauch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-08T20:39:39Z", "updated_at": "2016-07-10T03:26:12Z", "closed_at": "2016-07-10T03:26:12Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "[RFC6762](https://tools.ietf.org/html/rfc6762#page-47) says: 'a Multicast DNS packet, including IP and UDP headers, MUST NOT exceed 9000 bytes'.\n\nSee https://github.com/jstasiak/python-zeroconf/issues/62 for an example of this bad behavior in the wild.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/63", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/63/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/63/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/63", "id": 164607550, "node_id": "MDU6SXNzdWUxNjQ2MDc1NTA=", "number": 63, "title": "ServiceBrowser IndexError in read_name", "user": {"login": "gbiddison", "id": 797192, "node_id": "MDQ6VXNlcjc5NzE5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/797192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbiddison", "html_url": "https://github.com/gbiddison", "followers_url": "https://api.github.com/users/gbiddison/followers", "following_url": "https://api.github.com/users/gbiddison/following{/other_user}", "gists_url": "https://api.github.com/users/gbiddison/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbiddison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbiddison/subscriptions", "organizations_url": "https://api.github.com/users/gbiddison/orgs", "repos_url": "https://api.github.com/users/gbiddison/repos", "events_url": "https://api.github.com/users/gbiddison/events{/privacy}", "received_events_url": "https://api.github.com/users/gbiddison/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-08T20:13:25Z", "updated_at": "2016-07-11T17:17:31Z", "closed_at": "2016-07-11T17:17:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Exception while reading name from incoming packet.\nAppears to be failure to bounds-check.  \n\n``` python\nException in thread zeroconf-Engine:\nTraceback (most recent call last):\n  File \"//anaconda/envs/py34/lib/python3.4/threading.py\", line 911, in _bootstrap_inner\n    self.run()\n  File \"/Users/gbiddison/source/sygo/tools/BeagleDiff/zeroconf.py\", line 953, in run\n    reader.handle_read(socket_)\n  File \"/Users/gbiddison/source/sygo/tools/BeagleDiff/zeroconf.py\", line 990, in handle_read\n    msg = DNSIncoming(data)\n  File \"/Users/gbiddison/source/sygo/tools/BeagleDiff/zeroconf.py\", line 565, in __init__\n    self.read_others()\n  File \"/Users/gbiddison/source/sygo/tools/BeagleDiff/zeroconf.py\", line 622, in read_others\n    domain, type_, class_, ttl, self.read_name())\n  File \"/Users/gbiddison/source/sygo/tools/BeagleDiff/zeroconf.py\", line 667, in read_name\n    length = indexbytes(self.data, off)\nIndexError: index out of range\n```\n\nProposed patch:\n\n``` diff\ndiff --git a/zeroconf.py b/zeroconf.py\nindex 789fc2d..e86fbdb 100644\n--- a/zeroconf.py\n+++ b/zeroconf.py\n@@ -663,10 +663,10 @@ class DNSIncoming(object):\n         next_ = -1\n         first = off\n\n-        while True:\n+        while off < len(self.data):\n             length = indexbytes(self.data, off)\n             off += 1\n-            if length == 0:\n+            if length == 0 or off >= len(self.data):\n                 break\n             t = length & 0xC0\n             if t == 0x00:\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/62", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/62/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/62/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/62", "id": 164590095, "node_id": "MDU6SXNzdWUxNjQ1OTAwOTU=", "number": 62, "title": "ServiceBrowser Exception in OSX if browser generates long packets", "user": {"login": "gbiddison", "id": 797192, "node_id": "MDQ6VXNlcjc5NzE5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/797192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbiddison", "html_url": "https://github.com/gbiddison", "followers_url": "https://api.github.com/users/gbiddison/followers", "following_url": "https://api.github.com/users/gbiddison/following{/other_user}", "gists_url": "https://api.github.com/users/gbiddison/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbiddison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbiddison/subscriptions", "organizations_url": "https://api.github.com/users/gbiddison/orgs", "repos_url": "https://api.github.com/users/gbiddison/repos", "events_url": "https://api.github.com/users/gbiddison/events{/privacy}", "received_events_url": "https://api.github.com/users/gbiddison/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 111955272, "node_id": "MDU6TGFiZWwxMTE5NTUyNzI=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2016-07-08T18:34:07Z", "updated_at": "2016-07-12T17:01:32Z", "closed_at": "2016-07-12T17:01:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "My network has ~135 devices in the type category I am trying to browse.\n\nOn OSX 10.11 (El Capitan) hosts,  ServiceBrowser generates the following exception regularly because it appears to generate a very large (~11kb) single datagram by accumulating 'add_answer_at_time' responses and sending them all out as one event.  I don't have specialist knowledge of the OS to know if this is exceeding some UDP size limit.\n\nThis error does not occur on Ubuntu 14.04 hosts.\n\nI have another type category that contains ~75 devices and the exception never occurs while browsing that group (maximum packet length there is ~4305 bytes).\n\nNormal single response packets are ~75 bytes.\n\n``` Python\nTraceback (most recent call last):\n  File \"/Users/gbiddison/source/browser_test.py\", line 100, in run\n    super().run()\n  File \"//anaconda/envs/py34/lib/python3.4/site-packages/zeroconf.py\", line 1060, in run\n    self.zc.send(out)\n  File \"//anaconda/envs/py34/lib/python3.4/site-packages/zeroconf.py\", line 1670, in send\n    bytes_sent = s.sendto(packet, 0, (addr, port))\nOSError: [Errno 40] Message too long\n```\n\nThis prevents the browser from producing complete results .\n\nIn proof-of-concept code, I have eliminated this exception by grouping the responses by a threshold count value and will post the PR when I've cleaned it up.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/56", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/56/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/56/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/56", "id": 157477732, "node_id": "MDU6SXNzdWUxNTc0Nzc3MzI=", "number": 56, "title": "ServiceBrowser initialization will crash when an answer arrives too fast", "user": {"login": "herczy", "id": 603467, "node_id": "MDQ6VXNlcjYwMzQ2Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/603467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/herczy", "html_url": "https://github.com/herczy", "followers_url": "https://api.github.com/users/herczy/followers", "following_url": "https://api.github.com/users/herczy/following{/other_user}", "gists_url": "https://api.github.com/users/herczy/gists{/gist_id}", "starred_url": "https://api.github.com/users/herczy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/herczy/subscriptions", "organizations_url": "https://api.github.com/users/herczy/orgs", "repos_url": "https://api.github.com/users/herczy/repos", "events_url": "https://api.github.com/users/herczy/events{/privacy}", "received_events_url": "https://api.github.com/users/herczy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-30T10:41:45Z", "updated_at": "2016-06-26T23:14:06Z", "closed_at": "2016-06-26T23:14:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes after initializing a ServiceBrowser instance, we get the following exception:\n\n```\nException in thread Thread-3:\nTraceback (most recent call last):\n  File \"/usr/lib/python3.2/threading.py\", line 740, in _bootstrap_inner\n    self.run()\n  File \"/usr/lib/python3/dist-packages/zeroconf.py\", line 1063, in run\n    handler(self.zc)\n  File \"/usr/lib/python3/dist-packages/zeroconf.py\", line 1010, in <lambda>\n    lambda zeroconf: self._service_state_changed.fire(\nAttributeError: 'ServiceBrowser' object has no attribute '_service_state_changed'\n```\n\nThis is because the `ServiceBrowser._service_state_changed` signal gets initialized _after_ a listener gets added to the `Zeroconf` instance, which in turn can register a service change before the initialization.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/52", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/52/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/52/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/52", "id": 148221045, "node_id": "MDU6SXNzdWUxNDgyMjEwNDU=", "number": 52, "title": "Discover IPv6 services", "user": {"login": "jgoguen", "id": 189497, "node_id": "MDQ6VXNlcjE4OTQ5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/189497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgoguen", "html_url": "https://github.com/jgoguen", "followers_url": "https://api.github.com/users/jgoguen/followers", "following_url": "https://api.github.com/users/jgoguen/following{/other_user}", "gists_url": "https://api.github.com/users/jgoguen/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgoguen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgoguen/subscriptions", "organizations_url": "https://api.github.com/users/jgoguen/orgs", "repos_url": "https://api.github.com/users/jgoguen/repos", "events_url": "https://api.github.com/users/jgoguen/events{/privacy}", "received_events_url": "https://api.github.com/users/jgoguen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 398832373, "node_id": "MDU6TGFiZWwzOTg4MzIzNzM=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/IPV6", "name": "IPV6", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-04-14T00:57:01Z", "updated_at": "2019-10-17T18:45:50Z", "closed_at": "2019-10-17T18:45:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to discover IPv6-only and dual-stacked services and only the IPv4 address of the dual-stacked services are being discovered. Using avahi I can discover the IPv6 services and both addresses of dual-stacked services, and I can use those services on the IPv6 addresses. This happens with every service I've tried (_airplay._tcp, _ipp._tcp, _http._tcp, _ssh._tcp).\n\nIdeally, I would like to be able to specify how to handle IPv6 services:\n- Do not show IPv6, only IPv4\n- Prefer IPv4, search for both (default)\n- Prefer IPv6, search for both\n- Do not show IPv4, only IPv6\n\nWhen both exist, only one service should be returned according to the precedence desired.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/47", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/47/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/47/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/47", "id": 142126665, "node_id": "MDU6SXNzdWUxNDIxMjY2NjU=", "number": 47, "title": "call register_service twice, it will crash", "user": {"login": "sprhawk", "id": 465558, "node_id": "MDQ6VXNlcjQ2NTU1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/465558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprhawk", "html_url": "https://github.com/sprhawk", "followers_url": "https://api.github.com/users/sprhawk/followers", "following_url": "https://api.github.com/users/sprhawk/following{/other_user}", "gists_url": "https://api.github.com/users/sprhawk/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprhawk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprhawk/subscriptions", "organizations_url": "https://api.github.com/users/sprhawk/orgs", "repos_url": "https://api.github.com/users/sprhawk/repos", "events_url": "https://api.github.com/users/sprhawk/events{/privacy}", "received_events_url": "https://api.github.com/users/sprhawk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-20T04:03:35Z", "updated_at": "2016-06-26T23:12:42Z", "closed_at": "2016-06-26T23:12:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n\nTYPE = \"_motion._tcp.local.\"\nNAME = \"_yyyyXXXX.\" + TYPE\nPORT = 4321\n\nzeroconf = Zeroconf()\n\ndef reg_srv():\n    socket_addr = socket.gethostbyname(socket.gethostname())\n    info = ServiceInfo(TYPE,\n            NAME,\n            socket.inet_aton(socket_addr), PORT, 0, 0,\n            {\"desc\":\"HOME Bonjour test\"})\n\n\n    zeroconf.register_service(info)\n\n    print(\"broadcasting: \" + socket_addr + \" :\" + str(PORT))\n\ndef main():\n    reg_srv()\n    print(\"listening on 4321 ...\\n\")\n\n    reactor.listenTCP(4321, MotionServiceFactory())\n    reactor.run()\n    print(\"closing zeroconf\")\n    zeroconf.close()\n\n```\n\nwhen I called main() twice, it will crash:\n\n``` shell\nmotion_server.py in reg_srv()\n     25\n     26\n---> 27     zeroconf.register_service(info)\n     28\n     29     print(\"broadcasting: \" + socket_addr + \" :\" + str(PORT))\n\n/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/zeroconf-0.17.4-py3.4.egg/zeroconf.py in register_service(self, info, ttl)\n   1430         information for that service.  The name of the service may be\n   1431         changed if needed to make it unique on the network.\"\"\"\n-> 1432         self.check_service(info)\n   1433         self.services[info.name.lower()] = info\n   1434         if info.type in self.servicetypes:\n\n/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/zeroconf-0.17.4-py3.4.egg/zeroconf.py in check_service(self, info)\n   1546             out.add_authorative_answer(DNSPointer(info.type, _TYPE_PTR,\n   1547                                                   _CLASS_IN, _DNS_TTL, info.name))\n-> 1548             self.send(out)\n   1549             i += 1\n   1550             next_time += _CHECK_TIME\n\n/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/zeroconf-0.17.4-py3.4.egg/zeroconf.py in send(self, out, addr, port)\n   1666         log.debug('Sending %r as %r...', out, packet)\n   1667         for s in self._respond_sockets:\n-> 1668             bytes_sent = s.sendto(packet, 0, (addr, port))\n   1669             if bytes_sent != len(packet):\n   1670                 raise Error(\n\nOSError: [Errno 9] Bad file descriptor\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/43", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/43/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/43/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/43", "id": 140513688, "node_id": "MDU6SXNzdWUxNDA1MTM2ODg=", "number": 43, "title": "Discover arduino services", "user": {"login": "gepd", "id": 7091609, "node_id": "MDQ6VXNlcjcwOTE2MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7091609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gepd", "html_url": "https://github.com/gepd", "followers_url": "https://api.github.com/users/gepd/followers", "following_url": "https://api.github.com/users/gepd/following{/other_user}", "gists_url": "https://api.github.com/users/gepd/gists{/gist_id}", "starred_url": "https://api.github.com/users/gepd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gepd/subscriptions", "organizations_url": "https://api.github.com/users/gepd/orgs", "repos_url": "https://api.github.com/users/gepd/repos", "events_url": "https://api.github.com/users/gepd/events{/privacy}", "received_events_url": "https://api.github.com/users/gepd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-03-13T18:35:06Z", "updated_at": "2016-04-07T02:19:04Z", "closed_at": "2016-04-07T02:19:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm new with mDNS, I've found this library but I'm not sure how to do what I want to do.\n\nI need to list all the Arduino devices in my network, same as the official arduino IDE does. I've tried the examples, but none of them show me the arduino device, I know it's all fine with the device because when I open the IDE it shows me the device with it corresponding ip\n\nCan this library do this?\n\nAny help will be appreciated.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/42", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/42/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/42/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/42", "id": 140069906, "node_id": "MDU6SXNzdWUxNDAwNjk5MDY=", "number": 42, "title": "Services cannot be searched by bonjour", "user": {"login": "sprhawk", "id": 465558, "node_id": "MDQ6VXNlcjQ2NTU1OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/465558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprhawk", "html_url": "https://github.com/sprhawk", "followers_url": "https://api.github.com/users/sprhawk/followers", "following_url": "https://api.github.com/users/sprhawk/following{/other_user}", "gists_url": "https://api.github.com/users/sprhawk/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprhawk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprhawk/subscriptions", "organizations_url": "https://api.github.com/users/sprhawk/orgs", "repos_url": "https://api.github.com/users/sprhawk/repos", "events_url": "https://api.github.com/users/sprhawk/events{/privacy}", "received_events_url": "https://api.github.com/users/sprhawk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-11T02:44:16Z", "updated_at": "2016-03-11T04:13:19Z", "closed_at": "2016-03-11T04:13:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying zeroconf (repo version) with bonjour under macosx\n\nfor code:\n\n```\nTYPE = \"_http._tcp.local.\"\nNAME = \"XXXX_http._tcp.local.\"\nPORT = 4321\n\ndef reg_srv():\n    zeroconf = Zeroconf()\n\n    info = ServiceInfo(TYPE,\n            NAME,\n            socket.inet_aton(\"127.0.0.1\"), PORT, 0, 0,\n            {\"name\":\"HOME Bonjour test\"})\n\n\n    zeroconf.register_service(info)\n\n\ndef on_service_state_change(zeroconf, service_type, name, state_change):\n    print(\"Service %s of type %s state changed: %s\" % (name, service_type, state_change))\n\n    if state_change is ServiceStateChange.Added:\n        info = zeroconf.get_service_info(service_type, name)\n        print(info)\n        if info:\n            print(\"  Address: %s:%d\" % (socket.inet_ntoa(info.address), info.port))\n\ndef brs_srv():\n    from time import sleep\n\n    zeroconf = Zeroconf()\n    browser = ServiceBrowser(zeroconf, TYPE, handlers = [on_service_state_change])\n\n    try:\n        while True:\n            sleep(0.1)\n    except KeyboardInterrupt:\n        pass\n    finally:\n        zeroconf.close()\n```\n\nI can use brs_srv to discover advertised service, but bonjour (dns-sd) cannot.\n\nI used `$dns-sd -B _http._tcp local.` to set up browser under macosx 10.11\n\nI used `$dns-sd -R \"TTTT\" \"_http._tcp\" \"local\" 4321` to test browser if works or not, and it works.\n\nWhat I am missing ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/38", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/38/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/38/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/38", "id": 129812829, "node_id": "MDU6SXNzdWUxMjk4MTI4Mjk=", "number": 38, "title": "Reaper cache removal needs lock?", "user": {"login": "gbiddison", "id": 797192, "node_id": "MDQ6VXNlcjc5NzE5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/797192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbiddison", "html_url": "https://github.com/gbiddison", "followers_url": "https://api.github.com/users/gbiddison/followers", "following_url": "https://api.github.com/users/gbiddison/following{/other_user}", "gists_url": "https://api.github.com/users/gbiddison/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbiddison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbiddison/subscriptions", "organizations_url": "https://api.github.com/users/gbiddison/orgs", "repos_url": "https://api.github.com/users/gbiddison/repos", "events_url": "https://api.github.com/users/gbiddison/events{/privacy}", "received_events_url": "https://api.github.com/users/gbiddison/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-01-29T16:19:06Z", "updated_at": "2016-03-14T20:55:26Z", "closed_at": "2016-03-14T20:55:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nException in thread Thread-29:\nTraceback (most recent call last):\n  File \"/usr/lib/python3.4/threading.py\", line 920, in _bootstrap_inner\n    self.run()\n  File \"/usr/local/lib/python3.4/dist-packages/zeroconf.py\", line 919, in run\n    for record in self.zc.cache.entries():\n  File \"/usr/local/lib/python3.4/dist-packages/zeroconf.py\", line 793, in entries\n    return reduce(lambda a, b: a + b, self.cache.values())\nRuntimeError: dictionary changed size during iteration\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/37", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/37/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/37/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/37", "id": 128244794, "node_id": "MDU6SXNzdWUxMjgyNDQ3OTQ=", "number": 37, "title": "Resolving subtypes does not work", "user": {"login": "machinekoder", "id": 1467368, "node_id": "MDQ6VXNlcjE0NjczNjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1467368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/machinekoder", "html_url": "https://github.com/machinekoder", "followers_url": "https://api.github.com/users/machinekoder/followers", "following_url": "https://api.github.com/users/machinekoder/following{/other_user}", "gists_url": "https://api.github.com/users/machinekoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/machinekoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/machinekoder/subscriptions", "organizations_url": "https://api.github.com/users/machinekoder/orgs", "repos_url": "https://api.github.com/users/machinekoder/repos", "events_url": "https://api.github.com/users/machinekoder/events{/privacy}", "received_events_url": "https://api.github.com/users/machinekoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-22T21:01:40Z", "updated_at": "2016-06-26T23:15:37Z", "closed_at": "2016-06-26T23:15:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Resolving mdns subtypes does not work because of this check: https://github.com/jstasiak/python-zeroconf/blob/master/zeroconf.py#L1085\n\nE.g. `browser = ServiceBrowser(zeroconf, \"_config._sub._machinekit._tcp.local.\", listener)` returns following match: \n\n```\n$ avahi-browse _launcher._sub._machinekit._tcp\n+   eth0 IPv4 Machinekit Launcher on jessie-aroessler.local _machinekit._tcp     local\n```\n\nMeaning that if a subtype is used the type does not show up in the resulting response.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/34", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/34/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/34/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/34", "id": 120475831, "node_id": "MDU6SXNzdWUxMjA0NzU4MzE=", "number": 34, "title": "zeroconf.unregister_all_services() causes spurious registrations", "user": {"login": "gbiddison", "id": 797192, "node_id": "MDQ6VXNlcjc5NzE5Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/797192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbiddison", "html_url": "https://github.com/gbiddison", "followers_url": "https://api.github.com/users/gbiddison/followers", "following_url": "https://api.github.com/users/gbiddison/following{/other_user}", "gists_url": "https://api.github.com/users/gbiddison/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbiddison/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbiddison/subscriptions", "organizations_url": "https://api.github.com/users/gbiddison/orgs", "repos_url": "https://api.github.com/users/gbiddison/repos", "events_url": "https://api.github.com/users/gbiddison/events{/privacy}", "received_events_url": "https://api.github.com/users/gbiddison/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-04T20:03:11Z", "updated_at": "2016-01-14T22:37:36Z", "closed_at": "2016-01-14T22:37:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Calling unregister_all_services while using ServiceBrowser causing spurious add / remove events\nLooping over unregister_service does not have this problem.\n\nPR pending - I'm resolving this by looking at how unregister_service addresses the problem.\n\nTest code:\n\n``` python\nimport socket\nimport time\nfrom zeroconf import Zeroconf, ServiceInfo, ServiceStateChange, ServiceBrowser\n\nclass ServiceRegistry(object):\n    def __init__(self, zc):\n        self._zeroconf = zc\n\n    def register(self, name, port=8080, regtype='zeroconf._tcp.local.'):\n        host = socket.gethostname()\n        info = ServiceInfo(type=regtype,\n                           name=name + '.' + regtype,\n                           address=socket.inet_aton(socket.gethostbyname(host)),\n                           port=port,\n                           properties={},\n                           server=host)\n        self._zeroconf.register_service(info)\n        print(\"registration complete\")\n\n    def shutdown(self):\n        self._zeroconf.unregister_all_services()\n\nclass Browser(object):\n    def __init__(self, zc):\n        self._zeroconf\n\n    def browse(self, regtype='zeroconf._tcp.local.'):\n        self._browser = ServiceBrowser(self._zeroconf, regtype, self)\n\n    def shutdown(self):\n        self._browser.cancel()\n\n    def add_service(self, zeroconf, type, name):\n        print(\"service {} added\".format(name))\n\n    def remove_service(self, zeroconf, type, name):\n        print(\"Service {} removed\".format(name))\n\nif __name__ == '__main__':\n    try:\n        zc = Zeroconf()\n        registry = ServiceRegistry(zc)\n        registry.register('test-case-1')\n        registry.register('test-case-2')\n        registry.register('test-case-3')\n        registry.register('test-case-4')\n        registry.register('test-case-5')\n        browser = Browser(zc)\n        browser.browse()\n        print('Done - ^C to exit')\n        while True:\n            time.sleep(0.1)\n    except KeyboardInterrupt:\n        pass\n    finally:\n        registry.shutdown()\n        time.sleep(1)\n        browser.shutdown()\n        zc.close()\n```\n\nResults in this output\n\n```\n$ python unregister_test_case.py \nregistration complete\nregistration complete\nregistration complete\nregistration complete\nregistration complete\nDone - ^C to exit\nservice test-case-1.zeroconf._tcp.local. added\nservice test-case-2.zeroconf._tcp.local. added\nservice test-case-3.zeroconf._tcp.local. added\nservice test-case-4.zeroconf._tcp.local. added\nservice test-case-5.zeroconf._tcp.local. added\n^CService test-case-1.zeroconf._tcp.local. removed\nService test-case-5.zeroconf._tcp.local. removed\nService test-case-4.zeroconf._tcp.local. removed\nService test-case-3.zeroconf._tcp.local. removed\nService test-case-2.zeroconf._tcp.local. removed\nservice test-case-1.zeroconf._tcp.local. added\nservice test-case-5.zeroconf._tcp.local. added\nservice test-case-4.zeroconf._tcp.local. added\nservice test-case-3.zeroconf._tcp.local. added\nservice test-case-2.zeroconf._tcp.local. added\nService test-case-1.zeroconf._tcp.local. removed\nService test-case-5.zeroconf._tcp.local. removed\nService test-case-4.zeroconf._tcp.local. removed\nService test-case-3.zeroconf._tcp.local. removed\nService test-case-2.zeroconf._tcp.local. removed\nservice test-case-1.zeroconf._tcp.local. added\nservice test-case-5.zeroconf._tcp.local. added\nservice test-case-4.zeroconf._tcp.local. added\nservice test-case-3.zeroconf._tcp.local. added\nservice test-case-2.zeroconf._tcp.local. added\n```\n\nWhere expected output is this:\n\n```\n$ python unregister_test_case.py \nregistration complete\nregistration complete\nregistration complete\nregistration complete\nregistration complete\nDone - ^C to exit\nservice test-case-1.zeroconf._tcp.local. added\nservice test-case-2.zeroconf._tcp.local. added\nservice test-case-3.zeroconf._tcp.local. added\nservice test-case-4.zeroconf._tcp.local. added\nservice test-case-5.zeroconf._tcp.local. added\n^CService test-case-1.zeroconf._tcp.local. removed\nService test-case-5.zeroconf._tcp.local. removed\nService test-case-4.zeroconf._tcp.local. removed\nService test-case-3.zeroconf._tcp.local. removed\nService test-case-2.zeroconf._tcp.local. removed\n```\n\nedit: Zeroconf controls its threads with a global shutdown flag, so running two Zeroconf instances causes a shutdown race condition.  The edit changes the code to use one shared Zeroconf instance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/31", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/31/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/31/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/31", "id": 115407698, "node_id": "MDU6SXNzdWUxMTU0MDc2OTg=", "number": 31, "title": "Dependency netifaces installation error on Python3", "user": {"login": "SpotlightKid", "id": 5719151, "node_id": "MDQ6VXNlcjU3MTkxNTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5719151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SpotlightKid", "html_url": "https://github.com/SpotlightKid", "followers_url": "https://api.github.com/users/SpotlightKid/followers", "following_url": "https://api.github.com/users/SpotlightKid/following{/other_user}", "gists_url": "https://api.github.com/users/SpotlightKid/gists{/gist_id}", "starred_url": "https://api.github.com/users/SpotlightKid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SpotlightKid/subscriptions", "organizations_url": "https://api.github.com/users/SpotlightKid/orgs", "repos_url": "https://api.github.com/users/SpotlightKid/repos", "events_url": "https://api.github.com/users/SpotlightKid/events{/privacy}", "received_events_url": "https://api.github.com/users/SpotlightKid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-11-06T00:29:44Z", "updated_at": "2016-03-14T20:57:46Z", "closed_at": "2016-03-14T20:57:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "ATM, you can't install `zeroconf` from PyPI via pip on Python 3, because the `setup.py` of the package `netifaces`, which is a dependency of `zeroconf` i broken:\n\nhttps://bitbucket.org/al45tair/netifaces/issues/13/0104-install-is-broken-on-python-3x\n\nPlease consider switching the dependency to [gns3-netifaces](https://pypi.python.org/pypi/gns3-netifaces) and release a new version of `zeroconf` on PyPI, until `netifaces` is fixed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/29", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/29/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/29/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/29", "id": 108566672, "node_id": "MDU6SXNzdWUxMDg1NjY2NzI=", "number": 29, "title": "Implement automatic renaming of duplicate instance names", "user": {"login": "Feuermurmel", "id": 50332, "node_id": "MDQ6VXNlcjUwMzMy", "avatar_url": "https://avatars2.githubusercontent.com/u/50332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Feuermurmel", "html_url": "https://github.com/Feuermurmel", "followers_url": "https://api.github.com/users/Feuermurmel/followers", "following_url": "https://api.github.com/users/Feuermurmel/following{/other_user}", "gists_url": "https://api.github.com/users/Feuermurmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Feuermurmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Feuermurmel/subscriptions", "organizations_url": "https://api.github.com/users/Feuermurmel/orgs", "repos_url": "https://api.github.com/users/Feuermurmel/repos", "events_url": "https://api.github.com/users/Feuermurmel/events{/privacy}", "received_events_url": "https://api.github.com/users/Feuermurmel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 111955272, "node_id": "MDU6TGFiZWwxMTE5NTUyNzI=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-27T23:08:37Z", "updated_at": "2016-07-13T01:48:45Z", "closed_at": "2016-07-13T01:48:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Bonjour automatically renames DNS-SD instances with conflicting names. E.g if I use two instances of the `dns-sd` command line tool to register two instances with the same name, the first one will show this:\n\n```\nmichi ~$ dns-sd -R test _foo '' 10001\nRegistering Service test._foo._tcp port 10001\nDATE: ---Mon 28 Sep 2015---\n 1:06:49.909  ...STARTING...\n 1:06:50.827  Got a reply for service test._foo._tcp.local.: Name now registered and active\n```\n\nWhile The second one will show this:\n\n```\nmichi ~$ dns-sd -R test _foo '' 10002\nRegistering Service test._foo._tcp port 10002\nDATE: ---Mon 28 Sep 2015---\n 1:06:55.814  ...STARTING...\n 1:06:56.990  Got a reply for service test (2)._foo._tcp.local.: Name now registered and active\n```\n\nI.e. the instance has been renamed to \"test (2)\".\n\nI think it would be great if that feature was also added to this library.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/28", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/28/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/28/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/28", "id": 106724395, "node_id": "MDU6SXNzdWUxMDY3MjQzOTU=", "number": 28, "title": "[Errno 92] Protocol not available", "user": {"login": "luckydonald", "id": 2737108, "node_id": "MDQ6VXNlcjI3MzcxMDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2737108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luckydonald", "html_url": "https://github.com/luckydonald", "followers_url": "https://api.github.com/users/luckydonald/followers", "following_url": "https://api.github.com/users/luckydonald/following{/other_user}", "gists_url": "https://api.github.com/users/luckydonald/gists{/gist_id}", "starred_url": "https://api.github.com/users/luckydonald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luckydonald/subscriptions", "organizations_url": "https://api.github.com/users/luckydonald/orgs", "repos_url": "https://api.github.com/users/luckydonald/repos", "events_url": "https://api.github.com/users/luckydonald/events{/privacy}", "received_events_url": "https://api.github.com/users/luckydonald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-16T08:29:05Z", "updated_at": "2015-09-21T12:23:30Z", "closed_at": "2015-09-21T12:23:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nFile \"/home/luckydonald/tools/py2.7.venv/local/lib/python2.7/site-packages/zeroconf.py\", line 1339, in __init__\n    self._listen_socket = new_socket()\n  File \"/home/luckydonald/tools/py2.7.venv/local/lib/python2.7/site-packages/zeroconf.py\", line 1304, in new_socket\n    s.setsockopt(socket.SOL_SOCKET, reuseport, 1)\n  File \"/usr/lib/python2.7/socket.py\", line 224, in meth\n    return getattr(self._sock,name)(*args)\nsocket.error: [Errno 92] Protocol not available\n```\n\nI found pull request https://github.com/jstasiak/python-zeroconf/pull/26 related to that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/25", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/25/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/25/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/25", "id": 104338362, "node_id": "MDU6SXNzdWUxMDQzMzgzNjI=", "number": 25, "title": "OSError: [Errno 101] Network is unreachable when listening on *down* interfaces", "user": {"login": "michaelarnauts", "id": 1193779, "node_id": "MDQ6VXNlcjExOTM3Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1193779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelarnauts", "html_url": "https://github.com/michaelarnauts", "followers_url": "https://api.github.com/users/michaelarnauts/followers", "following_url": "https://api.github.com/users/michaelarnauts/following{/other_user}", "gists_url": "https://api.github.com/users/michaelarnauts/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelarnauts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelarnauts/subscriptions", "organizations_url": "https://api.github.com/users/michaelarnauts/orgs", "repos_url": "https://api.github.com/users/michaelarnauts/repos", "events_url": "https://api.github.com/users/michaelarnauts/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelarnauts/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 111955273, "node_id": "MDU6TGFiZWwxMTE5NTUyNzM=", "url": "https://api.github.com/repos/jstasiak/python-zeroconf/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-01T19:36:15Z", "updated_at": "2016-07-11T01:43:05Z", "closed_at": "2016-07-11T01:43:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have multiple network interfaces (a bridge, subinterfaces on eth0, an ipv6 tunnel and openvpn). I assume this causes the following issue:\n\n```\n$ python3 test.py\nPress enter to exit...\n\nException in thread Thread-3:\nTraceback (most recent call last):\n  File \"/usr/lib/python3.4/threading.py\", line 920, in _bootstrap_inner\n    self.run()\n  File \"/home/michael/.local/lib/python3.4/site-packages/zeroconf.py\", line 1057, in run\n    self.zc.send(out)\n  File \"/home/michael/.local/lib/python3.4/site-packages/zeroconf.py\", line 1657, in send\n    bytes_sent = s.sendto(packet, 0, (addr, port))\nOSError: [Errno 101] Network is unreachable\n```\n\nWhen I specify my main IP address in `ZeroConf([\"192.168.1.254\"])`, it works fine. \n\nI guess it should silently ignore interfaces that can't be used (because they have no IP maybe?) instead of stopping completly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/23", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/23/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/23/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/23", "id": 94929586, "node_id": "MDU6SXNzdWU5NDkyOTU4Ng==", "number": 23, "title": "Race condition in ServiceBrowser.__init__()", "user": {"login": "Feuermurmel", "id": 50332, "node_id": "MDQ6VXNlcjUwMzMy", "avatar_url": "https://avatars2.githubusercontent.com/u/50332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Feuermurmel", "html_url": "https://github.com/Feuermurmel", "followers_url": "https://api.github.com/users/Feuermurmel/followers", "following_url": "https://api.github.com/users/Feuermurmel/following{/other_user}", "gists_url": "https://api.github.com/users/Feuermurmel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Feuermurmel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Feuermurmel/subscriptions", "organizations_url": "https://api.github.com/users/Feuermurmel/orgs", "repos_url": "https://api.github.com/users/Feuermurmel/repos", "events_url": "https://api.github.com/users/Feuermurmel/events{/privacy}", "received_events_url": "https://api.github.com/users/Feuermurmel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-14T11:54:54Z", "updated_at": "2016-01-21T13:38:01Z", "closed_at": "2015-12-01T00:53:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that there's a race between the thread executing `ServiceBrowser.__init__()` and the new thread executing `ServiceBrowser.run()` I'm using this script:\n\n``` py\nimport zeroconf, socket, threading\n\n\ndef main():\n    print(zeroconf.__version__)\n\n    z = zeroconf.Zeroconf()\n\n    # Register some service.\n    z.register_service(\n        zeroconf.ServiceInfo(\n            '_test._tcp.local.',\n            'test._test._tcp.local.',\n            socket.inet_aton('127.0.0.1'),\n            80,\n            properties = { }))\n\n    class listener:\n        @staticmethod\n        def add_service(*args):\n            print('add_service():', args)\n\n        @staticmethod\n        def remove_service(*args):\n            print('remove_service():', args)\n\n    # Immediately browse for services of the same type.\n    z.add_service_listener('_test._tcp.local.', listener)\n\n    # Wait forever.\n    threading.Event().wait()\n\n\nif __name__ == '__main__':\n    main()\n```\n\nWhen running this, sometimes I get this output:\n\n```\n0.17.2\nException in thread Thread-3:\nTraceback (most recent call last):\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/threading.py\", line 920, in _bootstrap_inner\n    self.run()\n  File \"/Users/michi/Desktop/Abfahrtsanzeiger_Roeschtibach/doorswitch/venv3/lib/python3.4/site-packages/zeroconf.py\", line 1063, in run\n    handler(self.zc)\n  File \"/Users/michi/Desktop/Abfahrtsanzeiger_Roeschtibach/doorswitch/venv3/lib/python3.4/site-packages/zeroconf.py\", line 1010, in <lambda>\n    lambda zeroconf: self._service_state_changed.fire(\nAttributeError: 'ServiceBrowser' object has no attribute '_service_state_changed'\n```\n\nIt seems that the newly started thread tries to access `self._service_state_changed` before it has been initialized by `self.__init__()`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/21", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/21/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/21/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/21", "id": 71239450, "node_id": "MDU6SXNzdWU3MTIzOTQ1MA==", "number": 21, "title": "ImportError with zeroconf 0", "user": {"login": "nicolargo", "id": 776747, "node_id": "MDQ6VXNlcjc3Njc0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/776747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolargo", "html_url": "https://github.com/nicolargo", "followers_url": "https://api.github.com/users/nicolargo/followers", "following_url": "https://api.github.com/users/nicolargo/following{/other_user}", "gists_url": "https://api.github.com/users/nicolargo/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolargo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolargo/subscriptions", "organizations_url": "https://api.github.com/users/nicolargo/orgs", "repos_url": "https://api.github.com/users/nicolargo/repos", "events_url": "https://api.github.com/users/nicolargo/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolargo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-27T10:09:16Z", "updated_at": "2015-07-10T10:32:06Z", "closed_at": "2015-07-10T10:32:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "On my CentOS 7 configuration with Zeroconf 0.17.1 and Six 1.9.0:\n\n```\n\u00b1 ipython\nPython 2.7.5 (default, Jun 17 2014, 18:11:42) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 2.3.1 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nIn [1]: import zeroconf\n---------------------------------------------------------------------------\nImportError                               Traceback (most recent call last)\n<ipython-input-1-c556a850dc86> in <module>()\n----> 1 import zeroconf\n\n/usr/lib/python2.7/site-packages/zeroconf.py in <module>()\n     34 \n     35 import netifaces\n---> 36 from six import binary_type, indexbytes, int2byte, iteritems, text_type\n     37 from six.moves import xrange\n     38 \n\nImportError: cannot import name indexbytes\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/19", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/19/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/19/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/19", "id": 64653489, "node_id": "MDU6SXNzdWU2NDY1MzQ4OQ==", "number": 19, "title": "Exception in send causing thread to stop...", "user": {"login": "daid", "id": 964186, "node_id": "MDQ6VXNlcjk2NDE4Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/964186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daid", "html_url": "https://github.com/daid", "followers_url": "https://api.github.com/users/daid/followers", "following_url": "https://api.github.com/users/daid/following{/other_user}", "gists_url": "https://api.github.com/users/daid/gists{/gist_id}", "starred_url": "https://api.github.com/users/daid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daid/subscriptions", "organizations_url": "https://api.github.com/users/daid/orgs", "repos_url": "https://api.github.com/users/daid/repos", "events_url": "https://api.github.com/users/daid/events{/privacy}", "received_events_url": "https://api.github.com/users/daid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-03-26T23:08:52Z", "updated_at": "2016-07-11T01:42:49Z", "closed_at": "2016-07-11T01:42:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just quickly dumping these here while I have the backtrace.\n\nException in thread Thread-11:\nTraceback (most recent call last):\n  File \"C:\\Software\\Cura\\python\\lib\\threading.py\", line 552, in __bootstrap_inner\n    self.run()\n  File \"C:\\Software\\Cura_WiFi_Dev\\zeroconf\\zeroconf.py\", line 1061, in run\n    self.zc.send(out)\n  File \"C:\\Software\\Cura_WiFi_Dev\\zeroconf\\zeroconf.py\", line 1661, in send\n    bytes_sent = s.sendto(packet, 0, (addr, port))\nerror: [Errno 10065] Er is geprobeerd een socketbewerking uit te voeren op een onbereikbare host\n\nNot sure what the implications are. But I got this exception somewhere today while running the python-zeroconf. (On windows, on bad-wifi)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/17", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/17/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/17/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/17", "id": 57623762, "node_id": "MDU6SXNzdWU1NzYyMzc2Mg==", "number": 17, "title": "Handling of \"bad\" packets.", "user": {"login": "daid", "id": 964186, "node_id": "MDQ6VXNlcjk2NDE4Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/964186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daid", "html_url": "https://github.com/daid", "followers_url": "https://api.github.com/users/daid/followers", "following_url": "https://api.github.com/users/daid/following{/other_user}", "gists_url": "https://api.github.com/users/daid/gists{/gist_id}", "starred_url": "https://api.github.com/users/daid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daid/subscriptions", "organizations_url": "https://api.github.com/users/daid/orgs", "repos_url": "https://api.github.com/users/daid/repos", "events_url": "https://api.github.com/users/daid/events{/privacy}", "received_events_url": "https://api.github.com/users/daid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-13T16:55:27Z", "updated_at": "2016-07-10T22:23:47Z", "closed_at": "2016-07-10T22:23:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was testing some stuff with this zeroconf library on our local network at the office. And I noticed a lot of error messages like this:\n\n```\nERROR:zeroconf:Unknown error, possibly benign: IndexError('index out of range',)\nTraceback (most recent call last):\n  File \"/home/ultimaker/zeroconf.py\", line 832, in run\n    self.readers[socket_].handle_read(socket_)\n  File \"/home/ultimaker/zeroconf.py\", line 886, in handle_read\n    msg = DNSIncoming(data)\n  File \"/home/ultimaker/zeroconf.py\", line 464, in __init__\n    self.read_questions()\n  File \"/home/ultimaker/zeroconf.py\", line 481, in read_questions\n    name = self.read_name()\n  File \"/home/ultimaker/zeroconf.py\", line 560, in read_name\n    length = indexbytes(self.data, off)\nIndexError: index out of range\n```\n\nI quickly captured the data with wireshark, and noticed I was getting broadcast UDP packages on port 5353 with the contents:\n\n```\n{\"command\",\"broadcast\"}\n```\n\nYes, exactly that text contents. No binary MDNS encoding around it.\n\nThe packets seem to origin from an AppleTV device. No idea why they wouldn't be using normal MDNS packets. But it's common enough to say that the library needs some extra hardening on the parsing area.\n\nI can make a patch, but what would be the preferred way to handle this?\n(I also have a bugfix for windows, but I'll post that later when I'm 100% sure about the solution)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/15", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/15/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/15/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/15", "id": 52980838, "node_id": "MDU6SXNzdWU1Mjk4MDgzOA==", "number": 15, "title": "Logging broken/incomplete", "user": {"login": "jantman", "id": 273454, "node_id": "MDQ6VXNlcjI3MzQ1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/273454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jantman", "html_url": "https://github.com/jantman", "followers_url": "https://api.github.com/users/jantman/followers", "following_url": "https://api.github.com/users/jantman/following{/other_user}", "gists_url": "https://api.github.com/users/jantman/gists{/gist_id}", "starred_url": "https://api.github.com/users/jantman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jantman/subscriptions", "organizations_url": "https://api.github.com/users/jantman/orgs", "repos_url": "https://api.github.com/users/jantman/repos", "events_url": "https://api.github.com/users/jantman/events{/privacy}", "received_events_url": "https://api.github.com/users/jantman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-12-28T13:13:25Z", "updated_at": "2015-07-10T10:33:24Z", "closed_at": "2015-07-10T10:33:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed your recent commit that adds better logging using the python logging package.\n1. There only seem to be exception logs, there's no debug-level logging to tell what's happening internally.\n2. The way the log objects and handlers are setup (at the module-level), it's not possible to setup logging in the scripts that use zeroconf.\n\nI'm going to try to fix this in https://github.com/jantman/python-zeroconf/tree/more_logging and cut a PR once I have something working.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/12", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/12/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/12/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/12", "id": 50709796, "node_id": "MDU6SXNzdWU1MDcwOTc5Ng==", "number": 12, "title": "Examples don't seem to be working", "user": {"login": "esazhin", "id": 7494500, "node_id": "MDQ6VXNlcjc0OTQ1MDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7494500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/esazhin", "html_url": "https://github.com/esazhin", "followers_url": "https://api.github.com/users/esazhin/followers", "following_url": "https://api.github.com/users/esazhin/following{/other_user}", "gists_url": "https://api.github.com/users/esazhin/gists{/gist_id}", "starred_url": "https://api.github.com/users/esazhin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/esazhin/subscriptions", "organizations_url": "https://api.github.com/users/esazhin/orgs", "repos_url": "https://api.github.com/users/esazhin/repos", "events_url": "https://api.github.com/users/esazhin/events{/privacy}", "received_events_url": "https://api.github.com/users/esazhin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-12-02T19:56:56Z", "updated_at": "2016-03-14T21:00:45Z", "closed_at": "2016-03-14T21:00:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have copied the examples and using the released version 0.15.1, but the the browser methods add_service(), remove_service() neither their forms addService() removeService() are not working - there is no callback happening. Without those examples it is unclear what needs to be done to be able to use the library. \n\nI'm creating a virtual env and installing zeroconf wheel using pip. Python-3.4.1 Starting browser and \nI'm tried both ip as in examples for the registration and also actual IP socket.inet_aton(socket.gethostbyname(socket.gethostname())) on port 5555\n\nPlease advise!\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/11", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/11/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/11/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/11", "id": 50553776, "node_id": "MDU6SXNzdWU1MDU1Mzc3Ng==", "number": 11, "title": "request to increment version to indicate changes", "user": {"login": "GaryHendrick", "id": 252046, "node_id": "MDQ6VXNlcjI1MjA0Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/252046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GaryHendrick", "html_url": "https://github.com/GaryHendrick", "followers_url": "https://api.github.com/users/GaryHendrick/followers", "following_url": "https://api.github.com/users/GaryHendrick/following{/other_user}", "gists_url": "https://api.github.com/users/GaryHendrick/gists{/gist_id}", "starred_url": "https://api.github.com/users/GaryHendrick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GaryHendrick/subscriptions", "organizations_url": "https://api.github.com/users/GaryHendrick/orgs", "repos_url": "https://api.github.com/users/GaryHendrick/repos", "events_url": "https://api.github.com/users/GaryHendrick/events{/privacy}", "received_events_url": "https://api.github.com/users/GaryHendrick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-01T17:55:41Z", "updated_at": "2014-12-02T23:57:54Z", "closed_at": "2014-12-02T23:57:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\nit appears that version 0.15.1 has been used since before the snake_case migration took place. There are still libs out there with the camelCase api. It would simplify things if I could test zeroconf.**version** to determine if I need to wrap the handler methods to accomodate older libs.\nBest Regards, and great work on this lib\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/7", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/7/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/7/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/7", "id": 38369055, "node_id": "MDU6SXNzdWUzODM2OTA1NQ==", "number": 7, "title": "tb from browser example", "user": {"login": "pjz", "id": 11100, "node_id": "MDQ6VXNlcjExMTAw", "avatar_url": "https://avatars3.githubusercontent.com/u/11100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjz", "html_url": "https://github.com/pjz", "followers_url": "https://api.github.com/users/pjz/followers", "following_url": "https://api.github.com/users/pjz/following{/other_user}", "gists_url": "https://api.github.com/users/pjz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjz/subscriptions", "organizations_url": "https://api.github.com/users/pjz/orgs", "repos_url": "https://api.github.com/users/pjz/repos", "events_url": "https://api.github.com/users/pjz/events{/privacy}", "received_events_url": "https://api.github.com/users/pjz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-07-22T04:55:37Z", "updated_at": "2016-07-10T22:24:17Z", "closed_at": "2016-07-10T22:24:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I sucked down a copy of examples/browser.py and did a pi\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/zeroconf.py\", line 833, in run\n    self.readers[socket_].handle_read()\n  File \"/usr/local/lib/python2.7/dist-packages/zeroconf.py\", line 889, in handle_read\n    msg = DNSIncoming(data)\n  File \"/usr/local/lib/python2.7/dist-packages/zeroconf.py\", line 458, in __init__\n    self.readOthers()\n  File \"/usr/local/lib/python2.7/dist-packages/zeroconf.py\", line 505, in readOthers\n    domain = self.readName()\n  File \"/usr/local/lib/python2.7/dist-packages/zeroconf.py\", line 554, in readName\n    length = byte_ord(self.data[off])\nIndexError: string index out of range\n```\n\nI can't figure out how to get pdb to attach to it since it happens in an Engine thread, so I'll leave it to you to suggest a fix.  Or more debugging steps - I'm good with whichever.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/6", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/6/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/6/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/6", "id": 37610995, "node_id": "MDU6SXNzdWUzNzYxMDk5NQ==", "number": 6, "title": "Add PyQt/PySide service browser example", "user": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2014-07-10T22:22:08Z", "updated_at": "2015-12-01T00:44:18Z", "closed_at": "2015-12-01T00:44:18Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/5", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/5/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/5/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/5", "id": 37610954, "node_id": "MDU6SXNzdWUzNzYxMDk1NA==", "number": 5, "title": "Add some form of documentation", "user": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-07-10T22:21:37Z", "updated_at": "2015-02-15T15:09:13Z", "closed_at": "2015-02-15T15:09:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/4", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/4/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/4/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/4", "id": 37441479, "node_id": "MDU6SXNzdWUzNzQ0MTQ3OQ==", "number": 4, "title": "Fix Python 3 compatibility", "user": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2014-07-09T07:55:03Z", "updated_at": "2014-07-10T00:11:29Z", "closed_at": "2014-07-10T00:11:29Z", "author_association": "OWNER", "active_lock_reason": null, "body": "``` python\nTraceback (most recent call last):\n  File \"/home/travis/build/jstasiak/python-zeroconf/zeroconf.py\", line 878, in handle_read\n    data, (addr, port) = self.zc.socket.recvfrom(_MAX_MSG_ABSOLUTE)\nOSError: [Errno 9] Bad file descriptor\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/travis/build/jstasiak/python-zeroconf/zeroconf.py\", line 832, in run\n    self.readers[socket_].handle_read()\n  File \"/home/travis/build/jstasiak/python-zeroconf/zeroconf.py\", line 883, in handle_read\n    if e[0] == socket.EBADF:\nTypeError: 'OSError' object is not subscriptable\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/3", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/3/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/3/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/3", "id": 37422936, "node_id": "MDU6SXNzdWUzNzQyMjkzNg==", "number": 3, "title": "Redesign listener system", "user": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2014-07-08T23:56:37Z", "updated_at": "2015-12-01T00:44:29Z", "closed_at": "2015-12-01T00:44:29Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/2", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/2/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/2/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/2", "id": 37422883, "node_id": "MDU6SXNzdWUzNzQyMjg4Mw==", "number": 2, "title": "Create API with underscores instead of camel case, deprecate camel case API", "user": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-07-08T23:55:40Z", "updated_at": "2015-02-18T14:52:01Z", "closed_at": "2014-11-02T20:48:14Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/1", "repository_url": "https://api.github.com/repos/jstasiak/python-zeroconf", "labels_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/1/comments", "events_url": "https://api.github.com/repos/jstasiak/python-zeroconf/issues/1/events", "html_url": "https://github.com/jstasiak/python-zeroconf/issues/1", "id": 37422732, "node_id": "MDU6SXNzdWUzNzQyMjczMg==", "number": 1, "title": "Fix ServiceInfo __repr__", "user": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jstasiak", "id": 36209, "node_id": "MDQ6VXNlcjM2MjA5", "avatar_url": "https://avatars0.githubusercontent.com/u/36209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstasiak", "html_url": "https://github.com/jstasiak", "followers_url": "https://api.github.com/users/jstasiak/followers", "following_url": "https://api.github.com/users/jstasiak/following{/other_user}", "gists_url": "https://api.github.com/users/jstasiak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstasiak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstasiak/subscriptions", "organizations_url": "https://api.github.com/users/jstasiak/orgs", "repos_url": "https://api.github.com/users/jstasiak/repos", "events_url": "https://api.github.com/users/jstasiak/events{/privacy}", "received_events_url": "https://api.github.com/users/jstasiak/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2014-07-08T23:52:36Z", "updated_at": "2014-12-12T15:29:17Z", "closed_at": "2014-12-12T15:29:17Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}]}