{"total_count": 13, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/20", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/20/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/20/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/20", "id": 509630106, "node_id": "MDU6SXNzdWU1MDk2MzAxMDY=", "number": 20, "title": "Open thread: What would you case-conversion to be like?", "user": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-20T18:08:53Z", "updated_at": "2020-02-20T18:05:25Z", "closed_at": "2020-02-20T18:05:25Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This is issue is to collect ideas, wishes, and complaints about `case-conversion`? We would really like to make `case-conversion` the foremost python package for anything case conversion-related.\r\nIn order to do so, we would like to have some input from users in order to gain some better ideas on what to improve\r\n\r\n### Some guiding question:\r\n- How do you use it?\r\n- What feature would you like to see?\r\n- What s*cks?\r\n- Anything else you want to see?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/18", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/18/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/18/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/18", "id": 490773627, "node_id": "MDU6SXNzdWU0OTA3NzM2Mjc=", "number": 18, "title": "regex dependency prevents vendorizing", "user": {"login": "olsonpm", "id": 5957709, "node_id": "MDQ6VXNlcjU5NTc3MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5957709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonpm", "html_url": "https://github.com/olsonpm", "followers_url": "https://api.github.com/users/olsonpm/followers", "following_url": "https://api.github.com/users/olsonpm/following{/other_user}", "gists_url": "https://api.github.com/users/olsonpm/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonpm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonpm/subscriptions", "organizations_url": "https://api.github.com/users/olsonpm/orgs", "repos_url": "https://api.github.com/users/olsonpm/repos", "events_url": "https://api.github.com/users/olsonpm/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonpm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-09-08T16:23:09Z", "updated_at": "2020-02-23T17:44:23Z", "closed_at": "2020-02-23T17:44:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just wanted to let you know that the regex dependency prevented me from vendorizing case-conversion (it's not purely python).  This isn't a big deal because I can fork and be on my way, but an alternative is to use python's `unicodedata`.  I replaced your regexes with the following functions and all your tests passed.  Granted, locally I cheated a little by replacing `regex.compile` with `re.compile` when searching for acronyms, but a function could wrap that logic as well.\r\n\r\n** *I did not test for performance differences and I also understand you may prioritize having regex over case-conversion being vendorize'able*\r\n\r\n<details>\r\n<summary>\r\nClick to reveal code\r\n</summary>\r\n\r\n```py\r\ndef _charIsSep(aChar):\r\n    return (\r\n        not _charIsUpper(aChar)\r\n        and not _charIsLower(aChar)\r\n        and not _charIsNumberDecimalDigit(aChar)\r\n    )\r\n\r\n# _isSep vs '^[^\\p{Ll}\\p{Lu}\\p{Nd}]$'\r\ndef _isSep(aString):\r\n    return len(aString) == 1 and _charIsSep(unicode(aString))\r\n\r\n\r\ndef _charIsNumberDecimalDigit(aChar):\r\n    return unicodedata.category(aChar) == \"Nd\"\r\n\r\n\r\ndef _charIsLower(aChar):\r\n    return unicodedata.category(aChar) == \"Ll\"\r\n\r\n\r\ndef _charIsUpper(aChar):\r\n    return unicodedata.category(aChar) == \"Lu\"\r\n\r\n# _isUpper vs '^[\\p{Lu}]$'\r\ndef _isUpper(aString):\r\n    return len(aString) == 1 and _charIsUpper(unicode(aString))\r\n\r\n# _isValidAcronym vs '^[\\p{Ll}\\p{Lu}\\p{Nd}]+$'\r\ndef _isValidAcronym(aString):\r\n    if len(aString) == 0:\r\n        return False\r\n\r\n    for aChar in aString:\r\n        if _charIsSep(unicode(aChar)):\r\n            return False\r\n\r\n    return True\r\n```\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/17", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/17/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/17/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/17", "id": 484865177, "node_id": "MDU6SXNzdWU0ODQ4NjUxNzc=", "number": 17, "title": "Consider: Adding CI tests", "user": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-24T21:43:18Z", "updated_at": "2020-02-23T17:55:25Z", "closed_at": "2020-02-23T17:55:25Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I believe adding Travis CI or Circle CI would improve quality gating.\r\nThis would also make good use of the extensive test coverage that is already provided.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/16", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/16/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/16/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/16", "id": 484863842, "node_id": "MDU6SXNzdWU0ODQ4NjM4NDI=", "number": 16, "title": "Consider: Removing regex dependency", "user": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-24T21:25:34Z", "updated_at": "2020-02-23T17:44:23Z", "closed_at": "2020-02-23T17:44:23Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Investigate: Can we drop the sole dependency consisting of the alternative `regex` implementation?\r\n\r\nIMHO `case-conversion` represents a small and defined functionality. Hence I believe it should be possible to make it dependency-free.\r\n\r\n**UPDATE:**\r\nI understand that `regex` was introduced for handling unicode regexes. I am not suggesting we should sacrifice that unicode support but maybe it is worth striving for a dependency-free solution.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/15", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/15/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/15/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/15", "id": 484863433, "node_id": "MDU6SXNzdWU0ODQ4NjM0MzM=", "number": 15, "title": "Consider: Dropping python 2.7 support", "user": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-24T21:20:50Z", "updated_at": "2020-02-23T17:54:08Z", "closed_at": "2020-02-23T17:54:08Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@AlejandroFrias \r\nI would really like to drop support for Python 2.\r\nConsidering that Python 2 is going EOL 1st of Jan 2020 anyway it is not worth the pain maintaining both legacy and modern python.\r\n\r\nIf you agree I am going to develop against Python 3.5+ only.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/14", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/14/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/14/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/14", "id": 483827617, "node_id": "MDU6SXNzdWU0ODM4Mjc2MTc=", "number": 14, "title": "Consider: Type annotations", "user": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-22T07:50:56Z", "updated_at": "2020-02-23T19:26:07Z", "closed_at": "2020-02-23T19:26:07Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@AlejandroFrias \r\nShould we harden the code base via type annotations?\r\nI feel it adds reliability and robustness to a code base.\r\nFor example in case of heavy refactoring this can be hugely beneficial.\r\n\r\nIn general as it is being said the type annotations make sense whenever tests do.\r\n`case-conversion` come with extensive test coverage thanks to your efforts, hence type checking would add upon that.\r\n\r\nRelated: #15 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/13", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/13/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/13/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/13", "id": 453814815, "node_id": "MDU6SXNzdWU0NTM4MTQ4MTU=", "number": 13, "title": "Consider: Pytest", "user": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-08T17:08:29Z", "updated_at": "2020-02-23T17:55:33Z", "closed_at": "2020-02-23T17:55:33Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I do not have strong preferences for one test suite over another.. However I happen to use `pytest` for all my tests. Is there any reason (besides the additional dev dependency maybe) we shouldn't use pytest?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/12", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/12/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/12/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/12", "id": 453814595, "node_id": "MDU6SXNzdWU0NTM4MTQ1OTU=", "number": 12, "title": "Consider: Pipenv or poetry", "user": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-08T17:06:15Z", "updated_at": "2020-02-23T17:56:02Z", "closed_at": "2020-02-23T17:56:01Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@AlejandroFrias \r\n\r\nSorry, for my long absence. I got washed away with a mega project at work eating up all my free time. I have been wanting to overhaul this package as we initially discussed ever since. However, I am here now and want to invest my time to bring the python ecosystem finally a good string conversion library.\r\n\r\nIn this wake I thought we should consider switching to a modern package format like\r\n`Pipfile` (pipenv) or `pyproject.toml` (poetry). What do you think about it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/7", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/7/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/7/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/7", "id": 302092195, "node_id": "MDU6SXNzdWUzMDIwOTIxOTU=", "number": 7, "title": "Improve API", "user": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334543425, "node_id": "MDU6TGFiZWwzMzQ1NDM0MjU=", "url": "https://api.github.com/repos/AlejandroFrias/case-conversion/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-03-04T14:58:10Z", "updated_at": "2019-08-24T22:00:34Z", "closed_at": "2019-08-24T22:00:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Consider an API like [CommonRegex](https://github.com/madisonmay/CommonRegex)\r\n\r\n### Usage\r\n------\r\n\r\n```python    \r\n>>> from case_conversion import CaseConverter\r\n>>> parsed_text = CaseConverter(\"testString\")\r\n\r\n>>> parsed_text.snake\r\ntest_string\r\n>>> parsed_text.pascal\r\nTestString\r\n>>> parsed_text.dot\r\ntest.string\r\n>>> parsed_text.const\r\nTEST_STRING\r\n...\r\n```\r\n    \r\nAlternatively, you can generate a single CommonRegex instance and use it to parse multiple segments of text.\r\n\r\n```python\r\n>>> converter = CaseConverter()\r\n>>> converter.snake(\"testString\")\r\ntest_string\r\n```\r\n\r\n#### Method aliasing\r\nAdditionally such class based code structure would also allow for aliasing method names via decorators, which is much cleaner than the current implementation.\r\nExample:\r\n```py\r\n@alias('kebabcase', 'spinalcase')\r\ndef dashcase(text, acronyms=None):\r\n    ...\r\n```\r\n\r\nSee:\r\n- https://gist.github.com/joyrexus/5426808\r\n- https://gist.github.com/dhollman/2891610", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/6", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/6/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/6/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/6", "id": 302086820, "node_id": "MDU6SXNzdWUzMDIwODY4MjA=", "number": 6, "title": "Add more case conversions", "user": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 334543425, "node_id": "MDU6TGFiZWwzMzQ1NDM0MjU=", "url": "https://api.github.com/repos/AlejandroFrias/case-conversion/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-03-04T13:43:24Z", "updated_at": "2019-08-24T22:00:34Z", "closed_at": "2019-08-24T22:00:34Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I believe this package fills a void in the current python eco system. There are no other packages which offer conversion to many cases and also incoorporate acronym detection. I believe  we could make this package even more useful by adding more case conversions. \r\n\r\nThe current code allows for easy extension with new case conversions:\r\nMaybe we could collect ideas for new case types in this issue before extending.\r\n\r\nCurrently supported:\r\n- camelCase\r\n- PascalCase\r\n- snake_case\r\n- dash-case\r\n- CONST_CASE\r\n- dot.case\r\n- separate words\r\n- slash/case\r\n- backslash\\case\r\n\r\nNew case types:\r\n- Ada_Case (https://github.com/jdc0589/CaseConversion/issues/41)\r\n- Title_case\r\n- Capitalcase**\r\n- lowercase**\r\n- UPPERCASE**\r\n\r\n\r\n** provided by standard lib, but it would be logical if we incoorporated them into the interface", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/5", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/5/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/5/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/5", "id": 302086241, "node_id": "MDU6SXNzdWUzMDIwODYyNDE=", "number": 5, "title": "Consider publishing on package control", "user": {"login": "pykong", "id": 20211140, "node_id": "MDQ6VXNlcjIwMjExMTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/20211140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pykong", "html_url": "https://github.com/pykong", "followers_url": "https://api.github.com/users/pykong/followers", "following_url": "https://api.github.com/users/pykong/following{/other_user}", "gists_url": "https://api.github.com/users/pykong/gists{/gist_id}", "starred_url": "https://api.github.com/users/pykong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pykong/subscriptions", "organizations_url": "https://api.github.com/users/pykong/orgs", "repos_url": "https://api.github.com/users/pykong/repos", "events_url": "https://api.github.com/users/pykong/events{/privacy}", "received_events_url": "https://api.github.com/users/pykong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-04T13:35:27Z", "updated_at": "2020-02-23T17:57:10Z", "closed_at": "2020-02-23T17:57:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "@AlejandroFrias \r\nIt would be great to have this package available as a dependency for Sublime Text plugins.\r\nIn case you are an user of Sublime Text yourself, you may want to consider to publish this package on \r\npackagecontrol.io, hence plugins could use the advanced string case conversion capabilities.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/3", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/3/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/3/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/3", "id": 301063168, "node_id": "MDU6SXNzdWUzMDEwNjMxNjg=", "number": 3, "title": "Auto-detect acronyms", "user": {"login": "erikhuizinga", "id": 19374736, "node_id": "MDQ6VXNlcjE5Mzc0NzM2", "avatar_url": "https://avatars2.githubusercontent.com/u/19374736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikhuizinga", "html_url": "https://github.com/erikhuizinga", "followers_url": "https://api.github.com/users/erikhuizinga/followers", "following_url": "https://api.github.com/users/erikhuizinga/following{/other_user}", "gists_url": "https://api.github.com/users/erikhuizinga/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikhuizinga/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikhuizinga/subscriptions", "organizations_url": "https://api.github.com/users/erikhuizinga/orgs", "repos_url": "https://api.github.com/users/erikhuizinga/repos", "events_url": "https://api.github.com/users/erikhuizinga/events{/privacy}", "received_events_url": "https://api.github.com/users/erikhuizinga/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-02-28T15:17:09Z", "updated_at": "2018-03-07T19:38:39Z", "closed_at": "2018-03-07T19:38:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be an idea to automatically set `detect_acronyms` to `True` if any non-empty list of acronyms is passed? Now, a user must always specify both the acronyms and the boolean, while this is unnecessary. It would only be required to pass both arguments if a user passes a non-empty list of acronyms, but does not want to use them, so: if `detect_acronyms=False` is passed explicitly, only then any acronyms are ignored; otherwise, any acronyms are detected automatically (none by default).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/1", "repository_url": "https://api.github.com/repos/AlejandroFrias/case-conversion", "labels_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/1/comments", "events_url": "https://api.github.com/repos/AlejandroFrias/case-conversion/issues/1/events", "html_url": "https://github.com/AlejandroFrias/case-conversion/issues/1", "id": 195215653, "node_id": "MDU6SXNzdWUxOTUyMTU2NTM=", "number": 1, "title": "Import Error", "user": {"login": "brunsgaard", "id": 815816, "node_id": "MDQ6VXNlcjgxNTgxNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/815816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunsgaard", "html_url": "https://github.com/brunsgaard", "followers_url": "https://api.github.com/users/brunsgaard/followers", "following_url": "https://api.github.com/users/brunsgaard/following{/other_user}", "gists_url": "https://api.github.com/users/brunsgaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunsgaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunsgaard/subscriptions", "organizations_url": "https://api.github.com/users/brunsgaard/orgs", "repos_url": "https://api.github.com/users/brunsgaard/repos", "events_url": "https://api.github.com/users/brunsgaard/events{/privacy}", "received_events_url": "https://api.github.com/users/brunsgaard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-13T10:30:52Z", "updated_at": "2017-01-13T00:25:57Z", "closed_at": "2017-01-09T10:46:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see this when importing case-conversion, python 3.5.2.\r\n\r\n```\r\n(asgt) \u22ca> ~/e/vml-model-econbankrec on master \u2a2f pip install -U case-conversion \r\nRequirement already up-to-date: case-conversion\r\nRequirement already up-to-date: regex>=2016.2.25\r\n\r\n(asgt) \u22ca> ~/e/vml-model-econbankrec on master \u2a2f python -c 'import case_conversion'  \r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/Users/brunsgaard/.virtualenvs/asgt/lib/python3.5/site-packages/case_conversion/__init__.py\", line 1, in <module>\r\n    from case_conversion import (\r\nImportError: cannot import name 'camelcase'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}]}