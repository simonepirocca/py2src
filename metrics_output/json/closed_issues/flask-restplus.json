{"total_count": 246, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/800", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/800/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/800/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/800/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/800", "id": 665831609, "node_id": "MDU6SXNzdWU2NjU4MzE2MDk=", "number": 800, "title": "Issue related to api summary", "user": {"login": "dipeshadekar", "id": 42771806, "node_id": "MDQ6VXNlcjQyNzcxODA2", "avatar_url": "https://avatars3.githubusercontent.com/u/42771806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dipeshadekar", "html_url": "https://github.com/dipeshadekar", "followers_url": "https://api.github.com/users/dipeshadekar/followers", "following_url": "https://api.github.com/users/dipeshadekar/following{/other_user}", "gists_url": "https://api.github.com/users/dipeshadekar/gists{/gist_id}", "starred_url": "https://api.github.com/users/dipeshadekar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dipeshadekar/subscriptions", "organizations_url": "https://api.github.com/users/dipeshadekar/orgs", "repos_url": "https://api.github.com/users/dipeshadekar/repos", "events_url": "https://api.github.com/users/dipeshadekar/events{/privacy}", "received_events_url": "https://api.github.com/users/dipeshadekar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860075, "node_id": "MDU6TGFiZWwxMjE4NjAwNzU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-26T18:05:36Z", "updated_at": "2020-07-27T05:21:40Z", "closed_at": "2020-07-27T05:19:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIm trying to document my logout api where im passing the jwt token inside the header and decoding it using python wrapper function which authenticated the user and the allow him to logout from the system.  \r\n\r\n### \r\n\r\n```python\r\ndef token_required(func):\r\n    @wraps(func)\r\n    def decorator(*args, **kwargs):\r\n        try:\r\n            token = None \r\n            if 'X-access-token' in request.headers:\r\n                token = request.headers['X-access-token']\r\n            if not token:\r\n                return \"Token is missing\", 400\r\n            data = jwt.decode(token, key= \"abc123\", algorithms='HS256')\r\n            try:\r\n                SuperAdmin.objects.get(Super_admin_id=data[\"sub\"])\r\n                return func(user=data['sub'], *args, **kwargs)\r\n            except:\r\n                return \"Unauthorized\", 401\r\n        except jwt.exceptions.ExpiredSignatureError as e:\r\n            return \"Token Expired\", 401\r\n        return decorator\r\n```\r\nThis is the function that im using to decode the jwt token. Below is the snippet of the code which is using above wrapper for decoding webtokens.\r\n\r\n###\r\n```python\r\nclass Logout(Resource):\r\n    @token_required\r\n    def get(self, user=\"\"):\r\n        \"\"\"\r\n        Logs out the sAdmin.\r\n        \"\"\"\r\n        try:\r\n            # fetch the data from the headers\r\n            refresh_token = request.headers['X-access-refresh']\r\n```\r\nWhenever i add wrapper function call at top of the GET function definition, swagger documentation does not show summary\r\n\r\n![after](https://user-images.githubusercontent.com/42771806/88485960-e360ba80-cf97-11ea-97fb-71ee98268e38.png)\r\n\r\n and i remove the wrapper function call, it shows summary in documentation.\r\n\r\n![before](https://user-images.githubusercontent.com/42771806/88485932-c7f5af80-cf97-11ea-9a9e-bdbfa3773c42.png)\r\n\r\nWhat changes do i have to make inside the code so that summary will be visible in swagger documentation?\r\n\r\n### **Environment**\r\n- Python version: 3.6.8\r\n- Flask version: 1.1.2\r\n- Flask-RESTPlus version: 0.13.0\r\n- PyJWT version: 1.7.1\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/799", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/799/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/799/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/799/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/799", "id": 661778232, "node_id": "MDU6SXNzdWU2NjE3NzgyMzI=", "number": 799, "title": "flask_restx is not compatible with gunicorn", "user": {"login": "Serena-Xu", "id": 38081399, "node_id": "MDQ6VXNlcjM4MDgxMzk5", "avatar_url": "https://avatars3.githubusercontent.com/u/38081399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serena-Xu", "html_url": "https://github.com/Serena-Xu", "followers_url": "https://api.github.com/users/Serena-Xu/followers", "following_url": "https://api.github.com/users/Serena-Xu/following{/other_user}", "gists_url": "https://api.github.com/users/Serena-Xu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serena-Xu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serena-Xu/subscriptions", "organizations_url": "https://api.github.com/users/Serena-Xu/orgs", "repos_url": "https://api.github.com/users/Serena-Xu/repos", "events_url": "https://api.github.com/users/Serena-Xu/events{/privacy}", "received_events_url": "https://api.github.com/users/Serena-Xu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860075, "node_id": "MDU6TGFiZWwxMjE4NjAwNzU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T12:43:03Z", "updated_at": "2020-08-04T15:17:50Z", "closed_at": "2020-08-04T15:17:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use gunicorn to run the flask API that I just developed. It worked well when I use flask_restplus, but it had No module named 'flask_restx' when using flask_restx even I have flask_restx installed in my virtual environment. I think it might because gunicorn does not support flask_restx. Anyone had this issue before or has any idea about this?\r\n\r\n### Below is my run.sh script\r\n\r\n```\r\nTIMEOUT=10000\r\n\r\necho \"Starting gunicorn\"\r\ngunicorn \\\r\n    -b 0.0.0.0:80 \\\r\n    -t $TIMEOUT \\\r\n    -k gevent --worker-connections 10 \\\r\n    --keep-alive 3600 \\\r\n    --log-level info \\\r\n    bai.wsgi:app\r\n```\r\n\r\nWhen I try to run this script, it complains about ModuleNotFoundError: No module named 'flask_restx'.\r\n\r\nHere is the trackback:\r\n\r\n```\r\nStarting gunicorn\r\n[2020-07-19 11:43:11 -0400] [44134] [INFO] Starting gunicorn 19.9.0\r\n[2020-07-19 11:43:11 -0400] [44134] [INFO] Listening at: http://0.0.0.0:80 (44134)\r\n[2020-07-19 11:43:11 -0400] [44134] [INFO] Using worker: gevent\r\n[2020-07-19 11:43:11 -0400] [44137] [INFO] Booting worker with pid: 44137\r\n/Users/serenaxu/flask-template/BAI/bai/db/config.py:11: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.\r\n  __baseconfig__ = yaml.load(open(CONFIG_PATH))\r\n[2020-07-19 11:43:12 -0400] [44137] [ERROR] Exception in worker process\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/gunicorn/arbiter.py\", line 583, in spawn_worker\r\n    worker.init_process()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/gunicorn/workers/ggevent.py\", line 203, in init_process\r\n    super(GeventWorker, self).init_process()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/gunicorn/workers/base.py\", line 129, in init_process\r\n    self.load_wsgi()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/gunicorn/workers/base.py\", line 138, in load_wsgi\r\n    self.wsgi = self.app.wsgi()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/gunicorn/app/base.py\", line 67, in wsgi\r\n    self.callable = self.load()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/gunicorn/app/wsgiapp.py\", line 52, in load\r\n    return self.load_wsgiapp()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/gunicorn/app/wsgiapp.py\", line 41, in load_wsgiapp\r\n    return util.import_app(self.app_uri)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/gunicorn/util.py\", line 350, in import_app\r\n    __import__(module)\r\n  File \"/Users/serenaxu/flask-template/BAI/bai/wsgi.py\", line 2, in <module>\r\n    from bai.app import create_app, create_api\r\n  File \"/Users/serenaxu/flask-template/BAI/bai/app.py\", line 7, in <module>\r\n    from bai import apis\r\n  File \"/Users/serenaxu/flask-template/BAI/bai/apis/__init__.py\", line 2, in <module>\r\n    from .namespace1 import main\r\n  File \"/Users/serenaxu/flask-template/BAI/bai/apis/namespace1.py\", line 4, in <module>\r\n    from flask_restx import Api, Resource, Namespace\r\nModuleNotFoundError: No module named 'flask_restx'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/796", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/796/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/796/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/796/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/796", "id": 625539936, "node_id": "MDU6SXNzdWU2MjU1Mzk5MzY=", "number": 796, "title": "Need Implementation Example", "user": {"login": "dbuteau", "id": 1951286, "node_id": "MDQ6VXNlcjE5NTEyODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1951286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbuteau", "html_url": "https://github.com/dbuteau", "followers_url": "https://api.github.com/users/dbuteau/followers", "following_url": "https://api.github.com/users/dbuteau/following{/other_user}", "gists_url": "https://api.github.com/users/dbuteau/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbuteau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbuteau/subscriptions", "organizations_url": "https://api.github.com/users/dbuteau/orgs", "repos_url": "https://api.github.com/users/dbuteau/repos", "events_url": "https://api.github.com/users/dbuteau/events{/privacy}", "received_events_url": "https://api.github.com/users/dbuteau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-27T09:37:45Z", "updated_at": "2020-05-29T09:58:01Z", "closed_at": "2020-05-29T09:58:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\nI would like to implement a select type form in swagger for my rest API. This select box should displaying text label, but give corresponding integer value to the request.\r\n\r\nI tried lot of implementation kind found on internet, but nothing is working.\r\nCan you show me how we can (if we can) implent this?\r\n\r\nOne of my implementation example tried:\r\n```\r\nclass StatusType(enum.Enum):\r\n    stable      = 100\r\n    verified    = 4\r\n    ok          = 3\r\n    hot         = 2\r\n    unfit       = 1\r\n    broken      = 0\r\n\r\n    def __str__(self): # tried with __repr__ too\r\n        return self.name\r\n\r\n    @staticmethod\r\n    def from_string(s):\r\n        try:\r\n            return StatusType[s].value\r\n        except KeyError:\r\n            raise ValueError()\r\n\r\nput_arguments = reqparse.RequestParser()\r\nput_arguments.add_argument('status', type=StatusType.from_string, choices=list(StatusType))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/792", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/792/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/792/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/792/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/792", "id": 590611275, "node_id": "MDU6SXNzdWU1OTA2MTEyNzU=", "number": 792, "title": "How to protect swagger-UI ?", "user": {"login": "shivangpatel", "id": 1864526, "node_id": "MDQ6VXNlcjE4NjQ1MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1864526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivangpatel", "html_url": "https://github.com/shivangpatel", "followers_url": "https://api.github.com/users/shivangpatel/followers", "following_url": "https://api.github.com/users/shivangpatel/following{/other_user}", "gists_url": "https://api.github.com/users/shivangpatel/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivangpatel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivangpatel/subscriptions", "organizations_url": "https://api.github.com/users/shivangpatel/orgs", "repos_url": "https://api.github.com/users/shivangpatel/repos", "events_url": "https://api.github.com/users/shivangpatel/events{/privacy}", "received_events_url": "https://api.github.com/users/shivangpatel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-30T21:32:45Z", "updated_at": "2020-04-09T18:07:55Z", "closed_at": "2020-04-09T18:07:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "My default path for swagger-UI is `/api/doc`. So, anyone who hit this url in browser, they can easily access this swagger-UI ! \r\nSo, how can I protect this specific URL only. And suggest all possible ways. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/773", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/773/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/773/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/773/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/773", "id": 553664140, "node_id": "MDU6SXNzdWU1NTM2NjQxNDA=", "number": 773, "title": "Parse argument as a list", "user": {"login": "glebmikulko", "id": 14983675, "node_id": "MDQ6VXNlcjE0OTgzNjc1", "avatar_url": "https://avatars2.githubusercontent.com/u/14983675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glebmikulko", "html_url": "https://github.com/glebmikulko", "followers_url": "https://api.github.com/users/glebmikulko/followers", "following_url": "https://api.github.com/users/glebmikulko/following{/other_user}", "gists_url": "https://api.github.com/users/glebmikulko/gists{/gist_id}", "starred_url": "https://api.github.com/users/glebmikulko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glebmikulko/subscriptions", "organizations_url": "https://api.github.com/users/glebmikulko/orgs", "repos_url": "https://api.github.com/users/glebmikulko/repos", "events_url": "https://api.github.com/users/glebmikulko/events{/privacy}", "received_events_url": "https://api.github.com/users/glebmikulko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-22T16:46:35Z", "updated_at": "2020-01-27T09:54:20Z", "closed_at": "2020-01-27T09:54:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following model and parser:\r\n```\r\ncomponent = api.model('Component', {\r\n    'location': fields.String,\r\n    'amount': fields.Integer,\r\n})\r\n\r\n...\r\n\r\nparser = api.parser()\r\nparser.add_argument('presented_argument', type=[component])\r\nargs = parser.parse_args()\r\n```\r\n\r\nI have error if I do it in this way: \"'list' object is not callable\"\r\n\r\nWhat is the correct way to parse list?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/763", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/763/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/763/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/763/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/763", "id": 539591096, "node_id": "MDU6SXNzdWU1Mzk1OTEwOTY=", "number": 763, "title": "Install project in editable mode break Swagger", "user": {"login": "FloLaco", "id": 1486562, "node_id": "MDQ6VXNlcjE0ODY1NjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1486562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FloLaco", "html_url": "https://github.com/FloLaco", "followers_url": "https://api.github.com/users/FloLaco/followers", "following_url": "https://api.github.com/users/FloLaco/following{/other_user}", "gists_url": "https://api.github.com/users/FloLaco/gists{/gist_id}", "starred_url": "https://api.github.com/users/FloLaco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FloLaco/subscriptions", "organizations_url": "https://api.github.com/users/FloLaco/orgs", "repos_url": "https://api.github.com/users/FloLaco/repos", "events_url": "https://api.github.com/users/FloLaco/events{/privacy}", "received_events_url": "https://api.github.com/users/FloLaco/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860075, "node_id": "MDU6TGFiZWwxMjE4NjAwNzU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-18T10:27:14Z", "updated_at": "2019-12-18T10:52:34Z", "closed_at": "2019-12-18T10:52:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n### **Code**\r\n\r\n```python\r\n# -*- coding: utf-8 -*-\r\nfrom flask import Flask, request, Blueprint\r\nfrom flask_restplus import Api, Resource\r\nfrom api_ipam import Argo\r\nimport json\r\nimport ssl\r\nimport sys\r\n\r\napp = Flask(__name__)\r\nblueprint = Blueprint('api', __name__, url_prefix='/api')\r\napi = Api(blueprint, doc='/swagger/')\r\n\r\napp.register_blueprint(blueprint)\r\n\r\nglobal env_input\r\n\r\ntry:\r\n    if len(sys.argv) > 1:\r\n        env_input = sys.argv[1]\r\n\tprint env_input\r\n    else:\r\n        env_input = raw_input(\"url : \")\r\nexcept IndexError:\r\n    pass\r\n\r\n\r\n@api.route(\"/v0.1/ipam/<subnet>/<mask>\")\r\nclass Add(Resource):\r\n    [...]\r\n\r\nif __name__ == \"__main__\":\r\n    context = ('argo.csr','argo.key')\r\n    app.run(host='0.0.0.0', ssl_context=context, debug=False, port=44440)\r\n\r\n```\r\n\r\n### **Repro Steps** \r\nWorking case (in a virtualenv 1, freshly created) :\r\n1. `virtualenv tmp`\r\n2. `pip install flask_restplus`\r\n3. Install other depencies for my code\r\n4. `python rest_ipam.py development`\r\n5. Check the URL : https://IP:44440/api/swagger/\r\n6. Everything is OK : \r\n```\r\n10.x.x.x - - [18/Dec/2019 12:29:06] \"GET /api/swagger/ HTTP/1.1\" 200 -\r\n10.x.x.x - - [18/Dec/2019 12:29:06] \"GET /swaggerui/droid-sans.css HTTP/1.1\" 200 -\r\n10.x.x.x - - [18/Dec/2019 12:29:06] \"GET /swaggerui/swagger-ui.css HTTP/1.1\" 200 -\r\n10.x.x.x - - [18/Dec/2019 12:29:06] \"GET /swaggerui/swagger-ui-bundle.js HTTP/1.1\" 200 -\r\n10.x.x.x - - [18/Dec/2019 12:29:06] \"GET /swaggerui/swagger-ui-standalone-preset.js HTTP/1.1\" 200 -\r\n10.x.x.x - - [18/Dec/2019 12:29:06] \"GET /api/swagger.json HTTP/1.1\" 200 -\r\n10.x.x.x - - [18/Dec/2019 12:29:06] \"GET /swaggerui/favicon-32x32.png HTTP/1.1\" 200 -\r\n```\r\n\r\nNOT working case (in virtualenv 2, freshly created): \r\n1. `virtualenv tmp_local`\r\n2. `git clone https://github.com/noirbizarre/flask-restplus`\r\n3. `git checkout 0.13.0`\r\n4. `pip install -e flask_restplus`\r\n5. install other depencies for my code\r\n6. `python rest_ipam.py development`\r\n7. Check the URL : https://IP:44440/api/swagger/\r\n8. BREAK !!\r\n```\r\n10.x.x.x - - [18/Dec/2019 12:15:56] \"GET /api/swagger/ HTTP/1.1\" 200 -\r\n10.x.x.x - - [18/Dec/2019 12:15:57] \"GET /swaggerui/droid-sans.css HTTP/1.1\" 404 -\r\n10.x.x.x - - [18/Dec/2019 12:15:57] \"GET /swaggerui/swagger-ui.css HTTP/1.1\" 404 -\r\n10.x.x.x - - [18/Dec/2019 12:15:57] \"GET /swaggerui/swagger-ui-bundle2.js HTTP/1.1\" 404 -\r\n10.x.x.x - - [18/Dec/2019 12:15:57] \"GET /swaggerui/swagger-ui-standalone-preset.js HTTP/1.1\" 404 -\r\n10.x.x.x - - [18/Dec/2019 12:15:57] \"GET /swaggerui/favicon-32x32.png HTTP/1.1\" 404 -\r\n```\r\n\r\n### **Expected Behavior**\r\nSwagger should show the doc of the \"Default namespace\"\r\n\r\n### **Actual Behavior**\r\nA blank page is showing\r\n\r\n### **Error Messages/Stack Trace**\r\nPlease see the HTTP logs\r\n\r\n### **Environment**\r\n- Python version : Python 2.7.12, pip 19.3.1\r\nWorking env : \r\n```\r\nPackage            Version    \r\n------------------ -----------\r\naniso8601          8.0.0      \r\nattrs              19.3.0     \r\ncertifi            2019.11.28 \r\nchardet            3.0.4      \r\nClick              7.0        \r\nconfigparser       4.0.2      \r\ncontextlib2        0.6.0.post1\r\nenum34             1.1.6      \r\nFlask              1.1.1      \r\nFlask-JWT          0.3.2      \r\nflask-restplus     0.13.0     \r\nfunctools32        3.2.3.post2\r\nidna               2.8        \r\nimportlib-metadata 1.3.0      \r\nipaddress          1.0.23     \r\nitsdangerous       1.1.0      \r\nJinja2             2.10.3     \r\njsonschema         3.2.0      \r\nMarkupSafe         1.1.1      \r\nmore-itertools     5.0.0      \r\npathlib2           2.3.5      \r\npip                19.3.1     \r\nPyJWT              1.4.2      \r\npyrsistent         0.15.6     \r\npytz               2019.3     \r\nrequests           2.22.0     \r\nscandir            1.10.0     \r\nsetuptools         42.0.2     \r\nsix                1.13.0     \r\nurllib3            1.25.7     \r\nWerkzeug           0.16.0     \r\nwheel              0.33.6     \r\nzipp               0.6.0      \r\n```\r\n\r\nNOT working env : \r\n```\r\nPackage            Version     Location                    \r\n------------------ ----------- ----------------------------\r\naniso8601          8.0.0       \r\nattrs              19.3.0      \r\ncertifi            2019.11.28  \r\nchardet            3.0.4       \r\nClick              7.0         \r\nconfigparser       4.0.2       \r\ncontextlib2        0.6.0.post1 \r\nenum34             1.1.6       \r\nFlask              1.1.1       \r\nflask-restplus     0.13.0      /tmp/ipam_api/flask-restplus\r\nfunctools32        3.2.3.post2 \r\nidna               2.8         \r\nimportlib-metadata 1.3.0       \r\nipaddress          1.0.23      \r\nitsdangerous       1.1.0       \r\nJinja2             2.10.3      \r\njsonschema         3.2.0       \r\nMarkupSafe         1.1.1       \r\nmore-itertools     5.0.0       \r\npathlib2           2.3.5       \r\npip                19.3.1      \r\npyrsistent         0.15.6      \r\npytz               2019.3      \r\nrequests           2.22.0      \r\nscandir            1.10.0      \r\nsetuptools         42.0.2      \r\nsix                1.13.0      \r\nurllib3            1.25.7      \r\nWerkzeug           0.16.0      \r\nwheel              0.33.6      \r\nzipp               0.6.0       \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/758", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/758/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/758/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/758/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/758", "id": 533902385, "node_id": "MDU6SXNzdWU1MzM5MDIzODU=", "number": 758, "title": "`werkzeug.utils.cached_property` is deprecated", "user": {"login": "shnela", "id": 3773836, "node_id": "MDQ6VXNlcjM3NzM4MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3773836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shnela", "html_url": "https://github.com/shnela", "followers_url": "https://api.github.com/users/shnela/followers", "following_url": "https://api.github.com/users/shnela/following{/other_user}", "gists_url": "https://api.github.com/users/shnela/gists{/gist_id}", "starred_url": "https://api.github.com/users/shnela/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shnela/subscriptions", "organizations_url": "https://api.github.com/users/shnela/orgs", "repos_url": "https://api.github.com/users/shnela/repos", "events_url": "https://api.github.com/users/shnela/events{/privacy}", "received_events_url": "https://api.github.com/users/shnela/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860075, "node_id": "MDU6TGFiZWwxMjE4NjAwNzU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-06T11:17:44Z", "updated_at": "2020-02-17T16:34:40Z", "closed_at": "2019-12-13T08:02:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use [`werkzeug.utils.cached_property`](https://github.com/noirbizarre/flask-restplus/blob/master/flask_restplus/fields.py#L17) which is depracated:  \r\n>.../site-packages/flask_restplus/fields.py:17: DeprecationWarning:\r\n> The import 'werkzeug.cached_property' is deprecated and will be removed in Werkzeug 1.0. Use 'from werkzeug.utils import cached_property' instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/752", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/752/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/752/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/752", "id": 528857985, "node_id": "MDU6SXNzdWU1Mjg4NTc5ODU=", "number": 752, "title": "CSS injection security vulnerability in swagger-ui", "user": {"login": "andy524", "id": 44714702, "node_id": "MDQ6VXNlcjQ0NzE0NzAy", "avatar_url": "https://avatars3.githubusercontent.com/u/44714702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andy524", "html_url": "https://github.com/andy524", "followers_url": "https://api.github.com/users/andy524/followers", "following_url": "https://api.github.com/users/andy524/following{/other_user}", "gists_url": "https://api.github.com/users/andy524/gists{/gist_id}", "starred_url": "https://api.github.com/users/andy524/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andy524/subscriptions", "organizations_url": "https://api.github.com/users/andy524/orgs", "repos_url": "https://api.github.com/users/andy524/repos", "events_url": "https://api.github.com/users/andy524/events{/privacy}", "received_events_url": "https://api.github.com/users/andy524/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860075, "node_id": "MDU6TGFiZWwxMjE4NjAwNzU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-26T17:04:37Z", "updated_at": "2020-01-07T15:20:39Z", "closed_at": "2020-01-07T15:20:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/751", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/751/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/751/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/751/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/751", "id": 527769333, "node_id": "MDU6SXNzdWU1Mjc3NjkzMzM=", "number": 751, "title": "[Suggestion] Add simplejson.dumps to replace json.dumps", "user": {"login": "gwasserfall", "id": 17541336, "node_id": "MDQ6VXNlcjE3NTQxMzM2", "avatar_url": "https://avatars1.githubusercontent.com/u/17541336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwasserfall", "html_url": "https://github.com/gwasserfall", "followers_url": "https://api.github.com/users/gwasserfall/followers", "following_url": "https://api.github.com/users/gwasserfall/following{/other_user}", "gists_url": "https://api.github.com/users/gwasserfall/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwasserfall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwasserfall/subscriptions", "organizations_url": "https://api.github.com/users/gwasserfall/orgs", "repos_url": "https://api.github.com/users/gwasserfall/repos", "events_url": "https://api.github.com/users/gwasserfall/events{/privacy}", "received_events_url": "https://api.github.com/users/gwasserfall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-24T22:38:37Z", "updated_at": "2019-11-24T22:46:05Z", "closed_at": "2019-11-24T22:45:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting data back from mysql in a Decimal object will raise an Exception\r\n```\r\n\"TypeError: Object of type Decimal is not JSON serializable\"\r\n``` \r\nInstalling and replacing the standard json package with simplejson fixes this error for this use case. \r\n```\r\nFile: /usr/local/lib/python3.7/site-packages/flask_restful/representations/json.py\r\nLine: 4\r\n\r\nfrom simplejson import dumps\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/748", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/748/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/748/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/748/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/748", "id": 517114273, "node_id": "MDU6SXNzdWU1MTcxMTQyNzM=", "number": 748, "title": "Duplicate \"doc\" and \"root\" endpoints on reregistering blueprints?", "user": {"login": "knno", "id": 5490140, "node_id": "MDQ6VXNlcjU0OTAxNDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5490140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knno", "html_url": "https://github.com/knno", "followers_url": "https://api.github.com/users/knno/followers", "following_url": "https://api.github.com/users/knno/following{/other_user}", "gists_url": "https://api.github.com/users/knno/gists{/gist_id}", "starred_url": "https://api.github.com/users/knno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knno/subscriptions", "organizations_url": "https://api.github.com/users/knno/orgs", "repos_url": "https://api.github.com/users/knno/repos", "events_url": "https://api.github.com/users/knno/events{/privacy}", "received_events_url": "https://api.github.com/users/knno/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860075, "node_id": "MDU6TGFiZWwxMjE4NjAwNzU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-04T12:15:27Z", "updated_at": "2019-11-15T11:38:45Z", "closed_at": "2019-11-15T11:38:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "As the title says.. I think this might be a bug\r\n\r\n### **Code**\r\n\r\n##### api_v1.py\r\n```python\r\nfrom flask import Blueprint\r\nfrom flask_restplus import Api\r\n\r\nblueprint = Blueprint('api_v1', __name__, url_prefix='/api/v1')\r\n\r\napi = Api(blueprint, title='My Title',\r\n         version='1.0',\r\n         description='A description',\r\n         doc='/docs')\r\n```\r\n##### app.py\r\n```python\r\nimport copy\r\nfrom flask import Flask\r\n\r\napp = Flask(__name__)\r\n\r\n# ...\r\n\r\nfrom api_v1 import blueprint\r\n\r\nblueprint_copy = copy.copy(blueprint)\r\nblueprint_copy.name = \"api\" # Renamed for collision\r\napp.register_blueprint(blueprint, url_prefix=\"/api\")\r\napp.register_blueprint(blueprint_copy, url_prefix=\"/api_copy\")\r\n```\r\n\r\n### **Repro Steps** (if applicable)\r\n1. Setup a flask app with flask restplus.\r\n2. Register the blueprint twice (same as code).\r\n3. `$ flask routes`\r\n\r\n### **Expected Behavior**\r\nEndpoints should be only defined once.\r\n\r\n### **Actual Behavior**\r\nEndpoints **api.doc** and **api.root** are shown to be defined twice.\r\n\r\n### **Error Messages/Stack Trace**\r\nThe following is what I get when I type `flask routes` in my specific app terminal.\r\n\r\n```cmd\r\nEndpoint             Methods    Rule\r\n-------------------  ---------  --------------------------\r\napi.doc              GET        /api/docs\r\napi.root             GET        /api/\r\napi.specs            GET        /api/swagger.json\r\napi_v1.doc           GET        /api_copy/docs\r\napi_v1.doc           GET        /api_copy/docs\r\napi_v1.root          GET        /api_copy/\r\napi_v1.root          GET        /api_copy/\r\napi_v1.specs         GET        /api_copy/swagger.json\r\nindex                GET        /\r\nrestplus_doc.static  GET        /swaggerui/<path:filename>\r\nstatic               GET        /static/<path:filename>\r\n```\r\n\r\n### **Environment**\r\n- Python version **3.7.3**\r\n- Flask version **1.1.1**\r\n- Flask-RESTPlus version **0.13.0**\r\n- Requirements.txt:\r\n```\r\nalembic==1.3.0\r\naniso8601==8.0.0\r\nastroid==2.3.2\r\nattrs==19.3.0\r\nClick==7.0\r\ncolorama==0.4.1\r\nFlask==1.1.1\r\nFlask-Login==0.4.1\r\nFlask-Migrate==2.5.2\r\nflask-restplus==0.13.0\r\nFlask-SQLAlchemy==2.4.1\r\nFlask-WTF==0.14.2\r\nimportlib-metadata==0.23\r\nisort==4.3.21\r\nitsdangerous==1.1.0\r\nJinja2==2.10.3\r\njsonschema==3.1.1\r\nlazy-object-proxy==1.4.3\r\nMako==1.1.0\r\nMarkupSafe==1.1.1\r\nmccabe==0.6.1\r\nmore-itertools==7.2.0\r\npylint==2.4.3\r\npylint-flask==0.6\r\npylint-flask-sqlalchemy==0.1.0\r\npylint-plugin-utils==0.6\r\npyrsistent==0.15.5\r\npython-dateutil==2.8.0\r\npython-dotenv==0.10.3\r\npython-editor==1.0.4\r\npytz==2019.3\r\nsix==1.12.0\r\nSQLAlchemy==1.3.10\r\ntyped-ast==1.4.0\r\nWerkzeug==0.16.0\r\nwrapt==1.11.2\r\nWTForms==2.2.1\r\nzipp==0.6.0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/744", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/744/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/744/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/744/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/744", "id": 513035179, "node_id": "MDU6SXNzdWU1MTMwMzUxNzk=", "number": 744, "title": "Catch custom exceptions using @api.errorhandler", "user": {"login": "mikelerch", "id": 39825984, "node_id": "MDQ6VXNlcjM5ODI1OTg0", "avatar_url": "https://avatars1.githubusercontent.com/u/39825984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikelerch", "html_url": "https://github.com/mikelerch", "followers_url": "https://api.github.com/users/mikelerch/followers", "following_url": "https://api.github.com/users/mikelerch/following{/other_user}", "gists_url": "https://api.github.com/users/mikelerch/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikelerch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikelerch/subscriptions", "organizations_url": "https://api.github.com/users/mikelerch/orgs", "repos_url": "https://api.github.com/users/mikelerch/repos", "events_url": "https://api.github.com/users/mikelerch/events{/privacy}", "received_events_url": "https://api.github.com/users/mikelerch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860075, "node_id": "MDU6TGFiZWwxMjE4NjAwNzU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-27T23:01:00Z", "updated_at": "2019-11-23T19:09:06Z", "closed_at": "2019-10-29T13:17:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nfrom flask import Flask\r\nfrom flask_restplus import Resource, Api\r\n\r\napp = Flask(__name__)\r\napi = Api(app)\r\n\r\n\r\n# For example a sqlalchemy.orm.exc.NoResultFound exception\r\nclass NoResultFound(Exception):\r\n    pass\r\n\r\n\r\n@api.errorhandler(NoResultFound)\r\ndef handle_no_result_exception(error):\r\n    \"\"\"Return a custom not found error message and 404 status code\"\"\"\r\n    return {'message': 'Not Found'}, 404\r\n\r\n\r\n@api.route('/hello')\r\nclass HelloWorld(Resource):\r\n    def get(self):\r\n        raise NoResultFound\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n\r\n```\r\n\r\n### **Expected Behavior**\r\nFlask-RESTPlus should handle the custom exception and return the appropriate message and status code.\r\n\r\n### **Actual Behavior**\r\nA 500 Internal Server Error is raised, the custom `errorhandler` is ignored.\r\n\r\n### **Error Messages/Stack Trace**\r\n```html\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\r\n  \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n  <head>\r\n    <title>NoResultFound // Werkzeug Debugger</title>\r\n\r\n...\r\n```\r\n\r\n### **Environment**\r\n- **Python** 3.7\r\n- **Flask** 1.1.1\r\n- **Flask-RESTPlus** 0.13.0\r\n\r\n### **Additional Context**\r\n\r\nI searched on Google and found a few people having similar issues. From what I understand, only exceptions from `werkzeug.exceptions (HTTPExceptions)` are actually caught.\r\n\r\nThe [docs](https://flask-restplus.readthedocs.io/en/stable/errors.html#the-api-errorhandler-decorator) are not really explaining this kind of behaviour. How would I solve this issue when using SQLAlchemy for example? \r\nA possible solution could be catching the `NoResultFound` exception raised by `SQLAlchemy` and raise a new `NotFound` exception from `werkzeug` instead.\r\n\r\nAnother way could be using the original `errorhandler` provided by Flask. https://flask.palletsprojects.com/en/1.1.x/patterns/apierrors/#implementing-api-exceptions)\r\n\r\nIs there a better way of using custom exceptions with Flask-RESTPlus?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/740", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/740/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/740/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/740", "id": 509358691, "node_id": "MDU6SXNzdWU1MDkzNTg2OTE=", "number": 740, "title": "Response object headers return None with @after_this_request", "user": {"login": "psdon", "id": 31410348, "node_id": "MDQ6VXNlcjMxNDEwMzQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/31410348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psdon", "html_url": "https://github.com/psdon", "followers_url": "https://api.github.com/users/psdon/followers", "following_url": "https://api.github.com/users/psdon/following{/other_user}", "gists_url": "https://api.github.com/users/psdon/gists{/gist_id}", "starred_url": "https://api.github.com/users/psdon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psdon/subscriptions", "organizations_url": "https://api.github.com/users/psdon/orgs", "repos_url": "https://api.github.com/users/psdon/repos", "events_url": "https://api.github.com/users/psdon/events{/privacy}", "received_events_url": "https://api.github.com/users/psdon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860075, "node_id": "MDU6TGFiZWwxMjE4NjAwNzU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-19T00:00:06Z", "updated_at": "2019-10-19T01:21:24Z", "closed_at": "2019-10-19T01:21:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to set cookies for an endpoint via `@after_this_request` Flask decorator. \r\nBut Flask_CORS throws me an error which says:\r\n```\r\nFile \"/home/me/.conda/envs/my_app/lib/python3.7/site-packages/flask_cors/extension.py\", line 173, in cors_after_request\r\n    if resp.headers is not None and resp.headers.get(ACL_ORIGIN):\r\nAttributeError: 'NoneType' object has no attribute 'headers'\r\n```\r\nI suspect that the response object return with No Headers, though I'm not sure.\r\n\r\nAny workaround?\r\n\r\nHere's the snippet code that reproduce the said error with installed Flask_CORS extension:\r\n```\r\n@api.route('/test')\r\nclass TestResource(Resource):\r\n\r\n    def get(self):\r\n\r\n        @after_this_request # from Flask import after_this_request\r\n        def set_cookies(resp):\r\n            print(resp)\r\n\r\n        return {\"something\": True}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/737", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/737/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/737/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/737", "id": 508366033, "node_id": "MDU6SXNzdWU1MDgzNjYwMzM=", "number": 737, "title": "Describing nested dictionaries followed by dynamic keys for marshal_with", "user": {"login": "KietnaQuTak", "id": 15672157, "node_id": "MDQ6VXNlcjE1NjcyMTU3", "avatar_url": "https://avatars1.githubusercontent.com/u/15672157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KietnaQuTak", "html_url": "https://github.com/KietnaQuTak", "followers_url": "https://api.github.com/users/KietnaQuTak/followers", "following_url": "https://api.github.com/users/KietnaQuTak/following{/other_user}", "gists_url": "https://api.github.com/users/KietnaQuTak/gists{/gist_id}", "starred_url": "https://api.github.com/users/KietnaQuTak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KietnaQuTak/subscriptions", "organizations_url": "https://api.github.com/users/KietnaQuTak/orgs", "repos_url": "https://api.github.com/users/KietnaQuTak/repos", "events_url": "https://api.github.com/users/KietnaQuTak/events{/privacy}", "received_events_url": "https://api.github.com/users/KietnaQuTak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860076, "node_id": "MDU6TGFiZWwxMjE4NjAwNzY=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 121860077, "node_id": "MDU6TGFiZWwxMjE4NjAwNzc=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 257328545, "node_id": "MDU6TGFiZWwyNTczMjg1NDU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-10-17T09:56:31Z", "updated_at": "2020-01-30T13:51:40Z", "closed_at": "2019-11-14T12:40:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I may not understand examples I have found regarding describing model of dictionary with different names as keys cause I have no idea how to describe bellow model properly:\r\n```python\r\n{\r\n\t\"number\": 123,\r\n\t\"docs\": {\r\n\t\t\"number_1\": {\r\n\t\t\t\"creator\": \"some@email.pl\",\r\n\t\t\t\"subject\": \"document subject\",\r\n\t\t\t\"filename\": \"document filename\",\r\n\t\t\t\"date\": \"2019-10-16 07:04:50.371130\",\r\n\t\t\t\"author\": \"author name\",\r\n\t\t\t\"r1\": \"recipient 1 name\",\r\n\t\t\t\"r2\": \"recipient 2 name\",\r\n\t\t\t\"r3\": \"recipient 3 name\",\r\n\t\t\t\"sent\": true\r\n\t\t}\r\n\t\t\"number_2\": {\r\n\t\t\t\"creator\": \"some@email.pl\",\r\n\t\t\t\"subject\": \"document subject\",\r\n\t\t\t\"filename\": \"document filename\",\r\n\t\t\t\"date\": \"2019-10-15 07:04:50.371130\",\r\n\t\t\t\"author\": \"author name\",\r\n\t\t\t\"r1\": \"recipient 1 name\",\r\n\t\t\t\"r2\": \"recipient 2 name\",\r\n\t\t\t\"r3\": \"recipient 3 name\",\r\n\t\t\t\"sent\": true\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nIn \"docs\" I'm planning to change into simple list of objects but for the moment I would like to describe model in which \"docs\" is a dictionary of smaller dictionaries indicated by keys {\"number_1\": MODEL_DOC, \"number_2\": MODEL_DOC}. I was trying to achieve it as bellow but I have now idea how to describe \"(document_number)\" to indicate that there could be many different document dictionaries followed by document numbers as key (strings).\r\n\r\n```python\r\nMODEL_DOC = api.model('Document', {\r\n\tCREATOR: fields.String(description='Creator e-mail.'),\r\n\tSUBJECT: fields.String(description='Subject.'),\r\n\tFILENAME: fields.String(description='Filename.'),\r\n\tDATE: fields.DateTime(description='Generation date.'),\r\n\tAUTHOR: fields.String(description='Author name.'),\r\n\tR1: fields.String(description='1st recipient name.'),\r\n\tR2: fields.String(description='2nd recipient name.'),\r\n\tR3: fields.String(description='3rd recipient name.'),\r\n\tSENT: fields.Boolean(description='Sent status.')\r\n})\r\nMODEL_DOCS = api.model('Documents', {\r\n\t'(document number)': fields.Nested(MODEL_DOC)\r\n})\r\n\r\nMODEL_DOWNLOAD_RESPONSE = api.model('Document Download Response', {\r\n\tNUMBER: fields.Integer(description='Document number.'),\r\n\tDOCS: fields.Nested(MODEL_DOCS, description='Dictionary with documents number as key and document data as value.')\r\n})\r\n```\r\n\r\nBest regards\r\nKietna Qu'Tak", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/728", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/728/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/728/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/728", "id": 505214183, "node_id": "MDU6SXNzdWU1MDUyMTQxODM=", "number": 728, "title": "Defining varaible keys in case of nested field model", "user": {"login": "knowBalpreet", "id": 19731500, "node_id": "MDQ6VXNlcjE5NzMxNTAw", "avatar_url": "https://avatars3.githubusercontent.com/u/19731500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/knowBalpreet", "html_url": "https://github.com/knowBalpreet", "followers_url": "https://api.github.com/users/knowBalpreet/followers", "following_url": "https://api.github.com/users/knowBalpreet/following{/other_user}", "gists_url": "https://api.github.com/users/knowBalpreet/gists{/gist_id}", "starred_url": "https://api.github.com/users/knowBalpreet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/knowBalpreet/subscriptions", "organizations_url": "https://api.github.com/users/knowBalpreet/orgs", "repos_url": "https://api.github.com/users/knowBalpreet/repos", "events_url": "https://api.github.com/users/knowBalpreet/events{/privacy}", "received_events_url": "https://api.github.com/users/knowBalpreet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860077, "node_id": "MDU6TGFiZWwxMjE4NjAwNzc=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 257328545, "node_id": "MDU6TGFiZWwyNTczMjg1NDU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-10-10T11:40:59Z", "updated_at": "2019-10-27T17:56:00Z", "closed_at": "2019-10-27T17:56:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n\t\"preview\": {\r\n\t\t\"9:16\": {\r\n\t\t\t\"thumbnail\": \"\",\r\n\t\t\t\"video\": \"\"\r\n\t\t}, \"16:9\": {\r\n\t\t\t\"thumbnail\": \"\",\r\n\t\t\t\"video\": \"\"\r\n\t\t}, \"1:1\": {\r\n\t\t\t\"thumbnail\": \"\",\r\n\t\t\t\"video\": \"\"\r\n\t\t}\r\n\t}\r\n```\r\n\r\nI have the above data coming in the request for which I want to create a model. I tried implementing wildcard fields but didn't get any success. In the above case, the aspect ratio is dynamic and can be anything but will always be in `*:*` format. In case that is coming, thumbnail and video are in nested modal with `required= true`. \r\n\r\nAny leads would be appreciated. Thanks in advance!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/727", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/727/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/727/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/727", "id": 505143334, "node_id": "MDU6SXNzdWU1MDUxNDMzMzQ=", "number": 727, "title": "Python 3.8 support", "user": {"login": "Colin-b", "id": 7591933, "node_id": "MDQ6VXNlcjc1OTE5MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7591933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Colin-b", "html_url": "https://github.com/Colin-b", "followers_url": "https://api.github.com/users/Colin-b/followers", "following_url": "https://api.github.com/users/Colin-b/following{/other_user}", "gists_url": "https://api.github.com/users/Colin-b/gists{/gist_id}", "starred_url": "https://api.github.com/users/Colin-b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Colin-b/subscriptions", "organizations_url": "https://api.github.com/users/Colin-b/orgs", "repos_url": "https://api.github.com/users/Colin-b/repos", "events_url": "https://api.github.com/users/Colin-b/events{/privacy}", "received_events_url": "https://api.github.com/users/Colin-b/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860077, "node_id": "MDU6TGFiZWwxMjE4NjAwNzc=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-10T09:19:22Z", "updated_at": "2019-12-11T08:00:51Z", "closed_at": "2019-10-22T10:02:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using latest flask-restplus version with Python 3.7.4, I have the following warning:\r\n\r\n```\r\nflask_restplus/model.py:8: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n\r\n    from collections import OrderedDict, MutableMapping\r\n```\r\n\r\nIt is not fixed on master branch and I cannot find any open item with \"DeprecationWarning\" matching this.\r\n\r\nI can submit a PR to solve this if that's ok?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/718", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/718/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/718/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/718", "id": 499107358, "node_id": "MDU6SXNzdWU0OTkxMDczNTg=", "number": 718, "title": "Make a field required if another field's enum is chosen", "user": {"login": "Lomomn", "id": 8727952, "node_id": "MDQ6VXNlcjg3Mjc5NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8727952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lomomn", "html_url": "https://github.com/Lomomn", "followers_url": "https://api.github.com/users/Lomomn/followers", "following_url": "https://api.github.com/users/Lomomn/following{/other_user}", "gists_url": "https://api.github.com/users/Lomomn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lomomn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lomomn/subscriptions", "organizations_url": "https://api.github.com/users/Lomomn/orgs", "repos_url": "https://api.github.com/users/Lomomn/repos", "events_url": "https://api.github.com/users/Lomomn/events{/privacy}", "received_events_url": "https://api.github.com/users/Lomomn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-26T20:45:28Z", "updated_at": "2019-09-26T21:16:09Z", "closed_at": "2019-09-26T21:16:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to make a field required only if a prior field has a certain value sent from the client.\r\n\r\nPlease check the snippet below to get a clear idea of what I'm asking:\r\n\r\n```python\r\nconditional_model = api.model('ConditionalModel', {\r\n    'itemType': fields.String(required=True, enum=['box', 'notBox']),\r\n    'contents': fields.List(fields.Nested(contents_model), \r\n        required=True if itemType=='box' else False)\r\n})\r\n```\r\nI only want the contents field to be required if itemType is specified as 'box' from the client.\r\n\r\nIs there an obvious solution to this that I'm missing?\r\nAm I approaching this from the wrong angle?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/717", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/717/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/717/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/717", "id": 497962619, "node_id": "MDU6SXNzdWU0OTc5NjI2MTk=", "number": 717, "title": "differential swagger documentation of get and post?", "user": {"login": "j-christ", "id": 20236262, "node_id": "MDQ6VXNlcjIwMjM2MjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/20236262?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-christ", "html_url": "https://github.com/j-christ", "followers_url": "https://api.github.com/users/j-christ/followers", "following_url": "https://api.github.com/users/j-christ/following{/other_user}", "gists_url": "https://api.github.com/users/j-christ/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-christ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-christ/subscriptions", "organizations_url": "https://api.github.com/users/j-christ/orgs", "repos_url": "https://api.github.com/users/j-christ/repos", "events_url": "https://api.github.com/users/j-christ/events{/privacy}", "received_events_url": "https://api.github.com/users/j-christ/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860075, "node_id": "MDU6TGFiZWwxMjE4NjAwNzU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-24T22:57:20Z", "updated_at": "2019-10-10T18:53:03Z", "closed_at": "2019-10-10T18:53:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the latest flask_restplus, and I can't quite figure something out.  Apologies if this isn't the correct forum for help, but I can't find any other place to ask.\r\n\r\nI have a simple resource foo with a compound key (node_type and node_key).  To retrieve the resource you need both, but neither is in the URL to create a new foo resource:\r\n\r\n```\r\n@foo.route(\"/foo/<int:node_type>/<int:node_key>\",\r\n           \"/foo\")\r\nclass Foo(Resource):    \r\n    def get(self, node_type, node_key):\r\n        return {}\r\n\r\n    def post(self):\r\n        return {}\r\n```\r\n\r\nUsers should only call POST on `/foo` and GET on `/foo/<node_type>/<node_key>`.\r\n\r\nHowever, the auto-generated swagger documentation shows four routes for this\r\n\r\n```\r\nGET /foo\r\nGET /foo/<node_type>/<node_key>\r\nPOST /foo\r\nPOST /foo/<node_type>/<node_key>\r\n```\r\n\r\nHow should I structure this so that only\r\n\r\n```\r\nGET /foo/<node_type>/<node_key>\r\nPOST /foo\r\n```\r\n\r\nis shown in the documentation?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/715", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/715/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/715/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/715/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/715", "id": 496209560, "node_id": "MDU6SXNzdWU0OTYyMDk1NjA=", "number": 715, "title": "[FEATURE IDEA] Add pedantic library for documentation and model validation", "user": {"login": "tincumagic", "id": 39422129, "node_id": "MDQ6VXNlcjM5NDIyMTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/39422129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tincumagic", "html_url": "https://github.com/tincumagic", "followers_url": "https://api.github.com/users/tincumagic/followers", "following_url": "https://api.github.com/users/tincumagic/following{/other_user}", "gists_url": "https://api.github.com/users/tincumagic/gists{/gist_id}", "starred_url": "https://api.github.com/users/tincumagic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tincumagic/subscriptions", "organizations_url": "https://api.github.com/users/tincumagic/orgs", "repos_url": "https://api.github.com/users/tincumagic/repos", "events_url": "https://api.github.com/users/tincumagic/events{/privacy}", "received_events_url": "https://api.github.com/users/tincumagic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-20T08:07:01Z", "updated_at": "2019-10-10T18:56:02Z", "closed_at": "2019-10-10T18:56:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "IDEA\r\nWe should absolutely add pedantic library usage to Flask-resplus.\r\n It's a new library for generating data-model for validation and generating documentation in the way FastAPI library already does. It requires python > 3.5 with typing library and type hints.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/705", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/705/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/705/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/705", "id": 485990076, "node_id": "MDU6SXNzdWU0ODU5OTAwNzY=", "number": 705, "title": "Exceptions (including programming blunders) raised in api.errorhandler or namespace.errorhandler decorated functions are wrongly suppressed", "user": {"login": "rob-smallshire", "id": 1044137, "node_id": "MDQ6VXNlcjEwNDQxMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1044137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rob-smallshire", "html_url": "https://github.com/rob-smallshire", "followers_url": "https://api.github.com/users/rob-smallshire/followers", "following_url": "https://api.github.com/users/rob-smallshire/following{/other_user}", "gists_url": "https://api.github.com/users/rob-smallshire/gists{/gist_id}", "starred_url": "https://api.github.com/users/rob-smallshire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rob-smallshire/subscriptions", "organizations_url": "https://api.github.com/users/rob-smallshire/orgs", "repos_url": "https://api.github.com/users/rob-smallshire/repos", "events_url": "https://api.github.com/users/rob-smallshire/events{/privacy}", "received_events_url": "https://api.github.com/users/rob-smallshire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-27T19:24:36Z", "updated_at": "2019-09-10T13:05:41Z", "closed_at": "2019-09-10T13:05:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "If an exception is raised within an error handling function other than the exception that was passed as the argument to the handler (*i.e.* other than the original exception which caused the handler to be invoked), this new exception is suppressed by the implementation of `Api.error_router'. The original exception is propagated instead, hiding the programming blunder.\r\n\r\nCode similar to the following will reproduce:\r\n\r\n```python\r\napi = restplus.Api(app)\r\n\r\nclass CustomException(RuntimeError):\r\n    pass\r\n\r\nclass ProgrammingBlunder(Exception):\r\n    pass\r\n\r\n@api.route('/test/', endpoint=\"test\")\r\nclass TestResource(restplus.Resource):\r\n    def get(self):\r\n        raise CustomException('error')\r\n\r\n@api.errorhandler(CustomException)\r\ndef handle_custom_exception(error):\r\n    raise ProgrammingBlunder(\"This exception needs to be logged, not suppressed, then cause 500\")\r\n```\r\n\r\nIn this case, there will be no mention of `ProgrammingBlunder` in the log output, and `CustomException` will be passed to the original Flask handler. It's as if `ProgrammingBlunder` never happened!\r\n\r\nThe problem lies in `Api.error_router`, an annotated version of which is shown below:\r\n\r\n```python\r\n    def error_router(self, original_handler, e):\r\n        if self._has_fr_route():\r\n            try:\r\n                return self.handle_error(e)\r\n            except Exception:  # <== programming errors in the handler not captured here\r\n                pass  # Fall through to original handler\r\n        return original_handler(e)  # <== original exception propagated and reported instead\r\n        # Any information about buggy error handlers is lost and not reported \r\n```\r\n\r\nThis behaviour makes it *very* difficult to work with error handlers. Faulty error handlers just appear not to work at all \u2013 the effect is similar to the handler not having been properly registered or invoked, as there is no mention of the mistakes in the error handler in log output from Flask, and no guarantee that a 500 Internal Server error will be returned.\r\n\r\nAs a programmer, if an error handler is faulty, we want to know about that so the handler can be fixed. The current behaviour is pretty effective at concealing implementation errors.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/704", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/704/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/704/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/704/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/704", "id": 485426275, "node_id": "MDU6SXNzdWU0ODU0MjYyNzU=", "number": 704, "title": "Documentation error for Scaling Your Project > Use With Blueprints", "user": {"login": "rob-smallshire", "id": 1044137, "node_id": "MDQ6VXNlcjEwNDQxMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1044137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rob-smallshire", "html_url": "https://github.com/rob-smallshire", "followers_url": "https://api.github.com/users/rob-smallshire/followers", "following_url": "https://api.github.com/users/rob-smallshire/following{/other_user}", "gists_url": "https://api.github.com/users/rob-smallshire/gists{/gist_id}", "starred_url": "https://api.github.com/users/rob-smallshire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rob-smallshire/subscriptions", "organizations_url": "https://api.github.com/users/rob-smallshire/orgs", "repos_url": "https://api.github.com/users/rob-smallshire/repos", "events_url": "https://api.github.com/users/rob-smallshire/events{/privacy}", "received_events_url": "https://api.github.com/users/rob-smallshire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-26T20:10:10Z", "updated_at": "2019-08-27T14:59:36Z", "closed_at": "2019-08-27T14:59:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "In this section:\r\n\r\nhttps://flask-restplus.readthedocs.io/en/stable/scaling.html#use-with-blueprints\r\n\r\nthe documentation suggests that that `Api` object should be passed to `register_blueprint()` rather than the `Blueprint` object. The code as documented gives:\r\n\r\n```\r\n    app.register_blueprint(api, url_prefix='/api/v1')\r\n  File \"/Users/rjs/.virtualenvs/acquire/lib/python3.7/site-packages/flask/app.py\", line 98, in wrapper_func\r\n    return f(self, *args, **kwargs)\r\n  File \"/Users/rjs/.virtualenvs/acquire/lib/python3.7/site-packages/flask/app.py\", line 1167, in register_blueprint\r\n    blueprint.register(self, options, first_registration)\r\n  File \"/Users/rjs/.virtualenvs/acquire/lib/python3.7/site-packages/flask_restplus/api.py\", line 217, in __getattr__\r\n    raise AttributeError('Api does not have {0} attribute'.format(name))\r\nAttributeError: Api does not have register attribute\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/699", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/699/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/699/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/699", "id": 483892095, "node_id": "MDU6SXNzdWU0ODM4OTIwOTU=", "number": 699, "title": "SLACK channel   flask-restplus.slack.com   ", "user": {"login": "iahim", "id": 1051201, "node_id": "MDQ6VXNlcjEwNTEyMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1051201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iahim", "html_url": "https://github.com/iahim", "followers_url": "https://api.github.com/users/iahim/followers", "following_url": "https://api.github.com/users/iahim/following{/other_user}", "gists_url": "https://api.github.com/users/iahim/gists{/gist_id}", "starred_url": "https://api.github.com/users/iahim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iahim/subscriptions", "organizations_url": "https://api.github.com/users/iahim/orgs", "repos_url": "https://api.github.com/users/iahim/repos", "events_url": "https://api.github.com/users/iahim/events{/privacy}", "received_events_url": "https://api.github.com/users/iahim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-22T09:59:41Z", "updated_at": "2019-09-04T07:36:10Z", "closed_at": "2019-09-04T07:36:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\nI am very new to py/flask/ flask-restplus, BUT i see the huge benefits behind this project.\r\nMaybe it's interesting to get together on a chat channel... like slack... and communicate faster.\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/698", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/698/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/698/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/698", "id": 483829468, "node_id": "MDU6SXNzdWU0ODM4Mjk0Njg=", "number": 698, "title": "Adding an additional decorator removes my swagger description.", "user": {"login": "awalende", "id": 20296419, "node_id": "MDQ6VXNlcjIwMjk2NDE5", "avatar_url": "https://avatars1.githubusercontent.com/u/20296419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/awalende", "html_url": "https://github.com/awalende", "followers_url": "https://api.github.com/users/awalende/followers", "following_url": "https://api.github.com/users/awalende/following{/other_user}", "gists_url": "https://api.github.com/users/awalende/gists{/gist_id}", "starred_url": "https://api.github.com/users/awalende/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/awalende/subscriptions", "organizations_url": "https://api.github.com/users/awalende/orgs", "repos_url": "https://api.github.com/users/awalende/repos", "events_url": "https://api.github.com/users/awalende/events{/privacy}", "received_events_url": "https://api.github.com/users/awalende/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-22T07:54:53Z", "updated_at": "2019-08-22T08:32:59Z", "closed_at": "2019-08-22T08:32:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there,\r\n\r\nmore of a question than an actual issue:\r\n\r\nI'm trying to protect my resources with an authorization header.\r\nTake for example this method:\r\n\r\n```\r\n@api.route('/')\r\nclass BackendsList(Resource):\r\n    @api.doc(\"List of all registred backends\", security=\"apikey\")\r\n    @api.marshal_list_with(_backend)\r\n    @api.response(401, 'Authorization error')\r\n    @auth_required\r\n    def get(self):\r\n        \"\"\"List all registered users\"\"\"\r\n        return \"blabla\"\r\n```\r\n\r\nThe implementation of `auth_required` looks like this:\r\n```\r\ndef auth_required(func):\r\n    def check_auth(*args, **kwargs):\r\n        if 'X-API-KEY' not in request.headers:\r\n            raise Unauthorized('No API Key provided')\r\n        key = request.headers['X-API-KEY']\r\n        if key != registred_api_key or not registred_api_key:\r\n            raise Forbidden('Wrong API Key')\r\n        return func(*args, **kwargs)\r\n    return check_auth\r\n```\r\n\r\nWith this, the small description text \"List of all registered Backends\" is missing in the swagger UI. When I remove my decorator, the description shows in the ui as usual. Am I missing something in the wrapper?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/696", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/696/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/696/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/696/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/696", "id": 483659477, "node_id": "MDU6SXNzdWU0ODM2NTk0Nzc=", "number": 696, "title": "swagger configs not working (i am a newbie, so i might be wrong)", "user": {"login": "iahim", "id": 1051201, "node_id": "MDQ6VXNlcjEwNTEyMDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1051201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iahim", "html_url": "https://github.com/iahim", "followers_url": "https://api.github.com/users/iahim/followers", "following_url": "https://api.github.com/users/iahim/following{/other_user}", "gists_url": "https://api.github.com/users/iahim/gists{/gist_id}", "starred_url": "https://api.github.com/users/iahim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iahim/subscriptions", "organizations_url": "https://api.github.com/users/iahim/orgs", "repos_url": "https://api.github.com/users/iahim/repos", "events_url": "https://api.github.com/users/iahim/events{/privacy}", "received_events_url": "https://api.github.com/users/iahim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860080, "node_id": "MDU6TGFiZWwxMjE4NjAwODA=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-21T21:22:36Z", "updated_at": "2019-08-22T16:07:33Z", "closed_at": "2019-08-22T09:58:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all apologies, but i do not know any other place to ask for help... \r\nI am using flask-restplus with namespaces and blueprints - so i have /api/v1/  and /api/v2\r\nThat's fine so far, but it seems i can not modify the swagger ui:\r\n`app.config['SWAGGER_UI_LANGUAGES'] = ['en', 'fr']\r\napp.config.SWAGGER_SUPPORTED_SUBMIT_METHODS = [\"get\"]\r\n`\r\n\r\nThe code where i put them all together looks like this:\r\n\r\n\r\n\r\n\r\n## API v1\r\n\r\n\r\nfrom api.api_v1 import blueprint as blueprint_api_v1\r\nfrom api.api_v1 import api as api_v1\r\napp.register_blueprint(blueprint_api_v1)\r\njwt._set_error_handler_callbacks(api_v1)\r\n\r\n\r\n\r\n\r\n## API v2\r\n\r\n\r\nfrom api.api_v2 import blueprint as blueprint_api_v2\r\nfrom api.api_v1 import api as api_v2\r\napp.register_blueprint(blueprint_api_v2)\r\njwt._set_error_handler_callbacks(api_v2)\r\n\r\n\r\n## this stuff does not work:\r\napp.config['SWAGGER_UI_LANGUAGES'] = ['en', 'fr']\r\napp.config.SWAGGER_SUPPORTED_SUBMIT_METHODS = [\"get\"]\r\n\r\nAny help is much appreciated ... again apologies in advance...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/694", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/694/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/694/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/694/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/694", "id": 482677854, "node_id": "MDU6SXNzdWU0ODI2Nzc4NTQ=", "number": 694, "title": "Feature request: Logging instance on Api/Namespace object", "user": {"login": "casparjespersen", "id": 811707, "node_id": "MDQ6VXNlcjgxMTcwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/811707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/casparjespersen", "html_url": "https://github.com/casparjespersen", "followers_url": "https://api.github.com/users/casparjespersen/followers", "following_url": "https://api.github.com/users/casparjespersen/following{/other_user}", "gists_url": "https://api.github.com/users/casparjespersen/gists{/gist_id}", "starred_url": "https://api.github.com/users/casparjespersen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/casparjespersen/subscriptions", "organizations_url": "https://api.github.com/users/casparjespersen/orgs", "repos_url": "https://api.github.com/users/casparjespersen/repos", "events_url": "https://api.github.com/users/casparjespersen/events{/privacy}", "received_events_url": "https://api.github.com/users/casparjespersen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860077, "node_id": "MDU6TGFiZWwxMjE4NjAwNzc=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 257328545, "node_id": "MDU6TGFiZWwyNTczMjg1NDU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "SteadBytes", "id": 14834132, "node_id": "MDQ6VXNlcjE0ODM0MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/14834132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SteadBytes", "html_url": "https://github.com/SteadBytes", "followers_url": "https://api.github.com/users/SteadBytes/followers", "following_url": "https://api.github.com/users/SteadBytes/following{/other_user}", "gists_url": "https://api.github.com/users/SteadBytes/gists{/gist_id}", "starred_url": "https://api.github.com/users/SteadBytes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SteadBytes/subscriptions", "organizations_url": "https://api.github.com/users/SteadBytes/orgs", "repos_url": "https://api.github.com/users/SteadBytes/repos", "events_url": "https://api.github.com/users/SteadBytes/events{/privacy}", "received_events_url": "https://api.github.com/users/SteadBytes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SteadBytes", "id": 14834132, "node_id": "MDQ6VXNlcjE0ODM0MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/14834132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SteadBytes", "html_url": "https://github.com/SteadBytes", "followers_url": "https://api.github.com/users/SteadBytes/followers", "following_url": "https://api.github.com/users/SteadBytes/following{/other_user}", "gists_url": "https://api.github.com/users/SteadBytes/gists{/gist_id}", "starred_url": "https://api.github.com/users/SteadBytes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SteadBytes/subscriptions", "organizations_url": "https://api.github.com/users/SteadBytes/orgs", "repos_url": "https://api.github.com/users/SteadBytes/repos", "events_url": "https://api.github.com/users/SteadBytes/events{/privacy}", "received_events_url": "https://api.github.com/users/SteadBytes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2019-08-20T06:54:12Z", "updated_at": "2019-10-31T17:45:12Z", "closed_at": "2019-10-31T17:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "First: Thanks for a great project. Flask has an out-of-the-box logger module attached on the `Flask` object, that you can interact with the following:\r\n\r\n```python\r\nfrom flask import Flask\r\napp = Flask(__name__)\r\n\r\n@app.route(\"/\", methods=[\"GET\"])\r\ndef index():\r\n    app.logger.info(\"Received index load\")\r\n    return \"Hello, world!\"\r\n```\r\n\r\nThis has the advantage, that for instance when using [application insights](https://github.com/microsoft/ApplicationInsights-Python), you can simply attach to that application:\r\n\r\n```python\r\nfrom applicationinsights.flask.ext import AppInsights\r\n\r\n# instantiate the Flask application\r\napp = Flask(__name__)\r\napp.config['APPINSIGHTS_INSTRUMENTATIONKEY'] = '<YOUR INSTRUMENTATION KEY GOES HERE>'\r\n\r\n# log requests, traces and exceptions to the Application Insights service\r\nappinsights = AppInsights(app)\r\n```\r\n\r\nWith that in mind, I think it would be very nice to expose this logger on the `Api` or `Namespace` object:\r\n\r\n```python\r\nfrom flask_restplus import Namespace, Api\r\n\r\nfoo_api = Namespace(\"api\", path=\"/api\")\r\n\r\n@foo_api.route(\"/foo\")\r\nclass Foo(Resource):\r\n    def get(self):\r\n        foo_api.logger.info(\"Received foo load\") # or self.logger...\r\n```\r\n\r\nAnd then this should either create its own logging instance, or attach to the Flask one when connected to an `Api`:\r\n\r\n```python\r\nfrom flask import Flask\r\nfrom flask_restplus import Api\r\nfrom foobar import foo_api\r\n\r\napp = Flask(__name__)\r\napi = Api(app=app)\r\napi.add_namespace(foo_api)\r\n# this will attach the logging instance from `foo_api` through `api` to `app`\r\n```\r\n\r\nThoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/693", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/693/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/693/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/693", "id": 482415692, "node_id": "MDU6SXNzdWU0ODI0MTU2OTI=", "number": 693, "title": "Latest 0.13.0 release breaks errorhandler()", "user": {"login": "dmulter", "id": 411993, "node_id": "MDQ6VXNlcjQxMTk5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/411993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmulter", "html_url": "https://github.com/dmulter", "followers_url": "https://api.github.com/users/dmulter/followers", "following_url": "https://api.github.com/users/dmulter/following{/other_user}", "gists_url": "https://api.github.com/users/dmulter/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmulter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmulter/subscriptions", "organizations_url": "https://api.github.com/users/dmulter/orgs", "repos_url": "https://api.github.com/users/dmulter/repos", "events_url": "https://api.github.com/users/dmulter/events{/privacy}", "received_events_url": "https://api.github.com/users/dmulter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-08-19T16:43:21Z", "updated_at": "2020-03-24T08:59:15Z", "closed_at": "2019-10-28T21:22:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "My code that overrides an exception via errorhandler() that has worked forever broke with the latest 0.13.0 release. Falling back to 0.12.1 fixes the problem. Since it has been so long since there's been a release and the changelog is very hard to read, I have not been able to track down the code change that produced this problem yet.\r\n\r\n```python\r\n@api.errorhandler(SomeExistingError)\r\ndef handle_existing_exception(error):\r\n    \"\"\"Some Existing failure\"\"\"\r\n    return dict(message=f\"{error.error}: {error.description}\"), error.status_code\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/692", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/692/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/692/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/692", "id": 481983503, "node_id": "MDU6SXNzdWU0ODE5ODM1MDM=", "number": 692, "title": "[PR inside] Library can support ambiguous polymorphism mapping with slight change in Polymorphism class", "user": {"login": "idchlife", "id": 4563032, "node_id": "MDQ6VXNlcjQ1NjMwMzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4563032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idchlife", "html_url": "https://github.com/idchlife", "followers_url": "https://api.github.com/users/idchlife/followers", "following_url": "https://api.github.com/users/idchlife/following{/other_user}", "gists_url": "https://api.github.com/users/idchlife/gists{/gist_id}", "starred_url": "https://api.github.com/users/idchlife/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idchlife/subscriptions", "organizations_url": "https://api.github.com/users/idchlife/orgs", "repos_url": "https://api.github.com/users/idchlife/repos", "events_url": "https://api.github.com/users/idchlife/events{/privacy}", "received_events_url": "https://api.github.com/users/idchlife/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-18T11:36:18Z", "updated_at": "2019-10-31T17:45:32Z", "closed_at": "2019-10-31T17:45:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed errors with ambiguous error and also test for this error.\r\n\r\nClasses which inherit some base classes are basically isinstance(parent, child) == True, which raises \"too many candidates\" error.\r\n\r\nBut this can be achieved using cls.__name__ and value.__class__.__name__ instead of isinstance:\r\n\r\nhttps://github.com/noirbizarre/flask-restplus/pull/691\r\n\r\nIf I am not mistaken, test error is coupled with obligatory error for cases like I mentioned before.\r\n\r\nIf I am mistaken, please tell me, I will update my PR and issue\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/690", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/690/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/690/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/690/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/690", "id": 481933052, "node_id": "MDU6SXNzdWU0ODE5MzMwNTI=", "number": 690, "title": "@marshal_with decorator breaks documentation", "user": {"login": "markusand", "id": 12972543, "node_id": "MDQ6VXNlcjEyOTcyNTQz", "avatar_url": "https://avatars1.githubusercontent.com/u/12972543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markusand", "html_url": "https://github.com/markusand", "followers_url": "https://api.github.com/users/markusand/followers", "following_url": "https://api.github.com/users/markusand/following{/other_user}", "gists_url": "https://api.github.com/users/markusand/gists{/gist_id}", "starred_url": "https://api.github.com/users/markusand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markusand/subscriptions", "organizations_url": "https://api.github.com/users/markusand/orgs", "repos_url": "https://api.github.com/users/markusand/repos", "events_url": "https://api.github.com/users/markusand/events{/privacy}", "received_events_url": "https://api.github.com/users/markusand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-17T22:43:42Z", "updated_at": "2019-08-21T21:43:20Z", "closed_at": "2019-08-21T21:43:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried both ways to marshal the response of a Flask-SQLAlchemy model: method `marshal()` and decorator `@marshal_with()`. Both work great, but when using the decorator way (my preferred) the API documentation is broken with the message **No API definition provided**\r\n\r\n```python\r\nfrom flask_restplus import Namespace, Resource, Model, fields\r\nfrom models.users import User\r\n\r\nns = Namespace('users', description='Users endpoint')\r\n\r\nlist_users_schema = Model('UserListSchema', {\r\n    'id': fields.String,\r\n    'username': fields.String,\r\n    'name': fields.String(attribute=lambda x: x.name + ' ' + x.surname),\r\n})\r\n\r\n@ns.route('')\r\nclass ListUsers(Resource):\r\n    @ns.marshal_with(list_users_schema)\r\n    def get(self):\r\n        return User.query.all()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/688", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/688/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/688/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/688", "id": 481242415, "node_id": "MDU6SXNzdWU0ODEyNDI0MTU=", "number": 688, "title": "How do I do post a batch of resources?", "user": {"login": "RAbraham", "id": 214189, "node_id": "MDQ6VXNlcjIxNDE4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/214189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RAbraham", "html_url": "https://github.com/RAbraham", "followers_url": "https://api.github.com/users/RAbraham/followers", "following_url": "https://api.github.com/users/RAbraham/following{/other_user}", "gists_url": "https://api.github.com/users/RAbraham/gists{/gist_id}", "starred_url": "https://api.github.com/users/RAbraham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RAbraham/subscriptions", "organizations_url": "https://api.github.com/users/RAbraham/orgs", "repos_url": "https://api.github.com/users/RAbraham/repos", "events_url": "https://api.github.com/users/RAbraham/events{/privacy}", "received_events_url": "https://api.github.com/users/RAbraham/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860080, "node_id": "MDU6TGFiZWwxMjE4NjAwODA=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-08-15T16:56:48Z", "updated_at": "2019-09-01T16:02:56Z", "closed_at": "2019-09-01T15:58:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nThanks for this great library. I had a question about batch posts. I have lots of data coming in through our api for a particular resource and it's expensive to send each datum individually. How do I do batch posts in one request while integrating with the restplus architecture? If you could point me to some examples, I would be grateful.\r\n\r\nThanks,\r\nRajiv", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/682", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/682/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/682/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/682/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/682", "id": 478082511, "node_id": "MDU6SXNzdWU0NzgwODI1MTE=", "number": 682, "title": "Tests fail with pytest >= 4", "user": {"login": "smarlowucf", "id": 8006658, "node_id": "MDQ6VXNlcjgwMDY2NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8006658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarlowucf", "html_url": "https://github.com/smarlowucf", "followers_url": "https://api.github.com/users/smarlowucf/followers", "following_url": "https://api.github.com/users/smarlowucf/following{/other_user}", "gists_url": "https://api.github.com/users/smarlowucf/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarlowucf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarlowucf/subscriptions", "organizations_url": "https://api.github.com/users/smarlowucf/orgs", "repos_url": "https://api.github.com/users/smarlowucf/repos", "events_url": "https://api.github.com/users/smarlowucf/events{/privacy}", "received_events_url": "https://api.github.com/users/smarlowucf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 189065977, "node_id": "MDU6TGFiZWwxODkwNjU5Nzc=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/technical", "name": "technical", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-07T18:43:06Z", "updated_at": "2019-08-13T10:25:30Z", "closed_at": "2019-08-13T10:25:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The test suite is using a deprecated function which no longer exists in pytest as of version 4.\r\n\r\n1009 tests fail due to this warning:\r\n\r\n`RemovedInPytest4Warning: getfuncargvalue is deprecated, use getfixturevalue`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/681", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/681/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/681/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/681", "id": 476795830, "node_id": "MDU6SXNzdWU0NzY3OTU4MzA=", "number": 681, "title": "Generic document", "user": {"login": "danco8", "id": 34742433, "node_id": "MDQ6VXNlcjM0NzQyNDMz", "avatar_url": "https://avatars3.githubusercontent.com/u/34742433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danco8", "html_url": "https://github.com/danco8", "followers_url": "https://api.github.com/users/danco8/followers", "following_url": "https://api.github.com/users/danco8/following{/other_user}", "gists_url": "https://api.github.com/users/danco8/gists{/gist_id}", "starred_url": "https://api.github.com/users/danco8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danco8/subscriptions", "organizations_url": "https://api.github.com/users/danco8/orgs", "repos_url": "https://api.github.com/users/danco8/repos", "events_url": "https://api.github.com/users/danco8/events{/privacy}", "received_events_url": "https://api.github.com/users/danco8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-05T11:00:17Z", "updated_at": "2019-08-14T13:02:35Z", "closed_at": "2019-08-14T13:00:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Try to create custom decorator to all method on class\r\n\r\n```\r\ntest_blueprint = Blueprint('test', __name__)\r\ntest_api = Api(test_blueprint)\r\ntest_namespace = test_api.namespace('tests', description='Tests operations')\r\n\r\ndoc_messages = {\r\n    200: \"Success\",\r\n    400: \"Validation Error\",\r\n    500: \"Server Error\"\r\n}\r\n\r\n\r\n@test_namespace.route(\"\")\r\nclass TestApi(Resource):\r\n      method_decorators = [test_namespace.doc(responses=doc_messages)]\r\n    def get(self):\r\n        return {\"name\": 2}\r\n```\r\n\r\nNot work like: \r\n\r\n```\r\n@test_namespace.route(\"\")\r\nclass TestApi(Resource):\r\n@test_namespace.doc(responses=doc_messages)\r\n     def get(self):\r\n        return {\"name\": 2}\r\n```\r\n\r\nThe result is in the swagger, when on the first example i don't show the description of the responses but on the second example i see although they should be equal.\r\nMy goal is to use the second example to create more complex decorators that should be in all the class methods, but I don't find a way to do it without duplicate cope", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/678", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/678/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/678/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/678/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/678", "id": 475821798, "node_id": "MDU6SXNzdWU0NzU4MjE3OTg=", "number": 678, "title": "Tests require faker not pytest-faker", "user": {"login": "smarlowucf", "id": 8006658, "node_id": "MDQ6VXNlcjgwMDY2NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8006658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarlowucf", "html_url": "https://github.com/smarlowucf", "followers_url": "https://api.github.com/users/smarlowucf/followers", "following_url": "https://api.github.com/users/smarlowucf/following{/other_user}", "gists_url": "https://api.github.com/users/smarlowucf/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarlowucf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarlowucf/subscriptions", "organizations_url": "https://api.github.com/users/smarlowucf/orgs", "repos_url": "https://api.github.com/users/smarlowucf/repos", "events_url": "https://api.github.com/users/smarlowucf/events{/privacy}", "received_events_url": "https://api.github.com/users/smarlowucf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-01T18:16:42Z", "updated_at": "2019-08-13T09:00:18Z", "closed_at": "2019-08-13T09:00:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a test requirement on pytest-faker. However, the benchmark test only uses the faker package directly. The requirement I think should be on faker rather than pytest-faker.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/674", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/674/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/674/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/674/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/674", "id": 470399453, "node_id": "MDU6SXNzdWU0NzAzOTk0NTM=", "number": 674, "title": "Tests not in tarball", "user": {"login": "smarlowucf", "id": 8006658, "node_id": "MDQ6VXNlcjgwMDY2NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8006658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarlowucf", "html_url": "https://github.com/smarlowucf", "followers_url": "https://api.github.com/users/smarlowucf/followers", "following_url": "https://api.github.com/users/smarlowucf/following{/other_user}", "gists_url": "https://api.github.com/users/smarlowucf/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarlowucf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarlowucf/subscriptions", "organizations_url": "https://api.github.com/users/smarlowucf/orgs", "repos_url": "https://api.github.com/users/smarlowucf/repos", "events_url": "https://api.github.com/users/smarlowucf/events{/privacy}", "received_events_url": "https://api.github.com/users/smarlowucf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-19T15:53:42Z", "updated_at": "2019-10-31T17:46:03Z", "closed_at": "2019-10-31T17:46:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be helpful to add `tests` dir to manifest. This is mainly for downstream packaging. While the tests can be seen passing in travis it's nice to run the test suite inside each image version that it will be packaged for. This ensures the package runs against the package dependency versions which are provided in each image.\r\n\r\nFor now pulling the tarball from GitHub does provide the tests dir.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/670", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/670/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/670/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/670", "id": 468448206, "node_id": "MDU6SXNzdWU0Njg0NDgyMDY=", "number": 670, "title": "Docker ERR_NAME_RESOLUTION_FAILED for swagger.json with Nginx", "user": {"login": "5hirish", "id": 7095496, "node_id": "MDQ6VXNlcjcwOTU0OTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7095496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5hirish", "html_url": "https://github.com/5hirish", "followers_url": "https://api.github.com/users/5hirish/followers", "following_url": "https://api.github.com/users/5hirish/following{/other_user}", "gists_url": "https://api.github.com/users/5hirish/gists{/gist_id}", "starred_url": "https://api.github.com/users/5hirish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5hirish/subscriptions", "organizations_url": "https://api.github.com/users/5hirish/orgs", "repos_url": "https://api.github.com/users/5hirish/repos", "events_url": "https://api.github.com/users/5hirish/events{/privacy}", "received_events_url": "https://api.github.com/users/5hirish/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-16T05:00:31Z", "updated_at": "2019-10-16T16:37:12Z", "closed_at": "2019-10-16T16:37:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Nginx fails to resolve the `swagger.json` correctly. Instead of resolving to `http://127.0.0.1/swagger.json` it resolves to `http://flask_upstream/swagger.json`hence raising the `net::ERR_NAME_RESOLUTION_FAILED` error with docker-compose.\r\nFollownig is the config server block:\r\n```\r\nupstream flask_upstream {\r\n    server flask_server:8000;\r\n}\r\n\r\nserver {\r\n    listen 80;\r\n\r\n    server_name localhost;\r\n\r\n    location / {\r\n        proxy_pass http://flask_upstream;\r\n    }\r\n}\r\n```\r\ndocker-compose.yaml\r\n```\r\n....\r\n  flask_server:\r\n    image: foobar_api_server:latest\r\n    build:\r\n      context: .\r\n      dockerfile: Dockerfile-apiapp\r\n    container_name: flask\r\n    restart: unless-stopped\r\n    expose:\r\n      - \"8000\"\r\n    depends_on:\r\n    - postgres_database\r\n    - rabbitmq_message_broker\r\n    volumes:\r\n    - logs:/foobar/logs\r\n    env_file:\r\n    - .env\r\n\r\n  nginx_reverse_proxy:\r\n    image: nginx:mainline\r\n    container_name: nginx\r\n    restart: always\r\n    ports:\r\n    - \"80:80\"\r\n    - \"443:443\"\r\n    depends_on:\r\n      - flask_server\r\n    volumes:\r\n    - ./nginx:/etc/nginx/conf.d\r\n....\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/666", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/666/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/666/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/666", "id": 467319691, "node_id": "MDU6SXNzdWU0NjczMTk2OTE=", "number": 666, "title": "String field with enum option does not marshal the data to only enum choices", "user": {"login": "Drarok", "id": 55830, "node_id": "MDQ6VXNlcjU1ODMw", "avatar_url": "https://avatars0.githubusercontent.com/u/55830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Drarok", "html_url": "https://github.com/Drarok", "followers_url": "https://api.github.com/users/Drarok/followers", "following_url": "https://api.github.com/users/Drarok/following{/other_user}", "gists_url": "https://api.github.com/users/Drarok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Drarok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Drarok/subscriptions", "organizations_url": "https://api.github.com/users/Drarok/orgs", "repos_url": "https://api.github.com/users/Drarok/repos", "events_url": "https://api.github.com/users/Drarok/events{/privacy}", "received_events_url": "https://api.github.com/users/Drarok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-12T09:39:51Z", "updated_at": "2019-07-12T15:26:31Z", "closed_at": "2019-07-12T15:26:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using this example:\r\n\r\n```python\r\nfrom flask_restplus import Namespace, fields, marshal\r\n\r\n\r\ndef main():\r\n    api = Namespace(\"example\", validate=True)\r\n    my_model = api.model(\"MyModel\", {\r\n        \"name\": fields.String(enum=(\"FOO\", \"BAR\"))\r\n    })\r\n    data = {\r\n        \"name\": \"QUUX\",\r\n    }\r\n    marshalled = marshal(data, my_model)\r\n    print(marshalled)  # {'name': 'QUUX'}\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\nI would expect `name` to be _only_ `FOO`, `BAR`, or perhaps even `None`, but not the invalid value `QUUX`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/664", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/664/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/664/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/664", "id": 465608879, "node_id": "MDU6SXNzdWU0NjU2MDg4Nzk=", "number": 664, "title": "Delete old branches", "user": {"login": "RemiDesgrange", "id": 13271765, "node_id": "MDQ6VXNlcjEzMjcxNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/13271765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RemiDesgrange", "html_url": "https://github.com/RemiDesgrange", "followers_url": "https://api.github.com/users/RemiDesgrange/followers", "following_url": "https://api.github.com/users/RemiDesgrange/following{/other_user}", "gists_url": "https://api.github.com/users/RemiDesgrange/gists{/gist_id}", "starred_url": "https://api.github.com/users/RemiDesgrange/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RemiDesgrange/subscriptions", "organizations_url": "https://api.github.com/users/RemiDesgrange/orgs", "repos_url": "https://api.github.com/users/RemiDesgrange/repos", "events_url": "https://api.github.com/users/RemiDesgrange/events{/privacy}", "received_events_url": "https://api.github.com/users/RemiDesgrange/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-09T07:08:19Z", "updated_at": "2019-07-09T08:35:58Z", "closed_at": "2019-07-09T08:35:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saw in some PR that you don't suppress branches after merging : \r\n\r\n![image](https://user-images.githubusercontent.com/13271765/60866584-fe477c00-a228-11e9-8a91-ad1206ccb40e.png)\r\n\r\nWhat do you think about deleting old branches that have been merged ?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/661", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/661/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/661/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/661/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/661", "id": 464202516, "node_id": "MDU6SXNzdWU0NjQyMDI1MTY=", "number": 661, "title": "Mixing string and int for code in @api.response can result in \"duplicate mapping key\" in swagger", "user": {"login": "flayman", "id": 233266, "node_id": "MDQ6VXNlcjIzMzI2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/233266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flayman", "html_url": "https://github.com/flayman", "followers_url": "https://api.github.com/users/flayman/followers", "following_url": "https://api.github.com/users/flayman/following{/other_user}", "gists_url": "https://api.github.com/users/flayman/gists{/gist_id}", "starred_url": "https://api.github.com/users/flayman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flayman/subscriptions", "organizations_url": "https://api.github.com/users/flayman/orgs", "repos_url": "https://api.github.com/users/flayman/repos", "events_url": "https://api.github.com/users/flayman/events{/privacy}", "received_events_url": "https://api.github.com/users/flayman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860075, "node_id": "MDU6TGFiZWwxMjE4NjAwNzU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-04T10:55:51Z", "updated_at": "2019-09-11T15:05:26Z", "closed_at": "2019-09-11T15:05:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "It took me far too long to track down this error, which was staring me in the face. If you inherit a resource and set a response on both the parent and child using the same code but inputting one as an int and the other as a string, you get both responses in the swagger.json, which doesn't parse. A simple example:\r\n\r\n```\r\n@api.route(\"/parent\")\r\n@api.response(404, 'Not found')\r\nclass Resource1(Resource):\r\n    def get(self):\r\n        return api.payload\r\n\r\n@api.response('404', 'Also not found')\r\n@api.route(\"/child\")\r\nclass Resource2(Resource1):\r\n    def get(self):\r\n        \"\"\"\r\n        I have my own docstring.\r\n        \"\"\"\r\n        return {}\r\n```\r\nswagger.json will contain:\r\n\r\n```\r\n{\r\n    \"/child\": {\r\n        \"get\": {\r\n             \"responses\": {\r\n                 \"404\": {\r\n                     \"description\": \"Not found\"\r\n                 },\r\n                 \"404\": {\r\n                     \"description\": \"Also not found\"\r\n                 }\r\n             }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nProbably people should avoid doing this, but on the other hand the code should be coerced into a string before it is added to the dictionary, since it appears as a string key in the final json. That would solve the problem. If this is feasible, I'd also suggest that flask-restplus parses its swagger json when it starts up and raises an appropriate json parser error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/651", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/651/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/651/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/651/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/651", "id": 455808982, "node_id": "MDU6SXNzdWU0NTU4MDg5ODI=", "number": 651, "title": "References to model names are allowed to have URI illegal characters", "user": {"login": "flayman", "id": 233266, "node_id": "MDQ6VXNlcjIzMzI2Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/233266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flayman", "html_url": "https://github.com/flayman", "followers_url": "https://api.github.com/users/flayman/followers", "following_url": "https://api.github.com/users/flayman/following{/other_user}", "gists_url": "https://api.github.com/users/flayman/gists{/gist_id}", "starred_url": "https://api.github.com/users/flayman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flayman/subscriptions", "organizations_url": "https://api.github.com/users/flayman/orgs", "repos_url": "https://api.github.com/users/flayman/repos", "events_url": "https://api.github.com/users/flayman/events{/privacy}", "received_events_url": "https://api.github.com/users/flayman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-13T15:29:29Z", "updated_at": "2019-10-27T15:32:56Z", "closed_at": "2019-10-27T15:32:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the ref() function in swagger.py, model.name is formatted into an internal $ref without first ensuring URI compliance. Here's how the function looks right now:\r\n\r\n```\r\ndef ref(model):\r\n    '''Return a reference to model in definitions'''\r\n    name = model.name if isinstance(model, ModelBase) else model\r\n    return {'$ref': '#/definitions/{0}'.format(name)}\r\n```\r\n\r\nNor is the model name sanitized when the instance is constructed. The name variable falls back on the string representation of model if model.name evaluates to False, which is less likely to produce non-comforming strings, but it's still possible. This violates the [JSON Reference spec](https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03) and can create problems in swagger-ui where references do not resolve properly. It's easy to break some things in the front end just by providing a name that has slashes. It's easily fixed though. Here's my suggestion for a quick fix:\r\n\r\n```\r\ntry:\r\n   from urllib.parse import quote\r\nexcept ImportError:\r\n   from urllib import quote\r\n\r\ndef ref(model):\r\n    '''Return a reference to model in definitions'''\r\n    name = model.name if isinstance(model, ModelBase) else model\r\n    return {'$ref': '#/definitions/{0}'.format(quote(name, safe=''))}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/642", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/642/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/642/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/642", "id": 442125916, "node_id": "MDU6SXNzdWU0NDIxMjU5MTY=", "number": 642, "title": "RequestParser() for complex, nested structure", "user": {"login": "dstrigl", "id": 577250, "node_id": "MDQ6VXNlcjU3NzI1MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/577250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dstrigl", "html_url": "https://github.com/dstrigl", "followers_url": "https://api.github.com/users/dstrigl/followers", "following_url": "https://api.github.com/users/dstrigl/following{/other_user}", "gists_url": "https://api.github.com/users/dstrigl/gists{/gist_id}", "starred_url": "https://api.github.com/users/dstrigl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dstrigl/subscriptions", "organizations_url": "https://api.github.com/users/dstrigl/orgs", "repos_url": "https://api.github.com/users/dstrigl/repos", "events_url": "https://api.github.com/users/dstrigl/events{/privacy}", "received_events_url": "https://api.github.com/users/dstrigl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-09T08:58:15Z", "updated_at": "2019-05-29T09:45:33Z", "closed_at": "2019-05-20T20:15:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any hint how to formulate/use the `reqparse.RequestParser()` to parse the following complex, nested list-of-list-of-dict \"entries\" structure?\r\n\r\n```\r\n{ \"entries\": [\r\n    [{'end': '11:15', 'start': '09:45', 'state': 1},\r\n     {'end': '16:15', 'start': '13:45', 'state': 2},\r\n     ...\r\n    ],  # day 0\r\n    [{'end': '01:15', 'start': '00:45', 'state': 2},\r\n     {'end': '06:15', 'start': '05:45', 'state': 3},\r\n     ...\r\n    ],  # day 1\r\n    [{'end': '21:15', 'start': '20:45', 'state': 2},\r\n     {'end': '22:15', 'start': '21:45', 'state': 0},\r\n     ...\r\n    ],  # day 2\r\n    ...\r\n    ]}\r\n```\r\n\r\nI would like to use the `reqparse.RequestParser()` to validate the received JSON data, like:\r\n```\r\ntime_prog_parser = reqparse.RequestParser()\r\n...\r\ntime_prog_parser.add_argument(\"entries\", type=list, location=\"json\")\r\n...\r\nargs = time_prog_parser.parse_args(strict=True)\r\n```\r\nbut don't know exactly how to formulate the `add_argument(...)` calls to get a valid parser for the upper structure.\r\n\r\nThanks and regards,\r\nDaniel.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/641", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/641/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/641/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/641/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/641", "id": 442031209, "node_id": "MDU6SXNzdWU0NDIwMzEyMDk=", "number": 641, "title": "How to validate custom field", "user": {"login": "daixiang0", "id": 26538619, "node_id": "MDQ6VXNlcjI2NTM4NjE5", "avatar_url": "https://avatars2.githubusercontent.com/u/26538619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daixiang0", "html_url": "https://github.com/daixiang0", "followers_url": "https://api.github.com/users/daixiang0/followers", "following_url": "https://api.github.com/users/daixiang0/following{/other_user}", "gists_url": "https://api.github.com/users/daixiang0/gists{/gist_id}", "starred_url": "https://api.github.com/users/daixiang0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daixiang0/subscriptions", "organizations_url": "https://api.github.com/users/daixiang0/orgs", "repos_url": "https://api.github.com/users/daixiang0/repos", "events_url": "https://api.github.com/users/daixiang0/events{/privacy}", "received_events_url": "https://api.github.com/users/daixiang0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1291722786, "node_id": "MDU6TGFiZWwxMjkxNzIyNzg2", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/Needed:%20Feedback", "name": "Needed: Feedback", "color": "b27408", "default": false, "description": "Feedback needed from the author"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-09T03:20:27Z", "updated_at": "2019-05-23T05:33:29Z", "closed_at": "2019-05-23T05:33:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I create a custom field:\r\n```\r\nclass Duration(fields.String):\r\n    \"\"\"\r\n    Duration field\r\n    \"\"\"\r\n    __schema__ = {\r\n        'type': 'string',\r\n        'format': 'duration',\r\n        'example': '1s'\r\n    }\r\n```\r\nUse it in request:\r\n```\r\ntest_request.add_argument('metric', type=Duration, required=False, default='1m', help='The range of metric')\r\n```\r\n\r\nAdd `validate=True` in `api.expect`:\r\n```\r\n@api.expect(test_request, validate=True)\r\n```\r\n\r\nAdd custom `format_check`:\r\n```\r\nformat_checker = FormatChecker()\r\n\r\nduration_regex = re.compile(r'[0-9]+[smhd]')\r\n\r\n\r\n@format_checker.checks(\"duration\", ValueError)\r\ndef validate(value):\r\n    if not duration_regex.match(value):\r\n        return False\r\n    return True\r\n\r\n\r\napi = Api(version='1.0',\r\n          title='test',\r\n          format_checker=format_checker)\r\n```\r\n\r\nBut test with `http://localhost:5000/api/v1/test/metric=15maa` still pass, i want it raise ValueError since `15maa` do not match regex.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/635", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/635/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/635/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/635/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/635", "id": 439887959, "node_id": "MDU6SXNzdWU0Mzk4ODc5NTk=", "number": 635, "title": "TypeError: undefined is not an object (evaluating '_.indexOf') when using oAuth2", "user": {"login": "robertofalk", "id": 28025755, "node_id": "MDQ6VXNlcjI4MDI1NzU1", "avatar_url": "https://avatars1.githubusercontent.com/u/28025755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertofalk", "html_url": "https://github.com/robertofalk", "followers_url": "https://api.github.com/users/robertofalk/followers", "following_url": "https://api.github.com/users/robertofalk/following{/other_user}", "gists_url": "https://api.github.com/users/robertofalk/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertofalk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertofalk/subscriptions", "organizations_url": "https://api.github.com/users/robertofalk/orgs", "repos_url": "https://api.github.com/users/robertofalk/repos", "events_url": "https://api.github.com/users/robertofalk/events{/privacy}", "received_events_url": "https://api.github.com/users/robertofalk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-05-03T05:03:05Z", "updated_at": "2019-05-24T18:36:55Z", "closed_at": "2019-05-24T18:36:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm getting an error in the javascript console when trying to use oAuth2 as authorization:\r\nTypeError: undefined is not an object (evaluating '_.indexOf')\r\n\r\n```python\r\nimport os\r\nfrom flask import Flask\r\nfrom flask_restplus import Resource, Api\r\n\r\napp = Flask(__name__)\r\n\r\nauthorizations = {'oauth2': {\r\n    'type': 'oauth2',\r\n    'flow': 'accessCode',\r\n    'tokenUrl': 'https://authentication.com/oauth/token',\r\n    'scopes': {\r\n        'read': 'Grant read-only access',\r\n        'write': 'Grant read-write access'}\r\n    }\r\n}\r\n\r\napi = Api(app, version='1.0', authorizations=authorizations, security={'oauth2': 'read'})\r\n\r\n@api.route('/hello')\r\nclass HelloWorld(Resource):\r\n    def get(self):\r\n        return \"It works!!\"\r\n\r\nif __name__ == '__main__':\r\n    app_port = int(os.getenv('PORT', 5000))\r\n    app.run(host='0.0.0.0', port=app_port, debug=True)\r\n```\r\n\r\nThe popup to enter the clientid and clientsecret is correctly shown, but when I press the \"Authorize\" button, nothing happens. Checking the javascript console, I see the error above.\r\nNothing is shown on the flask (server) side, so I assume the application is not even called and this is a pure javascript error.\r\n\r\nThanks,\r\nRoberto Falk\r\n\r\nFlask              1.0.2   \r\nflask-restplus     0.12.1\r\nBrowser: Safari (macOS)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/633", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/633/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/633/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/633", "id": 439075910, "node_id": "MDU6SXNzdWU0MzkwNzU5MTA=", "number": 633, "title": "Fix Read the Docs Integration", "user": {"login": "SteadBytes", "id": 14834132, "node_id": "MDQ6VXNlcjE0ODM0MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/14834132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SteadBytes", "html_url": "https://github.com/SteadBytes", "followers_url": "https://api.github.com/users/SteadBytes/followers", "following_url": "https://api.github.com/users/SteadBytes/following{/other_user}", "gists_url": "https://api.github.com/users/SteadBytes/gists{/gist_id}", "starred_url": "https://api.github.com/users/SteadBytes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SteadBytes/subscriptions", "organizations_url": "https://api.github.com/users/SteadBytes/orgs", "repos_url": "https://api.github.com/users/SteadBytes/repos", "events_url": "https://api.github.com/users/SteadBytes/events{/privacy}", "received_events_url": "https://api.github.com/users/SteadBytes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 361866266, "node_id": "MDU6TGFiZWwzNjE4NjYyNjY=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/documentation", "name": "documentation", "color": "006b75", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "noirbizarre", "id": 15725, "node_id": "MDQ6VXNlcjE1NzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/15725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noirbizarre", "html_url": "https://github.com/noirbizarre", "followers_url": "https://api.github.com/users/noirbizarre/followers", "following_url": "https://api.github.com/users/noirbizarre/following{/other_user}", "gists_url": "https://api.github.com/users/noirbizarre/gists{/gist_id}", "starred_url": "https://api.github.com/users/noirbizarre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noirbizarre/subscriptions", "organizations_url": "https://api.github.com/users/noirbizarre/orgs", "repos_url": "https://api.github.com/users/noirbizarre/repos", "events_url": "https://api.github.com/users/noirbizarre/events{/privacy}", "received_events_url": "https://api.github.com/users/noirbizarre/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "noirbizarre", "id": 15725, "node_id": "MDQ6VXNlcjE1NzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/15725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noirbizarre", "html_url": "https://github.com/noirbizarre", "followers_url": "https://api.github.com/users/noirbizarre/followers", "following_url": "https://api.github.com/users/noirbizarre/following{/other_user}", "gists_url": "https://api.github.com/users/noirbizarre/gists{/gist_id}", "starred_url": "https://api.github.com/users/noirbizarre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noirbizarre/subscriptions", "organizations_url": "https://api.github.com/users/noirbizarre/orgs", "repos_url": "https://api.github.com/users/noirbizarre/repos", "events_url": "https://api.github.com/users/noirbizarre/events{/privacy}", "received_events_url": "https://api.github.com/users/noirbizarre/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-05-01T05:53:05Z", "updated_at": "2019-05-05T06:04:15Z", "closed_at": "2019-05-05T06:04:15Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Read the Docs has removed support for [legacy webhooks](https://docs.readthedocs.io/en/stable/webhooks.html#i-was-warned-that-my-project-won-t-automatically-build-after-april-1st). As such the documentation is not built and deployed automatically. This integration needs to be updated (requires @noirbizarre )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/632", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/632/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/632/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/632/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/632", "id": 437648708, "node_id": "MDU6SXNzdWU0Mzc2NDg3MDg=", "number": 632, "title": "KeyError: 'view_class' when I try to run the api app created with flask_restplus", "user": {"login": "PyDataBlog", "id": 29863388, "node_id": "MDQ6VXNlcjI5ODYzMzg4", "avatar_url": "https://avatars2.githubusercontent.com/u/29863388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PyDataBlog", "html_url": "https://github.com/PyDataBlog", "followers_url": "https://api.github.com/users/PyDataBlog/followers", "following_url": "https://api.github.com/users/PyDataBlog/following{/other_user}", "gists_url": "https://api.github.com/users/PyDataBlog/gists{/gist_id}", "starred_url": "https://api.github.com/users/PyDataBlog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PyDataBlog/subscriptions", "organizations_url": "https://api.github.com/users/PyDataBlog/orgs", "repos_url": "https://api.github.com/users/PyDataBlog/repos", "events_url": "https://api.github.com/users/PyDataBlog/events{/privacy}", "received_events_url": "https://api.github.com/users/PyDataBlog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1291722786, "node_id": "MDU6TGFiZWwxMjkxNzIyNzg2", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/Needed:%20Feedback", "name": "Needed: Feedback", "color": "b27408", "default": false, "description": "Feedback needed from the author"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-26T12:26:21Z", "updated_at": "2019-04-29T19:40:58Z", "closed_at": "2019-04-29T19:40:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's the code to reproduce the error:\r\n\r\n```py\r\nfrom flask import Flask\r\nfrom flask_restplus import Resource, Api\r\n\r\napp = Flask(__name__)\r\napi = Api(app=app)\r\n\r\n\r\n@api.route('/')\r\nclass Root(Resource):\r\n    def get(self):\r\n        return {'message': 'it works'}, 200\r\n\r\n\r\n@api.route('/test')\r\nclass Test(Resource):\r\n    def post(self):\r\n        pass\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```\r\n\r\nWhat did I do wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/631", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/631/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/631/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/631/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/631", "id": 437050725, "node_id": "MDU6SXNzdWU0MzcwNTA3MjU=", "number": 631, "title": "How to use add_resource with namespace ?", "user": {"login": "njcx", "id": 18710147, "node_id": "MDQ6VXNlcjE4NzEwMTQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/18710147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/njcx", "html_url": "https://github.com/njcx", "followers_url": "https://api.github.com/users/njcx/followers", "following_url": "https://api.github.com/users/njcx/following{/other_user}", "gists_url": "https://api.github.com/users/njcx/gists{/gist_id}", "starred_url": "https://api.github.com/users/njcx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/njcx/subscriptions", "organizations_url": "https://api.github.com/users/njcx/orgs", "repos_url": "https://api.github.com/users/njcx/repos", "events_url": "https://api.github.com/users/njcx/events{/privacy}", "received_events_url": "https://api.github.com/users/njcx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 257328545, "node_id": "MDU6TGFiZWwyNTczMjg1NDU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-25T07:36:17Z", "updated_at": "2019-04-29T19:33:54Z", "closed_at": "2019-04-29T19:33:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to use add_resource with namespace ?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/629", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/629/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/629/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/629", "id": 435348571, "node_id": "MDU6SXNzdWU0MzUzNDg1NzE=", "number": 629, "title": "FileStorage object seems to fail on some file types but not others.", "user": {"login": "timswiley", "id": 47091575, "node_id": "MDQ6VXNlcjQ3MDkxNTc1", "avatar_url": "https://avatars2.githubusercontent.com/u/47091575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timswiley", "html_url": "https://github.com/timswiley", "followers_url": "https://api.github.com/users/timswiley/followers", "following_url": "https://api.github.com/users/timswiley/following{/other_user}", "gists_url": "https://api.github.com/users/timswiley/gists{/gist_id}", "starred_url": "https://api.github.com/users/timswiley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timswiley/subscriptions", "organizations_url": "https://api.github.com/users/timswiley/orgs", "repos_url": "https://api.github.com/users/timswiley/repos", "events_url": "https://api.github.com/users/timswiley/events{/privacy}", "received_events_url": "https://api.github.com/users/timswiley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-20T02:50:13Z", "updated_at": "2019-04-21T20:07:01Z", "closed_at": "2019-04-21T20:07:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've written a file upload API using Flask-Restplus.   I've noticed that compressed zip files work regardless of size and load very fast.  However there are frequent failures or incredible slowness uploading exel files which was the primary intent of the application.  I ended up experimenting with zip files due to this problem and i cannot replicate the problem with zip files regardless of size.  \r\n\r\nThe specific problem is excel files of smaller sizes will upload just fine albeit slow on the same server as the app using the browser or curl.  Larger excel files say over 20mb in size have sporadic issues... Now going across the network the errors are frequent with excel files.  The curl error that comes back is 56 Rcv Failure:  Connection was reset.   However the zip files of even much larger size then the excel files work perfectly every time locally and across the network.  It just makes me think something with excel files or the the type of content is causing problems with the built in FileObject.  \r\n\r\n**Update:  i've traced the issue down so far to a single line in the reqparse.py file's source method.  The line is:\r\nvalue = getattr(request, l, None)**\r\n\r\nI put debug print before/after this statement and with an excel file it never makes it past this line.  Zip files are fine work fine and get past this everytime.  Something in the encoding throwing up ?  Not sure yet? \r\n\r\n\r\n\r\nPython3.7 64bit.,  Windows 2012 Server 64bit.  The FileStorage is from werkzeug.datastructures.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/627", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/627/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/627/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/627", "id": 434979978, "node_id": "MDU6SXNzdWU0MzQ5Nzk5Nzg=", "number": 627, "title": "nested api models and or marshal_with envelope issue.", "user": {"login": "timswiley", "id": 47091575, "node_id": "MDQ6VXNlcjQ3MDkxNTc1", "avatar_url": "https://avatars2.githubusercontent.com/u/47091575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timswiley", "html_url": "https://github.com/timswiley", "followers_url": "https://api.github.com/users/timswiley/followers", "following_url": "https://api.github.com/users/timswiley/following{/other_user}", "gists_url": "https://api.github.com/users/timswiley/gists{/gist_id}", "starred_url": "https://api.github.com/users/timswiley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timswiley/subscriptions", "organizations_url": "https://api.github.com/users/timswiley/orgs", "repos_url": "https://api.github.com/users/timswiley/repos", "events_url": "https://api.github.com/users/timswiley/events{/privacy}", "received_events_url": "https://api.github.com/users/timswiley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-18T22:13:39Z", "updated_at": "2019-04-18T23:24:57Z", "closed_at": "2019-04-18T23:24:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to implement googles standard on json rest api responses which envelopes valid response in 'data' tag and error response content with 'error' tag so the very first tag clearly identifies the content.   The valid responses are fine and marshal_with(model,envelope='data') works exactly as expected however for error messages when combining the @api.errorhandler() decorator for the error handling method marshal_with has un-expected results as if it has in its own mind a specific structure for errors.   \r\n\r\nOriginal Response\r\n```\r\n {\r\n    \"code\": 404,\r\n    \"message\": \"ID not found\"\r\n  }\r\n```\r\nbut i want the following:\r\n```\r\n{\r\n  \"error\": {\r\n    \"code\": 404,\r\n    \"message\": \"ID not found\"\r\n  }\r\n}\r\n```\r\nso i added the @api.marshal_with(error_response, envelope='error')\r\nand it adds something extra (empty \"messages\" tag)\r\n```\r\n{\r\n  \"error\": {\r\n    \"code\": 404,\r\n    \"message\": \"ID not found\"\r\n  },\r\n    \"messages\": \"\"\r\n}\r\n```\r\ni then tried to use api.model_schema to build a nested representation of the error response but then using marshal_with at all fails and i read countless posts here about that issue and issues dealing with any nested documents.   I am a bit newer to python and restplus so forgive me if im missing something basic.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/624", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/624/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/624/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/624/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/624", "id": 432156338, "node_id": "MDU6SXNzdWU0MzIxNTYzMzg=", "number": 624, "title": "Improve Development and Contribution Docs", "user": {"login": "j5awry", "id": 8875872, "node_id": "MDQ6VXNlcjg4NzU4NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8875872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j5awry", "html_url": "https://github.com/j5awry", "followers_url": "https://api.github.com/users/j5awry/followers", "following_url": "https://api.github.com/users/j5awry/following{/other_user}", "gists_url": "https://api.github.com/users/j5awry/gists{/gist_id}", "starred_url": "https://api.github.com/users/j5awry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j5awry/subscriptions", "organizations_url": "https://api.github.com/users/j5awry/orgs", "repos_url": "https://api.github.com/users/j5awry/repos", "events_url": "https://api.github.com/users/j5awry/events{/privacy}", "received_events_url": "https://api.github.com/users/j5awry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-11T17:52:12Z", "updated_at": "2019-05-10T18:13:32Z", "closed_at": "2019-05-10T18:13:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "- [x] Ensure CONTRIBUTION documentation explains all dev steps fully\r\n- [x] Ensure CONTRIBUTION doc is updated to explain pull request review standards\r\n  - [x] An issue should be created *before* a PR is submitted\r\n  - [x] number of ok's from maintainers (at least 1, preference for 2 on larger features)\r\n  - [x] maintainers should not merge their own requests\r\n  - [ ] Add issue/PR templates\r\n- [x] Update LICENSE doc as required by Akamai so I (and other Akamai employees) can contribute\r\n  - [x] Add Akamai to LICENSE as \"Other Contributions Copyright Akamai Technologies\"\r\n- [x] Update CONTRIBUTION doc to explain copyright additions, and how to properly add contributions", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/620", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/620/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/620/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/620/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/620", "id": 429011117, "node_id": "MDU6SXNzdWU0MjkwMTExMTc=", "number": 620, "title": "Missing import in quick start example ", "user": {"login": "sohailchd", "id": 3253650, "node_id": "MDQ6VXNlcjMyNTM2NTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3253650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sohailchd", "html_url": "https://github.com/sohailchd", "followers_url": "https://api.github.com/users/sohailchd/followers", "following_url": "https://api.github.com/users/sohailchd/following{/other_user}", "gists_url": "https://api.github.com/users/sohailchd/gists{/gist_id}", "starred_url": "https://api.github.com/users/sohailchd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sohailchd/subscriptions", "organizations_url": "https://api.github.com/users/sohailchd/orgs", "repos_url": "https://api.github.com/users/sohailchd/repos", "events_url": "https://api.github.com/users/sohailchd/events{/privacy}", "received_events_url": "https://api.github.com/users/sohailchd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-03T23:02:13Z", "updated_at": "2019-04-03T23:02:53Z", "closed_at": "2019-04-03T23:02:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Doc url : https://flask-restplus.readthedocs.io/en/stable/quickstart.html#resourceful-routing\r\n\r\n`from flask import Flask `\r\n should be \r\n`from flask import Flask , request `\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/617", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/617/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/617/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/617/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/617", "id": 427884520, "node_id": "MDU6SXNzdWU0Mjc4ODQ1MjA=", "number": 617, "title": "extra_requires[dev] does not exist", "user": {"login": "j5awry", "id": 8875872, "node_id": "MDQ6VXNlcjg4NzU4NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8875872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j5awry", "html_url": "https://github.com/j5awry", "followers_url": "https://api.github.com/users/j5awry/followers", "following_url": "https://api.github.com/users/j5awry/following{/other_user}", "gists_url": "https://api.github.com/users/j5awry/gists{/gist_id}", "starred_url": "https://api.github.com/users/j5awry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j5awry/subscriptions", "organizations_url": "https://api.github.com/users/j5awry/orgs", "repos_url": "https://api.github.com/users/j5awry/repos", "events_url": "https://api.github.com/users/j5awry/events{/privacy}", "received_events_url": "https://api.github.com/users/j5awry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860075, "node_id": "MDU6TGFiZWwxMjE4NjAwNzU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 257328545, "node_id": "MDU6TGFiZWwyNTczMjg1NDU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "j5awry", "id": 8875872, "node_id": "MDQ6VXNlcjg4NzU4NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8875872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j5awry", "html_url": "https://github.com/j5awry", "followers_url": "https://api.github.com/users/j5awry/followers", "following_url": "https://api.github.com/users/j5awry/following{/other_user}", "gists_url": "https://api.github.com/users/j5awry/gists{/gist_id}", "starred_url": "https://api.github.com/users/j5awry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j5awry/subscriptions", "organizations_url": "https://api.github.com/users/j5awry/orgs", "repos_url": "https://api.github.com/users/j5awry/repos", "events_url": "https://api.github.com/users/j5awry/events{/privacy}", "received_events_url": "https://api.github.com/users/j5awry/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "j5awry", "id": 8875872, "node_id": "MDQ6VXNlcjg4NzU4NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8875872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j5awry", "html_url": "https://github.com/j5awry", "followers_url": "https://api.github.com/users/j5awry/followers", "following_url": "https://api.github.com/users/j5awry/following{/other_user}", "gists_url": "https://api.github.com/users/j5awry/gists{/gist_id}", "starred_url": "https://api.github.com/users/j5awry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j5awry/subscriptions", "organizations_url": "https://api.github.com/users/j5awry/orgs", "repos_url": "https://api.github.com/users/j5awry/repos", "events_url": "https://api.github.com/users/j5awry/events{/privacy}", "received_events_url": "https://api.github.com/users/j5awry/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-04-01T19:57:01Z", "updated_at": "2019-04-19T13:04:39Z", "closed_at": "2019-04-19T13:04:15Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Issue: running `pip install -e .[dev]` works, but doesn't install the dev requirements. this is due to the missing extra, dev\r\n\r\n```\r\npip install .[dev]\r\nProcessing /Users/jchittum/dev01/flask-restplus\r\n  flask-restplus 0.12.2.dev0 does not provide the extra 'dev'\r\n```\r\n\r\nclearly missing in setup.py\r\n\r\n```\r\n    extras_require={\r\n        'test': tests_require,\r\n        'doc': doc_require,\r\n    },\r\n```\r\n\r\nAlso, develop.pip contains an entry that is not compatible with installing in this fashion (even with the very useful parser in setup.py)\r\n\r\n```\r\n-e .[test]\r\ninvoke==0.21.0\r\nflake8==3.5.0\r\nreadme-renderer==17.2\r\ntox==2.9.1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/615", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/615/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/615/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/615", "id": 426018850, "node_id": "MDU6SXNzdWU0MjYwMTg4NTA=", "number": 615, "title": "Namespaces with `doc=False` on all resources are still shown in Swagger UI", "user": {"login": "SteadBytes", "id": 14834132, "node_id": "MDQ6VXNlcjE0ODM0MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/14834132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SteadBytes", "html_url": "https://github.com/SteadBytes", "followers_url": "https://api.github.com/users/SteadBytes/followers", "following_url": "https://api.github.com/users/SteadBytes/following{/other_user}", "gists_url": "https://api.github.com/users/SteadBytes/gists{/gist_id}", "starred_url": "https://api.github.com/users/SteadBytes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SteadBytes/subscriptions", "organizations_url": "https://api.github.com/users/SteadBytes/orgs", "repos_url": "https://api.github.com/users/SteadBytes/repos", "events_url": "https://api.github.com/users/SteadBytes/events{/privacy}", "received_events_url": "https://api.github.com/users/SteadBytes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860075, "node_id": "MDU6TGFiZWwxMjE4NjAwNzU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 257328545, "node_id": "MDU6TGFiZWwyNTczMjg1NDU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/milestones/14", "html_url": "https://github.com/noirbizarre/flask-restplus/milestone/14", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/milestones/14/labels", "id": 3705368, "node_id": "MDk6TWlsZXN0b25lMzcwNTM2OA==", "number": 14, "title": "0.12.2", "description": "", "creator": {"login": "noirbizarre", "id": 15725, "node_id": "MDQ6VXNlcjE1NzI1", "avatar_url": "https://avatars0.githubusercontent.com/u/15725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noirbizarre", "html_url": "https://github.com/noirbizarre", "followers_url": "https://api.github.com/users/noirbizarre/followers", "following_url": "https://api.github.com/users/noirbizarre/following{/other_user}", "gists_url": "https://api.github.com/users/noirbizarre/gists{/gist_id}", "starred_url": "https://api.github.com/users/noirbizarre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noirbizarre/subscriptions", "organizations_url": "https://api.github.com/users/noirbizarre/orgs", "repos_url": "https://api.github.com/users/noirbizarre/repos", "events_url": "https://api.github.com/users/noirbizarre/events{/privacy}", "received_events_url": "https://api.github.com/users/noirbizarre/received_events", "type": "User", "site_admin": false}, "open_issues": 3, "closed_issues": 4, "state": "open", "created_at": "2018-10-02T10:16:15Z", "updated_at": "2019-05-06T08:41:24Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2019-03-27T15:12:34Z", "updated_at": "2019-04-16T05:40:57Z", "closed_at": "2019-04-16T05:40:57Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "## Current behaviour:\r\n- Namespaces without any resources attached are hidden from the Swagger UI - this is correct :heavy_check_mark: \r\n- Namespaces with all resources using `@namespace.route(\"\", doc=False)` show up as empty in the Swagger UI - this is undesired behaviour :negative_squared_cross_mark: \r\n\r\n## Desired Behaviour\r\n- Namespaces with all resources using `@namespace.route(\"\", doc=False)` should also be hidden from the Swagger UI as if they had no resources attached.\r\n\r\n## Example to Reproduce\r\n\r\n```python\r\nfrom flask import Flask\r\n\r\nfrom flask_restplus import Api, Namespace, Resource\r\n\r\n\r\napp = Flask(__name__)\r\napi = Api(app)\r\n\r\nnamespace_with_resources = Namespace(\"Resources\")\r\napi.add_namespace(namespace_with_resources)\r\n\r\n# your example\r\n@namespace_with_resources.route(\"/foo\", doc=False)\r\nclass MyResource(Resource):\r\n    def get(self):\r\n        return \"foo\"\r\n\r\n\r\nnamespace_without_resources = Namespace(\"No Resources\")\r\napi.add_namespace(namespace_without_resources)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(port=8080)\r\n```\r\n\r\nSwagger UI:\r\n![image](https://user-images.githubusercontent.com/14834132/55085472-a41e1300-509e-11e9-8e2a-645d72bba15c.png)\r\n\r\nThe `namespace_without_resources` is hidden from the documentation as it has no resources registered on it.\r\n\r\nThe `namespace_with_resources` is shown because it does have resources on it, however it is empty as `doc=False` is set.\r\n\r\nOriginally discovered whilst investigating #570", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/614", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/614/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/614/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/614", "id": 425968047, "node_id": "MDU6SXNzdWU0MjU5NjgwNDc=", "number": 614, "title": "@api.expect() doesn't block extraneous fields", "user": {"login": "abadyan-vonage", "id": 17905032, "node_id": "MDQ6VXNlcjE3OTA1MDMy", "avatar_url": "https://avatars0.githubusercontent.com/u/17905032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abadyan-vonage", "html_url": "https://github.com/abadyan-vonage", "followers_url": "https://api.github.com/users/abadyan-vonage/followers", "following_url": "https://api.github.com/users/abadyan-vonage/following{/other_user}", "gists_url": "https://api.github.com/users/abadyan-vonage/gists{/gist_id}", "starred_url": "https://api.github.com/users/abadyan-vonage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abadyan-vonage/subscriptions", "organizations_url": "https://api.github.com/users/abadyan-vonage/orgs", "repos_url": "https://api.github.com/users/abadyan-vonage/repos", "events_url": "https://api.github.com/users/abadyan-vonage/events{/privacy}", "received_events_url": "https://api.github.com/users/abadyan-vonage/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1291722786, "node_id": "MDU6TGFiZWwxMjkxNzIyNzg2", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/Needed:%20Feedback", "name": "Needed: Feedback", "color": "b27408", "default": false, "description": "Feedback needed from the author"}, {"id": 121860077, "node_id": "MDU6TGFiZWwxMjE4NjAwNzc=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-03-27T13:43:23Z", "updated_at": "2019-10-16T03:48:03Z", "closed_at": "2019-03-31T19:26:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Maybe I misunderstand, but it seems to me that @api.expect should filter fields not in the model or throw an error:\r\nhttps://flask-restplus.readthedocs.io/en/stable/swagger.html#the-api-expect-decorator\r\n\r\nThe current behavior is that it doesn't do that. \r\nIf it shouldn't block those fields by design, what other way do I have to not let extraneous fields into my business logic?\r\n\r\nCurrently I'm manually filtering `request.json` according to the model in expect().", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/609", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/609/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/609/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/609/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/609", "id": 424363546, "node_id": "MDU6SXNzdWU0MjQzNjM1NDY=", "number": 609, "title": "@api.expect() decorator with \"validate=False\" doesn't work", "user": {"login": "dstrigl", "id": 577250, "node_id": "MDQ6VXNlcjU3NzI1MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/577250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dstrigl", "html_url": "https://github.com/dstrigl", "followers_url": "https://api.github.com/users/dstrigl/followers", "following_url": "https://api.github.com/users/dstrigl/following{/other_user}", "gists_url": "https://api.github.com/users/dstrigl/gists{/gist_id}", "starred_url": "https://api.github.com/users/dstrigl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dstrigl/subscriptions", "organizations_url": "https://api.github.com/users/dstrigl/orgs", "repos_url": "https://api.github.com/users/dstrigl/repos", "events_url": "https://api.github.com/users/dstrigl/events{/privacy}", "received_events_url": "https://api.github.com/users/dstrigl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-22T19:17:52Z", "updated_at": "2019-07-06T19:37:12Z", "closed_at": "2019-04-08T10:03:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Corresponding to the documentation at [https://flask-restplus.readthedocs.io/en/stable/swagger.html](https://flask-restplus.readthedocs.io/en/stable/swagger.html) the following sample\r\n```\r\napi = Api(app, validate=True)\r\nresource_fields = api.model('Resource', {\r\n    'name': fields.String,\r\n})\r\n@api.route('/my-resource/<id>')\r\nclass MyResource(Resource):\r\n    # Payload validation disabled\r\n    @api.expect(resource_fields, validate=False)\r\n    def post(self):\r\n        pass`\r\n```\r\ndoesn't work as expected:\r\n\r\nThe payload validation for the POST method is active, although the decorator `@api.expect(...)` is called with `validate=False`.\r\n\r\nAfter a short look in the source code I would say that both, the function `expect` in namespace.py and the unit test `test_validation_true_on_constructor_with_override` in test_payload.py is not really correct.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/608", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/608/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/608/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/608/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/608", "id": 423202882, "node_id": "MDU6SXNzdWU0MjMyMDI4ODI=", "number": 608, "title": "Json encoder not working ", "user": {"login": "SmitSheth", "id": 19678836, "node_id": "MDQ6VXNlcjE5Njc4ODM2", "avatar_url": "https://avatars0.githubusercontent.com/u/19678836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SmitSheth", "html_url": "https://github.com/SmitSheth", "followers_url": "https://api.github.com/users/SmitSheth/followers", "following_url": "https://api.github.com/users/SmitSheth/following{/other_user}", "gists_url": "https://api.github.com/users/SmitSheth/gists{/gist_id}", "starred_url": "https://api.github.com/users/SmitSheth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SmitSheth/subscriptions", "organizations_url": "https://api.github.com/users/SmitSheth/orgs", "repos_url": "https://api.github.com/users/SmitSheth/repos", "events_url": "https://api.github.com/users/SmitSheth/events{/privacy}", "received_events_url": "https://api.github.com/users/SmitSheth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-20T11:32:29Z", "updated_at": "2020-06-01T11:56:01Z", "closed_at": "2019-03-22T11:08:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting this error : TypeError: Object of type 'ObjectId' is not JSON serializable\r\n\r\n```\r\nclass JSONEncoder(json.JSONEncoder):\r\n    ''' extend json-encoder class'''\r\n\r\n    def default(self, o):\r\n        if isinstance(o, ObjectId):\r\n            return str(o)\r\n        if isinstance(o, set):\r\n            return list(o)\r\n        if isinstance(o, datetime.datetime):\r\n            return str(o)\r\n        return json.JSONEncoder.default(self, o)\r\n\r\napp = Flask(__name__)\r\napp.config['MONGO_URI'] = config['databaseUrl'] +config['databaseName']\r\napp.json_encoder = JSONEncoder\r\nmongo = PyMongo(app)\r\n\r\napi = Api(app=app,version='1.0', title='Drishti API',\r\n    description='Apis description')\r\n\r\n@api.route('/data')\r\nclass Test(Resource):\r\ndef get(self):\r\n        query = {}\r\n        result = list(mongo.db.data.find(query))\r\n        return result, 200\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/605", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/605/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/605/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/605/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/605", "id": 419968936, "node_id": "MDU6SXNzdWU0MTk5Njg5MzY=", "number": 605, "title": "Integrating database (mysql) with Flask-restplus", "user": {"login": "NiharikaSinghal", "id": 24478732, "node_id": "MDQ6VXNlcjI0NDc4NzMy", "avatar_url": "https://avatars3.githubusercontent.com/u/24478732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NiharikaSinghal", "html_url": "https://github.com/NiharikaSinghal", "followers_url": "https://api.github.com/users/NiharikaSinghal/followers", "following_url": "https://api.github.com/users/NiharikaSinghal/following{/other_user}", "gists_url": "https://api.github.com/users/NiharikaSinghal/gists{/gist_id}", "starred_url": "https://api.github.com/users/NiharikaSinghal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NiharikaSinghal/subscriptions", "organizations_url": "https://api.github.com/users/NiharikaSinghal/orgs", "repos_url": "https://api.github.com/users/NiharikaSinghal/repos", "events_url": "https://api.github.com/users/NiharikaSinghal/events{/privacy}", "received_events_url": "https://api.github.com/users/NiharikaSinghal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-12T12:51:23Z", "updated_at": "2019-03-12T16:13:31Z", "closed_at": "2019-03-12T16:13:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the flask and flask_restplus to build an rest api in python. The directory structure i followed is same in the link below under the heading Multiple APIs with reusable namespaces\r\n\r\nhttps://flask-restplus.readthedocs.io/en/stable/scaling.html\r\n\r\nNow I am trying to add mySql database connection and for that I used the following code in app.py\r\n\r\nfrom flaskext.mysql import MySQL\r\nmysql = MySQL()\r\napp.config['MYSQL_DATABASE_USER'] = 'name'\r\napp.config['MYSQL_DATABASE_PASSWORD'] = 'test'\r\napp.config['MYSQL_DATABASE_DB'] = 'textclassifier'\r\napp.config['MYSQL_DATABASE_HOST'] = 'localhost'\r\nmysql.init_app(app)\r\nI tried using mysql object through\r\n\r\nfrom app import mysql \r\nwhich is wrong, i read the whole document but I could not find a way to add the mysql connection without changing the structure.\r\n\r\nDoes anyone has an idea how i can solve this ? \r\nThe same posted the same question on stackoverflow, but I have not received any answer till now and nor on chat\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/603", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/603/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/603/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/603/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/603", "id": 418359268, "node_id": "MDU6SXNzdWU0MTgzNTkyNjg=", "number": 603, "title": "How to use api.expect with validate=True for own date-time type?", "user": {"login": "nobodyman1", "id": 24212360, "node_id": "MDQ6VXNlcjI0MjEyMzYw", "avatar_url": "https://avatars2.githubusercontent.com/u/24212360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nobodyman1", "html_url": "https://github.com/nobodyman1", "followers_url": "https://api.github.com/users/nobodyman1/followers", "following_url": "https://api.github.com/users/nobodyman1/following{/other_user}", "gists_url": "https://api.github.com/users/nobodyman1/gists{/gist_id}", "starred_url": "https://api.github.com/users/nobodyman1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nobodyman1/subscriptions", "organizations_url": "https://api.github.com/users/nobodyman1/orgs", "repos_url": "https://api.github.com/users/nobodyman1/repos", "events_url": "https://api.github.com/users/nobodyman1/events{/privacy}", "received_events_url": "https://api.github.com/users/nobodyman1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-07T15:07:44Z", "updated_at": "2019-03-14T08:09:10Z", "closed_at": "2019-03-14T07:43:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wan\u00b4t to check my own date format, for example `'2019-03-07T15:40:01'`.\r\nHere is how to generate it:\r\n```\r\nfrom datetime import datetime\r\ndatetime.now().isoformat(timespec='seconds')\r\n```\r\nI found some useful information in issue #204.\r\n\r\napi object:\r\n```\r\nfrom jsonschema import FormatChecker\r\napi = Api(blueprint,\r\n    title='...',\r\n    format_checker=FormatChecker()\r\n)\r\n```\r\n\r\ndata model:\r\n```\r\ntestdata = api.model('TestData', {\r\n    'timestamp': fields.DateTime(required=True)\r\n})\r\n```\r\n\r\ntest class:\r\n```\r\n@api.route('/test', methods=[\"post\"])\r\nclass Test(Resource):\r\n    @api.expect(testdata, validate=True)\r\n    def post(self):\r\n        '''Test'''\r\n        return\r\n```\r\n\r\nIf I test it with\r\n```\r\n{\r\n  \"timestamp\": \"2019-03-01T11:22:34\"\r\n}\r\n```\r\nit fails, because the `date-time` format requires the letter `Z` at the end.\r\nBut I wan\u00b4t to use my own format.\r\n\r\n- I think I have to extend the FormatChecker with a new method. Any hints how to implement this?\r\n- Where is the mapping between `fields.DateTime` and `date-time` format?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/595", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/595/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/595/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/595/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/595", "id": 413779711, "node_id": "MDU6SXNzdWU0MTM3Nzk3MTE=", "number": 595, "title": "How to set base url for swagger with flask_restplus?", "user": {"login": "vivaldus", "id": 39011732, "node_id": "MDQ6VXNlcjM5MDExNzMy", "avatar_url": "https://avatars0.githubusercontent.com/u/39011732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vivaldus", "html_url": "https://github.com/vivaldus", "followers_url": "https://api.github.com/users/vivaldus/followers", "following_url": "https://api.github.com/users/vivaldus/following{/other_user}", "gists_url": "https://api.github.com/users/vivaldus/gists{/gist_id}", "starred_url": "https://api.github.com/users/vivaldus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vivaldus/subscriptions", "organizations_url": "https://api.github.com/users/vivaldus/orgs", "repos_url": "https://api.github.com/users/vivaldus/repos", "events_url": "https://api.github.com/users/vivaldus/events{/privacy}", "received_events_url": "https://api.github.com/users/vivaldus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860080, "node_id": "MDU6TGFiZWwxMjE4NjAwODA=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-24T04:15:11Z", "updated_at": "2019-04-29T19:34:30Z", "closed_at": "2019-04-29T19:34:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I posted this question to [SO](https://stackoverflow.com/questions/54837636/how-to-set-base-url-for-swagger-with-flask-restplus) but haven't got any responses yet. In short: is there a way to get `flask_restplus` to serve up the `swaggerui` from other than the root url? (I'm trying to serve a flask api through an apache server using ProxyPass.)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/592", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/592/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/592/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/592/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/592", "id": 410387548, "node_id": "MDU6SXNzdWU0MTAzODc1NDg=", "number": 592, "title": "sqlalchemy core how to pass an array of values to sql values table", "user": {"login": "blstdmi", "id": 16188904, "node_id": "MDQ6VXNlcjE2MTg4OTA0", "avatar_url": "https://avatars0.githubusercontent.com/u/16188904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blstdmi", "html_url": "https://github.com/blstdmi", "followers_url": "https://api.github.com/users/blstdmi/followers", "following_url": "https://api.github.com/users/blstdmi/following{/other_user}", "gists_url": "https://api.github.com/users/blstdmi/gists{/gist_id}", "starred_url": "https://api.github.com/users/blstdmi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blstdmi/subscriptions", "organizations_url": "https://api.github.com/users/blstdmi/orgs", "repos_url": "https://api.github.com/users/blstdmi/repos", "events_url": "https://api.github.com/users/blstdmi/events{/privacy}", "received_events_url": "https://api.github.com/users/blstdmi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-14T16:35:57Z", "updated_at": "2019-02-16T20:29:35Z", "closed_at": "2019-02-16T20:29:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "![dabusllby7e](https://user-images.githubusercontent.com/16188904/52801603-4b1a9280-308f-11e9-83ed-ad8b1c34e16c.jpg)\r\nvalues (dict or list)!? now I write by hand, but how to pass\r\nhow to pass through a parameter?\r\nor how should I do?\r\nthe table T1 I have is an array of data, until it turned out the only option to do an array to a string..\r\n```\r\na = (12092104567,'\u0410\u043a\u0443\u043b\u0438\u043d\u0430')\r\nb = (23424,'\u0431\u0443\u043c')\r\nc = str(a) +\",\"+ str(b)\r\nresult = connection.execute(\"select * from   ( values \"+c+\") as T1 LEFT JOIN item ON T1.column1 = item.kod\").fetchall()\r\n```\r\n\r\nquestion an array of data can be passed to a table via a @value table or a #temporary table.\r\nthe value method seems to be a modern approach?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/582", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/582/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/582/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/582", "id": 405919352, "node_id": "MDU6SXNzdWU0MDU5MTkzNTI=", "number": 582, "title": "Custom JWT/Bearer in header", "user": {"login": "Lomomn", "id": 8727952, "node_id": "MDQ6VXNlcjg3Mjc5NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8727952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lomomn", "html_url": "https://github.com/Lomomn", "followers_url": "https://api.github.com/users/Lomomn/followers", "following_url": "https://api.github.com/users/Lomomn/following{/other_user}", "gists_url": "https://api.github.com/users/Lomomn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lomomn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lomomn/subscriptions", "organizations_url": "https://api.github.com/users/Lomomn/orgs", "repos_url": "https://api.github.com/users/Lomomn/repos", "events_url": "https://api.github.com/users/Lomomn/events{/privacy}", "received_events_url": "https://api.github.com/users/Lomomn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-02T00:02:19Z", "updated_at": "2019-02-02T01:47:33Z", "closed_at": "2019-02-02T01:47:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't seem to allow for custom JWT/Bearer based auth as no matter what I put in the authorization box, I will always get a 200 response. Am I missing something? I have scoured the docs and source code for a while and I can't find anything that looks like it would allow for me to use my own security implementation.  \r\n\r\nIs there a way to make my own decorator which auths using the bearer token in the header? Again, this isn't something that I can find in the docs or I'm just not having any luck finding it.  \r\n\r\nThanks :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/581", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/581/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/581/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/581", "id": 405844487, "node_id": "MDU6SXNzdWU0MDU4NDQ0ODc=", "number": 581, "title": "url_for with blueprints using namespaces", "user": {"login": "Lomomn", "id": 8727952, "node_id": "MDQ6VXNlcjg3Mjc5NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8727952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lomomn", "html_url": "https://github.com/Lomomn", "followers_url": "https://api.github.com/users/Lomomn/followers", "following_url": "https://api.github.com/users/Lomomn/following{/other_user}", "gists_url": "https://api.github.com/users/Lomomn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lomomn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lomomn/subscriptions", "organizations_url": "https://api.github.com/users/Lomomn/orgs", "repos_url": "https://api.github.com/users/Lomomn/repos", "events_url": "https://api.github.com/users/Lomomn/events{/privacy}", "received_events_url": "https://api.github.com/users/Lomomn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860080, "node_id": "MDU6TGFiZWwxMjE4NjAwODA=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-01T19:36:46Z", "updated_at": "2019-05-04T15:13:14Z", "closed_at": "2019-05-04T15:13:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm following this format: https://flask-restplus.readthedocs.io/en/stable/scaling.html?highlight=url_for#multiple-apis-with-reusable-namespaces   \r\n\r\nI want to use url_for with this, but it's not clear what I should be importing and using with url_for. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/570", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/570/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/570/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/570/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/570", "id": 398292331, "node_id": "MDU6SXNzdWUzOTgyOTIzMzE=", "number": 570, "title": "Namespace tags without attached resources are not hidden from the documentation", "user": {"login": "lextiz", "id": 1011830, "node_id": "MDQ6VXNlcjEwMTE4MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1011830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lextiz", "html_url": "https://github.com/lextiz", "followers_url": "https://api.github.com/users/lextiz/followers", "following_url": "https://api.github.com/users/lextiz/following{/other_user}", "gists_url": "https://api.github.com/users/lextiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/lextiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lextiz/subscriptions", "organizations_url": "https://api.github.com/users/lextiz/orgs", "repos_url": "https://api.github.com/users/lextiz/repos", "events_url": "https://api.github.com/users/lextiz/events{/privacy}", "received_events_url": "https://api.github.com/users/lextiz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1291722786, "node_id": "MDU6TGFiZWwxMjkxNzIyNzg2", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/Needed:%20Feedback", "name": "Needed: Feedback", "color": "b27408", "default": false, "description": "Feedback needed from the author"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2019-01-11T13:38:29Z", "updated_at": "2019-07-23T06:46:16Z", "closed_at": "2019-03-27T15:13:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Docs](https://flask-restplus.readthedocs.io/en/stable/swagger.html#hiding-from-documentation) say that:\r\n\r\n> Namespace tags without attached resources will be hidden automatically from the documentation.\r\n\r\nWhich is not not true. Steps to reproduce:\r\n1. Create a namespace, that has a single resource implemented by class\r\n1. Add the following annotation ```@my_namespace.route('/endpoint', doc=False)```\r\n1. Swagger UI will have an empty entry for the namespace", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/569", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/569/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/569/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/569/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/569", "id": 397019705, "node_id": "MDU6SXNzdWUzOTcwMTk3MDU=", "number": 569, "title": "Model \"required=True\" is ignored on POST request", "user": {"login": "Lomomn", "id": 8727952, "node_id": "MDQ6VXNlcjg3Mjc5NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/8727952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lomomn", "html_url": "https://github.com/Lomomn", "followers_url": "https://api.github.com/users/Lomomn/followers", "following_url": "https://api.github.com/users/Lomomn/following{/other_user}", "gists_url": "https://api.github.com/users/Lomomn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lomomn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lomomn/subscriptions", "organizations_url": "https://api.github.com/users/Lomomn/orgs", "repos_url": "https://api.github.com/users/Lomomn/repos", "events_url": "https://api.github.com/users/Lomomn/events{/privacy}", "received_events_url": "https://api.github.com/users/Lomomn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-08T17:59:00Z", "updated_at": "2019-01-09T14:11:42Z", "closed_at": "2019-01-09T14:11:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a model defined like this:\r\n\r\n```python\r\nmodel = api.model('User', {\r\n    'username': fields.String(required=True, description='Username for the user'),\r\n    'password': fields.String(required=True, description='Password for the user')\r\n})\r\n```\r\n\r\nI am using a route defined like this:\r\n\r\n```python\r\n@api.route('/users')\r\nclass UsersResource(Resource):\r\n    @api.expect(model)\r\n    @api.marshal_with(model)\r\n    def post(self):\r\n        '''Create a new user'''\r\n        data = api.payload\r\n        return {'username': data['username'], 'password': data['password']}    \r\n```\r\n\r\nWhen I use Swagger UI to test my resource with a POST, I was expecting the correct response (400, 422 etc), but instead the method body tries to run and causes an error and then returns 500 to Swagger UI:\r\n\r\n```bash\r\nbackend_1   |   File \"./api/__init__.py\", line 19, in post\r\nbackend_1   |     return {'username': data['username'], 'password': data['password']}\r\nbackend_1   | KeyError: 'password'\r\n```\r\nIs my understanding of the documentation incorrect?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/567", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/567/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/567/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/567/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/567", "id": 394296073, "node_id": "MDU6SXNzdWUzOTQyOTYwNzM=", "number": 567, "title": "Error loading swagger UI when flask restplus app deployed to nginx web server", "user": {"login": "sanfx", "id": 2231415, "node_id": "MDQ6VXNlcjIyMzE0MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2231415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanfx", "html_url": "https://github.com/sanfx", "followers_url": "https://api.github.com/users/sanfx/followers", "following_url": "https://api.github.com/users/sanfx/following{/other_user}", "gists_url": "https://api.github.com/users/sanfx/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanfx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanfx/subscriptions", "organizations_url": "https://api.github.com/users/sanfx/orgs", "repos_url": "https://api.github.com/users/sanfx/repos", "events_url": "https://api.github.com/users/sanfx/events{/privacy}", "received_events_url": "https://api.github.com/users/sanfx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 361866266, "node_id": "MDU6TGFiZWwzNjE4NjYyNjY=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/documentation", "name": "documentation", "color": "006b75", "default": true, "description": null}, {"id": 121860076, "node_id": "MDU6TGFiZWwxMjE4NjAwNzY=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-27T05:11:46Z", "updated_at": "2019-03-27T09:34:26Z", "closed_at": "2019-03-27T09:34:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wrote REST API gateway using flask-restplus plugin, I tested it locally it work and even the swagger documentation loads normally but when I try to run the website on server\r\n\r\nit works opens in the browser but swagger documentation doesnt shows up in browser console I can see the below error: \r\n\r\n\r\n![Image of Yaktocat](https://i.stack.imgur.com/HEvLp.png)\r\n\r\nHere is my site nginx configuration: sites-available $ vi clinic_backend\r\n\r\n```\r\nserver {\r\n        listen 80 default_server;\r\n        listen [::]:80;\r\n\r\n        root /var/www/html;\r\n\r\n        server_name example.com;\r\n\r\n        location /static {\r\n            alias /var/www/html/static/;\r\n        }\r\n\r\n        location / {\r\n            try_files $uri @wsgi;\r\n        }\r\n\r\n        location @wsgi {\r\n            proxy_pass http://unix:/tmp/gunicorn.sock;\r\n            include proxy_params;\r\n        }\r\n\r\n        location ~* .(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {\r\n            access_log off;\r\n            log_not_found off;\r\n            expires max;\r\n        }\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/565", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/565/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/565/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/565/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/565", "id": 392191893, "node_id": "MDU6SXNzdWUzOTIxOTE4OTM=", "number": 565, "title": "applying nginx with ssl resulting swagger says No API definition provided.", "user": {"login": "bilalbayasut", "id": 3622158, "node_id": "MDQ6VXNlcjM2MjIxNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3622158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bilalbayasut", "html_url": "https://github.com/bilalbayasut", "followers_url": "https://api.github.com/users/bilalbayasut/followers", "following_url": "https://api.github.com/users/bilalbayasut/following{/other_user}", "gists_url": "https://api.github.com/users/bilalbayasut/gists{/gist_id}", "starred_url": "https://api.github.com/users/bilalbayasut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bilalbayasut/subscriptions", "organizations_url": "https://api.github.com/users/bilalbayasut/orgs", "repos_url": "https://api.github.com/users/bilalbayasut/repos", "events_url": "https://api.github.com/users/bilalbayasut/events{/privacy}", "received_events_url": "https://api.github.com/users/bilalbayasut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-12-18T14:53:28Z", "updated_at": "2020-02-18T10:10:22Z", "closed_at": "2018-12-20T03:50:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have implemented nginx and ssl , but when I run the swagger UI it says No API definition provided", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/563", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/563/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/563/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/563", "id": 389250766, "node_id": "MDU6SXNzdWUzODkyNTA3NjY=", "number": 563, "title": "Flask Swagger does not display JSON Schema models correctly. [SOLVED]", "user": {"login": "mkorycinski", "id": 770391, "node_id": "MDQ6VXNlcjc3MDM5MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/770391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkorycinski", "html_url": "https://github.com/mkorycinski", "followers_url": "https://api.github.com/users/mkorycinski/followers", "following_url": "https://api.github.com/users/mkorycinski/following{/other_user}", "gists_url": "https://api.github.com/users/mkorycinski/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkorycinski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkorycinski/subscriptions", "organizations_url": "https://api.github.com/users/mkorycinski/orgs", "repos_url": "https://api.github.com/users/mkorycinski/repos", "events_url": "https://api.github.com/users/mkorycinski/events{/privacy}", "received_events_url": "https://api.github.com/users/mkorycinski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-10T11:07:39Z", "updated_at": "2018-12-10T11:47:45Z", "closed_at": "2018-12-10T11:47:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Issue solved, sorry.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/560", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/560/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/560/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/560", "id": 385368518, "node_id": "MDU6SXNzdWUzODUzNjg1MTg=", "number": 560, "title": "Can't install development dependencies with documentation instructions", "user": {"login": "hygorxaraujo", "id": 4503257, "node_id": "MDQ6VXNlcjQ1MDMyNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4503257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hygorxaraujo", "html_url": "https://github.com/hygorxaraujo", "followers_url": "https://api.github.com/users/hygorxaraujo/followers", "following_url": "https://api.github.com/users/hygorxaraujo/following{/other_user}", "gists_url": "https://api.github.com/users/hygorxaraujo/gists{/gist_id}", "starred_url": "https://api.github.com/users/hygorxaraujo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hygorxaraujo/subscriptions", "organizations_url": "https://api.github.com/users/hygorxaraujo/orgs", "repos_url": "https://api.github.com/users/hygorxaraujo/repos", "events_url": "https://api.github.com/users/hygorxaraujo/events{/privacy}", "received_events_url": "https://api.github.com/users/hygorxaraujo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-28T17:05:10Z", "updated_at": "2019-04-19T13:07:00Z", "closed_at": "2019-04-19T13:07:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the [contribution guide](https://flask-restplus.readthedocs.io/en/latest/contributing.html), to install the development dependencies we should run `pip install -e .[dev]`. When I execute the command I get the following warning: \r\n\r\n> flask-restplus 0.12.2.dev0 does not provide the extra 'dev'\r\n\r\nSome packages are installed, but not everything listed in requirements/develop.pip. Here is the result of pip freeze:\r\n```bash\r\n$ pip freeze\r\naniso8601==4.0.1\r\nClick==7.0\r\nFlask==1.0.2\r\n-e git+git@github.com:hygorxaraujo/flask-restplus.git@a8f35823fe40b2c7385632a2ad6b35b26467402c#egg=flask_restplus\r\nitsdangerous==1.1.0\r\nJinja2==2.10\r\njsonschema==2.6.0\r\nMarkupSafe==1.1.0\r\npytz==2018.7\r\nsix==1.11.0\r\nWerkzeug==0.14.1\r\n```\r\nSteps to reproduce:\r\n1. Fork flask-restplus repository in GitHub\r\n2. Clone forked repository\r\n3. Create new branch `git checkout -b new-branch`\r\n4. Run `pip install -e .[dev]`\r\n\r\nAm I missing something or is the documentation outdated?\r\nPython: 3.6.7\r\nFlask-Restplus: 0.12.2.dev", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/557", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/557/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/557/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/557/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/557", "id": 384637132, "node_id": "MDU6SXNzdWUzODQ2MzcxMzI=", "number": 557, "title": "swagger.json not loading on Production-500 status code", "user": {"login": "rootVIII", "id": 30498791, "node_id": "MDQ6VXNlcjMwNDk4Nzkx", "avatar_url": "https://avatars2.githubusercontent.com/u/30498791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rootVIII", "html_url": "https://github.com/rootVIII", "followers_url": "https://api.github.com/users/rootVIII/followers", "following_url": "https://api.github.com/users/rootVIII/following{/other_user}", "gists_url": "https://api.github.com/users/rootVIII/gists{/gist_id}", "starred_url": "https://api.github.com/users/rootVIII/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rootVIII/subscriptions", "organizations_url": "https://api.github.com/users/rootVIII/orgs", "repos_url": "https://api.github.com/users/rootVIII/repos", "events_url": "https://api.github.com/users/rootVIII/events{/privacy}", "received_events_url": "https://api.github.com/users/rootVIII/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-27T06:00:49Z", "updated_at": "2018-11-28T02:11:08Z", "closed_at": "2018-11-28T02:11:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/554", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/554/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/554/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/554", "id": 381146630, "node_id": "MDU6SXNzdWUzODExNDY2MzA=", "number": 554, "title": "ps", "user": {"login": "yudarik", "id": 4311544, "node_id": "MDQ6VXNlcjQzMTE1NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4311544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yudarik", "html_url": "https://github.com/yudarik", "followers_url": "https://api.github.com/users/yudarik/followers", "following_url": "https://api.github.com/users/yudarik/following{/other_user}", "gists_url": "https://api.github.com/users/yudarik/gists{/gist_id}", "starred_url": "https://api.github.com/users/yudarik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yudarik/subscriptions", "organizations_url": "https://api.github.com/users/yudarik/orgs", "repos_url": "https://api.github.com/users/yudarik/repos", "events_url": "https://api.github.com/users/yudarik/events{/privacy}", "received_events_url": "https://api.github.com/users/yudarik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-15T12:48:58Z", "updated_at": "2019-03-27T14:49:11Z", "closed_at": "2019-03-27T14:49:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/551", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/551/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/551/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/551", "id": 377828964, "node_id": "MDU6SXNzdWUzNzc4Mjg5NjQ=", "number": 551, "title": "Parsing of a list of lists", "user": {"login": "tschm", "id": 2046079, "node_id": "MDQ6VXNlcjIwNDYwNzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2046079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschm", "html_url": "https://github.com/tschm", "followers_url": "https://api.github.com/users/tschm/followers", "following_url": "https://api.github.com/users/tschm/following{/other_user}", "gists_url": "https://api.github.com/users/tschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschm/subscriptions", "organizations_url": "https://api.github.com/users/tschm/orgs", "repos_url": "https://api.github.com/users/tschm/repos", "events_url": "https://api.github.com/users/tschm/events{/privacy}", "received_events_url": "https://api.github.com/users/tschm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 121860080, "node_id": "MDU6TGFiZWwxMjE4NjAwODA=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-06T12:39:46Z", "updated_at": "2019-03-27T15:03:05Z", "closed_at": "2019-03-27T15:02:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here's a little issue I struggle with:\r\ndata = {'series': [[1356998400000, 1673.78], [1357084800000, 1686.9], [1357171200000, 1663.95]}\r\nCurrently I do this the old-school way:\r\n\r\n```\r\n@api.route('/drawdown')\r\nclass Drawdown(Resource):\r\n    def post(self):\r\n        data = json.loads(request.data)\r\n        assert isinstance(data, dict)\r\n        assert \"series\" in data.keys()\r\n\r\n        # series is an array [[t1,v1],[t2,v2],...]\r\n        data = HighchartsSeries.parse(data[\"series\"])\r\n```\r\n\r\nI thought I could take advantage of the \r\n\r\n```\r\nparser = api.parser()\r\nparser.add_argument('series', type=HighchartsSeries.parse, help='some series', required=True, location=\"form\")\r\n```\r\n\r\nparser, but no luck so far...\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/547", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/547/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/547/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/547", "id": 376229901, "node_id": "MDU6SXNzdWUzNzYyMjk5MDE=", "number": 547, "title": "Could any help me to figure out how to list all of the api and url?", "user": {"login": "hanleilei", "id": 1511915, "node_id": "MDQ6VXNlcjE1MTE5MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1511915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanleilei", "html_url": "https://github.com/hanleilei", "followers_url": "https://api.github.com/users/hanleilei/followers", "following_url": "https://api.github.com/users/hanleilei/following{/other_user}", "gists_url": "https://api.github.com/users/hanleilei/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanleilei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanleilei/subscriptions", "organizations_url": "https://api.github.com/users/hanleilei/orgs", "repos_url": "https://api.github.com/users/hanleilei/repos", "events_url": "https://api.github.com/users/hanleilei/events{/privacy}", "received_events_url": "https://api.github.com/users/hanleilei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-01T02:32:50Z", "updated_at": "2018-12-18T08:30:11Z", "closed_at": "2018-11-01T03:43:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI just want to list all of the url of api, just as we can see the swagger webpage on browser, I tried to find out the method and got this: http://flask.pocoo.org/snippets/117/ and https://stackoverflow.com/questions/13317536/get-a-list-of-all-routes-defined-in-the-app, and save all of them into a dict.\r\n\r\nCould anyone share some more elegant method about it in flask_restplus package??\r\n\r\nGreat appreciate\r\nOliver", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/545", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/545/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/545/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/545/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/545", "id": 374754565, "node_id": "MDU6SXNzdWUzNzQ3NTQ1NjU=", "number": 545, "title": "Response marshalling choices for fields.String", "user": {"login": "estebancortero", "id": 35761012, "node_id": "MDQ6VXNlcjM1NzYxMDEy", "avatar_url": "https://avatars2.githubusercontent.com/u/35761012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebancortero", "html_url": "https://github.com/estebancortero", "followers_url": "https://api.github.com/users/estebancortero/followers", "following_url": "https://api.github.com/users/estebancortero/following{/other_user}", "gists_url": "https://api.github.com/users/estebancortero/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebancortero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebancortero/subscriptions", "organizations_url": "https://api.github.com/users/estebancortero/orgs", "repos_url": "https://api.github.com/users/estebancortero/repos", "events_url": "https://api.github.com/users/estebancortero/events{/privacy}", "received_events_url": "https://api.github.com/users/estebancortero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-28T13:34:31Z", "updated_at": "2018-10-31T19:45:14Z", "closed_at": "2018-10-31T19:45:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm a big fan of flask-restplus and use it to build my backend API. For request parsing, there is a convenient option `choices=()` within `parser.add_argument()`, which allows to specify allowed choices of a given argument. \r\n\r\nIs something similar available for response marshalling within `fields.String()` (within `api.model()`)? `choices` does not seem to work for response marshalling and I couldn't find anything in the docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/541", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/541/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/541/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/541/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/541", "id": 371449697, "node_id": "MDU6SXNzdWUzNzE0NDk2OTc=", "number": 541, "title": "Can it declare more than one model?", "user": {"login": "kafey", "id": 8663198, "node_id": "MDQ6VXNlcjg2NjMxOTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8663198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kafey", "html_url": "https://github.com/kafey", "followers_url": "https://api.github.com/users/kafey/followers", "following_url": "https://api.github.com/users/kafey/following{/other_user}", "gists_url": "https://api.github.com/users/kafey/gists{/gist_id}", "starred_url": "https://api.github.com/users/kafey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kafey/subscriptions", "organizations_url": "https://api.github.com/users/kafey/orgs", "repos_url": "https://api.github.com/users/kafey/repos", "events_url": "https://api.github.com/users/kafey/events{/privacy}", "received_events_url": "https://api.github.com/users/kafey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-18T09:53:19Z", "updated_at": "2018-10-19T03:24:49Z", "closed_at": "2018-10-19T03:24:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I declare 2 models like this \r\n```\r\nfields = api.model('MyModel', {\r\n    'id_siswa': fields.String(),\r\n    'nama_siswa': fields.String(),\r\n    'kelas': fields.String(),\r\n    'hasil': fields.List(fields.Integer),\r\n    'id_penilai': fields.String(),\r\n    'nama_penilai':fields.String(),\r\n})\r\n\r\nindicators = api.model('ModelIndikator', {\r\n    'sikap_spritual': fields.String(),\r\n    'sikap_sosial': fields.String(),\r\n})\r\n\r\n```\r\n\r\nwith @api.doc()\r\n\r\nbut get error\r\n`Traceback (most recent call last): File \"app.py\", line 40, in <module> 'sikap_spritual': fields.String(), AttributeError: 'Model' object has no attribute 'String'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/529", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/529/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/529/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/529", "id": 365183971, "node_id": "MDU6SXNzdWUzNjUxODM5NzE=", "number": 529, "title": "Namespace 'name' argument part of api route", "user": {"login": "MainaKamau92", "id": 26567020, "node_id": "MDQ6VXNlcjI2NTY3MDIw", "avatar_url": "https://avatars0.githubusercontent.com/u/26567020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MainaKamau92", "html_url": "https://github.com/MainaKamau92", "followers_url": "https://api.github.com/users/MainaKamau92/followers", "following_url": "https://api.github.com/users/MainaKamau92/following{/other_user}", "gists_url": "https://api.github.com/users/MainaKamau92/gists{/gist_id}", "starred_url": "https://api.github.com/users/MainaKamau92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MainaKamau92/subscriptions", "organizations_url": "https://api.github.com/users/MainaKamau92/orgs", "repos_url": "https://api.github.com/users/MainaKamau92/repos", "events_url": "https://api.github.com/users/MainaKamau92/events{/privacy}", "received_events_url": "https://api.github.com/users/MainaKamau92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-30T02:16:51Z", "updated_at": "2018-10-03T14:51:41Z", "closed_at": "2018-10-02T10:14:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "````\r\nfrom flask_restplus import Namespace, Resource, fields\r\n\r\napi = Namespace('Cats', description='Cat related operations')\r\n\r\ncat = api.model('Cat', {\r\n    'id': fields.String(required=True, description='The cat identifier'),\r\n    'name': fields.String(required=True, description='the cat name'),\r\n})\r\n\r\nCATS = [\r\n    {'id': 'felix', 'name': 'Felix'}\r\n]\r\n\r\n\r\nclass CatList(Resource):\r\n    @api.doc('list-cats')\r\n    @api.marshal_list_with(cat)\r\n    def get(self):\r\n        \"\"\"\r\n        Lists all cats\r\n        \"\"\"\r\n        return CATS\r\n\r\napi.add_resource(CatList, '/cat')\r\n````\r\n\r\n\r\nUsing the above namespace excerpt(the same example in the docs) which utilizes namespace with blueprints, i find that the api route for accessing the `/cat` route mandates it to be preceded by the Namespace ('name') argument, excluding the Namespace 'name' argument which in this case is 'Cats' leads to the route throwing a 404.\r\nThus if i want to access the list[CATS] from an api route from a localhost server url prefixed by `/api/v2`, using\r\n`localhost:5000/api/v2/cat` throws a 404 whereas, `localhost:5000/api/v2/Cats/cat` provides the intended result, is this supposed to be the case or am i missing something crucial?\r\n\r\nNB: Forgive the repetition i tried to be as explicit as i could.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/526", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/526/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/526/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/526/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/526", "id": 362777035, "node_id": "MDU6SXNzdWUzNjI3NzcwMzU=", "number": 526, "title": "Any install is not working - venv, conda or pip", "user": {"login": "KunalKarnik", "id": 14845294, "node_id": "MDQ6VXNlcjE0ODQ1Mjk0", "avatar_url": "https://avatars0.githubusercontent.com/u/14845294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KunalKarnik", "html_url": "https://github.com/KunalKarnik", "followers_url": "https://api.github.com/users/KunalKarnik/followers", "following_url": "https://api.github.com/users/KunalKarnik/following{/other_user}", "gists_url": "https://api.github.com/users/KunalKarnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/KunalKarnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KunalKarnik/subscriptions", "organizations_url": "https://api.github.com/users/KunalKarnik/orgs", "repos_url": "https://api.github.com/users/KunalKarnik/repos", "events_url": "https://api.github.com/users/KunalKarnik/events{/privacy}", "received_events_url": "https://api.github.com/users/KunalKarnik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-21T21:16:42Z", "updated_at": "2018-10-16T19:29:30Z", "closed_at": "2018-10-16T19:29:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "*[ec2public_html]$ conda install flask-restplus\r\nSolving environment: done\r\n\r\n# All requested packages already installed.\r\n\r\n[ec2public_html]$ sudo python app.py \r\nTraceback (most recent call last):\r\n  File \"app.py\", line 2, in <module>\r\n    from flask_restplus import Api, Resource, fields\r\nImportError: No module named flask_restplus\r\n: From my Terminal.*\r\n\r\n## conda 4.5.11\r\n## Python 3.6.4 :: Anaconda, Inc.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/525", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/525/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/525/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/525/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/525", "id": 360264351, "node_id": "MDU6SXNzdWUzNjAyNjQzNTE=", "number": 525, "title": "How to get response from Flask-RESTPlus in csv", "user": {"login": "lijose", "id": 33356321, "node_id": "MDQ6VXNlcjMzMzU2MzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/33356321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lijose", "html_url": "https://github.com/lijose", "followers_url": "https://api.github.com/users/lijose/followers", "following_url": "https://api.github.com/users/lijose/following{/other_user}", "gists_url": "https://api.github.com/users/lijose/gists{/gist_id}", "starred_url": "https://api.github.com/users/lijose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lijose/subscriptions", "organizations_url": "https://api.github.com/users/lijose/orgs", "repos_url": "https://api.github.com/users/lijose/repos", "events_url": "https://api.github.com/users/lijose/events{/privacy}", "received_events_url": "https://api.github.com/users/lijose/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-14T11:20:14Z", "updated_at": "2020-06-20T06:46:33Z", "closed_at": "2018-09-19T00:17:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have created and REST API using Flask-RESTPlus. I am getting response in json and its fine. Now I have a new requirement to specify Response content type as csv or json.\r\n\r\nI checked API doc there is nothing mentioned !!\r\n\r\nIs it possible to get reponse in csv using Flask-RESTPlus ??", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/524", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/524/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/524/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/524", "id": 359979348, "node_id": "MDU6SXNzdWUzNTk5NzkzNDg=", "number": 524, "title": "How to pass headers with jwt tokens in swagger ui", "user": {"login": "LarryKarani", "id": 22986772, "node_id": "MDQ6VXNlcjIyOTg2Nzcy", "avatar_url": "https://avatars1.githubusercontent.com/u/22986772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LarryKarani", "html_url": "https://github.com/LarryKarani", "followers_url": "https://api.github.com/users/LarryKarani/followers", "following_url": "https://api.github.com/users/LarryKarani/following{/other_user}", "gists_url": "https://api.github.com/users/LarryKarani/gists{/gist_id}", "starred_url": "https://api.github.com/users/LarryKarani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LarryKarani/subscriptions", "organizations_url": "https://api.github.com/users/LarryKarani/orgs", "repos_url": "https://api.github.com/users/LarryKarani/repos", "events_url": "https://api.github.com/users/LarryKarani/events{/privacy}", "received_events_url": "https://api.github.com/users/LarryKarani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-13T16:51:43Z", "updated_at": "2018-09-14T11:36:36Z", "closed_at": "2018-09-14T11:36:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "hello guys I'm using flask_restplus with swagger documentation  i cant find away to pass the token generated after login in swagger UI.  As a result Im unable to view the protected routes.  what I would like to know is what to do so i can get an input field where i can input the Bear <JWT> and be able to view the protected routes. Thank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/523", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/523/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/523/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/523", "id": 359928362, "node_id": "MDU6SXNzdWUzNTk5MjgzNjI=", "number": 523, "title": "wrong swagger.json path", "user": {"login": "dengqianyi", "id": 1665637, "node_id": "MDQ6VXNlcjE2NjU2Mzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1665637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dengqianyi", "html_url": "https://github.com/dengqianyi", "followers_url": "https://api.github.com/users/dengqianyi/followers", "following_url": "https://api.github.com/users/dengqianyi/following{/other_user}", "gists_url": "https://api.github.com/users/dengqianyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dengqianyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dengqianyi/subscriptions", "organizations_url": "https://api.github.com/users/dengqianyi/orgs", "repos_url": "https://api.github.com/users/dengqianyi/repos", "events_url": "https://api.github.com/users/dengqianyi/events{/privacy}", "received_events_url": "https://api.github.com/users/dengqianyi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 361866266, "node_id": "MDU6TGFiZWwzNjE4NjYyNjY=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/documentation", "name": "documentation", "color": "006b75", "default": true, "description": null}, {"id": 121860076, "node_id": "MDU6TGFiZWwxMjE4NjAwNzY=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-13T14:44:18Z", "updated_at": "2019-03-27T09:34:38Z", "closed_at": "2019-03-27T09:34:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://dev.py.haizb.cn/gifts/1/   \r\nthis is my develop test server,and my code and document in there.\r\nyou can see , can't get the swagger.json, because the absolute path is http://127.0.0.1:10000/gifts/1/swagger.json.\r\n\r\nand i use nginx to proxy uwsgi\r\nnginx.conf like this:\r\n\r\n> location / {\r\n                proxy_pass http://127.0.0.1:10000/;\r\n                client_max_body_size 1024m;\r\n                proxy_connect_timeout 1000;\r\n                proxy_set_header X-Real-IP $remote_addr;\r\n}\r\n\r\nuwsig.xml like this:\r\n\r\n> <uwsgi>\r\n    <pythonpath>/var/www/python</pythonpath>\r\n    <uid>1000</uid>\r\n    <pidfile>/log/python/hzb.pid</pidfile>\r\n    <module>runproduct_debug</module>\r\n    <callable>app</callable>\r\n    <http>127.0.0.1:10000</http>\r\n    <py-autoreload>1</py-autoreload>\r\n    <uwsgi_read_timeout>180</uwsgi_read_timeout>\r\n    <master/>\r\n    <processes>4</processes>\r\n    <memory-report/>\r\n</uwsgi>\r\n\r\ni want to know that how to change \"http://127.0.0.1:10000/gifts/1/swagger.json\"  to \"http://dev.py.haizb.cn/gifts/1/swagger.json\"\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/522", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/522/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/522/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/522", "id": 358336529, "node_id": "MDU6SXNzdWUzNTgzMzY1Mjk=", "number": 522, "title": "How can I validate incoming requests?", "user": {"login": "moar55", "id": 12253294, "node_id": "MDQ6VXNlcjEyMjUzMjk0", "avatar_url": "https://avatars2.githubusercontent.com/u/12253294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moar55", "html_url": "https://github.com/moar55", "followers_url": "https://api.github.com/users/moar55/followers", "following_url": "https://api.github.com/users/moar55/following{/other_user}", "gists_url": "https://api.github.com/users/moar55/gists{/gist_id}", "starred_url": "https://api.github.com/users/moar55/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moar55/subscriptions", "organizations_url": "https://api.github.com/users/moar55/orgs", "repos_url": "https://api.github.com/users/moar55/repos", "events_url": "https://api.github.com/users/moar55/events{/privacy}", "received_events_url": "https://api.github.com/users/moar55/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-08T23:49:52Z", "updated_at": "2018-09-09T17:45:40Z", "closed_at": "2018-09-09T17:45:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/515", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/515/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/515/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/515", "id": 353675156, "node_id": "MDU6SXNzdWUzNTM2NzUxNTY=", "number": 515, "title": "Please publish the .tar.gz for the latest version", "user": {"login": "iksaif", "id": 1032963, "node_id": "MDQ6VXNlcjEwMzI5NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1032963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iksaif", "html_url": "https://github.com/iksaif", "followers_url": "https://api.github.com/users/iksaif/followers", "following_url": "https://api.github.com/users/iksaif/following{/other_user}", "gists_url": "https://api.github.com/users/iksaif/gists{/gist_id}", "starred_url": "https://api.github.com/users/iksaif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iksaif/subscriptions", "organizations_url": "https://api.github.com/users/iksaif/orgs", "repos_url": "https://api.github.com/users/iksaif/repos", "events_url": "https://api.github.com/users/iksaif/events{/privacy}", "received_events_url": "https://api.github.com/users/iksaif/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-24T07:29:55Z", "updated_at": "2018-09-21T05:22:06Z", "closed_at": "2018-09-20T21:03:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like 0.11.0 only has a wheel file and no .tar.gz:\r\n- https://pypi.org/simple/flask-restplus/\r\n- https://pypi.org/project/flask-restplus/#files\r\n\r\nThis seems to be causing problems with `pex` when using the `--no-wheel` option.\r\n\r\nThanks !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/513", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/513/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/513/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/513/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/513", "id": 353458283, "node_id": "MDU6SXNzdWUzNTM0NTgyODM=", "number": 513, "title": "Add a flag to turn Swagger-UI 'Try it Out' on/off", "user": {"login": "kristleifur", "id": 49295, "node_id": "MDQ6VXNlcjQ5Mjk1", "avatar_url": "https://avatars0.githubusercontent.com/u/49295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kristleifur", "html_url": "https://github.com/kristleifur", "followers_url": "https://api.github.com/users/kristleifur/followers", "following_url": "https://api.github.com/users/kristleifur/following{/other_user}", "gists_url": "https://api.github.com/users/kristleifur/gists{/gist_id}", "starred_url": "https://api.github.com/users/kristleifur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kristleifur/subscriptions", "organizations_url": "https://api.github.com/users/kristleifur/orgs", "repos_url": "https://api.github.com/users/kristleifur/repos", "events_url": "https://api.github.com/users/kristleifur/events{/privacy}", "received_events_url": "https://api.github.com/users/kristleifur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 257328545, "node_id": "MDU6TGFiZWwyNTczMjg1NDU=", "url": "https://api.github.com/repos/noirbizarre/flask-restplus/labels/in%20progress", "name": "in progress", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "SteadBytes", "id": 14834132, "node_id": "MDQ6VXNlcjE0ODM0MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/14834132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SteadBytes", "html_url": "https://github.com/SteadBytes", "followers_url": "https://api.github.com/users/SteadBytes/followers", "following_url": "https://api.github.com/users/SteadBytes/following{/other_user}", "gists_url": "https://api.github.com/users/SteadBytes/gists{/gist_id}", "starred_url": "https://api.github.com/users/SteadBytes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SteadBytes/subscriptions", "organizations_url": "https://api.github.com/users/SteadBytes/orgs", "repos_url": "https://api.github.com/users/SteadBytes/repos", "events_url": "https://api.github.com/users/SteadBytes/events{/privacy}", "received_events_url": "https://api.github.com/users/SteadBytes/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "SteadBytes", "id": 14834132, "node_id": "MDQ6VXNlcjE0ODM0MTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/14834132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SteadBytes", "html_url": "https://github.com/SteadBytes", "followers_url": "https://api.github.com/users/SteadBytes/followers", "following_url": "https://api.github.com/users/SteadBytes/following{/other_user}", "gists_url": "https://api.github.com/users/SteadBytes/gists{/gist_id}", "starred_url": "https://api.github.com/users/SteadBytes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SteadBytes/subscriptions", "organizations_url": "https://api.github.com/users/SteadBytes/orgs", "repos_url": "https://api.github.com/users/SteadBytes/repos", "events_url": "https://api.github.com/users/SteadBytes/events{/privacy}", "received_events_url": "https://api.github.com/users/SteadBytes/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-08-23T16:25:52Z", "updated_at": "2019-05-08T05:18:37Z", "closed_at": "2019-05-08T05:18:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!, Thanks for flask-restplus!\r\n\r\nI need to be able to turn off the \"Try it Out\" button in swagger-ui. The method defined here works for us: https://github.com/swagger-api/swagger-ui/issues/3725#issuecomment-334899276 \r\n\r\nI've been able to get this going as a patch to `templates/swagger-ui.html` after flask-restplus installation. I've also added it as a flask-restplus config flag which reads `True`/`False` from `config.SWAGGER_UI_TRY_IT_OUT`. PR incoming with an attempt to contribute.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/509", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/509/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/509/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/509", "id": 348473032, "node_id": "MDU6SXNzdWUzNDg0NzMwMzI=", "number": 509, "title": "Can't read swagger JSON from http://my_url/swagger.json", "user": {"login": "blondowski", "id": 7016229, "node_id": "MDQ6VXNlcjcwMTYyMjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7016229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blondowski", "html_url": "https://github.com/blondowski", "followers_url": "https://api.github.com/users/blondowski/followers", "following_url": "https://api.github.com/users/blondowski/following{/other_user}", "gists_url": "https://api.github.com/users/blondowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/blondowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blondowski/subscriptions", "organizations_url": "https://api.github.com/users/blondowski/orgs", "repos_url": "https://api.github.com/users/blondowski/repos", "events_url": "https://api.github.com/users/blondowski/events{/privacy}", "received_events_url": "https://api.github.com/users/blondowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-07T20:22:00Z", "updated_at": "2018-08-08T15:14:34Z", "closed_at": "2018-08-08T15:14:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "If this is a wrong place to post this question, please delete.\r\n\r\nI am running a docker container behind AWS Application Load Balancer.  We forward based on the path.\r\nex. http://my_url/application, will be forwarded based on \"application\".  The container is using Flask-rest to generate documentation.\r\n\r\nHere is from my controller.py file\r\napp = Flask(__name__)\r\napi = Api(app, doc=\"/application/\")\r\n\r\nns = api.namespace('application', description='my application')\r\n\r\nI can hit the server:port/application/ and it shows documentation.  But when it's behind ALB we get this message: \r\n\r\nCan't read swagger JSON from http://my-url/swagger.json.  It's dropping \"application\" and swagger seems to be at the root level.  \r\n\r\nAnything that we can do to fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/506", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/506/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/506/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/506", "id": 346552080, "node_id": "MDU6SXNzdWUzNDY1NTIwODA=", "number": 506, "title": "ImportError: No module named enum", "user": {"login": "aspir", "id": 6922171, "node_id": "MDQ6VXNlcjY5MjIxNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6922171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aspir", "html_url": "https://github.com/aspir", "followers_url": "https://api.github.com/users/aspir/followers", "following_url": "https://api.github.com/users/aspir/following{/other_user}", "gists_url": "https://api.github.com/users/aspir/gists{/gist_id}", "starred_url": "https://api.github.com/users/aspir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aspir/subscriptions", "organizations_url": "https://api.github.com/users/aspir/orgs", "repos_url": "https://api.github.com/users/aspir/repos", "events_url": "https://api.github.com/users/aspir/events{/privacy}", "received_events_url": "https://api.github.com/users/aspir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-01T11:02:48Z", "updated_at": "2018-09-21T15:54:20Z", "closed_at": "2018-09-20T21:33:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I upgraded to a new version of flask-restplus(0.11.0) and I got error: \"ImportError: No module named enum\"\r\nIn HTTPStatus we probably use enum.\r\nplease add to the setup.py dependencies \"enum34\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/501", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/501/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/501/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/501", "id": 345096721, "node_id": "MDU6SXNzdWUzNDUwOTY3MjE=", "number": 501, "title": "Authorization button doesn't appear in Swagger UI", "user": {"login": "iandjx", "id": 3683356, "node_id": "MDQ6VXNlcjM2ODMzNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3683356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iandjx", "html_url": "https://github.com/iandjx", "followers_url": "https://api.github.com/users/iandjx/followers", "following_url": "https://api.github.com/users/iandjx/following{/other_user}", "gists_url": "https://api.github.com/users/iandjx/gists{/gist_id}", "starred_url": "https://api.github.com/users/iandjx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iandjx/subscriptions", "organizations_url": "https://api.github.com/users/iandjx/orgs", "repos_url": "https://api.github.com/users/iandjx/repos", "events_url": "https://api.github.com/users/iandjx/events{/privacy}", "received_events_url": "https://api.github.com/users/iandjx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-27T05:37:58Z", "updated_at": "2018-07-27T06:11:58Z", "closed_at": "2018-07-27T06:11:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I added authorizations=authorizations  when I initialized the api but the authorize button won't appear on the Swagger UI. What could I be doing wrong? \r\n```\r\nrestplus.py\r\n\r\nfrom flask_restplus import Api\r\n\r\nauthorizations = {\r\n    'apikey': {\r\n        'type': 'apiKey',\r\n        'in': 'header',\r\n        'name': 'X-API-KEY'\r\n    }\r\n}\r\n\r\n\r\napi = Api(version='1.0', \r\n          title='Bokujo API', \r\n          description=\"Farm Operation\", \r\n          authorizations=authorizations)\r\n```\r\n\r\n```\r\napp.py\r\n\r\nfrom flask import Flask, Blueprint\r\nfrom werkzeug.contrib.fixers import ProxyFix\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom api.restplus import api\r\nfrom api.endpoints.cows import ns as cow_namespace\r\nfrom api.endpoints.vaccine import ns as vaccine_namespace\r\nfrom api.endpoints.artificialinsemination import ns as artifical_insemination_namespace\r\nfrom api.endpoints.test import ns as test_namespace\r\nfrom api.endpoints.user import ns as user_namespace\r\nfrom flask_jwt_extended import JWTManager\r\n\r\ndb = SQLAlchemy()\r\napp = Flask(__name__)\r\napp.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///data.db'\r\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\r\napp.config['PROPAGATE_EXCEPTIONS'] = True\r\napp.secret_key = 'jose'\r\napp.wsgi_app = ProxyFix(app.wsgi_app)\r\n\r\n\r\nblueprint = Blueprint('api', __name__, url_prefix='/api')\r\n\r\napi.init_app(blueprint)\r\napi.add_namespace(cow_namespace)\r\napi.add_namespace(vaccine_namespace)\r\napi.add_namespace(artifical_insemination_namespace)\r\napi.add_namespace(test_namespace)\r\napi.add_namespace(user_namespace)\r\napp.register_blueprint(blueprint)\r\n\r\n\r\n@app.before_first_request\r\ndef create_tables():\r\n    db.create_all()\r\n\r\n\r\njwt = JWTManager(app)\r\n\r\nif __name__ == '__main__':\r\n    from db import db\r\n    db.init_app(app)\r\n    app.run(debug=True)\r\n```\r\n[Repo Link](https://gitlab.com/iandjx/bokujo-api.git)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/500", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/500/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/500/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/500", "id": 345014207, "node_id": "MDU6SXNzdWUzNDUwMTQyMDc=", "number": 500, "title": "0.11.0 Source tarball not on pypi", "user": {"login": "bobh66", "id": 4935304, "node_id": "MDQ6VXNlcjQ5MzUzMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4935304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobh66", "html_url": "https://github.com/bobh66", "followers_url": "https://api.github.com/users/bobh66/followers", "following_url": "https://api.github.com/users/bobh66/following{/other_user}", "gists_url": "https://api.github.com/users/bobh66/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobh66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobh66/subscriptions", "organizations_url": "https://api.github.com/users/bobh66/orgs", "repos_url": "https://api.github.com/users/bobh66/repos", "events_url": "https://api.github.com/users/bobh66/events{/privacy}", "received_events_url": "https://api.github.com/users/bobh66/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-26T21:36:11Z", "updated_at": "2018-09-20T21:03:28Z", "closed_at": "2018-09-20T21:03:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "The source tarball for 0.11.0 is not available on pypi - it's there for 0.10.1 and earlier.\r\n\r\nAny idea why it's missing?\r\n\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/495", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/495/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/495/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/495", "id": 341317438, "node_id": "MDU6SXNzdWUzNDEzMTc0Mzg=", "number": 495, "title": "Authorization header not sent in Swagger UI", "user": {"login": "austinjp", "id": 7613468, "node_id": "MDQ6VXNlcjc2MTM0Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7613468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/austinjp", "html_url": "https://github.com/austinjp", "followers_url": "https://api.github.com/users/austinjp/followers", "following_url": "https://api.github.com/users/austinjp/following{/other_user}", "gists_url": "https://api.github.com/users/austinjp/gists{/gist_id}", "starred_url": "https://api.github.com/users/austinjp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/austinjp/subscriptions", "organizations_url": "https://api.github.com/users/austinjp/orgs", "repos_url": "https://api.github.com/users/austinjp/repos", "events_url": "https://api.github.com/users/austinjp/events{/privacy}", "received_events_url": "https://api.github.com/users/austinjp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-15T12:30:09Z", "updated_at": "2018-07-16T17:21:58Z", "closed_at": "2018-07-16T17:21:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "As per the title, authorization header does not appear to be sent when using the Swagger UI.\r\n\r\nI've added authorizations to my Flask-Restplus install, version 0.11.0:\r\n\r\n```python\r\napi = Api(blueprint,\r\n              title=conf.name,\r\n              version=conf.Config.VERSION,\r\n              description=conf.Config.DESCRIPTION,\r\n              authorizations={\r\n                  'apiKey': {\r\n                      'type': 'apiKey',\r\n                      'in': 'header',\r\n                      'name': 'X-API-KEY'\r\n                  }\r\n              },\r\n              security='apikey' # apply globally                                                                                                                                                                                 \r\n    )\r\n```\r\n\r\nThe Swagger UI prompts for me to enter a value if I click the authorize button:\r\n\r\n![screenshot](https://i.imgur.com/d9CJcOt.png)\r\n\r\nHowever, this value is not sent in headers, see the headers panel on the right using Firefox. Note 401 response, and missing `-H \"X-API-KEY: abc\"` in the curl box on the left:\r\n\r\n![screenshot](https://i.imgur.com/dEJx4Jn.png)\r\n\r\nA manual curl with the appropriate header results in the expected response:\r\n\r\n![screenshot](https://i.imgur.com/E37qi13.png)\r\n\r\nThis seems like a bug, although it's possible I'm missing something.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/489", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/489/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/489/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/489", "id": 339753315, "node_id": "MDU6SXNzdWUzMzk3NTMzMTU=", "number": 489, "title": "Using models from another namespace? Designed my project for models to be in separate folder, to be reused one with another - end up with \"no spec provided\" 500 swagger.json", "user": {"login": "idchlife", "id": 4563032, "node_id": "MDQ6VXNlcjQ1NjMwMzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4563032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idchlife", "html_url": "https://github.com/idchlife", "followers_url": "https://api.github.com/users/idchlife/followers", "following_url": "https://api.github.com/users/idchlife/following{/other_user}", "gists_url": "https://api.github.com/users/idchlife/gists{/gist_id}", "starred_url": "https://api.github.com/users/idchlife/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idchlife/subscriptions", "organizations_url": "https://api.github.com/users/idchlife/orgs", "repos_url": "https://api.github.com/users/idchlife/repos", "events_url": "https://api.github.com/users/idchlife/events{/privacy}", "received_events_url": "https://api.github.com/users/idchlife/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-10T09:02:11Z", "updated_at": "2019-03-05T17:31:35Z", "closed_at": "2018-07-10T10:23:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Often defining models right there with the views becomes a total mess, especially when models are reused in another namespaces.\r\nFirst, **resource_model_a** becomes **resource_model_a_dict**, then, if there was another nested model inside this dict, it too becomes a dict, and then there are a whole bunch of helper functions and project files are filled with helpers to overcome \"no spec provided\".\r\n\r\nWhat's the best way to solve this problem?\r\n\r\n\r\nExamples:\r\n\r\nI want to have this\r\n\r\nmodels/products.py\r\n\r\n```python\r\nfrom flask_restplus import Namespace, fields\r\n\r\napi = Namespace(\"ProductsNamespace\")\r\n\r\nresource_product = api.model(\"Product\",  {\r\n  'id': fields.Integer,\r\n  'name': fields.String\r\n})\r\n\r\n```\r\n\r\nmodels/owners.py\r\n\r\n```python\r\nfrom flask_restplus import Namespace, fields\r\nfrom .products import resource_product\r\n\r\napi = Namespace(\"OwnersNamespace\")\r\n\r\nresource_owner = api.model(\"Owner\", {\r\n  'id': fields.Integer,\r\n  'name': fields.String,\r\n  'products': fields.List(fields.Nested(resource_product))\r\n})\r\n```\r\n\r\n\r\nviews/owners.py\r\n\r\n```python\r\nfrom flask_restplus import Namespace, fields, Resource\r\nfrom ..models.owners import resource_owner\r\n\r\napi = Namespace(\"OwnersApi\", path=\"/owners\")\r\n\r\n@api.route(\"\")\r\nclass List(Resource):\r\n  @api.marshal_with(resource_owner)\r\n  def get(self):\r\n    pass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/481", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/481/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/481/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/481", "id": 336310191, "node_id": "MDU6SXNzdWUzMzYzMTAxOTE=", "number": 481, "title": "How to add Bearer <JWT> in swagger-ui request", "user": {"login": "jreg2k", "id": 9535956, "node_id": "MDQ6VXNlcjk1MzU5NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9535956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jreg2k", "html_url": "https://github.com/jreg2k", "followers_url": "https://api.github.com/users/jreg2k/followers", "following_url": "https://api.github.com/users/jreg2k/following{/other_user}", "gists_url": "https://api.github.com/users/jreg2k/gists{/gist_id}", "starred_url": "https://api.github.com/users/jreg2k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jreg2k/subscriptions", "organizations_url": "https://api.github.com/users/jreg2k/orgs", "repos_url": "https://api.github.com/users/jreg2k/repos", "events_url": "https://api.github.com/users/jreg2k/events{/privacy}", "received_events_url": "https://api.github.com/users/jreg2k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-27T16:54:23Z", "updated_at": "2019-05-14T09:17:55Z", "closed_at": "2018-07-05T11:50:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI have the same issue like : https://github.com/noirbizarre/flask-restplus/issues/315, but I can't find a solution. I a using the flask_restplus 0.11\r\n\r\nI've been searching for a long time but I didn't found how to make query with jwt.\r\nMy authorisations looks like : \r\n\r\n    authorizations = {\r\n        'apikey': {\r\n            'type' : 'apiKey',\r\n            'in': 'header',\r\n            'name': 'Authorization'\r\n        }\r\n    }\r\nthe resulting query is : \r\n\r\n    curl -X GET \"http://localhost:5000/api/request/\" -H \"accept: application/json\" -H \"Authorization: 12345\"\r\n\r\nThe api answer : \r\n\r\n    {\r\n      \"msg\": \"Bad Authorization header. Expected value 'Bearer <JWT>'\"\r\n    }\r\n\r\n\r\n\r\nIf I add Bearer in 'authorizations like :  \r\n\r\n    authorizations = {\r\n        'apikey': {\r\n            'type' : 'apiKey',\r\n            'in': 'header',\r\n            'name': 'Authorization Bearer'\r\n        }\r\n    }\r\n\r\nthe query is : \r\n\r\n    curl -X GET \"http://localhost:5000/api/request/\" -H \"accept: application/json\" -H \"Authorization Bearer: 12345\"\r\n\r\nAnd I want a query like  this : \r\n\r\n    curl -X GET \"http://localhost:5000/api/request/\" -H \"accept: application/json\" -H \"Authorization: Bearer 12345\"\r\n\r\nCan somebody give me some help ?\r\n\r\nRegards.\r\n\r\nJames\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/475", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/475/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/475/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/475", "id": 332828234, "node_id": "MDU6SXNzdWUzMzI4MjgyMzQ=", "number": 475, "title": "Namespace decorators are not applied to Resources", "user": {"login": "dmvass", "id": 11655110, "node_id": "MDQ6VXNlcjExNjU1MTEw", "avatar_url": "https://avatars2.githubusercontent.com/u/11655110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmvass", "html_url": "https://github.com/dmvass", "followers_url": "https://api.github.com/users/dmvass/followers", "following_url": "https://api.github.com/users/dmvass/following{/other_user}", "gists_url": "https://api.github.com/users/dmvass/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmvass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmvass/subscriptions", "organizations_url": "https://api.github.com/users/dmvass/orgs", "repos_url": "https://api.github.com/users/dmvass/repos", "events_url": "https://api.github.com/users/dmvass/events{/privacy}", "received_events_url": "https://api.github.com/users/dmvass/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-15T15:54:53Z", "updated_at": "2018-08-21T19:17:59Z", "closed_at": "2018-08-21T19:17:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Reopened #375 because I have a similar issue.\r\n\r\n> I have a decorator designed to wrap arbitrary Flask view functions, and I want to apply it to every resource in an Api or Namespace.\r\n> \r\n> The decorators kwarg in Api.__init__ works as expected. All methods of all Resource objects are decorated and return correct output.\r\n> \r\n> However, using the analogous kwarg in Namespace has no effect. I've tried every way to wire namespaces to apis to apps in the documentation, and none of them work. In all the wiring strategies, if I use the decorators kwarg on the outer Api, everything works. However, sometimes I may want to apply the decorator only to a sub-tree of the Api, which makes a Namespace-level decorator look like the obvious solution.\r\n> \r\n> I dug through the source code, and I can clearly see where Api decorators get applied to the Resource methods. However, I don't see where the Namespace decorators factor into the picture. There appear to be no uses of the decorators instance attribute outside of Namespace.init", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/473", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/473/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/473/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/473", "id": 332199626, "node_id": "MDU6SXNzdWUzMzIxOTk2MjY=", "number": 473, "title": "Support for multiple payload types in api.expect", "user": {"login": "craigwong", "id": 1596485, "node_id": "MDQ6VXNlcjE1OTY0ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1596485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigwong", "html_url": "https://github.com/craigwong", "followers_url": "https://api.github.com/users/craigwong/followers", "following_url": "https://api.github.com/users/craigwong/following{/other_user}", "gists_url": "https://api.github.com/users/craigwong/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigwong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigwong/subscriptions", "organizations_url": "https://api.github.com/users/craigwong/orgs", "repos_url": "https://api.github.com/users/craigwong/repos", "events_url": "https://api.github.com/users/craigwong/events{/privacy}", "received_events_url": "https://api.github.com/users/craigwong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-13T23:23:51Z", "updated_at": "2018-06-14T18:27:12Z", "closed_at": "2018-06-14T18:27:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIf I wanted to have a single endpoint support both `{}` (object) and `[{}, {}, ...]` (list of objects) POST JSON payloads--how would I accomplish this?\r\n\r\nI haven't been able to use api.expect to support both types of payloads.\r\nSomething like this (doesn't actually work):\r\n\r\n```\r\napi.expect(single_object_payload)\r\napi.expect([single_object_payload])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/467", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/467/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/467/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/467/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/467", "id": 329643685, "node_id": "MDU6SXNzdWUzMjk2NDM2ODU=", "number": 467, "title": "CORS headers not being added to the response despite endpoint being decorated", "user": {"login": "kritchie", "id": 28750206, "node_id": "MDQ6VXNlcjI4NzUwMjA2", "avatar_url": "https://avatars1.githubusercontent.com/u/28750206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kritchie", "html_url": "https://github.com/kritchie", "followers_url": "https://api.github.com/users/kritchie/followers", "following_url": "https://api.github.com/users/kritchie/following{/other_user}", "gists_url": "https://api.github.com/users/kritchie/gists{/gist_id}", "starred_url": "https://api.github.com/users/kritchie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kritchie/subscriptions", "organizations_url": "https://api.github.com/users/kritchie/orgs", "repos_url": "https://api.github.com/users/kritchie/repos", "events_url": "https://api.github.com/users/kritchie/events{/privacy}", "received_events_url": "https://api.github.com/users/kritchie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-06-05T22:12:07Z", "updated_at": "2019-10-01T13:17:30Z", "closed_at": "2019-10-01T13:15:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Version\r\nflask-restplus==0.10.1\r\n\r\n# My issue\r\nI have an issue with the CORS header not being added to the response. I'm using the 'cors' method from the package (not flask-cors). I've opened a question on StackOverflow (https://stackoverflow.com/questions/50708821/flask-restplus-cors-request-not-adding-headers-into-the-response). \r\n\r\nBasically, I'm doing this : \r\n\r\n    from flask_restplus import cors\r\n\r\n    @api_ns.route('/some/endpoint')\r\n    @api_ns.response(code=400, description='Bad Request.')\r\n    class AEndpointResource(Resource):\r\n\r\n        @api_ns.param(**api_req_fields.POST_DOC)\r\n        @api_ns.expect(POST_REQUIRED_BODY)\r\n        @api_ns.marshal_with(code=201,\r\n                     fields=my_api_models.MyEndpointResponse.get_serializer(),\r\n                     description=my_api_models.MyEndpointResponse.description)\r\n        @cors.crossdomain(origin='*')\r\n        def post(self) -> Tuple[my_api_models.MyEndpointResponse, int]:\r\n            \"\"\"\r\n            The post body\r\n            \"\"\"\r\n            # Some logic here\r\n            return response, 200`\r\n\r\nAnd I still have the same result as without applying the CORS decorator. No CORS headers are added to the Response of the OPTIONS query to my endpoint.\r\n\r\nAnyone else having/had that issue ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/466", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/466/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/466/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/466", "id": 329516254, "node_id": "MDU6SXNzdWUzMjk1MTYyNTQ=", "number": 466, "title": "App runs locally but returns 500 error on Heroku", "user": {"login": "rah-ool", "id": 20202791, "node_id": "MDQ6VXNlcjIwMjAyNzkx", "avatar_url": "https://avatars1.githubusercontent.com/u/20202791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rah-ool", "html_url": "https://github.com/rah-ool", "followers_url": "https://api.github.com/users/rah-ool/followers", "following_url": "https://api.github.com/users/rah-ool/following{/other_user}", "gists_url": "https://api.github.com/users/rah-ool/gists{/gist_id}", "starred_url": "https://api.github.com/users/rah-ool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rah-ool/subscriptions", "organizations_url": "https://api.github.com/users/rah-ool/orgs", "repos_url": "https://api.github.com/users/rah-ool/repos", "events_url": "https://api.github.com/users/rah-ool/events{/privacy}", "received_events_url": "https://api.github.com/users/rah-ool/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-06-05T15:44:07Z", "updated_at": "2020-08-19T15:57:43Z", "closed_at": "2018-06-06T14:54:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "There doesn't seem to be any documentation on deploying to Heroku with flask-restplus. I've just deployed an app and am getting the following: `Error: INTERNAL SERVER ERROR`.\r\n\r\nMy Procfile is set to `web: gunicorn app:app` and my app is set as `api = Api(app)`, `app.wsgi_app = ProxyFix(app.wsgi_app)`, and `app = Flask(__name__)`, respectively. Anyone have any suggestions?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/460", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/460/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/460/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/460", "id": 328867136, "node_id": "MDU6SXNzdWUzMjg4NjcxMzY=", "number": 460, "title": "Remove default namespace?", "user": {"login": "manbeing", "id": 39745132, "node_id": "MDQ6VXNlcjM5NzQ1MTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/39745132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manbeing", "html_url": "https://github.com/manbeing", "followers_url": "https://api.github.com/users/manbeing/followers", "following_url": "https://api.github.com/users/manbeing/following{/other_user}", "gists_url": "https://api.github.com/users/manbeing/gists{/gist_id}", "starred_url": "https://api.github.com/users/manbeing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manbeing/subscriptions", "organizations_url": "https://api.github.com/users/manbeing/orgs", "repos_url": "https://api.github.com/users/manbeing/repos", "events_url": "https://api.github.com/users/manbeing/events{/privacy}", "received_events_url": "https://api.github.com/users/manbeing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-03T22:16:03Z", "updated_at": "2018-11-01T15:58:26Z", "closed_at": "2018-08-21T19:25:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue has confused me for several days, and I still cannot find a solution to resolve it. Just wanted to see if somebody here has some bright ideas.\r\nFor example, I make a namespace called 'test' for my app, but somehow, the default namespace is shown:\r\n![image](https://user-images.githubusercontent.com/39745132/40891599-78534b78-6756-11e8-9a38-2993ce987474.png)\r\n\r\nTo get rid of this redundant default namespace, what I have done is to set the default namespace value when initializing the Api:\r\n```python\r\napi = Api(app, default ='test', default_label='this is namespace test')\r\n```\r\nUnfortunately, this is not an ideal solution because I found there were two duplicate namespaces extracted to swagger file.\r\n![image](https://user-images.githubusercontent.com/39745132/40891798-10c5e232-675a-11e8-9471-0bc3b66c5d76.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/458", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/458/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/458/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/458", "id": 328772362, "node_id": "MDU6SXNzdWUzMjg3NzIzNjI=", "number": 458, "title": "'Namespace' object has no attribute 'representation'", "user": {"login": "manbeing", "id": 39745132, "node_id": "MDQ6VXNlcjM5NzQ1MTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/39745132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manbeing", "html_url": "https://github.com/manbeing", "followers_url": "https://api.github.com/users/manbeing/followers", "following_url": "https://api.github.com/users/manbeing/following{/other_user}", "gists_url": "https://api.github.com/users/manbeing/gists{/gist_id}", "starred_url": "https://api.github.com/users/manbeing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manbeing/subscriptions", "organizations_url": "https://api.github.com/users/manbeing/orgs", "repos_url": "https://api.github.com/users/manbeing/repos", "events_url": "https://api.github.com/users/manbeing/events{/privacy}", "received_events_url": "https://api.github.com/users/manbeing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-02T19:53:41Z", "updated_at": "2019-08-30T16:48:12Z", "closed_at": "2018-06-02T19:59:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am moving my project to namespace. Looks like representation is a method in Api class.\r\nReceiving the error:\r\n```python\r\n  File \"C:\\Users\\xxxx\\Envs\\apidemo\\apis\\__init__.py\", line 2, in <module>\r\n    from HR import api as ns1\r\n  File \"C:\\Users\\xxx\\Envs\\apidemo\\apis\\HR.py\", line 27, in <module>\r\n    @api.representation('application/xml')\r\nAttributeError: 'Namespace' object has no attribute 'representation'\r\n```\r\n\r\nHR.py code:\r\n```python\r\nfrom flask_restplus import Namespace, Resource, fields\r\n\r\napi = Namespace('HR', description='HR APIs')\r\n\r\n@api.representation('application/xml')\r\ndef xml(data, code, headers):\r\n    resp = make_response(convert_data_to_xml(data), code)\r\n    resp.headers.extend(headers)\r\n    return resp\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/457", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/457/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/457/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/457", "id": 328562011, "node_id": "MDU6SXNzdWUzMjg1NjIwMTE=", "number": 457, "title": "TypeError: type object got multiple values for keyword argument 'ordered'", "user": {"login": "manbeing", "id": 39745132, "node_id": "MDQ6VXNlcjM5NzQ1MTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/39745132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manbeing", "html_url": "https://github.com/manbeing", "followers_url": "https://api.github.com/users/manbeing/followers", "following_url": "https://api.github.com/users/manbeing/following{/other_user}", "gists_url": "https://api.github.com/users/manbeing/gists{/gist_id}", "starred_url": "https://api.github.com/users/manbeing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manbeing/subscriptions", "organizations_url": "https://api.github.com/users/manbeing/orgs", "repos_url": "https://api.github.com/users/manbeing/repos", "events_url": "https://api.github.com/users/manbeing/events{/privacy}", "received_events_url": "https://api.github.com/users/manbeing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-01T15:23:02Z", "updated_at": "2018-06-03T21:19:33Z", "closed_at": "2018-06-03T21:19:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following codes:\r\n```python\r\n@api.route('/add_employee')\r\nclass add_employee(Resource):\r\n   \r\n    @token_required      <---return 'current_basic_auth_user' to post method\r\n    @api.expect(employee_add_model) \r\n    @api.marshal_with(employee_display_model,ordered=False,envelope='employee')\r\n    @api.doc(security='apikey')\r\n    @api.doc(responses={\r\n         200: 'Success',\r\n         401: 'Token is required or Token is incorrect'\r\n \r\n    }) \r\n    @xml_request     <---return 'data' to post method\r\n    def post(data,current_basic_auth_user,self):\r\n```\r\nAfter I added ordered =False in @marshal_with, I received \r\n```python\r\nTypeError: type object got multiple values for keyword argument 'ordered'\r\n```\r\nNot sure why????\r\n\r\nI cannot change the order of parameters in post method (two decorator returned values must be placed before self), otherwise, I cannot get the correct value of parameters. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/456", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/456/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/456/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/456", "id": 328554244, "node_id": "MDU6SXNzdWUzMjg1NTQyNDQ=", "number": 456, "title": "Issue with @api.representation('application/xml')", "user": {"login": "manbeing", "id": 39745132, "node_id": "MDQ6VXNlcjM5NzQ1MTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/39745132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manbeing", "html_url": "https://github.com/manbeing", "followers_url": "https://api.github.com/users/manbeing/followers", "following_url": "https://api.github.com/users/manbeing/following{/other_user}", "gists_url": "https://api.github.com/users/manbeing/gists{/gist_id}", "starred_url": "https://api.github.com/users/manbeing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manbeing/subscriptions", "organizations_url": "https://api.github.com/users/manbeing/orgs", "repos_url": "https://api.github.com/users/manbeing/repos", "events_url": "https://api.github.com/users/manbeing/events{/privacy}", "received_events_url": "https://api.github.com/users/manbeing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-01T15:02:18Z", "updated_at": "2018-06-03T21:19:17Z", "closed_at": "2018-06-03T21:19:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was following the example in help doc to create the below decorator.\r\n```python\r\n@api.representation('application/xml')\r\ndef xml(data, code, headers=None):\r\n    resp = make_response(dicttoxml.dicttoxml(data), code)   \r\n    resp.headers.extend(headers or {})\r\n    return resp\r\n```\r\nAnd I also set up\r\n```\r\napi = Api(app, default_mediatype='application/json' )\r\n```\r\nThe problem is when I launched swagger dev portal and clicked link: http://localhost:5000/swagger.json ,it returned xml format rather than json format, which doesn't make sense. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/454", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/454/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/454/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/454", "id": 328238455, "node_id": "MDU6SXNzdWUzMjgyMzg0NTU=", "number": 454, "title": "Restplus API deployment", "user": {"login": "manbeing", "id": 39745132, "node_id": "MDQ6VXNlcjM5NzQ1MTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/39745132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manbeing", "html_url": "https://github.com/manbeing", "followers_url": "https://api.github.com/users/manbeing/followers", "following_url": "https://api.github.com/users/manbeing/following{/other_user}", "gists_url": "https://api.github.com/users/manbeing/gists{/gist_id}", "starred_url": "https://api.github.com/users/manbeing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manbeing/subscriptions", "organizations_url": "https://api.github.com/users/manbeing/orgs", "repos_url": "https://api.github.com/users/manbeing/repos", "events_url": "https://api.github.com/users/manbeing/events{/privacy}", "received_events_url": "https://api.github.com/users/manbeing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-31T17:57:47Z", "updated_at": "2018-06-01T00:45:18Z", "closed_at": "2018-06-01T00:45:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tried to deploy Restplus API to Apache. Everything looks fine-Python files were complied and no errors on console, but got 'The requested URL was not found on the server.' when trying to launch the endpoints.\r\n\r\nNo problem to deploy a simple 'hello world' API using flask (no restplus used) with Apache.\r\n\r\nAny hints how to resolve it?\r\nand which web server are you using for restplus API deployment on windows? or on linux?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/453", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/453/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/453/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/453", "id": 327833606, "node_id": "MDU6SXNzdWUzMjc4MzM2MDY=", "number": 453, "title": "host and additional content type not exported to swagger file", "user": {"login": "manbeing", "id": 39745132, "node_id": "MDQ6VXNlcjM5NzQ1MTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/39745132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manbeing", "html_url": "https://github.com/manbeing", "followers_url": "https://api.github.com/users/manbeing/followers", "following_url": "https://api.github.com/users/manbeing/following{/other_user}", "gists_url": "https://api.github.com/users/manbeing/gists{/gist_id}", "starred_url": "https://api.github.com/users/manbeing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manbeing/subscriptions", "organizations_url": "https://api.github.com/users/manbeing/orgs", "repos_url": "https://api.github.com/users/manbeing/repos", "events_url": "https://api.github.com/users/manbeing/events{/privacy}", "received_events_url": "https://api.github.com/users/manbeing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-30T17:46:16Z", "updated_at": "2018-05-31T18:15:15Z", "closed_at": "2018-05-31T18:15:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran the following scripts:\r\n    `def get(self):`\r\n      `from restfulplus import api`\r\n      `data =  api.__schema__`\r\nIt didn't extract host and the additional request content-type.  Do you know which settings I should use to let restplus automatically extract them?\r\n\r\n<img width=\"604\" alt=\"screenshot\" src=\"https://user-images.githubusercontent.com/39745132/40737752-aa3c11fa-640f-11e8-848c-1911b0e13f6c.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/451", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/451/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/451/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/451/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/451", "id": 327742538, "node_id": "MDU6SXNzdWUzMjc3NDI1Mzg=", "number": 451, "title": "Request in XML body", "user": {"login": "manbeing", "id": 39745132, "node_id": "MDQ6VXNlcjM5NzQ1MTMy", "avatar_url": "https://avatars2.githubusercontent.com/u/39745132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/manbeing", "html_url": "https://github.com/manbeing", "followers_url": "https://api.github.com/users/manbeing/followers", "following_url": "https://api.github.com/users/manbeing/following{/other_user}", "gists_url": "https://api.github.com/users/manbeing/gists{/gist_id}", "starred_url": "https://api.github.com/users/manbeing/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/manbeing/subscriptions", "organizations_url": "https://api.github.com/users/manbeing/orgs", "repos_url": "https://api.github.com/users/manbeing/repos", "events_url": "https://api.github.com/users/manbeing/events{/privacy}", "received_events_url": "https://api.github.com/users/manbeing/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-05-30T13:55:37Z", "updated_at": "2018-06-01T18:54:41Z", "closed_at": "2018-06-01T18:54:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does flask-restplus support **_request_** with a XML encoded body? I found an example about how to implement **_response_** with a XML body in help doc, but no information about request? I googled a lot but no lucks. If somebody here knows how to implement **_request_** in XML, could you give me an example? Thanks.\r\n\r\n**_Response_** in XML example from help doc:\r\n```python\r\n   @api.representation('application/xml')\r\n   def xml(data, code, headers):\r\n      resp = make_response(convert_data_to_xml(data), code)\r\n      resp.headers.extend(headers)\r\n      return resp\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/449", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/449/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/449/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/449", "id": 326792009, "node_id": "MDU6SXNzdWUzMjY3OTIwMDk=", "number": 449, "title": "Resource object has no attribute 'api' when documenting the response from a post method.", "user": {"login": "OdinTech3", "id": 14257815, "node_id": "MDQ6VXNlcjE0MjU3ODE1", "avatar_url": "https://avatars0.githubusercontent.com/u/14257815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OdinTech3", "html_url": "https://github.com/OdinTech3", "followers_url": "https://api.github.com/users/OdinTech3/followers", "following_url": "https://api.github.com/users/OdinTech3/following{/other_user}", "gists_url": "https://api.github.com/users/OdinTech3/gists{/gist_id}", "starred_url": "https://api.github.com/users/OdinTech3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OdinTech3/subscriptions", "organizations_url": "https://api.github.com/users/OdinTech3/orgs", "repos_url": "https://api.github.com/users/OdinTech3/repos", "events_url": "https://api.github.com/users/OdinTech3/events{/privacy}", "received_events_url": "https://api.github.com/users/OdinTech3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-27T06:44:16Z", "updated_at": "2018-05-27T06:59:04Z", "closed_at": "2018-05-27T06:59:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to document the response that is returned by my post method in a resource called `MainAccounts`. So i defined a modal that represents the structure of my response like so:\r\n\r\n```python\r\naccount_model = rest_api.model('Accounts', {\r\n    'name': fr_fields.String(default=''),\r\n    'customerId': fr_fields.String(),\r\n})\r\n```\r\n\r\nthen i defined my resource using `flask_restplus.marshal_with` to shape the output of my response (which is gotten from a third party source) and used `flask_restplus.Api.response` decorator to document my response: \r\n\r\n```python\r\n@api.route('/api/mcc/main')\r\nclass MainAccounts(Resource):\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        self.__client = get_client('main-mcc')\r\n\r\n    @marshal_with(account_model)\r\n    @api.response(200, 'Success', account_model)\r\n    def get(self) -> List[Dict]:\r\n        return AccountModel(self.__client).get_mcc_accounts()\r\n```\r\n\r\nhowever when I try to make a request to the endpoint `/api/mcc/main` I get this error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"~/Documents/Developer/.venv/lib/python3.6/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"~/Documents/Developer/.venv/lib/python3.6/site-packages/flask/app.py\", line 1799, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"~/Documents/Developer/.venv/lib/python3.6/site-packages/flask_restplus/api.py\", line 319, in wrapper\r\n    resp = resource(*args, **kwargs)\r\n  File \"~/Documents/Developer/.venv/lib/python3.6/site-packages/flask/views.py\", line 88, in view\r\n    return self.dispatch_request(*args, **kwargs)\r\n  File \"~/Documents/Developer/.venv/lib/python3.6/site-packages/flask_restplus/resource.py\", line 42, in dispatch_request\r\n    self.validate_payload(meth)\r\n  File \"~/Documents/Developer/.venv/lib/python3.6/site-packages/flask_restplus/resource.py\", line 82, in validate_payload\r\n    validate = validate if validate is not None else self.api._validate\r\nAttributeError: 'MainAccounts' object has no attribute 'api'\r\n```\r\nFrom the traceback it seems that validate is none. I tried to add a validate keyword argument to response like so: `@api.response(200, 'Success', account_model, validate=False)` and also tried to add a validate keyword argument to the api document itself like so `api = Api(app, validate=False)`. \r\n\r\nBut neither of those solutions worked. I dove into the source code at `~/Documents/Developer/.venv/lib/python3.6/site-packages/flask_restplus/resource.py`\r\nand tried to inspect the code at line 82.\r\n\r\n```python\r\n    def validate_payload(self, func):\r\n        '''Perform a payload validation on expected model if necessary'''\r\n        if getattr(func, '__apidoc__', False) is not False:\r\n            doc = func.__apidoc__\r\n            validate = doc.get('validate', None)\r\n            validate = validate if validate is not None else self.api._validate\r\n            if validate:\r\n                for expect in doc.get('expect', []):\r\n                    # TODO: handle third party handlers\r\n                    if isinstance(expect, list) and len(expect) == 1:\r\n                        if isinstance(expect[0], ModelBase):\r\n                            self.__validate_payload(expect[0], collection=True)\r\n                    if isinstance(expect, ModelBase):\r\n                        self.__validate_payload(expect, collection=False)\r\n```\r\n\r\nI don't know when `validate_payload` gets called and what `func` is being passed to it but it seems that no matter what the `func.__apidoc__` will always be `None` because its the default in the `get` method.\r\n\r\n**I am using flask_restplus version `0.11.0`** and **python version 3.6.5**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/445", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/445/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/445/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/445", "id": 325753123, "node_id": "MDU6SXNzdWUzMjU3NTMxMjM=", "number": 445, "title": "Namespace not exported?", "user": {"login": "chenasraf", "id": 167217, "node_id": "MDQ6VXNlcjE2NzIxNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/167217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenasraf", "html_url": "https://github.com/chenasraf", "followers_url": "https://api.github.com/users/chenasraf/followers", "following_url": "https://api.github.com/users/chenasraf/following{/other_user}", "gists_url": "https://api.github.com/users/chenasraf/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenasraf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenasraf/subscriptions", "organizations_url": "https://api.github.com/users/chenasraf/orgs", "repos_url": "https://api.github.com/users/chenasraf/repos", "events_url": "https://api.github.com/users/chenasraf/events{/privacy}", "received_events_url": "https://api.github.com/users/chenasraf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-23T15:13:55Z", "updated_at": "2018-06-02T10:58:30Z", "closed_at": "2018-06-02T10:58:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/noirbizarre/flask-restplus/blob/00d79c1fd081c44429f6162eb29f5f322e6c04e1/flask_restplus/__init__.py#L26\r\n\r\n__all__ doesn't include `Namespace` which seems to throw warnings for most IDEs. I don't believe it's by design but I could be wrong. Could someone shed some light on this?\r\n\r\nUsing the latest flask-restplus version on Python 3.6\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/443", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/443/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/443/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/443", "id": 325196391, "node_id": "MDU6SXNzdWUzMjUxOTYzOTE=", "number": 443, "title": "0.11.0 pip missing package enum", "user": {"login": "Fearxpc", "id": 19436061, "node_id": "MDQ6VXNlcjE5NDM2MDYx", "avatar_url": "https://avatars3.githubusercontent.com/u/19436061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fearxpc", "html_url": "https://github.com/Fearxpc", "followers_url": "https://api.github.com/users/Fearxpc/followers", "following_url": "https://api.github.com/users/Fearxpc/following{/other_user}", "gists_url": "https://api.github.com/users/Fearxpc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fearxpc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fearxpc/subscriptions", "organizations_url": "https://api.github.com/users/Fearxpc/orgs", "repos_url": "https://api.github.com/users/Fearxpc/repos", "events_url": "https://api.github.com/users/Fearxpc/events{/privacy}", "received_events_url": "https://api.github.com/users/Fearxpc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-22T08:47:42Z", "updated_at": "2018-06-02T10:52:34Z", "closed_at": "2018-06-02T10:52:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\ninstalling 0.11.0 via pip on python 2.7.X skips the enum package installation.\r\n\r\nTested on Ubuntu 16.04 LTS and CentOS 7.5\r\n\r\n```\r\ntest$ bin/python -V\r\nPython 2.7.12\r\n```\r\n\r\n```\r\ntest$ bin/pip install flask_restplus\r\nLooking in indexes: <artifactory>/api/pypi/pypi/simple\r\nCollecting flask_restplus\r\n  Downloading ...\r\nCollecting jsonschema (from flask_restplus)\r\n  Downloading ...\r\nCollecting aniso8601>=0.82 (from flask_restplus)\r\n  Downloading ...\r\nCollecting pytz (from flask_restplus)\r\n  Downloading ...\r\nCollecting six>=1.3.0 (from flask_restplus)\r\n  Downloading ...\r\nCollecting Flask>=0.8 (from flask_restplus)\r\n  Downloading ...\r\nCollecting functools32; python_version == \"2.7\" (from jsonschema->flask_restplus)\r\nCollecting Jinja2>=2.10 (from Flask>=0.8->flask_restplus)\r\n  Downloading ...\r\nCollecting itsdangerous>=0.24 (from Flask>=0.8->flask_restplus)\r\nCollecting Werkzeug>=0.14 (from Flask>=0.8->flask_restplus)\r\n  Downloading ...\r\nCollecting click>=5.1 (from Flask>=0.8->flask_restplus)\r\n  Downloading ...\r\nCollecting MarkupSafe>=0.23 (from Jinja2>=2.10->Flask>=0.8->flask_restplus)\r\nInstalling collected packages: functools32, jsonschema, aniso8601, pytz, six, MarkupSafe, Jinja2, itsdangerous, Werkzeug, click, Flask, flask-restplus\r\nSuccessfully installed Flask-1.0.2 Jinja2-2.10 MarkupSafe-1.0 Werkzeug-0.14.1 aniso8601-3.0.0 click-6.7 flask-restplus-0.11.0 functools32-3.2.3.post2 itsdangerous-0.24 jsonschema-2.6.0 pytz-2018.4 six-1.11.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/441", "repository_url": "https://api.github.com/repos/noirbizarre/flask-restplus", "labels_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/441/comments", "events_url": "https://api.github.com/repos/noirbizarre/flask-restplus/issues/441/events", "html_url": "https://github.com/noirbizarre/flask-restplus/issues/441", "id": 324450856, "node_id": "MDU6SXNzdWUzMjQ0NTA4NTY=", "number": 441, "title": "Is it possible to add custom, top-level attributes to swagger.json spec", "user": {"login": "woel0007", "id": 11514082, "node_id": "MDQ6VXNlcjExNTE0MDgy", "avatar_url": "https://avatars3.githubusercontent.com/u/11514082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/woel0007", "html_url": "https://github.com/woel0007", "followers_url": "https://api.github.com/users/woel0007/followers", "following_url": "https://api.github.com/users/woel0007/following{/other_user}", "gists_url": "https://api.github.com/users/woel0007/gists{/gist_id}", "starred_url": "https://api.github.com/users/woel0007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/woel0007/subscriptions", "organizations_url": "https://api.github.com/users/woel0007/orgs", "repos_url": "https://api.github.com/users/woel0007/repos", "events_url": "https://api.github.com/users/woel0007/events{/privacy}", "received_events_url": "https://api.github.com/users/woel0007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-18T15:15:33Z", "updated_at": "2018-05-25T14:59:06Z", "closed_at": "2018-05-25T14:59:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now that 0.11.0 is released (+1 @noirbizarre ) I've incorporated the use of the `api.vendor()` decorator to add custom attributes to the paths/methods as needed.  However, is there a way to add a custom, top-level attribute to the swagger spec:\r\n\r\nSomething like:\r\n```\r\nswagger: '2.0'\r\nbasePath: /my_api/v2\r\nx-api-definition: {\"custom-attribute\" : \"custom-value\"}\r\npaths:\r\n```\r\n\r\nIs there a way to add this?  ", "performed_via_github_app": null, "score": 1.0}]}