{"total_count": 46, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/117", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/117/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/117/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/117", "id": 674870534, "node_id": "MDU6SXNzdWU2NzQ4NzA1MzQ=", "number": 117, "title": "Cant update nested dictionaries", "user": {"login": "gooseillo", "id": 37607355, "node_id": "MDQ6VXNlcjM3NjA3MzU1", "avatar_url": "https://avatars3.githubusercontent.com/u/37607355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gooseillo", "html_url": "https://github.com/gooseillo", "followers_url": "https://api.github.com/users/gooseillo/followers", "following_url": "https://api.github.com/users/gooseillo/following{/other_user}", "gists_url": "https://api.github.com/users/gooseillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/gooseillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gooseillo/subscriptions", "organizations_url": "https://api.github.com/users/gooseillo/orgs", "repos_url": "https://api.github.com/users/gooseillo/repos", "events_url": "https://api.github.com/users/gooseillo/events{/privacy}", "received_events_url": "https://api.github.com/users/gooseillo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-07T08:57:15Z", "updated_at": "2020-08-07T09:04:15Z", "closed_at": "2020-08-07T09:04:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "example:\r\nmydict = SqliteDict('./my_db.sqlite', autocommit=True)\r\n\r\nmydict[1] = {'test1':'xyz', 'test2':'asd'}\r\nmydict[2] = {'test1':'xyz', 'test2':'asd'}\r\nmydict[3] = {'test1':'xyz', 'test2':'asd'}\r\n\r\nfor i, j in mydict.items():\r\n    print(i, j)\r\n\r\nResult:\r\n1 {'test1': 'xyz', 'test2': 'asd'}\r\n2 {'test1': 'xyz', 'test2': 'asd'}\r\n3 {'test1': 'xyz', 'test2': 'asd'}\r\n\r\nNow,\r\nIf I try to update the first key with another key value pair - \r\nit does not update it\r\n\r\nmydict[1]['test3'] = 'pqr'\r\n\r\nResult:\r\n1 {'test1': 'xyz', 'test2': 'asd'}\r\n2 {'test1': 'xyz', 'test2': 'asd'}\r\n3 {'test1': 'xyz', 'test2': 'asd'}", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/116", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/116/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/116/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/116", "id": 673140608, "node_id": "MDU6SXNzdWU2NzMxNDA2MDg=", "number": 116, "title": "Maybe this idea can work to update main key and update the object from there", "user": {"login": "Mradr", "id": 937790, "node_id": "MDQ6VXNlcjkzNzc5MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/937790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mradr", "html_url": "https://github.com/Mradr", "followers_url": "https://api.github.com/users/Mradr/followers", "following_url": "https://api.github.com/users/Mradr/following{/other_user}", "gists_url": "https://api.github.com/users/Mradr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mradr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mradr/subscriptions", "organizations_url": "https://api.github.com/users/Mradr/orgs", "repos_url": "https://api.github.com/users/Mradr/repos", "events_url": "https://api.github.com/users/Mradr/events{/privacy}", "received_events_url": "https://api.github.com/users/Mradr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-04T23:14:12Z", "updated_at": "2020-08-10T12:08:28Z", "closed_at": "2020-08-10T12:08:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I hated the automatic response I got from this person.... \r\n\r\nAnyways - working on this more I figure out you can add a little depth to update the parent. While this is just a rough idea - it seem to work from a quick few test runs. Adding support for list should be pretty easy as well same for any other type.\r\n\r\n```python\r\nclass ActionableDict(dict):\r\n    parent = None\r\n    def __init__(self, initial_dict, parent=None, parent_key=None):\r\n        self.parent = parent\r\n        self.parent_key = parent_key\r\n        for key, value in initial_dict.items():\r\n            if isinstance(value, dict):\r\n                initial_dict[key] = ActionableDict(value, self)\r\n        super().__init__(initial_dict)\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(value, dict):\r\n            _value = ActionableDict(value, self)\r\n        else:\r\n            _value = value\r\n        print(\"You are changing the value of {} to {}!!\".format(key, _value))\r\n        super().__setitem__(key, _value)\r\n        self._update_parent()\r\n\r\n    def _update_parent(self):\r\n        self.parent[self.parent_key] = self\r\n        print(type(self.parent))\r\n\r\nclass SqliteDict(DictClass):\r\n    def __getitem__(self, key):\r\n        GET_ITEM = 'SELECT value FROM \"%s\" WHERE key = ?' % self.tablename\r\n        item = self.conn.select_one(GET_ITEM, (key,))\r\n        if item is None:\r\n            raise KeyError(key)\r\n        item = self.decode(item[0])\r\n        if isinstance(item, dict):\r\n            return ActionableDict(item, self, key)\r\n        return item\r\n```\r\n\r\n\r\n\r\n\r\n\r\nYou need to update the beware section for more examples. Some of the examples around here display the above and thus can confuse the user.\r\n\r\nAlso, a bit of a mislead to say it supports it... what it does support is the ability to pick objects in a key/value first level. Any deeper and it breaks.\r\n\r\n_Originally posted by @Mradr in https://github.com/RaRe-Technologies/sqlitedict/issues/115#issuecomment-668556117_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/115", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/115/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/115/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/115", "id": 671587525, "node_id": "MDU6SXNzdWU2NzE1ODc1MjU=", "number": 115, "title": "Not updating the dict for some reason?", "user": {"login": "Mradr", "id": 937790, "node_id": "MDQ6VXNlcjkzNzc5MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/937790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mradr", "html_url": "https://github.com/Mradr", "followers_url": "https://api.github.com/users/Mradr/followers", "following_url": "https://api.github.com/users/Mradr/following{/other_user}", "gists_url": "https://api.github.com/users/Mradr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mradr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mradr/subscriptions", "organizations_url": "https://api.github.com/users/Mradr/orgs", "repos_url": "https://api.github.com/users/Mradr/repos", "events_url": "https://api.github.com/users/Mradr/events{/privacy}", "received_events_url": "https://api.github.com/users/Mradr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-02T09:57:33Z", "updated_at": "2020-08-04T12:10:26Z", "closed_at": "2020-08-04T12:00:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I am a bit confuse on why this isn't working. While I understand that you can't change things in \"ram\" why does this  not work?\r\n\r\nself.settings = SqliteDict( f'database/devices/{id}/{id}.sqlite', tablename=id, autocommit=True )\r\nself.settings.update( copy.deepcopy( default_settings.default_device_settings ) )\r\nself.settings[\"profile\"] = settings < different settings just a {lots of objects} I tried both = and .update\r\nself.settings[\"profile\"][\"device_id\"] = id < id has to exist other wise the above wouldn't work, but I can confirm there is an entry here\r\nprint(self.settings[\"profile\"][\"device_id\"]) < says this either blank or does not exist. Why though? I updated the entry. Far as I understand it sqlitedict should like this?\r\n \r\nI understand there is a beware section - but if someone can point me in the right direction to make this work still that be great. I am not sure if I am just falling into the beware section and not understanding how to get out of it.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/112", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/112/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/112/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/112", "id": 650985537, "node_id": "MDU6SXNzdWU2NTA5ODU1Mzc=", "number": 112, "title": "Support tablenames with double quotes \"", "user": {"login": "vcalv", "id": 66543651, "node_id": "MDQ6VXNlcjY2NTQzNjUx", "avatar_url": "https://avatars1.githubusercontent.com/u/66543651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcalv", "html_url": "https://github.com/vcalv", "followers_url": "https://api.github.com/users/vcalv/followers", "following_url": "https://api.github.com/users/vcalv/following{/other_user}", "gists_url": "https://api.github.com/users/vcalv/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcalv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcalv/subscriptions", "organizations_url": "https://api.github.com/users/vcalv/orgs", "repos_url": "https://api.github.com/users/vcalv/repos", "events_url": "https://api.github.com/users/vcalv/events{/privacy}", "received_events_url": "https://api.github.com/users/vcalv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-05T02:02:06Z", "updated_at": "2020-08-21T04:47:10Z", "closed_at": "2020-08-21T04:47:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is no reason to not support tablenames with double quotes\r\n\r\nThe standard solution is to quote replace each one with 2 equal characters\r\n\r\n\" -> \"\"\r\n\r\nThis solution is backwards compatible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/110", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/110/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/110/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/110", "id": 611582662, "node_id": "MDU6SXNzdWU2MTE1ODI2NjI=", "number": 110, "title": "Append does not work on lists", "user": {"login": "tallero", "id": 7817636, "node_id": "MDQ6VXNlcjc4MTc2MzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7817636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tallero", "html_url": "https://github.com/tallero", "followers_url": "https://api.github.com/users/tallero/followers", "following_url": "https://api.github.com/users/tallero/following{/other_user}", "gists_url": "https://api.github.com/users/tallero/gists{/gist_id}", "starred_url": "https://api.github.com/users/tallero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tallero/subscriptions", "organizations_url": "https://api.github.com/users/tallero/orgs", "repos_url": "https://api.github.com/users/tallero/repos", "events_url": "https://api.github.com/users/tallero/events{/privacy}", "received_events_url": "https://api.github.com/users/tallero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-04T03:32:28Z", "updated_at": "2020-05-04T05:48:57Z", "closed_at": "2020-05-04T05:48:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this behaviour intended?\r\n\r\n```ipython\r\nIn [1]: from sqlitedict import SqliteDict                                                                                                                                                                                                      \r\n\r\nIn [2]: db_test = SqliteDict(\"db_test.db\", autocommit=True)                                                                                                                                                                                    \r\n\r\nIn [3]: db_test['test'] = []                                                                                                                                                                                                                   \r\n\r\nIn [4]: db_test['test'].append(1)                                                                                                                                                                                                              \r\n\r\nIn [5]: db_test['test']                                                                                                                                                                                                                        \r\nOut[5]: []\r\n\r\nIn [6]: \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/109", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/109/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/109/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/109", "id": 584732330, "node_id": "MDU6SXNzdWU1ODQ3MzIzMzA=", "number": 109, "title": "Add example how to delete a key/value pair", "user": {"login": "bluepuma77", "id": 5221187, "node_id": "MDQ6VXNlcjUyMjExODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5221187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluepuma77", "html_url": "https://github.com/bluepuma77", "followers_url": "https://api.github.com/users/bluepuma77/followers", "following_url": "https://api.github.com/users/bluepuma77/following{/other_user}", "gists_url": "https://api.github.com/users/bluepuma77/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluepuma77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluepuma77/subscriptions", "organizations_url": "https://api.github.com/users/bluepuma77/orgs", "repos_url": "https://api.github.com/users/bluepuma77/repos", "events_url": "https://api.github.com/users/bluepuma77/events{/privacy}", "received_events_url": "https://api.github.com/users/bluepuma77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-19T22:16:50Z", "updated_at": "2020-04-01T18:34:08Z", "closed_at": "2020-04-01T18:34:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for this great piece of software, it really makes dealing with key/value pairs and sqlite so much easier. \r\n\r\nThe documentation is good, I am just missing SELECT error handling and a DELETE example.\r\n\r\n```\r\ntry:\r\n    value = db[key]\r\nexcept KeyError:\r\n    print('Key not found', key)\r\n```\r\n\r\nWhat's the best way to DELETE a key/value pair from sqlite?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/104", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/104/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/104/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/104", "id": 516563897, "node_id": "MDU6SXNzdWU1MTY1NjM4OTc=", "number": 104, "title": "nested dictionary and SqliteDict ?", "user": {"login": "instasck", "id": 43851500, "node_id": "MDQ6VXNlcjQzODUxNTAw", "avatar_url": "https://avatars0.githubusercontent.com/u/43851500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/instasck", "html_url": "https://github.com/instasck", "followers_url": "https://api.github.com/users/instasck/followers", "following_url": "https://api.github.com/users/instasck/following{/other_user}", "gists_url": "https://api.github.com/users/instasck/gists{/gist_id}", "starred_url": "https://api.github.com/users/instasck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/instasck/subscriptions", "organizations_url": "https://api.github.com/users/instasck/orgs", "repos_url": "https://api.github.com/users/instasck/repos", "events_url": "https://api.github.com/users/instasck/events{/privacy}", "received_events_url": "https://api.github.com/users/instasck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-02T10:51:22Z", "updated_at": "2019-11-02T14:23:00Z", "closed_at": "2019-11-02T11:17:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "The way I use nested dictonery is as so:\r\n````\r\nnested_dict = lambda: defaultdict(nested_dict)\r\nips = nested_dict()\r\nips[ip]['count'] = 1\r\nips[ip]['proxy'] = 2\r\n...\r\n````\r\n\r\nCan it be used with this sqlitedict but not in a form of object (that not do autocommit)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/103", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/103/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/103/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/103", "id": 515230064, "node_id": "MDU6SXNzdWU1MTUyMzAwNjQ=", "number": 103, "title": "BUG: object not updating at db", "user": {"login": "instasck", "id": 43851500, "node_id": "MDQ6VXNlcjQzODUxNTAw", "avatar_url": "https://avatars0.githubusercontent.com/u/43851500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/instasck", "html_url": "https://github.com/instasck", "followers_url": "https://api.github.com/users/instasck/followers", "following_url": "https://api.github.com/users/instasck/following{/other_user}", "gists_url": "https://api.github.com/users/instasck/gists{/gist_id}", "starred_url": "https://api.github.com/users/instasck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/instasck/subscriptions", "organizations_url": "https://api.github.com/users/instasck/orgs", "repos_url": "https://api.github.com/users/instasck/repos", "events_url": "https://api.github.com/users/instasck/events{/privacy}", "received_events_url": "https://api.github.com/users/instasck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-31T07:45:41Z", "updated_at": "2019-10-31T08:05:18Z", "closed_at": "2019-10-31T08:05:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "code:\r\n````\r\nclass source_descriptor:\r\n\r\n    def __init__(self, timestamp):\r\n        self.timestamp = timestamp  # last visit\r\n        self.user_id = None\r\n        self.followers_count = None\r\n        self.aborted = False\r\n\r\nvisited_sources_record = SqliteDict(Settings.visited_sources_record_location, autocommit=True)\r\nvisited_sources_record[source] = source_descriptor(datetime.now())\r\nvisited_sources_record[source].followers_count = 5000\r\n````\r\n\r\n![image](https://user-images.githubusercontent.com/43851500/67928236-2e919c80-fbc3-11e9-8a91-164cbbe458d4.png)\r\n\r\n\r\nStay None.\r\n\r\nY?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/102", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/102/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/102/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/102", "id": 512847754, "node_id": "MDU6SXNzdWU1MTI4NDc3NTQ=", "number": 102, "title": "Performance: Pickle an Object each value change ?", "user": {"login": "instasck", "id": 43851500, "node_id": "MDQ6VXNlcjQzODUxNTAw", "avatar_url": "https://avatars0.githubusercontent.com/u/43851500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/instasck", "html_url": "https://github.com/instasck", "followers_url": "https://api.github.com/users/instasck/followers", "following_url": "https://api.github.com/users/instasck/following{/other_user}", "gists_url": "https://api.github.com/users/instasck/gists{/gist_id}", "starred_url": "https://api.github.com/users/instasck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/instasck/subscriptions", "organizations_url": "https://api.github.com/users/instasck/orgs", "repos_url": "https://api.github.com/users/instasck/repos", "events_url": "https://api.github.com/users/instasck/events{/privacy}", "received_events_url": "https://api.github.com/users/instasck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-26T15:20:01Z", "updated_at": "2020-03-10T19:41:14Z", "closed_at": "2020-03-10T19:10:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to have a dict contain objects:\r\n````\r\nclass MyClass:\r\n  x = 0\r\n  y = 0\r\n````\r\n\r\nWill it pickle the **whole** object and write it to disk (on autocommit) every time only x is changing ?\r\nCan we do anything to only modify x on disk ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/101", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/101/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/101/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/101", "id": 488393576, "node_id": "MDU6SXNzdWU0ODgzOTM1NzY=", "number": 101, "title": "nested keys ?", "user": {"login": "instasck", "id": 43851500, "node_id": "MDQ6VXNlcjQzODUxNTAw", "avatar_url": "https://avatars0.githubusercontent.com/u/43851500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/instasck", "html_url": "https://github.com/instasck", "followers_url": "https://api.github.com/users/instasck/followers", "following_url": "https://api.github.com/users/instasck/following{/other_user}", "gists_url": "https://api.github.com/users/instasck/gists{/gist_id}", "starred_url": "https://api.github.com/users/instasck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/instasck/subscriptions", "organizations_url": "https://api.github.com/users/instasck/orgs", "repos_url": "https://api.github.com/users/instasck/repos", "events_url": "https://api.github.com/users/instasck/events{/privacy}", "received_events_url": "https://api.github.com/users/instasck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-03T05:05:40Z", "updated_at": "2019-09-03T14:54:23Z", "closed_at": "2019-09-03T07:20:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "when trying to use nested dict it won't allow me:\r\ndb['first']['second'], what is the proper solution ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/100", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/100/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/100/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/100", "id": 488378985, "node_id": "MDU6SXNzdWU0ODgzNzg5ODU=", "number": 100, "title": "updateing a list: performance.", "user": {"login": "instasck", "id": 43851500, "node_id": "MDQ6VXNlcjQzODUxNTAw", "avatar_url": "https://avatars0.githubusercontent.com/u/43851500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/instasck", "html_url": "https://github.com/instasck", "followers_url": "https://api.github.com/users/instasck/followers", "following_url": "https://api.github.com/users/instasck/following{/other_user}", "gists_url": "https://api.github.com/users/instasck/gists{/gist_id}", "starred_url": "https://api.github.com/users/instasck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/instasck/subscriptions", "organizations_url": "https://api.github.com/users/instasck/orgs", "repos_url": "https://api.github.com/users/instasck/repos", "events_url": "https://api.github.com/users/instasck/events{/privacy}", "received_events_url": "https://api.github.com/users/instasck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-03T03:51:27Z", "updated_at": "2019-09-03T07:23:54Z", "closed_at": "2019-09-03T07:23:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the recomanded flow for storing a list of values (like sql tables) under a dict key ?\r\nWill appending to a list recommit the whole list ? only the last value ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/98", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/98/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/98/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/98", "id": 474847907, "node_id": "MDU6SXNzdWU0NzQ4NDc5MDc=", "number": 98, "title": "Fix license", "user": {"login": "r-barnes", "id": 3118036, "node_id": "MDQ6VXNlcjMxMTgwMzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3118036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r-barnes", "html_url": "https://github.com/r-barnes", "followers_url": "https://api.github.com/users/r-barnes/followers", "following_url": "https://api.github.com/users/r-barnes/following{/other_user}", "gists_url": "https://api.github.com/users/r-barnes/gists{/gist_id}", "starred_url": "https://api.github.com/users/r-barnes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r-barnes/subscriptions", "organizations_url": "https://api.github.com/users/r-barnes/orgs", "repos_url": "https://api.github.com/users/r-barnes/repos", "events_url": "https://api.github.com/users/r-barnes/events{/privacy}", "received_events_url": "https://api.github.com/users/r-barnes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-30T22:20:28Z", "updated_at": "2019-08-23T08:18:02Z", "closed_at": "2019-08-23T08:18:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "An Apache license is used by the project, but not detected by Github, which views it as being a custom license. If the license file could be changed so that Github recognizes it as Apache that'd make it easier to figure out licensing issues.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/93", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/93/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/93/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/93", "id": 424500032, "node_id": "MDU6SXNzdWU0MjQ1MDAwMzI=", "number": 93, "title": "autocommit does not commit if program exits", "user": {"login": "endlisnis", "id": 3651887, "node_id": "MDQ6VXNlcjM2NTE4ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3651887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/endlisnis", "html_url": "https://github.com/endlisnis", "followers_url": "https://api.github.com/users/endlisnis/followers", "following_url": "https://api.github.com/users/endlisnis/following{/other_user}", "gists_url": "https://api.github.com/users/endlisnis/gists{/gist_id}", "starred_url": "https://api.github.com/users/endlisnis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/endlisnis/subscriptions", "organizations_url": "https://api.github.com/users/endlisnis/orgs", "repos_url": "https://api.github.com/users/endlisnis/repos", "events_url": "https://api.github.com/users/endlisnis/events{/privacy}", "received_events_url": "https://api.github.com/users/endlisnis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 376855771, "node_id": "MDU6TGFiZWwzNzY4NTU3NzE=", "url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mpenkov", "id": 1101396, "node_id": "MDQ6VXNlcjExMDEzOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1101396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpenkov", "html_url": "https://github.com/mpenkov", "followers_url": "https://api.github.com/users/mpenkov/followers", "following_url": "https://api.github.com/users/mpenkov/following{/other_user}", "gists_url": "https://api.github.com/users/mpenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpenkov/subscriptions", "organizations_url": "https://api.github.com/users/mpenkov/orgs", "repos_url": "https://api.github.com/users/mpenkov/repos", "events_url": "https://api.github.com/users/mpenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/mpenkov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mpenkov", "id": 1101396, "node_id": "MDQ6VXNlcjExMDEzOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1101396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpenkov", "html_url": "https://github.com/mpenkov", "followers_url": "https://api.github.com/users/mpenkov/followers", "following_url": "https://api.github.com/users/mpenkov/following{/other_user}", "gists_url": "https://api.github.com/users/mpenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpenkov/subscriptions", "organizations_url": "https://api.github.com/users/mpenkov/orgs", "repos_url": "https://api.github.com/users/mpenkov/repos", "events_url": "https://api.github.com/users/mpenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/mpenkov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2019-03-23T13:18:48Z", "updated_at": "2020-01-01T15:43:42Z", "closed_at": "2020-01-01T15:43:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I ran into a problem in one of my programs where it was not committing some changes because my script exited shortly after the updates.\r\n\r\nHere is a example script that reliably reproduces the effect (for me):\r\n```\r\nimport json\r\nimport sqlitedict\r\nimport time\r\n\r\nclass Dict(sqlitedict.SqliteDict):\r\n    def __init__(self, name):\r\n        sqlitedict.SqliteDict.__init__(\r\n            self,\r\n            f'{name}.sqlite', autocommit=True,\r\n            encode=json.dumps, decode=json.loads )\r\n\r\nd = Dict('d')\r\nnow = int(time.time())\r\n\r\nfor i in range(100):\r\n    d[i] = now\r\n```\r\nIf I follow that up with a select, I only see 18 entries (sometimes I see zero entries):\r\n```\r\n$ sqlite3 d.sqlite 'SELECT * from unnamed'\r\n0|1553346705\r\n1|1553346705\r\n2|1553346705\r\n3|1553346705\r\n4|1553346705\r\n5|1553346705\r\n6|1553346705\r\n7|1553346705\r\n8|1553346705\r\n9|1553346705\r\n10|1553346705\r\n11|1553346705\r\n12|1553346705\r\n13|1553346705\r\n14|1553346705\r\n15|1553346705\r\n16|1553346705\r\n17|1553346705\r\n18|1553346705\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/92", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/92/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/92/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/92", "id": 416295092, "node_id": "MDU6SXNzdWU0MTYyOTUwOTI=", "number": 92, "title": "disk read/write rise and application get stuck.", "user": {"login": "sionking", "id": 7851877, "node_id": "MDQ6VXNlcjc4NTE4Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7851877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sionking", "html_url": "https://github.com/sionking", "followers_url": "https://api.github.com/users/sionking/followers", "following_url": "https://api.github.com/users/sionking/following{/other_user}", "gists_url": "https://api.github.com/users/sionking/gists{/gist_id}", "starred_url": "https://api.github.com/users/sionking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sionking/subscriptions", "organizations_url": "https://api.github.com/users/sionking/orgs", "repos_url": "https://api.github.com/users/sionking/repos", "events_url": "https://api.github.com/users/sionking/events{/privacy}", "received_events_url": "https://api.github.com/users/sionking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-01T21:56:56Z", "updated_at": "2019-10-26T11:23:37Z", "closed_at": "2019-10-26T11:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "when the system is busy with multiple thread writing to the sql dict sometimes I get the following beehive:\r\n![image](https://user-images.githubusercontent.com/7851877/53668732-6daacf00-3c7d-11e9-9c27-3b2dac6c1660.png)\r\n\r\nI don't think it is my application since it is only happens when many threads do lots of read/write to disk using sqlitedict.\r\n\r\nany suggestions ? I thought of schedule \"sync\" writing to disk instead of commit every operation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/91", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/91/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/91/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/91", "id": 408591109, "node_id": "MDU6SXNzdWU0MDg1OTExMDk=", "number": 91, "title": "splitting by key into multiple sqlite files", "user": {"login": "notestaff", "id": 1517155, "node_id": "MDQ6VXNlcjE1MTcxNTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1517155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notestaff", "html_url": "https://github.com/notestaff", "followers_url": "https://api.github.com/users/notestaff/followers", "following_url": "https://api.github.com/users/notestaff/following{/other_user}", "gists_url": "https://api.github.com/users/notestaff/gists{/gist_id}", "starred_url": "https://api.github.com/users/notestaff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notestaff/subscriptions", "organizations_url": "https://api.github.com/users/notestaff/orgs", "repos_url": "https://api.github.com/users/notestaff/repos", "events_url": "https://api.github.com/users/notestaff/events{/privacy}", "received_events_url": "https://api.github.com/users/notestaff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-10T22:42:26Z", "updated_at": "2019-02-11T07:12:39Z", "closed_at": "2019-02-11T07:12:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "To improve concurrent access, it would help to split the sqlite database file into multiple files, with the key hash determining which file stores the full key-value mapping for the key.  Then concurrent writes would be ok as long as the keys are assigned to different sqlite database files.  You'd initialize sqlitedict not with a file but with a directory, and under that directory would create the sqlite db files.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/88", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/88/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/88/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/88", "id": 380043020, "node_id": "MDU6SXNzdWUzODAwNDMwMjA=", "number": 88, "title": "To create value as non-blob type", "user": {"login": "occoder", "id": 1981057, "node_id": "MDQ6VXNlcjE5ODEwNTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1981057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/occoder", "html_url": "https://github.com/occoder", "followers_url": "https://api.github.com/users/occoder/followers", "following_url": "https://api.github.com/users/occoder/following{/other_user}", "gists_url": "https://api.github.com/users/occoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/occoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/occoder/subscriptions", "organizations_url": "https://api.github.com/users/occoder/orgs", "repos_url": "https://api.github.com/users/occoder/repos", "events_url": "https://api.github.com/users/occoder/events{/privacy}", "received_events_url": "https://api.github.com/users/occoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-13T03:25:51Z", "updated_at": "2019-01-17T03:59:59Z", "closed_at": "2019-01-17T03:59:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI notice that all the values created and entered into sqlite file are of type BLOB.\r\n`MAKE_TABLE = 'CREATE TABLE IF NOT EXISTS \"%s\" (key TEXT PRIMARY KEY, value BLOB)' % self.tablename`\r\nWhen I need to use a GUI tool like https://github.com/sqlitebrowser/sqlitebrowser to check and adjust the table content, the value can not be shown appropriately.\r\nIf possible, how to customize the vaule type?\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/87", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/87/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/87/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/87", "id": 378543351, "node_id": "MDU6SXNzdWUzNzg1NDMzNTE=", "number": 87, "title": "Comparison with Python Disk Cache", "user": {"login": "grantjenks", "id": 118304, "node_id": "MDQ6VXNlcjExODMwNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/118304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grantjenks", "html_url": "https://github.com/grantjenks", "followers_url": "https://api.github.com/users/grantjenks/followers", "following_url": "https://api.github.com/users/grantjenks/following{/other_user}", "gists_url": "https://api.github.com/users/grantjenks/gists{/gist_id}", "starred_url": "https://api.github.com/users/grantjenks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grantjenks/subscriptions", "organizations_url": "https://api.github.com/users/grantjenks/orgs", "repos_url": "https://api.github.com/users/grantjenks/repos", "events_url": "https://api.github.com/users/grantjenks/events{/privacy}", "received_events_url": "https://api.github.com/users/grantjenks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 376855830, "node_id": "MDU6TGFiZWwzNzY4NTU4MzA=", "url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/labels/documentation", "name": "documentation", "color": "02d7e1", "default": true, "description": null}, {"id": 453625348, "node_id": "MDU6TGFiZWw0NTM2MjUzNDg=", "url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/labels/medium%20difficult", "name": "medium difficult", "color": "00d000", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-08T01:44:23Z", "updated_at": "2019-02-12T21:38:09Z", "closed_at": "2019-02-12T21:38:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm the author of the [Python Disk Cache](https://github.com/grantjenks/python-diskcache/) project and it seems like there's a lot of overlap with sqlitedict. I was interested in doing a feature comparison and started researching [features](https://github.com/grantjenks/python-diskcache/issues/82).\r\n\r\nI'd love to get your feedback on the diskcache project.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/84", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/84/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/84/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/84", "id": 374118404, "node_id": "MDU6SXNzdWUzNzQxMTg0MDQ=", "number": 84, "title": "Feature Request: Store nested dictionaries as new tables", "user": {"login": "Jwink3101", "id": 3073584, "node_id": "MDQ6VXNlcjMwNzM1ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3073584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jwink3101", "html_url": "https://github.com/Jwink3101", "followers_url": "https://api.github.com/users/Jwink3101/followers", "following_url": "https://api.github.com/users/Jwink3101/following{/other_user}", "gists_url": "https://api.github.com/users/Jwink3101/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jwink3101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jwink3101/subscriptions", "organizations_url": "https://api.github.com/users/Jwink3101/orgs", "repos_url": "https://api.github.com/users/Jwink3101/repos", "events_url": "https://api.github.com/users/Jwink3101/events{/privacy}", "received_events_url": "https://api.github.com/users/Jwink3101/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 376855793, "node_id": "MDU6TGFiZWwzNzY4NTU3OTM=", "url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/labels/feature", "name": "feature", "color": "0052cc", "default": false, "description": null}, {"id": 453625348, "node_id": "MDU6TGFiZWw0NTM2MjUzNDg=", "url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/labels/medium%20difficult", "name": "medium difficult", "color": "00d000", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-25T20:26:48Z", "updated_at": "2019-11-03T07:27:41Z", "closed_at": "2019-01-17T07:59:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is both a feature request and to get an idea if people would be interested. Essentially, if you have a sub-dictionary that is not at the top level, the entire thing also has to be encoded.\r\n\r\nI propose that when a user *explicitly* says to, make a subdictionary a new table as well. The idea is still very rough, but essentially modify the main class to be able to have a parent class (and therefore share the connection). Then, add a function that creates a new `SqliteDict` child instance. The table name should either something like `tablename + uuid4()`. Then this new object will behave just like its own `SqliteDict`. The only difference will be when you `__setitem__` (or `update`) a child instance, it will instead make a pointer to that table and when you `__getitem__` it will recreate it and when you `__delitem__`, it will drop it.\r\n\r\nI *think* autocommit should still work and carry through.\r\n\r\nA final idea along the same vein (though certainly harder to do) is to make a list-like object that behaves the same way. Use a sub `SqliteDict` under the hood but allow for storage. THis may be farther fetched.\r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/83", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/83/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/83/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/83", "id": 371082999, "node_id": "MDU6SXNzdWUzNzEwODI5OTk=", "number": 83, "title": "Stuck at commit?", "user": {"login": "chengguangnan", "id": 861069, "node_id": "MDQ6VXNlcjg2MTA2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/861069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chengguangnan", "html_url": "https://github.com/chengguangnan", "followers_url": "https://api.github.com/users/chengguangnan/followers", "following_url": "https://api.github.com/users/chengguangnan/following{/other_user}", "gists_url": "https://api.github.com/users/chengguangnan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chengguangnan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chengguangnan/subscriptions", "organizations_url": "https://api.github.com/users/chengguangnan/orgs", "repos_url": "https://api.github.com/users/chengguangnan/repos", "events_url": "https://api.github.com/users/chengguangnan/events{/privacy}", "received_events_url": "https://api.github.com/users/chengguangnan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-17T13:43:12Z", "updated_at": "2018-10-18T09:20:04Z", "closed_at": "2018-10-18T06:27:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry I can't figure out a reproducible example for this. But in a real world project, whenever 100 keys were added, reopen the Sqlitedict will stuck at the commit below.\r\n\r\n```\r\n        logger.info(\"opening Sqlite table %r in %s\" % (tablename, filename))\r\n        MAKE_TABLE = 'CREATE TABLE IF NOT EXISTS \"%s\" (key TEXT PRIMARY KEY, value BLOB)' % self.tablename\r\n        logger.info(MAKE_TABLE)\r\n        self.conn = self._new_conn()\r\n        logger.info(\"execute\")\r\n        self.conn.execute(MAKE_TABLE)\r\n        logger.info(\"commit\")\r\n        self.conn.commit()\r\n```\r\n\r\nI tried to reproduce this in an isolated example, but the problem doesn't happen in this example. But I attached it below anyway. My values contains nested dictionaries and about 30 fields, about 180K on disk. I switched to `shelve` because I have no idea what could be the cause. JFYI.\r\n\r\n```\r\nimport sqlitedict\r\n\r\n\r\ndef ss():\r\n    return sqlitedict.SqliteDict(\"cache.sqlite\", autocommit=True)\r\n\r\nfor i in range(3000000):\r\n    key = f\"key-{i}\"\r\n    print(key)\r\n    with ss() as sd:\r\n        sd[key] = dict(foo=1, nested=dict(bar=1))\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/82", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/82/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/82/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/82", "id": 356481577, "node_id": "MDU6SXNzdWUzNTY0ODE1Nzc=", "number": 82, "title": "ENH: make multithreading support optional", "user": {"login": "abast", "id": 20513804, "node_id": "MDQ6VXNlcjIwNTEzODA0", "avatar_url": "https://avatars0.githubusercontent.com/u/20513804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abast", "html_url": "https://github.com/abast", "followers_url": "https://api.github.com/users/abast/followers", "following_url": "https://api.github.com/users/abast/following{/other_user}", "gists_url": "https://api.github.com/users/abast/gists{/gist_id}", "starred_url": "https://api.github.com/users/abast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abast/subscriptions", "organizations_url": "https://api.github.com/users/abast/orgs", "repos_url": "https://api.github.com/users/abast/repos", "events_url": "https://api.github.com/users/abast/events{/privacy}", "received_events_url": "https://api.github.com/users/abast/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-09-03T12:13:03Z", "updated_at": "2020-08-10T12:00:53Z", "closed_at": "2020-08-10T12:00:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the special case that I just open the database, read some item and close it again, the multi-threading support causes significant overhead. I would therefore suggest to make it optional.\r\n\r\nHow could this be achieved in a way that requires only small code changes?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/81", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/81/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/81/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/81", "id": 349710082, "node_id": "MDU6SXNzdWUzNDk3MTAwODI=", "number": 81, "title": "autocommit = off/on.", "user": {"login": "sionking", "id": 7851877, "node_id": "MDQ6VXNlcjc4NTE4Nzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7851877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sionking", "html_url": "https://github.com/sionking", "followers_url": "https://api.github.com/users/sionking/followers", "following_url": "https://api.github.com/users/sionking/following{/other_user}", "gists_url": "https://api.github.com/users/sionking/gists{/gist_id}", "starred_url": "https://api.github.com/users/sionking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sionking/subscriptions", "organizations_url": "https://api.github.com/users/sionking/orgs", "repos_url": "https://api.github.com/users/sionking/repos", "events_url": "https://api.github.com/users/sionking/events{/privacy}", "received_events_url": "https://api.github.com/users/sionking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-11T06:17:31Z", "updated_at": "2018-08-12T20:49:49Z", "closed_at": "2018-08-11T06:57:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I do autocommit on, will it retrieve the data from disk or from memory?\r\nIf I want to retrieve last 1000 values from memory and the rest from disk, should I commit once in 1000 new values ?\r\n\r\nIn general what is the memory consumption of the dict in RAM ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/80", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/80/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/80/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/80", "id": 340827058, "node_id": "MDU6SXNzdWUzNDA4MjcwNTg=", "number": 80, "title": "Nested dictionaries not supported", "user": {"login": "sshindesiddesh", "id": 10807201, "node_id": "MDQ6VXNlcjEwODA3MjAx", "avatar_url": "https://avatars3.githubusercontent.com/u/10807201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sshindesiddesh", "html_url": "https://github.com/sshindesiddesh", "followers_url": "https://api.github.com/users/sshindesiddesh/followers", "following_url": "https://api.github.com/users/sshindesiddesh/following{/other_user}", "gists_url": "https://api.github.com/users/sshindesiddesh/gists{/gist_id}", "starred_url": "https://api.github.com/users/sshindesiddesh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sshindesiddesh/subscriptions", "organizations_url": "https://api.github.com/users/sshindesiddesh/orgs", "repos_url": "https://api.github.com/users/sshindesiddesh/repos", "events_url": "https://api.github.com/users/sshindesiddesh/events{/privacy}", "received_events_url": "https://api.github.com/users/sshindesiddesh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-12T23:01:23Z", "updated_at": "2018-07-13T10:36:24Z", "closed_at": "2018-07-13T10:36:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any plan to support the persistence of nested dictionaries?\r\n\r\nE.g.\r\nmydict = SqliteDict('./my_db.sqlite', autocommit=True)\r\nnewdict = dict()\r\ndict['key-1'] = 'value-1'\r\nmydict['newdict'] = newdict\r\n\r\n- Untill here everything is persistent. But if I modify the internal dictionary now, it is not persisted.\r\n\r\nnewdict1 = mydict['newdict']\r\nnewdict1['key-2'] = 'value-2'\r\n\r\nBut this new key ('key-2') is not reflected in the database.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/78", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/78/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/78/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/78", "id": 325958635, "node_id": "MDU6SXNzdWUzMjU5NTg2MzU=", "number": 78, "title": "License file", "user": {"login": "toddrme2178", "id": 4181796, "node_id": "MDQ6VXNlcjQxODE3OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4181796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toddrme2178", "html_url": "https://github.com/toddrme2178", "followers_url": "https://api.github.com/users/toddrme2178/followers", "following_url": "https://api.github.com/users/toddrme2178/following{/other_user}", "gists_url": "https://api.github.com/users/toddrme2178/gists{/gist_id}", "starred_url": "https://api.github.com/users/toddrme2178/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toddrme2178/subscriptions", "organizations_url": "https://api.github.com/users/toddrme2178/orgs", "repos_url": "https://api.github.com/users/toddrme2178/repos", "events_url": "https://api.github.com/users/toddrme2178/events{/privacy}", "received_events_url": "https://api.github.com/users/toddrme2178/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-24T04:19:29Z", "updated_at": "2018-05-24T16:14:16Z", "closed_at": "2018-05-24T16:14:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to package sqlitedict for openSUSE. However, there is no license file I can find, either in the github or tarball. In order for people to know how they can use your code it is really important to have a license file. Would it be possible to add one? Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/75", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/75/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/75/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/75", "id": 303990220, "node_id": "MDU6SXNzdWUzMDM5OTAyMjA=", "number": 75, "title": "Retrieving value of a specific key is slow", "user": {"login": "MiladAlshomary", "id": 10075966, "node_id": "MDQ6VXNlcjEwMDc1OTY2", "avatar_url": "https://avatars0.githubusercontent.com/u/10075966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MiladAlshomary", "html_url": "https://github.com/MiladAlshomary", "followers_url": "https://api.github.com/users/MiladAlshomary/followers", "following_url": "https://api.github.com/users/MiladAlshomary/following{/other_user}", "gists_url": "https://api.github.com/users/MiladAlshomary/gists{/gist_id}", "starred_url": "https://api.github.com/users/MiladAlshomary/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MiladAlshomary/subscriptions", "organizations_url": "https://api.github.com/users/MiladAlshomary/orgs", "repos_url": "https://api.github.com/users/MiladAlshomary/repos", "events_url": "https://api.github.com/users/MiladAlshomary/events{/privacy}", "received_events_url": "https://api.github.com/users/MiladAlshomary/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-09T21:45:03Z", "updated_at": "2018-03-13T05:11:14Z", "closed_at": "2018-03-13T05:11:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a sqllite dictionary contains 4.2 million key. Each value is a list of pyspark [sparsevector](https://spark.apache.org/docs/1.1.0/api/python/pyspark.mllib.linalg.SparseVector-class.html)\r\n\r\nTrying to retrieve the value of a specific key takes around 3 seconds! any known issue related?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/71", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/71/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/71/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/71", "id": 289370885, "node_id": "MDU6SXNzdWUyODkzNzA4ODU=", "number": 71, "title": "add method that lists all tables", "user": {"login": "transfluxus", "id": 1574219, "node_id": "MDQ6VXNlcjE1NzQyMTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1574219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/transfluxus", "html_url": "https://github.com/transfluxus", "followers_url": "https://api.github.com/users/transfluxus/followers", "following_url": "https://api.github.com/users/transfluxus/following{/other_user}", "gists_url": "https://api.github.com/users/transfluxus/gists{/gist_id}", "starred_url": "https://api.github.com/users/transfluxus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/transfluxus/subscriptions", "organizations_url": "https://api.github.com/users/transfluxus/orgs", "repos_url": "https://api.github.com/users/transfluxus/repos", "events_url": "https://api.github.com/users/transfluxus/events{/privacy}", "received_events_url": "https://api.github.com/users/transfluxus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 453625420, "node_id": "MDU6TGFiZWw0NTM2MjU0MjA=", "url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/labels/easy", "name": "easy", "color": "00ff00", "default": false, "description": null}, {"id": 376855793, "node_id": "MDU6TGFiZWwzNzY4NTU3OTM=", "url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/labels/feature", "name": "feature", "color": "0052cc", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-17T18:41:15Z", "updated_at": "2018-01-26T08:10:38Z", "closed_at": "2018-01-26T08:10:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "would be very useful to know which tables exists. Could be a static function that takes a db file as argument", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/68", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/68/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/68/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/68", "id": 258203237, "node_id": "MDU6SXNzdWUyNTgyMDMyMzc=", "number": 68, "title": "Maximum number of keys and multiple dicts in a database?", "user": {"login": "ayaanhossain", "id": 26147572, "node_id": "MDQ6VXNlcjI2MTQ3NTcy", "avatar_url": "https://avatars0.githubusercontent.com/u/26147572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayaanhossain", "html_url": "https://github.com/ayaanhossain", "followers_url": "https://api.github.com/users/ayaanhossain/followers", "following_url": "https://api.github.com/users/ayaanhossain/following{/other_user}", "gists_url": "https://api.github.com/users/ayaanhossain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayaanhossain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayaanhossain/subscriptions", "organizations_url": "https://api.github.com/users/ayaanhossain/orgs", "repos_url": "https://api.github.com/users/ayaanhossain/repos", "events_url": "https://api.github.com/users/ayaanhossain/events{/privacy}", "received_events_url": "https://api.github.com/users/ayaanhossain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "menshikh-iv", "id": 15094669, "node_id": "MDQ6VXNlcjE1MDk0NjY5", "avatar_url": "https://avatars2.githubusercontent.com/u/15094669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/menshikh-iv", "html_url": "https://github.com/menshikh-iv", "followers_url": "https://api.github.com/users/menshikh-iv/followers", "following_url": "https://api.github.com/users/menshikh-iv/following{/other_user}", "gists_url": "https://api.github.com/users/menshikh-iv/gists{/gist_id}", "starred_url": "https://api.github.com/users/menshikh-iv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/menshikh-iv/subscriptions", "organizations_url": "https://api.github.com/users/menshikh-iv/orgs", "repos_url": "https://api.github.com/users/menshikh-iv/repos", "events_url": "https://api.github.com/users/menshikh-iv/events{/privacy}", "received_events_url": "https://api.github.com/users/menshikh-iv/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "menshikh-iv", "id": 15094669, "node_id": "MDQ6VXNlcjE1MDk0NjY5", "avatar_url": "https://avatars2.githubusercontent.com/u/15094669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/menshikh-iv", "html_url": "https://github.com/menshikh-iv", "followers_url": "https://api.github.com/users/menshikh-iv/followers", "following_url": "https://api.github.com/users/menshikh-iv/following{/other_user}", "gists_url": "https://api.github.com/users/menshikh-iv/gists{/gist_id}", "starred_url": "https://api.github.com/users/menshikh-iv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/menshikh-iv/subscriptions", "organizations_url": "https://api.github.com/users/menshikh-iv/orgs", "repos_url": "https://api.github.com/users/menshikh-iv/repos", "events_url": "https://api.github.com/users/menshikh-iv/events{/privacy}", "received_events_url": "https://api.github.com/users/menshikh-iv/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-09-16T02:59:45Z", "updated_at": "2017-09-19T07:23:59Z", "closed_at": "2017-09-19T06:18:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I was wondering about (a) what is the maximum number of keys that can be used in sqlitedict? and (b) how to use to use multiple dicts in the same database (that's a feature you listed in the readme I guess) and what is the maximum number of such dicts that can be present in the database?\r\n\r\nTypically, is it possible to have like 20 billion keys whose values are lists of integers in a single dict? Also can I have hundreds of such dicts in the same db file?\r\n\r\nThanks,\r\nAyaan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/66", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/66/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/66/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/66", "id": 212261933, "node_id": "MDU6SXNzdWUyMTIyNjE5MzM=", "number": 66, "title": "Question: Issues with json encode? Also, is it multiprocess safe?", "user": {"login": "Jwink3101", "id": 3073584, "node_id": "MDQ6VXNlcjMwNzM1ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/3073584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jwink3101", "html_url": "https://github.com/Jwink3101", "followers_url": "https://api.github.com/users/Jwink3101/followers", "following_url": "https://api.github.com/users/Jwink3101/following{/other_user}", "gists_url": "https://api.github.com/users/Jwink3101/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jwink3101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jwink3101/subscriptions", "organizations_url": "https://api.github.com/users/Jwink3101/orgs", "repos_url": "https://api.github.com/users/Jwink3101/repos", "events_url": "https://api.github.com/users/Jwink3101/events{/privacy}", "received_events_url": "https://api.github.com/users/Jwink3101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tmylk", "id": 1261528, "node_id": "MDQ6VXNlcjEyNjE1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1261528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmylk", "html_url": "https://github.com/tmylk", "followers_url": "https://api.github.com/users/tmylk/followers", "following_url": "https://api.github.com/users/tmylk/following{/other_user}", "gists_url": "https://api.github.com/users/tmylk/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmylk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmylk/subscriptions", "organizations_url": "https://api.github.com/users/tmylk/orgs", "repos_url": "https://api.github.com/users/tmylk/repos", "events_url": "https://api.github.com/users/tmylk/events{/privacy}", "received_events_url": "https://api.github.com/users/tmylk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tmylk", "id": 1261528, "node_id": "MDQ6VXNlcjEyNjE1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1261528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmylk", "html_url": "https://github.com/tmylk", "followers_url": "https://api.github.com/users/tmylk/followers", "following_url": "https://api.github.com/users/tmylk/following{/other_user}", "gists_url": "https://api.github.com/users/tmylk/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmylk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmylk/subscriptions", "organizations_url": "https://api.github.com/users/tmylk/orgs", "repos_url": "https://api.github.com/users/tmylk/repos", "events_url": "https://api.github.com/users/tmylk/events{/privacy}", "received_events_url": "https://api.github.com/users/tmylk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-03-06T21:54:19Z", "updated_at": "2017-03-06T23:16:23Z", "closed_at": "2017-03-06T23:05:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry, not  a bug, just a question. I am very interested in this tool for a data store on a tiny web app. I do not want to just use JSON files since I want it to be thread-safe (even though it won't really ever be an issue). Is this safe for multiple processes to try to write it? I know multiple threads work.\r\n\r\nAnyway, is there a downside to using `json.dumps` and `json.loads` for the encoder and decoder? Is it just a bit slower?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/58", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/58/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/58/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/58", "id": 199380032, "node_id": "MDU6SXNzdWUxOTkzODAwMzI=", "number": 58, "title": "Python 3.6 support: sqlite3.OperationalError: Safety level may not be changed inside a transaction", "user": {"login": "bit", "id": 102392, "node_id": "MDQ6VXNlcjEwMjM5Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/102392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bit", "html_url": "https://github.com/bit", "followers_url": "https://api.github.com/users/bit/followers", "following_url": "https://api.github.com/users/bit/following{/other_user}", "gists_url": "https://api.github.com/users/bit/gists{/gist_id}", "starred_url": "https://api.github.com/users/bit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bit/subscriptions", "organizations_url": "https://api.github.com/users/bit/orgs", "repos_url": "https://api.github.com/users/bit/repos", "events_url": "https://api.github.com/users/bit/events{/privacy}", "received_events_url": "https://api.github.com/users/bit/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 376855771, "node_id": "MDU6TGFiZWwzNzY4NTU3NzE=", "url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "tmylk", "id": 1261528, "node_id": "MDQ6VXNlcjEyNjE1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1261528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmylk", "html_url": "https://github.com/tmylk", "followers_url": "https://api.github.com/users/tmylk/followers", "following_url": "https://api.github.com/users/tmylk/following{/other_user}", "gists_url": "https://api.github.com/users/tmylk/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmylk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmylk/subscriptions", "organizations_url": "https://api.github.com/users/tmylk/orgs", "repos_url": "https://api.github.com/users/tmylk/repos", "events_url": "https://api.github.com/users/tmylk/events{/privacy}", "received_events_url": "https://api.github.com/users/tmylk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tmylk", "id": 1261528, "node_id": "MDQ6VXNlcjEyNjE1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1261528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmylk", "html_url": "https://github.com/tmylk", "followers_url": "https://api.github.com/users/tmylk/followers", "following_url": "https://api.github.com/users/tmylk/following{/other_user}", "gists_url": "https://api.github.com/users/tmylk/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmylk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmylk/subscriptions", "organizations_url": "https://api.github.com/users/tmylk/orgs", "repos_url": "https://api.github.com/users/tmylk/repos", "events_url": "https://api.github.com/users/tmylk/events{/privacy}", "received_events_url": "https://api.github.com/users/tmylk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2017-01-07T19:26:42Z", "updated_at": "2017-01-08T19:54:46Z", "closed_at": "2017-01-08T19:54:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "fails in python3.6 with\r\n\r\nException in thread Thread-2:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \".../site-packages/sqlitedict.py\", line 371, in run\r\n    cursor.execute('PRAGMA synchronous=OFF')\r\nsqlite3.OperationalError: Safety level may not be changed inside a transaction\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/56", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/56/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/56/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/56", "id": 179121566, "node_id": "MDU6SXNzdWUxNzkxMjE1NjY=", "number": 56, "title": "Remove downloads", "user": {"login": "piskvorky", "id": 610412, "node_id": "MDQ6VXNlcjYxMDQxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/610412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piskvorky", "html_url": "https://github.com/piskvorky", "followers_url": "https://api.github.com/users/piskvorky/followers", "following_url": "https://api.github.com/users/piskvorky/following{/other_user}", "gists_url": "https://api.github.com/users/piskvorky/gists{/gist_id}", "starred_url": "https://api.github.com/users/piskvorky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piskvorky/subscriptions", "organizations_url": "https://api.github.com/users/piskvorky/orgs", "repos_url": "https://api.github.com/users/piskvorky/repos", "events_url": "https://api.github.com/users/piskvorky/events{/privacy}", "received_events_url": "https://api.github.com/users/piskvorky/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 376855830, "node_id": "MDU6TGFiZWwzNzY4NTU4MzA=", "url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/labels/documentation", "name": "documentation", "color": "02d7e1", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "tmylk", "id": 1261528, "node_id": "MDQ6VXNlcjEyNjE1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1261528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmylk", "html_url": "https://github.com/tmylk", "followers_url": "https://api.github.com/users/tmylk/followers", "following_url": "https://api.github.com/users/tmylk/following{/other_user}", "gists_url": "https://api.github.com/users/tmylk/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmylk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmylk/subscriptions", "organizations_url": "https://api.github.com/users/tmylk/orgs", "repos_url": "https://api.github.com/users/tmylk/repos", "events_url": "https://api.github.com/users/tmylk/events{/privacy}", "received_events_url": "https://api.github.com/users/tmylk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tmylk", "id": 1261528, "node_id": "MDQ6VXNlcjEyNjE1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1261528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmylk", "html_url": "https://github.com/tmylk", "followers_url": "https://api.github.com/users/tmylk/followers", "following_url": "https://api.github.com/users/tmylk/following{/other_user}", "gists_url": "https://api.github.com/users/tmylk/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmylk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmylk/subscriptions", "organizations_url": "https://api.github.com/users/tmylk/orgs", "repos_url": "https://api.github.com/users/tmylk/repos", "events_url": "https://api.github.com/users/tmylk/events{/privacy}", "received_events_url": "https://api.github.com/users/tmylk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2016-09-26T01:20:29Z", "updated_at": "2016-09-29T13:56:32Z", "closed_at": "2016-09-29T13:56:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PyPI is broken (has been broken for months) and no longer records package download numbers.\n\nRemove the download badge, it looks silly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/54", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/54/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/54/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/54", "id": 168340128, "node_id": "MDU6SXNzdWUxNjgzNDAxMjg=", "number": 54, "title": "Using context manager fails if used more than once", "user": {"login": "ecederstrand", "id": 559151, "node_id": "MDQ6VXNlcjU1OTE1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/559151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecederstrand", "html_url": "https://github.com/ecederstrand", "followers_url": "https://api.github.com/users/ecederstrand/followers", "following_url": "https://api.github.com/users/ecederstrand/following{/other_user}", "gists_url": "https://api.github.com/users/ecederstrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecederstrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecederstrand/subscriptions", "organizations_url": "https://api.github.com/users/ecederstrand/orgs", "repos_url": "https://api.github.com/users/ecederstrand/repos", "events_url": "https://api.github.com/users/ecederstrand/events{/privacy}", "received_events_url": "https://api.github.com/users/ecederstrand/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 376855771, "node_id": "MDU6TGFiZWwzNzY4NTU3NzE=", "url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/labels/bug", "name": "bug", "color": "d93f0b", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-29T14:41:43Z", "updated_at": "2017-09-13T12:31:34Z", "closed_at": "2016-08-26T16:49:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\n>>> foo = SqliteDict('foo.sqlite')\r\n>>> with foo:\r\n...    foo[1] = 2\r\n... \r\n>>> with foo:\r\n...    foo[1] = 2\r\n... \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\n  File \"/lib/python3.4/site-packages/sqlitedict.py\", line 233, in __setitem__\r\n    self.conn.execute(ADD_ITEM, (key, encode(value)))\r\nAttributeError: 'NoneType' object has no attribute 'execute'\r\n```\r\n\r\nThis is because `__exit__` calls `close()` which deletes `self.conn`.\r\n\r\nit seems `__enter__` should check that `self.conn` exists and create it otherwise. I could just go through `__init__` once more, but `__init__` contains unnecessary actions like `CREATE TABLE ...`\r\n\r\nI can create a patch if this issue is accepted.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/46", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/46/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/46/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/46", "id": 153266076, "node_id": "MDU6SXNzdWUxNTMyNjYwNzY=", "number": 46, "title": "program without close does not stop", "user": {"login": "grizlupo", "id": 233445, "node_id": "MDQ6VXNlcjIzMzQ0NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/233445?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grizlupo", "html_url": "https://github.com/grizlupo", "followers_url": "https://api.github.com/users/grizlupo/followers", "following_url": "https://api.github.com/users/grizlupo/following{/other_user}", "gists_url": "https://api.github.com/users/grizlupo/gists{/gist_id}", "starred_url": "https://api.github.com/users/grizlupo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grizlupo/subscriptions", "organizations_url": "https://api.github.com/users/grizlupo/orgs", "repos_url": "https://api.github.com/users/grizlupo/repos", "events_url": "https://api.github.com/users/grizlupo/events{/privacy}", "received_events_url": "https://api.github.com/users/grizlupo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "tmylk", "id": 1261528, "node_id": "MDQ6VXNlcjEyNjE1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1261528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmylk", "html_url": "https://github.com/tmylk", "followers_url": "https://api.github.com/users/tmylk/followers", "following_url": "https://api.github.com/users/tmylk/following{/other_user}", "gists_url": "https://api.github.com/users/tmylk/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmylk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmylk/subscriptions", "organizations_url": "https://api.github.com/users/tmylk/orgs", "repos_url": "https://api.github.com/users/tmylk/repos", "events_url": "https://api.github.com/users/tmylk/events{/privacy}", "received_events_url": "https://api.github.com/users/tmylk/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tmylk", "id": 1261528, "node_id": "MDQ6VXNlcjEyNjE1Mjg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1261528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmylk", "html_url": "https://github.com/tmylk", "followers_url": "https://api.github.com/users/tmylk/followers", "following_url": "https://api.github.com/users/tmylk/following{/other_user}", "gists_url": "https://api.github.com/users/tmylk/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmylk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmylk/subscriptions", "organizations_url": "https://api.github.com/users/tmylk/orgs", "repos_url": "https://api.github.com/users/tmylk/repos", "events_url": "https://api.github.com/users/tmylk/events{/privacy}", "received_events_url": "https://api.github.com/users/tmylk/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2016-05-05T16:11:45Z", "updated_at": "2016-08-28T21:17:32Z", "closed_at": "2016-08-26T16:49:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.5.1\nWindows 10\nsqlitedict 1.4.0\n\nt.py:\n\n```\nfrom sqlitedict import SqliteDict\ndb = SqliteDict('test.db', autocommit=True)\n#db.close()\nprint('end')\n```\n\n```\n    def __del__(self):\n        # like close(), but assume globals are gone by now (do not log!)\n        self.close(do_log=False)  # <- never return\n```\n\ni guess\nthread is daemon.\nwhen **del**\nsilently already thread has stopped\nnever process event in queue\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/44", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/44/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/44/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/44", "id": 151024180, "node_id": "MDU6SXNzdWUxNTEwMjQxODA=", "number": 44, "title": "Fix exit errors: TypeError(\"'NoneType' object is not callable\",)", "user": {"login": "piskvorky", "id": 610412, "node_id": "MDQ6VXNlcjYxMDQxMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/610412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piskvorky", "html_url": "https://github.com/piskvorky", "followers_url": "https://api.github.com/users/piskvorky/followers", "following_url": "https://api.github.com/users/piskvorky/following{/other_user}", "gists_url": "https://api.github.com/users/piskvorky/gists{/gist_id}", "starred_url": "https://api.github.com/users/piskvorky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piskvorky/subscriptions", "organizations_url": "https://api.github.com/users/piskvorky/orgs", "repos_url": "https://api.github.com/users/piskvorky/repos", "events_url": "https://api.github.com/users/piskvorky/events{/privacy}", "received_events_url": "https://api.github.com/users/piskvorky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-26T02:22:54Z", "updated_at": "2016-05-15T17:00:20Z", "closed_at": "2016-05-15T17:00:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When a Python process exits that has some sqlitedict objects still in memory, the final pre-exit garbage collection can cause some unsightly errors being printed:\n\n```\nException TypeError: TypeError(\"'NoneType' object is not callable\",) in <bound method SqliteDict.__del_ of SqliteDict(/data/db.sqlite)> ignored\nException TypeError: TypeError(\"'NoneType' object is not callable\",) in ignored\nException TypeError: TypeError(\"'NoneType' object is not callable\",) in ignored\nException TypeError: TypeError(\"'NoneType' object is not callable\",) in ignored\nException TypeError: TypeError(\"'NoneType' object is not callable\",) in ignored\nException TypeError: TypeError(\"'NoneType' object is not callable\",) in ignored\nException TypeError: TypeError(\"'NoneType' object is not callable\",) in ignored\nException TypeError: TypeError(\"'NoneType' object is not callable\",) in ignored\n```\n\nInvestigate why this happens (there are already checks in place inside `__del__`) and fix it.\n\nDesired behaviour: if the sqlite connection is still open/active, close it; if not, or if any error happens (object already partially self-destructed by exit, or any other error.. we have little control over what we can do at this point), just ignore it and proceed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/42", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/42/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/42/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/42", "id": 123913781, "node_id": "MDU6SXNzdWUxMjM5MTM3ODE=", "number": 42, "title": ".terminate() failed to delete file xx.sqlite, clear() can not reset the file size...", "user": {"login": "ClericPy", "id": 7133852, "node_id": "MDQ6VXNlcjcxMzM4NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/7133852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ClericPy", "html_url": "https://github.com/ClericPy", "followers_url": "https://api.github.com/users/ClericPy/followers", "following_url": "https://api.github.com/users/ClericPy/following{/other_user}", "gists_url": "https://api.github.com/users/ClericPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ClericPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ClericPy/subscriptions", "organizations_url": "https://api.github.com/users/ClericPy/orgs", "repos_url": "https://api.github.com/users/ClericPy/repos", "events_url": "https://api.github.com/users/ClericPy/events{/privacy}", "received_events_url": "https://api.github.com/users/ClericPy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-12-26T06:51:47Z", "updated_at": "2020-07-20T23:58:45Z", "closed_at": "2015-12-26T13:27:05Z", "author_association": "NONE", "active_lock_reason": null, "body": ".terminate() raise an error for it's in use when del the file, and after clear() the file size is still as large as before(43MB, not 3KB).\nIndeed I prefer sqlitedict to tinydb...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/40", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/40/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/40/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/40", "id": 120611690, "node_id": "MDU6SXNzdWUxMjA2MTE2OTA=", "number": 40, "title": "AttributeError: 'NoneType' object has no attribute 'filename'", "user": {"login": "guyskk", "id": 6367792, "node_id": "MDQ6VXNlcjYzNjc3OTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6367792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guyskk", "html_url": "https://github.com/guyskk", "followers_url": "https://api.github.com/users/guyskk/followers", "following_url": "https://api.github.com/users/guyskk/following{/other_user}", "gists_url": "https://api.github.com/users/guyskk/gists{/gist_id}", "starred_url": "https://api.github.com/users/guyskk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guyskk/subscriptions", "organizations_url": "https://api.github.com/users/guyskk/orgs", "repos_url": "https://api.github.com/users/guyskk/repos", "events_url": "https://api.github.com/users/guyskk/events{/privacy}", "received_events_url": "https://api.github.com/users/guyskk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-06T06:18:21Z", "updated_at": "2015-12-06T14:21:06Z", "closed_at": "2015-12-06T14:21:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nsqlitedict.py:158: AttributeError\nreturn \"SqliteDict(%s)\" % (self.conn.filename)\n```\n\nbecause SqliteDict has been closed, self.conn is None.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/34", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/34/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/34/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/34", "id": 98689088, "node_id": "MDU6SXNzdWU5ODY4OTA4OA==", "number": 34, "title": "setdefault does not work as for dict", "user": {"login": "ziky90", "id": 1810839, "node_id": "MDQ6VXNlcjE4MTA4Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1810839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziky90", "html_url": "https://github.com/ziky90", "followers_url": "https://api.github.com/users/ziky90/followers", "following_url": "https://api.github.com/users/ziky90/following{/other_user}", "gists_url": "https://api.github.com/users/ziky90/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziky90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziky90/subscriptions", "organizations_url": "https://api.github.com/users/ziky90/orgs", "repos_url": "https://api.github.com/users/ziky90/repos", "events_url": "https://api.github.com/users/ziky90/events{/privacy}", "received_events_url": "https://api.github.com/users/ziky90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-03T07:43:43Z", "updated_at": "2015-08-03T07:49:50Z", "closed_at": "2015-08-03T07:49:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use sqlitedict I see that there is no working `setdefault` as I am used to from standard dict.\n\nMy not working code looks as follows:\n\n```\nwith SqliteDict(d, autocommit=True) as c:\n    c.setdefault(k, []).append(\"d\")\n```\n\nMy working code looks as:\n\n```\nif k in c:\n    l = c[k]\n    l.append(\"d\")\n    c[k] = l\nelse:\n    c[k] = [\"d\"]\n```\n\n**NOTE:**\nEven this did not work for me:\n\n```\nif k in c:\n    l = c[k]\n    l.append(\"d\")\nelse:\n    c[k] = [\"d\"]\n```\n\nI can see that there is only inherited `setdefault` and there are not tests for it. Should `setdefault` work? If not is that wanted as new feature?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/25", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/25/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/25/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/25", "id": 64722485, "node_id": "MDU6SXNzdWU2NDcyMjQ4NQ==", "number": 25, "title": "Saving tuples as keys using sqlitedict", "user": {"login": "ziky90", "id": 1810839, "node_id": "MDQ6VXNlcjE4MTA4Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1810839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziky90", "html_url": "https://github.com/ziky90", "followers_url": "https://api.github.com/users/ziky90/followers", "following_url": "https://api.github.com/users/ziky90/following{/other_user}", "gists_url": "https://api.github.com/users/ziky90/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziky90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziky90/subscriptions", "organizations_url": "https://api.github.com/users/ziky90/orgs", "repos_url": "https://api.github.com/users/ziky90/repos", "events_url": "https://api.github.com/users/ziky90/events{/privacy}", "received_events_url": "https://api.github.com/users/ziky90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-27T08:56:05Z", "updated_at": "2015-09-02T15:03:03Z", "closed_at": "2015-09-02T15:02:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue is more a new feature idea.\n\nIt would be nice to be able to use Python tuples as keys as you can do it in standard Python dicts. My idea is to do something like serialisation from tuple to string (for example via `user_defined_character.join(tuple)` or via some user defined conversion function). \n\nFor querying there would be used just the same transformation function and for keys reconstruction there might be something like, either `key.split(user_defined_character)` or some other user defined conversion function.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/24", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/24/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/24/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/24", "id": 64720581, "node_id": "MDU6SXNzdWU2NDcyMDU4MQ==", "number": 24, "title": "sqlitedict freezes when there is Error in one of the threads", "user": {"login": "ziky90", "id": 1810839, "node_id": "MDQ6VXNlcjE4MTA4Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1810839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziky90", "html_url": "https://github.com/ziky90", "followers_url": "https://api.github.com/users/ziky90/followers", "following_url": "https://api.github.com/users/ziky90/following{/other_user}", "gists_url": "https://api.github.com/users/ziky90/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziky90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziky90/subscriptions", "organizations_url": "https://api.github.com/users/ziky90/orgs", "repos_url": "https://api.github.com/users/ziky90/repos", "events_url": "https://api.github.com/users/ziky90/events{/privacy}", "received_events_url": "https://api.github.com/users/ziky90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-27T08:40:02Z", "updated_at": "2015-05-05T15:15:35Z", "closed_at": "2015-05-05T15:15:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I am trying to access sqlite via sqlitedict with some unsupported type whole system freezes and it's even impossible to break it with ctrl + c. \n\nIt is happening with following stack trace:\n\n```\nException in thread Thread-1:\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/threading.py\", line 813, in __bootstrap_inner\n    self.run()\n  File \"/home/hadoop/.vew/iab/lib/python2.7/site-packages/sqlitedict.py\", line 270, in run\n    cursor.execute(req, arg)\nInterfaceError: Error binding parameter 0 - probably unsupported type.  \n```\n\nIt seems that there is thrown an Error in one thread, but other threads keeps working and probably hangs  in the system.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/23", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/23/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/23/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/23", "id": 62139202, "node_id": "MDU6SXNzdWU2MjEzOTIwMg==", "number": 23, "title": "sets as value in an SqliteDict not updated", "user": {"login": "blaiseli", "id": 3380503, "node_id": "MDQ6VXNlcjMzODA1MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3380503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blaiseli", "html_url": "https://github.com/blaiseli", "followers_url": "https://api.github.com/users/blaiseli/followers", "following_url": "https://api.github.com/users/blaiseli/following{/other_user}", "gists_url": "https://api.github.com/users/blaiseli/gists{/gist_id}", "starred_url": "https://api.github.com/users/blaiseli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blaiseli/subscriptions", "organizations_url": "https://api.github.com/users/blaiseli/orgs", "repos_url": "https://api.github.com/users/blaiseli/repos", "events_url": "https://api.github.com/users/blaiseli/events{/privacy}", "received_events_url": "https://api.github.com/users/blaiseli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-16T16:43:27Z", "updated_at": "2015-03-16T20:18:04Z", "closed_at": "2015-03-16T20:18:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is the following behaviour expected?\n\n```\n>>> from sqlitedict import SqliteDict\n>>> d = SqliteDict(\"test.sqlite\", autocommit=True)\n>>> d[\"a\"] = set([])\n>>> d[\"a\"].add(1)\n>>> d[\"a\"]\nset([])\n>>> d.commit()\n>>> d[\"a\"]\nset([])\n>>> d[\"a\"].add(1)\n>>> d.commit()\n>>> d[\"a\"]\nset([])\n>>> \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/22", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/22/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/22/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/22", "id": 62091572, "node_id": "MDU6SXNzdWU2MjA5MTU3Mg==", "number": 22, "title": "SqliteDict doesn't seem to accept frozensets as keys.", "user": {"login": "blaiseli", "id": 3380503, "node_id": "MDQ6VXNlcjMzODA1MDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3380503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blaiseli", "html_url": "https://github.com/blaiseli", "followers_url": "https://api.github.com/users/blaiseli/followers", "following_url": "https://api.github.com/users/blaiseli/following{/other_user}", "gists_url": "https://api.github.com/users/blaiseli/gists{/gist_id}", "starred_url": "https://api.github.com/users/blaiseli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blaiseli/subscriptions", "organizations_url": "https://api.github.com/users/blaiseli/orgs", "repos_url": "https://api.github.com/users/blaiseli/repos", "events_url": "https://api.github.com/users/blaiseli/events{/privacy}", "received_events_url": "https://api.github.com/users/blaiseli/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-16T14:07:52Z", "updated_at": "2015-03-16T14:59:42Z", "closed_at": "2015-03-16T14:59:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following script:\n\n```\n#!/usr/bin/env python\nfrom sqlitedict import SqliteDict\nd = SqliteDict(\"test.sqlite\")\nd[frozenset([\"c\", \"d\"])] = \"ab\"\n```\n\nAn exception is raised when executing it:\n\n```\nException in thread Thread-1:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 552, in __bootstrap_inner\n    self.run()\n  File \"<my_home>/.local/lib/python2.7/site-packages/sqlitedict.py\", line 296, in run\n    cursor.execute(req, arg)\nInterfaceError: Error binding parameter 0 - probably unsupported type.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/21", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/21/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/21/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/21", "id": 58754667, "node_id": "MDU6SXNzdWU1ODc1NDY2Nw==", "number": 21, "title": "it works awesome", "user": {"login": "kalessin", "id": 342426, "node_id": "MDQ6VXNlcjM0MjQyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/342426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalessin", "html_url": "https://github.com/kalessin", "followers_url": "https://api.github.com/users/kalessin/followers", "following_url": "https://api.github.com/users/kalessin/following{/other_user}", "gists_url": "https://api.github.com/users/kalessin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalessin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalessin/subscriptions", "organizations_url": "https://api.github.com/users/kalessin/orgs", "repos_url": "https://api.github.com/users/kalessin/repos", "events_url": "https://api.github.com/users/kalessin/events{/privacy}", "received_events_url": "https://api.github.com/users/kalessin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-24T15:30:24Z", "updated_at": "2015-02-24T17:08:10Z", "closed_at": "2015-02-24T15:30:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is not an issue, sorry, but didn't know where to write this. I wanted to say that this module works really awesome. Totally beats builtin solutions like gdbm, in speed and size handling. Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/20", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/20/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/20/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/20", "id": 53218808, "node_id": "MDU6SXNzdWU1MzIxODgwOA==", "number": 20, "title": "should we have a .copy() method?", "user": {"login": "jquast", "id": 972584, "node_id": "MDQ6VXNlcjk3MjU4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/972584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jquast", "html_url": "https://github.com/jquast", "followers_url": "https://api.github.com/users/jquast/followers", "following_url": "https://api.github.com/users/jquast/following{/other_user}", "gists_url": "https://api.github.com/users/jquast/gists{/gist_id}", "starred_url": "https://api.github.com/users/jquast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jquast/subscriptions", "organizations_url": "https://api.github.com/users/jquast/orgs", "repos_url": "https://api.github.com/users/jquast/repos", "events_url": "https://api.github.com/users/jquast/events{/privacy}", "received_events_url": "https://api.github.com/users/jquast/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-01T12:29:53Z", "updated_at": "2015-01-01T23:02:48Z", "closed_at": "2015-01-01T23:02:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "my use case, i need an in-memory copy of the contents of the whole database for comparison, but I wouldn't like to use `my_copy = dict(sdb.items())`, but instead just `my_copy = sdb.copy()`\n\nsound ok?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/19", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/19/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/19/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/19", "id": 52274087, "node_id": "MDU6SXNzdWU1MjI3NDA4Nw==", "number": 19, "title": "Storing unicode keys returns bytestrings that must be decoded as utf8.", "user": {"login": "jquast", "id": 972584, "node_id": "MDQ6VXNlcjk3MjU4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/972584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jquast", "html_url": "https://github.com/jquast", "followers_url": "https://api.github.com/users/jquast/followers", "following_url": "https://api.github.com/users/jquast/following{/other_user}", "gists_url": "https://api.github.com/users/jquast/gists{/gist_id}", "starred_url": "https://api.github.com/users/jquast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jquast/subscriptions", "organizations_url": "https://api.github.com/users/jquast/orgs", "repos_url": "https://api.github.com/users/jquast/repos", "events_url": "https://api.github.com/users/jquast/events{/privacy}", "received_events_url": "https://api.github.com/users/jquast/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-17T18:28:04Z", "updated_at": "2015-04-22T12:15:36Z", "closed_at": "2015-04-22T12:15:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I know sqlite is utf-8 internally, that's fine.\n\nBut I end up with boiler plate code that says:\n- for dictionaries of keys of str, decode as utf-8 -- on retrieval, only.\n\nThis seems wrong.  Shouldn't sqlitedict do this for us?\n\n```\n>>> mydict = sqlitedict.SqliteDict('/tmp/some_.db', autocommit=True)\n>>> hamsterface = u'\ud83d\udc39'\n>>> print hamsterface, repr(hamsterface), type(hamsterface)\n\ud83d\udc39 u'\\U0001f439' <type 'unicode'>\n>>> mydict[hamsterface] = {hamsterface: hamsterface}\n>>> print mydict.keys()[0], repr(mydict.keys()[0]), type(mydict.keys()[0])\n\ud83d\udc39 '\\xf0\\x9f\\x90\\xb9' <type 'str'>\n>>> ## Here, it is raw bytes, not unicode.  It still \"prints\" because my terminal happens to also be utf-8\n>>> mydict.values()[0]\n{u'\\U0001f439': u'\\U0001f439'}\n>>> ## Yet, the value remains unicode. The only way to get the same unicode dict that we tried to represent back, is to decode it manually.\n>>> decoded = { mydict.keys()[0].decode('utf-8'): mydict.values()[0] }\n>>> decoded\n{u'\\U0001f439': {u'\\U0001f439': u'\\U0001f439'}}\n```\n\nIf you agree, that the .keys() and .items() and so on should automatically decode str-type as utf-8 into unicode-type, then I will be happy to submit a PR.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/13", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/13/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/13/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/13", "id": 38264789, "node_id": "MDU6SXNzdWUzODI2NDc4OQ==", "number": 13, "title": "__bool__ is broken", "user": {"login": "vrescobar", "id": 6759126, "node_id": "MDQ6VXNlcjY3NTkxMjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6759126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vrescobar", "html_url": "https://github.com/vrescobar", "followers_url": "https://api.github.com/users/vrescobar/followers", "following_url": "https://api.github.com/users/vrescobar/following{/other_user}", "gists_url": "https://api.github.com/users/vrescobar/gists{/gist_id}", "starred_url": "https://api.github.com/users/vrescobar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vrescobar/subscriptions", "organizations_url": "https://api.github.com/users/vrescobar/orgs", "repos_url": "https://api.github.com/users/vrescobar/repos", "events_url": "https://api.github.com/users/vrescobar/events{/privacy}", "received_events_url": "https://api.github.com/users/vrescobar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-07-20T19:32:17Z", "updated_at": "2014-07-21T18:01:44Z", "closed_at": "2014-07-21T17:40:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\nI just found out that the bool method is broken: the **bool** descriptor implemented on SqliteDict is not working; this descriptor is introduced in python 3.0 by first time; in python 2.X the same functionality is named **nonzero**.\n\nSee this code in python 2.7 :\n\n``` python\n>>> class A(object):\n...     def __bool__(self):\n...         return False\n...     \n... \n>>> a=A()\n>>> bool(a)\nTrue\n>>> not a\nFalse\n>>> A.__nonzero__ = A.__bool__\n>>> not a\nTrue\n>>> not bool(a)\nTrue\n```\n\nUsually for a python 2/3 compatibility with a simple renaming is enough:\n\n``` python\nSqliteDict.__nonzero__ = SqliteDict.__bool__\n```\n\nI tried in my private in my fork but then I see the boolean functionality is actually broken (test cases); they were just comparing the raw class instance (not None, therefore True).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/5", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/5/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/5/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/5", "id": 22452636, "node_id": "MDU6SXNzdWUyMjQ1MjYzNg==", "number": 5, "title": "setdefault seems not to be working", "user": {"login": "and34", "id": 5821846, "node_id": "MDQ6VXNlcjU4MjE4NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/5821846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/and34", "html_url": "https://github.com/and34", "followers_url": "https://api.github.com/users/and34/followers", "following_url": "https://api.github.com/users/and34/following{/other_user}", "gists_url": "https://api.github.com/users/and34/gists{/gist_id}", "starred_url": "https://api.github.com/users/and34/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/and34/subscriptions", "organizations_url": "https://api.github.com/users/and34/orgs", "repos_url": "https://api.github.com/users/and34/repos", "events_url": "https://api.github.com/users/and34/events{/privacy}", "received_events_url": "https://api.github.com/users/and34/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-11-11T14:52:18Z", "updated_at": "2014-06-01T10:46:55Z", "closed_at": "2014-06-01T10:46:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\n    assert list() == d.setdefault('tkey', [])\n    assert list(d) == ['tkey']\n    assert len(d['tkey']) == 0\n    d.setdefault('tkey', []).append(1)\n    print list(d)\n    print d['tkey']\n    assert d['tkey'] == [1]\n```\n\n<pre>\n['tkey']\n[]\nTraceback (most recent call last):\n  File \"sqlitedict.py\", line 368, in <module>\n    assert d['tkey'] == [1]\nAssertionError\n</pre>\n\n\nsetdefault doesn't set list object in storage. I had to implement it manually like:\n\n<pre>\nif key in storage:\n    oldVal = storage[key]\n    oldVal.append(val)\n    storage[key] = oldVal\nelse:\n    storage[key] = val\n</pre>\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/2", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/2/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/2/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/2", "id": 12928664, "node_id": "MDU6SXNzdWUxMjkyODY2NA==", "number": 2, "title": "There is a \"static\" error in SqliteDict destructor.", "user": {"login": "shoyu63", "id": 4094386, "node_id": "MDQ6VXNlcjQwOTQzODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4094386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shoyu63", "html_url": "https://github.com/shoyu63", "followers_url": "https://api.github.com/users/shoyu63/followers", "following_url": "https://api.github.com/users/shoyu63/following{/other_user}", "gists_url": "https://api.github.com/users/shoyu63/gists{/gist_id}", "starred_url": "https://api.github.com/users/shoyu63/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shoyu63/subscriptions", "organizations_url": "https://api.github.com/users/shoyu63/orgs", "repos_url": "https://api.github.com/users/shoyu63/repos", "events_url": "https://api.github.com/users/shoyu63/events{/privacy}", "received_events_url": "https://api.github.com/users/shoyu63/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-04-08T15:26:31Z", "updated_at": "2013-04-11T13:28:46Z", "closed_at": "2013-04-11T13:28:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are 2 lines with \"... self.conn.conn ...\" in SqliteDict.**del**.\nThey should by replaced by \" ...self.conn ...\" because self.conn.conn does not exist.\n\nThank you for your work.\n\nBest wishes.\n\nSt\u00e9phane.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/1", "repository_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict", "labels_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/1/comments", "events_url": "https://api.github.com/repos/RaRe-Technologies/sqlitedict/issues/1/events", "html_url": "https://github.com/RaRe-Technologies/sqlitedict/issues/1", "id": 10068719, "node_id": "MDU6SXNzdWUxMDA2ODcxOQ==", "number": 1, "title": "install with setup.py fails due to no README.txt", "user": {"login": "asemx", "id": 998264, "node_id": "MDQ6VXNlcjk5ODI2NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/998264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asemx", "html_url": "https://github.com/asemx", "followers_url": "https://api.github.com/users/asemx/followers", "following_url": "https://api.github.com/users/asemx/following{/other_user}", "gists_url": "https://api.github.com/users/asemx/gists{/gist_id}", "starred_url": "https://api.github.com/users/asemx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asemx/subscriptions", "organizations_url": "https://api.github.com/users/asemx/orgs", "repos_url": "https://api.github.com/users/asemx/repos", "events_url": "https://api.github.com/users/asemx/events{/privacy}", "received_events_url": "https://api.github.com/users/asemx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-01-17T18:18:13Z", "updated_at": "2013-01-19T13:37:16Z", "closed_at": "2013-01-19T13:17:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Copy README.rst to README.txt will solve this issue.\n", "performed_via_github_app": null, "score": 1.0}]}