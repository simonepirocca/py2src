{"total_count": 109, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/507", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/507/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/507/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/507", "id": 646128333, "node_id": "MDU6SXNzdWU2NDYxMjgzMzM=", "number": 507, "title": "aiomysql absolutely blind in real life scenarios", "user": {"login": "jpVm5jYYRE1VIKL", "id": 22169129, "node_id": "MDQ6VXNlcjIyMTY5MTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/22169129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpVm5jYYRE1VIKL", "html_url": "https://github.com/jpVm5jYYRE1VIKL", "followers_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/followers", "following_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/following{/other_user}", "gists_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/subscriptions", "organizations_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/orgs", "repos_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/repos", "events_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/events{/privacy}", "received_events_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-26T09:17:12Z", "updated_at": "2020-07-09T19:25:16Z", "closed_at": "2020-07-09T19:25:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Well. In real life even in 2020 internet connection between database and client sometimes have an issues. And client not always can reach database. In such situations aiomysql absolutely blind for connection problems between database and client. \r\nSimple example : \r\n\r\n```\r\n    async def connect_to_mysql_database(self):\r\n        while True:\r\n            self.logger.info(\"Create mysql pool atempt\")\r\n            try:\r\n                self.mysqlpool = await asyncio.wait_for(\r\n                        aiomysql.create_pool(host='2.2.2.2', port=3306, user='manager', password='password',\r\n                                            db='db', connect_timeout=1, loop = self.loop), timeout=3, loop=self.loop\r\n                                                        )\r\n            except asyncio.TimeoutError:\r\n                self.logger.error(\"mysql pool connection timeout\")\r\n                asyncio.sleep(1)\r\n\r\n            self.logger.error(\"exit\")\r\n\r\n            if self.mysqlpool is not None:\r\n                break\r\n    \r\n    async def mysql_ping_database(self):\r\n        while True:\r\n            if self.mysqlpool is not None:\r\n                self.logger.info(\"Attempt to ping\")\r\n                async with self.mysqlpool.acquire() as dbconnection:\r\n                    self.logger.info(\"Got connection\")\r\n                    async with dbconnection.cursor() as dbcursor:\r\n                        self.logger.info(\"Got cursor\")\r\n                        state = await dbcursor.execute(\"SELECT 1\")\r\n                        self.logger.info(\"Executed\")\r\n                        result = await dbcursor.fetchall()\r\n                        self.logger.info(\"fetched\")\r\n                        await dbcursor.close()\r\n            else:\r\n                self.logger.info(\"Pool not ready yet\")\r\n            await asyncio.sleep(10)\r\n```\r\n\r\nIssue number 1: \r\nScenario : mysql server intially down and become up after script startup. \r\nin that case aiomysql.create_pool block event loop and exception asyncio.TimeoutError never happen. aiomysql.create_pool do only 1 attempt to connect to database and if it was not successful just hangs and awaitable never return even if mysql server went up.\r\n\r\noutput look like following : \r\n```\r\nCreate mysql pool atempt\r\nPool not ready yet\r\nPool not ready yet\r\nPool not ready yet\r\nPool not ready yet\r\n```\r\n\r\nIssue number 2;\r\nScenario : mysql server up and go down after connection to database established. \r\nin that case : \r\naiomysql.create_pool successfully executed but if database restarted after initial connection connection never restored again. Just hangs on awaitable dbcursor.execute which never return. \r\n\r\noutput look like following : \r\n\r\nCreate mysql pool atempt\r\n```\r\nPool not ready yet\r\nexit\r\nAttempt to ping\r\nGot connection\r\nGot cursor\r\nExecuted\r\nfetched\r\nAttempt to ping\r\nGot connection\r\nGot cursor\r\nExecuted\r\nfetched\r\nAttempt to ping\r\nGot connection\r\nGot cursor\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/487", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/487/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/487/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/487", "id": 611961186, "node_id": "MDU6SXNzdWU2MTE5NjExODY=", "number": 487, "title": "Can't connect to MySQL server on ' '", "user": {"login": "Sultan91", "id": 16382530, "node_id": "MDQ6VXNlcjE2MzgyNTMw", "avatar_url": "https://avatars3.githubusercontent.com/u/16382530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sultan91", "html_url": "https://github.com/Sultan91", "followers_url": "https://api.github.com/users/Sultan91/followers", "following_url": "https://api.github.com/users/Sultan91/following{/other_user}", "gists_url": "https://api.github.com/users/Sultan91/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sultan91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sultan91/subscriptions", "organizations_url": "https://api.github.com/users/Sultan91/orgs", "repos_url": "https://api.github.com/users/Sultan91/repos", "events_url": "https://api.github.com/users/Sultan91/events{/privacy}", "received_events_url": "https://api.github.com/users/Sultan91/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-04T15:24:41Z", "updated_at": "2020-05-12T09:22:09Z", "closed_at": "2020-05-12T09:22:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to create docker-compose file with asyncio and mysql services:\r\n_______________________________________________\r\nversion: '3'\r\nservices:\r\n    web:\r\n      build: .\r\n      command: python /code/app.py\r\n      ports:\r\n       - \"8084:80\"\r\n      volumes:\r\n       - .:/code\r\n      links:\r\n       - mysql\r\n      depends_on:\r\n        - mysql\r\n      hostname: myappserver\r\n    mysql:\r\n        hostname: mysql_server\r\n        image: mysql\r\n        environment:\r\n            - MYSQL_USER=aiomysql\r\n            - MYSQL_PASSWORD=mypass\r\n            - MYSQL_DATABASE=test_db\r\n            - MYSQL_ROOT_PASSWORD=mypass\r\n        ports:\r\n            - 3307:3307\r\n        volumes:\r\n            - /tmp/aiomysql:/var/run/mysqld/\r\n____________________________________________________________\r\nAccording to aiomysql tutorial I have to supply mysql IP address:\r\n`async def test_example():\r\n    conn = await aiomysql.connect(host='mysql', port=3307,\r\n                                       user='aiomysql', password='mypass', db='test_db',\r\n                                       loop=loop)\r\n    cur = await conn.cursor()\r\n    await cur.execute(\"SELECT Host,User FROM user\")\r\n`\r\nWhat should I put in place of `host`?\r\nThings i tried to put:\r\n         `mysql_server`\r\n          `mysql`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/477", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/477/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/477/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/477", "id": 591138254, "node_id": "MDU6SXNzdWU1OTExMzgyNTQ=", "number": 477, "title": "LAST_INSERT_ID() returns 0 when sharing a cursor.execute(...) call with INSERT", "user": {"login": "Pytato", "id": 19507482, "node_id": "MDQ6VXNlcjE5NTA3NDgy", "avatar_url": "https://avatars1.githubusercontent.com/u/19507482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pytato", "html_url": "https://github.com/Pytato", "followers_url": "https://api.github.com/users/Pytato/followers", "following_url": "https://api.github.com/users/Pytato/following{/other_user}", "gists_url": "https://api.github.com/users/Pytato/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pytato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pytato/subscriptions", "organizations_url": "https://api.github.com/users/Pytato/orgs", "repos_url": "https://api.github.com/users/Pytato/repos", "events_url": "https://api.github.com/users/Pytato/events{/privacy}", "received_events_url": "https://api.github.com/users/Pytato/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-31T14:05:07Z", "updated_at": "2020-04-20T14:24:09Z", "closed_at": "2020-04-20T14:24:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Windows 10 Home 1903 (18362.720)\r\nPython 3.8.2 x64, aiomysql 0.0.20\r\nMariaDB 10.4\r\n\r\nUsing `Pool` with `auto_commit=True`\r\n\r\nQuerying `SELECT LAST_INSERT_ID();` within the same `await cursor.execute(...)` call as the `INSERT...;` query the `LAST_INSERT_ID()` should be referencing causes the next `await cursor.fetchone()` call to yield an empty list (this is on a \"clean\" cursor).\r\n\r\nA current workaround involves splitting the `SELECT LAST_INSERT_ID();` and `INSERT...;` queries into separate `await cursor.execute(...)` calls. This yields expected behaviour of `await cursor.fetchone()`. \r\n\r\nI have not tested whether this behaviour is inherited from PyMySQL, rather than aiomysql.\r\n\r\nConsidering most documentation on SQL best practice indicates it is ideal to keep the `SELECT LAST_INSERT_ID();` close to whatever `AUTO_INCREMENT` it is referencing, requiring two `await cursor.execute(...)` calls may be considered a non-ideal case. Please do let me know if I have configured my environment in a fashion that causes this behaviour.\r\n\r\nMany thanks\r\nfwf", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/473", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/473/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/473/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/473", "id": 587581866, "node_id": "MDU6SXNzdWU1ODc1ODE4NjY=", "number": 473, "title": "No commit after 'execute' in SQLAlchemy example", "user": {"login": "hunyxv", "id": 32793881, "node_id": "MDQ6VXNlcjMyNzkzODgx", "avatar_url": "https://avatars2.githubusercontent.com/u/32793881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hunyxv", "html_url": "https://github.com/hunyxv", "followers_url": "https://api.github.com/users/hunyxv/followers", "following_url": "https://api.github.com/users/hunyxv/following{/other_user}", "gists_url": "https://api.github.com/users/hunyxv/gists{/gist_id}", "starred_url": "https://api.github.com/users/hunyxv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hunyxv/subscriptions", "organizations_url": "https://api.github.com/users/hunyxv/orgs", "repos_url": "https://api.github.com/users/hunyxv/repos", "events_url": "https://api.github.com/users/hunyxv/events{/privacy}", "received_events_url": "https://api.github.com/users/hunyxv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-25T10:08:02Z", "updated_at": "2020-07-10T02:58:18Z", "closed_at": "2020-07-10T02:58:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nawait conn.execute(tbl.insert().values(val='abc'))\r\nawait conn.execute(tbl.insert().values(val='xyz'))\r\n```\r\n    ||\r\n    \\/\r\n```\r\nawait conn.execute(tbl.insert().values(val='abc'))\r\nawait conn.execute(tbl.insert().values(val='xyz'))\r\n# await conn.commit()   'SAConnection' object has no attribute 'commit'\r\nawait conn._commit_impl()    \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/455", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/455/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/455/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/455", "id": 533932581, "node_id": "MDU6SXNzdWU1MzM5MzI1ODE=", "number": 455, "title": "Default value for column doesn`t work", "user": {"login": "Mikkgn", "id": 30714817, "node_id": "MDQ6VXNlcjMwNzE0ODE3", "avatar_url": "https://avatars2.githubusercontent.com/u/30714817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mikkgn", "html_url": "https://github.com/Mikkgn", "followers_url": "https://api.github.com/users/Mikkgn/followers", "following_url": "https://api.github.com/users/Mikkgn/following{/other_user}", "gists_url": "https://api.github.com/users/Mikkgn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mikkgn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mikkgn/subscriptions", "organizations_url": "https://api.github.com/users/Mikkgn/orgs", "repos_url": "https://api.github.com/users/Mikkgn/repos", "events_url": "https://api.github.com/users/Mikkgn/events{/privacy}", "received_events_url": "https://api.github.com/users/Mikkgn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-06T12:17:41Z", "updated_at": "2020-05-06T17:44:19Z", "closed_at": "2020-05-06T17:44:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've found, that default column value doesnt work in aiomysql. For example, here is a table definition:\r\n```import uuid\r\nfrom datetime import datetime\r\n\r\nimport sqlalchemy as sa\r\n\r\nmetadata = sa.MetaData()\r\n\r\ndata_source_table = sa.Table(\r\n    'data_source',\r\n    metadata,\r\n    sa.Column('id', UUID, nullable=False, primary_key=True, default=uuid.uuid4),\r\n    sa.Column('source_box_id', UUID, nullable=False, index=True),\r\n    sa.Column('updated_at', sa.dialects.mysql.DATETIME(fsp=6), nullable=False, default=datetime.utcnow),\r\n)\r\n```\r\nAnd executing following code:\r\n```\r\nawait db_conn.execute(\r\n                data_source_table.insert().values(source_box_id=box_id)\r\n            )\r\n```\r\nwe get **actual behavior** with this error:\r\n\r\n```\r\n  File \"/test/run.py\", line 216, in execute\r\n    data_source_table.insert().values(source_box_id=box_id)\r\n  File \"/usr/local/lib/python3.7/site-packages/aiomysql/sa/connection.py\", line 173, in _execute\r\n    await cursor.execute(str(compiled), post_processed_params)\r\n  File \"/usr/local/lib/python3.7/site-packages/aiomysql/cursors.py\", line 239, in execute\r\n    await self._query(query)\r\n  File \"/usr/local/lib/python3.7/site-packages/aiomysql/cursors.py\", line 457, in _query\r\n    await conn.query(q)\r\n  File \"/usr/local/lib/python3.7/site-packages/aiomysql/connection.py\", line 428, in query\r\n    await self._read_query_result(unbuffered=unbuffered)\r\n  File \"/usr/local/lib/python3.7/site-packages/aiomysql/connection.py\", line 622, in _read_query_result\r\n    await result.read()\r\n  File \"/usr/local/lib/python3.7/site-packages/aiomysql/connection.py\", line 1105, in read\r\n    first_packet = await self.connection._read_packet()\r\n  File \"/usr/local/lib/python3.7/site-packages/aiomysql/connection.py\", line 593, in _read_packet\r\n    packet.check_error()\r\n  File \"/usr/local/lib/python3.7/site-packages/pymysql/protocol.py\", line 220, in check_error\r\n    err.raise_mysql_exception(self._data)\r\n  File \"/usr/local/lib/python3.7/site-packages/pymysql/err.py\", line 109, in raise_mysql_exception\r\n    raise errorclass(errno, errval)\r\npymysql.err.IntegrityError: (1048, \"Column 'id' cannot be null\")\r\n```\r\n\r\n**Expected behavior**:\r\naiomysql should insert default values from the column.default property\r\n\r\n**Package versions:**\r\n- sqlalchemy==1.3.11\r\n- pymysql==0.9.2\r\n- aiomysql==0.0.20\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/454", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/454/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/454/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/454", "id": 533328685, "node_id": "MDU6SXNzdWU1MzMzMjg2ODU=", "number": 454, "title": "asyncio.streams.IncompleteReadError is removed from python3.8", "user": {"login": "psafarov", "id": 7732559, "node_id": "MDQ6VXNlcjc3MzI1NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7732559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/psafarov", "html_url": "https://github.com/psafarov", "followers_url": "https://api.github.com/users/psafarov/followers", "following_url": "https://api.github.com/users/psafarov/following{/other_user}", "gists_url": "https://api.github.com/users/psafarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/psafarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/psafarov/subscriptions", "organizations_url": "https://api.github.com/users/psafarov/orgs", "repos_url": "https://api.github.com/users/psafarov/repos", "events_url": "https://api.github.com/users/psafarov/events{/privacy}", "received_events_url": "https://api.github.com/users/psafarov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-05T12:43:46Z", "updated_at": "2020-08-04T12:58:22Z", "closed_at": "2020-04-24T09:30:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/aio-libs/aiomysql/blob/master/aiomysql/connection.py#L599 exception should be replaced", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/440", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/440/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/440/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/440", "id": 496199512, "node_id": "MDU6SXNzdWU0OTYxOTk1MTI=", "number": 440, "title": "AttributeError: '_WindowsSelectorEventLoop' object has no attribute 'acquire'", "user": {"login": "hubinggg", "id": 28819603, "node_id": "MDQ6VXNlcjI4ODE5NjAz", "avatar_url": "https://avatars0.githubusercontent.com/u/28819603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hubinggg", "html_url": "https://github.com/hubinggg", "followers_url": "https://api.github.com/users/hubinggg/followers", "following_url": "https://api.github.com/users/hubinggg/following{/other_user}", "gists_url": "https://api.github.com/users/hubinggg/gists{/gist_id}", "starred_url": "https://api.github.com/users/hubinggg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hubinggg/subscriptions", "organizations_url": "https://api.github.com/users/hubinggg/orgs", "repos_url": "https://api.github.com/users/hubinggg/repos", "events_url": "https://api.github.com/users/hubinggg/events{/privacy}", "received_events_url": "https://api.github.com/users/hubinggg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-20T07:42:23Z", "updated_at": "2019-09-20T14:44:04Z", "closed_at": "2019-09-20T14:44:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "    async with pool.acquire() as conn:\r\n        async with conn.cursor() as cur:\r\n            # await cur.execute(\"SELECT 42;\")\r\n            insert_sql = \"insert into article_test(title) values('{}') \".format(title)\r\n            await cur.execute(insert_sql)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/436", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/436/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/436/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/436", "id": 492150425, "node_id": "MDU6SXNzdWU0OTIxNTA0MjU=", "number": 436, "title": "Old style coroutines used the readthedocs ", "user": {"login": "Pradhvan", "id": 13925830, "node_id": "MDQ6VXNlcjEzOTI1ODMw", "avatar_url": "https://avatars3.githubusercontent.com/u/13925830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pradhvan", "html_url": "https://github.com/Pradhvan", "followers_url": "https://api.github.com/users/Pradhvan/followers", "following_url": "https://api.github.com/users/Pradhvan/following{/other_user}", "gists_url": "https://api.github.com/users/Pradhvan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pradhvan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pradhvan/subscriptions", "organizations_url": "https://api.github.com/users/Pradhvan/orgs", "repos_url": "https://api.github.com/users/Pradhvan/repos", "events_url": "https://api.github.com/users/Pradhvan/events{/privacy}", "received_events_url": "https://api.github.com/users/Pradhvan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-11T10:26:11Z", "updated_at": "2019-09-11T12:57:38Z", "closed_at": "2019-09-11T12:57:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I was going through the documentation and found out that the [restructuredtext](https://github.com/aio-libs/aiomysql/blob/master/docs/index.rst) file still has the old-style coroutines instead of the async/await keyword, is there a particular reason for that?\r\n\r\nIf not I can submit a PR to change the code in the [readthedocs](https://aiomysql.readthedocs.io/en/latest/) to the new async/await feature. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/429", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/429/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/429/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/429", "id": 481108557, "node_id": "MDU6SXNzdWU0ODExMDg1NTc=", "number": 429, "title": "Error cur = self.cursorclass(self, self._echo)", "user": {"login": "romariosar", "id": 26460412, "node_id": "MDQ6VXNlcjI2NDYwNDEy", "avatar_url": "https://avatars2.githubusercontent.com/u/26460412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romariosar", "html_url": "https://github.com/romariosar", "followers_url": "https://api.github.com/users/romariosar/followers", "following_url": "https://api.github.com/users/romariosar/following{/other_user}", "gists_url": "https://api.github.com/users/romariosar/gists{/gist_id}", "starred_url": "https://api.github.com/users/romariosar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romariosar/subscriptions", "organizations_url": "https://api.github.com/users/romariosar/orgs", "repos_url": "https://api.github.com/users/romariosar/repos", "events_url": "https://api.github.com/users/romariosar/events{/privacy}", "received_events_url": "https://api.github.com/users/romariosar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-15T11:25:02Z", "updated_at": "2019-08-16T10:31:19Z", "closed_at": "2019-08-16T10:31:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I copied the first example\r\n\r\n```\r\n\r\nimport asyncio\r\nimport aiomysql\r\nimport pymysql\r\n\r\nasync def test_example(loop):\r\n    pool = await aiomysql.create_pool(host='127.0.0.1',\r\n                                  user='usert',\r\n                                  password='user',\r\n                                  db='tes',\r\n                                  charset='utf8mb4',\r\n                                  cursorclass=pymysql.cursors.DictCursor,\r\n                                  autocommit=True,\r\n                                  loop=loop)\r\n    async with pool.acquire() as conn:\r\n        async with conn.cursor() as cur:\r\n            await cur.execute(\"SELECT 42;\")\r\n            print(cur.description)\r\n            (r,) = await cur.fetchone()\r\n            assert r == 42\r\n    pool.close()\r\n    await pool.wait_closed()\r\n\r\n\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(test_example(loop))\r\n```\r\nand as a result I have an error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 25, in <module>\r\n    loop.run_until_complete(test_example(loop))\r\n  File \"/usr/local/lib/python3.7/asyncio/base_events.py\", line 579, in run_until_complete\r\n    return future.result()\r\n  File \"test.py\", line 15, in test_example\r\n    async with conn.cursor() as cur:\r\n  File \"/usr/local/lib/python3.7/site-packages/aiomysql/connection.py\", line 417, in cursor\r\n    cur = self.cursorclass(self, self._echo)\r\nTypeError: __init__() takes 2 positional arguments but 3 were given\r\n```\r\nhow it fix?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/415", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/415/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/415/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/415", "id": 457782241, "node_id": "MDU6SXNzdWU0NTc3ODIyNDE=", "number": 415, "title": "Execute multiple query on one same connection will mess up the results sometimes.", "user": {"login": "jaggerwang", "id": 1255011, "node_id": "MDQ6VXNlcjEyNTUwMTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1255011?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaggerwang", "html_url": "https://github.com/jaggerwang", "followers_url": "https://api.github.com/users/jaggerwang/followers", "following_url": "https://api.github.com/users/jaggerwang/following{/other_user}", "gists_url": "https://api.github.com/users/jaggerwang/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaggerwang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaggerwang/subscriptions", "organizations_url": "https://api.github.com/users/jaggerwang/orgs", "repos_url": "https://api.github.com/users/jaggerwang/repos", "events_url": "https://api.github.com/users/jaggerwang/events{/privacy}", "received_events_url": "https://api.github.com/users/jaggerwang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-19T02:57:53Z", "updated_at": "2019-06-19T08:01:24Z", "closed_at": "2019-06-19T08:01:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code execute two querys, the first return rows, and the second return total count.  Sometimes the first query's result `rows` is `{'count_1': 5}`, which is the second count query's result. Does it allowed to execute multiple querys on one same connection?\r\n\r\n```python\r\n    async def list_(self, *, status=None, exclude_pending=False,\r\n                    created_at_today=False, user_id=None, limit=None,\r\n                    offset=None):\r\n        \"\"\"\u67e5\u8be2\u76ef\u76d8\u5217\u8868\r\n        \"\"\"\r\n        async with self.db.acquire() as conn:\r\n            select_sm = OrderModel.select()\r\n            count_sm = sasql.select(\r\n                [sasql.func.count()]).select_from(OrderModel)\r\n\r\n            if status is not None:\r\n                clause = OrderModel.c.status == status.value\r\n                select_sm = select_sm.where(clause)\r\n                count_sm = count_sm.where(clause)\r\n            if exclude_pending:\r\n                clause = OrderModel.c.status != OrderStatus.PENDING.value\r\n                select_sm = select_sm.where(clause)\r\n                count_sm = count_sm.where(clause)\r\n            if created_at_today:\r\n                zero_time = local_zero()\r\n                clause = OrderModel.c.created_at > zero_time\r\n                select_sm = select_sm.where(clause)\r\n                count_sm = count_sm.where(clause)\r\n            if user_id is not None:\r\n                clause = OrderModel.c.user_id == user_id\r\n                select_sm = select_sm.where(clause)\r\n                count_sm = count_sm.where(clause)\r\n\r\n            select_sm = select_sm.order_by(OrderModel.c.created_at.desc())\r\n\r\n            if limit is not None:\r\n                select_sm = select_sm.limit(limit)\r\n            if offset is not None:\r\n                select_sm = select_sm.offset(offset)\r\n\r\n            result = await conn.execute(select_sm)\r\n            rows = [dict(v) for v in await result.fetchall()]\r\n\r\n            result = await conn.execute(count_sm)\r\n            total = await result.scalar()\r\n\r\n            return (rows, total)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/413", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/413/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/413/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/413", "id": 454617609, "node_id": "MDU6SXNzdWU0NTQ2MTc2MDk=", "number": 413, "title": "when minsize reach can't acquire a new connection ,it return a exit conn", "user": {"login": "futianshi1314", "id": 16299123, "node_id": "MDQ6VXNlcjE2Mjk5MTIz", "avatar_url": "https://avatars2.githubusercontent.com/u/16299123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/futianshi1314", "html_url": "https://github.com/futianshi1314", "followers_url": "https://api.github.com/users/futianshi1314/followers", "following_url": "https://api.github.com/users/futianshi1314/following{/other_user}", "gists_url": "https://api.github.com/users/futianshi1314/gists{/gist_id}", "starred_url": "https://api.github.com/users/futianshi1314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/futianshi1314/subscriptions", "organizations_url": "https://api.github.com/users/futianshi1314/orgs", "repos_url": "https://api.github.com/users/futianshi1314/repos", "events_url": "https://api.github.com/users/futianshi1314/events{/privacy}", "received_events_url": "https://api.github.com/users/futianshi1314/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-11T10:49:36Z", "updated_at": "2019-06-12T03:19:43Z", "closed_at": "2019-06-12T03:19:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "code as folows:---------\r\n\r\n```python\r\nimport aiomysql\r\nimport asyncio\r\nfrom aiomysql.cursors import DictCursor\r\n\r\nclass MySQL_Pool(object):\r\n\r\n    async def init_pool(self):\r\n        self.pool = await aiomysql.create_pool(host='10.16.xx.xx',\r\n                                               port=3306, minsize=5, maxsize=50, user='k8sadmin',\r\n                                               password='123456', db='kubernetes_backend')\r\n        return self.pool\r\n\r\nclass MySQL_Conn(object):\r\n\r\n    def __init__(self, pool):\r\n        self.pool = pool\r\n\r\n    async def get_conn(self):\r\n        async with self.pool.acquire() as self.conn:\r\n            print(self.conn)\r\n            pass\r\n\r\n    def close_conn(self):\r\n        self.pool.release(self.conn)\r\n\r\n    async def execute(self, sql):\r\n        async with self.conn.cursor(DictCursor) as cur:\r\n            await cur.execute(sql)\r\n            r = await cur.fetchall()\r\n            await self.conn.commit()\r\n            print(r)\r\n\r\nasync def query_db(pool):\r\n    mysql = MySQL_Conn(pool)\r\n    await mysql.get_conn()\r\n    k = await mysql.execute(\"select name from tb_deployment where id=60\")\r\n    #mysql.close_conn()\r\n\r\nasync def main():\r\n    task_lst = []\r\n    for i in range(6):\r\n        task_lst.append(\r\n            asyncio.create_task(query_db(pool))\r\n        )\r\n    for i in task_lst:\r\n        await i\r\n\r\nmysql_loop = asyncio.get_event_loop()\r\npool = mysql_loop.run_until_complete(MySQL_Pool().init_pool())\r\nmysql_loop.run_until_complete(main())\r\n```\r\n-------------\r\n\r\nI run less than 5 coroutine to select ,it has no problem, when I run more than 5 coroutine ,pool.acquire() will get an existing conn,not new connection, I print the conn, such i run this with 6 coroutine ,as  result as follows:\r\n\r\n---------------------\r\n```python\r\n<aiomysql.connection.Connection object at 0x7fde099b5a90>\r\n<aiomysql.connection.Connection object at 0x7fde099b5f60>\r\n<aiomysql.connection.Connection object at 0x7fde099d1240>\r\n<aiomysql.connection.Connection object at 0x7fde099d1470>\r\n<aiomysql.connection.Connection object at 0x7fde099d16a0>\r\n<aiomysql.connection.Connection object at 0x7fde099b5a90>\r\nTraceback (most recent call last):\r\n  File \"aiomysqltest.py\", line 48, in <module>\r\n    mysql_loop.run_until_complete(main())\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/asyncio/base_events.py\", line 584, in run_until_complete\r\n    return future.result()\r\n  File \"aiomysqltest.py\", line 44, in main\r\n    await i\r\n  File \"aiomysqltest.py\", line 35, in query_db\r\n    k = await mysql.execute(\"select name from tb_deployment where id=60\")\r\n  File \"aiomysqltest.py\", line 29, in execute\r\n    await self.conn.commit()\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/site-packages/aiomysql/connection.py\", line 353, in commit\r\n    await self._read_ok_packet()\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/site-packages/aiomysql/connection.py\", line 333, in _read_ok_packet\r\n    raise OperationalError(2014, \"Command Out of Sync\")\r\npymysql.err.OperationalError: (2014, 'Command Out of Sync')\r\nTask exception was never retrieved\r\nfuture: <Task finished coro=<query_db() done, defined at aiomysqltest.py:32> exception=RuntimeError('readexactly() called while another coroutine is already waiting for incoming data')>\r\nTraceback (most recent call last):\r\n  File \"aiomysqltest.py\", line 35, in query_db\r\n    k = await mysql.execute(\"select name from tb_deployment where id=60\")\r\n  File \"aiomysqltest.py\", line 27, in execute\r\n    await cur.execute(sql)\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/site-packages/aiomysql/cursors.py\", line 239, in execute\r\n    await self._query(query)\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/site-packages/aiomysql/cursors.py\", line 457, in _query\r\n    await conn.query(q)\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/site-packages/aiomysql/connection.py\", line 428, in query\r\n    await self._read_query_result(unbuffered=unbuffered)\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/site-packages/aiomysql/connection.py\", line 622, in _read_query_result\r\n    await result.read()\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/site-packages/aiomysql/connection.py\", line 1105, in read\r\n    first_packet = await self.connection._read_packet()\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/site-packages/aiomysql/connection.py\", line 561, in _read_packet\r\n    packet_header = await self._read_bytes(4)\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/site-packages/aiomysql/connection.py\", line 598, in _read_bytes\r\n    data = await self._reader.readexactly(num_bytes)\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/asyncio/streams.py\", line 679, in readexactly\r\n    await self._wait_for_data('readexactly')\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/asyncio/streams.py\", line 460, in _wait_for_data\r\n    f'{func_name}() called while another coroutine is '\r\nRuntimeError: readexactly() called while another coroutine is already waiting for incoming data\r\n```\r\n------------------\r\nyou can see the printed conn has 6,but one is same as the other:<aiomysql.connection.Connection object at 0x7fde099b5a90>\r\n\r\nAm I using the wrong method?\r\nand how can i release the conn, when i use pool.release(conn),Remove the comment(mysql_close_conn()), it will exception:\r\n\r\n------------------------\r\n```python\r\nTraceback (most recent call last):\r\n  File \"aiomysqltest.py\", line 49, in <module>\r\n    mysql_loop.run_until_complete(main())\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/asyncio/base_events.py\", line 584, in run_until_complete\r\n    return future.result()\r\n  File \"aiomysqltest.py\", line 45, in main\r\n    await i\r\n  File \"aiomysqltest.py\", line 36, in query_db\r\n    mysql.close_conn()\r\n  File \"aiomysqltest.py\", line 23, in close_conn\r\n    self.pool.release(self.conn)\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/site-packages/aiomysql/pool.py\", line 204, in release\r\n    assert conn in self._used, (conn, self._used)\r\nAssertionError: (<aiomysql.connection.Connection object at 0x7f30c3745eb8>, set())\r\nTask exception was never retrieved\r\nfuture: <Task finished coro=<query_db() done, defined at aiomysqltest.py:32> exception=AssertionError((<aiomysql.connection.Connection object at 0x7f30bf5266d8>, set()))>\r\nTraceback (most recent call last):\r\n  File \"aiomysqltest.py\", line 36, in query_db\r\n    mysql.close_conn()\r\n  File \"aiomysqltest.py\", line 23, in close_conn\r\n    self.pool.release(self.conn)\r\n  File \"/usr/local/Python-3.7.3/lib/python3.7/site-packages/aiomysql/pool.py\", line 204, in release\r\n    assert conn in self._used, (conn, self._used)\r\nAssertionError: (<aiomysql.connection.Connection object at 0x7f30bf5266d8>, set())\r\n```\r\n-----------------------------\r\nthis is not a problem, when the coroutine ended the conn will auto release\r\nthanks\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/394", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/394/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/394/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/394", "id": 424728415, "node_id": "MDU6SXNzdWU0MjQ3Mjg0MTU=", "number": 394, "title": "DeprecationWarning: 'ResultProxy' implements legacy __aiter__ protocol", "user": {"login": "Askaholic", "id": 17941539, "node_id": "MDQ6VXNlcjE3OTQxNTM5", "avatar_url": "https://avatars0.githubusercontent.com/u/17941539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Askaholic", "html_url": "https://github.com/Askaholic", "followers_url": "https://api.github.com/users/Askaholic/followers", "following_url": "https://api.github.com/users/Askaholic/following{/other_user}", "gists_url": "https://api.github.com/users/Askaholic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Askaholic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Askaholic/subscriptions", "organizations_url": "https://api.github.com/users/Askaholic/orgs", "repos_url": "https://api.github.com/users/Askaholic/repos", "events_url": "https://api.github.com/users/Askaholic/events{/privacy}", "received_events_url": "https://api.github.com/users/Askaholic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163965887, "node_id": "MDU6TGFiZWwxNjM5NjU4ODc=", "url": "https://api.github.com/repos/aio-libs/aiomysql/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1367332728, "node_id": "MDU6TGFiZWwxMzY3MzMyNzI4", "url": "https://api.github.com/repos/aio-libs/aiomysql/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-03-25T05:23:18Z", "updated_at": "2019-07-09T17:24:05Z", "closed_at": "2019-05-22T09:47:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Getting the following deprecation warning when using async for syntax in python 3.6.\r\n\r\n```\r\nDeprecationWarning: 'ResultProxy' implements legacy __aiter__ protocol; __aiter__ should return an asynchronous iterator, not awaitable.\r\n```\r\n\r\n\r\nCode:\r\n```python\r\nasync with engine.acquire() as conn:\r\n    result = await conn.execute(\"SELECT <snip>\")\r\n    async for row in result:\r\n        <snip>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/386", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/386/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/386/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/386/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/386", "id": 410098833, "node_id": "MDU6SXNzdWU0MTAwOTg4MzM=", "number": 386, "title": "Dependencies in document is outdated.", "user": {"login": "huyx", "id": 1411969, "node_id": "MDQ6VXNlcjE0MTE5Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1411969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huyx", "html_url": "https://github.com/huyx", "followers_url": "https://api.github.com/users/huyx/followers", "following_url": "https://api.github.com/users/huyx/following{/other_user}", "gists_url": "https://api.github.com/users/huyx/gists{/gist_id}", "starred_url": "https://api.github.com/users/huyx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huyx/subscriptions", "organizations_url": "https://api.github.com/users/huyx/orgs", "repos_url": "https://api.github.com/users/huyx/repos", "events_url": "https://api.github.com/users/huyx/events{/privacy}", "received_events_url": "https://api.github.com/users/huyx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1367332728, "node_id": "MDU6TGFiZWwxMzY3MzMyNzI4", "url": "https://api.github.com/repos/aio-libs/aiomysql/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-14T02:41:04Z", "updated_at": "2019-05-22T09:48:01Z", "closed_at": "2019-05-22T09:47:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the document, it is said that the aiomysql requires \"Python 3.3 and asyncio or Python 3.4+\":\r\n\r\nhttps://aiomysql.readthedocs.io/en/latest/#dependencies\r\n\r\nBut in https://github.com/aio-libs/aiomysql, it is said that aiomysql requires \"Python 3.5.3\".\r\n\r\nI think the document is out of date, maybe.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/373", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/373/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/373/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/373", "id": 400238812, "node_id": "MDU6SXNzdWU0MDAyMzg4MTI=", "number": 373, "title": "Allow to set  to expand aiomysql.cursors.Cursor", "user": {"login": "elBroom", "id": 8210351, "node_id": "MDQ6VXNlcjgyMTAzNTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8210351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elBroom", "html_url": "https://github.com/elBroom", "followers_url": "https://api.github.com/users/elBroom/followers", "following_url": "https://api.github.com/users/elBroom/following{/other_user}", "gists_url": "https://api.github.com/users/elBroom/gists{/gist_id}", "starred_url": "https://api.github.com/users/elBroom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elBroom/subscriptions", "organizations_url": "https://api.github.com/users/elBroom/orgs", "repos_url": "https://api.github.com/users/elBroom/repos", "events_url": "https://api.github.com/users/elBroom/events{/privacy}", "received_events_url": "https://api.github.com/users/elBroom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163965889, "node_id": "MDU6TGFiZWwxNjM5NjU4ODk=", "url": "https://api.github.com/repos/aio-libs/aiomysql/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-17T11:44:40Z", "updated_at": "2019-01-20T16:22:58Z", "closed_at": "2019-01-20T16:22:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In #263 the custom cursor was removed.\r\nFor each query I need to set a comment with 'request_id' and measure time of the query. Initially, I thought to do this through `before_cursor_execute`, but the library does not support subscribing to events. Now, I think to expand the cursor aiomysql.cursors.Cursor.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/362", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/362/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/362/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/362", "id": 387661762, "node_id": "MDU6SXNzdWUzODc2NjE3NjI=", "number": 362, "title": "two cursors in two async with but cursors id equ", "user": {"login": "shop271", "id": 20430118, "node_id": "MDQ6VXNlcjIwNDMwMTE4", "avatar_url": "https://avatars0.githubusercontent.com/u/20430118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shop271", "html_url": "https://github.com/shop271", "followers_url": "https://api.github.com/users/shop271/followers", "following_url": "https://api.github.com/users/shop271/following{/other_user}", "gists_url": "https://api.github.com/users/shop271/gists{/gist_id}", "starred_url": "https://api.github.com/users/shop271/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shop271/subscriptions", "organizations_url": "https://api.github.com/users/shop271/orgs", "repos_url": "https://api.github.com/users/shop271/repos", "events_url": "https://api.github.com/users/shop271/events{/privacy}", "received_events_url": "https://api.github.com/users/shop271/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163965887, "node_id": "MDU6TGFiZWwxNjM5NjU4ODc=", "url": "https://api.github.com/repos/aio-libs/aiomysql/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-05T09:20:04Z", "updated_at": "2018-12-27T08:12:45Z", "closed_at": "2018-12-27T08:12:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Ubuntu 18.04.1 LTS, python 3.6.5 aiomysql 0.0.19\r\nHello\r\nI use pool to test, the example is like:\r\n```\r\nasync def test():\r\n   async with pool.acquire() as conn:\r\n        async with conn.cursor() as cur:\r\n            print ('id(cur)=', id(cur))\r\n            row = await cur.execute(\"select device_id from r_sms_upload_max_id limit 1\")\r\n            await conn.commit()\r\n\r\nasync def test1():\r\n    await test()\r\n\r\nasync def test2():\r\n    await test()\r\n\r\nasync def test3():\r\n    await test1()\r\n    await test2()\r\n\r\nloop = asyncio.get_event_loop()\r\nasyncio.ensure_future(test3(), loop=loop)\r\nloop.run_forever()\r\n```\r\ntwo id(cur) equ\r\nmaybe await cur.close() close\r\nbut not real close and new acquire get the same cur\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/355", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/355/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/355/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/355/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/355", "id": 381040756, "node_id": "MDU6SXNzdWUzODEwNDA3NTY=", "number": 355, "title": "need proxy", "user": {"login": "liuaifu", "id": 536875, "node_id": "MDQ6VXNlcjUzNjg3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/536875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liuaifu", "html_url": "https://github.com/liuaifu", "followers_url": "https://api.github.com/users/liuaifu/followers", "following_url": "https://api.github.com/users/liuaifu/following{/other_user}", "gists_url": "https://api.github.com/users/liuaifu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liuaifu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liuaifu/subscriptions", "organizations_url": "https://api.github.com/users/liuaifu/orgs", "repos_url": "https://api.github.com/users/liuaifu/repos", "events_url": "https://api.github.com/users/liuaifu/events{/privacy}", "received_events_url": "https://api.github.com/users/liuaifu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-15T07:56:47Z", "updated_at": "2018-12-31T19:55:51Z", "closed_at": "2018-12-31T19:55:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now it seems not support proxy, can add it in later version? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/351", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/351/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/351/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/351", "id": 376572924, "node_id": "MDU6SXNzdWUzNzY1NzI5MjQ=", "number": 351, "title": "New Release: 0.0.20?", "user": {"login": "evandroeisinger", "id": 1188421, "node_id": "MDQ6VXNlcjExODg0MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1188421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evandroeisinger", "html_url": "https://github.com/evandroeisinger", "followers_url": "https://api.github.com/users/evandroeisinger/followers", "following_url": "https://api.github.com/users/evandroeisinger/following{/other_user}", "gists_url": "https://api.github.com/users/evandroeisinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/evandroeisinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evandroeisinger/subscriptions", "organizations_url": "https://api.github.com/users/evandroeisinger/orgs", "repos_url": "https://api.github.com/users/evandroeisinger/repos", "events_url": "https://api.github.com/users/evandroeisinger/events{/privacy}", "received_events_url": "https://api.github.com/users/evandroeisinger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-11-01T21:12:36Z", "updated_at": "2018-12-19T22:17:21Z", "closed_at": "2018-12-19T22:17:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, there's a date for the launch of a new version? With the following MR: https://github.com/aio-libs/aiomysql/pull/339\r\n\r\nRegards,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/330", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/330/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/330/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/330", "id": 351887321, "node_id": "MDU6SXNzdWUzNTE4ODczMjE=", "number": 330, "title": "Lost connection to MySQL server during query", "user": {"login": "IdeoG", "id": 20797092, "node_id": "MDQ6VXNlcjIwNzk3MDky", "avatar_url": "https://avatars0.githubusercontent.com/u/20797092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IdeoG", "html_url": "https://github.com/IdeoG", "followers_url": "https://api.github.com/users/IdeoG/followers", "following_url": "https://api.github.com/users/IdeoG/following{/other_user}", "gists_url": "https://api.github.com/users/IdeoG/gists{/gist_id}", "starred_url": "https://api.github.com/users/IdeoG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IdeoG/subscriptions", "organizations_url": "https://api.github.com/users/IdeoG/orgs", "repos_url": "https://api.github.com/users/IdeoG/repos", "events_url": "https://api.github.com/users/IdeoG/events{/privacy}", "received_events_url": "https://api.github.com/users/IdeoG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-19T09:10:35Z", "updated_at": "2019-03-25T09:25:57Z", "closed_at": "2018-08-21T19:50:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\nI'm using aiomysql library for a while in work project. I got asynchronious server with mysql database with follwing communication: `aiohttp <-> aiomysql + sa`.\r\n\r\nHere is my sample code.\r\n``` python\r\nclass UserTableModel:\r\n    def __init__(self):\r\n        self.metadata = sa.MetaData()\r\n        self.table = sa.Table('users', self.metadata,\r\n                              sa.Column('id', sa.Integer, primary_key=True),\r\n                              sa.Column('login', sa.String(20)),\r\n                              sa.Column('password', sa.String(20)),\r\n                              )\r\n\r\n        self.engine = None\r\n        self.conn = None\r\n        self.loop = None\r\n\r\n        self.users = []\r\n\r\n    async def insert_user(self, user):\r\n        result = await self.conn.execute(self.table.insert().values(\r\n            login=user['login'],\r\n            password=user['password']\r\n        ))\r\n        uid = result.lastrowid\r\n        await self.conn.execute(\"commit\")\r\n        return uid\r\n\r\n    async def get_user_by_id(self, id):\r\n        result = await self.conn.execute(self.table.select().where(self.table.c.id == id))\r\n        user = await result.fetchone()\r\n        return user\r\n\r\n    async def start(self):\r\n        self.engine = await create_engine(user=user', db=db,\r\n                                          host='127.0.0.1', password=root,\r\n                                          pool_recycle=60)\r\n        self.conn = await self.engine.acquire()\r\n        logging.debug(\"UserTableModel: start : MySQL Engine started.\")\r\n\r\n    async def close(self):\r\n        await self.conn.close()\r\n        self.engine.close()\r\n        await self.engine.wait_closed()\r\n        logging.debug(\"UserTableModel: close : MySQL Engine closed.\")\r\n\r\n\r\nuser_table = UserTableModel()\r\n```\r\n\r\n\r\nThis code works pretty good first 6 hours, but after some no-load operation, i get following error for every query to MySQL:\r\n``` bash\r\nFile \"/home/user/.local/lib/python3.6/site-packages/aiomysql/sa/connection.py\", line 121, in _execute\r\n    await cursor.execute(str(compiled), post_processed_params[0])\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiomysql/cursors.py\", line 235, in execute\r\n    await self._query(query)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiomysql/cursors.py\", line 452, in _query\r\n    await conn.query(q)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiomysql/connection.py\", line 396, in query\r\n    await self._read_query_result(unbuffered=unbuffered)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiomysql/connection.py\", line 582, in _read_query_result\r\n    await result.read()\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiomysql/connection.py\", line 898, in read\r\n    first_packet = await self.connection._read_packet()\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiomysql/connection.py\", line 522, in _read_packet\r\n    packet_header = await self._read_bytes(4)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiomysql/connection.py\", line 565, in _read_bytes\r\n    raise OperationalError(2013, msg) from e\r\npymysql.err.OperationalError: (2013, 'Lost connection to MySQL server during query ([Errno 32] Broken pipe)')\r\n```\r\n\r\nI tried to increase `pool_recycle` param, but it doesn't worked for me.\r\n\r\nHow to solve the issue?\r\n\r\nBest regards,\r\nAlex.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/323", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/323/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/323/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/323", "id": 344622562, "node_id": "MDU6SXNzdWUzNDQ2MjI1NjI=", "number": 323, "title": "Add _binary prefix for binary data", "user": {"login": "LemonPi", "id": 5508542, "node_id": "MDQ6VXNlcjU1MDg1NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5508542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LemonPi", "html_url": "https://github.com/LemonPi", "followers_url": "https://api.github.com/users/LemonPi/followers", "following_url": "https://api.github.com/users/LemonPi/following{/other_user}", "gists_url": "https://api.github.com/users/LemonPi/gists{/gist_id}", "starred_url": "https://api.github.com/users/LemonPi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LemonPi/subscriptions", "organizations_url": "https://api.github.com/users/LemonPi/orgs", "repos_url": "https://api.github.com/users/LemonPi/repos", "events_url": "https://api.github.com/users/LemonPi/events{/privacy}", "received_events_url": "https://api.github.com/users/LemonPi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163965887, "node_id": "MDU6TGFiZWwxNjM5NjU4ODc=", "url": "https://api.github.com/repos/aio-libs/aiomysql/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "terrycain", "id": 1986397, "node_id": "MDQ6VXNlcjE5ODYzOTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1986397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrycain", "html_url": "https://github.com/terrycain", "followers_url": "https://api.github.com/users/terrycain/followers", "following_url": "https://api.github.com/users/terrycain/following{/other_user}", "gists_url": "https://api.github.com/users/terrycain/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrycain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrycain/subscriptions", "organizations_url": "https://api.github.com/users/terrycain/orgs", "repos_url": "https://api.github.com/users/terrycain/repos", "events_url": "https://api.github.com/users/terrycain/events{/privacy}", "received_events_url": "https://api.github.com/users/terrycain/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-07-25T21:58:54Z", "updated_at": "2018-07-31T20:28:40Z", "closed_at": "2018-07-31T20:28:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "This was a problem introduced in MySQL 5.6.27 and pointed out https://github.com/PyMySQL/mysqlclient-python/issues/81 \r\nand https://github.com/PyMySQL/mysqlclient-python/pull/106\r\n\r\nWithout it inserting `bytes` to a `VARBINARY()` or `BLOB` column can produce wrong warnings such as \r\n\r\n`Warning: Invalid utf8mb4 character string: 'B017'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/318", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/318/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/318/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/318", "id": 340940937, "node_id": "MDU6SXNzdWUzNDA5NDA5Mzc=", "number": 318, "title": "aiomysql-0.0.17 hash on pypi is changed", "user": {"login": "pyk", "id": 2213646, "node_id": "MDQ6VXNlcjIyMTM2NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2213646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyk", "html_url": "https://github.com/pyk", "followers_url": "https://api.github.com/users/pyk/followers", "following_url": "https://api.github.com/users/pyk/following{/other_user}", "gists_url": "https://api.github.com/users/pyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyk/subscriptions", "organizations_url": "https://api.github.com/users/pyk/orgs", "repos_url": "https://api.github.com/users/pyk/repos", "events_url": "https://api.github.com/users/pyk/events{/privacy}", "received_events_url": "https://api.github.com/users/pyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-13T09:10:00Z", "updated_at": "2018-07-24T12:22:21Z", "closed_at": "2018-07-13T09:29:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I got the following error from my CI/CD pipeline:\r\n\r\n```\r\nAn error occurred while installing aiomysql==0.0.17! Will try again.\r\nInstalling initially failed dependencies...\r\nTHESE PACKAGES DO NOT MATCH THE HASHES FROM Pipfile.lock!. If you have updated the package versions, please update the hashes. Otherwise, examine the package contents carefully; someone may have tampered with them.\r\n    aiomysql==0.0.17 from https://files.pythonhosted.org/packages/be/6a/6ab59df05a223969ceb8f457e628fd1616a57c4567b6caa061d984849d2b/aiomysql-0.0.17-py3-none-any.whl#sha256=3b6675f43017ce3b4ec411e8430bc95de1d460ac5bbd1e6eae1391b0842bb93d (from -r /tmp/pipenv-mskxzame-requirements/pipenv-5ahjqir1-requirement.txt (line 1)):\r\n        Expected sha256 85a8e00ab9a1ed53b58e90d228c5539775aabcbe338dfc32d75a97ca54aca0e9\r\n             Got        3b6675f43017ce3b4ec411e8430bc95de1d460ac5bbd1e6eae1391b0842bb93d\r\n```\r\n\r\nI don't update the `aiomysql` version on my service. So, i want to clarify on the `aiomysql` maintainer make sure the package is not tampered.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/317", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/317/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/317/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/317", "id": 340867716, "node_id": "MDU6SXNzdWUzNDA4Njc3MTY=", "number": 317, "title": "the sqlalchemy demo is broken with python 3.7", "user": {"login": "MarkWh1te", "id": 9379196, "node_id": "MDQ6VXNlcjkzNzkxOTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9379196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkWh1te", "html_url": "https://github.com/MarkWh1te", "followers_url": "https://api.github.com/users/MarkWh1te/followers", "following_url": "https://api.github.com/users/MarkWh1te/following{/other_user}", "gists_url": "https://api.github.com/users/MarkWh1te/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkWh1te/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkWh1te/subscriptions", "organizations_url": "https://api.github.com/users/MarkWh1te/orgs", "repos_url": "https://api.github.com/users/MarkWh1te/repos", "events_url": "https://api.github.com/users/MarkWh1te/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkWh1te/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1367332728, "node_id": "MDU6TGFiZWwxMzY3MzMyNzI4", "url": "https://api.github.com/repos/aio-libs/aiomysql/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-13T03:22:19Z", "updated_at": "2019-12-18T07:39:18Z", "closed_at": "2019-05-22T09:47:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```Python\r\n        async for row in conn.execute(tbl.select()):\r\n            print(row.id, row.val)\r\n```\r\nthe sqlalchemy demo is broken with python 3.7\r\n```\r\nTypeError: 'async for' received an object from __aiter__ that does not implement __anext__: coroutine\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/311", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/311/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/311/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/311/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/311", "id": 338790373, "node_id": "MDU6SXNzdWUzMzg3OTAzNzM=", "number": 311, "title": "import errror", "user": {"login": "ko-han", "id": 21136164, "node_id": "MDQ6VXNlcjIxMTM2MTY0", "avatar_url": "https://avatars2.githubusercontent.com/u/21136164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ko-han", "html_url": "https://github.com/ko-han", "followers_url": "https://api.github.com/users/ko-han/followers", "following_url": "https://api.github.com/users/ko-han/following{/other_user}", "gists_url": "https://api.github.com/users/ko-han/gists{/gist_id}", "starred_url": "https://api.github.com/users/ko-han/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ko-han/subscriptions", "organizations_url": "https://api.github.com/users/ko-han/orgs", "repos_url": "https://api.github.com/users/ko-han/repos", "events_url": "https://api.github.com/users/ko-han/events{/privacy}", "received_events_url": "https://api.github.com/users/ko-han/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-06T03:09:42Z", "updated_at": "2018-07-06T20:20:09Z", "closed_at": "2018-07-06T20:20:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/21136164/42357830-5e536648-810c-11e8-80de-1976a567b346.png)\r\n![image](https://user-images.githubusercontent.com/21136164/42357935-da0de240-810c-11e8-83f5-a50dbe214ab2.png)\r\nI got import errror when run aiomysql, but it seems I already have pymysql installed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/310", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/310/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/310/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/310", "id": 338379998, "node_id": "MDU6SXNzdWUzMzgzNzk5OTg=", "number": 310, "title": "Nominate Terry Cain to aiomysql committer", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-04T21:45:58Z", "updated_at": "2018-07-07T07:25:42Z", "closed_at": "2018-07-06T20:26:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@asvetlov @aio-libs/admins  I would like to nominate Terry Cain (@terrycain) as aiomysql committer. Recently he helped a lot with aiomysql maintenance: \r\n* implemented SSL support\r\n* helped with mysql_clear_password plugin\r\n* refactored library to use aync/await syntax\r\n(commits summary https://github.com/aio-libs/aiomysql/commits?author=terrycain)\r\n\r\nHe is also author of [aioboto3](https://github.com/terrycain/aioboto3) and [aiovault](https://github.com/terrycain/aiovault)  libraires as well helped with aiobotocore.\r\n\r\nIf there is no objections, I am going to give him commit rights in 7 days from now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/307", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/307/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/307/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/307", "id": 337923939, "node_id": "MDU6SXNzdWUzMzc5MjM5Mzk=", "number": 307, "title": "SAConnection example error", "user": {"login": "IdeoG", "id": 20797092, "node_id": "MDQ6VXNlcjIwNzk3MDky", "avatar_url": "https://avatars0.githubusercontent.com/u/20797092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IdeoG", "html_url": "https://github.com/IdeoG", "followers_url": "https://api.github.com/users/IdeoG/followers", "following_url": "https://api.github.com/users/IdeoG/following{/other_user}", "gists_url": "https://api.github.com/users/IdeoG/gists{/gist_id}", "starred_url": "https://api.github.com/users/IdeoG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IdeoG/subscriptions", "organizations_url": "https://api.github.com/users/IdeoG/orgs", "repos_url": "https://api.github.com/users/IdeoG/repos", "events_url": "https://api.github.com/users/IdeoG/events{/privacy}", "received_events_url": "https://api.github.com/users/IdeoG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-03T14:26:57Z", "updated_at": "2018-07-03T18:30:11Z", "closed_at": "2018-07-03T18:30:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please fix \r\n``` python\r\nawait conn.commit()\r\n```\r\nSAConnection doesn't have commit method. It should be changed to, for example, \r\n\r\n``` python\r\nawait conn.execute(\"commit\")\r\n```\r\n\r\nhttps://github.com/aio-libs/aiomysql/blob/master/examples/example_simple_sa.py#L33\r\n\r\nBest regards,\r\nAlex.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/303", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/303/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/303/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/303/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/303", "id": 336265036, "node_id": "MDU6SXNzdWUzMzYyNjUwMzY=", "number": 303, "title": "aiomysql Import Error _scramble", "user": {"login": "farshid616", "id": 16450887, "node_id": "MDQ6VXNlcjE2NDUwODg3", "avatar_url": "https://avatars3.githubusercontent.com/u/16450887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farshid616", "html_url": "https://github.com/farshid616", "followers_url": "https://api.github.com/users/farshid616/followers", "following_url": "https://api.github.com/users/farshid616/following{/other_user}", "gists_url": "https://api.github.com/users/farshid616/gists{/gist_id}", "starred_url": "https://api.github.com/users/farshid616/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farshid616/subscriptions", "organizations_url": "https://api.github.com/users/farshid616/orgs", "repos_url": "https://api.github.com/users/farshid616/repos", "events_url": "https://api.github.com/users/farshid616/events{/privacy}", "received_events_url": "https://api.github.com/users/farshid616/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-27T14:54:00Z", "updated_at": "2018-07-06T20:28:21Z", "closed_at": "2018-07-06T20:28:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "In new version of PyMySQL in connection.py _scramble and _scramble_323 has been removed and it cause an error when importing aiomysql.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/302", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/302/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/302/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/302", "id": 336175652, "node_id": "MDU6SXNzdWUzMzYxNzU2NTI=", "number": 302, "title": "Compatibility with PyMySQL == 0.9.0", "user": {"login": "LilyMaster", "id": 9978292, "node_id": "MDQ6VXNlcjk5NzgyOTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/9978292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LilyMaster", "html_url": "https://github.com/LilyMaster", "followers_url": "https://api.github.com/users/LilyMaster/followers", "following_url": "https://api.github.com/users/LilyMaster/following{/other_user}", "gists_url": "https://api.github.com/users/LilyMaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/LilyMaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LilyMaster/subscriptions", "organizations_url": "https://api.github.com/users/LilyMaster/orgs", "repos_url": "https://api.github.com/users/LilyMaster/repos", "events_url": "https://api.github.com/users/LilyMaster/events{/privacy}", "received_events_url": "https://api.github.com/users/LilyMaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-06-27T10:45:03Z", "updated_at": "2018-07-09T19:42:59Z", "closed_at": "2018-07-09T19:42:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "PyMySQL has been updated to 0.9.0 and has some incompatible changes. Namely, I get error:\r\n```\r\nlib/python3.6/site-packages/aiomysql/__init__.py:32: in <module>\r\n    from .connection import Connection, connect\r\nlib/python3.6/site-packages/aiomysql/connection.py:30: in <module>\r\n    from pymysql.connections import _scramble\r\nImportError: cannot import name '_scramble'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/297", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/297/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/297/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/297", "id": 330924363, "node_id": "MDU6SXNzdWUzMzA5MjQzNjM=", "number": 297, "title": "Cannot connect to mysql 8", "user": {"login": "and800", "id": 9919211, "node_id": "MDQ6VXNlcjk5MTkyMTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/9919211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/and800", "html_url": "https://github.com/and800", "followers_url": "https://api.github.com/users/and800/followers", "following_url": "https://api.github.com/users/and800/following{/other_user}", "gists_url": "https://api.github.com/users/and800/gists{/gist_id}", "starred_url": "https://api.github.com/users/and800/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/and800/subscriptions", "organizations_url": "https://api.github.com/users/and800/orgs", "repos_url": "https://api.github.com/users/and800/repos", "events_url": "https://api.github.com/users/and800/events{/privacy}", "received_events_url": "https://api.github.com/users/and800/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163965887, "node_id": "MDU6TGFiZWwxNjM5NjU4ODc=", "url": "https://api.github.com/repos/aio-libs/aiomysql/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 163965889, "node_id": "MDU6TGFiZWwxNjM5NjU4ODk=", "url": "https://api.github.com/repos/aio-libs/aiomysql/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 173308807, "node_id": "MDU6TGFiZWwxNzMzMDg4MDc=", "url": "https://api.github.com/repos/aio-libs/aiomysql/labels/task", "name": "task", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-09T22:43:06Z", "updated_at": "2018-07-09T19:42:59Z", "closed_at": "2018-07-09T19:42:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mysql8 connection attempt fails with error \"Access denied for user (using password: NO)\", but the password is among args.\r\n\r\nI believe this can be related to new mysql authentication method (see https://stackoverflow.com/questions/49194719/authentication-plugin-caching-sha2-password-cannot-be-loaded).\r\n\r\nTest code:\r\n```python\r\nimport asyncio\r\nimport aiomysql\r\n\r\nargs = {\r\n    'port': 3306,\r\n    'user': 'test',\r\n    'password': 'test',\r\n    'db': 'test',\r\n}\r\n\r\nasync def connect():\r\n    # MYSQL_VERSION=5.7.22-1debian9\r\n    await aiomysql.connect(host='mysql5', **args)\r\n    print('mysql5 works\\n')\r\n\r\n    # MYSQL_VERSION=8.0.11-1debian9\r\n    await aiomysql.connect(host='mysql8', **args)\r\n    print('mysql8 works\\n')\r\n\r\nasyncio.get_event_loop().run_until_complete(connect())\r\n```\r\n\r\nLog:\r\n```\r\nmysql5 works\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/aiomysql/connection.py\", line 464, in _connect\r\n    await self._request_authentication()\r\n  File \"/usr/local/lib/python3.6/site-packages/aiomysql/connection.py\", line 719, in _request_authentication\r\n    auth_packet = await self._read_packet()\r\n  File \"/usr/local/lib/python3.6/site-packages/aiomysql/connection.py\", line 554, in _read_packet\r\n    packet.check_error()\r\n  File \"/usr/local/lib/python3.6/site-packages/pymysql/connections.py\", line 384, in check_error\r\n    err.raise_mysql_exception(self._data)\r\n  File \"/usr/local/lib/python3.6/site-packages/pymysql/err.py\", line 109, in raise_mysql_exception\r\n    raise errorclass(errno, errval)\r\npymysql.err.OperationalError: (1045, \"Access denied for user 'test'@'172.18.0.3' (using password: NO)\")\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 20, in <module>\r\n    asyncio.get_event_loop().run_until_complete(connect())\r\n  File \"/usr/local/lib/python3.6/asyncio/base_events.py\", line 468, in run_until_complete\r\n    return future.result()\r\n  File \"main.py\", line 17, in connect\r\n    await aiomysql.connect(host='mysql8', **args)\r\n  File \"/usr/local/lib/python3.6/site-packages/aiomysql/connection.py\", line 76, in _connect\r\n    await conn._connect()\r\n  File \"/usr/local/lib/python3.6/site-packages/aiomysql/connection.py\", line 484, in _connect\r\n    self._host) from e\r\npymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on 'mysql8'\")\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/290", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/290/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/290/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/290", "id": 322581617, "node_id": "MDU6SXNzdWUzMjI1ODE2MTc=", "number": 290, "title": "Cannot make db -> python value conversion working with custom SA columns", "user": {"login": "vlanse", "id": 17192647, "node_id": "MDQ6VXNlcjE3MTkyNjQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/17192647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlanse", "html_url": "https://github.com/vlanse", "followers_url": "https://api.github.com/users/vlanse/followers", "following_url": "https://api.github.com/users/vlanse/following{/other_user}", "gists_url": "https://api.github.com/users/vlanse/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlanse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlanse/subscriptions", "organizations_url": "https://api.github.com/users/vlanse/orgs", "repos_url": "https://api.github.com/users/vlanse/repos", "events_url": "https://api.github.com/users/vlanse/events{/privacy}", "received_events_url": "https://api.github.com/users/vlanse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-13T10:17:41Z", "updated_at": "2018-12-08T20:21:42Z", "closed_at": "2018-12-08T20:20:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Original issue in aiopg:\r\nhttps://github.com/aio-libs/aiopg/issues/86\r\n\r\nI will backport that fix here", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/286", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/286/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/286/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/286", "id": 316943666, "node_id": "MDU6SXNzdWUzMTY5NDM2NjY=", "number": 286, "title": "Remove a connection from aiomysql.Pool", "user": {"login": "terrisgit", "id": 6069365, "node_id": "MDQ6VXNlcjYwNjkzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6069365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrisgit", "html_url": "https://github.com/terrisgit", "followers_url": "https://api.github.com/users/terrisgit/followers", "following_url": "https://api.github.com/users/terrisgit/following{/other_user}", "gists_url": "https://api.github.com/users/terrisgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrisgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrisgit/subscriptions", "organizations_url": "https://api.github.com/users/terrisgit/orgs", "repos_url": "https://api.github.com/users/terrisgit/repos", "events_url": "https://api.github.com/users/terrisgit/events{/privacy}", "received_events_url": "https://api.github.com/users/terrisgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-23T19:05:34Z", "updated_at": "2018-07-21T22:52:52Z", "closed_at": "2018-07-21T22:52:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to remove a bad connection from a connection pool when using context managers?\r\n\r\nWhen my app encounters a MySQL error, it closes the connection pool and creates a new one because aiomysql doesn't automatically remove bad connections from the pool. This is not a nice thing to do if other connections managed by the pool are running queries.\r\n\r\nAs an enhancement, I need to zero down permanent connection-related errors versus recoverable errors such as \"deadlock victim.\" I haven't had enough time to experiment.\r\n\r\nSearching for either doesn't provide answers but maybe I'm not looking closely enough:\r\n- pymysql remove connection pool\r\n- aiomysql remove connection pool", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/278", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/278/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/278/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/278", "id": 311172260, "node_id": "MDU6SXNzdWUzMTExNzIyNjA=", "number": 278, "title": "how to use ResultProxy with Sqlalchemy ORM", "user": {"login": "wuyazi", "id": 3753570, "node_id": "MDQ6VXNlcjM3NTM1NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3753570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wuyazi", "html_url": "https://github.com/wuyazi", "followers_url": "https://api.github.com/users/wuyazi/followers", "following_url": "https://api.github.com/users/wuyazi/following{/other_user}", "gists_url": "https://api.github.com/users/wuyazi/gists{/gist_id}", "starred_url": "https://api.github.com/users/wuyazi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wuyazi/subscriptions", "organizations_url": "https://api.github.com/users/wuyazi/orgs", "repos_url": "https://api.github.com/users/wuyazi/repos", "events_url": "https://api.github.com/users/wuyazi/events{/privacy}", "received_events_url": "https://api.github.com/users/wuyazi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-04T10:27:15Z", "updated_at": "2018-04-04T14:17:36Z", "closed_at": "2018-04-04T14:17:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i got a ResultProxy object, how to convert to a Sqlalchemy ORM object?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/277", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/277/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/277/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/277", "id": 310766551, "node_id": "MDU6SXNzdWUzMTA3NjY1NTE=", "number": 277, "title": "RuntimeError: readexactly() called while another coroutine is already waiting for incoming data", "user": {"login": "pavlukivan", "id": 9590981, "node_id": "MDQ6VXNlcjk1OTA5ODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9590981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavlukivan", "html_url": "https://github.com/pavlukivan", "followers_url": "https://api.github.com/users/pavlukivan/followers", "following_url": "https://api.github.com/users/pavlukivan/following{/other_user}", "gists_url": "https://api.github.com/users/pavlukivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavlukivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavlukivan/subscriptions", "organizations_url": "https://api.github.com/users/pavlukivan/orgs", "repos_url": "https://api.github.com/users/pavlukivan/repos", "events_url": "https://api.github.com/users/pavlukivan/events{/privacy}", "received_events_url": "https://api.github.com/users/pavlukivan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-03T09:48:09Z", "updated_at": "2018-04-04T05:24:40Z", "closed_at": "2018-04-04T05:24:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\n  File \"C:\\Python36-32\\lib\\site-packages\\aiomysql\\cursors.py\", line 240, in execute\r\n    yield from self._query(query)\r\n  File \"C:\\Python36-32\\lib\\site-packages\\aiomysql\\cursors.py\", line 461, in _query\r\n    yield from conn.query(q)\r\n  File \"C:\\Python36-32\\lib\\site-packages\\aiomysql\\connection.py\", line 403, in query\r\n    yield from self._read_query_result(unbuffered=unbuffered)\r\n  File \"C:\\Python36-32\\lib\\site-packages\\aiomysql\\connection.py\", line 597, in _read_query_result\r\n    yield from result.read()\r\n  File \"C:\\Python36-32\\lib\\site-packages\\aiomysql\\connection.py\", line 850, in read\r\n    first_packet = yield from self.connection._read_packet()\r\n  File \"C:\\Python36-32\\lib\\site-packages\\aiomysql\\connection.py\", line 535, in _read_packet\r\n    packet_header = yield from self._read_bytes(4)\r\n  File \"C:\\Python36-32\\lib\\site-packages\\aiomysql\\connection.py\", line 573, in _read_bytes\r\n    data = yield from self._reader.readexactly(num_bytes)\r\n  File \"C:\\Python36-32\\lib\\asyncio\\streams.py\", line 668, in readexactly\r\n    yield from self._wait_for_data('readexactly')\r\n  File \"C:\\Python36-32\\lib\\asyncio\\streams.py\", line 446, in _wait_for_data\r\n    'already waiting for incoming data' % func_name)\r\nRuntimeError: readexactly() called while another coroutine is already waiting for incoming data\r\n```\r\npython 3.6\r\naiomysql 0.0.12 \r\nwindows 7 x64", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/267", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/267/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/267/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/267", "id": 303142062, "node_id": "MDU6SXNzdWUzMDMxNDIwNjI=", "number": 267, "title": "\"Can't connect to MySQL server on 'localhost'\"", "user": {"login": "hibikidesu", "id": 20015683, "node_id": "MDQ6VXNlcjIwMDE1Njgz", "avatar_url": "https://avatars3.githubusercontent.com/u/20015683?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hibikidesu", "html_url": "https://github.com/hibikidesu", "followers_url": "https://api.github.com/users/hibikidesu/followers", "following_url": "https://api.github.com/users/hibikidesu/following{/other_user}", "gists_url": "https://api.github.com/users/hibikidesu/gists{/gist_id}", "starred_url": "https://api.github.com/users/hibikidesu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hibikidesu/subscriptions", "organizations_url": "https://api.github.com/users/hibikidesu/orgs", "repos_url": "https://api.github.com/users/hibikidesu/repos", "events_url": "https://api.github.com/users/hibikidesu/events{/privacy}", "received_events_url": "https://api.github.com/users/hibikidesu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-07T15:26:05Z", "updated_at": "2020-07-29T14:23:52Z", "closed_at": "2018-03-10T09:01:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "randomly just happened. Works fine on windows locally but on a new ubuntu server it justs gives out\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/dist-packages/discord/client.py\", line 224, in _run_event\r\n    yield from coro(*args, **kwargs)\r\n  File \"bot.py\", line 89, in on_message\r\n    db=config.db.database)\r\n  File \"/usr/local/lib/python3.6/dist-packages/aiomysql/utils.py\", line 75, in __await__\r\n    resp = yield from self._coro\r\n  File \"/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py\", line 78, in _connect\r\n    yield from conn._connect()\r\n  File \"/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py\", line 496, in _connect\r\n    self._host) from e\r\npymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on 'localhost'\")\r\n```\r\npassword, host, user are all correct. Using aiomysql 0.0.12 and mysql 5.7.21", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/265", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/265/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/265/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/265", "id": 303004587, "node_id": "MDU6SXNzdWUzMDMwMDQ1ODc=", "number": 265, "title": "Connection object has no attribute '_process_auth'", "user": {"login": "AlexLisovoy", "id": 713052, "node_id": "MDQ6VXNlcjcxMzA1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/713052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexLisovoy", "html_url": "https://github.com/AlexLisovoy", "followers_url": "https://api.github.com/users/AlexLisovoy/followers", "following_url": "https://api.github.com/users/AlexLisovoy/following{/other_user}", "gists_url": "https://api.github.com/users/AlexLisovoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexLisovoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexLisovoy/subscriptions", "organizations_url": "https://api.github.com/users/AlexLisovoy/orgs", "repos_url": "https://api.github.com/users/AlexLisovoy/repos", "events_url": "https://api.github.com/users/AlexLisovoy/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexLisovoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-07T08:25:16Z", "updated_at": "2018-04-22T18:49:25Z", "closed_at": "2018-04-22T18:49:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python 3.6, aiomysql  0.0.12, PyMySQL  0.8.0.\r\n\r\nDuring connection to mysql server(5.7) I got following error:\r\n```\r\n...\r\nFile \"./python3.6/site-packages/aiomysql/connection.py\", line 712, in _request_authentication\r\n    auth_packet = self._process_auth(plugin_name, auth_packet)\r\nAttributeError: 'Connection' object has no attribute '_process_auth'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n...\r\n  File \"./python3.6/site-packages/aiomysql/connection.py\", line 495, in _connect\r\n    self._host) from e\r\npymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on '*****'\")\r\n```\r\nReading the code I didn't find implementation _process_auth at all.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/263", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/263/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/263/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/263", "id": 301405660, "node_id": "MDU6SXNzdWUzMDE0MDU2NjA=", "number": 263, "title": "DictCursor cursorclass breaks sqlalchemy engine fetching", "user": {"login": "iScrE4m", "id": 6594163, "node_id": "MDQ6VXNlcjY1OTQxNjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6594163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iScrE4m", "html_url": "https://github.com/iScrE4m", "followers_url": "https://api.github.com/users/iScrE4m/followers", "following_url": "https://api.github.com/users/iScrE4m/following{/other_user}", "gists_url": "https://api.github.com/users/iScrE4m/gists{/gist_id}", "starred_url": "https://api.github.com/users/iScrE4m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iScrE4m/subscriptions", "organizations_url": "https://api.github.com/users/iScrE4m/orgs", "repos_url": "https://api.github.com/users/iScrE4m/repos", "events_url": "https://api.github.com/users/iScrE4m/events{/privacy}", "received_events_url": "https://api.github.com/users/iScrE4m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-01T13:33:37Z", "updated_at": "2018-04-06T18:43:45Z", "closed_at": "2018-04-06T18:43:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Python 3.5, running on Linux, aiomysql 0.0.12\r\n\r\nIt can definitely be criticized, that I even tried to pass DictCursor into create_engine as a cursorclass, but I believe that the library should either ignore the cursor choice, or not accept the kwarg at all and thrown an exception, since it relies on the classic one. If it can work other cursor classes, It should at least check if they are compatible (or blacklist uncompatible ones)?\r\n\r\n```\r\n...\r\n    /usr/local/lib/python3.5/dist-packages/aiomysql/sa/result.py\", line 88, in as_tuple\r\n    return tuple(self[k] for k in self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/sa/result.py\", line 88, in <genexpr>\r\n    return tuple(self[k] for k in self)\r\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/sa/result.py\", line 63, in __getitem__\r\n    return self._row[index]\r\n    KeyError: 0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/257", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/257/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/257/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/257", "id": 298018248, "node_id": "MDU6SXNzdWUyOTgwMTgyNDg=", "number": 257, "title": "Unable to set a connect_timeout", "user": {"login": "terrisgit", "id": 6069365, "node_id": "MDQ6VXNlcjYwNjkzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6069365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrisgit", "html_url": "https://github.com/terrisgit", "followers_url": "https://api.github.com/users/terrisgit/followers", "following_url": "https://api.github.com/users/terrisgit/following{/other_user}", "gists_url": "https://api.github.com/users/terrisgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrisgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrisgit/subscriptions", "organizations_url": "https://api.github.com/users/terrisgit/orgs", "repos_url": "https://api.github.com/users/terrisgit/repos", "events_url": "https://api.github.com/users/terrisgit/events{/privacy}", "received_events_url": "https://api.github.com/users/terrisgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-17T16:47:11Z", "updated_at": "2018-12-04T14:53:59Z", "closed_at": "2018-12-04T14:53:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "aiomysql==0.0.12\r\n\r\nReading through the code, kwargs passed to create_pool() are captured and passed along. The code looks correct but setting connect_timeout to 1 versus 1000 makes no difference. The timeout is always two minutes and a few seconds. Something like:\r\n\r\n```\r\npool = await aiomysql.create_pool(user=user, db=database, host=host,\r\n      password=password, port=port, connect_timeout=1 )\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/251", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/251/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/251/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/251", "id": 296079014, "node_id": "MDU6SXNzdWUyOTYwNzkwMTQ=", "number": 251, "title": "cursor.nextset() hangs if the next set has an error", "user": {"login": "terrisgit", "id": 6069365, "node_id": "MDQ6VXNlcjYwNjkzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6069365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terrisgit", "html_url": "https://github.com/terrisgit", "followers_url": "https://api.github.com/users/terrisgit/followers", "following_url": "https://api.github.com/users/terrisgit/following{/other_user}", "gists_url": "https://api.github.com/users/terrisgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/terrisgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terrisgit/subscriptions", "organizations_url": "https://api.github.com/users/terrisgit/orgs", "repos_url": "https://api.github.com/users/terrisgit/repos", "events_url": "https://api.github.com/users/terrisgit/events{/privacy}", "received_events_url": "https://api.github.com/users/terrisgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-02-10T06:39:21Z", "updated_at": "2018-07-09T19:28:24Z", "closed_at": "2018-07-09T19:28:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "**aiomysql==0.0.12**\r\n\r\nThe following psuedocode hangs on cur.nextset() due to the syntax error in the second statement. I have not determined whether this happens when, say, the second statement is valid but fails due to, say, being chosen as a deadlock victim. I suspect the answer is yes. If so, this would represent a serious issue for my project. Could nextset() raise an exception instead?\r\n\r\n```\r\nasync with pool.acquire(..) as conn:\r\n    async with conn.cursor() as cur:\r\n        await cur.execute(\"select 1; barf\")\r\n        await cur.nextset()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/237", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/237/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/237/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/237", "id": 284736980, "node_id": "MDU6SXNzdWUyODQ3MzY5ODA=", "number": 237, "title": "Some unicode chars not working properly when using 'utf8mb4'", "user": {"login": "jwshields", "id": 7400556, "node_id": "MDQ6VXNlcjc0MDA1NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7400556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwshields", "html_url": "https://github.com/jwshields", "followers_url": "https://api.github.com/users/jwshields/followers", "following_url": "https://api.github.com/users/jwshields/following{/other_user}", "gists_url": "https://api.github.com/users/jwshields/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwshields/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwshields/subscriptions", "organizations_url": "https://api.github.com/users/jwshields/orgs", "repos_url": "https://api.github.com/users/jwshields/repos", "events_url": "https://api.github.com/users/jwshields/events{/privacy}", "received_events_url": "https://api.github.com/users/jwshields/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-27T14:49:14Z", "updated_at": "2017-12-28T08:39:13Z", "closed_at": "2017-12-27T19:30:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you and my apologies in advance, I'm unsure what other way to word the title.\r\n\r\n**Environment information:**\r\nPython: 3.6.2\r\naiomysql: 0.0.11\r\nMySQL: 5.7.20\r\nPlatform: Windows 10 (1709 16299.125)\r\n\r\n**Problem**:\r\nSome unicode characters are not encoding properly upon insertion to the table.\r\n\r\n**My code**:\r\n\r\nConnection:\r\n```\r\nself.mysqlcon = await aiomysql.create_pool(host=mysqlserver, port=mysqlport, user=mysqluser, minsize=1, maxsize=100, use_unicode=True, password=mysqlpw, db=mysqldb, autocommit=True, charset='utf8mb4')\r\n```\r\n\r\nSchema:\r\nNote: when creating the schema, using MySQL WorkBench, I used the create schema wizard, and selected `utf8mb4 - default collation`\r\n```\r\nCREATE SCHEMA `db` DEFAULT CHARACTER SET utf8mb4 ;\r\n```\r\n\r\nTable Create: \r\nNote: tablename in the first line gets replaced by my python script\r\n```\r\nCREATE TABLE `db`.`tablename` (\r\n  `id_messages` BIGINT NOT NULL AUTO_INCREMENT,\r\n  `time` VARCHAR(45) NOT NULL,\r\n  `user-name` LONGTEXT NOT NULL,\r\n  `content` LONGTEXT NULL,\r\n  PRIMARY KEY (`id_messages`));\r\n```\r\n\r\nInsert statement:\r\n```\r\nSQLQeury = \"\"\"\r\n        INSERT INTO `db`.`{0}_{1}_messages` (`time`, `user-name`, `content`)\r\n        VALUES (%s, %s, %s);\r\n        \"\"\"\r\n        NewQuery = SQLQeury.format(guildid, channelid)\r\n        QueryData = (msgtime, username, content)\r\n        tablename = str(guildid + \"_\" + channelid + \"_messages\")\r\n        return NewQuery, tablename, QueryData\r\n```\r\n\r\nInsertion:\r\n```\r\nchannelsqlcmd, tablename, querydata = self.bot.sql.statement_insert_channel_new(message)\r\nawait self.check_table(\"channel-new\", tablename)\r\nasync with self.bot.mysqlcon.acquire() as conn:\r\n    async with conn.cursor() as cursor:\r\n        await cursor.execute(query=channelsqlcmd, args=querydata)\r\n```\r\n\r\nResults:\r\n`SELECT * FROM db._messages;`\r\n```\r\n3, 2017-12-27 06:09:47.465798, boat, ????\r\n4, 2017-12-27 06:09:53.782359, noodle, ?\r\n5, 2017-12-27 06:09:56.413201, noodle, \u2764\r\n8, 2017-12-27 06:24:55.775261, noodle, ?\r\n11, 2017-12-27 06:25:13.894280, noodle, ?\r\n```\r\n\r\nid 3, the last field should be (count 4) of 'FIRE' (U+1F525)\r\nid 4, the last field should be (count 1) of 'Smiling Face with Open Mouth and Smiling Eyes' (U+1F604)\r\nid 5, the last field is (count 1) of 'Red Heart' (U+2764)\r\nid 8, the last field should be (count 1) of 'Sweat Droplets' (U+1F4A6)\r\nid 11, the last field should be (count 1) of 'OK Hand' (U+1F44C)\r\n\r\n\r\nUpon insertion, my Python console doesn't report errors.\r\nTested with two clients for getting results (MySQL Workbench, RazorSQL)\r\n\r\nI've truncated some information for readability. (irrelevant Python lines, some of the columns returned from my queries)\r\nI hope that I've provided some useful information;\r\nI've tried to include as much as I can, please let me know if you need anything else.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/234", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/234/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/234/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/234", "id": 280565365, "node_id": "MDU6SXNzdWUyODA1NjUzNjU=", "number": 234, "title": "IndexError: cannot fit 'int' into an index-sized integer", "user": {"login": "MattIPv4", "id": 12371363, "node_id": "MDQ6VXNlcjEyMzcxMzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/12371363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MattIPv4", "html_url": "https://github.com/MattIPv4", "followers_url": "https://api.github.com/users/MattIPv4/followers", "following_url": "https://api.github.com/users/MattIPv4/following{/other_user}", "gists_url": "https://api.github.com/users/MattIPv4/gists{/gist_id}", "starred_url": "https://api.github.com/users/MattIPv4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MattIPv4/subscriptions", "organizations_url": "https://api.github.com/users/MattIPv4/orgs", "repos_url": "https://api.github.com/users/MattIPv4/repos", "events_url": "https://api.github.com/users/MattIPv4/events{/privacy}", "received_events_url": "https://api.github.com/users/MattIPv4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-08T17:41:17Z", "updated_at": "2017-12-14T13:26:29Z", "closed_at": "2017-12-14T13:26:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Standard connection following the examples on the docs.\r\nRun: `await cursor.execute(\"INSERT INTO restarter (guild) VALUES (334425427391021057)\")`\r\nResults in `IndexError: cannot fit 'int' into an index-sized integer`\r\n\r\nRunning the same statement via phpmyadmin works fine.\r\nThe guild column is an unsigned bigint.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/233", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/233/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/233/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/233", "id": 279642728, "node_id": "MDU6SXNzdWUyNzk2NDI3Mjg=", "number": 233, "title": "update to pypi", "user": {"login": "zhaoyihong", "id": 3592885, "node_id": "MDQ6VXNlcjM1OTI4ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3592885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhaoyihong", "html_url": "https://github.com/zhaoyihong", "followers_url": "https://api.github.com/users/zhaoyihong/followers", "following_url": "https://api.github.com/users/zhaoyihong/following{/other_user}", "gists_url": "https://api.github.com/users/zhaoyihong/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhaoyihong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhaoyihong/subscriptions", "organizations_url": "https://api.github.com/users/zhaoyihong/orgs", "repos_url": "https://api.github.com/users/zhaoyihong/repos", "events_url": "https://api.github.com/users/zhaoyihong/events{/privacy}", "received_events_url": "https://api.github.com/users/zhaoyihong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-06T06:30:49Z", "updated_at": "2017-12-06T17:56:42Z", "closed_at": "2017-12-06T17:56:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wish to update aiomysql with pip, but that's not the same with github. \r\n\r\nhttps://pypi.python.org/pypi/aiomysql. Newest version is 0.0.9 which is updated a year ago.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/228", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/228/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/228/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/228", "id": 271367879, "node_id": "MDU6SXNzdWUyNzEzNjc4Nzk=", "number": 228, "title": "sqlalchemy 1.2.0b3 has not attribute 'dbapi_type_map'", "user": {"login": "DeoLeung", "id": 3764720, "node_id": "MDQ6VXNlcjM3NjQ3MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3764720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeoLeung", "html_url": "https://github.com/DeoLeung", "followers_url": "https://api.github.com/users/DeoLeung/followers", "following_url": "https://api.github.com/users/DeoLeung/following{/other_user}", "gists_url": "https://api.github.com/users/DeoLeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeoLeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeoLeung/subscriptions", "organizations_url": "https://api.github.com/users/DeoLeung/orgs", "repos_url": "https://api.github.com/users/DeoLeung/repos", "events_url": "https://api.github.com/users/DeoLeung/events{/privacy}", "received_events_url": "https://api.github.com/users/DeoLeung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-06T06:03:45Z", "updated_at": "2018-01-18T21:28:36Z", "closed_at": "2018-01-18T21:28:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "```sh\r\nTraceback (most recent call last):\r\nFile \"/xxx/.virtualenvs/risk/lib/python3.6/site-packages/aiomysql/utils.py\", line 66, in __await__\r\n    resp = yield from self._coro\r\n  File \"/xxx/.virtualenvs/risk/lib/python3.6/site-packages/aiomysql/sa/connection.py\", line 113, in _execute\r\n    ret = yield from create_result_proxy(self, cursor, self._dialect)\r\n  File \"/xxx/.virtualenvs/risk/lib/python3.6/site-packages/aiomysql/sa/result.py\", line 17, in create_result_proxy\r\n    yield from result_proxy._prepare()\r\n  File \"/xxx/.virtualenvs/risk/lib/python3.6/site-packages/aiomysql/sa/result.py\", line 237, in _prepare\r\n    self._metadata = ResultMetaData(self, cursor.description)\r\n  File \"/xxx/.virtualenvs/risk/lib/python3.6/site-packages/aiomysql/sa/result.py\", line 107, in __init__\r\n    typemap = dialect.dbapi_type_map\r\nAttributeError: 'MySQLDialect_pymysql' object has no attribute 'dbapi_type_map'\r\n```\r\nit looks like `sqlalchemy==1.2.0b3` breaks something", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/220", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/220/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/220/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/220", "id": 265859610, "node_id": "MDU6SXNzdWUyNjU4NTk2MTA=", "number": 220, "title": "New release ", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-16T17:58:23Z", "updated_at": "2017-12-06T17:57:22Z", "closed_at": "2017-12-06T17:56:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Reminder to myself to make release soon", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/215", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/215/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/215/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/215", "id": 265532205, "node_id": "MDU6SXNzdWUyNjU1MzIyMDU=", "number": 215, "title": "Issue with escaping in DROP and CREATE TABLE statements ", "user": {"login": "Tehtehteh", "id": 6199962, "node_id": "MDQ6VXNlcjYxOTk5NjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6199962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tehtehteh", "html_url": "https://github.com/Tehtehteh", "followers_url": "https://api.github.com/users/Tehtehteh/followers", "following_url": "https://api.github.com/users/Tehtehteh/following{/other_user}", "gists_url": "https://api.github.com/users/Tehtehteh/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tehtehteh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tehtehteh/subscriptions", "organizations_url": "https://api.github.com/users/Tehtehteh/orgs", "repos_url": "https://api.github.com/users/Tehtehteh/repos", "events_url": "https://api.github.com/users/Tehtehteh/events{/privacy}", "received_events_url": "https://api.github.com/users/Tehtehteh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-14T23:31:53Z", "updated_at": "2017-10-16T17:57:56Z", "closed_at": "2017-10-16T17:57:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If we use statements DROP/CREATE with escaping, i.e.\r\n```\r\nasync def query(query, args):\r\n    async with pool.get() as conn:\r\n        async with conn.cursor(aiomysql.DictCursor) as cur:\r\n            await cur.execute(query, args)\r\n```\r\nAnd we call\r\n```\r\nasync def test():\r\n    query = \"CREATE TABLE %s(id int)\"\r\n    await query(query, args=['test'])\r\n    query = \"DROP TABLE IF EXISTS %s\"\r\n    await query(query, args=['test'])\r\n```\r\nEscaped query would look like `'CREATE TABLE \\\\'test\\\\'(id int)'`\r\nAnd it produces MySQL Error:\r\n```\r\npymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''test'(id int)' at line 1\")\r\n```\r\nAm I doing something wrong?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/214", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/214/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/214/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/214", "id": 264209425, "node_id": "MDU6SXNzdWUyNjQyMDk0MjU=", "number": 214, "title": "get a problem in cursor", "user": {"login": "shownb", "id": 2890741, "node_id": "MDQ6VXNlcjI4OTA3NDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2890741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shownb", "html_url": "https://github.com/shownb", "followers_url": "https://api.github.com/users/shownb/followers", "following_url": "https://api.github.com/users/shownb/following{/other_user}", "gists_url": "https://api.github.com/users/shownb/gists{/gist_id}", "starred_url": "https://api.github.com/users/shownb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shownb/subscriptions", "organizations_url": "https://api.github.com/users/shownb/orgs", "repos_url": "https://api.github.com/users/shownb/repos", "events_url": "https://api.github.com/users/shownb/events{/privacy}", "received_events_url": "https://api.github.com/users/shownb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-10T12:30:25Z", "updated_at": "2017-10-15T16:34:40Z", "closed_at": "2017-10-15T16:34:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone,\r\nI use pool to execute sql.the example is like that without any problem\r\n```python\r\nasync with _pool.acquire() as conn:\r\n\tasync with conn.cursor(aiomysql.DictCursor) as _cur:\r\n\t\tawait _cur.execute(sql,kwargs or args)\r\n\t\trs = await _cur.fetchall()\r\n```\r\nand ab result is good\r\n```\r\nTime taken for tests:   39.560 seconds\r\nComplete requests:      10000\r\nFailed requests:        0\r\nTotal transferred:      3450000 bytes\r\nHTML transferred:       2460000 bytes\r\nRequests per second:    252.78 [#/sec] (mean)\r\n```\r\n\r\n**but** I want to do it like that in a Class\r\n```python\r\nasync def _cursor(self):\r\n\tasync with self._pool.acquire() as conn:\r\n\t\t_cur = await conn.cursor(aiomysql.DictCursor)\r\n\treturn _cur\r\n```\r\n```python\r\nasync def query(self,sql,*args,**kwargs):\r\n\t_cur = await self._cursor()\r\n\ttry:\r\n\t\tawait _cur.execute(sql,kwargs or args)\r\n\t\trs = await _cur.fetchall()\r\n\t\treturn rs\r\n\tfinally:\r\n\t\tawait _cur.close()\r\n```\r\nthe ab result is so bad\r\n```\r\nComplete requests:      10000\r\nFailed requests:        9919\r\n   (Connect: 0, Receive: 0, Length: 9919, Exceptions: 0)\r\nNon-2xx responses:      83\r\nTotal transferred:      3443379 bytes\r\nHTML transferred:       2451814 bytes\r\nRequests per second:    163.92 [#/sec] (mean)\r\n```\r\n\r\nI know that there is problem in my codes, but I don't know what is different.\r\nmaybe conn don't close correctly?or the conn close too late?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/203", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/203/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/203/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/203", "id": 248479742, "node_id": "MDU6SXNzdWUyNDg0Nzk3NDI=", "number": 203, "title": "Mistake :(", "user": {"login": "paccorsi", "id": 13418502, "node_id": "MDQ6VXNlcjEzNDE4NTAy", "avatar_url": "https://avatars1.githubusercontent.com/u/13418502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paccorsi", "html_url": "https://github.com/paccorsi", "followers_url": "https://api.github.com/users/paccorsi/followers", "following_url": "https://api.github.com/users/paccorsi/following{/other_user}", "gists_url": "https://api.github.com/users/paccorsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/paccorsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paccorsi/subscriptions", "organizations_url": "https://api.github.com/users/paccorsi/orgs", "repos_url": "https://api.github.com/users/paccorsi/repos", "events_url": "https://api.github.com/users/paccorsi/events{/privacy}", "received_events_url": "https://api.github.com/users/paccorsi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-07T17:33:19Z", "updated_at": "2017-08-07T17:39:54Z", "closed_at": "2017-08-07T17:33:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/202", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/202/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/202/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/202", "id": 248479048, "node_id": "MDU6SXNzdWUyNDg0NzkwNDg=", "number": 202, "title": "Mistake :(", "user": {"login": "paccorsi", "id": 13418502, "node_id": "MDQ6VXNlcjEzNDE4NTAy", "avatar_url": "https://avatars1.githubusercontent.com/u/13418502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paccorsi", "html_url": "https://github.com/paccorsi", "followers_url": "https://api.github.com/users/paccorsi/followers", "following_url": "https://api.github.com/users/paccorsi/following{/other_user}", "gists_url": "https://api.github.com/users/paccorsi/gists{/gist_id}", "starred_url": "https://api.github.com/users/paccorsi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paccorsi/subscriptions", "organizations_url": "https://api.github.com/users/paccorsi/orgs", "repos_url": "https://api.github.com/users/paccorsi/repos", "events_url": "https://api.github.com/users/paccorsi/events{/privacy}", "received_events_url": "https://api.github.com/users/paccorsi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-08-07T17:30:33Z", "updated_at": "2017-08-07T17:39:16Z", "closed_at": "2017-08-07T17:33:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/200", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/200/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/200/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/200", "id": 247650695, "node_id": "MDU6SXNzdWUyNDc2NTA2OTU=", "number": 200, "title": "Autocommit on connection pool", "user": {"login": "magnamatt", "id": 30173526, "node_id": "MDQ6VXNlcjMwMTczNTI2", "avatar_url": "https://avatars0.githubusercontent.com/u/30173526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magnamatt", "html_url": "https://github.com/magnamatt", "followers_url": "https://api.github.com/users/magnamatt/followers", "following_url": "https://api.github.com/users/magnamatt/following{/other_user}", "gists_url": "https://api.github.com/users/magnamatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/magnamatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magnamatt/subscriptions", "organizations_url": "https://api.github.com/users/magnamatt/orgs", "repos_url": "https://api.github.com/users/magnamatt/repos", "events_url": "https://api.github.com/users/magnamatt/events{/privacy}", "received_events_url": "https://api.github.com/users/magnamatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-03T09:46:07Z", "updated_at": "2017-10-16T17:58:51Z", "closed_at": "2017-10-16T17:58:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirstly, thanks for an awesome piece of software.\r\n\r\nThe only real issue I have had is connection pooling with autocommit set to false (the default for aiomysql and pymysql) returns stale and inconsistent results with SELECT operations. The autocommit option is not in the aiomysql pool docs and this is a little misleading. Perhaps this default behaviour should be changed or the option added to the pool docs section of aiomysql.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/199", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/199/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/199/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/199", "id": 247589180, "node_id": "MDU6SXNzdWUyNDc1ODkxODA=", "number": 199, "title": "Sqlalchemy metadata.create_all does not work", "user": {"login": "Reonaydo", "id": 3231571, "node_id": "MDQ6VXNlcjMyMzE1NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3231571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Reonaydo", "html_url": "https://github.com/Reonaydo", "followers_url": "https://api.github.com/users/Reonaydo/followers", "following_url": "https://api.github.com/users/Reonaydo/following{/other_user}", "gists_url": "https://api.github.com/users/Reonaydo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Reonaydo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Reonaydo/subscriptions", "organizations_url": "https://api.github.com/users/Reonaydo/orgs", "repos_url": "https://api.github.com/users/Reonaydo/repos", "events_url": "https://api.github.com/users/Reonaydo/events{/privacy}", "received_events_url": "https://api.github.com/users/Reonaydo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-03T04:29:10Z", "updated_at": "2019-06-14T02:13:30Z", "closed_at": "2017-10-15T16:24:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In continue to #108\r\n\r\nCreating tables via metadata.create_all is not possible\r\n\r\n` AttributeError: 'Engine' object has no attribute '_run_visitor'`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/195", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/195/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/195/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/195", "id": 245917602, "node_id": "MDU6SXNzdWUyNDU5MTc2MDI=", "number": 195, "title": "unable to perform operation on <TCPTransport closed=True reading=False 0x1e41248>; the handler is closed`", "user": {"login": "larry-dev", "id": 18585750, "node_id": "MDQ6VXNlcjE4NTg1NzUw", "avatar_url": "https://avatars3.githubusercontent.com/u/18585750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larry-dev", "html_url": "https://github.com/larry-dev", "followers_url": "https://api.github.com/users/larry-dev/followers", "following_url": "https://api.github.com/users/larry-dev/following{/other_user}", "gists_url": "https://api.github.com/users/larry-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/larry-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larry-dev/subscriptions", "organizations_url": "https://api.github.com/users/larry-dev/orgs", "repos_url": "https://api.github.com/users/larry-dev/repos", "events_url": "https://api.github.com/users/larry-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/larry-dev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-27T03:44:36Z", "updated_at": "2018-12-06T03:38:03Z", "closed_at": "2018-12-06T03:38:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,i use\r\npython3.5.3\r\naiohttp 2.0.7\r\naiomysql 0.0.9\r\nsqlalchemy1.1.10\r\n\r\nWhen i open the application for a long time.Throw the following error\r\n\r\n`2017-07-27 10:28:13 rtgroom.py[line:141] ERROR Traceback (most recent call last):\r\n  File \"/home/wwwroot/ykrealtime/rtgame/models/mysql/rtgroom.py\", line 137, in get_invite_me_count\r\n    RTG_room.select().where(RTG_room.c.create_by == create_by).where(RTG_room.c.status == 1))\r\n  File \"/home/wwwroot/ykrealtime/venv/lib/python3.5/site-packages/aiomysql/utils.py\", line 66, in __await__\r\n    resp = yield from self._coro\r\n  File \"/home/wwwroot/ykrealtime/venv/lib/python3.5/site-packages/aiomysql/sa/connection.py\", line 107, in _execute\r\n    yield from cursor.execute(str(compiled), post_processed_params[0])\r\n  File \"/home/wwwroot/ykrealtime/venv/lib/python3.5/site-packages/aiomysql/cursors.py\", line 239, in execute\r\n    yield from self._query(query)\r\n  File \"/home/wwwroot/ykrealtime/venv/lib/python3.5/site-packages/aiomysql/cursors.py\", line 460, in _query\r\n    yield from conn.query(q)\r\n  File \"/home/wwwroot/ykrealtime/venv/lib/python3.5/site-packages/aiomysql/connection.py\", line 397, in query\r\n    yield from self._execute_command(COMMAND.COM_QUERY, sql)\r\n  File \"/home/wwwroot/ykrealtime/venv/lib/python3.5/site-packages/aiomysql/connection.py\", line 627, in _execute_command\r\n    self._write_bytes(prelude + sql[:chunk_size - 1])\r\n  File \"/home/wwwroot/ykrealtime/venv/lib/python3.5/site-packages/aiomysql/connection.py\", line 568, in _write_bytes\r\n    return self._writer.write(data)\r\n  File \"/usr/local/lib/python3.5/asyncio/streams.py\", line 294, in write\r\n    self._transport.write(data)\r\n  File \"uvloop/handles/stream.pyx\", line 632, in uvloop.loop.UVStream.write (uvloop/loop.c:74612)\r\n  File \"uvloop/handles/handle.pyx\", line 150, in uvloop.loop.UVHandle._ensure_alive (uvloop/loop.c:54917)\r\nRuntimeError: unable to perform operation on <TCPTransport closed=True reading=False 0x1e41248>; the handler is closed`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/189", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/189/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/189/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/189", "id": 239032828, "node_id": "MDU6SXNzdWUyMzkwMzI4Mjg=", "number": 189, "title": "SQLAlchemy Dialects", "user": {"login": "jairhenrique", "id": 81854, "node_id": "MDQ6VXNlcjgxODU0", "avatar_url": "https://avatars0.githubusercontent.com/u/81854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jairhenrique", "html_url": "https://github.com/jairhenrique", "followers_url": "https://api.github.com/users/jairhenrique/followers", "following_url": "https://api.github.com/users/jairhenrique/following{/other_user}", "gists_url": "https://api.github.com/users/jairhenrique/gists{/gist_id}", "starred_url": "https://api.github.com/users/jairhenrique/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jairhenrique/subscriptions", "organizations_url": "https://api.github.com/users/jairhenrique/orgs", "repos_url": "https://api.github.com/users/jairhenrique/repos", "events_url": "https://api.github.com/users/jairhenrique/events{/privacy}", "received_events_url": "https://api.github.com/users/jairhenrique/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-28T02:06:36Z", "updated_at": "2017-06-28T07:11:10Z", "closed_at": "2017-06-28T07:11:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice if SQLAlchemy support was done using the [dialects](http://docs.sqlalchemy.org/en/latest/dialects/index.html).\r\n\r\n```python\r\nfrom sqlalchemy import create_engine\r\nengine = create_engine('mysql+aiomysql://...')\r\n....\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/184", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/184/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/184/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/184", "id": 231972745, "node_id": "MDU6SXNzdWUyMzE5NzI3NDU=", "number": 184, "title": "Does aioMysql.sa support MetaData.create_all?", "user": {"login": "JesseRo", "id": 14294862, "node_id": "MDQ6VXNlcjE0Mjk0ODYy", "avatar_url": "https://avatars3.githubusercontent.com/u/14294862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JesseRo", "html_url": "https://github.com/JesseRo", "followers_url": "https://api.github.com/users/JesseRo/followers", "following_url": "https://api.github.com/users/JesseRo/following{/other_user}", "gists_url": "https://api.github.com/users/JesseRo/gists{/gist_id}", "starred_url": "https://api.github.com/users/JesseRo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JesseRo/subscriptions", "organizations_url": "https://api.github.com/users/JesseRo/orgs", "repos_url": "https://api.github.com/users/JesseRo/repos", "events_url": "https://api.github.com/users/JesseRo/events{/privacy}", "received_events_url": "https://api.github.com/users/JesseRo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-29T09:32:29Z", "updated_at": "2017-05-29T12:14:07Z", "closed_at": "2017-05-29T12:14:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "i create a engine using 'aiomysql.sa.create_engine' and  then i'm trying to create tables using SQLAlchemy's api 'MetaData.create_all':\r\n```\r\n    engine = await aiomysql.sa.create_engine(\r\n        db=conf['database'],\r\n        host=conf['host'],\r\n        port=conf['port'],\r\n        user=conf['user'],\r\n        password=conf['password'],\r\n        minsize=conf['minsize'],\r\n        maxsize=conf['maxsize']\r\n    )\r\n    meta.create_all(engine)\r\n```\r\nbut raise errors:\r\n>   File \"D:\\work\\code-git\\aio-market\\app\\db.py\", line 19, in init_mysql\r\n>     meta.create_all(engine)\r\n>   File \"C:\\Users\\Administrator\\Anaconda3\\lib\\site-packages\\sqlalchemy\\sql\\schema.py\", line 3857, in create_all\r\n>     bind._run_visitor(ddl.SchemaGenerator,\r\n> AttributeError: 'Engine' object has no attribute '_run_visitor'\r\n\r\nbut then i retry without aiomysql:\r\n```\r\nengine = sqlalchemy.create_engine('mysql+pymysql://user:pwd@localhost:3306/aio-market')\r\nmeta.create_all(engine)\r\n```\r\nand it works..\r\n\r\nam i doing anything wrong, or aioMysql.sa do not support MetaData.create_all for now?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/179", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/179/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/179/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/179", "id": 229609680, "node_id": "MDU6SXNzdWUyMjk2MDk2ODA=", "number": 179, "title": "RuntimeError: readexactly() called while another coroutine is already waiting for incoming data", "user": {"login": "denglj", "id": 13680853, "node_id": "MDQ6VXNlcjEzNjgwODUz", "avatar_url": "https://avatars1.githubusercontent.com/u/13680853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denglj", "html_url": "https://github.com/denglj", "followers_url": "https://api.github.com/users/denglj/followers", "following_url": "https://api.github.com/users/denglj/following{/other_user}", "gists_url": "https://api.github.com/users/denglj/gists{/gist_id}", "starred_url": "https://api.github.com/users/denglj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denglj/subscriptions", "organizations_url": "https://api.github.com/users/denglj/orgs", "repos_url": "https://api.github.com/users/denglj/repos", "events_url": "https://api.github.com/users/denglj/events{/privacy}", "received_events_url": "https://api.github.com/users/denglj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-18T09:34:42Z", "updated_at": "2017-05-21T08:37:18Z", "closed_at": "2017-05-21T08:37:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, friends:\r\nI encountered some trouble while trying to use the mysql connection concurrently. Here is the error message:\r\n```\r\nTraceback (most recent call last):\r\n  File \"test_aiomysql.py\", line 63, in <module>\r\n    loop.run_until_complete(asyncio.gather(*tasks))\r\n  File \"/Users/ju/.pyenv/versions/3.6.1/lib/python3.6/asyncio/base_events.py\", line 466, in run_until_complete\r\n    return future.result()\r\n  File \"test_aiomysql.py\", line 53, in create_foo\r\n    foo = await Foo.create_by_id(_id)\r\n  File \"test_aiomysql.py\", line 39, in create_by_id\r\n    await cur.execute(sql)\r\n  File \"/Users/ju/.pyenv/versions/apollo/lib/python3.6/site-packages/aiomysql/cursors.py\", line 239, in execute\r\n    yield from self._query(query)\r\n  File \"/Users/ju/.pyenv/versions/apollo/lib/python3.6/site-packages/aiomysql/cursors.py\", line 460, in _query\r\n    yield from conn.query(q)\r\n  File \"/Users/ju/.pyenv/versions/apollo/lib/python3.6/site-packages/aiomysql/connection.py\", line 398, in query\r\n    yield from self._read_query_result(unbuffered=unbuffered)\r\n  File \"/Users/ju/.pyenv/versions/apollo/lib/python3.6/site-packages/aiomysql/connection.py\", line 582, in _read_query_result\r\n    yield from result.read()\r\n  File \"/Users/ju/.pyenv/versions/apollo/lib/python3.6/site-packages/aiomysql/connection.py\", line 835, in read\r\n    first_packet = yield from self.connection._read_packet()\r\n  File \"/Users/ju/.pyenv/versions/apollo/lib/python3.6/site-packages/aiomysql/connection.py\", line 520, in _read_packet\r\n    packet_header = yield from self._read_bytes(4)\r\n  File \"/Users/ju/.pyenv/versions/apollo/lib/python3.6/site-packages/aiomysql/connection.py\", line 558, in _read_bytes\r\n    data = yield from self._reader.readexactly(num_bytes)\r\n  File \"/Users/ju/.pyenv/versions/3.6.1/lib/python3.6/asyncio/streams.py\", line 668, in readexactly\r\n    yield from self._wait_for_data('readexactly')\r\n  File \"/Users/ju/.pyenv/versions/3.6.1/lib/python3.6/asyncio/streams.py\", line 446, in _wait_for_data\r\n    'already waiting for incoming data' % func_name)\r\nRuntimeError: readexactly() called while another coroutine is already waiting for incoming data\r\n```\r\n\r\n### Environment:\r\n* **MySQL Server OS**: CentOS Linux release 7.1.1503 (Core)\r\n* **MySQL Version**: mysql  Ver 14.14 Distrib 5.7.17, for Linux (x86_64) using  EditLine wrapper\r\n* **Local OS:** Mac OS X, 10.12.4\r\n* **Python Version**: 3.6.1\r\n* **aiomysql**: 0.0.9\r\n* **PyMySQL**: 0.7.11\r\n\r\n### My Code:\r\n```python\r\nimport asyncio\r\nimport aiomysql\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\ndbcfg = {\r\n    'charset': 'utf8',\r\n    'db': 'db_name',\r\n    'host': '10.60.88.250',\r\n    'username': 'testuser',\r\n    'password': 'PasSWorD',\r\n    'port': 3306\r\n}\r\n\r\nasync def _make_connection():\r\n    return await aiomysql.connect(host=dbcfg['host'], port=int(dbcfg['port']),\r\n                                  user=dbcfg['username'],\r\n                                  password=dbcfg['password'],\r\n                                  db=dbcfg['db'], charset='utf8mb4',\r\n                                  cursorclass=aiomysql.DictCursor)\r\n\r\n# I want get a connection when the project initialization and reuse it anywhere.\r\nglobal_conn = loop.run_until_complete(_make_connection())\r\n\r\nclass Foo:\r\n\r\n    # all of the Foo's object share one connection object. \r\n    _conn = global_conn\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        pass\r\n\r\n    @classmethod\r\n    async def create_by_id(cls, _id):\r\n        async with cls._conn.cursor() as cur:\r\n            sql = (\"select * from spider_source_feed where \"\r\n                   \"`url_md5`='{linkmd5}'\").format(linkmd5=_id)\r\n            await cur.execute(sql)\r\n            result = await cur.fetchone()\r\n            return cls(**result)\r\n\r\n\r\nasync def create_foo(_id):\r\n    return await Foo.create_by_id(_id)\r\n\r\nif __name__ == '__main__':\r\n    ids = ['id1', 'id2', 'id3']\r\n    tasks = [create_foo(i) for i in ids]\r\n\r\n    loop = asyncio.get_event_loop()\r\n    # create Foo's object concurrently\r\n    loop.run_until_complete(asyncio.gather(*tasks))\r\n```\r\nexecute the above code, can reproduce the error.\r\n\r\nif we just for no error, I found two ways to fix it:\r\n* don't create foo obejct concurrently\r\n```python\r\nloop.run_until_complete(create_foo('id1'))\r\n```\r\n* create mysql connection every time in Foo\r\n\r\n### But\r\nI really need create multi Foo object at once. make mysql connection anywhere anytime is OK\uff1for how can I fix this problem?\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/174", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/174/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/174/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/174", "id": 227634286, "node_id": "MDU6SXNzdWUyMjc2MzQyODY=", "number": 174, "title": "Is SQLAlchemy Automap supported?", "user": {"login": "povilasb", "id": 1213442, "node_id": "MDQ6VXNlcjEyMTM0NDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1213442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/povilasb", "html_url": "https://github.com/povilasb", "followers_url": "https://api.github.com/users/povilasb/followers", "following_url": "https://api.github.com/users/povilasb/following{/other_user}", "gists_url": "https://api.github.com/users/povilasb/gists{/gist_id}", "starred_url": "https://api.github.com/users/povilasb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/povilasb/subscriptions", "organizations_url": "https://api.github.com/users/povilasb/orgs", "repos_url": "https://api.github.com/users/povilasb/repos", "events_url": "https://api.github.com/users/povilasb/events{/privacy}", "received_events_url": "https://api.github.com/users/povilasb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-10T10:26:23Z", "updated_at": "2017-05-13T08:02:40Z", "closed_at": "2017-05-13T08:02:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "See: http://docs.sqlalchemy.org/en/latest/orm/extensions/automap.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/165", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/165/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/165/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/165", "id": 219833012, "node_id": "MDU6SXNzdWUyMTk4MzMwMTI=", "number": 165, "title": "pymysql.err.InternalError: (1213, 'Deadlock found when trying to get lock; try restarting transaction')", "user": {"login": "wencan", "id": 1072917, "node_id": "MDQ6VXNlcjEwNzI5MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1072917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wencan", "html_url": "https://github.com/wencan", "followers_url": "https://api.github.com/users/wencan/followers", "following_url": "https://api.github.com/users/wencan/following{/other_user}", "gists_url": "https://api.github.com/users/wencan/gists{/gist_id}", "starred_url": "https://api.github.com/users/wencan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wencan/subscriptions", "organizations_url": "https://api.github.com/users/wencan/orgs", "repos_url": "https://api.github.com/users/wencan/repos", "events_url": "https://api.github.com/users/wencan/events{/privacy}", "received_events_url": "https://api.github.com/users/wencan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-04-06T09:10:40Z", "updated_at": "2018-08-18T08:27:02Z", "closed_at": "2017-04-17T09:58:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "source code:\r\n\r\n    import asyncio\r\n    from aiomysql import create_pool\r\n\r\n    loop = asyncio.get_event_loop()\r\n\r\n    async def go():\r\n        async with create_pool(host='localhost', port=3306,\r\n                               user='root', password='123456',\r\n                               db='test', autocommit=True, loop=loop) as pool:\r\n            async with pool.get() as conn:\r\n                for i in range(1000):\r\n                    async with conn.cursor() as cur:\r\n                        await cur.execute(\"UPDATE number SET idnumber = idnumber - 1 WHERE name = 'test';\")\r\n                        await cur.fetchone()\r\n\r\n    loop.run_until_complete(go())\r\n\r\ntraceback:  \r\n\r\n    Traceback (most recent call last):\r\n      File \"testdb.py\", line 24, in <module>\r\n        loop.run_until_complete(go())\r\n      File \"/usr/local/lib/python3.6/asyncio/base_events.py\", line 466, in run_until_complete\r\n        return future.result()\r\n      File \"testdb.py\", line 20, in go\r\n        await cur.execute(\"UPDATE number SET idnumber = idnumber - 1 WHERE name = 'test';\")\r\n      File \"/usr/local/lib/python3.6/site-packages/aiomysql/cursors.py\", line 239, in execute\r\n        yield from self._query(query)\r\n      File \"/usr/local/lib/python3.6/site-packages/aiomysql/cursors.py\", line 460, in _query\r\n        yield from conn.query(q)\r\n      File \"/usr/local/lib/python3.6/site-packages/aiomysql/connection.py\", line 398, in query\r\n        yield from self._read_query_result(unbuffered=unbuffered)\r\n      File \"/usr/local/lib/python3.6/site-packages/aiomysql/connection.py\", line 582, in _read_query_result\r\n        yield from result.read()\r\n      File \"/usr/local/lib/python3.6/site-packages/aiomysql/connection.py\", line 835, in read\r\n        first_packet = yield from self.connection._read_packet()\r\n      File \"/usr/local/lib/python3.6/site-packages/aiomysql/connection.py\", line 552, in _read_packet\r\n        packet.check_error()\r\n      File \"/usr/local/lib/python3.6/site-packages/pymysql/connections.py\", line 393, in check_error\r\n        err.raise_mysql_exception(self._data)\r\n      File \"/usr/local/lib/python3.6/site-packages/pymysql/err.py\", line 107, in raise_mysql_exception\r\n        raise errorclass(errno, errval)\r\n    pymysql.err.InternalError: (1213, 'Deadlock found when trying to get lock; try restarting transaction')\r\n\r\n\r\nTriggering conditions:\r\nThe number of concurrent processes is 4\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/159", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/159/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/159/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/159", "id": 217211033, "node_id": "MDU6SXNzdWUyMTcyMTEwMzM=", "number": 159, "title": "how to use aiomysql with tornado?", "user": {"login": "pylixm", "id": 15826317, "node_id": "MDQ6VXNlcjE1ODI2MzE3", "avatar_url": "https://avatars0.githubusercontent.com/u/15826317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pylixm", "html_url": "https://github.com/pylixm", "followers_url": "https://api.github.com/users/pylixm/followers", "following_url": "https://api.github.com/users/pylixm/following{/other_user}", "gists_url": "https://api.github.com/users/pylixm/gists{/gist_id}", "starred_url": "https://api.github.com/users/pylixm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pylixm/subscriptions", "organizations_url": "https://api.github.com/users/pylixm/orgs", "repos_url": "https://api.github.com/users/pylixm/repos", "events_url": "https://api.github.com/users/pylixm/events{/privacy}", "received_events_url": "https://api.github.com/users/pylixm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-27T11:06:59Z", "updated_at": "2017-03-27T20:14:28Z", "closed_at": "2017-03-27T20:14:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thank you for sharing.\r\nI found all the documentation and did not find the associated use with tornado. How is it used in conjunction with tornado?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/158", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/158/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/158/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/158", "id": 215353248, "node_id": "MDU6SXNzdWUyMTUzNTMyNDg=", "number": 158, "title": "aiomysql enabled cache?", "user": {"login": "wencan", "id": 1072917, "node_id": "MDQ6VXNlcjEwNzI5MTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1072917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wencan", "html_url": "https://github.com/wencan", "followers_url": "https://api.github.com/users/wencan/followers", "following_url": "https://api.github.com/users/wencan/following{/other_user}", "gists_url": "https://api.github.com/users/wencan/gists{/gist_id}", "starred_url": "https://api.github.com/users/wencan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wencan/subscriptions", "organizations_url": "https://api.github.com/users/wencan/orgs", "repos_url": "https://api.github.com/users/wencan/repos", "events_url": "https://api.github.com/users/wencan/events{/privacy}", "received_events_url": "https://api.github.com/users/wencan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-20T08:23:41Z", "updated_at": "2017-03-27T20:14:43Z", "closed_at": "2017-03-27T20:14:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "aiomysql enabled cache?\r\n\r\nOS: debian 8.7\r\npython: 3.5.3/3.6.0\r\naiohttp: 1.3.3\r\naiomysql: 0.0.9\r\n\r\ncode:\r\n\r\n    async def query(engine, _id):\r\n        async with engine.acquire() as conn:\r\n            async for row in conn.execute('SELECT title FROM tablename WHERE _id = \"%s\"' % _id):\r\n                print(row)\r\n\r\n\r\n    async def go(loop=None):\r\n        async with create_engine(user='***', db='***', host='***', password='***', echo=True, loop=loop) as engine:\r\n            await query(engine, 'id')\r\n\r\n            await asyncio.sleep(10)\r\n            await query(engine, 'id')\r\n\r\n\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(go())\r\n\r\n\r\nI modified the data in sleep\r\nHowever, the old value is still returned until the program restarts", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/150", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/150/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/150/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/150", "id": 209395499, "node_id": "MDU6SXNzdWUyMDkzOTU0OTk=", "number": 150, "title": "Very slow selection", "user": {"login": "unreg", "id": 3000867, "node_id": "MDQ6VXNlcjMwMDA4Njc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3000867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unreg", "html_url": "https://github.com/unreg", "followers_url": "https://api.github.com/users/unreg/followers", "following_url": "https://api.github.com/users/unreg/following{/other_user}", "gists_url": "https://api.github.com/users/unreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/unreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unreg/subscriptions", "organizations_url": "https://api.github.com/users/unreg/orgs", "repos_url": "https://api.github.com/users/unreg/repos", "events_url": "https://api.github.com/users/unreg/events{/privacy}", "received_events_url": "https://api.github.com/users/unreg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-22T09:22:50Z", "updated_at": "2018-02-20T02:51:10Z", "closed_at": "2018-02-20T02:51:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI have simple select ~2.5KK rows ```SELECT column_1, column_2 FROM table WHERE\r\n        created > '2016-01-05 23:59:59' AND created < '2016-02-07 00:00:00';```\r\n\r\nBenchmarks:\r\n- mysql - 2 sec\r\n- mysqlclient (fork MySQLdb) - 3.5 sec\r\n- aiomysql - 40 sec.\r\n\r\n\r\n\r\nHow to aiomysql speed up? Possible change mysql-connector to mysqlclient?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/149", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/149/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/149/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/149", "id": 207517718, "node_id": "MDU6SXNzdWUyMDc1MTc3MTg=", "number": 149, "title": "Fails and hangs with ProactorEventLoop", "user": {"login": "AndreLouisCaron", "id": 135974, "node_id": "MDQ6VXNlcjEzNTk3NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/135974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreLouisCaron", "html_url": "https://github.com/AndreLouisCaron", "followers_url": "https://api.github.com/users/AndreLouisCaron/followers", "following_url": "https://api.github.com/users/AndreLouisCaron/following{/other_user}", "gists_url": "https://api.github.com/users/AndreLouisCaron/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreLouisCaron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreLouisCaron/subscriptions", "organizations_url": "https://api.github.com/users/AndreLouisCaron/orgs", "repos_url": "https://api.github.com/users/AndreLouisCaron/repos", "events_url": "https://api.github.com/users/AndreLouisCaron/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreLouisCaron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-02-14T13:39:23Z", "updated_at": "2019-02-24T21:10:12Z", "closed_at": "2018-02-20T02:50:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there!\r\n\r\nI hit an issue when trying to use `aiomysql` with the `ProactorEventLoop` on Windows.  This is pretty much a show stopper for me given the limitations of the (default) `SelectorEventLoop` on Windows (bad performance, no pipes, no subprocesses, 512 socket limit).\r\n\r\nI'm trying out the library with this example slightly adapted from the one in the documentation:\r\n\r\n```python\r\nimport asyncio\r\nimport aiomysql\r\nimport sys\r\n\r\nasync def test_example(loop=None):\r\n    loop = loop or asyncio.get_event_loop()\r\n\r\n    conn = await aiomysql.connect(host='192.168.99.100', port=3306,\r\n                                       user='root', password='ch4t',\r\n                                       db='mysql', loop=loop)\r\n    cursor = await conn.cursor()\r\n    await cursor.execute(\"SELECT Host, User FROM user\")\r\n    r = await cursor.fetchall()\r\n    await cursor.close()\r\n    conn.close()\r\n    print('results:', r)\r\n\r\nif __name__ == '__main__':\r\n    #if sys.platform == 'win32':\r\n    #    asyncio.set_event_loop(asyncio.ProactorEventLoop())\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(test_example(loop=loop))\r\n```\r\n\r\nHere is the output when using the default event loop:\r\n```\r\n$ python test-mysql.py\r\nresults: (('%', 'Test'), ('%', 'root'), ('localhost', 'Test'), ('localhost', 'root'))\r\n```\r\n\r\nHere is the output when uncommenting the two lines that select the `ProactorEventLoop`:\r\n```\r\n$ python test-mysql.py\r\nException in callback _ProactorReadPipeTransport._loop_reading(<_OverlappedF...op_reading()]>)\r\nhandle: <Handle _ProactorReadPipeTransport._loop_reading(<_OverlappedF...op_reading()]>)>\r\nTraceback (most recent call last):\r\n  File \"F:\\software\\python\\3.5.2-x64\\Lib\\asyncio\\events.py\", line 125, in _run\r\n    self._callback(*self._args)\r\n  File \"F:\\software\\python\\3.5.2-x64\\Lib\\asyncio\\proactor_events.py\", line 183, in _loop_reading\r\n    data = fut.result()  # deliver data later in \"finally\" clause\r\n  File \"F:\\software\\python\\3.5.2-x64\\Lib\\asyncio\\futures.py\", line 268, in result\r\n    raise InvalidStateError('Result is not ready.')\r\nasyncio.futures.InvalidStateError: Result is not ready.\r\nException in callback _ProactorReadPipeTransport._loop_reading(<_OverlappedF...password\\x00\">)\r\nhandle: <Handle _ProactorReadPipeTransport._loop_reading(<_OverlappedF...password\\x00\">)>\r\nTraceback (most recent call last):\r\n  File \"F:\\software\\python\\3.5.2-x64\\Lib\\asyncio\\events.py\", line 125, in _run\r\n    self._callback(*self._args)\r\n  File \"F:\\software\\python\\3.5.2-x64\\Lib\\asyncio\\proactor_events.py\", line 181, in _loop_reading\r\n    self._closing)\r\nAssertionError\r\n```\r\n\r\nIn addition to the unexpected output, the Python process hangs, does not respond to CTRL-C and I need to explicitly terminate it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/144", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/144/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/144/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/144", "id": 203334278, "node_id": "MDU6SXNzdWUyMDMzMzQyNzg=", "number": 144, "title": "Any way to specify transaction isolation?", "user": {"login": "carn1x", "id": 783281, "node_id": "MDQ6VXNlcjc4MzI4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/783281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carn1x", "html_url": "https://github.com/carn1x", "followers_url": "https://api.github.com/users/carn1x/followers", "following_url": "https://api.github.com/users/carn1x/following{/other_user}", "gists_url": "https://api.github.com/users/carn1x/gists{/gist_id}", "starred_url": "https://api.github.com/users/carn1x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carn1x/subscriptions", "organizations_url": "https://api.github.com/users/carn1x/orgs", "repos_url": "https://api.github.com/users/carn1x/repos", "events_url": "https://api.github.com/users/carn1x/events{/privacy}", "received_events_url": "https://api.github.com/users/carn1x/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-26T10:13:27Z", "updated_at": "2019-11-07T09:08:55Z", "closed_at": "2017-04-17T10:24:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to connect with a non-standard isolation level `READ UNCOMMITTED` (https://dev.mysql.com/doc/refman/5.7/en/innodb-transaction-isolation-levels.html). Is it possible to specify this in the connection parameters?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/132", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/132/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/132/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/132", "id": 195793825, "node_id": "MDU6SXNzdWUxOTU3OTM4MjU=", "number": 132, "title": "Pool auto reconnect ", "user": {"login": "offline", "id": 42720, "node_id": "MDQ6VXNlcjQyNzIw", "avatar_url": "https://avatars2.githubusercontent.com/u/42720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/offline", "html_url": "https://github.com/offline", "followers_url": "https://api.github.com/users/offline/followers", "following_url": "https://api.github.com/users/offline/following{/other_user}", "gists_url": "https://api.github.com/users/offline/gists{/gist_id}", "starred_url": "https://api.github.com/users/offline/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/offline/subscriptions", "organizations_url": "https://api.github.com/users/offline/orgs", "repos_url": "https://api.github.com/users/offline/repos", "events_url": "https://api.github.com/users/offline/events{/privacy}", "received_events_url": "https://api.github.com/users/offline/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-12-15T12:30:02Z", "updated_at": "2018-03-22T22:12:05Z", "closed_at": "2018-02-20T02:51:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can we replace the current connection in pool with a new one on error \"Lost connection to MySQL server during query ([Errno 104] Connection reset by peer)\"?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/121", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/121/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/121/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/121", "id": 188829472, "node_id": "MDU6SXNzdWUxODg4Mjk0NzI=", "number": 121, "title": "Connections from Pool Keeps Getting Old Data from Database", "user": {"login": "jleoirab", "id": 6818089, "node_id": "MDQ6VXNlcjY4MTgwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/6818089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleoirab", "html_url": "https://github.com/jleoirab", "followers_url": "https://api.github.com/users/jleoirab/followers", "following_url": "https://api.github.com/users/jleoirab/following{/other_user}", "gists_url": "https://api.github.com/users/jleoirab/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleoirab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleoirab/subscriptions", "organizations_url": "https://api.github.com/users/jleoirab/orgs", "repos_url": "https://api.github.com/users/jleoirab/repos", "events_url": "https://api.github.com/users/jleoirab/events{/privacy}", "received_events_url": "https://api.github.com/users/jleoirab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-11T19:13:52Z", "updated_at": "2016-11-11T20:24:01Z", "closed_at": "2016-11-11T20:24:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an API that executes code similar to this:\r\n```\r\nmysql = await create_pool(host='HOST', port=PORT, user='USER', password='PWORD', db='DB', loop=asyncio.get_event_loop())\r\nasync with mysql.acquire() as conn:\r\n        async with conn.cursor() as cur:\r\n            query_string = \"SELECT * FROM table;\"\r\n            await cur.execute(query_string)\r\n            rows = await cur.fetchall()\r\n```\r\n\r\nThis works well to get the required data from the db the first time. However, on making the same request, over and over again even after changing the data in the database, I noticed that the results obtained from the piece of code is different from what is in the DB. What was returned was actually the result from before making changes to the db outside of the API.\r\n\r\nPython version = 3.5.1\r\nMySQL version = 5.6\r\nEnvironment = Fedora 24\r\n\r\nOne thing I noticed is that when I explicitly called `conn.close()` after executing the query, it worked correctly. \r\n\r\nI am assuming this shouldn't be how to use `conn.close()` in this case?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/117", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/117/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/117/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/117", "id": 182711778, "node_id": "MDU6SXNzdWUxODI3MTE3Nzg=", "number": 117, "title": "use sqlalchemy save failed", "user": {"login": "larry-dev", "id": 18585750, "node_id": "MDQ6VXNlcjE4NTg1NzUw", "avatar_url": "https://avatars3.githubusercontent.com/u/18585750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larry-dev", "html_url": "https://github.com/larry-dev", "followers_url": "https://api.github.com/users/larry-dev/followers", "following_url": "https://api.github.com/users/larry-dev/following{/other_user}", "gists_url": "https://api.github.com/users/larry-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/larry-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larry-dev/subscriptions", "organizations_url": "https://api.github.com/users/larry-dev/orgs", "repos_url": "https://api.github.com/users/larry-dev/repos", "events_url": "https://api.github.com/users/larry-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/larry-dev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-10-13T07:08:28Z", "updated_at": "2017-04-17T10:30:06Z", "closed_at": "2017-04-17T10:30:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://cloud.githubusercontent.com/assets/18585750/19339571/c577c28a-9156-11e6-802c-f3be158636af.png)\n\nbut mysql>user table isn't data\n\n![image](https://cloud.githubusercontent.com/assets/18585750/19339596/e1b87a70-9156-11e6-8424-d13c6d6bc066.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/109", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/109/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/109/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/109", "id": 177746610, "node_id": "MDU6SXNzdWUxNzc3NDY2MTA=", "number": 109, "title": "Non-recurrent exception: AssertionError: yield from wasn't used with future", "user": {"login": "SilverIceStas", "id": 17984973, "node_id": "MDQ6VXNlcjE3OTg0OTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/17984973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SilverIceStas", "html_url": "https://github.com/SilverIceStas", "followers_url": "https://api.github.com/users/SilverIceStas/followers", "following_url": "https://api.github.com/users/SilverIceStas/following{/other_user}", "gists_url": "https://api.github.com/users/SilverIceStas/gists{/gist_id}", "starred_url": "https://api.github.com/users/SilverIceStas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SilverIceStas/subscriptions", "organizations_url": "https://api.github.com/users/SilverIceStas/orgs", "repos_url": "https://api.github.com/users/SilverIceStas/repos", "events_url": "https://api.github.com/users/SilverIceStas/events{/privacy}", "received_events_url": "https://api.github.com/users/SilverIceStas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-19T10:06:06Z", "updated_at": "2016-09-19T17:59:23Z", "closed_at": "2016-09-19T17:07:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes I catch an unexpected and not very obvious exception:\n\nTraceback (most recent call last):\n\n>   File \"/home/si/xxxxxx/middleware/db.py\", line 41, in execute\n>     tr = yield from conn.begin()\n>   File \"/venv/lib/python3.5/site-packages/aiomysql/utils.py\", line 61, in **iter**\n>     resp = yield from self._coro\n>   File \"/venv/lib/python3.5/site-packages/aiomysql/sa/connection.py\", line 166, in _begin\n>     yield from self._begin_impl()\n>   File \"/venv/lib/python3.5/site-packages/aiomysql/sa/connection.py\", line 175, in _begin_impl\n>     yield from cur.execute('BEGIN')\n>   File \"/venv/lib/python3.5/site-packages/aiomysql/cursors.py\", line 239, in execute\n>     yield from self._query(query)\n>   File \"/venv/lib/python3.5/site-packages/aiomysql/cursors.py\", line 460, in _query\n>     yield from conn.query(q)\n>   File \"/venv/lib/python3.5/site-packages/aiomysql/connection.py\", line 398, in query\n>     yield from self._read_query_result(unbuffered=unbuffered)\n>   File \"/venv/lib/python3.5/site-packages/aiomysql/connection.py\", line 582, in _read_query_result\n>     yield from result.read()\n>   File \"/venv/lib/python3.5/site-packages/aiomysql/connection.py\", line 835, in read\n>     first_packet = yield from self.connection._read_packet()\n>   File \"/venv/lib/python3.5/site-packages/aiomysql/connection.py\", line 520, in _read_packet\n>     packet_header = yield from self._read_bytes(4)\n>   File \"/venv/lib/python3.5/site-packages/aiomysql/connection.py\", line 558, in _read_bytes\n>     data = yield from self._reader.readexactly(num_bytes)\n>   File \"/usr/local/lib/python3.5/asyncio/streams.py\", line 670, in readexactly\n>     block = yield from self.read(n)\n>   File \"/usr/local/lib/python3.5/asyncio/streams.py\", line 627, in read\n>     yield from self._wait_for_data('read')\n>   File \"/usr/local/lib/python3.5/asyncio/streams.py\", line 457, in _wait_for_data\n>     yield from self._waiter\n>   File \"/usr/local/lib/python3.5/asyncio/futures.py\", line 362, in __iter__\n>     assert self.done(), \"yield from wasn't used with future\"\n> AssertionError: yield from wasn't used with futur\n\n\"execute\" is standard function, witch used in the project and, in most cases, used successfully:\n\n```\n37:    def execute(self, query):\n38:        res = None\n39:        try:\n40:            with (yield from self._engine) as conn:\n41:                tr = yield from conn.begin()\n42:                try:\n43:                    res = yield from conn.execute(query)\n44:                    yield from tr.commit()\n45:                except (SQLAlchemyError, MySQLError):\n46:                    yield from tr.rollback()\n47:                finally:\n48:                    yield from tr.close()\n49:        except (SQLAlchemyError, MySQLError) as e:\n50:            print(e)\n51:        return res\n```\n\nMysql global_log for this moment:\n\n> 160919  9:29:06      36 Connect   test@localhost on test\n>          36 Query SET AUTOCOMMIT = 0\n>          36 Query BEGIN\n>          37 Query SELECT company_category_user.user FROM company_category_user WHERE *****\n>          36 Query COMMIT\n>          36 Query BEGIN\n>          37 Query SELECT DISTINCT vehicle_car.id FROM vehicle_car_cache_category INNER JOIN vehicle_car on ****\\* WHERE *****\n>          36 Query COMMIT\n>          36 Query BEGIN\n>          37 Query SELECT DISTINCT vehicle_car.id FROM vehicle_car WHERE *****\n>          36 Query COMMIT\n>          36 Query BEGIN\n> 160919  9:29:43      37 Connect   test@localhost on test\n>          37 Query SET AUTOCOMMIT = 0\n>          37 Query BEGIN\n\nThe first three requests are made using the same \"execute\" function.\nmysql-error log have no record.\n\nAn additional, that we crash in conn.begin() the code has time to activate transaction (catch the exception-in-exception - aiomysql.sa.exc.InvalidRequestError: Cannot release a connection with not finished transaction)\n\nTech summary:\nSystem 1:\n   Python 3.5.2 \n   aiomysql==0.0.9\n   PyMySQL==0.7.9\n   mysqld  Ver 5.5.50-0ubuntu0.14.04.1-log for debian-linux-gnu on x86_64 ((Ubuntu))\n   Linux vagrant-ubuntu-trusty-64 3.13.0-87-generic #133-Ubuntu SMP Tue May 24 18:32:09 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n\nSystem 2:\n   Python 3.5.1\n   aiomysql==0.0.7\n   PyMySQL==0.6.7\n   mysqld  Ver 5.5.49-0ubuntu0.14.04.1 for debian-linux-gnu on x86_64 ((Ubuntu))\n   Linux ubuntu-1gb-nyc3-01 3.13.0-79-generic #123-Ubuntu SMP Fri Feb 19 14:27:58 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n\nWhat additional information I can provide to you for help?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/108", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/108/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/108/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/108", "id": 176704293, "node_id": "MDU6SXNzdWUxNzY3MDQyOTM=", "number": 108, "title": "SQLAlchemy: Engine object has no attribute _run_visitor", "user": {"login": "malekhr", "id": 16504541, "node_id": "MDQ6VXNlcjE2NTA0NTQx", "avatar_url": "https://avatars3.githubusercontent.com/u/16504541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malekhr", "html_url": "https://github.com/malekhr", "followers_url": "https://api.github.com/users/malekhr/followers", "following_url": "https://api.github.com/users/malekhr/following{/other_user}", "gists_url": "https://api.github.com/users/malekhr/gists{/gist_id}", "starred_url": "https://api.github.com/users/malekhr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malekhr/subscriptions", "organizations_url": "https://api.github.com/users/malekhr/orgs", "repos_url": "https://api.github.com/users/malekhr/repos", "events_url": "https://api.github.com/users/malekhr/events{/privacy}", "received_events_url": "https://api.github.com/users/malekhr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-09-13T17:42:05Z", "updated_at": "2018-01-21T02:18:47Z", "closed_at": "2016-09-13T18:19:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code:\n\n```\n@classmethod\n@asyncio.coroutine\ndef connect(cls):\n    cls.engine = yield from create_engine(host=config.MYSQL_HOST,\n                                          port=config.MYSQL_PORT,\n                                          user=config.MYSQL_USER,\n                                          password=config.MYSQL_PASSWORD,\n                                          db=config.MYSQL_DATABASE)\n\n    yield from cls.create_tables()\n\n@classmethod\n@asyncio.coroutine\ndef create_tables(cls):\n    cls.metadata = sa.MetaData()\n\n    cls.friends = sa.Table('friends', cls.metadata,\n                           sa.Column('user_id', sa.Integer),\n                           sa.Column('friend_id', sa.Integer))\n\n    cls.metadata.create_all(cls.engine)\n```\n\n`cls.metadata.create_all()` says:\n\n```\nAttributeError: 'Engine' object has no attribute '_run_visitor'\n```\n\nHow can this be fixed?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/105", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/105/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/105/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/105", "id": 175161393, "node_id": "MDU6SXNzdWUxNzUxNjEzOTM=", "number": 105, "title": "'Connection' object has no attribute 'password'", "user": {"login": "BurnellLiu", "id": 8316364, "node_id": "MDQ6VXNlcjgzMTYzNjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/8316364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BurnellLiu", "html_url": "https://github.com/BurnellLiu", "followers_url": "https://api.github.com/users/BurnellLiu/followers", "following_url": "https://api.github.com/users/BurnellLiu/following{/other_user}", "gists_url": "https://api.github.com/users/BurnellLiu/gists{/gist_id}", "starred_url": "https://api.github.com/users/BurnellLiu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BurnellLiu/subscriptions", "organizations_url": "https://api.github.com/users/BurnellLiu/orgs", "repos_url": "https://api.github.com/users/BurnellLiu/repos", "events_url": "https://api.github.com/users/BurnellLiu/events{/privacy}", "received_events_url": "https://api.github.com/users/BurnellLiu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-06T05:10:22Z", "updated_at": "2016-09-08T20:04:32Z", "closed_at": "2016-09-08T20:04:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "aiomysql version: 0.0.8\nos version: win10\n\nWhen i use this functinon:\n`__pool = await aiomysql.create_pool(\n        host=kw.get('host', 'localhost'),\n        port=kw.get('port', 3306),\n        user=kw['user'],\n        password=kw['password'],\n        db=kw['db'],\n        charset=kw.get('charset', 'utf8'),\n        autocommit=kw.get('autocommit', True),\n        maxsize=kw.get('maxsize', 10),\n        minsize=kw.get('minsize', 1),\n        loop=loop\n    )`\n\nI found a error:\n File \"C:\\Program Files (x86)\\Python35-32\\lib\\site-packages\\aiomysql\\connection.py\", line 699, in _request_authentication\n    **data = _scramble_323(self.password.encode('latin1'),\nAttributeError: 'Connection' object has no attribute 'password'**\n\nI think it shoud be:\n**data = _scramble_323(self._password.encode('latin1'),**\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/102", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/102/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/102/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/102", "id": 174501318, "node_id": "MDU6SXNzdWUxNzQ1MDEzMTg=", "number": 102, "title": "Connecting via URL instead of separate connection values", "user": {"login": "malekhr", "id": 16504541, "node_id": "MDQ6VXNlcjE2NTA0NTQx", "avatar_url": "https://avatars3.githubusercontent.com/u/16504541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malekhr", "html_url": "https://github.com/malekhr", "followers_url": "https://api.github.com/users/malekhr/followers", "following_url": "https://api.github.com/users/malekhr/following{/other_user}", "gists_url": "https://api.github.com/users/malekhr/gists{/gist_id}", "starred_url": "https://api.github.com/users/malekhr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malekhr/subscriptions", "organizations_url": "https://api.github.com/users/malekhr/orgs", "repos_url": "https://api.github.com/users/malekhr/repos", "events_url": "https://api.github.com/users/malekhr/events{/privacy}", "received_events_url": "https://api.github.com/users/malekhr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-01T11:35:57Z", "updated_at": "2016-09-02T22:38:05Z", "closed_at": "2016-09-02T22:38:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could we connect by passing the connection details via an URL instead of having separate host, port, etc. variables? [Similar to what aioamqp has with its from_url function](https://github.com/Polyconseil/aioamqp/blob/b1d11024c658e03722bee57f97a9ced8e3e6b1bc/aioamqp/__init__.py#L76).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/100", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/100/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/100/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/100", "id": 174196275, "node_id": "MDU6SXNzdWUxNzQxOTYyNzU=", "number": 100, "title": "JSON data_type that contains unicode characters failure.", "user": {"login": "trivigy", "id": 3146062, "node_id": "MDQ6VXNlcjMxNDYwNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3146062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trivigy", "html_url": "https://github.com/trivigy", "followers_url": "https://api.github.com/users/trivigy/followers", "following_url": "https://api.github.com/users/trivigy/following{/other_user}", "gists_url": "https://api.github.com/users/trivigy/gists{/gist_id}", "starred_url": "https://api.github.com/users/trivigy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trivigy/subscriptions", "organizations_url": "https://api.github.com/users/trivigy/orgs", "repos_url": "https://api.github.com/users/trivigy/repos", "events_url": "https://api.github.com/users/trivigy/events{/privacy}", "received_events_url": "https://api.github.com/users/trivigy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-31T06:41:02Z", "updated_at": "2016-09-11T10:17:47Z", "closed_at": "2016-09-11T10:17:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I put the traceback below just for your reference but i'll explain the bug. It's pretty simple. in connection.py line 960 there is a check that ensures that field_type is in TEXT_TYPES which will then apply the right encoding on it going forward. However, if you are returning a JSON type that has unicode strings inside of it that if statement will miss that and during parsing will fail trying to decode a JSON that contains unicode characters with an ascii encoding.\n\n```\nTraceback (most recent call last):\n  File \"/home/trivigy/Google/Projects/findmine/database/mysql/handle.py\", line 46, in fetch\n    await cur.execute(query, params)\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/cursors.py\", line 239, in execute\n    yield from self._query(query)\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/cursors.py\", line 460, in _query\n    yield from conn.query(q)\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/connection.py\", line 394, in query\n    yield from self._read_query_result(unbuffered=unbuffered)\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/connection.py\", line 578, in _read_query_result\n    yield from result.read()\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/connection.py\", line 838, in read\n    yield from self._read_result_packet(first_packet)\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/connection.py\", line 901, in _read_result_packet\n    yield from self._read_rowdata_packet()\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/connection.py\", line 944, in _read_rowdata_packet\n    rows.append(self._read_row_from_packet(packet))\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/connection.py\", line 960, in _read_row_from_packet\n    data = data.decode(encoding)\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 26: ordinal not in range(128)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/98", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/98/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/98/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/98", "id": 173062213, "node_id": "MDU6SXNzdWUxNzMwNjIyMTM=", "number": 98, "title": "Update async generators protocol to support Python 3.5.2/3.6+", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-24T21:26:54Z", "updated_at": "2016-08-25T03:01:40Z", "closed_at": "2016-08-25T03:01:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For context see https://github.com/KeepSafe/aiohttp/issues/1082\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/97", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/97/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/97/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/97", "id": 172887209, "node_id": "MDU6SXNzdWUxNzI4ODcyMDk=", "number": 97, "title": "Exception with pool", "user": {"login": "Reonaydo", "id": 3231571, "node_id": "MDQ6VXNlcjMyMzE1NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3231571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Reonaydo", "html_url": "https://github.com/Reonaydo", "followers_url": "https://api.github.com/users/Reonaydo/followers", "following_url": "https://api.github.com/users/Reonaydo/following{/other_user}", "gists_url": "https://api.github.com/users/Reonaydo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Reonaydo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Reonaydo/subscriptions", "organizations_url": "https://api.github.com/users/Reonaydo/orgs", "repos_url": "https://api.github.com/users/Reonaydo/repos", "events_url": "https://api.github.com/users/Reonaydo/events{/privacy}", "received_events_url": "https://api.github.com/users/Reonaydo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-24T07:52:38Z", "updated_at": "2016-08-30T10:17:05Z", "closed_at": "2016-08-30T04:10:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello! \nI used connection pool to reuse connections. All was ok.\nBut after some time(about 24 hours) I get exception \"index out of range\" on each second request.\nAlso rollback also throw exception.\nHere traceback:\n\n```\nAug 24 15:20:18 justinstalledpanel python[930]: Traceback (most recent call last):                                                                                                                                                       \nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain/app.py\", line 86, in create_domain                                                                                                                             \nAug 24 15:20:18 justinstalledpanel python[930]: if (yield from is_record_exists(name, conn)):                                                                                                                                            \nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain/app.py\", line 48, in is_record_exists                                                                                                                          \nAug 24 15:20:18 justinstalledpanel python[930]: yield from cur.execute(query, (name,))                                                                                                                                                   \nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/aiomysql/cursors.py\", line 238, in execute                                                                                    \nAug 24 15:20:18 justinstalledpanel python[930]: yield from self._query(query)                                                                                                                                                            \nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/aiomysql/cursors.py\", line 459, in _query                                                                                     \nAug 24 15:20:18 justinstalledpanel python[930]: yield from conn.query(q)                                                                                                                                                                 \nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/aiomysql/connection.py\", line 377, in query                                                                                   \nAug 24 15:20:18 justinstalledpanel python[930]: yield from self._read_query_result(unbuffered=unbuffered)                                                                                                                                \nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/aiomysql/connection.py\", line 518, in _read_query_result                                                                      \nAug 24 15:20:18 justinstalledpanel python[930]: yield from result.read()                                                                                                                                                                 \nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/aiomysql/connection.py\", line 736, in read\nAug 24 15:20:18 justinstalledpanel python[930]: yield from self._read_result_packet(first_packet)\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/aiomysql/connection.py\", line 806, in _read_result_packet\nAug 24 15:20:18 justinstalledpanel python[930]: yield from self._get_descriptions()\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/aiomysql/connection.py\", line 889, in _get_descriptions\nAug 24 15:20:18 justinstalledpanel python[930]: FieldDescriptorPacket)\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/aiomysql/connection.py\", line 499, in _read_packet\nAug 24 15:20:18 justinstalledpanel python[930]: packet = packet_type(buff, self._encoding)\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/pymysql/connections.py\", line 382, in __init__\nAug 24 15:20:18 justinstalledpanel python[930]: self.__parse_field_descriptor(encoding)\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/pymysql/connections.py\", line 390, in __parse_field_descriptor\nAug 24 15:20:18 justinstalledpanel python[930]: self.db = self.read_length_coded_string()\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/pymysql/connections.py\", line 331, in read_length_coded_string\nAug 24 15:20:18 justinstalledpanel python[930]: length = self.read_length_encoded_integer()\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/pymysql/connections.py\", line 312, in read_length_encoded_integer\nAug 24 15:20:18 justinstalledpanel python[930]: c = self.read_uint8()\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/pymysql/connections.py\", line 282, in read_uint8\nAug 24 15:20:18 justinstalledpanel python[930]: result = self._data[self._position]\nAug 24 15:20:18 justinstalledpanel python[930]: IndexError: index out of range\nAug 24 15:20:18 justinstalledpanel python[930]: During handling of the above exception, another exception occurred:\nAug 24 15:20:18 justinstalledpanel python[930]: Traceback (most recent call last):\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/aiohttp/server.py\", line 266, in start\nAug 24 15:20:18 justinstalledpanel python[930]: yield from self.handle_request(message, payload)\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/aiohttp/web.py\", line 90, in handle_request\nAug 24 15:20:18 justinstalledpanel python[930]: resp = yield from handler(request)\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain/app.py\", line 41, in middleware\nAug 24 15:20:18 justinstalledpanel python[930]: return (yield from handler(request))\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain/app.py\", line 96, in create_domain\nAug 24 15:20:18 justinstalledpanel python[930]: yield from conn.rollback()\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/aiomysql/connection.py\", line 327, in rollback\nAug 24 15:20:18 justinstalledpanel python[930]: yield from self._read_ok_packet()\nAug 24 15:20:18 justinstalledpanel python[930]: File \"/var/www/autodomain-venv/lib/python3.4/site-packages/aiomysql/connection.py\", line 298, in _read_ok_packet\nAug 24 15:20:18 justinstalledpanel python[930]: raise OperationalError(2014, \"Command Out of Sync\")\nAug 24 15:20:18 justinstalledpanel python[930]: pymysql.err.OperationalError: (2014, 'Command Out of Sync')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/96", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/96/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/96/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/96", "id": 171049450, "node_id": "MDU6SXNzdWUxNzEwNDk0NTA=", "number": 96, "title": "Wrong ArgumentError message", "user": {"login": "kserhii", "id": 5891952, "node_id": "MDQ6VXNlcjU4OTE5NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/5891952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kserhii", "html_url": "https://github.com/kserhii", "followers_url": "https://api.github.com/users/kserhii/followers", "following_url": "https://api.github.com/users/kserhii/following{/other_user}", "gists_url": "https://api.github.com/users/kserhii/gists{/gist_id}", "starred_url": "https://api.github.com/users/kserhii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kserhii/subscriptions", "organizations_url": "https://api.github.com/users/kserhii/orgs", "repos_url": "https://api.github.com/users/kserhii/repos", "events_url": "https://api.github.com/users/kserhii/events{/privacy}", "received_events_url": "https://api.github.com/users/kserhii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-14T09:03:05Z", "updated_at": "2016-08-14T09:25:27Z", "closed_at": "2016-08-14T09:25:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a copy-paste error message mistake into aiomysql/sa/connection.py:\n\n```\ndp = _distill_params(multiparams, params)\nif len(dp) > 1:\n    raise exc.ArgumentError(\"aiopg doesn't support executemany\")    # aiopg => aiomysql\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/95", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/95/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/95/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/95", "id": 170669750, "node_id": "MDU6SXNzdWUxNzA2Njk3NTA=", "number": 95, "title": "AttributeError: 'NoneType' object has no attribute 'affected_rows'", "user": {"login": "averrin", "id": 426007, "node_id": "MDQ6VXNlcjQyNjAwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/426007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/averrin", "html_url": "https://github.com/averrin", "followers_url": "https://api.github.com/users/averrin/followers", "following_url": "https://api.github.com/users/averrin/following{/other_user}", "gists_url": "https://api.github.com/users/averrin/gists{/gist_id}", "starred_url": "https://api.github.com/users/averrin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/averrin/subscriptions", "organizations_url": "https://api.github.com/users/averrin/orgs", "repos_url": "https://api.github.com/users/averrin/repos", "events_url": "https://api.github.com/users/averrin/events{/privacy}", "received_events_url": "https://api.github.com/users/averrin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-11T15:09:34Z", "updated_at": "2016-08-24T12:49:41Z", "closed_at": "2016-08-24T12:49:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "requirements:\n\n```\nPyMySQL<=0.6.7\naiomysql\n```\n\ncode:\n\n``` python\nasync def test(conn):\n    async with conn.cursor() as cur:\n        q = \"\"\"SELECT 1;\"\"\"\n        cur.execute(q)\n```\n\n```\nTraceback (most recent call last):\n  File \"main.py\", line 129, in test\n    cur.execute(q)\n  File \"/usr/local/lib/python3.5/site-packages/pymysql/cursors.py\", line 146, in execute\n    result = self._query(query)\n  File \"/usr/local/lib/python3.5/site-packages/pymysql/cursors.py\", line 297, in _query\n    self._do_get_result()\n  File \"/usr/local/lib/python3.5/site-packages/pymysql/cursors.py\", line 347, in _do_get_result\n    super(DictCursorMixin, self)._do_get_result()\n  File \"/usr/local/lib/python3.5/site-packages/pymysql/cursors.py\", line 306, in _do_get_result\n    self.rowcount = result.affected_rows\nAttributeError: 'NoneType' object has no attribute 'affected_rows'\n```\n\nbut it works with bare pymysql\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/94", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/94/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/94/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/94", "id": 170416275, "node_id": "MDU6SXNzdWUxNzA0MTYyNzU=", "number": 94, "title": "Allow pulling down MetaData via reflection", "user": {"login": "tkram01", "id": 17167349, "node_id": "MDQ6VXNlcjE3MTY3MzQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/17167349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkram01", "html_url": "https://github.com/tkram01", "followers_url": "https://api.github.com/users/tkram01/followers", "following_url": "https://api.github.com/users/tkram01/following{/other_user}", "gists_url": "https://api.github.com/users/tkram01/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkram01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkram01/subscriptions", "organizations_url": "https://api.github.com/users/tkram01/orgs", "repos_url": "https://api.github.com/users/tkram01/repos", "events_url": "https://api.github.com/users/tkram01/events{/privacy}", "received_events_url": "https://api.github.com/users/tkram01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-10T13:25:33Z", "updated_at": "2016-08-10T14:11:41Z", "closed_at": "2016-08-10T13:29:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to pull down Table data with the aiomysql.sa API? When I try either of the following I get an error.\n\n`meta = MetaData()`\n`yield from meta.reflect(bind=engine)`\n\nor \n\n`meta = MetaData()`\n`Table('test_table', meta, autoload=True, autoload_with=engine)`\n\nFile \"/anaconda/envs/asap/lib/python3.5/asyncio/base_events.py\", line 387, in run_until_complete\n    return future.result()\n  File \"/anaconda/envs/asap/lib/python3.5/asyncio/futures.py\", line 274, in result\n    raise self._exception\n  File \"/anaconda/envs/asap/lib/python3.5/asyncio/tasks.py\", line 239, in _step\n    result = coro.send(None)\n  File \"/Users/user/Documents/test/loader/loader_asyncio.py\", line 39, in get_vrts\n    yield from get_data(engine, vrt)\n  File \"/Users/user/Documents/test/loader/loader_asyncio.py\", line 53, in get_data\n    yield from _get_compound_data(engine, message, vrt_number)\n  File \"/Users/user/Documents/test/loader/loader_asyncio.py\", line 90, in _get_compound_data\n    yield from meta.reflect(bind=engine)\n  File \"/anaconda/envs/asap/lib/python3.5/site-packages/sqlalchemy/sql/schema.py\", line 3652, in reflect\n    with bind.connect() as conn:\nAttributeError: 'Engine' object has no attribute 'connect'\nException ignored in: <bound method Connection.__del__ of <aiomysql.connection.Connection object at 0x1039a8940>>\nTraceback (most recent call last):\n  File \"/anaconda/envs/asap/lib/python3.5/site-packages/aiomysql/connection.py\", line 694, in **del**\n  File \"/anaconda/envs/asap/lib/python3.5/site-packages/aiomysql/connection.py\", line 260, in close\n  File \"/anaconda/envs/asap/lib/python3.5/asyncio/selector_events.py\", line 573, in close\n  File \"/anaconda/envs/asap/lib/python3.5/asyncio/base_events.py\", line 497, in call_soon\n  File \"/anaconda/envs/asap/lib/python3.5/asyncio/base_events.py\", line 506, in _call_soon\n  File \"/anaconda/envs/asap/lib/python3.5/asyncio/base_events.py\", line 334, in _check_closed\nRuntimeError: Event loop is closed\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/93", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/93/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/93/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/93", "id": 169351237, "node_id": "MDU6SXNzdWUxNjkzNTEyMzc=", "number": 93, "title": "how to select specific column\uff1f", "user": {"login": "631068264", "id": 8144089, "node_id": "MDQ6VXNlcjgxNDQwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8144089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/631068264", "html_url": "https://github.com/631068264", "followers_url": "https://api.github.com/users/631068264/followers", "following_url": "https://api.github.com/users/631068264/following{/other_user}", "gists_url": "https://api.github.com/users/631068264/gists{/gist_id}", "starred_url": "https://api.github.com/users/631068264/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/631068264/subscriptions", "organizations_url": "https://api.github.com/users/631068264/orgs", "repos_url": "https://api.github.com/users/631068264/repos", "events_url": "https://api.github.com/users/631068264/events{/privacy}", "received_events_url": "https://api.github.com/users/631068264/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-04T11:20:36Z", "updated_at": "2016-08-05T09:42:08Z", "closed_at": "2016-08-05T02:33:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to select specific column\uff1f\n\n`android_push.select(columns=[android_push.c.uid, ])` is not work\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/92", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/92/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/92/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/92", "id": 169152812, "node_id": "MDU6SXNzdWUxNjkxNTI4MTI=", "number": 92, "title": "How to get the log for sql", "user": {"login": "631068264", "id": 8144089, "node_id": "MDQ6VXNlcjgxNDQwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8144089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/631068264", "html_url": "https://github.com/631068264", "followers_url": "https://api.github.com/users/631068264/followers", "following_url": "https://api.github.com/users/631068264/following{/other_user}", "gists_url": "https://api.github.com/users/631068264/gists{/gist_id}", "starred_url": "https://api.github.com/users/631068264/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/631068264/subscriptions", "organizations_url": "https://api.github.com/users/631068264/orgs", "repos_url": "https://api.github.com/users/631068264/repos", "events_url": "https://api.github.com/users/631068264/events{/privacy}", "received_events_url": "https://api.github.com/users/631068264/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-08-03T14:57:52Z", "updated_at": "2017-04-17T10:33:46Z", "closed_at": "2017-04-17T10:33:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to get the log for sql statement\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/91", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/91/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/91/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/91", "id": 168504647, "node_id": "MDU6SXNzdWUxNjg1MDQ2NDc=", "number": 91, "title": "How to use in construct", "user": {"login": "631068264", "id": 8144089, "node_id": "MDQ6VXNlcjgxNDQwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/8144089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/631068264", "html_url": "https://github.com/631068264", "followers_url": "https://api.github.com/users/631068264/followers", "following_url": "https://api.github.com/users/631068264/following{/other_user}", "gists_url": "https://api.github.com/users/631068264/gists{/gist_id}", "starred_url": "https://api.github.com/users/631068264/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/631068264/subscriptions", "organizations_url": "https://api.github.com/users/631068264/orgs", "repos_url": "https://api.github.com/users/631068264/repos", "events_url": "https://api.github.com/users/631068264/events{/privacy}", "received_events_url": "https://api.github.com/users/631068264/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-31T06:36:38Z", "updated_at": "2016-08-01T03:19:34Z", "closed_at": "2016-08-01T03:19:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nimport sqlalchemy as sa\n\nmetadata = sa.MetaData()\n\nandroid_push = sa.Table(\n    'android_push',\n    metadata,\n    sa.Column('uid', sa.Integer, primary_key=True),\n    sa.Column('reg_id', sa.CHAR(256)),\n)\n\nif __name__ == '__main__':\n    print(android_push.delete().where(android_push.c.uid == [1, 2, 3]))\n```\n\nThis is the result I want.\n`DELETE FROM android_push WHERE android_push.uid in (1,2,3)`\n\nBut the result is:\nDELETE FROM android_push WHERE android_push.uid = :uid_1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/90", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/90/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/90/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/90", "id": 166759487, "node_id": "MDU6SXNzdWUxNjY3NTk0ODc=", "number": 90, "title": "__version__ in __all__ issue", "user": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-21T08:00:05Z", "updated_at": "2016-07-23T14:50:44Z", "closed_at": "2016-07-23T14:50:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See KeepSafe/aiohttp#978\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/88", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/88/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/88/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/88", "id": 165287293, "node_id": "MDU6SXNzdWUxNjUyODcyOTM=", "number": 88, "title": "Query returns result from another query", "user": {"login": "ilex", "id": 576330, "node_id": "MDQ6VXNlcjU3NjMzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/576330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilex", "html_url": "https://github.com/ilex", "followers_url": "https://api.github.com/users/ilex/followers", "following_url": "https://api.github.com/users/ilex/following{/other_user}", "gists_url": "https://api.github.com/users/ilex/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilex/subscriptions", "organizations_url": "https://api.github.com/users/ilex/orgs", "repos_url": "https://api.github.com/users/ilex/repos", "events_url": "https://api.github.com/users/ilex/events{/privacy}", "received_events_url": "https://api.github.com/users/ilex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-07-13T10:23:04Z", "updated_at": "2016-08-25T20:09:00Z", "closed_at": "2016-08-25T20:09:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my problem. I use aiomysql in aiohttp handlers. Something like this:\n\n``` python\nasync def handler(request):\n    data = await get_data(request.app['db_pool'])\n\nasync def get_data(db_pool):\n    # prepare query q and params\n    async with db_pool.acquire() as conn:\n        async with conn.cursor() as cur:\n            await cur.execute(q, params)\n            rows = await cur.fetchall()\n    # do something with rows\n    # and return result\n```\n\nAnd some times rows are not the result for the given query q but the result from other query. There are no errors. It just silently returns wrong result. The only way i could determine that situation was that queries had different number of fields so there was an index out of bounds error in the log some times.  \n\nSo the question is - do i run it in a right way? Or should i use any locks somewhere? Or is it a bug in the library?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/86", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/86/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/86/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/86", "id": 161697220, "node_id": "MDU6SXNzdWUxNjE2OTcyMjA=", "number": 86, "title": "Inconsistant results after insert using sa", "user": {"login": "nealie", "id": 305922, "node_id": "MDQ6VXNlcjMwNTkyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/305922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nealie", "html_url": "https://github.com/nealie", "followers_url": "https://api.github.com/users/nealie/followers", "following_url": "https://api.github.com/users/nealie/following{/other_user}", "gists_url": "https://api.github.com/users/nealie/gists{/gist_id}", "starred_url": "https://api.github.com/users/nealie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nealie/subscriptions", "organizations_url": "https://api.github.com/users/nealie/orgs", "repos_url": "https://api.github.com/users/nealie/repos", "events_url": "https://api.github.com/users/nealie/events{/privacy}", "received_events_url": "https://api.github.com/users/nealie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-22T14:24:34Z", "updated_at": "2017-04-17T10:29:07Z", "closed_at": "2017-04-17T10:29:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using aiomysql.sa with MySQL 5.5.49 I find that when I insert columns into a database then subsequently query the it, the result I get can sometimes include the inserted value and sometimes not.\n\nIf I essentially disable the connection pool by setting the minsize and maxsize to 1 then all works as expected. This is however not any use for production.\n\nAttached is a simple test program and schema which should handily reproduce the problem:\n[test.py.txt](https://github.com/aio-libs/aiomysql/files/328073/test.py.txt)\n[test.sql.txt](https://github.com/aio-libs/aiomysql/files/328074/test.sql.txt)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/85", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/85/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/85/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/85", "id": 161084529, "node_id": "MDU6SXNzdWUxNjEwODQ1Mjk=", "number": 85, "title": "Connection of any kind Issues (1043 Bad Handshake)", "user": {"login": "trivigy", "id": 3146062, "node_id": "MDQ6VXNlcjMxNDYwNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/3146062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trivigy", "html_url": "https://github.com/trivigy", "followers_url": "https://api.github.com/users/trivigy/followers", "following_url": "https://api.github.com/users/trivigy/following{/other_user}", "gists_url": "https://api.github.com/users/trivigy/gists{/gist_id}", "starred_url": "https://api.github.com/users/trivigy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trivigy/subscriptions", "organizations_url": "https://api.github.com/users/trivigy/orgs", "repos_url": "https://api.github.com/users/trivigy/repos", "events_url": "https://api.github.com/users/trivigy/events{/privacy}", "received_events_url": "https://api.github.com/users/trivigy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-19T18:08:09Z", "updated_at": "2019-08-29T10:03:46Z", "closed_at": "2016-07-24T08:02:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to connect to the database and getting a really weird error. Tried doing this without aiomysql but rather directly with PyMySQL and the connection worked fine. Would greatly appreciate some help.\n\nEnvironment:\nMysql: 5.7.12\npython: 3.5.1+\nPyMySQL: 0.7.4\naiomysql: 0.0.7\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/connection.py\", line 447, in _connect\n    yield from self._request_authentication()\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/connection.py\", line 615, in _request_authentication\n    auth_packet = yield from self._read_packet()\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/connection.py\", line 500, in _read_packet\n    packet.check_error()\n  File \"/usr/local/lib/python3.5/dist-packages/pymysql/connections.py\", line 393, in check_error\n    err.raise_mysql_exception(self._data)\n  File \"/usr/local/lib/python3.5/dist-packages/pymysql/err.py\", line 120, in raise_mysql_exception\n    _check_mysql_exception(errinfo)\n  File \"/usr/local/lib/python3.5/dist-packages/pymysql/err.py\", line 115, in _check_mysql_exception\n    raise InternalError(errno, errorvalue)\npymysql.err.InternalError: (1043, 'Bad handshake')\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/code.py\", line 91, in runcode\n    exec(code, self.locals)\n  File \"<input>\", line 22, in <module>\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 373, in run_until_complete\n    return future.result()\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 274, in result\n    raise self._exception\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 240, in _step\n    result = coro.send(None)\n  File \"<input>\", line 11, in test_example\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/utils.py\", line 57, in __await__\n    resp = yield from self._coro\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/pool.py\", line 28, in _create_pool\n    yield from pool._fill_free_pool(False)\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/pool.py\", line 163, in _fill_free_pool\n    **self._conn_kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/utils.py\", line 52, in __iter__\n    resp = yield from self._coro\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/connection.py\", line 76, in _connect\n    yield from conn._connect()\n  File \"/usr/local/lib/python3.5/dist-packages/aiomysql/connection.py\", line 467, in _connect\n    self._host) from e\npymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on 'XXX.XXX.XXX.XXX'\")\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/83", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/83/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/83/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/83", "id": 159333503, "node_id": "MDU6SXNzdWUxNTkzMzM1MDM=", "number": 83, "title": "Use loop.create_future() instead direct instantiation", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-09T05:55:59Z", "updated_at": "2017-04-17T10:29:26Z", "closed_at": "2017-04-17T10:29:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Recent asyncio added new function `loop.create_future()` for `Future` object creation, so third party loops like `uvloop` can create own faster future implementations. We need to use this approach to benefit from speed ups.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/71", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/71/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/71/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/71", "id": 149138795, "node_id": "MDU6SXNzdWUxNDkxMzg3OTU=", "number": 71, "title": "Windows exception when using ProactorEventLoop", "user": {"login": "espositofulvio", "id": 11587761, "node_id": "MDQ6VXNlcjExNTg3NzYx", "avatar_url": "https://avatars1.githubusercontent.com/u/11587761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/espositofulvio", "html_url": "https://github.com/espositofulvio", "followers_url": "https://api.github.com/users/espositofulvio/followers", "following_url": "https://api.github.com/users/espositofulvio/following{/other_user}", "gists_url": "https://api.github.com/users/espositofulvio/gists{/gist_id}", "starred_url": "https://api.github.com/users/espositofulvio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/espositofulvio/subscriptions", "organizations_url": "https://api.github.com/users/espositofulvio/orgs", "repos_url": "https://api.github.com/users/espositofulvio/repos", "events_url": "https://api.github.com/users/espositofulvio/events{/privacy}", "received_events_url": "https://api.github.com/users/espositofulvio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-04-18T12:38:33Z", "updated_at": "2018-06-04T08:01:12Z", "closed_at": "2016-04-21T17:16:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Windows, using ProactorEventLoop raises an exception when trying to create a pool or a connection:\n\n``` python\nimport asyncio\nimport aiomysql\nimport sys\n\n\nasync def mysql_example( loop ):\n    async with aiomysql.create_pool(host='ensembldb.ensembl.org', port=3306, user='anonymous', password='', db='danio_rerio_vega_78_9', loop=loop) as pool:\n        async with pool.get() as conn:\n            async with conn.cursor() as cur:\n                await cur.execute(\"SELECT 42;\")\n                value = await cur.fetchone()\n                print(value)\n\n\n\ndef main():\n    loop = asyncio.get_event_loop()\n    if sys.platform == 'win32':\n        loop = asyncio.ProactorEventLoop()\n        asyncio.set_event_loop( loop )\n\n    loop.run_until_complete( mysql_example( loop ) )\n\nif __name__ == '__main__':\n    main()\n```\n\nThe db is a public accessible mysql server I found on the internet just for writing a quick test.\n\nThe TraceBack is:\n\nException in callback _ProactorReadPipeTransport._loop_reading(<_OverlappedF...op_reading()]>)\nhandle: <Handle _ProactorReadPipeTransport._loop_reading(<_OverlappedF...op_reading()]>)>\nTraceback (most recent call last):\n  File \"D:\\Programs\\Anaconda\\envs\\siope\\lib\\asyncio\\events.py\", line 125, in _run\n    self._callback(_self._args)\n  File \"D:\\Programs\\Anaconda\\envs\\siope\\lib\\asyncio\\proactor_events.py\", line 183, in _loop_reading\n    data = fut.result()  # deliver data later in \"finally\" clause\n  File \"D:\\Programs\\Anaconda\\envs\\siope\\lib\\asyncio\\futures.py\", line 268, in result\n    raise InvalidStateError('Result is not ready.')\nasyncio.futures.InvalidStateError: Result is not ready.\nException in callback _ProactorReadPipeTransport._loop_reading(<_OverlappedF...S&a;?is_\\x00'>)\nhandle: <Handle _ProactorReadPipeTransport._loop_reading(<_OverlappedF...S&a;?is*\\x00'>)>\nTraceback (most recent call last):\n  File \"D:\\Programs\\Anaconda\\envs\\siope\\lib\\asyncio\\events.py\", line 125, in _run\n    self._callback(*self._args)\n  File \"D:\\Programs\\Anaconda\\envs\\siope\\lib\\asyncio\\proactor_events.py\", line 181, in _loop_reading\n    self._closing)\nAssertionError\n\nI'll investigate myself in the near future but maybe someone else has a hunch why this is happening?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/67", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/67/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/67/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/67", "id": 137866962, "node_id": "MDU6SXNzdWUxMzc4NjY5NjI=", "number": 67, "title": "Reduce pool minsize to 1", "user": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aio-libs/aiomysql/milestones/1", "html_url": "https://github.com/aio-libs/aiomysql/milestone/1", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/milestones/1/labels", "id": 1805767, "node_id": "MDk6TWlsZXN0b25lMTgwNTc2Nw==", "number": 1, "title": "sprint2016", "description": "", "creator": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "open_issues": 2, "closed_issues": 1, "state": "open", "created_at": "2016-06-02T19:27:15Z", "updated_at": "2016-06-02T23:26:50Z", "due_on": "2016-06-05T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2016-03-02T12:55:05Z", "updated_at": "2016-06-02T23:26:50Z", "closed_at": "2016-06-02T23:26:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See aio-libs/aiopg#106\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/63", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/63/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/63/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/63", "id": 133990293, "node_id": "MDU6SXNzdWUxMzM5OTAyOTM=", "number": 63, "title": "Echo option for default cursor", "user": {"login": "tvoinarovskyi", "id": 916148, "node_id": "MDQ6VXNlcjkxNjE0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/916148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tvoinarovskyi", "html_url": "https://github.com/tvoinarovskyi", "followers_url": "https://api.github.com/users/tvoinarovskyi/followers", "following_url": "https://api.github.com/users/tvoinarovskyi/following{/other_user}", "gists_url": "https://api.github.com/users/tvoinarovskyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tvoinarovskyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tvoinarovskyi/subscriptions", "organizations_url": "https://api.github.com/users/tvoinarovskyi/orgs", "repos_url": "https://api.github.com/users/tvoinarovskyi/repos", "events_url": "https://api.github.com/users/tvoinarovskyi/events{/privacy}", "received_events_url": "https://api.github.com/users/tvoinarovskyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-16T14:07:02Z", "updated_at": "2017-04-17T10:28:51Z", "closed_at": "2017-04-17T10:27:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This line:\nhttps://github.com/aio-libs/aiomysql/blob/master/aiomysql/connection.py#L365\n\n``` python\n        cur = cursor(self, self._echo) if cursor else self.cursorclass(self)\n```\n\nWe should pass echo param to cursorclass too, don't we?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/62", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/62/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/62/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/62", "id": 133585733, "node_id": "MDU6SXNzdWUxMzM1ODU3MzM=", "number": 62, "title": "Enable by default utf8 encoding", "user": {"login": "GMLudo", "id": 243823, "node_id": "MDQ6VXNlcjI0MzgyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/243823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GMLudo", "html_url": "https://github.com/GMLudo", "followers_url": "https://api.github.com/users/GMLudo/followers", "following_url": "https://api.github.com/users/GMLudo/following{/other_user}", "gists_url": "https://api.github.com/users/GMLudo/gists{/gist_id}", "starred_url": "https://api.github.com/users/GMLudo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GMLudo/subscriptions", "organizations_url": "https://api.github.com/users/GMLudo/orgs", "repos_url": "https://api.github.com/users/GMLudo/repos", "events_url": "https://api.github.com/users/GMLudo/events{/privacy}", "received_events_url": "https://api.github.com/users/GMLudo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-14T22:00:19Z", "updated_at": "2016-02-16T11:17:17Z", "closed_at": "2016-02-15T21:49:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nIf I import this SQL file in MySQL DB with this line: https://github.com/TechEmpower/FrameworkBenchmarks/blob/master/config/create.sql#L110\n\nWhen I retrieve this line with aiomysql, I have **??????????????** string instead of **\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af**.\n\nExcept if I add two parameters in the aiomysql connection: \n\n```\n            charset='utf8',\n            use_unicode=True,\n```\n\nAt least to me, it should be the default behaviour of aiomysql.\n\nWhat do you think ?\n\nHave a nice day.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/59", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/59/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/59/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/59", "id": 127406256, "node_id": "MDU6SXNzdWUxMjc0MDYyNTY=", "number": 59, "title": "Why I got ignored exception when I use aiomysql in python 3.5", "user": {"login": "KaimingWan", "id": 4374015, "node_id": "MDQ6VXNlcjQzNzQwMTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4374015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KaimingWan", "html_url": "https://github.com/KaimingWan", "followers_url": "https://api.github.com/users/KaimingWan/followers", "following_url": "https://api.github.com/users/KaimingWan/following{/other_user}", "gists_url": "https://api.github.com/users/KaimingWan/gists{/gist_id}", "starred_url": "https://api.github.com/users/KaimingWan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KaimingWan/subscriptions", "organizations_url": "https://api.github.com/users/KaimingWan/orgs", "repos_url": "https://api.github.com/users/KaimingWan/repos", "events_url": "https://api.github.com/users/KaimingWan/events{/privacy}", "received_events_url": "https://api.github.com/users/KaimingWan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-19T09:45:18Z", "updated_at": "2016-02-16T16:24:54Z", "closed_at": "2016-02-16T16:24:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Basic Info:\n- python 3.5\n- run the code with SublimeREPL\n\nThe exception traceback is as follows.\n\n```\nException ignored in: <bound method Connection.__del__ of <aiomysql.connection.Connection object at 0x00000030F8080B38>>\nTraceback (most recent call last):\n  File \"C:\\software\\development\\python3.5\\lib\\site-packages\\aiomysql\\connection.py\", line 689, in __del__\n  File \"C:\\software\\development\\python3.5\\lib\\site-packages\\aiomysql\\connection.py\", line 261, in close\n  File \"C:\\software\\development\\python3.5\\lib\\asyncio\\selector_events.py\", line 569, in close\n  File \"C:\\software\\development\\python3.5\\lib\\asyncio\\base_events.py\", line 447, in call_soon\n  File \"C:\\software\\development\\python3.5\\lib\\asyncio\\base_events.py\", line 456, in _call_soon\n  File \"C:\\software\\development\\python3.5\\lib\\asyncio\\base_events.py\", line 284, in _check_closed\nRuntimeError: Event loop is closed\n```\n\nI implement a simple ORM framework with some functions to process SQL.Some related codes in orm.py(just ignore the chinese annotation) as follows. The update or findAll method in class Model works well and really give the results correctly but every time after I running the test_method,it gives the exception.\n\n```\n@asyncio.coroutine\ndef create_pool(loop, **kw):        # \u5f15\u5165\u5173\u952e\u5b57\u540e\u4e0d\u7528\u663e\u793aimport asyncio\u4e86\n    # \u8be5\u51fd\u6570\u7528\u4e8e\u521b\u5efa\u8fde\u63a5\u6c60\n    global __pool  # \u5168\u5c40\u53d8\u91cf\u7528\u4e8e\u4fdd\u5b58\u8fde\u63a5\u6c60\n    __pool = yield from aiomysql.create_pool(\n        host=kw.get('host', 'localhost'),  # \u9ed8\u8ba4\u5b9a\u4e49host\u540d\u5b57\u4e3alocalhost\n        port=kw.get('port', 3306),      # \u9ed8\u8ba4\u5b9a\u4e49mysql\u7684\u9ed8\u8ba4\u7aef\u53e3\u662f3306\n        user=kw['user'],                # user\u662f\u901a\u8fc7\u5173\u952e\u5b57\u53c2\u6570\u4f20\u8fdb\u6765\u7684\n        password=kw['password'],        # \u5bc6\u7801\u4e5f\u662f\u901a\u8fc7\u5173\u952e\u5b57\u53c2\u6570\u4f20\u8fdb\u6765\u7684\n        db=kw['db'],                    # \u6570\u636e\u5e93\u7684\u540d\u5b57\n        charset=kw.get('charset', 'utf8'),  # \u9ed8\u8ba4\u6570\u636e\u5e93\u5b57\u7b26\u96c6\u662futf8\n        autocommit=kw.get('autocommit', True),  # \u9ed8\u8ba4\u81ea\u52a8\u63d0\u4ea4\u4e8b\u52a1\n        maxsize=kw.get('maxsize', 10),      # \u8fde\u63a5\u6c60\u6700\u591a\u540c\u65f6\u5904\u740610\u4e2a\u8bf7\u6c42\n        minsize=kw.get('minsize', 1),       # \u8fde\u63a5\u6c60\u6700\u5c111\u4e2a\u8bf7\u6c42\n        loop=loop       # \u4f20\u9012\u6d88\u606f\u5faa\u73af\u5bf9\u8c61loop\u7528\u4e8e\u5f02\u6b65\u6267\u884c\n    )\n@asyncio.coroutine\ndef execute(sql, args, autocommit=True):\n    # execute\u65b9\u6cd5\u53ea\u8fd4\u56de\u7ed3\u679c\u6570\uff0c\u4e0d\u8fd4\u56de\u7ed3\u679c\u96c6,\u7528\u4e8einsert,update\u8fd9\u4e9bSQL\u8bed\u53e5\n    log(sql)\n    with (yield from __pool) as conn:\n        if not autocommit:\n            yield from conn.begin()\n        try:\n            cur = yield from conn.cursor()\n            # \u6267\u884csql\u8bed\u53e5\uff0c\u540c\u65f6\u66ff\u6362\u5360\u4f4d\u7b26\n            # pdb.set_trace()\n            yield from cur.execute(sql.replace('?', '%s'), args)\n            affected = cur.rowcount     # \u8fd4\u56de\u53d7\u5f71\u54cd\u7684\u884c\u6570\n            yield from cur.close()       # \u5173\u95ed\u6e38\u6807\n            if not autocommit:\n                yield from conn.commit()\n        except BaseException as e:\n            if not autocommit:\n                yield from conn.rollback()\n            raise e  # raise\u4e0d\u5e26\u53c2\u6570\uff0c\u5219\u628a\u6b64\u5904\u7684\u9519\u8bef\u5f80\u4e0a\u629b;\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\u8fd8\u662f\u5efa\u8bae\u52a0e\u5427\n        return affected\n\n\nclass Model(dict, metaclass=ModelMetaclass):\n    # \u7ee7\u627fdict\u662f\u4e3a\u4e86\u4f7f\u7528\u65b9\u4fbf\uff0c\u4f8b\u5982\u5bf9\u8c61\u5b9e\u4f8buser['id']\u5373\u53ef\u8f7b\u677e\u901a\u8fc7UserModel\u53bb\u6570\u636e\u5e93\u83b7\u53d6\u5230id\n    # \u5143\u7c7b\u81ea\u7136\u662f\u4e3a\u4e86\u5c01\u88c5\u6211\u4eec\u4e4b\u524d\u5199\u7684\u5177\u4f53\u7684SQL\u5904\u7406\u51fd\u6570\uff0c\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u6570\u636e\n\n    def __init__(self, **kw):\n        # \u8c03\u7528dict\u7684\u7236\u7c7b__init__\u65b9\u6cd5\u7528\u4e8e\u521b\u5efaModel,super(\u7c7b\u540d\uff0c\u7c7b\u5bf9\u8c61)\n        super(Model, self).__init__(**kw)\n\n    def __getattr__(self, key):\n        # \u8c03\u7528\u4e0d\u5b58\u5728\u7684\u5c5e\u6027\u65f6\u8fd4\u56de\u4e00\u4e9b\u5185\u5bb9\n        try:\n            return self[key]  # \u5982\u679c\u5b58\u5728\u5219\u6b63\u5e38\u8fd4\u56de\n        except KeyError:\n            raise AttributeError(\n                r\"'Model' object has no attribute '%s'\" % key)      # r\u8868\u793a\u4e0d\u8f6c\u4e49\n\n    def __setattr__(self, key, value):\n        # \u8bbe\u5b9aModel\u91cc\u9762\u7684key-value\u5bf9\u8c61\uff0c\u8fd9\u91ccvalue\u5141\u8bb8\u4e3aNone\n        self[key] = value\n\n    def getValue(self, key):\n        # \u83b7\u53d6\u67d0\u4e2a\u5177\u4f53\u7684\u503c\uff0c\u80af\u5b9a\u5b58\u5728\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u8be5\u51fd\u6570,\u5426\u5219\u4f1a\u4f7f\u7528__getattr()__\n        # \u83b7\u53d6\u5b9e\u4f8b\u7684key\uff0cNone\u662f\u9ed8\u8ba4\u503c\uff0cgetattr\u65b9\u6cd5\u4f7f\u7528\u53ef\u4ee5\u53c2\u8003http://kaimingwan.com/post/python/pythonzhong-de-nei-zhi-han-shu-getattr-yu-fan-she\n        return getattr(self, key, None)\n\n    def getValueOrDefault(self, key):\n        # \u8fd9\u4e2a\u65b9\u6cd5\u5f53value\u4e3aNone\u7684\u65f6\u5019\u80fd\u591f\u8fd4\u56de\u9ed8\u8ba4\u503c\n        value = getattr(self, key, None)\n        if value is None:       # \u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u503c\u5219\u76f4\u63a5\u8fd4\u56de\n            # self.__mapping__\u5728metaclass\u4e2d\uff0c\u7528\u4e8e\u4fdd\u5b58\u4e0d\u540c\u5b9e\u4f8b\u5c5e\u6027\u5728Model\u57fa\u7c7b\u4e2d\u7684\u6620\u5c04\u5173\u7cfb\n            field = self.__mappings__[key]\n            if field.default is not None:  # \u5982\u679c\u5b9e\u4f8b\u7684\u57df\u5b58\u5728\u9ed8\u8ba4\u503c\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\n                # field.default\u662fcallable\u7684\u8bdd\u5219\u76f4\u63a5\u8c03\u7528\n                value = field.default() if callable(field.default) else field.default\n                logging.debug('using default value for %s:%s' %\n                              (key, str(value)))\n                setattr(self, key, value)\n        return value\n\n\n# --------------------------\u6bcf\u4e2aModel\u7c7b\u7684\u5b50\u7c7b\u5b9e\u4f8b\u5e94\u8be5\u5177\u5907\u7684\u6267\u884cSQL\u7684\u65b9\u6cd5\u6bd4\u5982save------\n    @classmethod    # \u7c7b\u65b9\u6cd5\n    @asyncio.coroutine\n    def findAll(cls, where=None, args=None, **kw):\n        sql = [cls.__select__]  # \u83b7\u53d6\u9ed8\u8ba4\u7684select\u8bed\u53e5\n        if where:   # \u5982\u679c\u6709where\u8bed\u53e5\uff0c\u5219\u4fee\u6539sql\u53d8\u91cf\n            # \u8fd9\u91cc\u4e0d\u7528\u534f\u7a0b\uff0c\u662f\u56e0\u4e3a\u4e0d\u9700\u8981\u7b49\u5f85\u6570\u636e\u8fd4\u56de\n            sql.append('where')  # sql\u91cc\u9762\u52a0\u4e0awhere\u5173\u952e\u5b57\n            sql.append(where)   # \u8fd9\u91cc\u7684where\u5b9e\u9645\u4e0a\u662fcolName='xxx'\u8fd9\u6837\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\n        if args is None:    # \u4ec0\u4e48\u53c2\u6570?\n            args = []\n\n        orderBy = kw.get('orderBy', None)    # \u4ecekw\u4e2d\u67e5\u770b\u662f\u5426\u6709orderBy\u5c5e\u6027\n        if orderBy:\n            sql.append('order by')\n            sql.append(orderBy)\n\n        limit = kw.get('limit', None)    # mysql\u4e2d\u53ef\u4ee5\u4f7f\u7528limit\u5173\u952e\u5b57\n        if limit is not None:\n            sql.append('limit')\n            if isinstance(limit, int):   # \u5982\u679c\u662fint\u7c7b\u578b\u5219\u589e\u52a0\u5360\u4f4d\u7b26\n                sql.append('?')\n                args.append(limit)\n            elif isinstance(limit, tuple) and len(limit) == 2:   # limit\u53ef\u4ee5\u53d62\u4e2a\u53c2\u6570\uff0c\u8868\u793a\u4e00\u4e2a\u8303\u56f4\n                sql.append('?,?')\n                args.extend(limit)\n            else:       # \u5176\u4ed6\u60c5\u51b5\u81ea\u7136\u662f\u8bed\u6cd5\u95ee\u9898\n                raise ValueError('Invalid limit value: %s' % str(limit))\n            # \u5728\u539f\u6765\u9ed8\u8ba4SQL\u8bed\u53e5\u540e\u9762\u518d\u6dfb\u52a0\u8bed\u53e5\uff0c\u8981\u52a0\u4e2a\u7a7a\u683c\n\n        rs = yield from select(' '.join(sql), args)\n        return [cls(**r) for r in rs]   # \u8fd4\u56de\u7ed3\u679c\uff0c\u7ed3\u679c\u662flist\u5bf9\u8c61\uff0c\u91cc\u9762\u7684\u5143\u7d20\u662fdict\u7c7b\u578b\u7684\n\n    @classmethod\n    @asyncio.coroutine\n    def findNumber(cls, selectField, where=None, args=None):\n        # \u83b7\u53d6\u884c\u6570\n        # \u8fd9\u91cc\u7684 _num_ \u4ec0\u4e48\u610f\u601d\uff1f\u522b\u540d\uff1f \u6211\u4f30\u8ba1\u662fmysql\u91cc\u9762\u4e00\u4e2a\u8bb0\u5f55\u5b9e\u65f6\u67e5\u8be2\u7ed3\u679c\u6761\u6570\u7684\u53d8\u91cf\n        sql = ['select %s _num_ from `%s`' % (selectField, cls.__table__)]\n        # pdb.set_trace()\n        if where:\n            sql.append('where')\n            sql.append(where)   # \u8fd9\u91cc\u4e0d\u52a0\u7a7a\u683c\uff1f\n        rs = yield from select(' '.join(sql), args, 1)  # size = 1\n        if len(rs) == 0:  # \u7ed3\u679c\u96c6\u4e3a0\u7684\u60c5\u51b5\n                return None\n        return rs[0]['_num_']   # \u6709\u7ed3\u679c\u5219rs\u8fd9\u4e2alist\u4e2d\u7b2c\u4e00\u4e2a\u8bcd\u5178\u5143\u7d20_num_\u8fd9\u4e2akey\u7684value\u503c\n\n    @classmethod\n    @asyncio.coroutine\n    def find_by_key(cls, pk):\n        # \u6839\u636e\u4e3b\u952e\u67e5\u627e\n        # pk\u662fdict\u5bf9\u8c61\n        rs = yield from select('%s where `%s`=?' % (cls.__select__, cls.__primary_key__), [pk], 1)\n        if len(rs) == 0:\n            return None\n        return cls(**rs[0])\n\n    # \u8fd9\u4e2a\u662f\u5b9e\u4f8b\u65b9\u6cd5\n    @asyncio.coroutine\n    def save(self):\n        # arg\u662f\u4fdd\u5b58\u6240\u6709Model\u5b9e\u4f8b\u5c5e\u6027\u548c\u4e3b\u952e\u7684list,\u4f7f\u7528getValueOrDefault\u65b9\u6cd5\u7684\u597d\u5904\u662f\u4fdd\u5b58\u9ed8\u8ba4\u503c\n        # \u5c06\u81ea\u5df1\u7684fields\u4fdd\u5b58\u8fdb\u53bb\n        args = list(map(self.getValueOrDefault, self.__fields__))\n        args.append(self.getValueOrDefault(self.__primary_key__))\n        # pdb.set_trace()\n        rows = yield from execute(self.__insert__, args)  # \u4f7f\u7528\u9ed8\u8ba4\u63d2\u5165\u51fd\u6570\n        if rows != 1:\n            # \u63d2\u5165\u5931\u8d25\u5c31\u662frows!=1\n            logging.warn(\n                'failed to insert record: affected rows: %s' % rows)\n\n    @asyncio.coroutine\n    def update(self):\n        # \u8fd9\u91cc\u4f7f\u7528getValue\u8bf4\u660e\u53ea\u80fd\u66f4\u65b0\u90a3\u4e9b\u5df2\u7ecf\u5b58\u5728\u7684\u503c\uff0c\u56e0\u6b64\u4e0d\u80fd\u4f7f\u7528getValueOrDefault\u65b9\u6cd5\n        args = list(map(self.getValue, self.__fields__))\n        args.append(self.getValue(self.__primary_key__))\n        # pdb.set_trace()\n        rows = yield from execute(self.__update__, args)    # args\u662f\u5c5e\u6027\u7684list\n        if rows != 1:\n            logging.warn(\n                'failed to update by primary key: affected rows: %s' % rows)\n\n    @asyncio.coroutine\n    def remove(self):\n        args = [self.getValue(self.__primary_key__)]\n        # pdb.set_trace()\n        rows = yield from execute(self.__delete__, args)\n        if rows != 1:\n            logging.warn(\n                'failed to remove by primary key: affected rows: %s' % rows)\n```\n\nThe test file is as follows.\n\n```\nfrom models import User\nimport asyncio\nimport sys\nimport orm\nimport pdb\nimport time\n\n# import pdb\n\n# \u6d4b\u8bd5\u63d2\u5165\n\n\n@asyncio.coroutine\ndef test_save(loop):\n    yield from orm.create_pool(loop, user='kami', password='kami', db='pure_blog')\n    u = User(name='hi', email='hi@example.com',\n             passwd='hi', image='about:blank')\n    # pdb.set_trace()\n    yield from u.save()\n\n# \u6d4b\u8bd5\u67e5\u8be2\n\n\n@asyncio.coroutine\ndef test_findAll(loop):\n    yield from orm.create_pool(loop, user='kami', password='kami', db='pure_blog')\n    # \u8fd9\u91cc\u7ed9\u7684\u5173\u952e\u5b57\u53c2\u6570\u6309\u7167xxx='xxx'\u7684\u5f62\u5f0f\u7ed9\u51fa\uff0c\u4f1a\u81ea\u52a8\u5206\u88c5\u6210dict\n    rs = yield from User.findAll(email='test@example.com')      # rs\u662f\u4e00\u4e2a\u5143\u7d20\u4e3adict\u7684list\n    # pdb.set_trace()\n    for i in range(len(rs)):\n        print(rs[i])\n\n# \u67e5\u8be2\u6761\u6570?\n\n\n@asyncio.coroutine\ndef test_findNumber(loop):\n    yield from orm.create_pool(loop, user='kami', password='kami', db='pure_blog')\n    count = yield from User.findNumber('email')\n    print(count)\n\n# \u6839\u636e\u4e3b\u952e\u67e5\u627e\uff0c\u8fd9\u91cc\u8bd5ID\n\n\n@asyncio.coroutine\ndef test_find_by_key(loop):\n    yield from orm.create_pool(loop, user='kami', password='kami', db='pure_blog')\n    # rs\u662f\u4e00\u4e2adict\n    # ID\u8bf7\u81ea\u5df1\u901a\u8fc7\u6570\u636e\u5e93\u67e5\u8be2\n    rs = yield from User.find_by_key('0014531826762080b29033a78624bc68c867550778f64d6000')\n    print(rs)\n\n# \u6839\u636e\u4e3b\u952e\u5220\u9664\n\n\n@asyncio.coroutine\ndef test_remove(loop):\n    yield from orm.create_pool(loop, user='kami', password='kami', db='pure_blog')\n    # \u7528id\u521d\u59cb\u5316\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\n    u = User(id='0014531826762080b29033a78624bc68c867550778f64d6000')\n    yield from u.remove()\n\n\n# \u6839\u636e\u4e3b\u952e\u66f4\u65b0\n@asyncio.coroutine\ndef test_update(loop):\n    yield from orm.create_pool(loop, user='kami', password='kami', db='pure_blog')\n    # \u5fc5\u987b\u6309\u7167\u5217\u7684\u987a\u5e8f\u6765\u521d\u59cb\u5316\uff1a'update `users` set `created_at`=?, `passwd`=?, `image`=?,\n    # `admin`=?, `name`=?, `email`=? where `id`=?' \u6ce8\u610f\u8fd9\u91cc\u8981\u4f7f\u7528time()\u65b9\u6cd5\uff0c\u5426\u5219\u4f1a\u76f4\u63a5\u8fd4\u56de\u4e2a\u65f6\u95f4\u6233\u5bf9\u8c61\uff0c\u800c\u4e0d\u662ffloat\u503c\n    u = User(id='00145318300622886f186530ee74afabecedb42f9cd590a000', created_at=time.time(), passwd='test',\n             image='about:blank', admin=True, name='test', email='hello1@example.com')  # id\u5fc5\u987b\u548c\u6570\u636e\u5e93\u4e00\u76f4\uff0c\u5176\u4ed6\u5c5e\u6027\u53ef\u4ee5\u8bbe\u7f6e\u6210\u65b0\u7684\u503c,\u5c5e\u6027\u8981\u5168\n    # pdb.set_trace()\n    yield from u.update()\n\n\nloop = asyncio.get_event_loop()  # \u83b7\u53d6\u6d88\u606f\u5faa\u73af\u5bf9\u8c61\nloop.run_until_complete(test_update(loop))  # \u6267\u884c\u534f\u7a0b\nloop.close()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/58", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/58/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/58/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/58", "id": 127293633, "node_id": "MDU6SXNzdWUxMjcyOTM2MzM=", "number": 58, "title": "Make pool.release method return future so we can wait on it in __aexit__", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-18T19:18:11Z", "updated_at": "2016-01-21T19:48:09Z", "closed_at": "2016-01-21T19:48:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/51", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/51/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/51/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/51", "id": 124856146, "node_id": "MDU6SXNzdWUxMjQ4NTYxNDY=", "number": 51, "title": "add more pep492 support for Engine, SAConnection, Transaction", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-04T22:41:26Z", "updated_at": "2016-01-18T19:16:46Z", "closed_at": "2016-01-18T19:16:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/49", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/49/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/49/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/49", "id": 124166430, "node_id": "MDU6SXNzdWUxMjQxNjY0MzA=", "number": 49, "title": "`create_pool` can not work with `async/await` feature", "user": {"login": "lxneng", "id": 112606, "node_id": "MDQ6VXNlcjExMjYwNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/112606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lxneng", "html_url": "https://github.com/lxneng", "followers_url": "https://api.github.com/users/lxneng/followers", "following_url": "https://api.github.com/users/lxneng/following{/other_user}", "gists_url": "https://api.github.com/users/lxneng/gists{/gist_id}", "starred_url": "https://api.github.com/users/lxneng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lxneng/subscriptions", "organizations_url": "https://api.github.com/users/lxneng/orgs", "repos_url": "https://api.github.com/users/lxneng/repos", "events_url": "https://api.github.com/users/lxneng/events{/privacy}", "received_events_url": "https://api.github.com/users/lxneng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-29T05:43:01Z", "updated_at": "2015-12-29T14:17:10Z", "closed_at": "2015-12-29T09:08:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "## test script\n\n``` py\nimport asyncio\nimport aiomysql\n\n\nloop = asyncio.get_event_loop()\n\n\nasync def test_example():\n        pool = await aiomysql.create_pool(host='127.0.0.1', port=3306,\n                                               user='root', password='',\n                                               db='mysql', loop=loop)\n        with (await pool) as conn:\n            cur = await conn.cursor()\n            await cur.execute(\"SELECT 10\")\n            # print(cur.description)\n            (r,) = await cur.fetchone()\n            assert r == 10\n        pool.close()\n        await pool.wait_closed()\n\nloop.run_until_complete(test_example())\n```\n## Error Traceback\n\n```\nTraceback (most recent call last):\n  File \"aiomysql_pool.py\", line 21, in <module>\n    loop.run_until_complete(test_example())\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/asyncio/base_events.py\", line 342, in run_until_complete\n    return future.result()\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/asyncio/futures.py\", line 274, in result\n    raise self._exception\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/asyncio/tasks.py\", line 239, in _step\n    result = coro.send(value)\n  File \"aiomysql_pool.py\", line 12, in test_example\n    with (await pool) as conn:\n  File \"/Users/Eric/Projects/Python/aiomysql/aiomysql/utils.py\", line 121, in __enter__\n    assert self._conn\nAssertionError\n...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/46", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/46/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/46/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/46", "id": 119108313, "node_id": "MDU6SXNzdWUxMTkxMDgzMTM=", "number": 46, "title": "'trans.rollback()' is not working correct", "user": {"login": "ikhlestov", "id": 9900548, "node_id": "MDQ6VXNlcjk5MDA1NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9900548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikhlestov", "html_url": "https://github.com/ikhlestov", "followers_url": "https://api.github.com/users/ikhlestov/followers", "following_url": "https://api.github.com/users/ikhlestov/following{/other_user}", "gists_url": "https://api.github.com/users/ikhlestov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikhlestov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikhlestov/subscriptions", "organizations_url": "https://api.github.com/users/ikhlestov/orgs", "repos_url": "https://api.github.com/users/ikhlestov/repos", "events_url": "https://api.github.com/users/ikhlestov/events{/privacy}", "received_events_url": "https://api.github.com/users/ikhlestov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-26T22:55:24Z", "updated_at": "2015-12-05T15:59:46Z", "closed_at": "2015-12-05T15:58:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've tried to use standart code from docs:\n\n``` python\nwith (yield from engine) as conn:\n    trans = yield from conn.begin()\n    try:\n        yield from conn.execute(\"insert into x (a, b) values (1, 2)\")\n    except Exception:\n        yield from trans.rollback()\n    else:\n        yield from trans.commit()\n```\n\nbut in case if `trans.rollback()` was called for some reason then during closing the connection we will receive an exception:\n\n```\n  File \"/home/legat/Projects/ecoisme/env/lib/python3.5/site-packages/aiomysql/sa/engine.py\", line 191, in __exit__\n    self._engine.release(self._conn)\n  File \"/home/legat/Projects/ecoisme/env/lib/python3.5/site-packages/aiomysql/sa/engine.py\", line 116, in release\n    raise InvalidRequestError(\"Cannot release a connection with \"\naiomysql.sa.exc.InvalidRequestError: Cannot release a connection with not finished transaction\n```\n\nI think that `_rollback_impl()` method form SAConnection instance should be updated the same as it was at aiopg library [at this commit](https://github.com/aio-libs/aiopg/commit/1c208f4efbce81890334652f0bb949382340a02f)\n\nA little bit later I will make the same/test and provide pull request.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/43", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/43/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/43/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/43", "id": 119099001, "node_id": "MDU6SXNzdWUxMTkwOTkwMDE=", "number": 43, "title": "'timeout' attribute not exist", "user": {"login": "ikhlestov", "id": 9900548, "node_id": "MDQ6VXNlcjk5MDA1NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9900548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikhlestov", "html_url": "https://github.com/ikhlestov", "followers_url": "https://api.github.com/users/ikhlestov/followers", "following_url": "https://api.github.com/users/ikhlestov/following{/other_user}", "gists_url": "https://api.github.com/users/ikhlestov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikhlestov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikhlestov/subscriptions", "organizations_url": "https://api.github.com/users/ikhlestov/orgs", "repos_url": "https://api.github.com/users/ikhlestov/repos", "events_url": "https://api.github.com/users/ikhlestov/events{/privacy}", "received_events_url": "https://api.github.com/users/ikhlestov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-26T20:19:36Z", "updated_at": "2015-12-05T15:59:26Z", "closed_at": "2015-12-05T15:59:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello, I have conversation regarding issue at aio-libs google group [here](https://groups.google.com/d/msg/aio-libs/HGv0lCMX-40/uQcnVaJdBgAJ) but there brief expanation again in any case:\n`aiomysql.sa.create_engine()` method does not allow **timeout** parameter.\n`aiomysql.sa.Engine` have no **timeout** attrubute.\n`aiomysql.Pool` have no **timeout** attribute.\nBut all this situation were mentioned in docs.\nI've provide pull request with docs updated(just remove this missleading 'timeouts') https://github.com/aio-libs/aiomysql/pull/42 if required.\n\nI see that `aiomysql.connect()` method allow **connect_timeout** parameter and same we can provide to `aiomysql.sa.create_engine()` method without exception. But in any case we cannot get **timeout** attribute later from `sa.Engine` instance.\n\nAlso it seems that `sa.create_engine()` method and `aiomysql.Pool` class can receive all parameters that low level `aiomysql.connect()` method can. Maybe it reasonable to note some way regarding this in docs?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/40", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/40/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/40/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/40", "id": 118208396, "node_id": "MDU6SXNzdWUxMTgyMDgzOTY=", "number": 40, "title": "'DeprecationWarning: no_delay option is deprecated' raised even if 'no_delay' argument was not provided", "user": {"login": "ikhlestov", "id": 9900548, "node_id": "MDQ6VXNlcjk5MDA1NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/9900548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikhlestov", "html_url": "https://github.com/ikhlestov", "followers_url": "https://api.github.com/users/ikhlestov/followers", "following_url": "https://api.github.com/users/ikhlestov/following{/other_user}", "gists_url": "https://api.github.com/users/ikhlestov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikhlestov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikhlestov/subscriptions", "organizations_url": "https://api.github.com/users/ikhlestov/orgs", "repos_url": "https://api.github.com/users/ikhlestov/repos", "events_url": "https://api.github.com/users/ikhlestov/events{/privacy}", "received_events_url": "https://api.github.com/users/ikhlestov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-21T17:04:21Z", "updated_at": "2015-12-05T16:00:07Z", "closed_at": "2015-12-05T16:00:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After update to aiomysql 0.0.5 I've receive such warning:\n'/env/lib/python3.5/site-packages/aiomysql/connection.py:154: DeprecationWarning: no_delay option is deprecated'\nIt was very strange because I've not provide such argument anywhere.\n\nAfter diving deep a little bit I've discovered that such warning was added in this commit - [link to commit](https://github.com/aio-libs/aiomysql/commit/364aa6d7618b4a83ff96c77806ee797d181a4602#diff-b4987acea49665e9f985c0da9f5604f4)\n\nThere on line 147 was added restriction\n\n```\n        if no_delay is not None:\n            warnings.warn(\"no_delay option is deprecated\", DeprecationWarning)\n            no_delay = bool(no_delay)\n        else:\n            no_delay = True\n```\n\nBut at the same time default argument at **init** is `no_delay=False`.\nSo with that settings it raise DeprecationWarning any time you create some connection.\nI'd like to fix it, but I cannot figure out what right default 'no_delay' value should be.\n\nVersions:\naiomysql: 0.0.5\npython: 3.5.0\nMariaDB: mysql  Ver 15.1 Distrib 10.1.8-MariaDB\nUbuntu 14.04\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/39", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/39/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/39/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/39", "id": 117535182, "node_id": "MDU6SXNzdWUxMTc1MzUxODI=", "number": 39, "title": "AttributeError: 'Engine' object has no attribute 'contextual_connect'", "user": {"login": "sirkonst", "id": 69752, "node_id": "MDQ6VXNlcjY5NzUy", "avatar_url": "https://avatars2.githubusercontent.com/u/69752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirkonst", "html_url": "https://github.com/sirkonst", "followers_url": "https://api.github.com/users/sirkonst/followers", "following_url": "https://api.github.com/users/sirkonst/following{/other_user}", "gists_url": "https://api.github.com/users/sirkonst/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirkonst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirkonst/subscriptions", "organizations_url": "https://api.github.com/users/sirkonst/orgs", "repos_url": "https://api.github.com/users/sirkonst/repos", "events_url": "https://api.github.com/users/sirkonst/events{/privacy}", "received_events_url": "https://api.github.com/users/sirkonst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-18T08:04:07Z", "updated_at": "2018-01-18T05:09:29Z", "closed_at": "2015-11-20T06:33:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't understand what going wrong when I try to use `sqlalchemy.orm` with `aiomysql.sa`. Code:\n\n``` python\nimport asyncio\n\nfrom aiomysql.sa import create_engine\n\nfrom sqlalchemy import Column, Integer, String\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\nBase = declarative_base()\n\n\nclass User(Base):\n    __tablename__ = 'users'\n\n    id = Column(Integer, primary_key=True)\n    login = Column(String(50))\n\n\n@asyncio.coroutine\ndef init_db(loop):\n    engine = yield from create_engine(\n        user='root', password='password',\n        db='mydb', host='localhost',\n        loop=loop\n    )\n    return engine\n\n\n@asyncio.coroutine\ndef get_users(engine):\n    Session = sessionmaker()\n    Session.configure(bind=engine)\n\n    s = Session()\n    res = s.query(User).all()\n    for r in res:\n        print(r.id, r.login)\n\n\nif __name__ == '__main__':\n    loop = asyncio.get_event_loop()\n    engine = loop.run_until_complete(init_db(loop))\n    loop.run_until_complete(get_users(engine))\n```\n\n```\n....\n  File \"/home/konst/develop/ex/my.py\", line 35, in get_users\n    res = s.query(User).all()\n  File \"/home/konst/develop/ex/env/lib/python3.4/site-packages/sqlalchemy/orm/query.py\", line 2423, in all\n    return list(self)\n  File \"/home/konst/develop/ex/env/lib/python3.4/site-packages/sqlalchemy/orm/query.py\", line 2571, in __iter__\n    return self._execute_and_instances(context)\n  File \"/home/konst/develop/ex/env/lib/python3.4/site-packages/sqlalchemy/orm/query.py\", line 2584, in _execute_and_instances\n    close_with_result=True)\n  File \"/home/konst/develop/ex/env/lib/python3.4/site-packages/sqlalchemy/orm/query.py\", line 2575, in _connection_from_session\n    **kw)\n  File \"/home/konst/develop/ex/env/lib/python3.4/site-packages/sqlalchemy/orm/session.py\", line 893, in connection\n    execution_options=execution_options)\n  File \"/home/konst/develop/ex/env/lib/python3.4/site-packages/sqlalchemy/orm/session.py\", line 898, in _connection_for_bind\n    engine, execution_options)\n  File \"/home/konst/develop/ex/env/lib/python3.4/site-packages/sqlalchemy/orm/session.py\", line 334, in _connection_for_bind\n    conn = bind.contextual_connect()\nAttributeError: 'Engine' object has no attribute 'contextual_connect'\n```\n\nVersions:\n- python-3.4\n- asyncio==3.4.3\n- aiomysql==0.0.5\n- SQLAlchemy==1.0.9\n\nCan you help?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/38", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/38/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/38/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/38", "id": 116900110, "node_id": "MDU6SXNzdWUxMTY5MDAxMTA=", "number": 38, "title": "aiomysql not support mysql 5.1", "user": {"login": "llzx373", "id": 1886261, "node_id": "MDQ6VXNlcjE4ODYyNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1886261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llzx373", "html_url": "https://github.com/llzx373", "followers_url": "https://api.github.com/users/llzx373/followers", "following_url": "https://api.github.com/users/llzx373/following{/other_user}", "gists_url": "https://api.github.com/users/llzx373/gists{/gist_id}", "starred_url": "https://api.github.com/users/llzx373/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llzx373/subscriptions", "organizations_url": "https://api.github.com/users/llzx373/orgs", "repos_url": "https://api.github.com/users/llzx373/repos", "events_url": "https://api.github.com/users/llzx373/events{/privacy}", "received_events_url": "https://api.github.com/users/llzx373/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-11-14T05:48:26Z", "updated_at": "2017-04-17T10:26:05Z", "closed_at": "2017-04-17T10:26:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my test,aiomysql not support mysql 5.1, select statement not fetch result return.What can I do?\n\nasync def aio_test():\n    con=await aiomysql.connect(host='instance_51',port=3306,user='user',password='passwd')\n    cur=await con.cursor()\n    await cur.execute('select 1')\n    res=await cur.fetchone()\n    print(res)\n    await cur.close()\n    con.close()\n\nif **name** == '**main**':\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(aio_test())\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/31", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/31/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/31/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/31", "id": 109621016, "node_id": "MDU6SXNzdWUxMDk2MjEwMTY=", "number": 31, "title": "Drop support for python 3.3", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 163965893, "node_id": "MDU6TGFiZWwxNjM5NjU4OTM=", "url": "https://api.github.com/repos/aio-libs/aiomysql/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-10-03T12:28:53Z", "updated_at": "2016-06-02T21:17:20Z", "closed_at": "2016-06-02T19:30:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "aiohttp droped support for python 3.3 https://github.com/KeepSafe/aiohttp/issues/537 I guess we should too.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/29", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/29/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/29/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/29", "id": 106211963, "node_id": "MDU6SXNzdWUxMDYyMTE5NjM=", "number": 29, "title": "Support Python 3.5 features", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-13T11:44:10Z", "updated_at": "2015-11-08T02:03:46Z", "closed_at": "2015-11-08T02:03:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Python 3.5 expecte to be released soon  [1]. For now aiomysql passes tests against Python 3.5, but it would be nice if we merge `async/await` features from  https://github.com/aio-libs/aiomysql/compare/master...await\n\nAny thoughts on this?\n\n[1] https://www.python.org/dev/peps/pep-0478/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/25", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/25/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/25/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/25", "id": 96774207, "node_id": "MDU6SXNzdWU5Njc3NDIwNw==", "number": 25, "title": "ERROR:aiohttp.web:Error handling request", "user": {"login": "wsshopping", "id": 11690682, "node_id": "MDQ6VXNlcjExNjkwNjgy", "avatar_url": "https://avatars0.githubusercontent.com/u/11690682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wsshopping", "html_url": "https://github.com/wsshopping", "followers_url": "https://api.github.com/users/wsshopping/followers", "following_url": "https://api.github.com/users/wsshopping/following{/other_user}", "gists_url": "https://api.github.com/users/wsshopping/gists{/gist_id}", "starred_url": "https://api.github.com/users/wsshopping/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wsshopping/subscriptions", "organizations_url": "https://api.github.com/users/wsshopping/orgs", "repos_url": "https://api.github.com/users/wsshopping/repos", "events_url": "https://api.github.com/users/wsshopping/events{/privacy}", "received_events_url": "https://api.github.com/users/wsshopping/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-07-23T09:50:55Z", "updated_at": "2015-09-06T16:46:53Z", "closed_at": "2015-09-06T16:08:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "in my case\uff0ci use aiomysql for my httpserver\uff0ceverything is running OK\uff0cbut it raised a error after a day\uff0c more details as fallow:\n\n```\nINFO:root:SQL: select `id`, `rmdposter` from `video` where rmdposter<>''\nERROR:aiohttp.web:Error handling request\nTraceback (most recent call last):\n  File \"/root/.pyenv/versions/3.4.3/lib/python3.4/site-packages/aiomysql/connection.py\", line 466, in _read_packet\n    packet_header = yield from self._reader.readexactly(4)\n  File \"/root/.pyenv/versions/3.4.3/lib/python3.4/asyncio/streams.py\", line 482, in readexactly\n    raise IncompleteReadError(partial, len(partial) + n)\nasyncio.streams.IncompleteReadError: 0 bytes read on a total of 4 expected bytes\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/root/.pyenv/versions/3.4.3/lib/python3.4/site-packages/aiohttp/server.py\", line 272, in start\n    yield from self.handle_request(message, payload)\n  File \"/root/.pyenv/versions/3.4.3/lib/python3.4/site-packages/aiohttp/web.py\", line 84, in handle_request\n    resp = yield from handler(request)\n  File \"./app.py\", line 30, in logger\n    return (yield from handler(request))\n  File \"./app.py\", line 38, in response\n    r = yield from handler(request)\n  File \"/root/.pyenv/versions/3.4.3/lib/python3.4/asyncio/coroutines.py\", line 143, in coro\n    res = yield from res\n  File \"/diskb/dxb/code/python-webapp/httpserver/coroweb.py\", line 139, in __call__\n    r = yield from self._func(**kw)\n  File \"/root/.pyenv/versions/3.4.3/lib/python3.4/asyncio/coroutines.py\", line 143, in coro\n    res = yield from res\n  File \"/diskb/dxb/code/python-webapp/httpserver/handlers.py\", line 89, in api_get_media_recommend\n    dataList = yield from Media.getAssetRecommend(\"rmdposter<>'' \",args=None, type='index')\n  File \"/diskb/dxb/code/python-webapp/httpserver/orm.py\", line 239, in getAssetRecommend\n    rs = yield from select(' '.join(sql), args)\n  File \"/diskb/dxb/code/python-webapp/httpserver/orm.py\", line 36, in select\n    yield from cur.execute(sql.replace('?', '%s'), args or ())\n  File \"/root/.pyenv/versions/3.4.3/lib/python3.4/site-packages/aiomysql/cursors.py\", line 223, in execute\n    yield from self._query(query)\n  File \"/root/.pyenv/versions/3.4.3/lib/python3.4/site-packages/aiomysql/cursors.py\", line 444, in _query\n    yield from conn.query(q)\n  File \"/root/.pyenv/versions/3.4.3/lib/python3.4/site-packages/aiomysql/connection.py\", line 357, in query\n    yield from self._read_query_result(unbuffered=unbuffered)\n  File \"/root/.pyenv/versions/3.4.3/lib/python3.4/site-packages/aiomysql/connection.py\", line 497, in _read_query_result\n    yield from result.read()\n  File \"/root/.pyenv/versions/3.4.3/lib/python3.4/site-packages/aiomysql/connection.py\", line 688, in read\n    first_packet = yield from self.connection._read_packet()\n  File \"/root/.pyenv/versions/3.4.3/lib/python3.4/site-packages/aiomysql/connection.py\", line 477, in _read_packet\n    raise OperationalError(2006, msg % (exc,)) from exc\npymysql.err.OperationalError: (2006, 'MySQL server has gone away (0 bytes read on a total of 4 expected bytes)')\n```\n\nit seems that because of aiomysql , after i restart my case, everythig is OK,  how can i fix it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/22", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/22/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/22/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/22", "id": 93629370, "node_id": "MDU6SXNzdWU5MzYyOTM3MA==", "number": 22, "title": "LOAD LOCAL INFILE statement not work ", "user": {"login": "bitaps", "id": 13226638, "node_id": "MDQ6VXNlcjEzMjI2NjM4", "avatar_url": "https://avatars3.githubusercontent.com/u/13226638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitaps", "html_url": "https://github.com/bitaps", "followers_url": "https://api.github.com/users/bitaps/followers", "following_url": "https://api.github.com/users/bitaps/following{/other_user}", "gists_url": "https://api.github.com/users/bitaps/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitaps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitaps/subscriptions", "organizations_url": "https://api.github.com/users/bitaps/orgs", "repos_url": "https://api.github.com/users/bitaps/repos", "events_url": "https://api.github.com/users/bitaps/events{/privacy}", "received_events_url": "https://api.github.com/users/bitaps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-07T21:06:44Z", "updated_at": "2015-07-09T19:59:16Z", "closed_at": "2015-07-09T19:59:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mysql statment \"LOAD LOCAL INFILE ... \"  not working \n\n changelog PyMySQLt ## 0.6.4\n- Support \"LOAD LOCAL INFILE\". \n\nI try to use this LOAD LOCAL INFILE, using param client_flag: LOCAL_FILES  I turn on support local files for connection. But aiomysql return Exception on LOAD LOCAL INFILE statement. Please check and add this feature.\n\nThank you \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/20", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/20/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/20/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/20", "id": 91344004, "node_id": "MDU6SXNzdWU5MTM0NDAwNA==", "number": 20, "title": "Complare aiomysql.sa API with aiopg.sa and sync them", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-06-26T19:42:42Z", "updated_at": "2015-11-26T22:29:55Z", "closed_at": "2015-11-26T22:29:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/19", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/19/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/19/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/19", "id": 85818475, "node_id": "MDU6SXNzdWU4NTgxODQ3NQ==", "number": 19, "title": "python version for the __del__ method", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-06T22:41:20Z", "updated_at": "2015-06-07T10:42:15Z", "closed_at": "2015-06-07T10:42:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@asvetlov, for now we use `__del__` method with python `sys.version_info >= (3, 4)` but `aiohttp.TCPConnector` uses `sys.version_info >= (3, 4, 1)`. I am little bit confused should aiomysql have restriction `>= (3, 4, 1)` too?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/18", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/18/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/18/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/18", "id": 84704370, "node_id": "MDU6SXNzdWU4NDcwNDM3MA==", "number": 18, "title": "Make 'contributing' chapter in documentation ", "user": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-03T18:25:46Z", "updated_at": "2015-06-06T22:35:00Z", "closed_at": "2015-06-06T22:35:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Should be like http://aiohttp.readthedocs.org/en/v0.16.2/contributing.html\n\nThe main point is instruction how to setup mysql test database and user.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiomysql/issues/16", "repository_url": "https://api.github.com/repos/aio-libs/aiomysql", "labels_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/16/comments", "events_url": "https://api.github.com/repos/aio-libs/aiomysql/issues/16/events", "html_url": "https://github.com/aio-libs/aiomysql/issues/16", "id": 81387039, "node_id": "MDU6SXNzdWU4MTM4NzAzOQ==", "number": 16, "title": "Drop in connection in pool in case of error: server gone away", "user": {"login": "jettify", "id": 223335, "node_id": "MDQ6VXNlcjIyMzMzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/223335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jettify", "html_url": "https://github.com/jettify", "followers_url": "https://api.github.com/users/jettify/followers", "following_url": "https://api.github.com/users/jettify/following{/other_user}", "gists_url": "https://api.github.com/users/jettify/gists{/gist_id}", "starred_url": "https://api.github.com/users/jettify/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jettify/subscriptions", "organizations_url": "https://api.github.com/users/jettify/orgs", "repos_url": "https://api.github.com/users/jettify/repos", "events_url": "https://api.github.com/users/jettify/events{/privacy}", "received_events_url": "https://api.github.com/users/jettify/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-27T10:22:42Z", "updated_at": "2015-09-06T16:48:34Z", "closed_at": "2015-09-06T16:48:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We need to make sure that server gone away error handled correctly in connection itself:\nhttps://github.com/aio-libs/aiomysql/blob/master/aiomysql/connection.py#L414-L455\nand connection should not be returned to the connection pool, just simply dropped.\n\nEdit: fixed link\n", "performed_via_github_app": null, "score": 1.0}]}