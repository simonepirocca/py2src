{"total_count": 34, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/WoLpH/portalocker/issues/57", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/57/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/57/events", "html_url": "https://github.com/WoLpH/portalocker/issues/57", "id": 669759778, "node_id": "MDU6SXNzdWU2Njk3NTk3Nzg=", "number": 57, "title": "Rlock - with limit?", "user": {"login": "pliablepixels", "id": 4116654, "node_id": "MDQ6VXNlcjQxMTY2NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4116654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pliablepixels", "html_url": "https://github.com/pliablepixels", "followers_url": "https://api.github.com/users/pliablepixels/followers", "following_url": "https://api.github.com/users/pliablepixels/following{/other_user}", "gists_url": "https://api.github.com/users/pliablepixels/gists{/gist_id}", "starred_url": "https://api.github.com/users/pliablepixels/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pliablepixels/subscriptions", "organizations_url": "https://api.github.com/users/pliablepixels/orgs", "repos_url": "https://api.github.com/users/pliablepixels/repos", "events_url": "https://api.github.com/users/pliablepixels/events{/privacy}", "received_events_url": "https://api.github.com/users/pliablepixels/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-07-31T12:21:02Z", "updated_at": "2020-08-02T09:34:53Z", "closed_at": "2020-08-01T14:17:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for the library.\r\n\r\nI noticed a [PR](https://github.com/WoLpH/portalocker/pull/34/commits/fb46f59b2fca6a0053c95714d5afb2a9004fca03) in 2017 that introduces a reentrant lock  but the documentation doesn't seem to cover RLock.\r\n\r\nI was wondering if it is possible to enhance RLock with a lock count? In other words, I'd like to only allow `n` reentrant requests across all processes. \r\n\r\nMy usecase may be odd, but I thought it was very appropriate to try and use portallocker for my purpose: I have a GPU that has 4GB of RAM. I have multiple processes that try and invoke the GPU for deep learning operations and beyond 2-3 simultaneous calls, the GPU crashes. My idea therefore was to use this library to limit only 2 reentrant calls and make the others wait till the count goes back down. I could of course go the route of a queue, but this seems much simpler.\r\n\r\nthanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/56", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/56/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/56/events", "html_url": "https://github.com/WoLpH/portalocker/issues/56", "id": 658561124, "node_id": "MDU6SXNzdWU2NTg1NjExMjQ=", "number": 56, "title": "Distribution of `tests` in top level `site-packages`", "user": {"login": "vkomarov-r7", "id": 65631117, "node_id": "MDQ6VXNlcjY1NjMxMTE3", "avatar_url": "https://avatars3.githubusercontent.com/u/65631117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vkomarov-r7", "html_url": "https://github.com/vkomarov-r7", "followers_url": "https://api.github.com/users/vkomarov-r7/followers", "following_url": "https://api.github.com/users/vkomarov-r7/following{/other_user}", "gists_url": "https://api.github.com/users/vkomarov-r7/gists{/gist_id}", "starred_url": "https://api.github.com/users/vkomarov-r7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vkomarov-r7/subscriptions", "organizations_url": "https://api.github.com/users/vkomarov-r7/orgs", "repos_url": "https://api.github.com/users/vkomarov-r7/repos", "events_url": "https://api.github.com/users/vkomarov-r7/events{/privacy}", "received_events_url": "https://api.github.com/users/vkomarov-r7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-16T20:53:35Z", "updated_at": "2020-07-16T21:01:45Z", "closed_at": "2020-07-16T21:01:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nBased on our troubleshooting, we've found an issue with this package where the tests appear to be inadvertently shipped as part of the source distribution, and are put in the top level `python/3.x/site-packages/tests` folder. This is a problem for us during our test suite execution, as our imports are also located in a local folder called `tests`, but due to `sys.path` precedence, it appears that this package's tests are included as well.\r\n\r\nIf possible please change the installation of `tests` to no longer be installed in a top level directory. We are using this package via the `msal-extensions` package.\r\n\r\n# Steps to Reproduce\r\n\r\n1. Create a virtualenv: `python -m venv env`\r\n2. Activate: `source env/bin/activate`\r\n3. Install portalocker from PyPi: `pip install portalocker==1.7.0`\r\n4. Navigate to `venv/lib/python3.x/site-packages/tests`\r\n5. Observe all tests from `portalocker_tests` be present.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/55", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/55/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/55/events", "html_url": "https://github.com/WoLpH/portalocker/issues/55", "id": 641180194, "node_id": "MDU6SXNzdWU2NDExODAxOTQ=", "number": 55, "title": "ModuleNotFoundError", "user": {"login": "MMK21Hub", "id": 50421330, "node_id": "MDQ6VXNlcjUwNDIxMzMw", "avatar_url": "https://avatars1.githubusercontent.com/u/50421330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MMK21Hub", "html_url": "https://github.com/MMK21Hub", "followers_url": "https://api.github.com/users/MMK21Hub/followers", "following_url": "https://api.github.com/users/MMK21Hub/following{/other_user}", "gists_url": "https://api.github.com/users/MMK21Hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/MMK21Hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MMK21Hub/subscriptions", "organizations_url": "https://api.github.com/users/MMK21Hub/orgs", "repos_url": "https://api.github.com/users/MMK21Hub/repos", "events_url": "https://api.github.com/users/MMK21Hub/events{/privacy}", "received_events_url": "https://api.github.com/users/MMK21Hub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-06-18T12:48:10Z", "updated_at": "2020-08-02T00:36:40Z", "closed_at": "2020-08-02T00:36:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have a file that is:\r\n``` python\r\nimport portalocker\r\n```\r\nIt gives a ModuleNotFoundError:\r\n```\r\nNo module named 'portalocker'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/52", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/52/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/52/events", "html_url": "https://github.com/WoLpH/portalocker/issues/52", "id": 622064501, "node_id": "MDU6SXNzdWU2MjIwNjQ1MDE=", "number": 52, "title": "mode variable set but immediately overridden", "user": {"login": "naggie", "id": 208440, "node_id": "MDQ6VXNlcjIwODQ0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/208440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naggie", "html_url": "https://github.com/naggie", "followers_url": "https://api.github.com/users/naggie/followers", "following_url": "https://api.github.com/users/naggie/following{/other_user}", "gists_url": "https://api.github.com/users/naggie/gists{/gist_id}", "starred_url": "https://api.github.com/users/naggie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naggie/subscriptions", "organizations_url": "https://api.github.com/users/naggie/orgs", "repos_url": "https://api.github.com/users/naggie/repos", "events_url": "https://api.github.com/users/naggie/events{/privacy}", "received_events_url": "https://api.github.com/users/naggie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-20T20:29:52Z", "updated_at": "2020-08-02T12:11:51Z", "closed_at": "2020-08-02T00:42:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi @WoLpH ,\r\n\r\nI've been reading the code to figure out how to write a lock checker. Whilst looking at it I found what looks like a mistake:\r\n\r\nhttps://github.com/WoLpH/portalocker/blob/c34a48e5724b3874b7f5722a0192d213c81cf6c0/portalocker/portalocker.py#L51\r\n\r\n```\r\n            mode = win32con.LOCKFILE_EXCLUSIVE_LOCK\r\n            if flags & constants.LOCK_NB:\r\n                mode |= win32con.LOCKFILE_FAIL_IMMEDIATELY\r\n\r\n            if flags & constants.LOCK_NB:\r\n                mode = msvcrt.LK_NBLCK\r\n            else:\r\n                mode = msvcrt.LK_LOCK\r\n```\r\n\r\nIt seems that mode will always be set to `msvcrt.LK_NBLCK` or `mode = msvcrt.LK_LOCK` making the first 3 lines in the snippet redundant.\r\n\r\nAre the assignments supposed to set a bit instead of the entire variable? If not, assuming the 2 methods have the same affect, should the first 3 lines just be removed?\r\n\r\n\r\nThanks!\r\nCallan", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/51", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/51/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/51/events", "html_url": "https://github.com/WoLpH/portalocker/issues/51", "id": 612565096, "node_id": "MDU6SXNzdWU2MTI1NjUwOTY=", "number": 51, "title": "Depends on old and unsupported pytest-pep8", "user": {"login": "PureTryOut", "id": 1565836, "node_id": "MDQ6VXNlcjE1NjU4MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1565836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PureTryOut", "html_url": "https://github.com/PureTryOut", "followers_url": "https://api.github.com/users/PureTryOut/followers", "following_url": "https://api.github.com/users/PureTryOut/following{/other_user}", "gists_url": "https://api.github.com/users/PureTryOut/gists{/gist_id}", "starred_url": "https://api.github.com/users/PureTryOut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PureTryOut/subscriptions", "organizations_url": "https://api.github.com/users/PureTryOut/orgs", "repos_url": "https://api.github.com/users/PureTryOut/repos", "events_url": "https://api.github.com/users/PureTryOut/events{/privacy}", "received_events_url": "https://api.github.com/users/PureTryOut/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-05T12:29:27Z", "updated_at": "2020-05-06T08:25:03Z", "closed_at": "2020-05-06T08:25:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/WoLpH/portalocker/blob/develop/setup.py#L32\r\n\r\npytest-pep8 hasn't seen a commit since 2015, and depends on pep8 which nowadays has been replaced for pycodestyle. Please update the tests to work with pycodestyle instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/49", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/49/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/49/events", "html_url": "https://github.com/WoLpH/portalocker/issues/49", "id": 583557720, "node_id": "MDU6SXNzdWU1ODM1NTc3MjA=", "number": 49, "title": "Lock file gets blocked on Windows if put in user home directory and not unlocked explicitly", "user": {"login": "olegver", "id": 20181171, "node_id": "MDQ6VXNlcjIwMTgxMTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/20181171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olegver", "html_url": "https://github.com/olegver", "followers_url": "https://api.github.com/users/olegver/followers", "following_url": "https://api.github.com/users/olegver/following{/other_user}", "gists_url": "https://api.github.com/users/olegver/gists{/gist_id}", "starred_url": "https://api.github.com/users/olegver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olegver/subscriptions", "organizations_url": "https://api.github.com/users/olegver/orgs", "repos_url": "https://api.github.com/users/olegver/repos", "events_url": "https://api.github.com/users/olegver/events{/privacy}", "received_events_url": "https://api.github.com/users/olegver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-03-18T08:33:55Z", "updated_at": "2020-03-24T08:14:42Z", "closed_at": "2020-03-24T01:41:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is more a question for now, since I'm trying to find what the exact problem is.\r\n\r\nI work on Windows 10 and have a problem with a lock file at ~/.myapp/lock.\r\n\r\nI used a library called [msal-extensions](https://github.com/AzureAD/microsoft-authentication-extensions-for-python), which relies on portalocker to lock the token cache. The details are not important, here is the code of their [lock class](https://github.com/AzureAD/microsoft-authentication-extensions-for-python/blob/dev/msal_extensions/cache_lock.py):\r\n```python\r\nclass CrossPlatLock(object):\r\n    \"\"\"Offers a mechanism for waiting until another process is finished interacting with a shared\r\n    resource. This is specifically written to interact with a class of the same name in the .NET\r\n    extensions library.\r\n    \"\"\"\r\n    def __init__(self, lockfile_path):\r\n        self._lockpath = lockfile_path\r\n        self._fh = None\r\n\r\n    def __enter__(self):\r\n        pid = os.getpid()\r\n\r\n        self._fh = open(self._lockpath, 'wb+', buffering=0)\r\n        portalocker.lock(self._fh, portalocker.LOCK_EX)\r\n        self._fh.write('{} {}'.format(pid, sys.argv[0]).encode('utf-8'))\r\n\r\n    def __exit__(self, *args):\r\n        self._fh.close()\r\n        try:\r\n            # Attempt to delete the lockfile. In either of the failure cases enumerated below, it is\r\n            # likely that another process has raced this one and ended up clearing or locking the\r\n            # file for itself.\r\n            os.remove(self._lockpath)\r\n        except OSError as ex:\r\n            if ex.errno != errno.ENOENT and ex.errno != errno.EACCES:\r\n                raise\r\n```\r\nAs you can see, upon exit the file handle is closed and then removed (relying on portalocker to unlock it). However the file (or something) remains in the filesystem and becomes completely blocked by an unknown process (tried processexplorer and handle to figure it out - I can only see that it's blocked by SYSTEM). As a result the consequent calls result in 'Access denied' exception. \r\n\r\nI've tried to play with it and found out that:\r\n- if I remove writing to the file inside `__enter__` - it works;\r\n- if I explicitly call `portalocker.unlock` **before** closing the file inside `__exit__` - it also works.\r\n\r\nCan you provide any help/thoughts on where the problem is? I've submitted [a bug to msal-extensions](https://github.com/AzureAD/microsoft-authentication-extensions-for-python/issues/42) as well, but they also asked me to check with portalocker.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/48", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/48/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/48/events", "html_url": "https://github.com/WoLpH/portalocker/issues/48", "id": 521127467, "node_id": "MDU6SXNzdWU1MjExMjc0Njc=", "number": 48, "title": "The upsteam package pywin32 latest version 226 has an issue", "user": {"login": "rayluo", "id": 821550, "node_id": "MDQ6VXNlcjgyMTU1MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/821550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rayluo", "html_url": "https://github.com/rayluo", "followers_url": "https://api.github.com/users/rayluo/followers", "following_url": "https://api.github.com/users/rayluo/following{/other_user}", "gists_url": "https://api.github.com/users/rayluo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rayluo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rayluo/subscriptions", "organizations_url": "https://api.github.com/users/rayluo/orgs", "repos_url": "https://api.github.com/users/rayluo/repos", "events_url": "https://api.github.com/users/rayluo/events{/privacy}", "received_events_url": "https://api.github.com/users/rayluo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-11T18:52:52Z", "updated_at": "2019-11-12T01:11:03Z", "closed_at": "2019-11-11T23:08:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Rick,\r\n\r\nThanks for your work on PortALocker!\r\n\r\nIts upsteam package pywin32's latest version 226 has an issue\r\nhttps://github.com/mhammond/pywin32/issues/1439\r\n\r\nwhich has ripple effects in all the downstream packages, including popular Microsoft Azure SDK package https://github.com/Azure/azure-sdk-for-python/issues/8573\r\n\r\nAs the direct dependent of pywin32, would you consider to issue a temporary patch to pin `pywin32<=225`?\r\n\r\nCC: @chlowell", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/44", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/44/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/44/events", "html_url": "https://github.com/WoLpH/portalocker/issues/44", "id": 459793808, "node_id": "MDU6SXNzdWU0NTk3OTM4MDg=", "number": 44, "title": "tests directory", "user": {"login": "dbaio", "id": 2529335, "node_id": "MDQ6VXNlcjI1MjkzMzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2529335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbaio", "html_url": "https://github.com/dbaio", "followers_url": "https://api.github.com/users/dbaio/followers", "following_url": "https://api.github.com/users/dbaio/following{/other_user}", "gists_url": "https://api.github.com/users/dbaio/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbaio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbaio/subscriptions", "organizations_url": "https://api.github.com/users/dbaio/orgs", "repos_url": "https://api.github.com/users/dbaio/repos", "events_url": "https://api.github.com/users/dbaio/events{/privacy}", "received_events_url": "https://api.github.com/users/dbaio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-24T09:45:01Z", "updated_at": "2019-07-12T13:32:08Z", "closed_at": "2019-07-12T13:32:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\n\r\nPlease, remove the `tests` directory of the distribution, it conflicts with other packages.\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/43", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/43/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/43/events", "html_url": "https://github.com/WoLpH/portalocker/issues/43", "id": 436811987, "node_id": "MDU6SXNzdWU0MzY4MTE5ODc=", "number": 43, "title": "DOC: clarify \"[portalocker is] an extended version of portalocker [...]\"", "user": {"login": "jbrockmendel", "id": 8078968, "node_id": "MDQ6VXNlcjgwNzg5Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbrockmendel", "html_url": "https://github.com/jbrockmendel", "followers_url": "https://api.github.com/users/jbrockmendel/followers", "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}", "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions", "organizations_url": "https://api.github.com/users/jbrockmendel/orgs", "repos_url": "https://api.github.com/users/jbrockmendel/repos", "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}", "received_events_url": "https://api.github.com/users/jbrockmendel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-24T17:12:12Z", "updated_at": "2019-05-25T11:32:46Z", "closed_at": "2019-05-25T11:32:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Nitpick asking for clarification in a couple places.  The one-line summary for this repo reads \"An extended version of portalocker to lock files in Python using the with statement\" and the one-line summary on pypi reads \"Wraps the portalocker recipe for easy usage\"\r\n\r\nThese make it sound like there is another package also called portalocker that this is wrapping.  can these be re-worded to clarify whether or not there exist two separate projects?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/42", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/42/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/42/events", "html_url": "https://github.com/WoLpH/portalocker/issues/42", "id": 406269458, "node_id": "MDU6SXNzdWU0MDYyNjk0NTg=", "number": 42, "title": "Passing arguments to underlying open()", "user": {"login": "aunsbjerg", "id": 1454086, "node_id": "MDQ6VXNlcjE0NTQwODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1454086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aunsbjerg", "html_url": "https://github.com/aunsbjerg", "followers_url": "https://api.github.com/users/aunsbjerg/followers", "following_url": "https://api.github.com/users/aunsbjerg/following{/other_user}", "gists_url": "https://api.github.com/users/aunsbjerg/gists{/gist_id}", "starred_url": "https://api.github.com/users/aunsbjerg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aunsbjerg/subscriptions", "organizations_url": "https://api.github.com/users/aunsbjerg/orgs", "repos_url": "https://api.github.com/users/aunsbjerg/repos", "events_url": "https://api.github.com/users/aunsbjerg/events{/privacy}", "received_events_url": "https://api.github.com/users/aunsbjerg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-04T10:42:11Z", "updated_at": "2019-02-11T12:37:40Z", "closed_at": "2019-02-11T12:36:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now, it doesn't seem to be possible to pass argument to `file.open()` when using the `with portalocker.Lock()` construct. For instance, I would like to be able to open a csv file with a specific newline argument, like so:\r\n\r\n```python\r\nwith portalocker.Lock('test.csv', 'a', timeout=1, newline='') as csvfile:\r\n    writer = csv.writer(csvfile)\r\n```\r\n\r\nI imagine that the `Lock()` constructor could take a `**kwargs` as the last arguments, which is then passed on to `file.open()`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/41", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/41/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/41/events", "html_url": "https://github.com/WoLpH/portalocker/issues/41", "id": 389392575, "node_id": "MDU6SXNzdWUzODkzOTI1NzU=", "number": 41, "title": "Do you mind/can you say which file has this `Permission denied` on the trackback?", "user": {"login": "evandrocoan", "id": 5332158, "node_id": "MDQ6VXNlcjUzMzIxNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5332158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evandrocoan", "html_url": "https://github.com/evandrocoan", "followers_url": "https://api.github.com/users/evandrocoan/followers", "following_url": "https://api.github.com/users/evandrocoan/following{/other_user}", "gists_url": "https://api.github.com/users/evandrocoan/gists{/gist_id}", "starred_url": "https://api.github.com/users/evandrocoan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evandrocoan/subscriptions", "organizations_url": "https://api.github.com/users/evandrocoan/orgs", "repos_url": "https://api.github.com/users/evandrocoan/repos", "events_url": "https://api.github.com/users/evandrocoan/events{/privacy}", "received_events_url": "https://api.github.com/users/evandrocoan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-10T16:53:41Z", "updated_at": "2018-12-17T02:07:32Z", "closed_at": "2018-12-17T02:06:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"f:\\python\\lib\\site-packages\\portalocker\\portalocker.py\", line 58, in unlock\r\n    msvcrt.locking(file_.fileno(), constants.LOCK_UN, 0x7fffffff)\r\nPermissionError: [Errno 13] Permission denied\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"F:\\Python\\lib\\logging\\__init__.py\", line 1940, in shutdown\r\n    h.close()\r\n  File \"F:\\SublimeText\\Data\\Packages\\concurrentloghandler\\all\\concurrent_log_handler\\__init__.py\", line 320, in close\r\n    unlock(self.stream_lock)\r\n  File \"f:\\python\\lib\\site-packages\\portalocker\\portalocker.py\", line 61, in unlock\r\n    exceptions.LockException.LOCK_FAILED, exc_value.strerror)\r\nportalocker.exceptions.LockException: (1, 'Permission denied')\r\n```\r\n\r\nDo you mind/can you say which file has this `Permission denied` on the trackback?\r\n\r\nBecause I do not know which one it is.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/40", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/40/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/40/events", "html_url": "https://github.com/WoLpH/portalocker/issues/40", "id": 374973329, "node_id": "MDU6SXNzdWUzNzQ5NzMzMjk=", "number": 40, "title": "Opening a write-locked file, but can't find contents (when opening a pickled pandas DataFrame)", "user": {"login": "mar-ses", "id": 17413212, "node_id": "MDQ6VXNlcjE3NDEzMjEy", "avatar_url": "https://avatars2.githubusercontent.com/u/17413212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mar-ses", "html_url": "https://github.com/mar-ses", "followers_url": "https://api.github.com/users/mar-ses/followers", "following_url": "https://api.github.com/users/mar-ses/following{/other_user}", "gists_url": "https://api.github.com/users/mar-ses/gists{/gist_id}", "starred_url": "https://api.github.com/users/mar-ses/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mar-ses/subscriptions", "organizations_url": "https://api.github.com/users/mar-ses/orgs", "repos_url": "https://api.github.com/users/mar-ses/repos", "events_url": "https://api.github.com/users/mar-ses/events{/privacy}", "received_events_url": "https://api.github.com/users/mar-ses/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-29T11:33:46Z", "updated_at": "2018-10-31T08:25:51Z", "closed_at": "2018-10-30T15:16:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I posted a stackoverflow post about this: https://stackoverflow.com/questions/53044203/write-locked-file-sometimes-cant-find-contents-when-opening-a-pickled-pandas-d\r\n\r\nBasically, I need to write-lock  a `.pickle` file, read it, add a row, and save it again. This is done by up to 300 hundred simultaneous processes on the same file, they're adding data.\r\n\r\nAnyway, the issue I'm getting is that as I increase the number of simultaneous processes, I start to get an error where a process will obtain write-lock, but isn't able to find the contents somehow. So the read fails. Here's my code:\r\n\r\n    with portalocker.Lock('/path/to/file.pickle', 'rb+', timeout=120) as file:\r\n        file.seek(0)\r\n        df = pd.read_pickle(file)\r\n\r\n        # ADD A ROW TO THE DATAFRAME\r\n\r\n        # The following part might not be great,\r\n        # I'm trying to remove the old contents of the file first so I overwrite\r\n        # and not append, not sure if this is required or if there's\r\n        # a better way to do this.\r\n        file.seek(0)\r\n        file.truncate()\r\n        df.to_pickle(file)\r\n\r\nIt fails at `pd.read_pickle`. I get a convoluted traceback from pandas, and the following error:\r\n\r\n`EOFError: Ran out of input`\r\n\r\nThe contents _are_ there afterwards (like after all the processes finish, I have no problem reading the DataFrame. Not to mention,  some (most) of the processes end up finding the contents and updating the DataFrame without a hitch. But with 300 hundred simultaneous processes, up to 30-40% end up failing.\r\n\r\nSince it works sometimes but not all the time, I assumed it must be some problem where the previous process saves the file and exits write-lock, but the contents don't get saved in time or for some reason can't be read if the next process opens up the file too early. Is this possible in any way?\r\n\r\nAlso, since you're the experts here, perhaps my code above could use improvements, I'd been glad to hear if there's a better way of doing it.\r\n\r\nEDIT: Another thing I wanted to ask is; what happens if the write-lock waits for too long but times out? I gave it 120 seconds which seemed enough to me (I estimate on average I have about 2.5 writes per second, for a 300KB pickle file). I tried adding a flag that would trip if the write-lock timed out, but is there a way to make `portalocker.Lock` return an error if it times out, just to be sure?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/39", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/39/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/39/events", "html_url": "https://github.com/WoLpH/portalocker/issues/39", "id": 317904151, "node_id": "MDU6SXNzdWUzMTc5MDQxNTE=", "number": 39, "title": "PyWin32 as dependency?", "user": {"login": "lazuka13", "id": 8972055, "node_id": "MDQ6VXNlcjg5NzIwNTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8972055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lazuka13", "html_url": "https://github.com/lazuka13", "followers_url": "https://api.github.com/users/lazuka13/followers", "following_url": "https://api.github.com/users/lazuka13/following{/other_user}", "gists_url": "https://api.github.com/users/lazuka13/gists{/gist_id}", "starred_url": "https://api.github.com/users/lazuka13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lazuka13/subscriptions", "organizations_url": "https://api.github.com/users/lazuka13/orgs", "repos_url": "https://api.github.com/users/lazuka13/repos", "events_url": "https://api.github.com/users/lazuka13/events{/privacy}", "received_events_url": "https://api.github.com/users/lazuka13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-26T07:12:32Z", "updated_at": "2018-05-03T07:49:00Z", "closed_at": "2018-05-03T07:49:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nNot sure if thats an issue, but I had to install pywin32 on Windows 10 myself, shouldn't it be listed somewhere or shouldn't it be installed in a portalocker installation process as a depedency? (I'm not quite good at writing setup.py files, so can't provide PR, but I beleve this problem can be solved by adding package name somewhere) \r\nWin 10, Python 3.6.4, virtualenv", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/38", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/38/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/38/events", "html_url": "https://github.com/WoLpH/portalocker/issues/38", "id": 292942718, "node_id": "MDU6SXNzdWUyOTI5NDI3MTg=", "number": 38, "title": "Add pypiwin32 as dependency on setup.py", "user": {"login": "evandrocoan", "id": 5332158, "node_id": "MDQ6VXNlcjUzMzIxNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5332158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/evandrocoan", "html_url": "https://github.com/evandrocoan", "followers_url": "https://api.github.com/users/evandrocoan/followers", "following_url": "https://api.github.com/users/evandrocoan/following{/other_user}", "gists_url": "https://api.github.com/users/evandrocoan/gists{/gist_id}", "starred_url": "https://api.github.com/users/evandrocoan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/evandrocoan/subscriptions", "organizations_url": "https://api.github.com/users/evandrocoan/orgs", "repos_url": "https://api.github.com/users/evandrocoan/repos", "events_url": "https://api.github.com/users/evandrocoan/events{/privacy}", "received_events_url": "https://api.github.com/users/evandrocoan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-01-30T21:25:18Z", "updated_at": "2019-11-11T23:49:34Z", "closed_at": "2018-03-07T17:26:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/Preston-Landers/concurrent-log-handler/issues/3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/36", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/36/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/36/events", "html_url": "https://github.com/WoLpH/portalocker/issues/36", "id": 225890148, "node_id": "MDU6SXNzdWUyMjU4OTAxNDg=", "number": 36, "title": "AttributeError: 'msvcrt' object has no attribute 'LK_RLOCK'", "user": {"login": "junfenggood", "id": 11310696, "node_id": "MDQ6VXNlcjExMzEwNjk2", "avatar_url": "https://avatars1.githubusercontent.com/u/11310696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/junfenggood", "html_url": "https://github.com/junfenggood", "followers_url": "https://api.github.com/users/junfenggood/followers", "following_url": "https://api.github.com/users/junfenggood/following{/other_user}", "gists_url": "https://api.github.com/users/junfenggood/gists{/gist_id}", "starred_url": "https://api.github.com/users/junfenggood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/junfenggood/subscriptions", "organizations_url": "https://api.github.com/users/junfenggood/orgs", "repos_url": "https://api.github.com/users/junfenggood/repos", "events_url": "https://api.github.com/users/junfenggood/events{/privacy}", "received_events_url": "https://api.github.com/users/junfenggood/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "WoLpH", "id": 270571, "node_id": "MDQ6VXNlcjI3MDU3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/270571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WoLpH", "html_url": "https://github.com/WoLpH", "followers_url": "https://api.github.com/users/WoLpH/followers", "following_url": "https://api.github.com/users/WoLpH/following{/other_user}", "gists_url": "https://api.github.com/users/WoLpH/gists{/gist_id}", "starred_url": "https://api.github.com/users/WoLpH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WoLpH/subscriptions", "organizations_url": "https://api.github.com/users/WoLpH/orgs", "repos_url": "https://api.github.com/users/WoLpH/repos", "events_url": "https://api.github.com/users/WoLpH/events{/privacy}", "received_events_url": "https://api.github.com/users/WoLpH/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "WoLpH", "id": 270571, "node_id": "MDQ6VXNlcjI3MDU3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/270571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WoLpH", "html_url": "https://github.com/WoLpH", "followers_url": "https://api.github.com/users/WoLpH/followers", "following_url": "https://api.github.com/users/WoLpH/following{/other_user}", "gists_url": "https://api.github.com/users/WoLpH/gists{/gist_id}", "starred_url": "https://api.github.com/users/WoLpH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WoLpH/subscriptions", "organizations_url": "https://api.github.com/users/WoLpH/orgs", "repos_url": "https://api.github.com/users/WoLpH/repos", "events_url": "https://api.github.com/users/WoLpH/events{/privacy}", "received_events_url": "https://api.github.com/users/WoLpH/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2017-05-03T05:54:59Z", "updated_at": "2018-03-07T17:26:39Z", "closed_at": "2018-03-07T17:26:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use this package in Windows  OS, code is following:\r\n```\r\nimport portalocker\r\nimport time\r\n\r\nf = open(\"z:\\\\test1.txt\",\"r\")\r\nportalocker.lock(f,portalocker.LOCK_SH)\r\nf.write(\"hello, from  windows\\n\")\r\nf.flush()\r\ntime.sleep(300)\r\n\r\nf.close()\r\n\r\nprint \"done\"\r\n\r\n```\r\nBut errors raised:\r\n**Traceback (most recent call last):\r\n  File \"C:/Users/cifsuser10/Desktop/test.py\", line 5, in <module>\r\n    portalocker.lock(f,portalocker.LOCK_SH)\r\n  File \"C:\\Python27\\lib\\site-packages\\portalocker\\portalocker.py\", line 14, in lock\r\n    mode = msvcrt.LK_RLOCK\r\nAttributeError: 'module' object has no attribute 'LK_RLOCK'**\r\n\r\nI check the mode msvcrt.\r\n>>> dir(msvcrt)\r\n**['CRT_ASSEMBLY_VERSION', 'LIBRARIES_ASSEMBLY_NAME_PREFIX', 'LK_LOCK', 'LK_NBLCK', 'LK_NBRLCK', 'LK_RLCK', 'LK_UNLCK', 'VC_ASSEMBLY_PUBLICKEYTOKEN', '__doc__', '__name__', '__package__', 'get_osfhandle', 'getch', 'getche', 'getwch', 'getwche', 'heapmin', 'kbhit', 'locking', 'open_osfhandle', 'putch', 'putwch', 'setmode', 'ungetch', 'ungetwch']**\r\n\r\nNo 'LK_RLOCK', but similar 'LK_RLCK', so, I think maybe this is a bug(Python 2.7.13, Windows Server 2012)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/35", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/35/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/35/events", "html_url": "https://github.com/WoLpH/portalocker/issues/35", "id": 216584726, "node_id": "MDU6SXNzdWUyMTY1ODQ3MjY=", "number": 35, "title": "Support for other Unixes", "user": {"login": "bmw", "id": 6504915, "node_id": "MDQ6VXNlcjY1MDQ5MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6504915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmw", "html_url": "https://github.com/bmw", "followers_url": "https://api.github.com/users/bmw/followers", "following_url": "https://api.github.com/users/bmw/following{/other_user}", "gists_url": "https://api.github.com/users/bmw/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmw/subscriptions", "organizations_url": "https://api.github.com/users/bmw/orgs", "repos_url": "https://api.github.com/users/bmw/repos", "events_url": "https://api.github.com/users/bmw/events{/privacy}", "received_events_url": "https://api.github.com/users/bmw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-23T21:55:48Z", "updated_at": "2017-03-23T23:33:33Z", "closed_at": "2017-03-23T23:33:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Unix, `portalocker` uses `flock()` which isn't part of the POSIX standard and is unavailable on Unix systems like [Solaris](https://www.perkin.org.uk/posts/solaris-portability-flock.html). I'd like to use `portalocker` in one of my projects, but we have some users on more obscure Unix systems like Solaris that we don't want to break compatibility with. The alternative to `flock()` is `lockf()` or `fcntl()` which are part of the [POSIX](http://pubs.opengroup.org/onlinepubs/009695399/functions/lockf.html) [standard](http://pubs.opengroup.org/onlinepubs/009695399/functions/fcntl.html) and have the additional benefit of (more likely) [working across NFS](http://0pointer.de/blog/projects/locking.html) better than `flock()`.\r\n\r\nWould you be willing to either:\r\n\r\n1. Switch to `lockf()` or `fcntl()` over `flock()` on POSIX systems.\r\n2. Fall back to `lockf()` or `fcntl()` if `flock()` is unavailable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/31", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/31/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/31/events", "html_url": "https://github.com/WoLpH/portalocker/issues/31", "id": 190865095, "node_id": "MDU6SXNzdWUxOTA4NjUwOTU=", "number": 31, "title": "Does portalocker support python 3.5.2 win?", "user": {"login": "vitidev", "id": 2243958, "node_id": "MDQ6VXNlcjIyNDM5NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2243958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitidev", "html_url": "https://github.com/vitidev", "followers_url": "https://api.github.com/users/vitidev/followers", "following_url": "https://api.github.com/users/vitidev/following{/other_user}", "gists_url": "https://api.github.com/users/vitidev/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitidev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitidev/subscriptions", "organizations_url": "https://api.github.com/users/vitidev/orgs", "repos_url": "https://api.github.com/users/vitidev/repos", "events_url": "https://api.github.com/users/vitidev/events{/privacy}", "received_events_url": "https://api.github.com/users/vitidev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "WoLpH", "id": 270571, "node_id": "MDQ6VXNlcjI3MDU3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/270571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WoLpH", "html_url": "https://github.com/WoLpH", "followers_url": "https://api.github.com/users/WoLpH/followers", "following_url": "https://api.github.com/users/WoLpH/following{/other_user}", "gists_url": "https://api.github.com/users/WoLpH/gists{/gist_id}", "starred_url": "https://api.github.com/users/WoLpH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WoLpH/subscriptions", "organizations_url": "https://api.github.com/users/WoLpH/orgs", "repos_url": "https://api.github.com/users/WoLpH/repos", "events_url": "https://api.github.com/users/WoLpH/events{/privacy}", "received_events_url": "https://api.github.com/users/WoLpH/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "WoLpH", "id": 270571, "node_id": "MDQ6VXNlcjI3MDU3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/270571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WoLpH", "html_url": "https://github.com/WoLpH", "followers_url": "https://api.github.com/users/WoLpH/followers", "following_url": "https://api.github.com/users/WoLpH/following{/other_user}", "gists_url": "https://api.github.com/users/WoLpH/gists{/gist_id}", "starred_url": "https://api.github.com/users/WoLpH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WoLpH/subscriptions", "organizations_url": "https://api.github.com/users/WoLpH/orgs", "repos_url": "https://api.github.com/users/WoLpH/repos", "events_url": "https://api.github.com/users/WoLpH/events{/privacy}", "received_events_url": "https://api.github.com/users/WoLpH/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 15, "created_at": "2016-11-21T23:23:46Z", "updated_at": "2018-03-08T09:46:06Z", "closed_at": "2018-03-08T09:46:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Windows 7 x64, python 3.5.2\r\n\r\ncode from example, 'somefile' exists and writeable\r\n`file = open('somefile', 'r+')\r\nportalocker.lock(file, portalocker.LOCK_EX)`\r\n\r\ncrashed with message\r\n`Process finished with exit code -1073740777 (0xC0000417)`\r\n[stack overflow/stack exhaustion]( http://stackoverflow.com/questions/20629027/process-finished-with-exit-code-1073741571)\r\non line 33  in portalocker.py\r\n`msvcrt.locking(file_.fileno(), mode, -1)`\r\n\r\nBut that is not all. Rewrite code to\r\n`portalocker.lock(file, portalocker.LOCK_SH)`\r\nand script fail with message\r\n\r\nFile \"C:\\Python\\lib\\site-packages\\portalocker\\portalocker.py\", line 14, in lock\r\n    mode = msvcrt.LK_RLOCK\r\nAttributeError: module 'msvcrt' has no attribute 'LK_RLOCK'\r\n\r\n![mcvcrt](https://cloud.githubusercontent.com/assets/2243958/20504712/9cae9724-b051-11e6-8e17-cbbb6aae7d32.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/29", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/29/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/29/events", "html_url": "https://github.com/WoLpH/portalocker/issues/29", "id": 184265586, "node_id": "MDU6SXNzdWUxODQyNjU1ODY=", "number": 29, "title": "Shared locks with msvcrt backend", "user": {"login": "matekatona", "id": 11950266, "node_id": "MDQ6VXNlcjExOTUwMjY2", "avatar_url": "https://avatars2.githubusercontent.com/u/11950266?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matekatona", "html_url": "https://github.com/matekatona", "followers_url": "https://api.github.com/users/matekatona/followers", "following_url": "https://api.github.com/users/matekatona/following{/other_user}", "gists_url": "https://api.github.com/users/matekatona/gists{/gist_id}", "starred_url": "https://api.github.com/users/matekatona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matekatona/subscriptions", "organizations_url": "https://api.github.com/users/matekatona/orgs", "repos_url": "https://api.github.com/users/matekatona/repos", "events_url": "https://api.github.com/users/matekatona/events{/privacy}", "received_events_url": "https://api.github.com/users/matekatona/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 789258190, "node_id": "MDU6TGFiZWw3ODkyNTgxOTA=", "url": "https://api.github.com/repos/WoLpH/portalocker/labels/help%20wanted", "name": "help wanted", "color": "0e8a16", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "WoLpH", "id": 270571, "node_id": "MDQ6VXNlcjI3MDU3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/270571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WoLpH", "html_url": "https://github.com/WoLpH", "followers_url": "https://api.github.com/users/WoLpH/followers", "following_url": "https://api.github.com/users/WoLpH/following{/other_user}", "gists_url": "https://api.github.com/users/WoLpH/gists{/gist_id}", "starred_url": "https://api.github.com/users/WoLpH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WoLpH/subscriptions", "organizations_url": "https://api.github.com/users/WoLpH/orgs", "repos_url": "https://api.github.com/users/WoLpH/repos", "events_url": "https://api.github.com/users/WoLpH/events{/privacy}", "received_events_url": "https://api.github.com/users/WoLpH/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "WoLpH", "id": 270571, "node_id": "MDQ6VXNlcjI3MDU3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/270571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WoLpH", "html_url": "https://github.com/WoLpH", "followers_url": "https://api.github.com/users/WoLpH/followers", "following_url": "https://api.github.com/users/WoLpH/following{/other_user}", "gists_url": "https://api.github.com/users/WoLpH/gists{/gist_id}", "starred_url": "https://api.github.com/users/WoLpH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WoLpH/subscriptions", "organizations_url": "https://api.github.com/users/WoLpH/orgs", "repos_url": "https://api.github.com/users/WoLpH/repos", "events_url": "https://api.github.com/users/WoLpH/events{/privacy}", "received_events_url": "https://api.github.com/users/WoLpH/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2016-10-20T15:40:58Z", "updated_at": "2018-03-08T09:46:12Z", "closed_at": "2018-03-08T09:46:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wrote a script a while ago using portalocker 0.5.5, which locked a file with `LOCK_SH | LOCK_NB`, then copied it with `shutil.copyfile()`. This prevented modifying the file during copying (large files, shared network drives).\n\nI recently upgraded to 1.0.0, then the copy failed with a Permission denied error. I checked the changes, and verified, that the old `win32file.LockFileEx()` function allows `shutil.copyfile()` to access the file locked with a shared lock (but prevents modifications), but the new `msvcrt.locking()` function does not (I solved my issue by using `shutil.copyfileobj()` instead)\n\nI checked the documentation of [`msvcrt.locking()`](https://msdn.microsoft.com/en-us/library/8054ew2f.aspx) (which is used since 0.6), and it says nothing about sharing the lock with other processes. It even states, that `_LK_NBRLCK` (equivalent to `LOCK_SH | LOCK_NB`) is the same as `_LK_NBLCK` (equivalent to `LOCK_EX | LOCK_NB`). \n\nDoes this still count as a shared lock?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/28", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/28/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/28/events", "html_url": "https://github.com/WoLpH/portalocker/issues/28", "id": 180671028, "node_id": "MDU6SXNzdWUxODA2NzEwMjg=", "number": 28, "title": "How to remove the .lock file after the unlock?", "user": {"login": "joanlopez", "id": 5459617, "node_id": "MDQ6VXNlcjU0NTk2MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5459617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joanlopez", "html_url": "https://github.com/joanlopez", "followers_url": "https://api.github.com/users/joanlopez/followers", "following_url": "https://api.github.com/users/joanlopez/following{/other_user}", "gists_url": "https://api.github.com/users/joanlopez/gists{/gist_id}", "starred_url": "https://api.github.com/users/joanlopez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joanlopez/subscriptions", "organizations_url": "https://api.github.com/users/joanlopez/orgs", "repos_url": "https://api.github.com/users/joanlopez/repos", "events_url": "https://api.github.com/users/joanlopez/events{/privacy}", "received_events_url": "https://api.github.com/users/joanlopez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-03T15:30:47Z", "updated_at": "2017-01-30T22:17:57Z", "closed_at": "2017-01-30T22:17:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm currently using this library in a Python application.\n\nIt is working quite good, but although it works, it does not remove the `.lock` file after the unlock.\n\nThere's any way/option to do it? The existence of this file while there are no locking processes is quite confusing.\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/27", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/27/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/27/events", "html_url": "https://github.com/WoLpH/portalocker/issues/27", "id": 175162976, "node_id": "MDU6SXNzdWUxNzUxNjI5NzY=", "number": 27, "title": "Document locking gotcha's on Linux", "user": {"login": "techtonik", "id": 515889, "node_id": "MDQ6VXNlcjUxNTg4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techtonik", "html_url": "https://github.com/techtonik", "followers_url": "https://api.github.com/users/techtonik/followers", "following_url": "https://api.github.com/users/techtonik/following{/other_user}", "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}", "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions", "organizations_url": "https://api.github.com/users/techtonik/orgs", "repos_url": "https://api.github.com/users/techtonik/repos", "events_url": "https://api.github.com/users/techtonik/events{/privacy}", "received_events_url": "https://api.github.com/users/techtonik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-06T05:27:22Z", "updated_at": "2016-09-27T20:37:33Z", "closed_at": "2016-09-27T20:37:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "From #23 people need to know that Linux doesn't have mandatory locking, validate that and get to know what workarounds portalocker helps in this situation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/25", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/25/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/25/events", "html_url": "https://github.com/WoLpH/portalocker/issues/25", "id": 175161810, "node_id": "MDU6SXNzdWUxNzUxNjE4MTA=", "number": 25, "title": "Link to docs into project header", "user": {"login": "techtonik", "id": 515889, "node_id": "MDQ6VXNlcjUxNTg4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techtonik", "html_url": "https://github.com/techtonik", "followers_url": "https://api.github.com/users/techtonik/followers", "following_url": "https://api.github.com/users/techtonik/following{/other_user}", "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}", "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions", "organizations_url": "https://api.github.com/users/techtonik/orgs", "repos_url": "https://api.github.com/users/techtonik/repos", "events_url": "https://api.github.com/users/techtonik/events{/privacy}", "received_events_url": "https://api.github.com/users/techtonik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-06T05:15:35Z", "updated_at": "2017-03-31T10:48:59Z", "closed_at": "2016-09-06T10:43:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Github allows to set URL in project header, and to make people read docs, it is better to redirect them there,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/24", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/24/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/24/events", "html_url": "https://github.com/WoLpH/portalocker/issues/24", "id": 175161603, "node_id": "MDU6SXNzdWUxNzUxNjE2MDM=", "number": 24, "title": "print portalocker.__version__", "user": {"login": "techtonik", "id": 515889, "node_id": "MDQ6VXNlcjUxNTg4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techtonik", "html_url": "https://github.com/techtonik", "followers_url": "https://api.github.com/users/techtonik/followers", "following_url": "https://api.github.com/users/techtonik/following{/other_user}", "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}", "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions", "organizations_url": "https://api.github.com/users/techtonik/orgs", "repos_url": "https://api.github.com/users/techtonik/repos", "events_url": "https://api.github.com/users/techtonik/events{/privacy}", "received_events_url": "https://api.github.com/users/techtonik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-06T05:13:06Z", "updated_at": "2016-09-27T20:30:44Z", "closed_at": "2016-09-27T20:30:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Right now it is not clear how to find used version of `portalocker` in a project through API.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/23", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/23/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/23/events", "html_url": "https://github.com/WoLpH/portalocker/issues/23", "id": 175137980, "node_id": "MDU6SXNzdWUxNzUxMzc5ODA=", "number": 23, "title": "stackoverflow user says it's not locking", "user": {"login": "techtonik", "id": 515889, "node_id": "MDQ6VXNlcjUxNTg4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techtonik", "html_url": "https://github.com/techtonik", "followers_url": "https://api.github.com/users/techtonik/followers", "following_url": "https://api.github.com/users/techtonik/following{/other_user}", "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}", "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions", "organizations_url": "https://api.github.com/users/techtonik/orgs", "repos_url": "https://api.github.com/users/techtonik/repos", "events_url": "https://api.github.com/users/techtonik/events{/privacy}", "received_events_url": "https://api.github.com/users/techtonik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-05T23:59:33Z", "updated_at": "2016-09-06T00:22:26Z", "closed_at": "2016-09-06T00:22:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://stackoverflow.com/questions/39292051/portalocker-does-not-seem-to-lock\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/21", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/21/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/21/events", "html_url": "https://github.com/WoLpH/portalocker/issues/21", "id": 175120688, "node_id": "MDU6SXNzdWUxNzUxMjA2ODg=", "number": 21, "title": "\"portalocker is in an unsupported or invalid wheel\"", "user": {"login": "martinunsal", "id": 5266224, "node_id": "MDQ6VXNlcjUyNjYyMjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5266224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinunsal", "html_url": "https://github.com/martinunsal", "followers_url": "https://api.github.com/users/martinunsal/followers", "following_url": "https://api.github.com/users/martinunsal/following{/other_user}", "gists_url": "https://api.github.com/users/martinunsal/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinunsal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinunsal/subscriptions", "organizations_url": "https://api.github.com/users/martinunsal/orgs", "repos_url": "https://api.github.com/users/martinunsal/repos", "events_url": "https://api.github.com/users/martinunsal/events{/privacy}", "received_events_url": "https://api.github.com/users/martinunsal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-05T19:40:12Z", "updated_at": "2016-09-06T00:50:06Z", "closed_at": "2016-09-06T00:42:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "$ pip --no-cache-dir install portalocker\nCollecting portalocker\n  Downloading portalocker-0.6.0-py2.py3-none-any.whl\nInstalling collected packages: portalocker\nportalocker is in an unsupported or invalid wheel\n$ uname -a\nLinux martin-desktop 4.4.0-34-generic #53~14.04.1-Ubuntu SMP Wed Jul 27 16:56:40 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n$ \n\n0.6.0 seems to have been uploaded today so perhaps this is a bad release?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/17", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/17/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/17/events", "html_url": "https://github.com/WoLpH/portalocker/issues/17", "id": 164491883, "node_id": "MDU6SXNzdWUxNjQ0OTE4ODM=", "number": 17, "title": "Change the error message showed when the resource is locked", "user": {"login": "joanlopez", "id": 5459617, "node_id": "MDQ6VXNlcjU0NTk2MTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5459617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joanlopez", "html_url": "https://github.com/joanlopez", "followers_url": "https://api.github.com/users/joanlopez/followers", "following_url": "https://api.github.com/users/joanlopez/following{/other_user}", "gists_url": "https://api.github.com/users/joanlopez/gists{/gist_id}", "starred_url": "https://api.github.com/users/joanlopez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joanlopez/subscriptions", "organizations_url": "https://api.github.com/users/joanlopez/orgs", "repos_url": "https://api.github.com/users/joanlopez/repos", "events_url": "https://api.github.com/users/joanlopez/events{/privacy}", "received_events_url": "https://api.github.com/users/joanlopez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-08T09:24:25Z", "updated_at": "2016-07-08T11:18:30Z", "closed_at": "2016-07-08T11:18:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Now I'm putting the exclusive code inside the next statement: `with portalocker.Lock():`.\n\nIt works well, but..\n\n**Is there any way to change the given message when there's another process using the resource?**\n\nNow I'm getting:\n\n> [CRITICAL] Unhandled exception on Autosubmit: [Errno 11] Resource temporarily unavailable\n> Traceback (most recent call last):\n> ...\n> ...\n> AlreadyLocked: [Errno 11] Resource temporarily unavailable\n\nWhich is an ugly error and it is not intuitive for the users. Is it possible to show another message more friendly for the users? \n\nFor example: \"There is another instance of Autosubmit running this experiment, stop it before continue, please\". Or something similar.\n\nSurely you are agree with me that the traceback of all the Python error is useless and unpleasant for the users.\n\n*Autosubmit is the tool that i'm developing.\n\nMany thanks ;)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/15", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/15/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/15/events", "html_url": "https://github.com/WoLpH/portalocker/issues/15", "id": 146099413, "node_id": "MDU6SXNzdWUxNDYwOTk0MTM=", "number": 15, "title": "Lock.acquire() does not have a matching release() method.", "user": {"login": "bwbeach", "id": 603739, "node_id": "MDQ6VXNlcjYwMzczOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/603739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bwbeach", "html_url": "https://github.com/bwbeach", "followers_url": "https://api.github.com/users/bwbeach/followers", "following_url": "https://api.github.com/users/bwbeach/following{/other_user}", "gists_url": "https://api.github.com/users/bwbeach/gists{/gist_id}", "starred_url": "https://api.github.com/users/bwbeach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bwbeach/subscriptions", "organizations_url": "https://api.github.com/users/bwbeach/orgs", "repos_url": "https://api.github.com/users/bwbeach/repos", "events_url": "https://api.github.com/users/bwbeach/events{/privacy}", "received_events_url": "https://api.github.com/users/bwbeach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-04-05T20:21:29Z", "updated_at": "2016-04-06T22:47:42Z", "closed_at": "2016-04-06T22:47:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "My understanding is that the Python convention on locks is to have methods `acquire` and `release` for callers who want to manage releasing themselves, and `__enter__` and `__exit__` for those using the lock as a context manager.  portalocker.Lock has everything but `release`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/14", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/14/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/14/events", "html_url": "https://github.com/WoLpH/portalocker/issues/14", "id": 144859447, "node_id": "MDU6SXNzdWUxNDQ4NTk0NDc=", "number": 14, "title": "Read lock danger", "user": {"login": "petef4", "id": 2046639, "node_id": "MDQ6VXNlcjIwNDY2Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2046639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petef4", "html_url": "https://github.com/petef4", "followers_url": "https://api.github.com/users/petef4/followers", "following_url": "https://api.github.com/users/petef4/following{/other_user}", "gists_url": "https://api.github.com/users/petef4/gists{/gist_id}", "starred_url": "https://api.github.com/users/petef4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petef4/subscriptions", "organizations_url": "https://api.github.com/users/petef4/orgs", "repos_url": "https://api.github.com/users/petef4/repos", "events_url": "https://api.github.com/users/petef4/events{/privacy}", "received_events_url": "https://api.github.com/users/petef4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-31T10:47:00Z", "updated_at": "2016-09-27T20:31:16Z", "closed_at": "2016-09-27T20:31:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to make a read lock. I spotted from the docs that the default mode is append, which is a bit dangerous already, so I set the mode to read.\n\n```\nIn [208]: lock = portalocker.Lock(pathname, mode='r')\n\nIn [209]: lock.acquire()\n---------------------------------------------------------------------------\nIOError                                   Traceback (most recent call last)\n<ipython-input-209-394e97d7f4d5> in <module>()\n----> 1 lock.acquire()\n\n/home/pforman/workspace/ipy27/lib/python2.7/site-packages/portalocker/utils.pyc in acquire(self, timeout, check_interval, fail_when_locked)\n    105\n    106         # Prepare the filehandle (truncate if needed)\n--> 107         fh = self._prepare_fh(fh)\n    108\n    109         self.fh = fh\n\n/home/pforman/workspace/ipy27/lib/python2.7/site-packages/portalocker/utils.pyc in _prepare_fh(self, fh, truncate)\n    134         if truncate is not None:\n    135             fh.seek(truncate)\n--> 136             fh.truncate(truncate)\n    137\n    138         return fh\n\nIOError: File not open for writing\n```\n\nScary stuff. I see now that I also need to set `truncate=None`.\n\nMy problem would have been avoided by changing the default in `Lock.__init__()` to `truncate=None`.\n\nThe default Lock is effectively `mode='w'` but that is not obvious from `mode='a', truncate=0`. Indeed it will be surprising when `Lock(pathname, mode='a')` truncates your file and discards the contents you thought you were appending to.\n\nI suggest that the default for mode be set to 'r' and truncate and flags default to None. The mode argument should then drive other defaulting, e.g. `flags is None and 'r' in mode and not '+' in mode => self.flags = LOCK_SH | LOCK_NB`. You might represent 'w' in the mode argument as 'W' in self.mode to maintain the truncate only after successful lock action; there are probably better ways of achieving that result.\n\nFurther to that I do not think there should be any truncate variables. The work done in `_prepare_fh` can be simplified to `fh.seek(0); fh.truncate()` if write mode was specified in `__init__`. Let the user do their own seek if they want do something other than overwrite or append.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/13", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/13/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/13/events", "html_url": "https://github.com/WoLpH/portalocker/issues/13", "id": 140934031, "node_id": "MDU6SXNzdWUxNDA5MzQwMzE=", "number": 13, "title": "supported versions on Pypi not current", "user": {"login": "obestwalter", "id": 263007, "node_id": "MDQ6VXNlcjI2MzAwNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/263007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obestwalter", "html_url": "https://github.com/obestwalter", "followers_url": "https://api.github.com/users/obestwalter/followers", "following_url": "https://api.github.com/users/obestwalter/following{/other_user}", "gists_url": "https://api.github.com/users/obestwalter/gists{/gist_id}", "starred_url": "https://api.github.com/users/obestwalter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obestwalter/subscriptions", "organizations_url": "https://api.github.com/users/obestwalter/orgs", "repos_url": "https://api.github.com/users/obestwalter/repos", "events_url": "https://api.github.com/users/obestwalter/events{/privacy}", "received_events_url": "https://api.github.com/users/obestwalter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-15T10:36:44Z", "updated_at": "2016-03-15T11:06:49Z", "closed_at": "2016-03-15T11:06:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://pypi.python.org/pypi/portalocker/0.5.7\n\n```\nProgramming Language :: Python :: 2.5\nProgramming Language :: Python :: 2.6\nProgramming Language :: Python :: 2.7\nProgramming Language :: Python :: 3\nProgramming Language :: Python :: 3.1\n```\n\nvs .travis.yml:\n\n```\npython:\n    - '2.6'\n    - '2.7'\n    - '3.3'\n    - '3.4'\n    - '3.5'\n    - 'pypy'\n    - 'pypy3'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/12", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/12/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/12/events", "html_url": "https://github.com/WoLpH/portalocker/issues/12", "id": 137391525, "node_id": "MDU6SXNzdWUxMzczOTE1MjU=", "number": 12, "title": "unsupported or invalid wheel", "user": {"login": "patkan", "id": 4189642, "node_id": "MDQ6VXNlcjQxODk2NDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4189642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patkan", "html_url": "https://github.com/patkan", "followers_url": "https://api.github.com/users/patkan/followers", "following_url": "https://api.github.com/users/patkan/following{/other_user}", "gists_url": "https://api.github.com/users/patkan/gists{/gist_id}", "starred_url": "https://api.github.com/users/patkan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patkan/subscriptions", "organizations_url": "https://api.github.com/users/patkan/orgs", "repos_url": "https://api.github.com/users/patkan/repos", "events_url": "https://api.github.com/users/patkan/events{/privacy}", "received_events_url": "https://api.github.com/users/patkan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-29T22:03:32Z", "updated_at": "2016-04-06T22:49:45Z", "closed_at": "2016-04-06T22:49:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to install the version `0.5.7` from PyPi with pip `8.0.3` on Python `2.7` the installation of `portalocker` fails with the message `portalocker is in an unsupported or invalid wheel`.\nThis also happens on a travis-instance running Python `2.7`. Installation on a Python `3.4` instance however works without problem.\nI suspect, without further inspection, that the wheel that you provide is not compatible with `2.7`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/11", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/11/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/11/events", "html_url": "https://github.com/WoLpH/portalocker/issues/11", "id": 125145088, "node_id": "MDU6SXNzdWUxMjUxNDUwODg=", "number": 11, "title": "Doesn't work on Ubuntu 14.04, python 2.7.6?", "user": {"login": "vladiibine", "id": 6544669, "node_id": "MDQ6VXNlcjY1NDQ2Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6544669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladiibine", "html_url": "https://github.com/vladiibine", "followers_url": "https://api.github.com/users/vladiibine/followers", "following_url": "https://api.github.com/users/vladiibine/following{/other_user}", "gists_url": "https://api.github.com/users/vladiibine/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladiibine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladiibine/subscriptions", "organizations_url": "https://api.github.com/users/vladiibine/orgs", "repos_url": "https://api.github.com/users/vladiibine/repos", "events_url": "https://api.github.com/users/vladiibine/events{/privacy}", "received_events_url": "https://api.github.com/users/vladiibine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-06T09:57:14Z", "updated_at": "2016-04-06T22:47:56Z", "closed_at": "2016-04-06T22:47:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I did this in one python console (the file already existed)\n\n```\nimport portalocker as pl\nf1 = open('./asdf', 'w')\npl.lock(f1, pl.LOCK_EX)\n```\n\nThen in another python console I did this\n\n```\nf1 = open('./asdf', 'w')\nf1.write('zzzzzzzzzzzzzzzzfdffffffffffffffffffffffffff')\nf1.close()\n```\n\nThen I do this in a bash console\n\n```\n$ cat ./asdf\nzzzzzzzzzzzzzzzzfdffffffffffffffffffffffffff\n```\n\nAm I missing something about how this is supposed to work, or does it just not lock the file?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/10", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/10/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/10/events", "html_url": "https://github.com/WoLpH/portalocker/issues/10", "id": 124328458, "node_id": "MDU6SXNzdWUxMjQzMjg0NTg=", "number": 10, "title": "Allow to specify lock method while creating lock ", "user": {"login": "suhas-babyoye", "id": 14162675, "node_id": "MDQ6VXNlcjE0MTYyNjc1", "avatar_url": "https://avatars2.githubusercontent.com/u/14162675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suhas-babyoye", "html_url": "https://github.com/suhas-babyoye", "followers_url": "https://api.github.com/users/suhas-babyoye/followers", "following_url": "https://api.github.com/users/suhas-babyoye/following{/other_user}", "gists_url": "https://api.github.com/users/suhas-babyoye/gists{/gist_id}", "starred_url": "https://api.github.com/users/suhas-babyoye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suhas-babyoye/subscriptions", "organizations_url": "https://api.github.com/users/suhas-babyoye/orgs", "repos_url": "https://api.github.com/users/suhas-babyoye/repos", "events_url": "https://api.github.com/users/suhas-babyoye/events{/privacy}", "received_events_url": "https://api.github.com/users/suhas-babyoye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-12-30T09:59:13Z", "updated_at": "2016-01-06T23:24:12Z", "closed_at": "2015-12-30T14:21:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the first method mentioned in the examples here, http://portalocker.readthedocs.org/en/latest/usage.html#examples , the lock method is hard coded to the following in portalocker/utils.py:\n\n```\nLOCK_METHOD = portalocker.LOCK_EX | portalocker.LOCK_NB\n```\n\nInstead of doing it that way, could we specify the lock method in the constructor? Or could it be determined based on whether the file is being used for read or write? This Lock object has the timeout functionality which is useful while opening files for reading(if they are locked for writing). But there is no need for LOCK_EX in 'r' mode. \n\nPlease let me know if I missed something. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/9", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/9/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/9/events", "html_url": "https://github.com/WoLpH/portalocker/issues/9", "id": 122320959, "node_id": "MDU6SXNzdWUxMjIzMjA5NTk=", "number": 9, "title": "Enable appveyor builds to test windows", "user": {"login": "WoLpH", "id": 270571, "node_id": "MDQ6VXNlcjI3MDU3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/270571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WoLpH", "html_url": "https://github.com/WoLpH", "followers_url": "https://api.github.com/users/WoLpH/followers", "following_url": "https://api.github.com/users/WoLpH/following{/other_user}", "gists_url": "https://api.github.com/users/WoLpH/gists{/gist_id}", "starred_url": "https://api.github.com/users/WoLpH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WoLpH/subscriptions", "organizations_url": "https://api.github.com/users/WoLpH/orgs", "repos_url": "https://api.github.com/users/WoLpH/repos", "events_url": "https://api.github.com/users/WoLpH/events{/privacy}", "received_events_url": "https://api.github.com/users/WoLpH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-12-15T17:13:08Z", "updated_at": "2016-09-05T15:43:50Z", "closed_at": "2016-09-05T15:43:50Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://ci.appveyor.com/project/WoLpH/portalocker\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/5", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/5/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/5/events", "html_url": "https://github.com/WoLpH/portalocker/issues/5", "id": 32368875, "node_id": "MDU6SXNzdWUzMjM2ODg3NQ==", "number": 5, "title": "Python3 support", "user": {"login": "alessio", "id": 229356, "node_id": "MDQ6VXNlcjIyOTM1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/229356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alessio", "html_url": "https://github.com/alessio", "followers_url": "https://api.github.com/users/alessio/followers", "following_url": "https://api.github.com/users/alessio/following{/other_user}", "gists_url": "https://api.github.com/users/alessio/gists{/gist_id}", "starred_url": "https://api.github.com/users/alessio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alessio/subscriptions", "organizations_url": "https://api.github.com/users/alessio/orgs", "repos_url": "https://api.github.com/users/alessio/repos", "events_url": "https://api.github.com/users/alessio/events{/privacy}", "received_events_url": "https://api.github.com/users/alessio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-28T15:22:16Z", "updated_at": "2014-04-29T14:36:31Z", "closed_at": "2014-04-29T14:36:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nPlease port the package to Python3.\n\nThanks for considering.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/WoLpH/portalocker/issues/2", "repository_url": "https://api.github.com/repos/WoLpH/portalocker", "labels_url": "https://api.github.com/repos/WoLpH/portalocker/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/WoLpH/portalocker/issues/2/comments", "events_url": "https://api.github.com/repos/WoLpH/portalocker/issues/2/events", "html_url": "https://github.com/WoLpH/portalocker/issues/2", "id": 28781800, "node_id": "MDU6SXNzdWUyODc4MTgwMA==", "number": 2, "title": "Porting portalocker to use msvcrt instead of win32con", "user": {"login": "techtonik", "id": 515889, "node_id": "MDQ6VXNlcjUxNTg4OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/515889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/techtonik", "html_url": "https://github.com/techtonik", "followers_url": "https://api.github.com/users/techtonik/followers", "following_url": "https://api.github.com/users/techtonik/following{/other_user}", "gists_url": "https://api.github.com/users/techtonik/gists{/gist_id}", "starred_url": "https://api.github.com/users/techtonik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/techtonik/subscriptions", "organizations_url": "https://api.github.com/users/techtonik/orgs", "repos_url": "https://api.github.com/users/techtonik/repos", "events_url": "https://api.github.com/users/techtonik/events{/privacy}", "received_events_url": "https://api.github.com/users/techtonik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2014-03-05T11:09:49Z", "updated_at": "2016-09-05T23:49:34Z", "closed_at": "2016-09-05T23:49:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If you compare http://code.activestate.com/recipes/65203-portalocker-cross-platform-posixnt-api-for-flock-s/ with file in this repo, you will notice a lot of meaningless changes. I'd revert the quotes back to original, because there are a lot of portalocker copies out there that needs to be synced.\n", "performed_via_github_app": null, "score": 1.0}]}