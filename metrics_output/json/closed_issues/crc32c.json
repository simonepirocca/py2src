{"total_count": 10, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ICRAR/crc32c/issues/15", "repository_url": "https://api.github.com/repos/ICRAR/crc32c", "labels_url": "https://api.github.com/repos/ICRAR/crc32c/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/ICRAR/crc32c/issues/15/comments", "events_url": "https://api.github.com/repos/ICRAR/crc32c/issues/15/events", "html_url": "https://github.com/ICRAR/crc32c/issues/15", "id": 646003004, "node_id": "MDU6SXNzdWU2NDYwMDMwMDQ=", "number": 15, "title": "Binary wheels seem to be missing for py38 windows and mac", "user": {"login": "christopher-hesse", "id": 48501609, "node_id": "MDQ6VXNlcjQ4NTAxNjA5", "avatar_url": "https://avatars3.githubusercontent.com/u/48501609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christopher-hesse", "html_url": "https://github.com/christopher-hesse", "followers_url": "https://api.github.com/users/christopher-hesse/followers", "following_url": "https://api.github.com/users/christopher-hesse/following{/other_user}", "gists_url": "https://api.github.com/users/christopher-hesse/gists{/gist_id}", "starred_url": "https://api.github.com/users/christopher-hesse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christopher-hesse/subscriptions", "organizations_url": "https://api.github.com/users/christopher-hesse/orgs", "repos_url": "https://api.github.com/users/christopher-hesse/repos", "events_url": "https://api.github.com/users/christopher-hesse/events{/privacy}", "received_events_url": "https://api.github.com/users/christopher-hesse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 621388402, "node_id": "MDU6TGFiZWw2MjEzODg0MDI=", "url": "https://api.github.com/repos/ICRAR/crc32c/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-26T04:42:49Z", "updated_at": "2020-06-29T05:26:18Z", "closed_at": "2020-06-29T05:26:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "These would be nice to have, as python 3.9 is almost out.  If getting this to work with travis/appveyor is tough, the new github actions does windows/mac/linux and is pretty slick.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ICRAR/crc32c/issues/14", "repository_url": "https://api.github.com/repos/ICRAR/crc32c", "labels_url": "https://api.github.com/repos/ICRAR/crc32c/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/ICRAR/crc32c/issues/14/comments", "events_url": "https://api.github.com/repos/ICRAR/crc32c/issues/14/events", "html_url": "https://github.com/ICRAR/crc32c/issues/14", "id": 579600375, "node_id": "MDU6SXNzdWU1Nzk2MDAzNzU=", "number": 14, "title": "Example calculating crc32c from file?", "user": {"login": "vsoch", "id": 814322, "node_id": "MDQ6VXNlcjgxNDMyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/814322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsoch", "html_url": "https://github.com/vsoch", "followers_url": "https://api.github.com/users/vsoch/followers", "following_url": "https://api.github.com/users/vsoch/following{/other_user}", "gists_url": "https://api.github.com/users/vsoch/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsoch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsoch/subscriptions", "organizations_url": "https://api.github.com/users/vsoch/orgs", "repos_url": "https://api.github.com/users/vsoch/repos", "events_url": "https://api.github.com/users/vsoch/events{/privacy}", "received_events_url": "https://api.github.com/users/vsoch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 621388405, "node_id": "MDU6TGFiZWw2MjEzODg0MDU=", "url": "https://api.github.com/repos/ICRAR/crc32c/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-03-11T23:24:37Z", "updated_at": "2020-03-12T03:26:18Z", "closed_at": "2020-03-12T03:26:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking for an example to calculate the has directly from a file - I'm hoping it's something similar to hashlib where you can stream chunks and update a hasher object. I looked at the testing file, but it looks like there are only tests for byte strings defined directly there. My goal is to be able to validate downloads from Google Storage based on this checksum, since they are provided with the objects. Thanks in advance for your help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ICRAR/crc32c/issues/12", "repository_url": "https://api.github.com/repos/ICRAR/crc32c", "labels_url": "https://api.github.com/repos/ICRAR/crc32c/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/ICRAR/crc32c/issues/12/comments", "events_url": "https://api.github.com/repos/ICRAR/crc32c/issues/12/events", "html_url": "https://github.com/ICRAR/crc32c/issues/12", "id": 512285382, "node_id": "MDU6SXNzdWU1MTIyODUzODI=", "number": 12, "title": "Changing package import logic", "user": {"login": "rtobar", "id": 620848, "node_id": "MDQ6VXNlcjYyMDg0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/620848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtobar", "html_url": "https://github.com/rtobar", "followers_url": "https://api.github.com/users/rtobar/followers", "following_url": "https://api.github.com/users/rtobar/following{/other_user}", "gists_url": "https://api.github.com/users/rtobar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtobar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtobar/subscriptions", "organizations_url": "https://api.github.com/users/rtobar/orgs", "repos_url": "https://api.github.com/users/rtobar/repos", "events_url": "https://api.github.com/users/rtobar/events{/privacy}", "received_events_url": "https://api.github.com/users/rtobar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 621388402, "node_id": "MDU6TGFiZWw2MjEzODg0MDI=", "url": "https://api.github.com/repos/ICRAR/crc32c/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-25T03:37:17Z", "updated_at": "2019-12-02T04:22:50Z", "closed_at": "2019-12-02T04:22:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue is to change the package's import logic. At the moment the package fails to import in platforms where no hardware support is found (i.e., anything other than Intel SSE4.2-capable CPUs) **unless** an environment variable, specified beforehand, instructs the package to expose its software implementation instead.\r\n\r\nThis package initially contained *only* an Intel-based crc32c implementation, but with time a software implementation was incorporated but the importing logic was maintained for backwards compatibility. With the advent of the software implementation (#4) the importing logic has been highlighted as being not necessarily ideal (#5 and #11).\r\n\r\nAn improved logic, and what most users seem to expect, would work as follow: by default a hardware-based implementation would be offered. If this cannot be offered, the software implementation would be offered instead. This way the package would never fail to import. This would imply that the `CRC32C_SW_MODE` variable would become deprecated (we could issue such a deprecation warning upon seeing it). Additionally I would still like it to be clear when a hardware implementation is exposed and when not -- maybe this can be done by attaching an attribute to the `crc32c` function, or at the package level. This way people relying on a fast, hardware-based implementation can still check if this is the case and act accordingly.\r\n\r\nSince this would be a breaking change (with not too grave consequences though), this would need a bump on the package's major version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ICRAR/crc32c/issues/9", "repository_url": "https://api.github.com/repos/ICRAR/crc32c", "labels_url": "https://api.github.com/repos/ICRAR/crc32c/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/ICRAR/crc32c/issues/9/comments", "events_url": "https://api.github.com/repos/ICRAR/crc32c/issues/9/events", "html_url": "https://github.com/ICRAR/crc32c/issues/9", "id": 408490564, "node_id": "MDU6SXNzdWU0MDg0OTA1NjQ=", "number": 9, "title": "Mac wheels for 1.7", "user": {"login": "kislyuk", "id": 862013, "node_id": "MDQ6VXNlcjg2MjAxMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/862013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kislyuk", "html_url": "https://github.com/kislyuk", "followers_url": "https://api.github.com/users/kislyuk/followers", "following_url": "https://api.github.com/users/kislyuk/following{/other_user}", "gists_url": "https://api.github.com/users/kislyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kislyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kislyuk/subscriptions", "organizations_url": "https://api.github.com/users/kislyuk/orgs", "repos_url": "https://api.github.com/users/kislyuk/repos", "events_url": "https://api.github.com/users/kislyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/kislyuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-10T01:41:27Z", "updated_at": "2019-06-05T10:28:08Z", "closed_at": "2019-06-05T10:28:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Thanks again for this great package. I just wanted to point out that pre-built wheels (which are immensely useful) are missing for Mac OS in the latest released version, 1.7. Hopefully they can be added.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ICRAR/crc32c/issues/8", "repository_url": "https://api.github.com/repos/ICRAR/crc32c", "labels_url": "https://api.github.com/repos/ICRAR/crc32c/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/ICRAR/crc32c/issues/8/comments", "events_url": "https://api.github.com/repos/ICRAR/crc32c/issues/8/events", "html_url": "https://github.com/ICRAR/crc32c/issues/8", "id": 400166590, "node_id": "MDU6SXNzdWU0MDAxNjY1OTA=", "number": 8, "title": "Source tarball for version 1.6 is broken", "user": {"login": "jlaine", "id": 1567624, "node_id": "MDQ6VXNlcjE1Njc2MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1567624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlaine", "html_url": "https://github.com/jlaine", "followers_url": "https://api.github.com/users/jlaine/followers", "following_url": "https://api.github.com/users/jlaine/following{/other_user}", "gists_url": "https://api.github.com/users/jlaine/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlaine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlaine/subscriptions", "organizations_url": "https://api.github.com/users/jlaine/orgs", "repos_url": "https://api.github.com/users/jlaine/repos", "events_url": "https://api.github.com/users/jlaine/events{/privacy}", "received_events_url": "https://api.github.com/users/jlaine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-17T08:44:33Z", "updated_at": "2019-01-21T00:23:30Z", "closed_at": "2019-01-20T14:12:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I don't know what happened during the release process but the source tarball on PyPI does not match what is on github, and fails to build:\r\n\r\n```\r\nRunning crc32c-1.6/setup.py -q bdist_egg --dist-dir /var/folders/nz/vv4_9tw56nv9k3tkvyszvwg80000gn/T/easy_install-c6x4oqdy/crc32c-1.6/egg-dist-tmp-tbmrrl9s\r\n_crc32c.c:69:15: error: use of undeclared identifier 'crc32c_crc32_sw'; did you mean 'crc32c_crc32'?\r\n        {\"crc32_sw\", crc32c_crc32_sw, METH_VARARGS, \"Calculate crc32c using a software implementation.\"},\r\n                     ^~~~~~~~~~~~~~~\r\n                     crc32c_crc32\r\n_crc32c.c:40:11: note: 'crc32c_crc32' declared here\r\nPyObject* crc32c_crc32(PyObject *self, PyObject *args) {\r\n```\r\n\r\nSee:\r\nhttps://travis-ci.org/jlaine/aiortc/jobs/480762373\r\n\r\nThis is the offending diff:\r\n\r\n```patch\r\n--- github/_crc32c.c     2019-01-17 07:25:02.610620597 +0100\r\n+++ pypi/_crc32c.c   2019-01-17 08:08:56.000000000 +0100\r\n@@ -65,7 +65,8 @@\r\n \r\n \r\n static PyMethodDef CRC32CMethods[] = {\r\n-       {\"crc32\",   crc32c_crc32,   METH_VARARGS, \"Calculate crc32c using Intel SSE4.2 instruction.\"},\r\n+       {\"crc32\",    crc32c_crc32,    METH_VARARGS, \"Calculate crc32c using Intel SSE4.2 instruction.\"},\r\n+       {\"crc32_sw\", crc32c_crc32_sw, METH_VARARGS, \"Calculate crc32c using a software implementation.\"},\r\n        {NULL, NULL, 0, NULL}        /* Sentinel */\r\n };\r\n \r\n```\r\n\r\nCould you please bin this release and push out an 1.7 version? (replacing files is not an option, it's going to be on pypi mirrors by now)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ICRAR/crc32c/issues/6", "repository_url": "https://api.github.com/repos/ICRAR/crc32c", "labels_url": "https://api.github.com/repos/ICRAR/crc32c/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/ICRAR/crc32c/issues/6/comments", "events_url": "https://api.github.com/repos/ICRAR/crc32c/issues/6/events", "html_url": "https://github.com/ICRAR/crc32c/issues/6", "id": 399702563, "node_id": "MDU6SXNzdWUzOTk3MDI1NjM=", "number": 6, "title": "Building on non-Intel platforms", "user": {"login": "jlaine", "id": 1567624, "node_id": "MDQ6VXNlcjE1Njc2MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1567624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlaine", "html_url": "https://github.com/jlaine", "followers_url": "https://api.github.com/users/jlaine/followers", "following_url": "https://api.github.com/users/jlaine/following{/other_user}", "gists_url": "https://api.github.com/users/jlaine/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlaine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlaine/subscriptions", "organizations_url": "https://api.github.com/users/jlaine/orgs", "repos_url": "https://api.github.com/users/jlaine/repos", "events_url": "https://api.github.com/users/jlaine/events{/privacy}", "received_events_url": "https://api.github.com/users/jlaine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-16T08:44:30Z", "updated_at": "2019-01-17T07:30:08Z", "closed_at": "2019-01-17T07:08:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "First of all thanks for making this package available! I'm making use of this package in `aiortc`, a Python implementation of WebRTC, as the SCTP layer uses crc32c checksums. The performance with SSE instructions is amazing, but what's more even the software implementation is faster that `crcmod`.\r\n\r\nIt was recently brought to my attention that attempting to build the package on non-Intel platforms fails, due to the SSE-specific compiler flags (https://github.com/jlaine/aiortc/issues/119), so I've had to add a fallback to `crcmod`.\r\n\r\nGiven that you already have a plain C implementation, how hard would it be to adjust the build system to skip the SSE version altogether on non-Intel platfoms?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ICRAR/crc32c/issues/5", "repository_url": "https://api.github.com/repos/ICRAR/crc32c", "labels_url": "https://api.github.com/repos/ICRAR/crc32c/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/ICRAR/crc32c/issues/5/comments", "events_url": "https://api.github.com/repos/ICRAR/crc32c/issues/5/events", "html_url": "https://github.com/ICRAR/crc32c/issues/5", "id": 364902711, "node_id": "MDU6SXNzdWUzNjQ5MDI3MTE=", "number": 5, "title": "Change access to software implementation", "user": {"login": "nlgranger", "id": 3764009, "node_id": "MDQ6VXNlcjM3NjQwMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3764009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nlgranger", "html_url": "https://github.com/nlgranger", "followers_url": "https://api.github.com/users/nlgranger/followers", "following_url": "https://api.github.com/users/nlgranger/following{/other_user}", "gists_url": "https://api.github.com/users/nlgranger/gists{/gist_id}", "starred_url": "https://api.github.com/users/nlgranger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nlgranger/subscriptions", "organizations_url": "https://api.github.com/users/nlgranger/orgs", "repos_url": "https://api.github.com/users/nlgranger/repos", "events_url": "https://api.github.com/users/nlgranger/events{/privacy}", "received_events_url": "https://api.github.com/users/nlgranger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-09-28T14:03:22Z", "updated_at": "2018-10-08T07:21:14Z", "closed_at": "2018-10-04T09:39:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thank you for this library,\r\n\r\nUsing an environment variable to unlock the software implementation is not really the idiomatic python style. Would you please consider an alternative that doesn't require to fiddle with os.environ in the import section of the source code.\r\nMaybe a `fallback=False` argument or a global module variable or a wrapper function which selects the backend automatically?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ICRAR/crc32c/issues/4", "repository_url": "https://api.github.com/repos/ICRAR/crc32c", "labels_url": "https://api.github.com/repos/ICRAR/crc32c/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/ICRAR/crc32c/issues/4/comments", "events_url": "https://api.github.com/repos/ICRAR/crc32c/issues/4/events", "html_url": "https://github.com/ICRAR/crc32c/issues/4", "id": 360715653, "node_id": "MDU6SXNzdWUzNjA3MTU2NTM=", "number": 4, "title": "Add optional software implementation", "user": {"login": "rtobar", "id": 620848, "node_id": "MDQ6VXNlcjYyMDg0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/620848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtobar", "html_url": "https://github.com/rtobar", "followers_url": "https://api.github.com/users/rtobar/followers", "following_url": "https://api.github.com/users/rtobar/following{/other_user}", "gists_url": "https://api.github.com/users/rtobar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtobar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtobar/subscriptions", "organizations_url": "https://api.github.com/users/rtobar/orgs", "repos_url": "https://api.github.com/users/rtobar/repos", "events_url": "https://api.github.com/users/rtobar/events{/privacy}", "received_events_url": "https://api.github.com/users/rtobar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "rtobar", "id": 620848, "node_id": "MDQ6VXNlcjYyMDg0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/620848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtobar", "html_url": "https://github.com/rtobar", "followers_url": "https://api.github.com/users/rtobar/followers", "following_url": "https://api.github.com/users/rtobar/following{/other_user}", "gists_url": "https://api.github.com/users/rtobar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtobar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtobar/subscriptions", "organizations_url": "https://api.github.com/users/rtobar/orgs", "repos_url": "https://api.github.com/users/rtobar/repos", "events_url": "https://api.github.com/users/rtobar/events{/privacy}", "received_events_url": "https://api.github.com/users/rtobar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "rtobar", "id": 620848, "node_id": "MDQ6VXNlcjYyMDg0OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/620848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rtobar", "html_url": "https://github.com/rtobar", "followers_url": "https://api.github.com/users/rtobar/followers", "following_url": "https://api.github.com/users/rtobar/following{/other_user}", "gists_url": "https://api.github.com/users/rtobar/gists{/gist_id}", "starred_url": "https://api.github.com/users/rtobar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rtobar/subscriptions", "organizations_url": "https://api.github.com/users/rtobar/orgs", "repos_url": "https://api.github.com/users/rtobar/repos", "events_url": "https://api.github.com/users/rtobar/events{/privacy}", "received_events_url": "https://api.github.com/users/rtobar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-09-17T03:52:02Z", "updated_at": "2018-09-20T03:27:37Z", "closed_at": "2018-09-20T03:27:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "On platforms other than Intel with SSE4.2 (including some virtual machines) there might not be support for hardwarde-based crc32c. However, systems might still require an implementation of the checksum in software. There are pure software implementations of crc32c available and we should look into upgrade the current C code to offer a software alternative if SSE4.2 is not available.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ICRAR/crc32c/issues/2", "repository_url": "https://api.github.com/repos/ICRAR/crc32c", "labels_url": "https://api.github.com/repos/ICRAR/crc32c/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/ICRAR/crc32c/issues/2/comments", "events_url": "https://api.github.com/repos/ICRAR/crc32c/issues/2/events", "html_url": "https://github.com/ICRAR/crc32c/issues/2", "id": 357691955, "node_id": "MDU6SXNzdWUzNTc2OTE5NTU=", "number": 2, "title": "Compiled wheels", "user": {"login": "kislyuk", "id": 862013, "node_id": "MDQ6VXNlcjg2MjAxMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/862013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kislyuk", "html_url": "https://github.com/kislyuk", "followers_url": "https://api.github.com/users/kislyuk/followers", "following_url": "https://api.github.com/users/kislyuk/following{/other_user}", "gists_url": "https://api.github.com/users/kislyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kislyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kislyuk/subscriptions", "organizations_url": "https://api.github.com/users/kislyuk/orgs", "repos_url": "https://api.github.com/users/kislyuk/repos", "events_url": "https://api.github.com/users/kislyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/kislyuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-09-06T14:49:47Z", "updated_at": "2018-09-11T06:18:51Z", "closed_at": "2018-09-09T14:43:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, thank you for publishing this package, it's very useful and elegant, and the performance is phenomenal.\r\n\r\nIt would be great if this package could be distributed on PyPI with pre-compiled wheels, so it can be installed without a build toolchain. Would you be open to configuring the release script to publish such wheels? You could use Travis to build Mac OS and Linux wheels, and Appveyor to build Windows wheels.\r\n\r\nI may be able to help out if you would be willing to consider a PR for this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ICRAR/crc32c/issues/1", "repository_url": "https://api.github.com/repos/ICRAR/crc32c", "labels_url": "https://api.github.com/repos/ICRAR/crc32c/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/ICRAR/crc32c/issues/1/comments", "events_url": "https://api.github.com/repos/ICRAR/crc32c/issues/1/events", "html_url": "https://github.com/ICRAR/crc32c/issues/1", "id": 332018604, "node_id": "MDU6SXNzdWUzMzIwMTg2MDQ=", "number": 1, "title": "Installing error under win10 system", "user": {"login": "cmdbln", "id": 14309877, "node_id": "MDQ6VXNlcjE0MzA5ODc3", "avatar_url": "https://avatars2.githubusercontent.com/u/14309877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmdbln", "html_url": "https://github.com/cmdbln", "followers_url": "https://api.github.com/users/cmdbln/followers", "following_url": "https://api.github.com/users/cmdbln/following{/other_user}", "gists_url": "https://api.github.com/users/cmdbln/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmdbln/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmdbln/subscriptions", "organizations_url": "https://api.github.com/users/cmdbln/orgs", "repos_url": "https://api.github.com/users/cmdbln/repos", "events_url": "https://api.github.com/users/cmdbln/events{/privacy}", "received_events_url": "https://api.github.com/users/cmdbln/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2018-06-13T14:23:49Z", "updated_at": "2018-07-09T02:21:13Z", "closed_at": "2018-07-09T02:21:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I install crc32c-1.2 under win10 x64 system, it comes the following errors. I tried Visual Studio 14 and Visual Studio 2017\uff0cbut problems still exist. \"pip3 install crc32c\" can not work either. My python version is 3.6.5\r\n\r\n\r\nrunning install\r\nrunning bdist_egg\r\nrunning egg_info\r\nwriting crc32c.egg-info\\PKG-INFO\r\nwriting dependency_links to crc32c.egg-info\\dependency_links.txt\r\nwriting top-level names to crc32c.egg-info\\top_level.txt\r\nreading manifest file 'crc32c.egg-info\\SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwriting manifest file 'crc32c.egg-info\\SOURCES.txt'\r\ninstalling library code to build\\bdist.win32\\egg\r\nrunning install_lib\r\nrunning build_ext\r\nbuilding 'crc32c' extension\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.14.26428\\bin\\HostX86\\x86\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -I. -IC:\\Users\\guoyi\\AppData\\Local\\Programs\\Python\\Python36-32\\include -IC:\\Users\\guoyi\\AppData\\Local\\Programs\\Python\\Python36-32\\include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.14.26428\\ATLMFC\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.14.26428\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17134.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17134.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17134.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17134.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17134.0\\cppwinrt\" /Tc_crc32c.c /Fobuild\\temp.win32-3.6\\Release\\_crc32c.obj\r\n_crc32c.c\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.14.26428\\bin\\HostX86\\x86\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -I. -IC:\\Users\\guoyi\\AppData\\Local\\Programs\\Python\\Python36-32\\include -IC:\\Users\\guoyi\\AppData\\Local\\Programs\\Python\\Python36-32\\include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.14.26428\\ATLMFC\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.14.26428\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17134.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17134.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17134.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17134.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17134.0\\cppwinrt\" /Tccrc32c.c /Fobuild\\temp.win32-3.6\\Release\\crc32c.obj\r\ncrc32c.c\r\ncrc32c.c(49): error C2065: \u201c__asm__\u201d: \u672a\u58f0\u660e\u7684\u6807\u8bc6\u7b26\r\ncrc32c.c(49): error C2146: \u8bed\u6cd5\u9519\u8bef: \u7f3a\u5c11\u201c;\u201d(\u5728\u6807\u8bc6\u7b26\u201c__volatile__\u201d\u7684\u524d\u9762)\r\ncrc32c.c(49): warning C4013: \u201c__volatile__\u201d\u672a\u5b9a\u4e49\uff1b\u5047\u8bbe\u5916\u90e8\u8fd4\u56de int\r\ncrc32c.c(51): error C2143: \u8bed\u6cd5\u9519\u8bef: \u7f3a\u5c11\u201c)\u201d(\u5728\u201c:\u201d\u7684\u524d\u9762)\r\ncrc32c.c(71): error C2065: \u201c__asm__\u201d: \u672a\u58f0\u660e\u7684\u6807\u8bc6\u7b26\r\ncrc32c.c(71): error C2146: \u8bed\u6cd5\u9519\u8bef: \u7f3a\u5c11\u201c;\u201d(\u5728\u6807\u8bc6\u7b26\u201c__volatile__\u201d\u7684\u524d\u9762)\r\ncrc32c.c(73): error C2143: \u8bed\u6cd5\u9519\u8bef: \u7f3a\u5c11\u201c)\u201d(\u5728\u201c:\u201d\u7684\u524d\u9762)\r\nerror: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.14.26428\\\\bin\\\\HostX86\\\\x86\\\\cl.exe' failed with exit status 2", "performed_via_github_app": null, "score": 1.0}]}