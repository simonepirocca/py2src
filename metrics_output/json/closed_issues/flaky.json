{"total_count": 61, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/box/flaky/issues/164", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/164/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/164/events", "html_url": "https://github.com/box/flaky/issues/164", "id": 567404284, "node_id": "MDU6SXNzdWU1Njc0MDQyODQ=", "number": 164, "title": "flaky should retry also on code exception?", "user": {"login": "andreabisello", "id": 2149815, "node_id": "MDQ6VXNlcjIxNDk4MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2149815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreabisello", "html_url": "https://github.com/andreabisello", "followers_url": "https://api.github.com/users/andreabisello/followers", "following_url": "https://api.github.com/users/andreabisello/following{/other_user}", "gists_url": "https://api.github.com/users/andreabisello/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreabisello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreabisello/subscriptions", "organizations_url": "https://api.github.com/users/andreabisello/orgs", "repos_url": "https://api.github.com/users/andreabisello/repos", "events_url": "https://api.github.com/users/andreabisello/events{/privacy}", "received_events_url": "https://api.github.com/users/andreabisello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-19T08:40:48Z", "updated_at": "2020-02-20T13:48:05Z", "closed_at": "2020-02-19T19:19:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "i have understand (but maybe i'm wrong) that flaky will retry failed test due assertion check, but not failing test due code exception.\r\n\r\nfor example, \r\n\r\ni'm testing an API call.\r\n\r\nthis api call returns a json.\r\n\r\nthis json normally has some properties ,\r\n\r\nbut sometime it can return a timeout,\r\n\r\nso the try to access this json propertie will raise an exception, that will not makes the test fail.\r\n\r\nSure, i can assert the existence of the property , making the test fail, so flaky will retry, but when i use flaky, i use because i cannot have the complete control of what is making the test fail.\r\nIn this case, my call was wrapped in a methot that assert the http status code is 200, but in this api implementation, the api returns always 200, even on exception or timeout.\r\n\r\nif \"flaky\" can catch exception raising a \"pytest.fail\" instead of an exception, it will also retries flaky test for code excetion\r\n\r\nwhat do you think?\r\n\r\nthanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/161", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/161/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/161/events", "html_url": "https://github.com/box/flaky/issues/161", "id": 506343422, "node_id": "MDU6SXNzdWU1MDYzNDM0MjI=", "number": 161, "title": "allow flaky to be used as a context manager", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-13T15:56:35Z", "updated_at": "2020-02-20T17:50:05Z", "closed_at": "2020-02-20T17:50:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes we may want to use retry only some blocks instead of entire methods and it would be great if flaky could be used as a [context manager](https://stackoverflow.com/questions/38439105/is-there-a-way-to-directly-decorate-a-block-of-python-code) in addition to as a decorator.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/156", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/156/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/156/events", "html_url": "https://github.com/box/flaky/issues/156", "id": 477330277, "node_id": "MDU6SXNzdWU0NzczMzAyNzc=", "number": 156, "title": "Flaky with pytest breaks Ctrl+C", "user": {"login": "matejcik", "id": 596073, "node_id": "MDQ6VXNlcjU5NjA3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/596073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matejcik", "html_url": "https://github.com/matejcik", "followers_url": "https://api.github.com/users/matejcik/followers", "following_url": "https://api.github.com/users/matejcik/following{/other_user}", "gists_url": "https://api.github.com/users/matejcik/gists{/gist_id}", "starred_url": "https://api.github.com/users/matejcik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matejcik/subscriptions", "organizations_url": "https://api.github.com/users/matejcik/orgs", "repos_url": "https://api.github.com/users/matejcik/repos", "events_url": "https://api.github.com/users/matejcik/events{/privacy}", "received_events_url": "https://api.github.com/users/matejcik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-06T11:40:53Z", "updated_at": "2019-08-06T18:42:30Z", "closed_at": "2019-08-06T18:42:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Simply the presence of `flaky` plugin will prevent Ctrl+C from stopping the test suite. Flaky will register the `KeyboardInterrupt` as a test failure -- as opposed to pure pytest, which will stop the test suite.\r\n\r\nVersion information is in the test log below.\r\n\r\nwith `flaky`:\r\n```\r\n$ pytest                                               \r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.6.8, pytest-5.0.1, py-1.7.0, pluggy-0.12.0\r\nhypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/matejcik/a/.hypothesis/examples')\r\nTest order randomisation NOT enabled. Enable with --random-order or --random-order-bucket=<bucket_type>\r\nrootdir: /home/matejcik/a\r\nplugins: hypothesis-4.4.3, random-order-1.0.4, cov-2.7.1, asyncio-0.10.0, flaky-3.6.0\r\ncollected 1 item                                                               \r\n\r\ntest_pytest.py ^CF                                                         [100%]\r\n\r\n=================================== FAILURES ===================================\r\n___________________________________ test_foo ___________________________________\r\n\r\n    def test_foo():\r\n>       time.sleep(10)\r\nE       KeyboardInterrupt\r\n\r\ntest_pytest.py:4: KeyboardInterrupt\r\n=========================== 1 failed in 0.80 seconds ===========================\r\n```\r\n\r\nwithout `flaky`:\r\n```\r\n$ pytest -p no:flaky\r\n============================================================ test session starts ============================================================\r\nplatform linux -- Python 3.6.8, pytest-5.0.1, py-1.7.0, pluggy-0.12.0\r\nhypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/matejcik/a/.hypothesis/examples')\r\nTest order randomisation NOT enabled. Enable with --random-order or --random-order-bucket=<bucket_type>\r\nrootdir: /home/matejcik/a\r\nplugins: hypothesis-4.4.3, random-order-1.0.4, cov-2.7.1, asyncio-0.10.0\r\ncollected 1 item                                                                                                                            \r\n\r\ntest_pytest.py ^C\r\n\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! KeyboardInterrupt !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n/home/matejcik/a/test_pytest.py:4: KeyboardInterrupt\r\n(to show a full traceback on KeyboardInterrupt use --fulltrace)\r\n======================================================= no tests ran in 1.94 seconds ========================================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/149", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/149/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/149/events", "html_url": "https://github.com/box/flaky/issues/149", "id": 410563285, "node_id": "MDU6SXNzdWU0MTA1NjMyODU=", "number": 149, "title": "Feature request: Export flaky result to file", "user": {"login": "tombasche", "id": 14269184, "node_id": "MDQ6VXNlcjE0MjY5MTg0", "avatar_url": "https://avatars0.githubusercontent.com/u/14269184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tombasche", "html_url": "https://github.com/tombasche", "followers_url": "https://api.github.com/users/tombasche/followers", "following_url": "https://api.github.com/users/tombasche/following{/other_user}", "gists_url": "https://api.github.com/users/tombasche/gists{/gist_id}", "starred_url": "https://api.github.com/users/tombasche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tombasche/subscriptions", "organizations_url": "https://api.github.com/users/tombasche/orgs", "repos_url": "https://api.github.com/users/tombasche/repos", "events_url": "https://api.github.com/users/tombasche/events{/privacy}", "received_events_url": "https://api.github.com/users/tombasche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-15T01:16:49Z", "updated_at": "2020-02-16T22:28:02Z", "closed_at": "2020-02-16T22:28:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have recently started using Flaky at our organisation to run tests and found it was useful to be able to aggregate and dump the output to a single text file for viewing in Jenkins.\r\n\r\nI went ahead and forked it, and made the necessary change already to the pytest plugin, and it's working splendidly for our tests. Basically it's just a new option:\r\n\r\n`--export-flaky-report`\r\n\r\nwhich writes to a 'reports' directory (same place as the junit xml files).\r\n\r\nIs this something you would like to see in the regular flaky tool? It's got a very specific use case and I'm not sure how useful it is for most unit test suites. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/145", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/145/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/145/events", "html_url": "https://github.com/box/flaky/issues/145", "id": 399675259, "node_id": "MDU6SXNzdWUzOTk2NzUyNTk=", "number": 145, "title": "@pytest.mark.flaky(rerun_filter=function) throws error", "user": {"login": "billhimmelsbach", "id": 19983248, "node_id": "MDQ6VXNlcjE5OTgzMjQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/19983248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billhimmelsbach", "html_url": "https://github.com/billhimmelsbach", "followers_url": "https://api.github.com/users/billhimmelsbach/followers", "following_url": "https://api.github.com/users/billhimmelsbach/following{/other_user}", "gists_url": "https://api.github.com/users/billhimmelsbach/gists{/gist_id}", "starred_url": "https://api.github.com/users/billhimmelsbach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billhimmelsbach/subscriptions", "organizations_url": "https://api.github.com/users/billhimmelsbach/orgs", "repos_url": "https://api.github.com/users/billhimmelsbach/repos", "events_url": "https://api.github.com/users/billhimmelsbach/events{/privacy}", "received_events_url": "https://api.github.com/users/billhimmelsbach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-16T07:09:53Z", "updated_at": "2019-01-16T23:38:55Z", "closed_at": "2019-01-16T23:38:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I'm experiencing an issue with the rerun filters feature and `pytest.mark`:\r\n\r\n```\r\ndef is_not_crash(err, *args):\r\n    return not issubclass(err[0], ShouldFail)\r\n\r\n@pytest.mark.flaky(rerun_filter=is_not_crash)\r\ndef test_opk():\r\n    raise ShouldFail\r\n```\r\n\r\nReturns this error:\r\n```\r\nTypeError: _make_test_flaky() got an unexpected keyword argument 'rerun_filter'\r\n```\r\n\r\n`@flaky(rerun_filter=is_not_crash)` still works great, but I was hoping to use `pytest.mark` so that I could do fun things in `conftest` and what not. I could totally be doing this wrong too, so sorry if it's some silly mistake.\r\n\r\nThanks! Love the plugin!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/143", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/143/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/143/events", "html_url": "https://github.com/box/flaky/issues/143", "id": 397853261, "node_id": "MDU6SXNzdWUzOTc4NTMyNjE=", "number": 143, "title": "Version 3.5.1 introduce new errors", "user": {"login": "Shuki-L", "id": 6392804, "node_id": "MDQ6VXNlcjYzOTI4MDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/6392804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shuki-L", "html_url": "https://github.com/Shuki-L", "followers_url": "https://api.github.com/users/Shuki-L/followers", "following_url": "https://api.github.com/users/Shuki-L/following{/other_user}", "gists_url": "https://api.github.com/users/Shuki-L/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shuki-L/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shuki-L/subscriptions", "organizations_url": "https://api.github.com/users/Shuki-L/orgs", "repos_url": "https://api.github.com/users/Shuki-L/repos", "events_url": "https://api.github.com/users/Shuki-L/events{/privacy}", "received_events_url": "https://api.github.com/users/Shuki-L/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-10T14:23:50Z", "updated_at": "2019-01-18T09:46:12Z", "closed_at": "2019-01-10T18:57:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the latest version `3.5.1` I get the following error messages:\r\n\r\n```self = <flaky.flaky_pytest_plugin.FlakyPlugin object at 0x7f117c0b0750>\r\nitem = <Function 'some_test[document-stats0]'>\r\n\r\n    def pytest_runtest_setup(self, item):\r\n        \"\"\"\r\n            Pytest hook to modify the test before it's run.\r\n    \r\n            :param item:\r\n                The test item.\r\n            \"\"\"\r\n>       for marker in item.iter_markers(name='flaky'):\r\nE       AttributeError: 'Function' object has no attribute 'iter_markers'\r\n\r\nnpvenv/local/lib/python2.7/site-packages/flaky/flaky_pytest_plugin.py:231: AttributeError\r\n______ ERROR at setup of some_test[post-stats1] ______\r\n\r\n>   lambda: ihook(item=item, **kwds),\r\n    when=when,\r\n            )\r\n\r\nnpvenv/local/lib/python2.7/site-packages/flaky/flaky_pytest_plugin.py:300: \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/139", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/139/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/139/events", "html_url": "https://github.com/box/flaky/issues/139", "id": 396429974, "node_id": "MDU6SXNzdWUzOTY0Mjk5NzQ=", "number": 139, "title": "flaky broken with pytest 4.1", "user": {"login": "gaborbernat", "id": 690238, "node_id": "MDQ6VXNlcjY5MDIzOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/690238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaborbernat", "html_url": "https://github.com/gaborbernat", "followers_url": "https://api.github.com/users/gaborbernat/followers", "following_url": "https://api.github.com/users/gaborbernat/following{/other_user}", "gists_url": "https://api.github.com/users/gaborbernat/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaborbernat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaborbernat/subscriptions", "organizations_url": "https://api.github.com/users/gaborbernat/orgs", "repos_url": "https://api.github.com/users/gaborbernat/repos", "events_url": "https://api.github.com/users/gaborbernat/events{/privacy}", "received_events_url": "https://api.github.com/users/gaborbernat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-07T10:26:41Z", "updated_at": "2019-02-26T16:30:53Z", "closed_at": "2019-01-07T18:57:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/pytest-dev/pytest/pull/4299 breaks https://github.com/box/flaky/blob/master/flaky/flaky_pytest_plugin.py#L272 cc @RonnyPfannschmidt\r\n\r\n```\r\nINTERNALERROR>     call = self.call_runtest_hook(item, when, **kwds)\r\nINTERNALERROR>   File \".tox/dev/lib/python3.7/site-packages/flaky/flaky_pytest_plugin.py\", line 274, in call_runtest_hook\r\nINTERNALERROR>     when=when,\r\nINTERNALERROR> TypeError: __init__() missing 3 required positional arguments: 'excinfo', 'start', and 'stop'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/137", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/137/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/137/events", "html_url": "https://github.com/box/flaky/issues/137", "id": 387561234, "node_id": "MDU6SXNzdWUzODc1NjEyMzQ=", "number": 137, "title": "Feature request: Conditional support in flaky decorator", "user": {"login": "dharmab", "id": 4450708, "node_id": "MDQ6VXNlcjQ0NTA3MDg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4450708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dharmab", "html_url": "https://github.com/dharmab", "followers_url": "https://api.github.com/users/dharmab/followers", "following_url": "https://api.github.com/users/dharmab/following{/other_user}", "gists_url": "https://api.github.com/users/dharmab/gists{/gist_id}", "starred_url": "https://api.github.com/users/dharmab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dharmab/subscriptions", "organizations_url": "https://api.github.com/users/dharmab/orgs", "repos_url": "https://api.github.com/users/dharmab/repos", "events_url": "https://api.github.com/users/dharmab/events{/privacy}", "received_events_url": "https://api.github.com/users/dharmab/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-05T02:04:18Z", "updated_at": "2020-02-20T17:36:59Z", "closed_at": "2020-02-20T17:36:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use pytest for integration tests for a multi-cloud codebase. We have a test which is only flaky when it runs within a certain cloud, for reasons beyond our control. It would be nice if we could only enable flaky when running in that cloud with a conditional similar to the `condition` argument to `@pytest.mark.xfail`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/135", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/135/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/135/events", "html_url": "https://github.com/box/flaky/issues/135", "id": 366627248, "node_id": "MDU6SXNzdWUzNjY2MjcyNDg=", "number": 135, "title": "Mark the setup as flaky", "user": {"login": "alex4200", "id": 12729291, "node_id": "MDQ6VXNlcjEyNzI5Mjkx", "avatar_url": "https://avatars3.githubusercontent.com/u/12729291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex4200", "html_url": "https://github.com/alex4200", "followers_url": "https://api.github.com/users/alex4200/followers", "following_url": "https://api.github.com/users/alex4200/following{/other_user}", "gists_url": "https://api.github.com/users/alex4200/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex4200/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex4200/subscriptions", "organizations_url": "https://api.github.com/users/alex4200/orgs", "repos_url": "https://api.github.com/users/alex4200/repos", "events_url": "https://api.github.com/users/alex4200/events{/privacy}", "received_events_url": "https://api.github.com/users/alex4200/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-10-04T05:26:21Z", "updated_at": "2020-07-10T16:27:12Z", "closed_at": "2020-07-10T16:27:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running complex selenium tests, in which the setup is flaky sometimes, i.e. when I get the webdriver itself.\r\n\r\nI tried to mark the respective setup function as flaky, but if an error happens in the setup method (in `conftest.py` in the `py.test` framework), the test is not being repeated. \r\n\r\nIs there a way to mark the setup for a test as 'flaky'?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/129", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/129/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/129/events", "html_url": "https://github.com/box/flaky/issues/129", "id": 269825925, "node_id": "MDU6SXNzdWUyNjk4MjU5MjU=", "number": 129, "title": "Add a pytest marker", "user": {"login": "ojii", "id": 141122, "node_id": "MDQ6VXNlcjE0MTEyMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/141122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ojii", "html_url": "https://github.com/ojii", "followers_url": "https://api.github.com/users/ojii/followers", "following_url": "https://api.github.com/users/ojii/following{/other_user}", "gists_url": "https://api.github.com/users/ojii/gists{/gist_id}", "starred_url": "https://api.github.com/users/ojii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ojii/subscriptions", "organizations_url": "https://api.github.com/users/ojii/orgs", "repos_url": "https://api.github.com/users/ojii/repos", "events_url": "https://api.github.com/users/ojii/events{/privacy}", "received_events_url": "https://api.github.com/users/ojii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-31T03:51:15Z", "updated_at": "2019-01-09T18:09:11Z", "closed_at": "2019-01-09T18:09:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be very useful for flaky to provide a pytest marker (`pytest.mark.flaky`) so a [whole module/class can be marked at once](https://docs.pytest.org/en/latest/example/markers.html#marking-whole-classes-or-modules). ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/124", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/124/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/124/events", "html_url": "https://github.com/box/flaky/issues/124", "id": 233847567, "node_id": "MDU6SXNzdWUyMzM4NDc1Njc=", "number": 124, "title": "\"Error during Setup\" silenty passes in a flaky annotated class", "user": {"login": "nborrmann", "id": 1723176, "node_id": "MDQ6VXNlcjE3MjMxNzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1723176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nborrmann", "html_url": "https://github.com/nborrmann", "followers_url": "https://api.github.com/users/nborrmann/followers", "following_url": "https://api.github.com/users/nborrmann/following{/other_user}", "gists_url": "https://api.github.com/users/nborrmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/nborrmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nborrmann/subscriptions", "organizations_url": "https://api.github.com/users/nborrmann/orgs", "repos_url": "https://api.github.com/users/nborrmann/repos", "events_url": "https://api.github.com/users/nborrmann/events{/privacy}", "received_events_url": "https://api.github.com/users/nborrmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-06T10:30:50Z", "updated_at": "2017-06-16T22:57:13Z", "closed_at": "2017-06-16T22:57:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey guys, \r\n\r\nI have a flaky annotated class that has a ``setup_class`` method that sometimes fails. When that happens, the test report just says \"no tests ran\" (which means tests passing in a CI). \r\n\r\nIn my opinion the expected behaviour is to get an error \"ERROR at setup\", which is what happens when I run the test without the ``@flaky`` annotation.\r\n\r\nI have attached a minimal test class that shows this behaviour:\r\n\r\n```python\r\nfrom flaky import flaky\r\n\r\n@flaky(max_runs=2)\r\nclass TestFlakySetup:\r\n\r\n    def setup_class(self):\r\n    \tassert 1/0 == 0\r\n\r\n    def test1(self):\r\n    \tassert 1==1\r\n\r\n    def test2(self):\r\n    \tassert 1==0\r\n```\r\n\r\nThis is the output with flaky enabled:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1723176/26824979/94a3969a-4ab3-11e7-9d10-8a2379b1a18d.png)\r\n\r\nHere's flaky disabled and the tests failing:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1723176/26825050/daad4406-4ab3-11e7-9726-22ec21e13ab8.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/121", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/121/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/121/events", "html_url": "https://github.com/box/flaky/issues/121", "id": 208168779, "node_id": "MDU6SXNzdWUyMDgxNjg3Nzk=", "number": 121, "title": "tests are not run when a class is decorated flaky in Python 2", "user": {"login": "ramanduh", "id": 15347302, "node_id": "MDQ6VXNlcjE1MzQ3MzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/15347302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramanduh", "html_url": "https://github.com/ramanduh", "followers_url": "https://api.github.com/users/ramanduh/followers", "following_url": "https://api.github.com/users/ramanduh/following{/other_user}", "gists_url": "https://api.github.com/users/ramanduh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramanduh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramanduh/subscriptions", "organizations_url": "https://api.github.com/users/ramanduh/orgs", "repos_url": "https://api.github.com/users/ramanduh/repos", "events_url": "https://api.github.com/users/ramanduh/events{/privacy}", "received_events_url": "https://api.github.com/users/ramanduh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-16T16:14:54Z", "updated_at": "2017-02-16T17:42:38Z", "closed_at": "2017-02-16T17:42:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "python version : 2.7.6\r\nflaky version: 3.3.0\r\n\r\nTo reproduce:\r\n\r\n```\r\nfrom flaky import flaky\r\n\r\n\r\n@flaky\r\nclass TestMultipliers():\r\n    def test_flaky_doubler(self):\r\n        assert 1\r\n\r\n    @flaky(max_runs=3)\r\n    def test_flaky_tripler(self):\r\n        assert 1\r\n\r\n```\r\n\r\nOutput : \r\n```\r\n=============================================== test session starts ===============================================\r\nplatform linux2 -- Python 2.7.6, pytest-3.0.6, py-1.4.32, pluggy-0.4.0\r\nrootdir: /home/scality, inifile: \r\nplugins: timeout-1.2.0, html-1.13.0, flaky-3.3.0\r\ncollected 0 items \r\n\r\n===Flaky Test Report===\r\n\r\n\r\n===End Flaky Test Report===\r\n========================================== no tests ran in 0.00 seconds ===========================================\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/120", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/120/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/120/events", "html_url": "https://github.com/box/flaky/issues/120", "id": 206568455, "node_id": "MDU6SXNzdWUyMDY1Njg0NTU=", "number": 120, "title": "pytest flaky interaction causing fixture exceptions to be ignored", "user": {"login": "timyhou", "id": 5649864, "node_id": "MDQ6VXNlcjU2NDk4NjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5649864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timyhou", "html_url": "https://github.com/timyhou", "followers_url": "https://api.github.com/users/timyhou/followers", "following_url": "https://api.github.com/users/timyhou/following{/other_user}", "gists_url": "https://api.github.com/users/timyhou/gists{/gist_id}", "starred_url": "https://api.github.com/users/timyhou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timyhou/subscriptions", "organizations_url": "https://api.github.com/users/timyhou/orgs", "repos_url": "https://api.github.com/users/timyhou/repos", "events_url": "https://api.github.com/users/timyhou/events{/privacy}", "received_events_url": "https://api.github.com/users/timyhou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-09T17:12:58Z", "updated_at": "2017-06-15T15:52:24Z", "closed_at": "2017-06-15T15:52:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Somewhat related to [this issue](https://github.com/pytest-dev/pytest/issues/1480) which was supposedly resolved in Flaky 3.1.1 \r\n\r\nIn the example below, something in flaky is causing the exception that is thrown inside the fixture not to be reported anymore. \r\n```\r\nimport pytest\r\nimport flaky\r\n\r\n@pytest.fixture\r\ndef failing_fixture():\r\n    raise Exception(\"Woops\")\r\n\r\n@flaky.flaky()\r\n@pytest.mark.usefixtures('failing_fixture')\r\nclass TestCases:\r\n    def test_fixture_fail(self):\r\n        pass\r\n\r\n    def test_always_pass(self):\r\n        assert True\r\n\r\n    def test_always_fail(self):\r\n        assert False\r\n```\r\nThe test results show that 3 tests were gathered but none were executed (which is true) but leaves no trace to the exception in the fixture. \r\n```\r\n\r\nplatform linux -- Python 3.5.1, pytest-3.0.6, py-1.4.32, pluggy-0.4.0\r\nrootdir: /home/thou/mine/python_scribbles, inifile: \r\nplugins: flaky-3.3.0\r\ncollected 3 items \r\n\r\nmy_pytest.py \r\n===Flaky Test Report===\r\n\r\n\r\n===End Flaky Test Report===\r\n\r\n no tests ran in 0.02 seconds\r\n```\r\n\r\nIf we remove the flaky decorator from the test class, the error is reported normally. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/119", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/119/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/119/events", "html_url": "https://github.com/box/flaky/issues/119", "id": 203632346, "node_id": "MDU6SXNzdWUyMDM2MzIzNDY=", "number": 119, "title": "no new-line when runnig with --verbose", "user": {"login": "skamsie", "id": 7014744, "node_id": "MDQ6VXNlcjcwMTQ3NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/7014744?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skamsie", "html_url": "https://github.com/skamsie", "followers_url": "https://api.github.com/users/skamsie/followers", "following_url": "https://api.github.com/users/skamsie/following{/other_user}", "gists_url": "https://api.github.com/users/skamsie/gists{/gist_id}", "starred_url": "https://api.github.com/users/skamsie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skamsie/subscriptions", "organizations_url": "https://api.github.com/users/skamsie/orgs", "repos_url": "https://api.github.com/users/skamsie/repos", "events_url": "https://api.github.com/users/skamsie/events{/privacy}", "received_events_url": "https://api.github.com/users/skamsie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-27T13:13:28Z", "updated_at": "2019-01-09T18:09:11Z", "closed_at": "2019-01-09T18:09:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, cool plugin but it seems that it does not play well with the `--verbose` parameter. In some situations it does not print the results correctly. Consider the following test file:\r\n\r\n```\r\nimport random\r\nimport unittest\r\nfrom hamcrest import assert_that, equal_to\r\n\r\n\r\nclass Test(unittest.TestCase):\r\n    def test_1(self):\r\n        \"\"\"Test 1\"\"\"\r\n        assert_that(random.choice((1, 2)), equal_to(1))\r\n\r\n    def test_2(self):\r\n        \"\"\"Test 2\"\"\"\r\n        assert_that(random.choice((1, 2)), equal_to(1))\r\n```\r\n\r\nAnd run the tests with:\r\n\r\n```nosetests --with-flaky --force-flaky --verbose```\r\n\r\nDepending on the result of the tests you can end up with (the first line is the problem):\r\n\r\n```\r\nTest 1 ... Test 2 ... FAIL\r\n\r\n======================================================================\r\nFAIL: Test 2\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/Users/.../test1.py\", line 13, in test_2\r\n    assert_that(random.choice((1, 2)), equal_to(1))\r\nAssertionError:\r\nExpected: <1>\r\n     but: was <2>\r\n\r\n\r\n===Flaky Test Report===\r\n\r\ntest_1 failed (1 runs remaining out of 2).\r\n\t<class 'AssertionError'>\r\n\r\nExpected: <1>\r\n     but: was <2>\r\n\r\n\t<traceback object at 0x107436348>\r\ntest_1 passed 1 out of the required 1 times. Success!\r\ntest_2 failed (1 runs remaining out of 2).\r\n\t<class 'AssertionError'>\r\n\r\nExpected: <1>\r\n     but: was <2>\r\n\r\n\t<traceback object at 0x107436c88>\r\ntest_2 failed; it passed 0 out of the required 1 times.\r\n\t<class 'AssertionError'>\r\n\r\nExpected: <1>\r\n     but: was <2>\r\n\r\n\t<traceback object at 0x107436f88>\r\n\r\n===End Flaky Test Report===\r\n----------------------------------------------------------------------\r\nRan 2 tests in 0.002s\r\n```\r\n\r\nEXPECTED:\r\n\r\n```\r\nTest 1 ... ok\r\nTest 2 ... FAIL\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/118", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/118/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/118/events", "html_url": "https://github.com/box/flaky/issues/118", "id": 200327219, "node_id": "MDU6SXNzdWUyMDAzMjcyMTk=", "number": 118, "title": "using flaky outside unit tests", "user": {"login": "ssbarnea", "id": 102495, "node_id": "MDQ6VXNlcjEwMjQ5NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/102495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssbarnea", "html_url": "https://github.com/ssbarnea", "followers_url": "https://api.github.com/users/ssbarnea/followers", "following_url": "https://api.github.com/users/ssbarnea/following{/other_user}", "gists_url": "https://api.github.com/users/ssbarnea/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssbarnea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssbarnea/subscriptions", "organizations_url": "https://api.github.com/users/ssbarnea/orgs", "repos_url": "https://api.github.com/users/ssbarnea/repos", "events_url": "https://api.github.com/users/ssbarnea/events{/privacy}", "received_events_url": "https://api.github.com/users/ssbarnea/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-12T10:14:47Z", "updated_at": "2017-01-17T03:08:19Z", "closed_at": "2017-01-17T03:08:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to be able to use `@flaky` outside unittests, on normal Python code in order to implement a simple and clean retry mechanism. \r\n\r\nNote: if this is already possible it should be documented.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/116", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/116/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/116/events", "html_url": "https://github.com/box/flaky/issues/116", "id": 191639057, "node_id": "MDU6SXNzdWUxOTE2MzkwNTc=", "number": 116, "title": "Ignore empty flaky test report", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-25T07:20:28Z", "updated_at": "2019-06-24T17:04:31Z", "closed_at": "2019-06-24T17:04:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When flaky is installed, all py.test invokes will generate a flaky test report, even if flaky isn't used in the project.\r\n\r\nIt would be nice if it could be skipped when there is nothing to show, or at least when it's not used.\r\n\r\n```\r\n===Flaky Test Report===\r\n\r\n\r\n===End Flaky Test Report===\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/114", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/114/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/114/events", "html_url": "https://github.com/box/flaky/issues/114", "id": 178802997, "node_id": "MDU6SXNzdWUxNzg4MDI5OTc=", "number": 114, "title": "Tests are skipped if pytest fixtures fail", "user": {"login": "recht", "id": 432100, "node_id": "MDQ6VXNlcjQzMjEwMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/432100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/recht", "html_url": "https://github.com/recht", "followers_url": "https://api.github.com/users/recht/followers", "following_url": "https://api.github.com/users/recht/following{/other_user}", "gists_url": "https://api.github.com/users/recht/gists{/gist_id}", "starred_url": "https://api.github.com/users/recht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/recht/subscriptions", "organizations_url": "https://api.github.com/users/recht/orgs", "repos_url": "https://api.github.com/users/recht/repos", "events_url": "https://api.github.com/users/recht/events{/privacy}", "received_events_url": "https://api.github.com/users/recht/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-23T07:19:46Z", "updated_at": "2019-01-08T20:09:11Z", "closed_at": "2019-01-08T20:09:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "A test marked with `@flaky` will not be marked as failed if the fixture fails for whatever reason - instead, any error is just swallowed and ignored.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/113", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/113/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/113/events", "html_url": "https://github.com/box/flaky/issues/113", "id": 178266875, "node_id": "MDU6SXNzdWUxNzgyNjY4NzU=", "number": 113, "title": "Extra testcases in Junit xml output with pytest", "user": {"login": "Hebbeman", "id": 1843564, "node_id": "MDQ6VXNlcjE4NDM1NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1843564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hebbeman", "html_url": "https://github.com/Hebbeman", "followers_url": "https://api.github.com/users/Hebbeman/followers", "following_url": "https://api.github.com/users/Hebbeman/following{/other_user}", "gists_url": "https://api.github.com/users/Hebbeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hebbeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hebbeman/subscriptions", "organizations_url": "https://api.github.com/users/Hebbeman/orgs", "repos_url": "https://api.github.com/users/Hebbeman/repos", "events_url": "https://api.github.com/users/Hebbeman/events{/privacy}", "received_events_url": "https://api.github.com/users/Hebbeman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-21T07:22:27Z", "updated_at": "2017-01-03T15:53:51Z", "closed_at": "2016-10-13T11:00:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running flaky together with pytest using junit xml output:\n\n> pytest --junit-xml=result.xml\n\nit appears like each rerun of a flaky test is registered as an extra testcase in the junit xml output with no attributes except time, for example:\n`<testcase` `time=\"0.0019998550415\"></testcase>`\n\nIs this working as intended?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/109", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/109/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/109/events", "html_url": "https://github.com/box/flaky/issues/109", "id": 167085235, "node_id": "MDU6SXNzdWUxNjcwODUyMzU=", "number": 109, "title": "unittest addCleanup only run once per test with nose plugin", "user": {"login": "amygdalama", "id": 3143117, "node_id": "MDQ6VXNlcjMxNDMxMTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3143117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amygdalama", "html_url": "https://github.com/amygdalama", "followers_url": "https://api.github.com/users/amygdalama/followers", "following_url": "https://api.github.com/users/amygdalama/following{/other_user}", "gists_url": "https://api.github.com/users/amygdalama/gists{/gist_id}", "starred_url": "https://api.github.com/users/amygdalama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amygdalama/subscriptions", "organizations_url": "https://api.github.com/users/amygdalama/orgs", "repos_url": "https://api.github.com/users/amygdalama/repos", "events_url": "https://api.github.com/users/amygdalama/events{/privacy}", "received_events_url": "https://api.github.com/users/amygdalama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-22T16:41:07Z", "updated_at": "2016-07-22T16:48:18Z", "closed_at": "2016-07-22T16:48:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I discovered an issue with hooking up flaky with our test suite:\n\nCleanup/teardown functions added to tests via [unittest's addCleanup](https://docs.python.org/2.7/library/unittest.html#unittest.TestCase.addCleanup) are run only once, even if a test is re-run:\n\n```\n>>> calling the test\n>>> flaky startTest\n>>> cleanup function\n>>> flaky stopTest\n>>> calling the test\n>>> flaky startTest\n>>> flaky stopTest\n```\n\nI'd expect the cleanup function to be run after every test run.\n\nHere's the behavior of unittest's [`doCleanups`](https://docs.python.org/2.7/library/unittest.html#unittest.TestCase.doCleanups), which runs the cleanup functions:\n\n> doCleanups() pops methods off the stack of cleanup functions one at a time, so it can be called at any time.\n\nMy understanding is that since `doCleanups()` mutates the stack of cleanup functions, there are no cleanup functions left to run when calling the test a second time.\n\nI hope to have time to poke around and try to find a solution for this today. Maybe we can save a copy of the cleanup function stack before running the test, and then re-add the stack to the test after each test run if the test is marked for re-run? Any other ideas come to mind?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/107", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/107/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/107/events", "html_url": "https://github.com/box/flaky/issues/107", "id": 166972315, "node_id": "MDU6SXNzdWUxNjY5NzIzMTU=", "number": 107, "title": "Missing git tag for 3.2.0 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-22T05:25:36Z", "updated_at": "2016-07-23T14:31:00Z", "closed_at": "2016-07-23T14:31:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/104", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/104/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/104/events", "html_url": "https://github.com/box/flaky/issues/104", "id": 164399421, "node_id": "MDU6SXNzdWUxNjQzOTk0MjE=", "number": 104, "title": "Suppress the report entirely if there are no flaky tests", "user": {"login": "theacodes", "id": 250995, "node_id": "MDQ6VXNlcjI1MDk5NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/250995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theacodes", "html_url": "https://github.com/theacodes", "followers_url": "https://api.github.com/users/theacodes/followers", "following_url": "https://api.github.com/users/theacodes/following{/other_user}", "gists_url": "https://api.github.com/users/theacodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/theacodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theacodes/subscriptions", "organizations_url": "https://api.github.com/users/theacodes/orgs", "repos_url": "https://api.github.com/users/theacodes/repos", "events_url": "https://api.github.com/users/theacodes/events{/privacy}", "received_events_url": "https://api.github.com/users/theacodes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-07T20:26:06Z", "updated_at": "2016-07-20T20:30:02Z", "closed_at": "2016-07-20T20:30:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`--no-success-flaky-report` still outputs an empty flaky report. It'd be nice if it suppressed the output altogether. I'm happy to create a PR for this if you're willing to accept it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/102", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/102/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/102/events", "html_url": "https://github.com/box/flaky/issues/102", "id": 155442772, "node_id": "MDU6SXNzdWUxNTU0NDI3NzI=", "number": 102, "title": "Whats with the `<traceback object at 0x7f87ed651098>` in the \"Flaky Test Report\"?", "user": {"login": "mgedmin", "id": 159967, "node_id": "MDQ6VXNlcjE1OTk2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/159967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgedmin", "html_url": "https://github.com/mgedmin", "followers_url": "https://api.github.com/users/mgedmin/followers", "following_url": "https://api.github.com/users/mgedmin/following{/other_user}", "gists_url": "https://api.github.com/users/mgedmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgedmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgedmin/subscriptions", "organizations_url": "https://api.github.com/users/mgedmin/orgs", "repos_url": "https://api.github.com/users/mgedmin/repos", "events_url": "https://api.github.com/users/mgedmin/events{/privacy}", "received_events_url": "https://api.github.com/users/mgedmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-18T08:22:14Z", "updated_at": "2019-01-09T18:09:10Z", "closed_at": "2019-01-09T18:09:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Steps to reproduce:\n\n``` python\n# tests.py\nimport unittest\nfrom flaky import flaky\n\n\n@flaky\nclass MyTest(unittest.TestCase):\n    def test_fail(self):\n        raise Exception(\"very important message\")\n```\n- run `nosetests --with-flaky`\n\n```\nE\n======================================================================\nERROR: test_fail (tests.MyTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/mg/tmp/flaky-test/tests.py\", line 16, in test_fail\n    raise Exception\nException\n\n===Flaky Test Report===\n\ntest_fail failed (1 runs remaining out of 2).\n    <type 'exceptions.Exception'>\n    very important message\n    <traceback object at 0x7fc0b5634248>\ntest_fail failed; it passed 0 out of the required 1 times.\n    <type 'exceptions.Exception'>\n    very important message\n    <traceback object at 0x7fc0b5634128>\n\n===End Flaky Test Report===\n----------------------------------------------------------------------\nRan 1 test in 0.002s\n\nFAILED (errors=1)\n```\n\nThe memory addresses of the traceback objects do not seem to be useful.  Why are you printing them?  Why not print the actual traceback?  (You may want to use `traceback.format_exception()` to format the traceback with the exception type + message, in the usual format, and then add some indentation.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/101", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/101/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/101/events", "html_url": "https://github.com/box/flaky/issues/101", "id": 152721259, "node_id": "MDU6SXNzdWUxNTI3MjEyNTk=", "number": 101, "title": "pytest crashes when using Flaky + pep8 plugins in the same command", "user": {"login": "pbrod", "id": 1193469, "node_id": "MDQ6VXNlcjExOTM0Njk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1193469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbrod", "html_url": "https://github.com/pbrod", "followers_url": "https://api.github.com/users/pbrod/followers", "following_url": "https://api.github.com/users/pbrod/following{/other_user}", "gists_url": "https://api.github.com/users/pbrod/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbrod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbrod/subscriptions", "organizations_url": "https://api.github.com/users/pbrod/orgs", "repos_url": "https://api.github.com/users/pbrod/repos", "events_url": "https://api.github.com/users/pbrod/events{/privacy}", "received_events_url": "https://api.github.com/users/pbrod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-03T08:12:17Z", "updated_at": "2016-07-21T21:33:22Z", "closed_at": "2016-07-21T21:33:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pytest crashes when using Flaky + pep8 plugins in the same command for my project.\n\nOthers have also experienced this problem: https://github.com/errbotio/errbot/issues/672\n\nIs this related to issue #34?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/100", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/100/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/100/events", "html_url": "https://github.com/box/flaky/issues/100", "id": 143159155, "node_id": "MDU6SXNzdWUxNDMxNTkxNTU=", "number": 100, "title": "Missing git tag for 3.1.1 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-24T05:43:56Z", "updated_at": "2016-03-24T23:45:43Z", "closed_at": "2016-03-24T23:45:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be nice to keep the git tags and pypi releases in sync :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/99", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/99/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/99/events", "html_url": "https://github.com/box/flaky/issues/99", "id": 141281927, "node_id": "MDU6SXNzdWUxNDEyODE5Mjc=", "number": 99, "title": "flaky makes py.test --pep8 crash.", "user": {"login": "gbin", "id": 975564, "node_id": "MDQ6VXNlcjk3NTU2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/975564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbin", "html_url": "https://github.com/gbin", "followers_url": "https://api.github.com/users/gbin/followers", "following_url": "https://api.github.com/users/gbin/following{/other_user}", "gists_url": "https://api.github.com/users/gbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbin/subscriptions", "organizations_url": "https://api.github.com/users/gbin/orgs", "repos_url": "https://api.github.com/users/gbin/repos", "events_url": "https://api.github.com/users/gbin/events{/privacy}", "received_events_url": "https://api.github.com/users/gbin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-03-16T13:53:05Z", "updated_at": "2016-07-21T21:33:22Z", "closed_at": "2016-07-21T21:33:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Initially reported here: https://github.com/errbotio/errbot/issues/672\nSimilar issue here: https://github.com/box/flaky/issues/34\n\n```\n(botbot)\u279c  err-jenkins git:(master) coverage run --source jenkinsBot -m py.test --pep8\n================================================= test session starts =================================================\nplatform linux -- Python 3.4.3, pytest-2.9.0, py-1.4.31, pluggy-0.3.1\nrootdir: /home/jtanay/dev/botbot/plugins/err-jenkins, inifile: \nplugins: flaky-3.1.0, cov-2.2.1, xdist-1.14, pep8-1.0.6\ncollected 12 items \nINTERNALERROR> Traceback (most recent call last):\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/main.py\", line 94, in wrap_session\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/main.py\", line 125, in _main\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\nINTERNALERROR>     res = hook_impl.function(*args)\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/main.py\", line 150, in pytest_runtestloop\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 595, in execute\nINTERNALERROR>     return _wrapped_call(hook_impl.function(*args), self.execute)\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 253, in _wrapped_call\nINTERNALERROR>     return call_outcome.get_result()\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 278, in get_result\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\nINTERNALERROR>     self.result = func()\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\nINTERNALERROR>     res = hook_impl.function(*args)\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/flaky/flaky_pytest_plugin.py\", line 68, in pytest_runtest_protocol\nINTERNALERROR>     self._copy_flaky_attributes(item, test_instance)\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/flaky/_flaky_plugin.py\", line 404, in _copy_flaky_attributes\nINTERNALERROR>     _, test_callable, _ = cls._get_test_declaration_callable_and_name(test)\nINTERNALERROR>   File \"/home/jtanay/.virtualenvs/botbot/lib/python3.4/site-packages/flaky/flaky_pytest_plugin.py\", line 359, in _get_test_declaration_callable_and_name\nINTERNALERROR>     elif hasattr(test.module, callable_name):\nINTERNALERROR> AttributeError: 'Pep8Item' object has no attribute 'module'\n============================================ no tests ran in 0.94 seconds =============================================\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/97", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/97/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/97/events", "html_url": "https://github.com/box/flaky/issues/97", "id": 140513383, "node_id": "MDU6SXNzdWUxNDA1MTMzODM=", "number": 97, "title": "Which test to run when packaging for linux distribution", "user": {"login": "DamienCassou", "id": 217543, "node_id": "MDQ6VXNlcjIxNzU0Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/217543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DamienCassou", "html_url": "https://github.com/DamienCassou", "followers_url": "https://api.github.com/users/DamienCassou/followers", "following_url": "https://api.github.com/users/DamienCassou/following{/other_user}", "gists_url": "https://api.github.com/users/DamienCassou/gists{/gist_id}", "starred_url": "https://api.github.com/users/DamienCassou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DamienCassou/subscriptions", "organizations_url": "https://api.github.com/users/DamienCassou/orgs", "repos_url": "https://api.github.com/users/DamienCassou/repos", "events_url": "https://api.github.com/users/DamienCassou/events{/privacy}", "received_events_url": "https://api.github.com/users/DamienCassou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-13T18:29:31Z", "updated_at": "2016-03-15T21:17:54Z", "closed_at": "2016-03-15T21:17:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm packaging flaky for my linux distribution nixos. Which tests are important to run when checking the package? What are their dependencies?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/96", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/96/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/96/events", "html_url": "https://github.com/box/flaky/issues/96", "id": 135571129, "node_id": "MDU6SXNzdWUxMzU1NzExMjk=", "number": 96, "title": "Flaky counts a skipped unittest test as a failure", "user": {"login": "MagiMaster", "id": 1844228, "node_id": "MDQ6VXNlcjE4NDQyMjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1844228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MagiMaster", "html_url": "https://github.com/MagiMaster", "followers_url": "https://api.github.com/users/MagiMaster/followers", "following_url": "https://api.github.com/users/MagiMaster/following{/other_user}", "gists_url": "https://api.github.com/users/MagiMaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/MagiMaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MagiMaster/subscriptions", "organizations_url": "https://api.github.com/users/MagiMaster/orgs", "repos_url": "https://api.github.com/users/MagiMaster/repos", "events_url": "https://api.github.com/users/MagiMaster/events{/privacy}", "received_events_url": "https://api.github.com/users/MagiMaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-22T22:54:33Z", "updated_at": "2016-03-23T17:20:13Z", "closed_at": "2016-03-23T17:20:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a test is skipped via unittest.skip(), it's counted as a failure and rerun. (If it's skipped via pytest.mark.skipif, it seems to work fine.)\n\nThis causes the test to get reported multiple times (it's correctly reported as skipped each time in the xml), which causes problems with xdist again (trying to remove tests from the queue multiple times).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/94", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/94/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/94/events", "html_url": "https://github.com/box/flaky/issues/94", "id": 131153487, "node_id": "MDU6SXNzdWUxMzExNTM0ODc=", "number": 94, "title": "Doesn't work with teamcity-messages", "user": {"login": "SBoudrias", "id": 923865, "node_id": "MDQ6VXNlcjkyMzg2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/923865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SBoudrias", "html_url": "https://github.com/SBoudrias", "followers_url": "https://api.github.com/users/SBoudrias/followers", "following_url": "https://api.github.com/users/SBoudrias/following{/other_user}", "gists_url": "https://api.github.com/users/SBoudrias/gists{/gist_id}", "starred_url": "https://api.github.com/users/SBoudrias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SBoudrias/subscriptions", "organizations_url": "https://api.github.com/users/SBoudrias/orgs", "repos_url": "https://api.github.com/users/SBoudrias/repos", "events_url": "https://api.github.com/users/SBoudrias/events{/privacy}", "received_events_url": "https://api.github.com/users/SBoudrias/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-03T21:06:44Z", "updated_at": "2016-02-11T22:45:48Z", "closed_at": "2016-02-11T22:45:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, looks like flaky is not working very well with `teamcity-messages` (under pytest for my case).\n\nFor some reason, every retries seems to log an empty line, and a failure status is logged alone on it's line without the test name.\n\nHere's the log I'm encountering:\n\n```\n[14:37:58][Step 4/8] test.test_name\n[14:37:59][test.test_name] \n[14:37:59][Step 4/8] \n[14:37:59][Step 4/8] \n[14:37:59][Step 4/8] \n[14:37:59][Step 4/8] FAILED\n```\n\nSo I'm wondering if maybe test retries are missing some metadata allowing them to be correctly logged?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/92", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/92/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/92/events", "html_url": "https://github.com/box/flaky/issues/92", "id": 129243590, "node_id": "MDU6SXNzdWUxMjkyNDM1OTA=", "number": 92, "title": "Flaky doesn't work with xdist", "user": {"login": "MagiMaster", "id": 1844228, "node_id": "MDQ6VXNlcjE4NDQyMjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1844228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MagiMaster", "html_url": "https://github.com/MagiMaster", "followers_url": "https://api.github.com/users/MagiMaster/followers", "following_url": "https://api.github.com/users/MagiMaster/following{/other_user}", "gists_url": "https://api.github.com/users/MagiMaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/MagiMaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MagiMaster/subscriptions", "organizations_url": "https://api.github.com/users/MagiMaster/orgs", "repos_url": "https://api.github.com/users/MagiMaster/repos", "events_url": "https://api.github.com/users/MagiMaster/events{/privacy}", "received_events_url": "https://api.github.com/users/MagiMaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-01-27T19:26:09Z", "updated_at": "2017-07-06T09:43:52Z", "closed_at": "2016-02-11T22:45:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Flaky adds the item field to the report in pytest_runtest_makereport, which is of a type that execnet can't serialize in gateway_base.py, which leads to an error like this:\nINTERNALERROR>   File \"/usr/local/lib/python2.7/dist-packages/execnet/gateway_base.py\", line 1388, in _save\nINTERNALERROR>     raise DumpError(\"can't serialize %s\" % (tp,))\nINTERNALERROR> DumpError: can't serialize <class '_pytest.unittest.TestCaseFunction'>\n\nVersions used: Python 2.7.6, pytest-2.8.3, py-1.4.30, pluggy-0.3.1, flaky-3.0.1, random-0.02, xdist-1.13.1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/91", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/91/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/91/events", "html_url": "https://github.com/box/flaky/issues/91", "id": 127759343, "node_id": "MDU6SXNzdWUxMjc3NTkzNDM=", "number": 91, "title": "pytest , tox , flaky;'TestReport' object has no attribute 'item'", "user": {"login": "nvdeepa", "id": 3834772, "node_id": "MDQ6VXNlcjM4MzQ3NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3834772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nvdeepa", "html_url": "https://github.com/nvdeepa", "followers_url": "https://api.github.com/users/nvdeepa/followers", "following_url": "https://api.github.com/users/nvdeepa/following{/other_user}", "gists_url": "https://api.github.com/users/nvdeepa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nvdeepa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nvdeepa/subscriptions", "organizations_url": "https://api.github.com/users/nvdeepa/orgs", "repos_url": "https://api.github.com/users/nvdeepa/repos", "events_url": "https://api.github.com/users/nvdeepa/events{/privacy}", "received_events_url": "https://api.github.com/users/nvdeepa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-20T19:00:28Z", "updated_at": "2016-02-11T22:45:48Z", "closed_at": "2016-02-11T22:45:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "During results reporting I get this error, seems to be a basic issue, any help is appreciated.\n\n....test completed successfully .....\n\nINTERNALERROR> Traceback (most recent call last):\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/main.py\", line 90, in wrap_session\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/main.py\", line 121, in _main\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 301, in __call__\nINTERNALERROR>     return outcome.get_result()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\nINTERNALERROR>     _reraise(*ex)  # noqa\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\nINTERNALERROR>     self.result = func()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 299, in <lambda>\nINTERNALERROR>     outcome = _CallOutcome(lambda: self.oldcall(hook, hook_impls, kwargs))\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\nINTERNALERROR>     res = hook_impl.function(*args)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/main.py\", line 146, in pytest_runtestloop\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 301, in __call__\nINTERNALERROR>     return outcome.get_result()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\nINTERNALERROR>     _reraise(*ex)  # noqa\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\nINTERNALERROR>     self.result = func()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 299, in <lambda>\nINTERNALERROR>     outcome = _CallOutcome(lambda: self.oldcall(hook, hook_impls, kwargs))\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 595, in execute\nINTERNALERROR>     return _wrapped_call(hook_impl.function(_args), self.execute)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 253, in _wrapped_call\nINTERNALERROR>     return call_outcome.get_result()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\nINTERNALERROR>     _reraise(_ex)  # noqa\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\nINTERNALERROR>     self.result = func()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\nINTERNALERROR>     res = hook_impl.function(*args)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/flaky/flaky_pytest_plugin.py\", line 84, in pytest_runtest_protocol\nINTERNALERROR>     self.runner.pytest_runtest_protocol(item, nextitem)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/runner.py\", line 65, in pytest_runtest_protocol\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/runner.py\", line 75, in runtestprotocol\nINTERNALERROR>     reports.append(call_and_report(item, \"call\", log))\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/runner.py\", line 123, in call_and_report\nINTERNALERROR>     hook.pytest_runtest_logreport(report=report)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 301, in __call__\nINTERNALERROR>     return outcome.get_result()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\nINTERNALERROR>     _reraise(*ex)  # noqa\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\nINTERNALERROR>     self.result = func()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 299, in <lambda>\nINTERNALERROR>     outcome = _CallOutcome(lambda: self.oldcall(hook, hook_impls, kwargs))\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\nINTERNALERROR>     res = hook_impl.function(*args)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/resultlog.py\", line 74, in pytest_runtest_logreport\nINTERNALERROR>     res = self.config.hook.pytest_report_teststatus(report=report)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 301, in __call__\nINTERNALERROR>     return outcome.get_result()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\nINTERNALERROR>     _reraise(*ex)  # noqa\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\nINTERNALERROR>     self.result = func()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 299, in <lambda>\nINTERNALERROR>     outcome = _CallOutcome(lambda: self.oldcall(hook, hook_impls, kwargs))\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 595, in execute\nINTERNALERROR>     return _wrapped_call(hook_impl.function(*args), self.execute)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 249, in _wrapped_call\nINTERNALERROR>     wrap_controller.send(call_outcome)\nINTERNALERROR>   File \"/tmp/devpi-test3/dlb-dcp-test-1.1.0.dev12/.tox/prod1/lib/python2.7/site-packages/flaky/flaky_pytest_plugin.py\", line 150, in pytest_report_teststatus\nINTERNALERROR>     item = report.item\nINTERNALERROR> AttributeError: 'TestReport' object has no attribute 'item'\n(debug) [scutils-plugin]Forcing to serialize the specmap file during scutils session finish\n(info) [dvcp-dev-2.2.0.58-junit-cucm-prod1.specmap] saving report to /home-local/voiceqa/jenkins/workspace/voiceqa-dlb-dcp-tests-ProdAutoLab-voiceqaDevIndex/dvcp-dev-2.2.0.58-junit-cucm-prod1.specmap\n\npackages in the tox environment for the above run:\n\n(prod1)[voiceqa@dsv-bvsrv-08 ~]$ pip freeze\nYou are using pip version 6.1.1, however version 8.0.0 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\nbeautifulsoup4==4.4.1\nconfigparser2==4.0.0\ndlb-dcp-ap==1.1.0.dev13\ndlb-dcp-prov-client==1.2.0.dev9\ndlb-dcp-test==1.1.0.dev12\ndlb-voice-common==1.0.0\ndolby-commander==2.1.0\nflaky==3.0.3\ngti-common==1.2.0.dev1\ngti-containers==3.0\ngti-docutils==1.0\ngti-scutils==1.0.6\ngti-toolwrappers==2.0.1\ngti-utils==2.0.1\nhtml2text==2016.1.8\nhttplib2==0.9.2\npexpect==4.0.1\nptyprocess==0.5\npy==1.4.31\nPyro4==4.39\npytest==2.8.5\npytest-scutils==1.0.1\npytest-specmap==1.0.3\npython-dateutil==2.4.2\npytl==1.0.2\nPyYAML==3.11\nrequests==2.9.1\nserpent==1.12\nsix==1.10.0\nwget==3.2\nxlrd==0.9.4\nxlutils==1.7.1\nxlwt==1.0.0\n(prod1)[voiceqa@dsv-bvsrv-08 ~]$ \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/88", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/88/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/88/events", "html_url": "https://github.com/box/flaky/issues/88", "id": 125396749, "node_id": "MDU6SXNzdWUxMjUzOTY3NDk=", "number": 88, "title": "Using flaky breaks test reporting", "user": {"login": "sajnikanth", "id": 1302742, "node_id": "MDQ6VXNlcjEzMDI3NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1302742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sajnikanth", "html_url": "https://github.com/sajnikanth", "followers_url": "https://api.github.com/users/sajnikanth/followers", "following_url": "https://api.github.com/users/sajnikanth/following{/other_user}", "gists_url": "https://api.github.com/users/sajnikanth/gists{/gist_id}", "starred_url": "https://api.github.com/users/sajnikanth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sajnikanth/subscriptions", "organizations_url": "https://api.github.com/users/sajnikanth/orgs", "repos_url": "https://api.github.com/users/sajnikanth/repos", "events_url": "https://api.github.com/users/sajnikanth/events{/privacy}", "received_events_url": "https://api.github.com/users/sajnikanth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-07T13:46:39Z", "updated_at": "2016-01-26T15:56:43Z", "closed_at": "2016-01-19T20:35:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Info**\nReport generation breaks when using `flaky` with [Allure](http://allure.qatools.ru) or [nosedbreport](https://github.com/alisaifee/nosedbreport).\n\n**Steps (allure)**\n- Setup `allure`\n- Setup `flaky`\n- This is my test: `test.py`\n\n```\nfrom flaky import flaky\n\n@flaky\ndef test_1():\n     assert 1 == 1, 'error message'\n```\n- Run this test with `allure` without `flaky`\n\n```\nnosetests test.py --with-allure --logdir=./allure-results\n```\n- Check result generated\n\n```\n    <ns0:test-suite xmlns:ns0=\"urn:model.allure.qatools.yandex.ru\" start=\"1452172898710\" stop=\"1452172898711\">\n      <name>test</name>\n      <test-cases>\n        <test-case start=\"1452172898710\" status=\"passed\" stop=\"1452172898710\">\n          <name>test.test_1</name>\n          <attachments/>\n          <labels/>\n          <steps/>\n        </test-case>\n      </test-cases>\n      <labels/>\n    </ns0:test-suite>\n```\n- Run this test again with `allure` and `flaky`\n\n```\nnosetests test.py --with-allure --logdir=./allure-results-flaky --with-flaky\n```\n- Check result generated\n\n```\n    <ns0:test-suite xmlns:ns0=\"urn:model.allure.qatools.yandex.ru\" start=\"1452172868032\" stop=\"1452172868033\">\n      <name>test</name>\n      <test-cases/>\n      <labels/>\n    </ns0:test-suite>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/87", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/87/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/87/events", "html_url": "https://github.com/box/flaky/issues/87", "id": 125349221, "node_id": "MDU6SXNzdWUxMjUzNDkyMjE=", "number": 87, "title": "testsuite incomplete in pypi in flaky-3.0.1", "user": {"login": "jlec", "id": 79732, "node_id": "MDQ6VXNlcjc5NzMy", "avatar_url": "https://avatars0.githubusercontent.com/u/79732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlec", "html_url": "https://github.com/jlec", "followers_url": "https://api.github.com/users/jlec/followers", "following_url": "https://api.github.com/users/jlec/following{/other_user}", "gists_url": "https://api.github.com/users/jlec/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlec/subscriptions", "organizations_url": "https://api.github.com/users/jlec/orgs", "repos_url": "https://api.github.com/users/jlec/repos", "events_url": "https://api.github.com/users/jlec/events{/privacy}", "received_events_url": "https://api.github.com/users/jlec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-07T08:34:49Z", "updated_at": "2016-01-19T21:02:17Z", "closed_at": "2016-01-19T21:02:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Recent changes in the testsuite resulted in an incomplete shipping to pypi. Please include all subfolders of .../tests in the pypi package.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/86", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/86/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/86/events", "html_url": "https://github.com/box/flaky/issues/86", "id": 123346467, "node_id": "MDU6SXNzdWUxMjMzNDY0Njc=", "number": 86, "title": "Tag 3.0.1 release", "user": {"login": "mithrandi", "id": 856430, "node_id": "MDQ6VXNlcjg1NjQzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/856430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mithrandi", "html_url": "https://github.com/mithrandi", "followers_url": "https://api.github.com/users/mithrandi/followers", "following_url": "https://api.github.com/users/mithrandi/following{/other_user}", "gists_url": "https://api.github.com/users/mithrandi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mithrandi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mithrandi/subscriptions", "organizations_url": "https://api.github.com/users/mithrandi/orgs", "repos_url": "https://api.github.com/users/mithrandi/repos", "events_url": "https://api.github.com/users/mithrandi/events{/privacy}", "received_events_url": "https://api.github.com/users/mithrandi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-21T19:54:31Z", "updated_at": "2015-12-21T21:31:08Z", "closed_at": "2015-12-21T21:31:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "There's a 3.0.1 release up on PyPI, but no corresponding tag here on GitHub; I assume this is just a simple oversight.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/84", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/84/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/84/events", "html_url": "https://github.com/box/flaky/issues/84", "id": 122819985, "node_id": "MDU6SXNzdWUxMjI4MTk5ODU=", "number": 84, "title": "Using rerun_filter causes INTERNALERROR", "user": {"login": "JMoravec", "id": 3374503, "node_id": "MDQ6VXNlcjMzNzQ1MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3374503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JMoravec", "html_url": "https://github.com/JMoravec", "followers_url": "https://api.github.com/users/JMoravec/followers", "following_url": "https://api.github.com/users/JMoravec/following{/other_user}", "gists_url": "https://api.github.com/users/JMoravec/gists{/gist_id}", "starred_url": "https://api.github.com/users/JMoravec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JMoravec/subscriptions", "organizations_url": "https://api.github.com/users/JMoravec/orgs", "repos_url": "https://api.github.com/users/JMoravec/repos", "events_url": "https://api.github.com/users/JMoravec/events{/privacy}", "received_events_url": "https://api.github.com/users/JMoravec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-17T20:46:58Z", "updated_at": "2015-12-21T21:30:07Z", "closed_at": "2015-12-21T21:30:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the new version and rerunning the setup, I was able to start using flaky. But when I added a rerun_filter to the tests, I get the following error\n\n`INTERNALERROR> TypeError: 'NoneType' object is not subscriptable`\n\nSome digging into it looks like the `err` param is being passed as `None` to the rerun filter method:\n\n``` python\ndef is_not_video_error(err, *args):\n    raise not issubclass(err[0], VideoProcessingException))\n\n@flaky(rerun_filter=is_not_video_error)\nclass ...\n```\n\nHere's the full stack trace: http://pastebin.com/kY7nE8E8\n\nAm i missing something in my code?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/82", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/82/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/82/events", "html_url": "https://github.com/box/flaky/issues/82", "id": 122458809, "node_id": "MDU6SXNzdWUxMjI0NTg4MDk=", "number": 82, "title": "AttributeError: _call_infos when running with pytester plugin", "user": {"login": "DRMacIver", "id": 28623, "node_id": "MDQ6VXNlcjI4NjIz", "avatar_url": "https://avatars0.githubusercontent.com/u/28623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DRMacIver", "html_url": "https://github.com/DRMacIver", "followers_url": "https://api.github.com/users/DRMacIver/followers", "following_url": "https://api.github.com/users/DRMacIver/following{/other_user}", "gists_url": "https://api.github.com/users/DRMacIver/gists{/gist_id}", "starred_url": "https://api.github.com/users/DRMacIver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DRMacIver/subscriptions", "organizations_url": "https://api.github.com/users/DRMacIver/orgs", "repos_url": "https://api.github.com/users/DRMacIver/repos", "events_url": "https://api.github.com/users/DRMacIver/events{/privacy}", "received_events_url": "https://api.github.com/users/DRMacIver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-16T09:09:41Z", "updated_at": "2015-12-16T19:12:22Z", "closed_at": "2015-12-16T19:12:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the pytester plugin to test my pytest plugin for Hypothesis. If I happen to have flaky installed when I do, it goes a bit wrong.\n\nIf I run the following test while flaky is installed:\n\n``` python\nimport pytest\n\npytest_plugins = str('pytester')\n\nTESTSUITE = \"\"\"\ndef test_a_thing():\n    pass\n\n\"\"\"\n\n\ndef test_output_without_capture(testdir):\n    script = testdir.makepyfile(TESTSUITE)\n    result = testdir.runpytest(script, '--verbose', '--capture', 'fd')\n    assert result.ret == 0\n```\n\nI get the following output:\n\n```\nINTERNALERROR> Traceback (most recent call last):\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/main.py\", line 90, in wrap_session\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/main.py\", line 121, in _main\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\nINTERNALERROR>     res = hook_impl.function(*args)\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/main.py\", line 146, in pytest_runtestloop\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 724, in __call__\nINTERNALERROR>     return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 338, in _hookexec\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 333, in <lambda>\nINTERNALERROR>     _MultiCall(methods, kwargs, hook.spec_opts).execute()\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 595, in execute\nINTERNALERROR>     return _wrapped_call(hook_impl.function(*args), self.execute)\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 253, in _wrapped_call\nINTERNALERROR>     return call_outcome.get_result()\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 279, in get_result\nINTERNALERROR>     _reraise(*ex)  # noqa\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 264, in __init__\nINTERNALERROR>     self.result = func()\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/_pytest/vendored_packages/pluggy.py\", line 596, in execute\nINTERNALERROR>     res = hook_impl.function(*args)\nINTERNALERROR>   File \"/home/david/projects/scratch/flakytest/flaker/lib/python2.7/site-packages/flaky/flaky_pytest_plugin.py\", line 98, in pytest_runtest_protocol\nINTERNALERROR>     del self._call_infos\nINTERNALERROR> AttributeError: _call_infos\n```\n\nNote: The test passes (I'm not totally sure why), but it still causes this output.\n\nI think this is because pytester is running in inprocess mode, so the plugin is being called recursively and trying to delete the attribute twice. Indeed, adding the flags \"-p pytester --runpytest subprocess\" to get pytester to default to subprocess mode causes the problem to go away.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/78", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/78/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/78/events", "html_url": "https://github.com/box/flaky/issues/78", "id": 120870576, "node_id": "MDU6SXNzdWUxMjA4NzA1NzY=", "number": 78, "title": "Errors out when running with nose multiprocess", "user": {"login": "danielwuz", "id": 2131469, "node_id": "MDQ6VXNlcjIxMzE0Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2131469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielwuz", "html_url": "https://github.com/danielwuz", "followers_url": "https://api.github.com/users/danielwuz/followers", "following_url": "https://api.github.com/users/danielwuz/following{/other_user}", "gists_url": "https://api.github.com/users/danielwuz/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielwuz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielwuz/subscriptions", "organizations_url": "https://api.github.com/users/danielwuz/orgs", "repos_url": "https://api.github.com/users/danielwuz/repos", "events_url": "https://api.github.com/users/danielwuz/events{/privacy}", "received_events_url": "https://api.github.com/users/danielwuz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-07T21:21:15Z", "updated_at": "2015-12-10T15:27:49Z", "closed_at": "2015-12-10T15:27:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running with `--processes` flag in nose tests, I receive below error message:\n\n```\n20:51:00     is_multiprocess = getattr(options, 'multiprocess_workers', 0) > 0\n20:51:00 TypeError: unorderable types: str() > int()\n```\n\nI believe this is caused [here](https://github.com/box/flaky/blob/master/flaky/flaky_nose_plugin.py#L72) and I've created a [PR](https://github.com/box/flaky/pull/77) to fix this issue.\n\nFYI, below is the command I used to run my tests:\n\n```\nnosetests --processes=6 --process-timeout=3600 --process-restartworker --with-flaky --force-flaky --max-runs=3 -v tests/functional 2>&1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/73", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/73/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/73/events", "html_url": "https://github.com/box/flaky/issues/73", "id": 115284651, "node_id": "MDU6SXNzdWUxMTUyODQ2NTE=", "number": 73, "title": "Delay", "user": {"login": "wernight", "id": 145667, "node_id": "MDQ6VXNlcjE0NTY2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/145667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wernight", "html_url": "https://github.com/wernight", "followers_url": "https://api.github.com/users/wernight/followers", "following_url": "https://api.github.com/users/wernight/following{/other_user}", "gists_url": "https://api.github.com/users/wernight/gists{/gist_id}", "starred_url": "https://api.github.com/users/wernight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wernight/subscriptions", "organizations_url": "https://api.github.com/users/wernight/orgs", "repos_url": "https://api.github.com/users/wernight/repos", "events_url": "https://api.github.com/users/wernight/events{/privacy}", "received_events_url": "https://api.github.com/users/wernight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-05T13:34:48Z", "updated_at": "2015-11-05T19:34:56Z", "closed_at": "2015-11-05T19:33:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be useful to have a `delay` optional parameter that would add a sleep between each retry.\n\nAlso a `msg` or `message` would be useful just as a way to have also in the output why it may be flaky (in cases it flakes or fails especially).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/72", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/72/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/72/events", "html_url": "https://github.com/box/flaky/issues/72", "id": 115049898, "node_id": "MDU6SXNzdWUxMTUwNDk4OTg=", "number": 72, "title": "pypi tarball is missing test/base_test_case.py", "user": {"login": "jlec", "id": 79732, "node_id": "MDQ6VXNlcjc5NzMy", "avatar_url": "https://avatars0.githubusercontent.com/u/79732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlec", "html_url": "https://github.com/jlec", "followers_url": "https://api.github.com/users/jlec/followers", "following_url": "https://api.github.com/users/jlec/following{/other_user}", "gists_url": "https://api.github.com/users/jlec/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlec/subscriptions", "organizations_url": "https://api.github.com/users/jlec/orgs", "repos_url": "https://api.github.com/users/jlec/repos", "events_url": "https://api.github.com/users/jlec/events{/privacy}", "received_events_url": "https://api.github.com/users/jlec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-11-04T13:16:40Z", "updated_at": "2015-11-05T21:20:53Z", "closed_at": "2015-11-05T21:20:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "While packaging for downstream and running the test suite I hit\n\n``` python\nEEEEEE\n======================================================================\nERROR: Failure: ImportError (No module named 'test.base_test_case')\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/failure.py\", line 39, in runTest\n    raise self.exc_val.with_traceback(self.tb)\n  File \"/usr/lib64/python3.3/site-packages/nose/loader.py\", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib64/python3.3/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib64/python3.3/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/usr/lib64/python3.3/imp.py\", line 180, in load_module\n    return load_source(name, filename, file)\n  File \"/usr/lib64/python3.3/imp.py\", line 119, in load_source\n    _LoadSourceCompatibility(name, pathname, file).load_module(name)\n  File \"<frozen importlib._bootstrap>\", line 584, in _check_name_wrapper\n  File \"<frozen importlib._bootstrap>\", line 1022, in load_module\n  File \"<frozen importlib._bootstrap>\", line 1003, in load_module\n  File \"<frozen importlib._bootstrap>\", line 560, in module_for_loader_wrapper\n  File \"<frozen importlib._bootstrap>\", line 868, in _load_module\n  File \"<frozen importlib._bootstrap>\", line 313, in _call_with_frames_removed\n  File \"/var/tmp/portage/dev-python/flaky-2.4.0/work/flaky-2.4.0/test/test_flaky_decorator.py\", line 6, in <module>\n    from test.base_test_case import TestCase\nImportError: No module named 'test.base_test_case'\n\n======================================================================\nERROR: Failure: ImportError (No module named 'test.base_test_case')\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/failure.py\", line 39, in runTest\n    raise self.exc_val.with_traceback(self.tb)\n  File \"/usr/lib64/python3.3/site-packages/nose/loader.py\", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib64/python3.3/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib64/python3.3/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/usr/lib64/python3.3/imp.py\", line 180, in load_module\n    return load_source(name, filename, file)\n  File \"/usr/lib64/python3.3/imp.py\", line 119, in load_source\n    _LoadSourceCompatibility(name, pathname, file).load_module(name)\n  File \"<frozen importlib._bootstrap>\", line 584, in _check_name_wrapper\n  File \"<frozen importlib._bootstrap>\", line 1022, in load_module\n  File \"<frozen importlib._bootstrap>\", line 1003, in load_module\n  File \"<frozen importlib._bootstrap>\", line 560, in module_for_loader_wrapper\n  File \"<frozen importlib._bootstrap>\", line 868, in _load_module\n  File \"<frozen importlib._bootstrap>\", line 313, in _call_with_frames_removed\n  File \"/var/tmp/portage/dev-python/flaky-2.4.0/work/flaky-2.4.0/test/test_flaky_nose_plugin.py\", line 12, in <module>\n    from test.base_test_case import TestCase\nImportError: No module named 'test.base_test_case'\n\n======================================================================\nERROR: Failure: ImportError (No module named 'test.base_test_case')\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/failure.py\", line 39, in runTest\n    raise self.exc_val.with_traceback(self.tb)\n  File \"/usr/lib64/python3.3/site-packages/nose/loader.py\", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib64/python3.3/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib64/python3.3/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/usr/lib64/python3.3/imp.py\", line 180, in load_module\n    return load_source(name, filename, file)\n  File \"/usr/lib64/python3.3/imp.py\", line 119, in load_source\n    _LoadSourceCompatibility(name, pathname, file).load_module(name)\n  File \"<frozen importlib._bootstrap>\", line 584, in _check_name_wrapper\n  File \"<frozen importlib._bootstrap>\", line 1022, in load_module\n  File \"<frozen importlib._bootstrap>\", line 1003, in load_module\n  File \"<frozen importlib._bootstrap>\", line 560, in module_for_loader_wrapper\n  File \"<frozen importlib._bootstrap>\", line 868, in _load_module\n  File \"<frozen importlib._bootstrap>\", line 313, in _call_with_frames_removed\n  File \"/var/tmp/portage/dev-python/flaky-2.4.0/work/flaky-2.4.0/test/test_flaky_plugin.py\", line 8, in <module>\n    from test.base_test_case import TestCase\nImportError: No module named 'test.base_test_case'\n\n======================================================================\nERROR: Failure: ImportError (No module named 'test.base_test_case')\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/failure.py\", line 39, in runTest\n    raise self.exc_val.with_traceback(self.tb)\n  File \"/usr/lib64/python3.3/site-packages/nose/loader.py\", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib64/python3.3/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib64/python3.3/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/usr/lib64/python3.3/imp.py\", line 180, in load_module\n    return load_source(name, filename, file)\n  File \"/usr/lib64/python3.3/imp.py\", line 119, in load_source\n    _LoadSourceCompatibility(name, pathname, file).load_module(name)\n  File \"<frozen importlib._bootstrap>\", line 584, in _check_name_wrapper\n  File \"<frozen importlib._bootstrap>\", line 1022, in load_module\n  File \"<frozen importlib._bootstrap>\", line 1003, in load_module\n  File \"<frozen importlib._bootstrap>\", line 560, in module_for_loader_wrapper\n  File \"<frozen importlib._bootstrap>\", line 868, in _load_module\n  File \"<frozen importlib._bootstrap>\", line 313, in _call_with_frames_removed\n  File \"/var/tmp/portage/dev-python/flaky-2.4.0/work/flaky-2.4.0/test/test_multiprocess_string_io.py\", line 8, in <module>\n    from test.base_test_case import TestCase\nImportError: No module named 'test.base_test_case'\n\n======================================================================\nERROR: Failure: ImportError (No module named 'test.base_test_case')\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/failure.py\", line 39, in runTest\n    raise self.exc_val.with_traceback(self.tb)\n  File \"/usr/lib64/python3.3/site-packages/nose/loader.py\", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib64/python3.3/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib64/python3.3/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/usr/lib64/python3.3/imp.py\", line 180, in load_module\n    return load_source(name, filename, file)\n  File \"/usr/lib64/python3.3/imp.py\", line 119, in load_source\n    _LoadSourceCompatibility(name, pathname, file).load_module(name)\n  File \"<frozen importlib._bootstrap>\", line 584, in _check_name_wrapper\n  File \"<frozen importlib._bootstrap>\", line 1022, in load_module\n  File \"<frozen importlib._bootstrap>\", line 1003, in load_module\n  File \"<frozen importlib._bootstrap>\", line 560, in module_for_loader_wrapper\n  File \"<frozen importlib._bootstrap>\", line 868, in _load_module\n  File \"<frozen importlib._bootstrap>\", line 313, in _call_with_frames_removed\n  File \"/var/tmp/portage/dev-python/flaky-2.4.0/work/flaky-2.4.0/test/test_nose_example.py\", line 11, in <module>\n    from test.base_test_case import TestCase, expectedFailure, skip\nImportError: No module named 'test.base_test_case'\n\n======================================================================\nERROR: Failure: ImportError (No module named 'test.base_test_case')\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.3/site-packages/nose/failure.py\", line 39, in runTest\n    raise self.exc_val.with_traceback(self.tb)\n  File \"/usr/lib64/python3.3/site-packages/nose/loader.py\", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib64/python3.3/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib64/python3.3/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/usr/lib64/python3.3/imp.py\", line 180, in load_module\n    return load_source(name, filename, file)\n  File \"/usr/lib64/python3.3/imp.py\", line 119, in load_source\n    _LoadSourceCompatibility(name, pathname, file).load_module(name)\n  File \"<frozen importlib._bootstrap>\", line 584, in _check_name_wrapper\n  File \"<frozen importlib._bootstrap>\", line 1022, in load_module\n  File \"<frozen importlib._bootstrap>\", line 1003, in load_module\n  File \"<frozen importlib._bootstrap>\", line 560, in module_for_loader_wrapper\n  File \"<frozen importlib._bootstrap>\", line 868, in _load_module\n  File \"<frozen importlib._bootstrap>\", line 313, in _call_with_frames_removed\n  File \"/var/tmp/portage/dev-python/flaky-2.4.0/work/flaky-2.4.0/test/test_utils.py\", line 8, in <module>\n    from test.base_test_case import TestCase\nImportError: No module named 'test.base_test_case'\n\n===Flaky Test Report===\n\n\n===End Flaky Test Report===\n----------------------------------------------------------------------\nRan 6 tests in 0.017s\n\nFAILED (errors=6)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/70", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/70/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/70/events", "html_url": "https://github.com/box/flaky/issues/70", "id": 114197054, "node_id": "MDU6SXNzdWUxMTQxOTcwNTQ=", "number": 70, "title": "Django's LiveServerTestCase is not supported", "user": {"login": "emperorcezar", "id": 68407, "node_id": "MDQ6VXNlcjY4NDA3", "avatar_url": "https://avatars2.githubusercontent.com/u/68407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emperorcezar", "html_url": "https://github.com/emperorcezar", "followers_url": "https://api.github.com/users/emperorcezar/followers", "following_url": "https://api.github.com/users/emperorcezar/following{/other_user}", "gists_url": "https://api.github.com/users/emperorcezar/gists{/gist_id}", "starred_url": "https://api.github.com/users/emperorcezar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emperorcezar/subscriptions", "organizations_url": "https://api.github.com/users/emperorcezar/orgs", "repos_url": "https://api.github.com/users/emperorcezar/repos", "events_url": "https://api.github.com/users/emperorcezar/events{/privacy}", "received_events_url": "https://api.github.com/users/emperorcezar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-10-30T04:22:03Z", "updated_at": "2016-07-20T23:06:15Z", "closed_at": "2015-11-05T19:35:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django uses a `__call__` method on the test for setup and teardown of the live server. This currently breaks with flaky. I have a pull request coming momentarily that addresses this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/66", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/66/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/66/events", "html_url": "https://github.com/box/flaky/issues/66", "id": 113344801, "node_id": "MDU6SXNzdWUxMTMzNDQ4MDE=", "number": 66, "title": "multiprocessing support needed for nosetests flaky report", "user": {"login": "benpatterson", "id": 2004678, "node_id": "MDQ6VXNlcjIwMDQ2Nzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/2004678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benpatterson", "html_url": "https://github.com/benpatterson", "followers_url": "https://api.github.com/users/benpatterson/followers", "following_url": "https://api.github.com/users/benpatterson/following{/other_user}", "gists_url": "https://api.github.com/users/benpatterson/gists{/gist_id}", "starred_url": "https://api.github.com/users/benpatterson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benpatterson/subscriptions", "organizations_url": "https://api.github.com/users/benpatterson/orgs", "repos_url": "https://api.github.com/users/benpatterson/repos", "events_url": "https://api.github.com/users/benpatterson/events{/privacy}", "received_events_url": "https://api.github.com/users/benpatterson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-26T12:29:39Z", "updated_at": "2015-10-30T17:24:35Z", "closed_at": "2015-10-30T17:24:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently when running nosetests in multiprocess mode, the flaky report comes up empty (even when there are flaky tests), like this:\n\n```\n===Flaky Test Report===\n\n\n===End Flaky Test Report===\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/64", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/64/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/64/events", "html_url": "https://github.com/box/flaky/issues/64", "id": 112619368, "node_id": "MDU6SXNzdWUxMTI2MTkzNjg=", "number": 64, "title": "Call setup_method & teardown_method on each re-run", "user": {"login": "mangeld", "id": 6747546, "node_id": "MDQ6VXNlcjY3NDc1NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6747546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mangeld", "html_url": "https://github.com/mangeld", "followers_url": "https://api.github.com/users/mangeld/followers", "following_url": "https://api.github.com/users/mangeld/following{/other_user}", "gists_url": "https://api.github.com/users/mangeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/mangeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mangeld/subscriptions", "organizations_url": "https://api.github.com/users/mangeld/orgs", "repos_url": "https://api.github.com/users/mangeld/repos", "events_url": "https://api.github.com/users/mangeld/events{/privacy}", "received_events_url": "https://api.github.com/users/mangeld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 90800097, "node_id": "MDU6TGFiZWw5MDgwMDA5Nw==", "url": "https://api.github.com/repos/box/flaky/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-21T15:45:44Z", "updated_at": "2015-11-05T19:41:12Z", "closed_at": "2015-11-05T19:41:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "If using the setup_class or setup_method to prepare fixtures for a test (like opening a browser in the setup_method and closing it in the teardown_method) should not flaky call those methods aswell on each run?\n\nIt might be related with #53\n\n``` python\n@flaky(min_passes=3, max_runs=6)\nclass TestFlaky:\n\n    def setup_method(self, method):\n        # It's called once\n        pass\n\n    def teardown_method(self, method):\n        # Called once as well\n        pass\n\n    def test_fail_always(self):\n        assert None\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/59", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/59/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/59/events", "html_url": "https://github.com/box/flaky/issues/59", "id": 106371524, "node_id": "MDU6SXNzdWUxMDYzNzE1MjQ=", "number": 59, "title": "`ensure_unicode_string()` throws an exception when argument is an Exception with non-ASCII bytes in the message", "user": {"login": "mark-adams", "id": 472350, "node_id": "MDQ6VXNlcjQ3MjM1MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/472350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-adams", "html_url": "https://github.com/mark-adams", "followers_url": "https://api.github.com/users/mark-adams/followers", "following_url": "https://api.github.com/users/mark-adams/following{/other_user}", "gists_url": "https://api.github.com/users/mark-adams/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-adams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-adams/subscriptions", "organizations_url": "https://api.github.com/users/mark-adams/orgs", "repos_url": "https://api.github.com/users/mark-adams/repos", "events_url": "https://api.github.com/users/mark-adams/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-adams/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-09-14T15:51:22Z", "updated_at": "2015-10-16T03:14:01Z", "closed_at": "2015-10-16T03:14:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "If an object (like an Exception) is passed into ensure_unicode_string and the exception has non-ASCII bytes in the message, it will raise a UnicodeError (which will be caught) and then makes the false assumption that the argument must be a string (and therefore have a .decode() method) resulting in an AttributeError being raised.\n\nThis can happen whenever a test raises an exception that has a message containing non-ASCII bytes. When that happens, the exception gets passed to `ensure_unicode_string()` here https://github.com/box/flaky/blob/master/flaky/_flaky_plugin.py#L43 and raises an exception.\n\nTest case:\n\n``` python\ndef test_ensure_unicode_string_handles_nonascii_exception_message(self):\n        ex = Exception(u'\\u2013'.encode('utf-8'))\n\n        string = ensure_unicode_string(ex)\n        self.assertEqual(string, u'\\u2013')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/57", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/57/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/57/events", "html_url": "https://github.com/box/flaky/issues/57", "id": 106192512, "node_id": "MDU6SXNzdWUxMDYxOTI1MTI=", "number": 57, "title": "Exceptions not raised from class-based fixtures", "user": {"login": "alvinchow86", "id": 5131063, "node_id": "MDQ6VXNlcjUxMzEwNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5131063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvinchow86", "html_url": "https://github.com/alvinchow86", "followers_url": "https://api.github.com/users/alvinchow86/followers", "following_url": "https://api.github.com/users/alvinchow86/following{/other_user}", "gists_url": "https://api.github.com/users/alvinchow86/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvinchow86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvinchow86/subscriptions", "organizations_url": "https://api.github.com/users/alvinchow86/orgs", "repos_url": "https://api.github.com/users/alvinchow86/repos", "events_url": "https://api.github.com/users/alvinchow86/events{/privacy}", "received_events_url": "https://api.github.com/users/alvinchow86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-13T00:38:41Z", "updated_at": "2015-10-16T03:23:40Z", "closed_at": "2015-10-16T03:23:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Very useful library! I did find a bug with flaky, which is that if a class-based fixtures raises an exception, the exception is not raised, and for any tests that use that exception, it appears if the fixture never ran or exists. This makes it very hard to debug the fixture. (Originally I didn't know why this was happening, so I started uninstalling packages until I removed flaky, and things started working again)\n\n(Actually I don't think it's just limited class-based fixtures, this happens in other cases too)\n#### Test Example 1 (does a divide by zero to illustrate a bad fixture)\n\n``` python\nimport pytest\n\nclass TestStuff(object):\n    @pytest.fixture(autouse=True)\n    def setup(self):\n        5 / 0\n        self.foo = 'foo'\n\n    def test_stuff(self):\n        assert self.foo == 'foo'\n```\n\nResulting output:\n\n``` bash\ntest_flaky.py F\n\n=================================================== FAILURES ====================================================\n_____________________________________________ TestStuff.test_stuff ______________________________________________\n\nself = <test_flaky.TestStuff object at 0x10aac3d50>\n\n    def test_stuff(self):\n>       assert self.foo == 'foo'\nE       AttributeError: 'TestStuff' object has no attribute 'foo'\n```\n#### Test Example 2 (variation of above, without autouse=True)\n\n``` python\nclass TestTwo(object):\n    @pytest.fixture\n    def setup(self):\n        5 / 0\n        self.foo = 'foo'\n\n    def test_two(self, setup):\n        assert self.foo == 'foo'\n```\n\nResulting output:\n\n``` bash\nself = <CallInfo when='call' exception: 'setup'>, func = <function <lambda> at 0x101b84668>\nplugin = <flaky.flaky_pytest_plugin.FlakyPlugin object at 0x101b2d1d0>\n\n    def call(self, func, plugin):\n        \"\"\"\n            Call the test function, handling success or failure.\n            :param func:\n                The test function to run.\n            :type func:\n                `callable`\n            :param plugin:\n                Plugin class for flaky that can handle test success or failure.\n            :type plugin:\n                :class: `FlakyPlugin`\n            \"\"\"\n        is_call = self.when == 'call'\n        try:\n>           self.result = func()\n\nvenv/lib/python2.7/site-packages/flaky/flaky_pytest_plugin.py:356:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv/lib/python2.7/site-packages/flaky/flaky_pytest_plugin.py:181: in <lambda>\n    lambda: ihook(item=item, **kwds),\nvenv/lib/python2.7/site-packages/_pytest/core.py:521: in __call__\n    return self._docall(self.methods, kwargs)\nvenv/lib/python2.7/site-packages/_pytest/core.py:528: in _docall\n    firstresult=self.firstresult).execute()\nvenv/lib/python2.7/site-packages/_pytest/core.py:393: in execute\n    return wrapped_call(method(*args), self.execute)\nvenv/lib/python2.7/site-packages/_pytest/core.py:113: in wrapped_call\n    return call_outcome.get_result()\nvenv/lib/python2.7/site-packages/_pytest/core.py:138: in get_result\n    py.builtin._reraise(*ex)\nvenv/lib/python2.7/site-packages/_pytest/core.py:123: in __init__\n    self.result = func()\nvenv/lib/python2.7/site-packages/_pytest/core.py:394: in execute\n    res = method(*args)\nvenv/lib/python2.7/site-packages/_pytest/runner.py:90: in pytest_runtest_call\n    item.runtest()\nvenv/lib/python2.7/site-packages/_pytest/python.py:1181: in runtest\n    self.ihook.pytest_pyfunc_call(pyfuncitem=self)\nvenv/lib/python2.7/site-packages/_pytest/core.py:521: in __call__\n    return self._docall(self.methods, kwargs)\nvenv/lib/python2.7/site-packages/_pytest/core.py:528: in _docall\n    firstresult=self.firstresult).execute()\nvenv/lib/python2.7/site-packages/_pytest/core.py:394: in execute\n    res = method(*args)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npyfuncitem = <Function 'test_two'>\n\n    @pytest.mark.trylast\n    def pytest_pyfunc_call(pyfuncitem):\n        testfunction = pyfuncitem.obj\n        if pyfuncitem._isyieldedfunction():\n            testfunction(*pyfuncitem._args)\n        else:\n            funcargs = pyfuncitem.funcargs\n            testargs = {}\n            for arg in pyfuncitem._fixtureinfo.argnames:\n>               testargs[arg] = funcargs[arg]\nE               KeyError: 'setup'\n```\n#### Expected Output:\n\n``` bash\nself = <test_flaky.TestOne object at 0x104c9fa90>\n\n    @pytest.fixture(autouse=True)\n    def setup(self):\n>       5 / 0\nE       ZeroDivisionError: integer division or modulo by zero\n\ntest_flaky.py:7: ZeroDivisionError\n```\n\nTest file with these examples at https://gist.github.com/alvinchow86/82ff8671dd8db847e251.\n\nThis is with Python 2.7.9, running on OS X Yosemite. Can reproduce this with just these PIP dependencies.\n\n```\nflaky==2.2.0\npy==1.4.30\npytest==2.7.2\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/54", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/54/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/54/events", "html_url": "https://github.com/box/flaky/issues/54", "id": 103369039, "node_id": "MDU6SXNzdWUxMDMzNjkwMzk=", "number": 54, "title": "Add an ability to specify non-retried exceptions", "user": {"login": "DanaGoyette", "id": 1697486, "node_id": "MDQ6VXNlcjE2OTc0ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1697486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanaGoyette", "html_url": "https://github.com/DanaGoyette", "followers_url": "https://api.github.com/users/DanaGoyette/followers", "following_url": "https://api.github.com/users/DanaGoyette/following{/other_user}", "gists_url": "https://api.github.com/users/DanaGoyette/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanaGoyette/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanaGoyette/subscriptions", "organizations_url": "https://api.github.com/users/DanaGoyette/orgs", "repos_url": "https://api.github.com/users/DanaGoyette/repos", "events_url": "https://api.github.com/users/DanaGoyette/events{/privacy}", "received_events_url": "https://api.github.com/users/DanaGoyette/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-26T21:35:44Z", "updated_at": "2015-10-08T17:14:49Z", "closed_at": "2015-10-08T17:14:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to use the \"flaky\" module, but before it's useful for my use case, I'll need to be able to specify which exception classes to retry, either as a whitelist or as a blacklist.\n\nAs an example, I'd like to make sure exceptions in my \"product crashed\" class hierarchy are reported immediately.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/53", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/53/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/53/events", "html_url": "https://github.com/box/flaky/issues/53", "id": 99653833, "node_id": "MDU6SXNzdWU5OTY1MzgzMw==", "number": 53, "title": "pytest: test re-run should also include resetup of all the test-scoped fixtures", "user": {"login": "bubenkoff", "id": 427136, "node_id": "MDQ6VXNlcjQyNzEzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/427136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bubenkoff", "html_url": "https://github.com/bubenkoff", "followers_url": "https://api.github.com/users/bubenkoff/followers", "following_url": "https://api.github.com/users/bubenkoff/following{/other_user}", "gists_url": "https://api.github.com/users/bubenkoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bubenkoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bubenkoff/subscriptions", "organizations_url": "https://api.github.com/users/bubenkoff/orgs", "repos_url": "https://api.github.com/users/bubenkoff/repos", "events_url": "https://api.github.com/users/bubenkoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bubenkoff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-08-07T14:00:42Z", "updated_at": "2015-12-15T01:33:35Z", "closed_at": "2015-12-15T01:33:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is obviously required if fixtures are mutable\nFor example: test logs in using a 'browser' fixture and checks some content on the page loaded by ajax\nIt can be flaky if there's some timeout for ajax to load\nBut with this plugin it will not work as test will not be able to log in again as it's already logged in\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/51", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/51/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/51/events", "html_url": "https://github.com/box/flaky/issues/51", "id": 97937381, "node_id": "MDU6SXNzdWU5NzkzNzM4MQ==", "number": 51, "title": "does not work together with parametrize", "user": {"login": "marcusb", "id": 46314, "node_id": "MDQ6VXNlcjQ2MzE0", "avatar_url": "https://avatars1.githubusercontent.com/u/46314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusb", "html_url": "https://github.com/marcusb", "followers_url": "https://api.github.com/users/marcusb/followers", "following_url": "https://api.github.com/users/marcusb/following{/other_user}", "gists_url": "https://api.github.com/users/marcusb/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusb/subscriptions", "organizations_url": "https://api.github.com/users/marcusb/orgs", "repos_url": "https://api.github.com/users/marcusb/repos", "events_url": "https://api.github.com/users/marcusb/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-29T13:35:23Z", "updated_at": "2015-07-31T07:14:45Z", "closed_at": "2015-07-31T01:39:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "The @flaky annotation has no effect when using pytest_generate_tests and metafunc.parametrize() to generate tests. Is there a way around that?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/47", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/47/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/47/events", "html_url": "https://github.com/box/flaky/issues/47", "id": 96922733, "node_id": "MDU6SXNzdWU5NjkyMjczMw==", "number": 47, "title": "UnicodeEncodeError when raising an exception with non-ascii characters", "user": {"login": "anthonywee", "id": 11448210, "node_id": "MDQ6VXNlcjExNDQ4MjEw", "avatar_url": "https://avatars0.githubusercontent.com/u/11448210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthonywee", "html_url": "https://github.com/anthonywee", "followers_url": "https://api.github.com/users/anthonywee/followers", "following_url": "https://api.github.com/users/anthonywee/following{/other_user}", "gists_url": "https://api.github.com/users/anthonywee/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthonywee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthonywee/subscriptions", "organizations_url": "https://api.github.com/users/anthonywee/orgs", "repos_url": "https://api.github.com/users/anthonywee/repos", "events_url": "https://api.github.com/users/anthonywee/events{/privacy}", "received_events_url": "https://api.github.com/users/anthonywee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-23T23:04:11Z", "updated_at": "2015-07-30T19:20:30Z", "closed_at": "2015-07-30T19:20:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The Python 2.6 tests will fail with a UnicodeEncodeError if an exception is raised with non-ascii characters in the message.\n\nFor example, I updated the test_non_flaky_thing() test in test_example.py to include the non-ascii message in the exception:\n\n``` python\n@genty\nclass ExampleFlakyTestsWithUnicodeTestNames(ExampleFlakyTests):\n    @genty_dataset('ascii name', '\u0144\u0151\u0144 \u0201\u015d\u0107\u0209\u0209 \u015d\u01ad\u0215\u0192\u0192')\n    def test_non_flaky_thing(self, message):\n        self._threshold += 1\n        if self._threshold < 1:\n            raise Exception(\n                \"Threshold is not high enough: {0} vs {1} for '{2}'.\".format(\n                    self._threshold, 1, message),\n            )\n```\n\nThis caused a UnicodeEncodeError when running the Python 2.6 tests:\n\n```\npy26 runtests: PYTHONHASHSEED='2117695302'\npy26 runtests: commands[0] | nosetests --with-flaky --exclude=pytest|test_options_example\n....................................\n===Flaky Test Report===\n\nTraceback (most recent call last):\n  File \".tox/py26/bin/nosetests\", line 11, in <module>\n    sys.exit(run_exit())\n  File \"/Users/awee/open_source/flaky_fork/flaky/.tox/py26/lib/python2.6/site-packages/nose/core.py\", line 121, in __init__\n    **extra_args)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/unittest.py\", line 817, in __init__\n    self.runTests()\n  File \"/Users/awee/open_source/flaky_fork/flaky/.tox/py26/lib/python2.6/site-packages/nose/core.py\", line 207, in runTests\n    result = self.testRunner.run(self.test)\n  File \"/Users/awee/open_source/flaky_fork/flaky/.tox/py26/lib/python2.6/site-packages/nose/core.py\", line 66, in run\n    result.printErrors()\n  File \"/Users/awee/open_source/flaky_fork/flaky/.tox/py26/lib/python2.6/site-packages/nose/result.py\", line 110, in printErrors\n    self.config.plugins.report(self.stream)\n  File \"/Users/awee/open_source/flaky_fork/flaky/.tox/py26/lib/python2.6/site-packages/nose/plugins/manager.py\", line 99, in __call__\n    return self.call(*arg, **kw)\n  File \"/Users/awee/open_source/flaky_fork/flaky/.tox/py26/lib/python2.6/site-packages/nose/plugins/manager.py\", line 167, in simple\n    result = meth(*arg, **kw)\n  File \"/Users/awee/open_source/flaky_fork/flaky/flaky/flaky_nose_plugin.py\", line 182, in report\n    self._add_flaky_report(stream)\n  File \"/Users/awee/open_source/flaky_fork/flaky/flaky/_flaky_plugin.py\", line 236, in _add_flaky_report\n    stream.write(self._stream.getvalue())\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 760-762: ordinal not in range(128)\nERROR: InvocationError: '/Users/awee/open_source/flaky_fork/flaky/.tox/py26/bin/nosetests --with-flaky --exclude=pytest|test_options_example'\n__________________________________________________________________________________ summary __________________________________________________________________________________\nERROR:   py26: commands failed\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/45", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/45/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/45/events", "html_url": "https://github.com/box/flaky/issues/45", "id": 92569454, "node_id": "MDU6SXNzdWU5MjU2OTQ1NA==", "number": 45, "title": "nose --with-flaky causes non-annotated test error reports to appear twice", "user": {"login": "cbetti", "id": 1813522, "node_id": "MDQ6VXNlcjE4MTM1MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1813522?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbetti", "html_url": "https://github.com/cbetti", "followers_url": "https://api.github.com/users/cbetti/followers", "following_url": "https://api.github.com/users/cbetti/following{/other_user}", "gists_url": "https://api.github.com/users/cbetti/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbetti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbetti/subscriptions", "organizations_url": "https://api.github.com/users/cbetti/orgs", "repos_url": "https://api.github.com/users/cbetti/repos", "events_url": "https://api.github.com/users/cbetti/events{/privacy}", "received_events_url": "https://api.github.com/users/cbetti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-02T07:26:10Z", "updated_at": "2015-07-30T19:26:00Z", "closed_at": "2015-07-30T19:26:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running nosetests --with-flaky, an error in a test function that is not annotated with @flaky will show 'EE' in the summary, and will have its error report duplicated.\n\nI've confirmed that the test function is not being run twice, this seems like a reporting problem only.\n\n```\n$ pip3 freeze\nflaky==2.1.1\nnose==1.3.7\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/43", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/43/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/43/events", "html_url": "https://github.com/box/flaky/issues/43", "id": 86979593, "node_id": "MDU6SXNzdWU4Njk3OTU5Mw==", "number": 43, "title": "Flaky ran with py.test counts skipped tests as failing and reruns them", "user": {"login": "hylyh", "id": 1892337, "node_id": "MDQ6VXNlcjE4OTIzMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1892337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hylyh", "html_url": "https://github.com/hylyh", "followers_url": "https://api.github.com/users/hylyh/followers", "following_url": "https://api.github.com/users/hylyh/following{/other_user}", "gists_url": "https://api.github.com/users/hylyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/hylyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hylyh/subscriptions", "organizations_url": "https://api.github.com/users/hylyh/orgs", "repos_url": "https://api.github.com/users/hylyh/repos", "events_url": "https://api.github.com/users/hylyh/events{/privacy}", "received_events_url": "https://api.github.com/users/hylyh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-10T13:55:25Z", "updated_at": "2015-07-06T21:40:39Z", "closed_at": "2015-07-06T21:40:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like flaky (version 2.1.1) counts an intentionally skipped test as failed, and will rerun it up to `max_runs` times before reporting it as failed and allowing the test to be counted as skipped.\n\nCode that displays the problem:\n\n``` python\nimport unittest, flaky\n\n@flaky.flaky(max_runs=5)\n@unittest.skip(\"example\")\nclass SkipTestCase(unittest.TestCase):\n    def test_skip(self):\n        assert True\n```\n\nWhen run with `py.test`, this outputs\n\n```\n============================= test session starts ==============================\nplatform linux2 -- Python 2.7.8 -- py-1.4.27 -- pytest-2.7.0\nrootdir: /home/jluke/Development/flaky-skip-demo, inifile: \nplugins: xdist, colordots, timeout, flaky\ncollected 1 items\n\ntest_flaky_skip.py s\n===Flaky Test Report===\n\ntest_skip failed (4 runs remaining out of 5).\n    <class 'builtins.Skipped'>\n    example\n    [<TracebackEntry /usr/lib/python2.7/site-packages/_pytest/unittest.py:114>, <TracebackEntry /usr/lib/python2.7/site-packages/_pytest/runner.py:468>]\ntest_skip failed (3 runs remaining out of 5).\n    <class 'builtins.Skipped'>\n    example\n    [<TracebackEntry /usr/lib/python2.7/site-packages/_pytest/unittest.py:114>, <TracebackEntry /usr/lib/python2.7/site-packages/_pytest/runner.py:468>]\ntest_skip failed (2 runs remaining out of 5).\n    <class 'builtins.Skipped'>\n    example\n    [<TracebackEntry /usr/lib/python2.7/site-packages/_pytest/unittest.py:114>, <TracebackEntry /usr/lib/python2.7/site-packages/_pytest/runner.py:468>]\ntest_skip failed (1 runs remaining out of 5).\n    <class 'builtins.Skipped'>\n    example\n    [<TracebackEntry /usr/lib/python2.7/site-packages/_pytest/unittest.py:114>, <TracebackEntry /usr/lib/python2.7/site-packages/_pytest/runner.py:468>]\ntest_skip failed; it passed 0 out of the required 1 times.\n    <class 'builtins.Skipped'>\n    example\n    [<TracebackEntry /usr/lib/python2.7/site-packages/_pytest/unittest.py:114>, <TracebackEntry /usr/lib/python2.7/site-packages/_pytest/runner.py:468>]\n\n===End Flaky Test Report===\n\n========================== 1 skipped in 0.01 seconds ===========================\n```\n\nI see no reason why flaky would try to rerun a skipped test multiple times.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/39", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/39/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/39/events", "html_url": "https://github.com/box/flaky/issues/39", "id": 70682790, "node_id": "MDU6SXNzdWU3MDY4Mjc5MA==", "number": 39, "title": "tearDown() not called between reruns", "user": {"login": "yaro90", "id": 12099316, "node_id": "MDQ6VXNlcjEyMDk5MzE2", "avatar_url": "https://avatars2.githubusercontent.com/u/12099316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaro90", "html_url": "https://github.com/yaro90", "followers_url": "https://api.github.com/users/yaro90/followers", "following_url": "https://api.github.com/users/yaro90/following{/other_user}", "gists_url": "https://api.github.com/users/yaro90/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaro90/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaro90/subscriptions", "organizations_url": "https://api.github.com/users/yaro90/orgs", "repos_url": "https://api.github.com/users/yaro90/repos", "events_url": "https://api.github.com/users/yaro90/events{/privacy}", "received_events_url": "https://api.github.com/users/yaro90/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-24T12:52:59Z", "updated_at": "2015-05-05T20:47:50Z", "closed_at": "2015-05-05T20:47:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nThanks for what seems to be a very promising idea...\nI tried to use flaky with nosetests, however I find that the tests are rerun for fails fine but the tearDown() does not get called between reruns until the very end when all reruns are finished, which is not good the test can leave something behind on the environment. Is this how flaky was designed or is it an actual issue?\n\nThanks,\nRegards,\nYaro\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/36", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/36/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/36/events", "html_url": "https://github.com/box/flaky/issues/36", "id": 68729638, "node_id": "MDU6SXNzdWU2ODcyOTYzOA==", "number": 36, "title": "flaky doesn't work well with tests defined in base classes", "user": {"login": "kmike", "id": 107893, "node_id": "MDQ6VXNlcjEwNzg5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/107893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmike", "html_url": "https://github.com/kmike", "followers_url": "https://api.github.com/users/kmike/followers", "following_url": "https://api.github.com/users/kmike/following{/other_user}", "gists_url": "https://api.github.com/users/kmike/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmike/subscriptions", "organizations_url": "https://api.github.com/users/kmike/orgs", "repos_url": "https://api.github.com/users/kmike/repos", "events_url": "https://api.github.com/users/kmike/events{/privacy}", "received_events_url": "https://api.github.com/users/kmike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-15T16:30:10Z", "updated_at": "2015-04-20T17:00:51Z", "closed_at": "2015-04-20T17:00:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have tests like this:\n\n```\nclass BaseTest(unittest.TestCase):\n    param = 'foo'\n\n    @flaky()\n    def test_method1(self):\n         # ...\n\nclass AnotherTest(BaseTest):\n    param = 'bar'\n```\n\ntest_method is run twice here. It seems that this drives flaky mad - see https://gist.github.com/kmike/ab01f0595d5776f58295. The output is very large, but if you scroll to the bottom there are log messages like \n\n```\ntest_timeout failed (-1 runs remaining out of 2).\ntest_meta_redirect_delay_wait_enough passed 3 out of the required 1 times. Success!\ntest_timeout failed (-15 runs remaining out of 2).\n```\n\nand the \"===Flaky Test Report===\" output is a little weird overall. \n\nI think it could be related to reusing test methods, but maybe there are some other issues.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/35", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/35/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/35/events", "html_url": "https://github.com/box/flaky/issues/35", "id": 68727691, "node_id": "MDU6SXNzdWU2ODcyNzY5MQ==", "number": 35, "title": "does it work with pytest-xdist?", "user": {"login": "kmike", "id": 107893, "node_id": "MDQ6VXNlcjEwNzg5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/107893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmike", "html_url": "https://github.com/kmike", "followers_url": "https://api.github.com/users/kmike/followers", "following_url": "https://api.github.com/users/kmike/following{/other_user}", "gists_url": "https://api.github.com/users/kmike/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmike/subscriptions", "organizations_url": "https://api.github.com/users/kmike/orgs", "repos_url": "https://api.github.com/users/kmike/repos", "events_url": "https://api.github.com/users/kmike/events{/privacy}", "received_events_url": "https://api.github.com/users/kmike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-04-15T16:22:46Z", "updated_at": "2015-04-20T17:05:36Z", "closed_at": "2015-04-20T17:05:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running tests in parallel using pytest-xdist. There were test failures in tests decorated with `@flaky`, and flaky printed an empty report:\n\n```\n===Flaky Test Report===\n\n\n===End Flaky Test Report===\n```\n\nI'm not sure, but it seems flaky didn't try to re-run failed tests. There were no flaky-related messages in the log.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/34", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/34/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/34/events", "html_url": "https://github.com/box/flaky/issues/34", "id": 68718126, "node_id": "MDU6SXNzdWU2ODcxODEyNg==", "number": 34, "title": "flaky doesn't work with py.test --doctest-modules", "user": {"login": "kmike", "id": 107893, "node_id": "MDQ6VXNlcjEwNzg5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/107893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmike", "html_url": "https://github.com/kmike", "followers_url": "https://api.github.com/users/kmike/followers", "following_url": "https://api.github.com/users/kmike/following{/other_user}", "gists_url": "https://api.github.com/users/kmike/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmike/subscriptions", "organizations_url": "https://api.github.com/users/kmike/orgs", "repos_url": "https://api.github.com/users/kmike/repos", "events_url": "https://api.github.com/users/kmike/events{/privacy}", "received_events_url": "https://api.github.com/users/kmike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Jeff-Meadows", "id": 3839339, "node_id": "MDQ6VXNlcjM4MzkzMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3839339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jeff-Meadows", "html_url": "https://github.com/Jeff-Meadows", "followers_url": "https://api.github.com/users/Jeff-Meadows/followers", "following_url": "https://api.github.com/users/Jeff-Meadows/following{/other_user}", "gists_url": "https://api.github.com/users/Jeff-Meadows/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jeff-Meadows/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jeff-Meadows/subscriptions", "organizations_url": "https://api.github.com/users/Jeff-Meadows/orgs", "repos_url": "https://api.github.com/users/Jeff-Meadows/repos", "events_url": "https://api.github.com/users/Jeff-Meadows/events{/privacy}", "received_events_url": "https://api.github.com/users/Jeff-Meadows/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Jeff-Meadows", "id": 3839339, "node_id": "MDQ6VXNlcjM4MzkzMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3839339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jeff-Meadows", "html_url": "https://github.com/Jeff-Meadows", "followers_url": "https://api.github.com/users/Jeff-Meadows/followers", "following_url": "https://api.github.com/users/Jeff-Meadows/following{/other_user}", "gists_url": "https://api.github.com/users/Jeff-Meadows/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jeff-Meadows/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jeff-Meadows/subscriptions", "organizations_url": "https://api.github.com/users/Jeff-Meadows/orgs", "repos_url": "https://api.github.com/users/Jeff-Meadows/repos", "events_url": "https://api.github.com/users/Jeff-Meadows/events{/privacy}", "received_events_url": "https://api.github.com/users/Jeff-Meadows/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-04-15T15:49:24Z", "updated_at": "2015-04-20T17:00:51Z", "closed_at": "2015-04-20T17:00:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When doctests are enabled in pytest and flaky is installed, pytest raises an error when collecting the tests:\n\n```\n(splash)kmike ~/svn/splash [master+?]> py.test --doctest-modules splash\n============================================================= test session starts =============================================================\nplatform darwin -- Python 2.7.5 -- py-1.4.26 -- pytest-2.6.4\nplugins: flaky, greendots, xdist\ncollected 1035 items \nINTERNALERROR> Traceback (most recent call last):\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/_pytest/main.py\", line 84, in wrap_session\nINTERNALERROR>     doit(config, session)\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/_pytest/main.py\", line 122, in _main\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/_pytest/core.py\", line 413, in __call__\nINTERNALERROR>     return self._docall(methods, kwargs)\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/_pytest/core.py\", line 424, in _docall\nINTERNALERROR>     res = mc.execute()\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/_pytest/core.py\", line 315, in execute\nINTERNALERROR>     res = method(**kwargs)\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/_pytest/main.py\", line 142, in pytest_runtestloop\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/_pytest/core.py\", line 413, in __call__\nINTERNALERROR>     return self._docall(methods, kwargs)\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/_pytest/core.py\", line 424, in _docall\nINTERNALERROR>     res = mc.execute()\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/_pytest/core.py\", line 315, in execute\nINTERNALERROR>     res = method(**kwargs)\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/flaky/flaky_pytest_plugin.py\", line 18, in pytest_runtest_protocol\nINTERNALERROR>     PLUGIN.run_test(item, nextitem)\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/flaky/flaky_pytest_plugin.py\", line 102, in run_test\nINTERNALERROR>     self._copy_flaky_attributes(item, test_instance)\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/flaky/_flaky_plugin.py\", line 253, in _copy_flaky_attributes\nINTERNALERROR>     test_callable, _ = cls._get_test_callable_and_name(test)\nINTERNALERROR>   File \"/Users/kmike/envs/splash/lib/python2.7/site-packages/flaky/flaky_pytest_plugin.py\", line 222, in _get_test_callable_and_name\nINTERNALERROR>     elif hasattr(test.module, callable_name):\nINTERNALERROR> AttributeError: 'DoctestItem' object has no attribute 'module'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/33", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/33/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/33/events", "html_url": "https://github.com/box/flaky/issues/33", "id": 68717068, "node_id": "MDU6SXNzdWU2ODcxNzA2OA==", "number": 33, "title": "no:flaky instructions in README don't work", "user": {"login": "kmike", "id": 107893, "node_id": "MDQ6VXNlcjEwNzg5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/107893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmike", "html_url": "https://github.com/kmike", "followers_url": "https://api.github.com/users/kmike/followers", "following_url": "https://api.github.com/users/kmike/following{/other_user}", "gists_url": "https://api.github.com/users/kmike/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmike/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmike/subscriptions", "organizations_url": "https://api.github.com/users/kmike/orgs", "repos_url": "https://api.github.com/users/kmike/repos", "events_url": "https://api.github.com/users/kmike/events{/privacy}", "received_events_url": "https://api.github.com/users/kmike/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-15T15:44:09Z", "updated_at": "2015-04-20T17:00:51Z", "closed_at": "2015-04-20T17:00:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Docs say:\n\n> With py.test, flaky will automatically run. It can, however be disabled via the command line:\n>         py.test no:flaky\n\nbut when I run it pytest shows an error:\n\n`ERROR: file not found: no:flaky`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/32", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/32/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/32/events", "html_url": "https://github.com/box/flaky/issues/32", "id": 66344476, "node_id": "MDU6SXNzdWU2NjM0NDQ3Ng==", "number": 32, "title": "flaky passes tests even if it fails on every try", "user": {"login": "lbrindze", "id": 3255779, "node_id": "MDQ6VXNlcjMyNTU3Nzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3255779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbrindze", "html_url": "https://github.com/lbrindze", "followers_url": "https://api.github.com/users/lbrindze/followers", "following_url": "https://api.github.com/users/lbrindze/following{/other_user}", "gists_url": "https://api.github.com/users/lbrindze/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbrindze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbrindze/subscriptions", "organizations_url": "https://api.github.com/users/lbrindze/orgs", "repos_url": "https://api.github.com/users/lbrindze/repos", "events_url": "https://api.github.com/users/lbrindze/events{/privacy}", "received_events_url": "https://api.github.com/users/lbrindze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-04T17:30:43Z", "updated_at": "2015-04-06T18:47:58Z", "closed_at": "2015-04-06T18:47:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run flaky with selenium, it appears that flaky suppresses errors and possibly failures as well.\n\nthe below code shows you how the flaky decorator is applied (though the complete integration test is a bit of a bother so I gave the abridged version).\n\n``` python\n@flaky(max_runs=3, min_passes=1)\nclass TestLoginModalInteractions(ModalTestCases):\n\n    def test_ajax_modal_launch(self):\n        # open modal from login link\n        self.open_modal_link()\n\n        # check everything is there\n        self.assertIdExists('login_form')\n        self.assertClassExists('mfp-bg')\n\n        # check everything closes correct\n        self.driver.find_element_by_class_name('mfp-bg').click()\n        mfp_modal_blur = self.driver.find_elements_by_class_name('mfp-bg')\n        self.assertTrue(len(mfp_modal_blur) == 0)\n```\n\nThis is my output when I run the test with the flaky decorator:\n![screen shot 2015-04-04 at 10 22 33 am](https://cloud.githubusercontent.com/assets/3255779/6993804/8e014794-dab5-11e4-81e0-6e224f1cac7a.png)\n\nand here is the output when I run it without the flaky decorator:\n![screen shot 2015-04-04 at 10 28 11 am](https://cloud.githubusercontent.com/assets/3255779/6993806/99dbba36-dab5-11e4-9766-71ec8b0a9533.png)\n\nI've read over your docs, I think this is a bug, but correct me if I am wrong.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/30", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/30/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/30/events", "html_url": "https://github.com/box/flaky/issues/30", "id": 60321852, "node_id": "MDU6SXNzdWU2MDMyMTg1Mg==", "number": 30, "title": "Test classes inheriting TestCase aren't rerun with pytest?", "user": {"login": "simlun", "id": 147277, "node_id": "MDQ6VXNlcjE0NzI3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/147277?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simlun", "html_url": "https://github.com/simlun", "followers_url": "https://api.github.com/users/simlun/followers", "following_url": "https://api.github.com/users/simlun/following{/other_user}", "gists_url": "https://api.github.com/users/simlun/gists{/gist_id}", "starred_url": "https://api.github.com/users/simlun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simlun/subscriptions", "organizations_url": "https://api.github.com/users/simlun/orgs", "repos_url": "https://api.github.com/users/simlun/repos", "events_url": "https://api.github.com/users/simlun/events{/privacy}", "received_events_url": "https://api.github.com/users/simlun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Jeff-Meadows", "id": 3839339, "node_id": "MDQ6VXNlcjM4MzkzMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3839339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jeff-Meadows", "html_url": "https://github.com/Jeff-Meadows", "followers_url": "https://api.github.com/users/Jeff-Meadows/followers", "following_url": "https://api.github.com/users/Jeff-Meadows/following{/other_user}", "gists_url": "https://api.github.com/users/Jeff-Meadows/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jeff-Meadows/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jeff-Meadows/subscriptions", "organizations_url": "https://api.github.com/users/Jeff-Meadows/orgs", "repos_url": "https://api.github.com/users/Jeff-Meadows/repos", "events_url": "https://api.github.com/users/Jeff-Meadows/events{/privacy}", "received_events_url": "https://api.github.com/users/Jeff-Meadows/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Jeff-Meadows", "id": 3839339, "node_id": "MDQ6VXNlcjM4MzkzMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3839339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jeff-Meadows", "html_url": "https://github.com/Jeff-Meadows", "followers_url": "https://api.github.com/users/Jeff-Meadows/followers", "following_url": "https://api.github.com/users/Jeff-Meadows/following{/other_user}", "gists_url": "https://api.github.com/users/Jeff-Meadows/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jeff-Meadows/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jeff-Meadows/subscriptions", "organizations_url": "https://api.github.com/users/Jeff-Meadows/orgs", "repos_url": "https://api.github.com/users/Jeff-Meadows/repos", "events_url": "https://api.github.com/users/Jeff-Meadows/events{/privacy}", "received_events_url": "https://api.github.com/users/Jeff-Meadows/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2015-03-09T10:10:18Z", "updated_at": "2015-03-20T21:12:32Z", "closed_at": "2015-03-20T20:56:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! This seems like a really useful tool! But I'm having some troubles getting it to work with my project.\n\nIn the readme there's an example of \"Marking a class flaky\":\n\n```\n@flaky\nclass TestMultipliers(TestCase):\n    def test_flaky_doubler(self):\n        value_to_double = 21\n        result = get_result_from_flaky_doubler(value_to_double)\n        self.assertEqual(result, value_to_double * 2, 'Result doubled incorrectly.')\n```\n\nNote how it's inheriting `TestCase`. That's how we are writing our test classes in the project I tried to use `flaky` in.\n\nThe problem is that it does not seem to retry the tests if classes are inheriting `TestCase` when using pytest. It only works if it's inheriting `object`, like in the `test_pytest_example.py` module.\n\nPlease see my fork for an example of a test case that fails but shouldn't (?)\n- Commit: https://github.com/simlun/flaky/commit/6c0c7fcc11de73c00f5430f404b816ecfef9a099\n- Failing CI log: https://travis-ci.org/simlun/flaky/jobs/53627102\n\nBest regards\nSimon\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/29", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/29/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/29/events", "html_url": "https://github.com/box/flaky/issues/29", "id": 59840556, "node_id": "MDU6SXNzdWU1OTg0MDU1Ng==", "number": 29, "title": "Flaky report missing in stdout w/ nosetests", "user": {"login": "0x1mason", "id": 4587515, "node_id": "MDQ6VXNlcjQ1ODc1MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4587515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0x1mason", "html_url": "https://github.com/0x1mason", "followers_url": "https://api.github.com/users/0x1mason/followers", "following_url": "https://api.github.com/users/0x1mason/following{/other_user}", "gists_url": "https://api.github.com/users/0x1mason/gists{/gist_id}", "starred_url": "https://api.github.com/users/0x1mason/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0x1mason/subscriptions", "organizations_url": "https://api.github.com/users/0x1mason/orgs", "repos_url": "https://api.github.com/users/0x1mason/repos", "events_url": "https://api.github.com/users/0x1mason/events{/privacy}", "received_events_url": "https://api.github.com/users/0x1mason/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-04T18:34:57Z", "updated_at": "2015-03-20T21:11:10Z", "closed_at": "2015-03-20T21:11:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I only ever see the flaky report when my tests short circuit and (presumably) stderr prints to console.  However, if my tests run completely, there's no flaky report at the end. I'm running nosetests 1.3.4 and flaky 2.0.0.\n\nHere's a sample command line:\n\n`nosetests -a '!quarantine'  -v -s --with-flaky --processes=4 --process-timeout=12000 mytests.py`\n\nI'm certain that flaky is loaded and it shows up in `nosetests --plugins`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/25", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/25/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/25/events", "html_url": "https://github.com/box/flaky/issues/25", "id": 58803751, "node_id": "MDU6SXNzdWU1ODgwMzc1MQ==", "number": 25, "title": "Exit status is set to 0 on failure instead of 1", "user": {"login": "clytwynec", "id": 3818105, "node_id": "MDQ6VXNlcjM4MTgxMDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3818105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clytwynec", "html_url": "https://github.com/clytwynec", "followers_url": "https://api.github.com/users/clytwynec/followers", "following_url": "https://api.github.com/users/clytwynec/following{/other_user}", "gists_url": "https://api.github.com/users/clytwynec/gists{/gist_id}", "starred_url": "https://api.github.com/users/clytwynec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clytwynec/subscriptions", "organizations_url": "https://api.github.com/users/clytwynec/orgs", "repos_url": "https://api.github.com/users/clytwynec/repos", "events_url": "https://api.github.com/users/clytwynec/events{/privacy}", "received_events_url": "https://api.github.com/users/clytwynec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Jeff-Meadows", "id": 3839339, "node_id": "MDQ6VXNlcjM4MzkzMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3839339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jeff-Meadows", "html_url": "https://github.com/Jeff-Meadows", "followers_url": "https://api.github.com/users/Jeff-Meadows/followers", "following_url": "https://api.github.com/users/Jeff-Meadows/following{/other_user}", "gists_url": "https://api.github.com/users/Jeff-Meadows/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jeff-Meadows/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jeff-Meadows/subscriptions", "organizations_url": "https://api.github.com/users/Jeff-Meadows/orgs", "repos_url": "https://api.github.com/users/Jeff-Meadows/repos", "events_url": "https://api.github.com/users/Jeff-Meadows/events{/privacy}", "received_events_url": "https://api.github.com/users/Jeff-Meadows/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Jeff-Meadows", "id": 3839339, "node_id": "MDQ6VXNlcjM4MzkzMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3839339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jeff-Meadows", "html_url": "https://github.com/Jeff-Meadows", "followers_url": "https://api.github.com/users/Jeff-Meadows/followers", "following_url": "https://api.github.com/users/Jeff-Meadows/following{/other_user}", "gists_url": "https://api.github.com/users/Jeff-Meadows/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jeff-Meadows/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jeff-Meadows/subscriptions", "organizations_url": "https://api.github.com/users/Jeff-Meadows/orgs", "repos_url": "https://api.github.com/users/Jeff-Meadows/repos", "events_url": "https://api.github.com/users/Jeff-Meadows/events{/privacy}", "received_events_url": "https://api.github.com/users/Jeff-Meadows/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-02-24T20:59:11Z", "updated_at": "2015-02-26T00:17:07Z", "closed_at": "2015-02-26T00:17:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running tests with nose and the flaky plugin, the exit status was not being set to 1 when the only tests that failed were ones that run with the flaky decorator and had max tries greater than 1.  If a test that was not decorated with `@flaky` also failed, then the exit status was properly set to 1.  \n\nFor example, here is a test that always fails, run with nose and without flaky.  The exit status is `1`.\n\n```\n$ nosetests test_flaky.py:TestFlaky\nF\n-----------------------------------------------------------------------------\n1) FAIL: test_flaky_exit (test_flaky.TestFlaky)\n\n   Traceback (most recent call last):\n    test_flaky.py line 7 in test_flaky_exit\n      self.assertTrue(False)\n   AssertionError: False is not true\n\n\n-----------------------------------------------------------------------------\n1 test run in 0.0 seconds. \n1 FAILED (0 tests passed)\n$ echo $?\n1\n```\n\n... And here is the same test, run with nose and using flaky with the default 2 max tries.  It correctly runs the test twice and prints the correct results, but then exits with `0` status.\n\n```\n$ nosetests test_flaky.py:TestFlaky --with-flaky\n-F\n-----------------------------------------------------------------------------\n1) FAIL: test_flaky_exit (test_flaky.TestFlaky)\n\n   Traceback (most recent call last):\n    test_flaky.py line 7 in test_flaky_exit\n      self.assertTrue(False)\n   AssertionError: False is not true\n\n\n-----------------------------------------------------------------------------\n2 tests run in 0.0 seconds. \n1 FAILED, 1 skipped (0 tests passed)\n$ echo $?\n0\n```\n\nThe root cause is that the flaky plugin passes a newly created `TextTestResult` object to `_rerun_test` rather than the original object that nose created, leaving nose unaware of any rerun results. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/22", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/22/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/22/events", "html_url": "https://github.com/box/flaky/issues/22", "id": 57233070, "node_id": "MDU6SXNzdWU1NzIzMzA3MA==", "number": 22, "title": "crash if using Nose short test naming convention", "user": {"login": "johntellsall", "id": 9662521, "node_id": "MDQ6VXNlcjk2NjI1MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9662521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johntellsall", "html_url": "https://github.com/johntellsall", "followers_url": "https://api.github.com/users/johntellsall/followers", "following_url": "https://api.github.com/users/johntellsall/following{/other_user}", "gists_url": "https://api.github.com/users/johntellsall/gists{/gist_id}", "starred_url": "https://api.github.com/users/johntellsall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johntellsall/subscriptions", "organizations_url": "https://api.github.com/users/johntellsall/orgs", "repos_url": "https://api.github.com/users/johntellsall/repos", "events_url": "https://api.github.com/users/johntellsall/events{/privacy}", "received_events_url": "https://api.github.com/users/johntellsall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Jeff-Meadows", "id": 3839339, "node_id": "MDQ6VXNlcjM4MzkzMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3839339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jeff-Meadows", "html_url": "https://github.com/Jeff-Meadows", "followers_url": "https://api.github.com/users/Jeff-Meadows/followers", "following_url": "https://api.github.com/users/Jeff-Meadows/following{/other_user}", "gists_url": "https://api.github.com/users/Jeff-Meadows/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jeff-Meadows/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jeff-Meadows/subscriptions", "organizations_url": "https://api.github.com/users/Jeff-Meadows/orgs", "repos_url": "https://api.github.com/users/Jeff-Meadows/repos", "events_url": "https://api.github.com/users/Jeff-Meadows/events{/privacy}", "received_events_url": "https://api.github.com/users/Jeff-Meadows/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Jeff-Meadows", "id": 3839339, "node_id": "MDQ6VXNlcjM4MzkzMzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3839339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jeff-Meadows", "html_url": "https://github.com/Jeff-Meadows", "followers_url": "https://api.github.com/users/Jeff-Meadows/followers", "following_url": "https://api.github.com/users/Jeff-Meadows/following{/other_user}", "gists_url": "https://api.github.com/users/Jeff-Meadows/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jeff-Meadows/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jeff-Meadows/subscriptions", "organizations_url": "https://api.github.com/users/Jeff-Meadows/orgs", "repos_url": "https://api.github.com/users/Jeff-Meadows/repos", "events_url": "https://api.github.com/users/Jeff-Meadows/events{/privacy}", "received_events_url": "https://api.github.com/users/Jeff-Meadows/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2015-02-10T20:39:01Z", "updated_at": "2015-02-13T22:00:47Z", "closed_at": "2015-02-13T22:00:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "If a test uses Nose's \"short style\" tests, Flaky gets confused about the test name, and crashes.\n\nTest case:\n## test_nose_example.py\n\n```\n# USAGE:\n#   nosetests -s --with-flaky ./test/test_nose_example.py\n\nfrom nose.tools import eq_\n\ndef test1():\n    eq_(1, 1)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/20", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/20/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/20/events", "html_url": "https://github.com/box/flaky/issues/20", "id": 54218371, "node_id": "MDU6SXNzdWU1NDIxODM3MQ==", "number": 20, "title": "ValueError: too many values to unpack", "user": {"login": "karimtabet", "id": 2444093, "node_id": "MDQ6VXNlcjI0NDQwOTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2444093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karimtabet", "html_url": "https://github.com/karimtabet", "followers_url": "https://api.github.com/users/karimtabet/followers", "following_url": "https://api.github.com/users/karimtabet/following{/other_user}", "gists_url": "https://api.github.com/users/karimtabet/gists{/gist_id}", "starred_url": "https://api.github.com/users/karimtabet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karimtabet/subscriptions", "organizations_url": "https://api.github.com/users/karimtabet/orgs", "repos_url": "https://api.github.com/users/karimtabet/repos", "events_url": "https://api.github.com/users/karimtabet/events{/privacy}", "received_events_url": "https://api.github.com/users/karimtabet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-13T16:59:35Z", "updated_at": "2015-04-20T17:06:22Z", "closed_at": "2015-04-20T17:06:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Found an issue when building with Flaky.\n\nflaky/flaky_nose_plugin.py\", line 145, in _get_test_method_name\n    _, _, class_and_method_name = test.address()\nValueError: too many values to unpack\n\nLooks like a tuple issue.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/box/flaky/issues/19", "repository_url": "https://api.github.com/repos/box/flaky", "labels_url": "https://api.github.com/repos/box/flaky/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/box/flaky/issues/19/comments", "events_url": "https://api.github.com/repos/box/flaky/issues/19/events", "html_url": "https://github.com/box/flaky/issues/19", "id": 52327204, "node_id": "MDU6SXNzdWU1MjMyNzIwNA==", "number": 19, "title": "Update README with information on new --no-flaky-report flag", "user": {"login": "jmoldow", "id": 1150978, "node_id": "MDQ6VXNlcjExNTA5Nzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1150978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmoldow", "html_url": "https://github.com/jmoldow", "followers_url": "https://api.github.com/users/jmoldow/followers", "following_url": "https://api.github.com/users/jmoldow/following{/other_user}", "gists_url": "https://api.github.com/users/jmoldow/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmoldow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmoldow/subscriptions", "organizations_url": "https://api.github.com/users/jmoldow/orgs", "repos_url": "https://api.github.com/users/jmoldow/repos", "events_url": "https://api.github.com/users/jmoldow/events{/privacy}", "received_events_url": "https://api.github.com/users/jmoldow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-18T05:31:21Z", "updated_at": "2015-02-15T04:28:47Z", "closed_at": "2015-02-15T04:28:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}]}