{"total_count": 109, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/217", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/217/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/217/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/217", "id": 665652045, "node_id": "MDU6SXNzdWU2NjU2NTIwNDU=", "number": 217, "title": "Add Mechanism To Prevent Form Resubmission", "user": {"login": "9mido", "id": 60831272, "node_id": "MDQ6VXNlcjYwODMxMjcy", "avatar_url": "https://avatars2.githubusercontent.com/u/60831272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/9mido", "html_url": "https://github.com/9mido", "followers_url": "https://api.github.com/users/9mido/followers", "following_url": "https://api.github.com/users/9mido/following{/other_user}", "gists_url": "https://api.github.com/users/9mido/gists{/gist_id}", "starred_url": "https://api.github.com/users/9mido/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/9mido/subscriptions", "organizations_url": "https://api.github.com/users/9mido/orgs", "repos_url": "https://api.github.com/users/9mido/repos", "events_url": "https://api.github.com/users/9mido/events{/privacy}", "received_events_url": "https://api.github.com/users/9mido/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-25T20:05:36Z", "updated_at": "2020-07-25T20:58:10Z", "closed_at": "2020-07-25T20:58:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "There should be a way to prevent a form from resubmitting again after a form processes and also double submission when a user clicks submit multiple times during a single form processing instance. A user should be able to set a period of time of how long until an authenticated user / anonymous user can be able to submit the form again. Sort of like a rate limiting / throttling mechanism. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/215", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/215/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/215/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/215", "id": 646610218, "node_id": "MDU6SXNzdWU2NDY2MTAyMTg=", "number": 215, "title": "Smoke tests result in ValidationError: ['ManagementForm data is missing or has been tampered with']", "user": {"login": "jayvdb", "id": 15092, "node_id": "MDQ6VXNlcjE1MDky", "avatar_url": "https://avatars1.githubusercontent.com/u/15092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayvdb", "html_url": "https://github.com/jayvdb", "followers_url": "https://api.github.com/users/jayvdb/followers", "following_url": "https://api.github.com/users/jayvdb/following{/other_user}", "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions", "organizations_url": "https://api.github.com/users/jayvdb/orgs", "repos_url": "https://api.github.com/users/jayvdb/repos", "events_url": "https://api.github.com/users/jayvdb/events{/privacy}", "received_events_url": "https://api.github.com/users/jayvdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-27T05:06:20Z", "updated_at": "2020-07-07T07:05:47Z", "closed_at": "2020-07-07T07:05:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been running smoke tests on Oscar, described in most detail at https://github.com/django-oscar/django-oscar/issues/3420\r\n\r\nThe non-admin smoke tests invoked on Oscar views which use extra_views fail like so:\r\n\r\n```py\r\n======================================================================\r\nERROR: test_smoke_POST_oscar/^basket/^$ (django_smoke_tests.tests.SmokeTests)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/site-packages/django_smoke_tests/generator.py\", line 90, in test\r\n    response = http_method_function(url, {})\r\n  File \"/usr/lib/python3.8/site-packages/django/test/client.py\", line 526, in post\r\n    response = super().post(path, data=data, content_type=content_type, secure=secure, **extra)\r\n  File \"/usr/lib/python3.8/site-packages/django/test/client.py\", line 355, in post\r\n    return self.generic('POST', path, post_data, content_type,\r\n  File \"/usr/lib/python3.8/site-packages/django/test/client.py\", line 421, in generic\r\n    return self.request(**r)\r\n  File \"/usr/lib/python3.8/site-packages/django/test/client.py\", line 496, in request\r\n    raise exc_value\r\n  File \"/usr/lib/python3.8/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/usr/lib/python3.8/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/usr/lib/python3.8/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/usr/lib/python3.8/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/usr/lib/python3.8/site-packages/django/views/generic/base.py\", line 97, in dispatch\r\n    return handler(request, *args, **kwargs)\r\n  File \"/usr/lib/python3.8/site-packages/extra_views/formsets.py\", line 335, in post\r\n    return super(BaseModelFormSetView, self).post(request, *args, **kwargs)\r\n  File \"/usr/lib/python3.8/site-packages/extra_views/formsets.py\", line 301, in post\r\n    if formset.is_valid():\r\n  File \"/usr/lib/python3.8/site-packages/django/forms/formsets.py\", line 308, in is_valid\r\n    self.errors\r\n  File \"/usr/lib/python3.8/site-packages/django/forms/formsets.py\", line 288, in errors\r\n    self.full_clean()\r\n  File \"/usr/lib/python3.8/site-packages/django/forms/formsets.py\", line 329, in full_clean\r\n    for i in range(0, self.total_form_count()):\r\n  File \"/usr/lib/python3.8/site-packages/django/forms/formsets.py\", line 112, in total_form_count\r\n    return min(self.management_form.cleaned_data[TOTAL_FORM_COUNT], self.absolute_max)\r\n  File \"/usr/lib/python3.8/site-packages/django/utils/functional.py\", line 48, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/usr/lib/python3.8/site-packages/django/forms/formsets.py\", line 92, in management_form\r\n    raise ValidationError(\r\ndjango.core.exceptions.ValidationError: ['ManagementForm data is missing or has been tampered with']\r\n```\r\n\r\nIs it possible to get a more descriptive exception?  e.g. What was missing?\r\n\r\nAnd/or, can there be an mode where that exception is caught and a more appropriate Http status is used to describe the situation, such as 400 or a SuspiciousOperation exception if it really looks like the requests are being \"tampered with\" which sounds rather nefarious.\r\n\r\nbtw, I've [submitted this](https://build.opensuse.org/request/show/817308) and all the other oscar deps oscar for inclusion in openSUSE.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/208", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/208/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/208/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/208", "id": 544948636, "node_id": "MDU6SXNzdWU1NDQ5NDg2MzY=", "number": 208, "title": "ModelFormSetView doesn't save changes", "user": {"login": "faulander", "id": 38588197, "node_id": "MDQ6VXNlcjM4NTg4MTk3", "avatar_url": "https://avatars0.githubusercontent.com/u/38588197?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faulander", "html_url": "https://github.com/faulander", "followers_url": "https://api.github.com/users/faulander/followers", "following_url": "https://api.github.com/users/faulander/following{/other_user}", "gists_url": "https://api.github.com/users/faulander/gists{/gist_id}", "starred_url": "https://api.github.com/users/faulander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faulander/subscriptions", "organizations_url": "https://api.github.com/users/faulander/orgs", "repos_url": "https://api.github.com/users/faulander/repos", "events_url": "https://api.github.com/users/faulander/events{/privacy}", "received_events_url": "https://api.github.com/users/faulander/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1413053820, "node_id": "MDU6TGFiZWwxNDEzMDUzODIw", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Support%20question", "name": "Support question", "color": "ffffff", "default": false, "description": "Questions that should have gone to support forum"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-03T11:04:01Z", "updated_at": "2020-01-27T04:16:49Z", "closed_at": "2020-01-27T04:16:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have two problems, i have a flat table with settings in my db, structure is:\r\nsetting: char\r\nvalue: char\r\n\r\nFirst Problem: It shows an empty field combination at the end:\r\n![image](https://user-images.githubusercontent.com/38588197/71720172-10455880-2e21-11ea-855b-0cc45908c5ba.png)\r\n\r\nSecond problem:\r\nIt doesn't save the data, no error, no redirect to the success page, nothing.\r\n\r\nmy views.py:\r\n```\r\nclass UpdateSettings(ModelFormSetView):\r\n    model = Settings\r\n    fields = ['setting', 'value']\r\n    template_name = 'settings.html'\r\n    success_url = '/shows'\r\n```\r\n\r\nmy settings.html:\r\n```\r\n{% extends 'base.html' %}\r\n{% load crispy_forms_tags %}\r\n{% block content %}\r\n    <form method=\"post\">\r\n        {% csrf_token %}\r\n        {{ formset.management_form }}\r\n        {% for form in formset %}\r\n            <div class=\"row\">\r\n                <div class=\"col-6\">            \r\n                    {{ form.setting|as_crispy_field }}\r\n                </div>\r\n                <div class=\"col-6\">            \r\n                    {{ form.value|as_crispy_field }}\r\n                </div>\r\n            </div>\r\n        {% endfor %}\r\n        <div class=\"form-group form-actions\">\r\n            <button class=\"btn btn-success\">Change</button>\r\n        </div>\r\n    </form>\r\n{% endblock %}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/204", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/204/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/204/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/204", "id": 531217822, "node_id": "MDU6SXNzdWU1MzEyMTc4MjI=", "number": 204, "title": "ModelFormset Update", "user": {"login": "neyder", "id": 1832457, "node_id": "MDQ6VXNlcjE4MzI0NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1832457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neyder", "html_url": "https://github.com/neyder", "followers_url": "https://api.github.com/users/neyder/followers", "following_url": "https://api.github.com/users/neyder/following{/other_user}", "gists_url": "https://api.github.com/users/neyder/gists{/gist_id}", "starred_url": "https://api.github.com/users/neyder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neyder/subscriptions", "organizations_url": "https://api.github.com/users/neyder/orgs", "repos_url": "https://api.github.com/users/neyder/repos", "events_url": "https://api.github.com/users/neyder/events{/privacy}", "received_events_url": "https://api.github.com/users/neyder/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1413053820, "node_id": "MDU6TGFiZWwxNDEzMDUzODIw", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Support%20question", "name": "Support question", "color": "ffffff", "default": false, "description": "Questions that should have gone to support forum"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-02T15:52:37Z", "updated_at": "2019-12-18T21:39:07Z", "closed_at": "2019-12-18T21:39:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\n>  By default this will populate the formset with all the instances of Item in the database. \r\n\r\nBut when I add another formset, or just change previous filled, it doesn't update. and it conflicts if unique field is in formset, so, cant use ModelFormSetView to create and/or update.\r\n\r\nSome hints with that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/199", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/199/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/199/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/199", "id": 503772293, "node_id": "MDU6SXNzdWU1MDM3NzIyOTM=", "number": 199, "title": "New version in pypi", "user": {"login": "CleitonDeLima", "id": 4956372, "node_id": "MDQ6VXNlcjQ5NTYzNzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4956372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleitonDeLima", "html_url": "https://github.com/CleitonDeLima", "followers_url": "https://api.github.com/users/CleitonDeLima/followers", "following_url": "https://api.github.com/users/CleitonDeLima/following{/other_user}", "gists_url": "https://api.github.com/users/CleitonDeLima/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleitonDeLima/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleitonDeLima/subscriptions", "organizations_url": "https://api.github.com/users/CleitonDeLima/orgs", "repos_url": "https://api.github.com/users/CleitonDeLima/repos", "events_url": "https://api.github.com/users/CleitonDeLima/events{/privacy}", "received_events_url": "https://api.github.com/users/CleitonDeLima/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-08T01:24:45Z", "updated_at": "2019-12-20T11:10:25Z", "closed_at": "2019-12-20T11:10:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it possible to release a new version for pypi?  \r\nWill be 1 year since the last version...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/196", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/196/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/196/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/196", "id": 496876259, "node_id": "MDU6SXNzdWU0OTY4NzYyNTk=", "number": 196, "title": "django 2.2 & 3.0a+ support", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-23T03:14:15Z", "updated_at": "2019-10-08T10:11:25Z", "closed_at": "2019-10-08T10:11:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/195", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/195/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/195/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/195", "id": 457533743, "node_id": "MDU6SXNzdWU0NTc1MzM3NDM=", "number": 195, "title": "limit number of forms in CreateWithInlinesView and UpdateWithInlinesView", "user": {"login": "Bast66", "id": 14943201, "node_id": "MDQ6VXNlcjE0OTQzMjAx", "avatar_url": "https://avatars1.githubusercontent.com/u/14943201?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bast66", "html_url": "https://github.com/Bast66", "followers_url": "https://api.github.com/users/Bast66/followers", "following_url": "https://api.github.com/users/Bast66/following{/other_user}", "gists_url": "https://api.github.com/users/Bast66/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bast66/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bast66/subscriptions", "organizations_url": "https://api.github.com/users/Bast66/orgs", "repos_url": "https://api.github.com/users/Bast66/repos", "events_url": "https://api.github.com/users/Bast66/events{/privacy}", "received_events_url": "https://api.github.com/users/Bast66/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1413053820, "node_id": "MDU6TGFiZWwxNDEzMDUzODIw", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Support%20question", "name": "Support question", "color": "ffffff", "default": false, "description": "Questions that should have gone to support forum"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-06-18T14:59:15Z", "updated_at": "2019-12-18T13:03:41Z", "closed_at": "2019-12-18T13:03:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I have a question which I cannot find in the documentation.\r\nHow to limit number of empty formsets it generates for  CreateWithInlinesView and UpdateWithInlinesView. It always genereates 3 empty formsets.\r\n\r\nI would like to have one formset per existing related entry and one extra for adding new entries.\r\n\r\nbest regards\r\nBastian", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/192", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/192/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/192/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/192", "id": 456523029, "node_id": "MDU6SXNzdWU0NTY1MjMwMjk=", "number": 192, "title": "Minor typos in \"Passing arguments to the form constructor\" documentation", "user": {"login": "BigglesZX", "id": 116970, "node_id": "MDQ6VXNlcjExNjk3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/116970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BigglesZX", "html_url": "https://github.com/BigglesZX", "followers_url": "https://api.github.com/users/BigglesZX/followers", "following_url": "https://api.github.com/users/BigglesZX/following{/other_user}", "gists_url": "https://api.github.com/users/BigglesZX/gists{/gist_id}", "starred_url": "https://api.github.com/users/BigglesZX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BigglesZX/subscriptions", "organizations_url": "https://api.github.com/users/BigglesZX/orgs", "repos_url": "https://api.github.com/users/BigglesZX/repos", "events_url": "https://api.github.com/users/BigglesZX/events{/privacy}", "received_events_url": "https://api.github.com/users/BigglesZX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-15T10:14:19Z", "updated_at": "2019-06-15T12:02:25Z", "closed_at": "2019-06-15T12:02:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\nfrom extra_views import InlineFormSetFactory\r\n\r\nclass ItemInline(InlineFormSetFactory):\r\n    model = Item\r\n\r\n    def get_formset_kwargs():\r\n        kwargs = super(ItemInline, self).get_formset_kwargs()\r\n        initial = get_some_initial_values()\r\n        kwargs['form_kwargs'].update({'initial': initial}}\r\n        return kwargs\r\n```\r\n\r\nShould read:\r\n\r\n```python\r\nfrom extra_views import InlineFormSetFactory\r\n\r\nclass ItemInline(InlineFormSetFactory):\r\n    model = Item\r\n\r\n    def get_formset_kwargs(self):\r\n        kwargs = super(ItemInline, self).get_formset_kwargs()\r\n        initial = get_some_initial_values()\r\n        kwargs['form_kwargs'].update({'initial': initial})\r\n        return kwargs\r\n```\r\n\r\n(Missing `self` argument and mismatched brackets in `update`)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/191", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/191/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/191/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/191", "id": 456522974, "node_id": "MDU6SXNzdWU0NTY1MjI5NzQ=", "number": 191, "title": "Add note to documentation about `empty_permitted` when using `initial`", "user": {"login": "BigglesZX", "id": 116970, "node_id": "MDQ6VXNlcjExNjk3MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/116970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BigglesZX", "html_url": "https://github.com/BigglesZX", "followers_url": "https://api.github.com/users/BigglesZX/followers", "following_url": "https://api.github.com/users/BigglesZX/following{/other_user}", "gists_url": "https://api.github.com/users/BigglesZX/gists{/gist_id}", "starred_url": "https://api.github.com/users/BigglesZX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BigglesZX/subscriptions", "organizations_url": "https://api.github.com/users/BigglesZX/orgs", "repos_url": "https://api.github.com/users/BigglesZX/repos", "events_url": "https://api.github.com/users/BigglesZX/events{/privacy}", "received_events_url": "https://api.github.com/users/BigglesZX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-15T10:13:30Z", "updated_at": "2019-12-18T14:17:10Z", "closed_at": "2019-12-18T14:16:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just ran into a persnickety issue when using multiple `initial` data to prepopulate my formset. Only the first form in the formset was being saved \u2013 the rest had empty `cleaned_data`.\r\n\r\nIt turns out that Django's detection of new/changed data was responsible \u2013 because the values in the formset's forms had not changed from their `initial`, Django didn't include them in the form data and so didn't try to save them.\r\n\r\nI eventually found [this SO answer](https://stackoverflow.com/a/9957662/258794) which pointed to the solution of setting `empty_permitted = False` on the forms. However, I was not able to use `formset_kwargs` to set this property (see below).\r\n\r\nSimplified code for illustration:\r\n\r\n```python\r\n# models\r\nclass Product(models.Model):\r\n    pass\r\n\r\nclass Reservation(models.Model):\r\n    products = models.ManyToManyField(Product, blank=True)\r\n```\r\n\r\n```python\r\n# view\r\nclass ReservationCreateView(CreateWithInlinesView):\r\n    model = Reservation\r\n    form_class = ReservationCreateForm  # not included, for brevity, nothing special about it\r\n    inlines = [ReservationProductInline]\r\n\r\n    def dispatch(self, request, *args, **kwargs):\r\n        self.initial_product_pks = [1, 2, 3]  # these would be set dynamically in production\r\n        return super(ReservationCreateView, self).dispatch(request, *args, **kwargs)\r\n\r\n    def forms_valid(self, form, inlines):\r\n        response = self.form_valid(form)\r\n        for formset in inlines:\r\n            for _form in formset:\r\n                if _form.cleaned_data:\r\n                    instance = _form.save(commit=False)\r\n                    instance.reservation_id = instance.reservation.pk\r\n                    instance.save()\r\n        return response\r\n```\r\n\r\n```python\r\n# form\r\nclass ReservationProductForm(forms.ModelForm):\r\n    product = forms.ModelChoiceField(queryset=Product.objects.all())\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super(ReservationProductForm, self).__init__(*args, **kwargs)\r\n        self.empty_permitted = False\r\n```\r\n\r\n```python\r\n# formset\r\nclass ReservationProductInline(InlineFormSetFactory):\r\n    model = Reservation.products.through\r\n    factory_kwargs = {'extra': 0, 'min_num': 1, 'max_num': 20,\r\n                      'can_order': False, 'can_delete': False}\r\n    fields = '__all__'\r\n    form_class = ReservationProductForm\r\n\r\n    def get_factory_kwargs(self):\r\n        kwargs = super(ReservationProductInline, self).get_factory_kwargs()\r\n        kwargs['extra'] = len(self.view.initial_product_pks) - 1\r\n        return kwargs\r\n\r\n    def get_initial(self):\r\n        return [{'product': pk} for pk in self.view.initial_product_pks]\r\n```\r\n\r\nI was not able to use `formset_kwargs` with the `form_kwargs` key on my `InlineFormSetFactory` subclass to set `empty_permitted` as is described in the documentation on formset customization. When I tried that I got a TypeError: `ModelFormMetaclass object got multiple values for keyword argument 'empty_permitted'`. Hence the use of `__init__` above. Not sure if I was doing something wrong, but the alternative works nonetheless.\r\n\r\nPerhaps the documentation could be updated to make reference to this form property? Hope this is helpful to someone encountering the same problem. Thanks for a very useful library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/190", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/190/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/190/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/190", "id": 430487826, "node_id": "MDU6SXNzdWU0MzA0ODc4MjY=", "number": 190, "title": "form_valid vs forms_valid", "user": {"login": "AlekseiKhatkevich", "id": 47420076, "node_id": "MDQ6VXNlcjQ3NDIwMDc2", "avatar_url": "https://avatars0.githubusercontent.com/u/47420076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlekseiKhatkevich", "html_url": "https://github.com/AlekseiKhatkevich", "followers_url": "https://api.github.com/users/AlekseiKhatkevich/followers", "following_url": "https://api.github.com/users/AlekseiKhatkevich/following{/other_user}", "gists_url": "https://api.github.com/users/AlekseiKhatkevich/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlekseiKhatkevich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlekseiKhatkevich/subscriptions", "organizations_url": "https://api.github.com/users/AlekseiKhatkevich/orgs", "repos_url": "https://api.github.com/users/AlekseiKhatkevich/repos", "events_url": "https://api.github.com/users/AlekseiKhatkevich/events{/privacy}", "received_events_url": "https://api.github.com/users/AlekseiKhatkevich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296457018, "node_id": "MDU6TGFiZWwyOTY0NTcwMTg=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Documentation", "name": "Documentation", "color": "fbca04", "default": false, "description": null}, {"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-08T14:36:05Z", "updated_at": "2019-12-20T14:57:51Z", "closed_at": "2019-12-20T14:57:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\nit took me 5 hours to find out that form_valid has to do nothing to the process. Instead we have brand new shiny  form(s)_valid. I guess it should be documented somewhere probably...\r\n\r\n def forms_valid(self, form, inlines): # people normally use form_valid\r\n        \"\"\"\r\n        If the form and formsets are valid, save the associated models.\r\n        \"\"\"\r\n        self.object = form.save()\r\n        for formset in inlines:\r\n            formset.save()\r\n        return HttpResponseRedirect(self.get_success_url())", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/189", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/189/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/189/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/189", "id": 421964588, "node_id": "MDU6SXNzdWU0MjE5NjQ1ODg=", "number": 189, "title": "Try out Github Actions", "user": {"login": "AndrewIngram", "id": 35227, "node_id": "MDQ6VXNlcjM1MjI3", "avatar_url": "https://avatars1.githubusercontent.com/u/35227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewIngram", "html_url": "https://github.com/AndrewIngram", "followers_url": "https://api.github.com/users/AndrewIngram/followers", "following_url": "https://api.github.com/users/AndrewIngram/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewIngram/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewIngram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewIngram/subscriptions", "organizations_url": "https://api.github.com/users/AndrewIngram/orgs", "repos_url": "https://api.github.com/users/AndrewIngram/repos", "events_url": "https://api.github.com/users/AndrewIngram/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewIngram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-17T19:46:58Z", "updated_at": "2019-06-17T13:48:32Z", "closed_at": "2019-06-17T13:48:32Z", "author_association": "OWNER", "active_lock_reason": null, "body": "I just got access to Github Actions, so it might be worth looking into using them to manage some of the building/releasing. @jonashaag @sdolemelipone if you want to try them out, feel free.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/187", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/187/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/187/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/187", "id": 389277013, "node_id": "MDU6SXNzdWUzODkyNzcwMTM=", "number": 187, "title": "Subclass ModelFormSetView", "user": {"login": "shazianusrat", "id": 23233332, "node_id": "MDQ6VXNlcjIzMjMzMzMy", "avatar_url": "https://avatars2.githubusercontent.com/u/23233332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shazianusrat", "html_url": "https://github.com/shazianusrat", "followers_url": "https://api.github.com/users/shazianusrat/followers", "following_url": "https://api.github.com/users/shazianusrat/following{/other_user}", "gists_url": "https://api.github.com/users/shazianusrat/gists{/gist_id}", "starred_url": "https://api.github.com/users/shazianusrat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shazianusrat/subscriptions", "organizations_url": "https://api.github.com/users/shazianusrat/orgs", "repos_url": "https://api.github.com/users/shazianusrat/repos", "events_url": "https://api.github.com/users/shazianusrat/events{/privacy}", "received_events_url": "https://api.github.com/users/shazianusrat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-10T12:22:05Z", "updated_at": "2018-12-10T15:38:43Z", "closed_at": "2018-12-10T15:38:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know this platform is not for posting such issues but humbly I request you to help me. I am working in django-oscar and I am trying to inherit a simple form but I ran into errors while subclassing ModelFormSetView from django-extra-views. Following is the code:\r\n\r\nMy Form:\r\nLink for BasketLineForm is https://github.com/django-oscar/django-oscar/blob/master/src/oscar/apps/basket/forms.py#L14\r\n\r\n```\r\nfrom oscar.apps.basket.forms import BasketLineForm as CoreBasketLineForm\r\n\r\nclass AddBattery(CoreBasketLineForm):\r\n    class Meta(CoreBasketForm.Meta):\r\n          model=Battery\r\n          fields = ('battery_manufacturer', 'battery_capacity', 'battery_warranty')\r\n```\r\n\r\nMy Views:\r\nLink for BasketView is: https://github.com/django-oscar/django-oscar/blob/master/src/oscar/apps/basket/views.py#L32\r\n\r\n\r\n```\r\nfrom oscar.apps.basket.views import BasketView as CoreBasketView\r\n\r\nclass BasketView(CoreBasketView):\r\n\r\n    def get_formset_kwargs(self):\r\n        kwargs = super(BasketView, self).get_formset_kwargs()\r\n        kwargs['strategy'] = self.request.strategy\r\n        kwargs['battery']=self.request.modify\r\n        return kwargs\r\n\r\n\r\n    def get_queryset(self):\r\n        return self.request.basket.all_lines()\r\n    def get_battery_form(self):\r\n        return AddBattery()\r\n    def get_battery_objects(self):\r\n        return Battery.objects.all()\r\n\r\n    def get_context_data(self, **kwargs):\r\n        context = super(BasketView, self).get_context_data(**kwargs)\r\n        context['battery_form'] = AddBattery(self.request.POST)\r\n        context['battery_data'] = self.get_battery_objects()\r\n        return context\r\n\r\n    def get_success_url(self):\r\n        return safe_referrer(self.request, 'basket:summary')\r\n\r\n```\r\nI can't make my form work and can't display form based args/kwargs in django shell.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/182", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/182/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/182/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/182", "id": 380979499, "node_id": "MDU6SXNzdWUzODA5Nzk0OTk=", "number": 182, "title": "universal wheel is configured, but not built", "user": {"login": "therefromhere", "id": 197540, "node_id": "MDQ6VXNlcjE5NzU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therefromhere", "html_url": "https://github.com/therefromhere", "followers_url": "https://api.github.com/users/therefromhere/followers", "following_url": "https://api.github.com/users/therefromhere/following{/other_user}", "gists_url": "https://api.github.com/users/therefromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/therefromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therefromhere/subscriptions", "organizations_url": "https://api.github.com/users/therefromhere/orgs", "repos_url": "https://api.github.com/users/therefromhere/repos", "events_url": "https://api.github.com/users/therefromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/therefromhere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-15T03:03:16Z", "updated_at": "2018-11-15T18:18:23Z", "closed_at": "2018-11-15T08:44:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, this it seems like recent builds of this package have been built with the tar.gz only, not the wheel as well, though setup.cfg is set up to create a universal wheel.  It seems like the most recent wheel build was version 0.7.1.\r\n\r\nAll that needs to happen is passing the bdist_wheel arg to setup.py - ie\r\n\r\n```\r\npython setup.py sdist bdist_wheel upload\r\n```\r\ninstead of \r\n\r\n```\r\npython setup.py sdist upload\r\n```\r\nsee https://pythonwheels.com/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/180", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/180/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/180/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/180", "id": 379556789, "node_id": "MDU6SXNzdWUzNzk1NTY3ODk=", "number": 180, "title": "Rename get_formset -> get_formset_class", "user": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-11T19:54:45Z", "updated_at": "2018-11-16T13:44:52Z", "closed_at": "2018-11-16T13:44:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "`formset_class = self.get_formset()`\r\n\r\nThat's a bit weird and inconsistent, it's called `get_form_class` in Django's views and I guess `get_formset_class` is more correct?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/179", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/179/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/179/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/179", "id": 379438851, "node_id": "MDU6SXNzdWUzNzk0Mzg4NTE=", "number": 179, "title": "How do you pass variables as kwargs to formset forms?", "user": {"login": "coler-j", "id": 7839615, "node_id": "MDQ6VXNlcjc4Mzk2MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7839615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coler-j", "html_url": "https://github.com/coler-j", "followers_url": "https://api.github.com/users/coler-j/followers", "following_url": "https://api.github.com/users/coler-j/following{/other_user}", "gists_url": "https://api.github.com/users/coler-j/gists{/gist_id}", "starred_url": "https://api.github.com/users/coler-j/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coler-j/subscriptions", "organizations_url": "https://api.github.com/users/coler-j/orgs", "repos_url": "https://api.github.com/users/coler-j/repos", "events_url": "https://api.github.com/users/coler-j/events{/privacy}", "received_events_url": "https://api.github.com/users/coler-j/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-11-10T16:54:38Z", "updated_at": "2018-11-16T03:23:17Z", "closed_at": "2018-11-16T03:23:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have a View like this:\r\n\r\n```\r\nclass CreateListingView(NamedFormsetsMixin, CreateWithInlinesView):\r\n    model = MyModel\r\n    form_class = MyModelForm\r\n    inlines = [InlineFormsetInlineDerp1, InlineFormsetInlineDerp2]\r\n    inlines_names = ['derp1', 'derp2']\r\n```\r\n\r\nIs there a function on that view like this:\r\n\r\n```\r\ndef get_formset_kwargs(...):\r\n    kwargs.update({'my_variable': some.variable})\r\n```\r\n\r\nSo that in my FORM of the formset I can do this:\r\n\r\n```\r\nclass Derp1Form(forms.ModelForm):\r\n    def __init__(self, *args, **kwargs):\r\n        self.my_variable= kwargs.pop('my_variable', None)\r\n        super().__init__(*args, **kwargs)\r\n        .....\r\n```\r\n\r\nI have been hunting through this documentation and through the source, and haven't been able to do this yet, but this is a pretty common pattern. Almost thinking of going back to my FBV as I am wasting too much time on this library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/177", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/177/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/177/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/177", "id": 375844421, "node_id": "MDU6SXNzdWUzNzU4NDQ0MjE=", "number": 177, "title": "Why my formset contains three items in creation?", "user": {"login": "etcware", "id": 5634930, "node_id": "MDQ6VXNlcjU2MzQ5MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5634930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etcware", "html_url": "https://github.com/etcware", "followers_url": "https://api.github.com/users/etcware/followers", "following_url": "https://api.github.com/users/etcware/following{/other_user}", "gists_url": "https://api.github.com/users/etcware/gists{/gist_id}", "starred_url": "https://api.github.com/users/etcware/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etcware/subscriptions", "organizations_url": "https://api.github.com/users/etcware/orgs", "repos_url": "https://api.github.com/users/etcware/repos", "events_url": "https://api.github.com/users/etcware/events{/privacy}", "received_events_url": "https://api.github.com/users/etcware/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-31T08:13:02Z", "updated_at": "2018-10-31T08:20:32Z", "closed_at": "2018-10-31T08:20:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I put the question also on [https://stackoverflow.com/questions/53078421/why-django-extra-views-inlineformsetfactory-shows-me-3-forms-in-place-of-1](url).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/176", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/176/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/176/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/176", "id": 375614442, "node_id": "MDU6SXNzdWUzNzU2MTQ0NDI=", "number": 176, "title": "In CreateWithInlinesView and UpdateWithInlinesView templates how I distinguish different formset?", "user": {"login": "etcware", "id": 5634930, "node_id": "MDQ6VXNlcjU2MzQ5MzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5634930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etcware", "html_url": "https://github.com/etcware", "followers_url": "https://api.github.com/users/etcware/followers", "following_url": "https://api.github.com/users/etcware/following{/other_user}", "gists_url": "https://api.github.com/users/etcware/gists{/gist_id}", "starred_url": "https://api.github.com/users/etcware/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etcware/subscriptions", "organizations_url": "https://api.github.com/users/etcware/orgs", "repos_url": "https://api.github.com/users/etcware/repos", "events_url": "https://api.github.com/users/etcware/events{/privacy}", "received_events_url": "https://api.github.com/users/etcware/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-30T17:44:21Z", "updated_at": "2018-10-31T08:24:24Z", "closed_at": "2018-10-31T08:24:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n[https://django-extra-views.readthedocs.io/en/latest/views.html#createwithinlinesview-and-updatewithinlinesview](url)\r\nIn template how do I distinguish the tag formset from the item formset?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/175", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/175/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/175/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/175", "id": 373595062, "node_id": "MDU6SXNzdWUzNzM1OTUwNjI=", "number": 175, "title": "Documentation build at readthedocs.io is failing", "user": {"login": "sdolemelipone", "id": 3969107, "node_id": "MDQ6VXNlcjM5NjkxMDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3969107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdolemelipone", "html_url": "https://github.com/sdolemelipone", "followers_url": "https://api.github.com/users/sdolemelipone/followers", "following_url": "https://api.github.com/users/sdolemelipone/following{/other_user}", "gists_url": "https://api.github.com/users/sdolemelipone/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdolemelipone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdolemelipone/subscriptions", "organizations_url": "https://api.github.com/users/sdolemelipone/orgs", "repos_url": "https://api.github.com/users/sdolemelipone/repos", "events_url": "https://api.github.com/users/sdolemelipone/events{/privacy}", "received_events_url": "https://api.github.com/users/sdolemelipone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-10-24T17:32:58Z", "updated_at": "2018-10-31T23:46:29Z", "closed_at": "2018-10-31T23:46:29Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "https://readthedocs.org/projects/django-extra-views/builds/5606569/\r\n\r\nIdeas on what we can do to get it buliding again...looks like the last build attempt was in June 2017... @jonashaag do you have access at readthedocs? Could you take a look or grant me some login details so I can try and get it working? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/172", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/172/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/172/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/172", "id": 364599529, "node_id": "MDU6SXNzdWUzNjQ1OTk1Mjk=", "number": 172, "title": "Version 0.12.0 not being installed with pip", "user": {"login": "goromachine", "id": 12257503, "node_id": "MDQ6VXNlcjEyMjU3NTAz", "avatar_url": "https://avatars2.githubusercontent.com/u/12257503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goromachine", "html_url": "https://github.com/goromachine", "followers_url": "https://api.github.com/users/goromachine/followers", "following_url": "https://api.github.com/users/goromachine/following{/other_user}", "gists_url": "https://api.github.com/users/goromachine/gists{/gist_id}", "starred_url": "https://api.github.com/users/goromachine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goromachine/subscriptions", "organizations_url": "https://api.github.com/users/goromachine/orgs", "repos_url": "https://api.github.com/users/goromachine/repos", "events_url": "https://api.github.com/users/goromachine/events{/privacy}", "received_events_url": "https://api.github.com/users/goromachine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-27T18:27:37Z", "updated_at": "2018-10-31T08:24:54Z", "closed_at": "2018-10-31T08:24:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "While using the following pip command:\r\n\r\n`pip install django-extra-views`\r\n\r\nIt installs the v.0.11.0 and I don't have the 'Factory' changes, so  I can't use `InlineFormSetFactory` and `InlineFormSet` does not work and gives the following exception:\r\n\r\n> Setting `MediaInline.extra` at the class level is now deprecated. Set `MediaInline.factory_kwargs` instead.\r\n\r\nI tried uninstalling that version and then installing using the other command:\r\n\r\n`pip install -e git://github.com/AndrewIngram/django-extra-views.git#egg=django-extra-views`\r\n\r\nBut doing this Django does not detect the 'import extra-views'.\r\n\r\nI've seen on the changelog that you made the version 0.12.0 with the corresponding solution, but I don't have any way using pip to install this version.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/170", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/170/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/170/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/170", "id": 358406053, "node_id": "MDU6SXNzdWUzNTg0MDYwNTM=", "number": 170, "title": "When cleaning parent form, give it access to cleaned formset data", "user": {"login": "Darayavaush", "id": 3651004, "node_id": "MDQ6VXNlcjM2NTEwMDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3651004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Darayavaush", "html_url": "https://github.com/Darayavaush", "followers_url": "https://api.github.com/users/Darayavaush/followers", "following_url": "https://api.github.com/users/Darayavaush/following{/other_user}", "gists_url": "https://api.github.com/users/Darayavaush/gists{/gist_id}", "starred_url": "https://api.github.com/users/Darayavaush/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Darayavaush/subscriptions", "organizations_url": "https://api.github.com/users/Darayavaush/orgs", "repos_url": "https://api.github.com/users/Darayavaush/repos", "events_url": "https://api.github.com/users/Darayavaush/events{/privacy}", "received_events_url": "https://api.github.com/users/Darayavaush/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-09T19:49:01Z", "updated_at": "2018-09-20T21:24:15Z", "closed_at": "2018-09-09T20:06:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to implement the following logic: when a checkbox in the parent form is checked, make sure that a certain field is not empty in every form in attached formset, otherwise fail validation. However, judging by the code of ProcessFormWithInlinesView:post(), the parent form and every formset are completely isolated when being cleaned, which makes this impossible, as far as I can tell.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/169", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/169/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/169/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/169", "id": 336175200, "node_id": "MDU6SXNzdWUzMzYxNzUyMDA=", "number": 169, "title": "Better documentation: describe usage in template", "user": {"login": "PetrDlouhy", "id": 156755, "node_id": "MDQ6VXNlcjE1Njc1NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/156755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PetrDlouhy", "html_url": "https://github.com/PetrDlouhy", "followers_url": "https://api.github.com/users/PetrDlouhy/followers", "following_url": "https://api.github.com/users/PetrDlouhy/following{/other_user}", "gists_url": "https://api.github.com/users/PetrDlouhy/gists{/gist_id}", "starred_url": "https://api.github.com/users/PetrDlouhy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PetrDlouhy/subscriptions", "organizations_url": "https://api.github.com/users/PetrDlouhy/orgs", "repos_url": "https://api.github.com/users/PetrDlouhy/repos", "events_url": "https://api.github.com/users/PetrDlouhy/events{/privacy}", "received_events_url": "https://api.github.com/users/PetrDlouhy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296457018, "node_id": "MDU6TGFiZWwyOTY0NTcwMTg=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Documentation", "name": "Documentation", "color": "fbca04", "default": false, "description": null}, {"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-27T10:43:38Z", "updated_at": "2018-11-14T10:00:18Z", "closed_at": "2018-11-14T10:00:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I spent few hour figuring out, why inline formsets doesn't work. The cause was that I used `{{ form }}` instead of `{{ formset }}` in template. I didn't find any mention about this in the docs. This is worth of describing somewhere.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/168", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/168/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/168/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/168", "id": 333758137, "node_id": "MDU6SXNzdWUzMzM3NTgxMzc=", "number": 168, "title": "Management form issue with named inline forms", "user": {"login": "slandau3", "id": 16438589, "node_id": "MDQ6VXNlcjE2NDM4NTg5", "avatar_url": "https://avatars1.githubusercontent.com/u/16438589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slandau3", "html_url": "https://github.com/slandau3", "followers_url": "https://api.github.com/users/slandau3/followers", "following_url": "https://api.github.com/users/slandau3/following{/other_user}", "gists_url": "https://api.github.com/users/slandau3/gists{/gist_id}", "starred_url": "https://api.github.com/users/slandau3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slandau3/subscriptions", "organizations_url": "https://api.github.com/users/slandau3/orgs", "repos_url": "https://api.github.com/users/slandau3/repos", "events_url": "https://api.github.com/users/slandau3/events{/privacy}", "received_events_url": "https://api.github.com/users/slandau3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-19T16:58:46Z", "updated_at": "2018-10-31T08:25:26Z", "closed_at": "2018-10-31T08:25:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried implementing a model that is referenced by several foreign keys and the html appears to generate fine but when I attempt to submit it I get \"ManagementForm data is missing or has been tampered with\"\r\n\r\nMy template is as follows:\r\n```html\r\n  <form method=\"post\" action=\".\" id=\"update-form\">\r\n    {% csrf_token %}\r\n    {% crispy form %}\r\n    {% if matching %}\r\n        {{ matching.management_form }}\r\n        <fieldset>\r\n          <legend>Matches</legend>\r\n          {% for  match in matching.forms %}\r\n            <div class=\"matching-formset mb-3\">\r\n              {% crispy match %}\r\n            </div>\r\n          {% endfor %}\r\n        </fieldset>\r\n    {% endif %}\r\n    {{ additional_files.management_form |crispy}}\r\n    <fieldset>\r\n      <legend>Additional Files</legend>\r\n      {% for file in additional_files.forms %}\r\n        <div class=\"additional-data-formset mb-3\">\r\n          {% crispy file %}\r\n        </div>\r\n      {% endfor %}\r\n    </fieldset>\r\n   \r\n    <button type=\"submit\"  class=\"save\" value=\"submit\"/>\r\n  </form>\r\n```\r\n\r\nOn the page that's rendered I give users the ability to add and delete forms. I use [django-dynamic-formsets](https://github.com/elo80ka/django-dynamic-formset) to do this.  Here's how I initialize it (it appears to be working and updates the management forms properly):\r\n```javascript\r\n        $('.additional-data-formset').formset({\r\n            prefix: '{{ additional_files.prefix }}',\r\n            addText: 'Add File',\r\n            deleteText: 'Delete File',\r\n          \r\n    });\r\n        $('.matching-formset').formset({\r\n          prefix: '{{ matching.prefix }}',\r\n          addText: 'Add Match',\r\n          deleteText: 'Delete Match',\r\n\r\n        });\r\n```\r\n\r\nAnother thing, for some reason the submit button has not been working. I've been having to submit the form manually via a jquery event \r\n```javascript\r\n    $('.save').on('click', function(e){$('#update-form').submit();})\r\n```\r\n\r\nI followed the documentation to design all my views but I'll post them here just in case\r\n```python\r\nclass MatchingOptionInline(extra_views.InlineFormSet):\r\n    model = MatchingOption\r\n    fields = ('key', 'value',)\r\n    factory_kwargs = {'extra': 1}\r\n    prefix = \"match\"\r\n\r\n\r\n\r\nclass AdditionalDataInline(extra_views.InlineFormSet):\r\n    model = AdditionalData\r\n    form_class = forms.AdditionalDataForm\r\n    fields = ('upload',)\r\n    factory_kwargs = {'extra': 1}\r\n    prefix = \"file\"\r\n\r\n\r\nclass MatchingView(\r\n                       extra_views.NamedFormsetsMixin,\r\n                       extra_views.CreateWithInlinesView):\r\n    model = Matching\r\n    form_class = forms.MatchingForm\r\n    template_name = 'pages/editors/question.html'\r\n    inlines = [MatchingOptionInline, AdditionalDataInline]\r\n    inlines_names = ['matching', 'additional_files']\r\n\r\n    success_url = reverse_lazy('home:home')\r\n    prefix = \"main-matching-view\"\r\n```\r\nAll of the form_class's that are referred to are just simple model forms.\r\n\r\nThis issue has been extremely annoying and I'm not sure what's causing it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/165", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/165/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/165/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/165", "id": 327008102, "node_id": "MDU6SXNzdWUzMjcwMDgxMDI=", "number": 165, "title": "Custom validation in InlineFormSet", "user": {"login": "trepmag", "id": 875021, "node_id": "MDQ6VXNlcjg3NTAyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/875021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trepmag", "html_url": "https://github.com/trepmag", "followers_url": "https://api.github.com/users/trepmag/followers", "following_url": "https://api.github.com/users/trepmag/following{/other_user}", "gists_url": "https://api.github.com/users/trepmag/gists{/gist_id}", "starred_url": "https://api.github.com/users/trepmag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trepmag/subscriptions", "organizations_url": "https://api.github.com/users/trepmag/orgs", "repos_url": "https://api.github.com/users/trepmag/repos", "events_url": "https://api.github.com/users/trepmag/events{/privacy}", "received_events_url": "https://api.github.com/users/trepmag/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-28T12:21:41Z", "updated_at": "2018-11-16T08:37:31Z", "closed_at": "2018-11-16T08:37:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI need to implement a custom validation for a InlineFormSet instantiated by a CreateWithInlinesView view but it appear that the clean() method in my inline formset is not triggered.\r\n\r\nI was referring to this django documentation https://docs.djangoproject.com/en/1.11/topics/forms/formsets/#custom-formset-validation\r\n\r\n```\r\nclass MyInlineFormset(InlineFormSet):\r\n    model = my_model\r\n    form_class = MyForm\r\n\r\n    def clean(self):\r\n        cleaned_data = super().clean()\r\n        // Need to do a forms.ValidationError(\"Something need to be so...\")\r\n        return cleaned_data\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/155", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/155/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/155/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/155", "id": 296219292, "node_id": "MDU6SXNzdWUyOTYyMTkyOTI=", "number": 155, "title": "ProcessFormWithInlinesView.post() should not leave self.object when an inline validation fails", "user": {"login": "Murfen", "id": 897230, "node_id": "MDQ6VXNlcjg5NzIzMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/897230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Murfen", "html_url": "https://github.com/Murfen", "followers_url": "https://api.github.com/users/Murfen/followers", "following_url": "https://api.github.com/users/Murfen/following{/other_user}", "gists_url": "https://api.github.com/users/Murfen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Murfen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Murfen/subscriptions", "organizations_url": "https://api.github.com/users/Murfen/orgs", "repos_url": "https://api.github.com/users/Murfen/repos", "events_url": "https://api.github.com/users/Murfen/events{/privacy}", "received_events_url": "https://api.github.com/users/Murfen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-11T19:49:56Z", "updated_at": "2019-12-20T08:58:51Z", "closed_at": "2019-12-20T08:58:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the main form is valid ProcessFormWithInlinesView.post() method creates self.object with commit=False.\r\nThen inlines validation happens having a good self.object to be able to make parent-child validation.\r\nOK.\r\nHowever if an inline validation fails the method should clean self.object,\r\notherwise the template is rendered with not-saved object.\r\nThis is bad because it's hard to distinguish \"create\" from \"update\" in template.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/153", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/153/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/153/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/153", "id": 266973148, "node_id": "MDU6SXNzdWUyNjY5NzMxNDg=", "number": 153, "title": "object_list AttributeError in ModelFormsetView", "user": {"login": "bobort", "id": 15187894, "node_id": "MDQ6VXNlcjE1MTg3ODk0", "avatar_url": "https://avatars1.githubusercontent.com/u/15187894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobort", "html_url": "https://github.com/bobort", "followers_url": "https://api.github.com/users/bobort/followers", "following_url": "https://api.github.com/users/bobort/following{/other_user}", "gists_url": "https://api.github.com/users/bobort/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobort/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobort/subscriptions", "organizations_url": "https://api.github.com/users/bobort/orgs", "repos_url": "https://api.github.com/users/bobort/repos", "events_url": "https://api.github.com/users/bobort/events{/privacy}", "received_events_url": "https://api.github.com/users/bobort/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-19T20:11:57Z", "updated_at": "2018-10-31T08:26:04Z", "closed_at": "2018-10-31T08:26:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a ModelFormsetView that happens to return an empty queryset.\r\n\r\nIn formsets.py, line 161, I get an AttributeError:\r\n`if self.object_list is not None:`\r\n\r\nI'm guessing, though I haven't investigated much, that `object_list` doesn't get set when the `get_queryset` method returns an empty QuerySet object.  I suggest either changing that so that it is always set or doing a getattr on line 161 instead, though that wouldn't take care of other areas depending on self.object_list being set.\r\n\r\n`if getattr(self, object_list):`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/148", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/148/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/148/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/148", "id": 258105073, "node_id": "MDU6SXNzdWUyNTgxMDUwNzM=", "number": 148, "title": "Adding a form to a formset", "user": {"login": "bodgerbarnett", "id": 1990439, "node_id": "MDQ6VXNlcjE5OTA0Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1990439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bodgerbarnett", "html_url": "https://github.com/bodgerbarnett", "followers_url": "https://api.github.com/users/bodgerbarnett/followers", "following_url": "https://api.github.com/users/bodgerbarnett/following{/other_user}", "gists_url": "https://api.github.com/users/bodgerbarnett/gists{/gist_id}", "starred_url": "https://api.github.com/users/bodgerbarnett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bodgerbarnett/subscriptions", "organizations_url": "https://api.github.com/users/bodgerbarnett/orgs", "repos_url": "https://api.github.com/users/bodgerbarnett/repos", "events_url": "https://api.github.com/users/bodgerbarnett/events{/privacy}", "received_events_url": "https://api.github.com/users/bodgerbarnett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-15T17:05:18Z", "updated_at": "2018-10-31T08:26:19Z", "closed_at": "2018-10-31T08:26:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to add form to a model formset?\r\n\r\nI've got a ModelFormSetView which renders a bunch of forms for my model - but I want to add a single extra form at the bottom of the formset which will enable the user to say yes or no to something that applies to the logic of the entire page (whether to send an email about the changes).\r\n\r\nI've tried inheriting from FormMixin but I think I must have missed something as it doesn't work.\r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/144", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/144/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/144/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/144", "id": 230174763, "node_id": "MDU6SXNzdWUyMzAxNzQ3NjM=", "number": 144, "title": "Update examples", "user": {"login": "anddam", "id": 689872, "node_id": "MDQ6VXNlcjY4OTg3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/689872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anddam", "html_url": "https://github.com/anddam", "followers_url": "https://api.github.com/users/anddam/followers", "following_url": "https://api.github.com/users/anddam/following{/other_user}", "gists_url": "https://api.github.com/users/anddam/gists{/gist_id}", "starred_url": "https://api.github.com/users/anddam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anddam/subscriptions", "organizations_url": "https://api.github.com/users/anddam/orgs", "repos_url": "https://api.github.com/users/anddam/repos", "events_url": "https://api.github.com/users/anddam/events{/privacy}", "received_events_url": "https://api.github.com/users/anddam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296457018, "node_id": "MDU6TGFiZWwyOTY0NTcwMTg=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Documentation", "name": "Documentation", "color": "fbca04", "default": false, "description": null}, {"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-20T19:42:16Z", "updated_at": "2018-11-14T10:00:08Z", "closed_at": "2018-11-14T10:00:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please update examples in readme.rst to reflect the ModelFormMixin's need for fields attribute.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/143", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/143/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/143/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/143", "id": 213462820, "node_id": "MDU6SXNzdWUyMTM0NjI4MjA=", "number": 143, "title": "Images formset not saving data", "user": {"login": "thetractor", "id": 22886611, "node_id": "MDQ6VXNlcjIyODg2NjEx", "avatar_url": "https://avatars2.githubusercontent.com/u/22886611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thetractor", "html_url": "https://github.com/thetractor", "followers_url": "https://api.github.com/users/thetractor/followers", "following_url": "https://api.github.com/users/thetractor/following{/other_user}", "gists_url": "https://api.github.com/users/thetractor/gists{/gist_id}", "starred_url": "https://api.github.com/users/thetractor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thetractor/subscriptions", "organizations_url": "https://api.github.com/users/thetractor/orgs", "repos_url": "https://api.github.com/users/thetractor/repos", "events_url": "https://api.github.com/users/thetractor/events{/privacy}", "received_events_url": "https://api.github.com/users/thetractor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-10T21:57:57Z", "updated_at": "2017-05-03T14:44:05Z", "closed_at": "2017-05-03T14:44:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to get a formset with images to work. The main form gets saved no problem but all data in the formset is not saved to the model. I followed this issue https://github.com/AndrewIngram/django-extra-views/issues/121 but without any success.\r\n\r\nThe formset renders in the template and also shows added images (via admin) but if I want to add a new image in the UpdateWithInlinesView new images are not saved. Any suggestions?\r\n\r\nThis is how my setup looks:\r\n\r\n**models.py** \r\n```python\r\nfrom sorl.thumbnail import ImageField\r\n\r\nclass Item(models.Model):\r\n    bexio_id = models.IntegerField(_('Bexio ID'), null=True, blank=True)\r\n    article_type_id = models.IntegerField(_('Item Type'), choices=constants.ITEM_TYPE_CHOICES, null=True, blank=True)\r\n    contact_id = models.ForeignKey(Contact)\r\n    deliverer_code = models.CharField(_('Deliverer Code'), max_length=200, null=True, blank=True)\r\n    intern_code = models.CharField(_('Item Code'), max_length=200, null=True, blank=True)\r\n    intern_name = models.CharField(_('Item Name'), max_length=200, null=True, blank=True)\r\n    intern_description = models.TextField(_('Item Description'), null=True, blank=True)\r\n    purchase_price = models.DecimalField(_('Purchase Price'), max_digits=10, decimal_places=2, null=True, blank=True)\r\n    sale_price = models.DecimalField(_('Sale Price'), max_digits=10, decimal_places=2, null=True, blank=True)\r\n    currency_id = models.IntegerField(_('Currency'), choices=constants.CURRENCY_CHOICES, null=True, blank=True)\r\n    remarks = models.TextField(_('Remarks'), null=True, blank=True)\r\n    article_group_id = models.ForeignKey(ItemGroup)\r\n\r\n    def __str__(self):\r\n        return '{} - {}'.format(self.intern_code, self.intern_name)\r\n\r\n    def get_image(self):\r\n        return Image.objects.filter(item=self).first()\r\n\r\n\r\nclass Image(models.Model):\r\n    image = ImageField(_('Image'), upload_to='items')\r\n    item = models.ForeignKey(Item)\r\n```\r\n\r\n**forms.py** \r\n```python\r\nfrom extra_views import InlineFormSet\r\nfrom apps.items.models import Item, Image\r\n\r\nclass ItemModelForm(forms.ModelForm):\r\n    class Meta:\r\n        model = Item\r\n        fields = ['article_type_id', 'contact_id', 'deliverer_code', 'intern_code', 'intern_name', 'intern_description',\r\n                  'purchase_price', 'sale_price', 'currency_id', 'remarks', 'article_group_id'\r\n                  ]\r\n\r\n\r\nclass ImageModelForm(forms.ModelForm):\r\n    class Meta:\r\n        model = Image\r\n        fields = ['image']\r\n\r\n\r\nclass ImageInlineFormSet(InlineFormSet):\r\n    model = Image\r\n    fields = ['image']\r\n    form_class = ImageModelForm\r\n\r\n```\r\n\r\n**views.py***\r\n```python\r\nfrom extra_views import UpdateWithInlinesView\r\nfrom apps.items.forms import ItemModelForm, ImageInlineFormSet\r\nfrom apps.items.models import Item\r\n\r\nclass ItemUpdateView(UpdateWithInlinesView):\r\n    model = Item\r\n    form_class = ItemModelForm\r\n    inlines = [ImageInlineFormSet, ]\r\n    template_name = 'items/edit.html'\r\n\r\n    def get_success_url(self):\r\n        return '/items/'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/142", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/142/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/142/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/142", "id": 211998538, "node_id": "MDU6SXNzdWUyMTE5OTg1Mzg=", "number": 142, "title": "Django 1.10/1.11 release", "user": {"login": "AndrewIngram", "id": 35227, "node_id": "MDQ6VXNlcjM1MjI3", "avatar_url": "https://avatars1.githubusercontent.com/u/35227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewIngram", "html_url": "https://github.com/AndrewIngram", "followers_url": "https://api.github.com/users/AndrewIngram/followers", "following_url": "https://api.github.com/users/AndrewIngram/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewIngram/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewIngram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewIngram/subscriptions", "organizations_url": "https://api.github.com/users/AndrewIngram/orgs", "repos_url": "https://api.github.com/users/AndrewIngram/repos", "events_url": "https://api.github.com/users/AndrewIngram/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewIngram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-06T00:27:58Z", "updated_at": "2017-03-09T15:12:15Z", "closed_at": "2017-03-09T06:29:52Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Despite owning the repo, i'm not actively using this library (or Django at the moment), but it looks like we're in need of cutting a release. It seems there are quite a few unreleased changes in master? I'm also receiving personal emails about it, so there's clearly a lot of interest.\r\n\r\n@jonashaag is there anything in particular that's holding up a 1.10 (and ideally 1.11) release? If there's anything you need help with let me know, it'll take me a while to get back up to speed but i'll do what I can.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/137", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/137/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/137/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/137", "id": 173951425, "node_id": "MDU6SXNzdWUxNzM5NTE0MjU=", "number": 137, "title": "Incompatible with Django 1.10", "user": {"login": "svengt", "id": 1049636, "node_id": "MDQ6VXNlcjEwNDk2MzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1049636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svengt", "html_url": "https://github.com/svengt", "followers_url": "https://api.github.com/users/svengt/followers", "following_url": "https://api.github.com/users/svengt/following{/other_user}", "gists_url": "https://api.github.com/users/svengt/gists{/gist_id}", "starred_url": "https://api.github.com/users/svengt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svengt/subscriptions", "organizations_url": "https://api.github.com/users/svengt/orgs", "repos_url": "https://api.github.com/users/svengt/repos", "events_url": "https://api.github.com/users/svengt/events{/privacy}", "received_events_url": "https://api.github.com/users/svengt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-08-30T07:47:04Z", "updated_at": "2018-08-29T13:44:53Z", "closed_at": "2018-08-29T13:44:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Build is failing for latest Django version. Also when I update one of my projects to Django 1.10 I get the following error when using `get_extra_form_kwargs`.\n\n```\nTraceback:\n\nFile \"/project/env/base/lib/python3.5/site-packages/django/core/handlers/exception.py\" in inner\n  39.             response = get_response(request)\n\nFile \"/project/env/base/lib/python3.5/site-packages/django/core/handlers/base.py\" in _legacy_get_response\n  249.             response = self._get_response(request)\n\nFile \"/project/env/base/lib/python3.5/site-packages/django/core/handlers/base.py\" in _get_response\n  187.                 response = self.process_exception_by_middleware(e, request)\n\nFile \"/project/env/base/lib/python3.5/site-packages/django/core/handlers/base.py\" in _get_response\n  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)\n\nFile \"/project/env/base/lib/python3.5/site-packages/django/views/generic/base.py\" in view\n  68.             return self.dispatch(request, *args, **kwargs)\n\nFile \"/project/env/base/lib/python3.5/site-packages/django/contrib/auth/mixins.py\" in dispatch\n  56.         return super(LoginRequiredMixin, self).dispatch(request, *args, **kwargs)\n\nFile \"/project/env/base/lib/python3.5/site-packages/django/views/generic/base.py\" in dispatch\n  88.         return handler(request, *args, **kwargs)\n\nFile \"/project/env/base/lib/python3.5/site-packages/extra_views/advanced.py\" in get\n  147.         return super(BaseUpdateWithInlinesView, self).get(request, *args, **kwargs)\n\nFile \"/project/env/base/lib/python3.5/site-packages/extra_views/advanced.py\" in get\n  85.         inlines = self.construct_inlines()\n\nFile \"/project/env/base/lib/python3.5/site-packages/extra_views/advanced.py\" in construct_inlines\n  69.             inline_formset = inline_instance.construct_formset()\n\nFile \"/project/env/base/lib/python3.5/site-packages/extra_views/advanced.py\" in construct_formset\n  28.         formset = super(InlineFormSet, self).construct_formset()\n\nFile \"/project/env/base/lib/python3.5/site-packages/extra_views/formsets.py\" in construct_formset\n  39.         return formset_class(**self.get_formset_kwargs())\n\nFile \"/project/env/base/lib/python3.5/site-packages/django/forms/models.py\" in __init__\n  880.         if self.form._meta.fields and self.fk.name not in self.form._meta.fields:\n\nException Type: AttributeError at /reizen/416/\nException Value: 'function' object has no attribute '_meta'\n```\n\n`InlineModelFormSet` that causes the problem (having no problems after removing `get_extra_form_kwargs`):\n\n```\nclass RelatedInline(InlineModelFormSet):\n    model = models.TripRelated\n    form_class = forms.TripRelatedInlineForm\n    max_num = extra = 3\n    fk_name = 'trip'\n\n    def get_formset_kwargs(self):\n        kwargs = super().get_formset_kwargs()\n        kwargs['queryset'] = \\\n            models.TripRelated.objects.select_related('related')\n        return kwargs\n\n    def get_extra_form_kwargs(self):\n        kwargs = super().get_extra_form_kwargs()\n        kwargs['parent'] = self.object\n        return kwargs\n```\n\nThis line seems to be the problem as it is trying to get `._meta` from the curried function https://github.com/AndrewIngram/django-extra-views/blob/master/extra_views/formsets.py#L37 .\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/136", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/136/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/136/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/136/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/136", "id": 171688117, "node_id": "MDU6SXNzdWUxNzE2ODgxMTc=", "number": 136, "title": "invalid literal for int() with base 10: ''", "user": {"login": "flaudizio", "id": 7389407, "node_id": "MDQ6VXNlcjczODk0MDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/7389407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flaudizio", "html_url": "https://github.com/flaudizio", "followers_url": "https://api.github.com/users/flaudizio/followers", "following_url": "https://api.github.com/users/flaudizio/following{/other_user}", "gists_url": "https://api.github.com/users/flaudizio/gists{/gist_id}", "starred_url": "https://api.github.com/users/flaudizio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flaudizio/subscriptions", "organizations_url": "https://api.github.com/users/flaudizio/orgs", "repos_url": "https://api.github.com/users/flaudizio/repos", "events_url": "https://api.github.com/users/flaudizio/events{/privacy}", "received_events_url": "https://api.github.com/users/flaudizio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-17T15:30:21Z", "updated_at": "2018-10-31T08:26:34Z", "closed_at": "2018-10-31T08:26:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nValidationError at /cadastros/pacientes/atualizar/2/\n[\"'' value must be an integer.\"]\n\nself    <django.db.models.fields.AutoField: id>\nvalue ''\n\nRequest information (django):\n\ntelefone_pessoa-1-id    ''\ntelefone_pessoa-1-id    ''\ntelefone_pessoa-2-id    ''\ntelefone_pessoa-0-pessoa     ''\n```\n\nMy code:\n\n``` py\nclass TelefonePessoaInline(InlineFormSet):\n    model = TelefonePessoa\n    form_class = TelefonePessoaForm\n    extra = 2\n\nclass PacienteUpdate(LoginRequiredMixin, SuccessMessageMixin, UpdateWithInlinesView):\n    model = Paciente\n    form_class = PacienteForm\n    success_url = reverse_lazy('pacientes')\n    template_name = 'forms/paciente.html'\n    success_message = '%(nome)s atualizado com sucesso.'\n    inlines = [TelefonePessoaInline]\n    inlines_names = ['telefone_pessoa_form']\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/134", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/134/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/134/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/134", "id": 171152838, "node_id": "MDU6SXNzdWUxNzExNTI4Mzg=", "number": 134, "title": "object_list context variable not populated in Jinja2 when queryset is empty", "user": {"login": "benwad", "id": 1336, "node_id": "MDQ6VXNlcjEzMzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benwad", "html_url": "https://github.com/benwad", "followers_url": "https://api.github.com/users/benwad/followers", "following_url": "https://api.github.com/users/benwad/following{/other_user}", "gists_url": "https://api.github.com/users/benwad/gists{/gist_id}", "starred_url": "https://api.github.com/users/benwad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benwad/subscriptions", "organizations_url": "https://api.github.com/users/benwad/orgs", "repos_url": "https://api.github.com/users/benwad/repos", "events_url": "https://api.github.com/users/benwad/events{/privacy}", "received_events_url": "https://api.github.com/users/benwad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-15T11:23:44Z", "updated_at": "2016-08-15T12:32:49Z", "closed_at": "2016-08-15T12:32:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When `get_queryset` returns an empty set, the `object_list` context variable is not set. This is handled silently in Django templates but causes an error in Jinja2.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/133", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/133/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/133/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/133", "id": 167277809, "node_id": "MDU6SXNzdWUxNjcyNzc4MDk=", "number": 133, "title": "add another", "user": {"login": "bbaobelief", "id": 3918461, "node_id": "MDQ6VXNlcjM5MTg0NjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3918461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbaobelief", "html_url": "https://github.com/bbaobelief", "followers_url": "https://api.github.com/users/bbaobelief/followers", "following_url": "https://api.github.com/users/bbaobelief/following{/other_user}", "gists_url": "https://api.github.com/users/bbaobelief/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbaobelief/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbaobelief/subscriptions", "organizations_url": "https://api.github.com/users/bbaobelief/orgs", "repos_url": "https://api.github.com/users/bbaobelief/repos", "events_url": "https://api.github.com/users/bbaobelief/events{/privacy}", "received_events_url": "https://api.github.com/users/bbaobelief/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-25T04:03:11Z", "updated_at": "2016-07-26T01:54:24Z", "closed_at": "2016-07-26T01:54:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "can you please tell me how did you add new subform at client side?? I want to add new subform as needed on the client side.\n\nAfter submission, only 1\uff1f\n\nHow to save multiple data\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/130", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/130/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/130/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/130", "id": 159582079, "node_id": "MDU6SXNzdWUxNTk1ODIwNzk=", "number": 130, "title": "Include this `CreateOrUpdateView` gist", "user": {"login": "vdboor", "id": 200303, "node_id": "MDQ6VXNlcjIwMDMwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/200303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdboor", "html_url": "https://github.com/vdboor", "followers_url": "https://api.github.com/users/vdboor/followers", "following_url": "https://api.github.com/users/vdboor/following{/other_user}", "gists_url": "https://api.github.com/users/vdboor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdboor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdboor/subscriptions", "organizations_url": "https://api.github.com/users/vdboor/orgs", "repos_url": "https://api.github.com/users/vdboor/repos", "events_url": "https://api.github.com/users/vdboor/events{/privacy}", "received_events_url": "https://api.github.com/users/vdboor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-10T08:14:40Z", "updated_at": "2018-10-31T08:26:51Z", "closed_at": "2018-10-31T08:26:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nI've written a `CreateOrUpdateView` class, that would be an ideal candicate to add to this package.\nSee: https://gist.github.com/vdboor/dbc53b05a7a9424c2cfb Would you like me to provide a pull request for this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/129", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/129/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/129/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/129", "id": 159406236, "node_id": "MDU6SXNzdWUxNTk0MDYyMzY=", "number": 129, "title": "Provide a new release?", "user": {"login": "vdboor", "id": 200303, "node_id": "MDQ6VXNlcjIwMDMwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/200303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdboor", "html_url": "https://github.com/vdboor", "followers_url": "https://api.github.com/users/vdboor/followers", "following_url": "https://api.github.com/users/vdboor/following{/other_user}", "gists_url": "https://api.github.com/users/vdboor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdboor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdboor/subscriptions", "organizations_url": "https://api.github.com/users/vdboor/orgs", "repos_url": "https://api.github.com/users/vdboor/repos", "events_url": "https://api.github.com/users/vdboor/events{/privacy}", "received_events_url": "https://api.github.com/users/vdboor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-06-09T13:20:58Z", "updated_at": "2016-06-15T10:12:18Z", "closed_at": "2016-06-15T10:12:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The last 0.7.1 release was 1 year ago (2015-06-15). Many useful fixes have been added, for Django 1.9 compatibility and even security fixes (#114). Could you please release the current state was a new release, e.g. 0.8?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/126", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/126/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/126/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/126", "id": 153008102, "node_id": "MDU6SXNzdWUxNTMwMDgxMDI=", "number": 126, "title": "Problem with forms_valid in the ProcessMultiFormView", "user": {"login": "robertomorati", "id": 3457738, "node_id": "MDQ6VXNlcjM0NTc3Mzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/3457738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertomorati", "html_url": "https://github.com/robertomorati", "followers_url": "https://api.github.com/users/robertomorati/followers", "following_url": "https://api.github.com/users/robertomorati/following{/other_user}", "gists_url": "https://api.github.com/users/robertomorati/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertomorati/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertomorati/subscriptions", "organizations_url": "https://api.github.com/users/robertomorati/orgs", "repos_url": "https://api.github.com/users/robertomorati/repos", "events_url": "https://api.github.com/users/robertomorati/events{/privacy}", "received_events_url": "https://api.github.com/users/robertomorati/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-04T13:13:35Z", "updated_at": "2016-05-05T14:07:46Z", "closed_at": "2016-05-04T21:45:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIn the older version of extra_views the method post worked fine for me.  Now, I have a problem in the def post(self, request, _args, *_kwargs).... because the follow fragment of code has changed.\n\nIn the last version:\n\n```\nif valid:\n    handler = 'valid_%s' % label\n    if hasattr(self, handler):\n        getattr(self, handler)(valid_forms)\n    **return self.forms_valid() # has changed here**\n```\n\nIn the older version:\n\n```\nif valid:\n    handler = 'valid_%s' % label\n    if hasattr(self, handler):\n        getattr(self, handler)(valid_forms)\n   ** return self.forms_valid(valid_forms) # pass the valid_forms**\n```\n\nI need recover the valid forms. Any idea to solve this?\n\nThanks, \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/123", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/123/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/123/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/123", "id": 135762563, "node_id": "MDU6SXNzdWUxMzU3NjI1NjM=", "number": 123, "title": "Bug in formsets.BaseFormSetMixin.initial", "user": {"login": "sergei-maertens", "id": 5518550, "node_id": "MDQ6VXNlcjU1MTg1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5518550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergei-maertens", "html_url": "https://github.com/sergei-maertens", "followers_url": "https://api.github.com/users/sergei-maertens/followers", "following_url": "https://api.github.com/users/sergei-maertens/following{/other_user}", "gists_url": "https://api.github.com/users/sergei-maertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergei-maertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergei-maertens/subscriptions", "organizations_url": "https://api.github.com/users/sergei-maertens/orgs", "repos_url": "https://api.github.com/users/sergei-maertens/repos", "events_url": "https://api.github.com/users/sergei-maertens/events{/privacy}", "received_events_url": "https://api.github.com/users/sergei-maertens/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2", "html_url": "https://github.com/AndrewIngram/django-extra-views/milestone/2", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2/labels", "id": 1447742, "node_id": "MDk6TWlsZXN0b25lMTQ0Nzc0Mg==", "number": 2, "title": "1.0.0", "description": "", "creator": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "open", "created_at": "2015-12-07T14:10:08Z", "updated_at": "2019-12-20T14:50:08Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2016-02-23T15:11:53Z", "updated_at": "2018-08-29T15:24:58Z", "closed_at": "2018-08-29T15:24:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just ran into this issue for a project, currently BaseFormSetMixin is defined like this:\n\n```\nclass BaseFormSetMixin(object):\n    \"\"\"\n    Base class for constructing a FormSet within a view\n    \"\"\"\n\n    initial = []\n    form_class = None\n    formset_class = None\n    success_url = None\n    extra = 2\n    max_num = None\n    can_order = False\n    can_delete = False\n    prefix = None\n\n   #  ... left of for brevity\n```\n\nThe problem is the default value for `initial`. Lists and dictonaries should never be used in class definitions or as default arguments for function definitions, because they are shared between all instances and they are mutable.\n\nThe offending code in this case is:\n\n```\n    def get_initial(self):\n        initial = super(CateringInline, self).get_initial()\n        picked_articles = self.object.catering_articles.all()\n        for article in self._get_articles():\n            if article in picked_articles:\n                continue\n            initial.append({\n                'article': article,\n                'amount': 0,\n            })\n        return initial\n```\n\nIn this case, `BaseFormSetMixin.initial` is ever-increasing, leading to weird bugs.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/122", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/122/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/122/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/122", "id": 128819295, "node_id": "MDU6SXNzdWUxMjg4MTkyOTU=", "number": 122, "title": "calls to `get_context_data`", "user": {"login": "sergei-maertens", "id": 5518550, "node_id": "MDQ6VXNlcjU1MTg1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5518550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergei-maertens", "html_url": "https://github.com/sergei-maertens", "followers_url": "https://api.github.com/users/sergei-maertens/followers", "following_url": "https://api.github.com/users/sergei-maertens/following{/other_user}", "gists_url": "https://api.github.com/users/sergei-maertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergei-maertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergei-maertens/subscriptions", "organizations_url": "https://api.github.com/users/sergei-maertens/orgs", "repos_url": "https://api.github.com/users/sergei-maertens/repos", "events_url": "https://api.github.com/users/sergei-maertens/events{/privacy}", "received_events_url": "https://api.github.com/users/sergei-maertens/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-26T13:28:10Z", "updated_at": "2016-06-05T19:26:11Z", "closed_at": "2016-06-05T19:26:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just noticed (in `extra_views.advanced.ProcessFormWithInlinesView.get` for example) that `View.get_context_data` is called with `*args` as well, while that method only takes `**kwargs`. Small issue that shouldn't be a problem, but I ran into it because I was overriding some stuff and shoe-horned the request in `*args` as well.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/121", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/121/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/121/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/121", "id": 127111796, "node_id": "MDU6SXNzdWUxMjcxMTE3OTY=", "number": 121, "title": "Changing the model forms used in CreateWithInlinesView", "user": {"login": "timmyomahony", "id": 615149, "node_id": "MDQ6VXNlcjYxNTE0OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/615149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timmyomahony", "html_url": "https://github.com/timmyomahony", "followers_url": "https://api.github.com/users/timmyomahony/followers", "following_url": "https://api.github.com/users/timmyomahony/following{/other_user}", "gists_url": "https://api.github.com/users/timmyomahony/gists{/gist_id}", "starred_url": "https://api.github.com/users/timmyomahony/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timmyomahony/subscriptions", "organizations_url": "https://api.github.com/users/timmyomahony/orgs", "repos_url": "https://api.github.com/users/timmyomahony/repos", "events_url": "https://api.github.com/users/timmyomahony/events{/privacy}", "received_events_url": "https://api.github.com/users/timmyomahony/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296457018, "node_id": "MDU6TGFiZWwyOTY0NTcwMTg=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Documentation", "name": "Documentation", "color": "fbca04", "default": false, "description": null}, {"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-01-17T17:50:53Z", "updated_at": "2018-11-14T09:55:21Z", "closed_at": "2018-11-14T09:55:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to create a batch of invites. So there is a main form where I can name the batch and then an inline formset to allow the user to add 1+ email addresses. I want to control the forms used in each instance.\n\nWhile it seems to make use of my custom main form, it doesn't seem to be working for the inlines. It is just showing all fields for every inline.\n\nHere is an approximation of my setup:\n\n**models.py**\n\n``` python\nclass Batch(models.Model):\n    name = models.CharField(...)\n\n    other_field = ...\n\nclass Invite(models.Model):\n    email = models.EmailField(...)\n    batch = models.ForeignKey(Batch)\n\n    other_fields = ...\n```\n\n**forms.py**\n\n``` python\nfrom extra_views import InlineFormSet\n\nclass BatchModelForm(forms.ModelForm):\n    class Meta:\n        model = Batch\n        fields = [\"name\", ]\n\nclass InviteModelForm(forms.ModelForm):\n    class Meta:\n        model = Invite\n        fields = [\"email\", ]\n\nclass InviteInlineFormSet(InlineFormSet):\n    model = Invite\n    form_class = InviteModelForm  # This doesn't seem to work\n```\n\n**views.py**\n\n``` python\nfrom .forms import InviteInlineFormSet, BatchModelForm\nfrom .models import Batch\n\nclass BatchInviteView(CreateWithInlinesView):\n    model = Batch\n    form_class = BatchModelForm\n    inlines = [InviteInlineFormSet, ]\n\n    def get_success_url(self):\n        ...\n```\n\nI would expect the `form_class` attribute of the `InviteInlineFormSet` to give me control over the inline model form but this doesn't seem to be the case (while `form_class = BatchModelForm` on the `BatchInviteView` is correctly giving me control of the _main_ model form class)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/119", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/119/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/119/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/119", "id": 123826644, "node_id": "MDU6SXNzdWUxMjM4MjY2NDQ=", "number": 119, "title": "FieldDoesNotExist at /products/product/add/ ProductImages has no field named 'content_type'", "user": {"login": "kishorpawar", "id": 4351835, "node_id": "MDQ6VXNlcjQzNTE4MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4351835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kishorpawar", "html_url": "https://github.com/kishorpawar", "followers_url": "https://api.github.com/users/kishorpawar/followers", "following_url": "https://api.github.com/users/kishorpawar/following{/other_user}", "gists_url": "https://api.github.com/users/kishorpawar/gists{/gist_id}", "starred_url": "https://api.github.com/users/kishorpawar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kishorpawar/subscriptions", "organizations_url": "https://api.github.com/users/kishorpawar/orgs", "repos_url": "https://api.github.com/users/kishorpawar/repos", "events_url": "https://api.github.com/users/kishorpawar/events{/privacy}", "received_events_url": "https://api.github.com/users/kishorpawar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-12-24T18:26:32Z", "updated_at": "2018-10-31T23:50:43Z", "closed_at": "2015-12-25T09:36:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "`model 1`  \n\n```\nclass Products(models.Model):\n    product_category = models.ForeignKey(ProductCategory)\n    product_sub_category =  models.ForeignKey(ProductCategory)\n    product_name = models.CharField(max_length = 200)\n   is_active = models.BooleanField(default = True)\n   and so on...\n```\n\n`model 2`\n\n```\nclass ProductImages(models.Model):\n    product = models.ForeignKey( Products )\n    product_image = models.FileField(_('Attachment'), upload_to='attachments')\n    is_active = models.BooleanField(default = True)\n```\n\n`GenericInlineFormSet`\n\n```\nclass ProductImagesInline(GenericInlineFormSet):\n    model = ProductImages\n```\n\n`CreateWithInlinesView`\n\n```\nclass ProductCreate(CreateWithInlinesView):\n    model = Products\n    inlines = [ ProductImagesInline ]\n    template_name = \"products/product_add.html\"\n    fields = ['product_category', 'product_sub_category', 'product_name', 'size', 'color', 'price', 'price_info', 'description_1', 'description_2', 'about_product', 'features', 'specification']\n    success_url = \"products/product-list\"\n```\n\nI have cloned the repo  and have used as app. I am trying to create a Product form and in the same form I want to add filefield to select and upload images.\nI am getting the above error. `Frankly I did not understand how extra_views works`. I just followed the readme  and stuck here.\n\n```\nTraceback:\nFile \"/home/kishor/workspace/gpsstops/env/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  111.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)\nFile \"/home/kishor/workspace/gpsstops/env/local/lib/python2.7/site-packages/django/views/generic/base.py\" in view\n  69.             return self.dispatch(request, *args, **kwargs)\nFile \"/home/kishor/workspace/gpsstops/env/local/lib/python2.7/site-packages/django/views/generic/base.py\" in dispatch\n  87.         return handler(request, *args, **kwargs)\nFile \"/home/kishor/workspace/gpsstops/extra_views/advanced.py\" in get\n  123.         return super(BaseCreateWithInlinesView, self).get(request, *args, **kwargs)\nFile \"/home/kishor/workspace/gpsstops/extra_views/advanced.py\" in get\n  85.         inlines = self.construct_inlines()\nFile \"/home/kishor/workspace/gpsstops/extra_views/advanced.py\" in construct_inlines\n  69.             inline_formset = inline_instance.construct_formset()\nFile \"/home/kishor/workspace/gpsstops/extra_views/formsets.py\" in construct_formset\n  31.         formset_class = self.get_formset()\nFile \"/home/kishor/workspace/gpsstops/extra_views/generic.py\" in get_formset\n  42.         result = generic_inlineformset_factory(self.inline_model, **self.get_factory_kwargs())\nFile \"/home/kishor/workspace/gpsstops/env/local/lib/python2.7/site-packages/django/contrib/contenttypes/forms.py\" in generic_inlineformset_factory\n  70.     ct_field = opts.get_field(ct_field)\nFile \"/home/kishor/workspace/gpsstops/env/local/lib/python2.7/site-packages/django/db/models/options.py\" in get_field\n  398.         raise FieldDoesNotExist('%s has no field named %r' % (self.object_name, name))\n\nException Type: FieldDoesNotExist at /products/product/add/\nException Value: ProductImages has no field named 'content_type'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/118", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/118/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/118/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/118", "id": 123826627, "node_id": "MDU6SXNzdWUxMjM4MjY2Mjc=", "number": 118, "title": "FieldDoesNotExist at /products/product/add/ ProductImages has no field named 'content_type'", "user": {"login": "kishorpawar", "id": 4351835, "node_id": "MDQ6VXNlcjQzNTE4MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4351835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kishorpawar", "html_url": "https://github.com/kishorpawar", "followers_url": "https://api.github.com/users/kishorpawar/followers", "following_url": "https://api.github.com/users/kishorpawar/following{/other_user}", "gists_url": "https://api.github.com/users/kishorpawar/gists{/gist_id}", "starred_url": "https://api.github.com/users/kishorpawar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kishorpawar/subscriptions", "organizations_url": "https://api.github.com/users/kishorpawar/orgs", "repos_url": "https://api.github.com/users/kishorpawar/repos", "events_url": "https://api.github.com/users/kishorpawar/events{/privacy}", "received_events_url": "https://api.github.com/users/kishorpawar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-24T18:26:13Z", "updated_at": "2015-12-25T00:31:22Z", "closed_at": "2015-12-25T00:31:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "`model 1`  \n\n```\nclass Products(models.Model):\n    product_category = models.ForeignKey(ProductCategory)\n    product_sub_category =  models.ForeignKey(ProductCategory)\n    product_name = models.CharField(max_length = 200)\n   is_active = models.BooleanField(default = True)\n   and so on...\n```\n\n`model 2`\n\n```\nclass ProductImages(models.Model):\n    product = models.ForeignKey( Products )\n    product_image = models.FileField(_('Attachment'), upload_to='attachments')\n    is_active = models.BooleanField(default = True)\n```\n\n`GenericInlineFormSet`\n\n```\nclass ProductImagesInline(GenericInlineFormSet):\n    model = ProductImages\n```\n\n`CreateWithInlinesView`\n\n```\nclass ProductCreate(CreateWithInlinesView):\n    model = Products\n    inlines = [ ProductImagesInline ]\n    template_name = \"products/product_add.html\"\n    fields = ['product_category', 'product_sub_category', 'product_name', 'size', 'color', 'price', 'price_info', 'description_1', 'description_2', 'about_product', 'features', 'specification']\n    success_url = \"products/product-list\"\n```\n\nI have cloned the repo  and have used as app. I am trying to create a Product form and in the same form I want to add filefield to select and upload images.\nI am getting the \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/116", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/116/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/116/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/116", "id": 122578792, "node_id": "MDU6SXNzdWUxMjI1Nzg3OTI=", "number": 116, "title": "Please add changelog to this project", "user": {"login": "luzfcb", "id": 807599, "node_id": "MDQ6VXNlcjgwNzU5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/807599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luzfcb", "html_url": "https://github.com/luzfcb", "followers_url": "https://api.github.com/users/luzfcb/followers", "following_url": "https://api.github.com/users/luzfcb/following{/other_user}", "gists_url": "https://api.github.com/users/luzfcb/gists{/gist_id}", "starred_url": "https://api.github.com/users/luzfcb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luzfcb/subscriptions", "organizations_url": "https://api.github.com/users/luzfcb/orgs", "repos_url": "https://api.github.com/users/luzfcb/repos", "events_url": "https://api.github.com/users/luzfcb/events{/privacy}", "received_events_url": "https://api.github.com/users/luzfcb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-16T19:05:38Z", "updated_at": "2015-12-16T20:46:39Z", "closed_at": "2015-12-16T20:46:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "this is a good changelog template: http://keepachangelog.com\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/114", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/114/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/114/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/114", "id": 120781249, "node_id": "MDU6SXNzdWUxMjA3ODEyNDk=", "number": 114, "title": "Remove Django < 1.6 'fields' handling", "user": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2", "html_url": "https://github.com/AndrewIngram/django-extra-views/milestone/2", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2/labels", "id": 1447742, "node_id": "MDk6TWlsZXN0b25lMTQ0Nzc0Mg==", "number": 2, "title": "1.0.0", "description": "", "creator": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "open", "created_at": "2015-12-07T14:10:08Z", "updated_at": "2019-12-20T14:50:08Z", "due_on": null, "closed_at": null}, "comments": 0, "created_at": "2015-12-07T14:08:37Z", "updated_at": "2015-12-10T11:22:06Z", "closed_at": "2015-12-10T11:22:06Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In `ModelFormSetMixin` and `BaseInlineFormSetMixin`, remove the code that overwrites `self.fields` if Django >= 1.6 entirely and let Django handle it.\n\nThis breaks django-extra-view backwards compatibility, but the introduction of mandatory `fields` was backwards-incompatible in Django too, and we should rather stick with the new behavior introduced by Django rather than keep Django's old behavior forever. (It was changed in Django for good reasons, namely security.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/112", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/112/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/112/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/112", "id": 120563633, "node_id": "MDU6SXNzdWUxMjA1NjM2MzM=", "number": 112, "title": "Support for modifying a django-crispy-forms form in get and post of Inlines Views", "user": {"login": "idahogray", "id": 1375485, "node_id": "MDQ6VXNlcjEzNzU0ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1375485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idahogray", "html_url": "https://github.com/idahogray", "followers_url": "https://api.github.com/users/idahogray/followers", "following_url": "https://api.github.com/users/idahogray/following{/other_user}", "gists_url": "https://api.github.com/users/idahogray/gists{/gist_id}", "starred_url": "https://api.github.com/users/idahogray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idahogray/subscriptions", "organizations_url": "https://api.github.com/users/idahogray/orgs", "repos_url": "https://api.github.com/users/idahogray/repos", "events_url": "https://api.github.com/users/idahogray/events{/privacy}", "received_events_url": "https://api.github.com/users/idahogray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-05T15:01:44Z", "updated_at": "2015-12-06T15:43:36Z", "closed_at": "2015-12-06T15:43:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am working with django-crispy-forms and django-extra-views and I need to modify a form before returning the result using crispy-forms dynamics layouts (http://django-crispy-forms.readthedocs.org/en/latest/dynamic_layouts.html).\n\nWould there be interest in adding this functionality into django-extra-views? I am thinking a method call in ProcessFormWithInlinesView get and post methods.\n\nI wanted to see if there was interest before I starting working on it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/111", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/111/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/111/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/111", "id": 119685649, "node_id": "MDU6SXNzdWUxMTk2ODU2NDk=", "number": 111, "title": "Drop support for Django < 1.8", "user": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-01T10:15:46Z", "updated_at": "2015-12-07T05:45:12Z", "closed_at": "2015-12-07T05:45:12Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Django 1.4 LTS extended support ended October 1 2015. Django 1.7 is supported until end 2015. We can drop anything < 1.8 effective Jan 1 2016.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/107", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/107/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/107/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/107", "id": 102195956, "node_id": "MDU6SXNzdWUxMDIxOTU5NTY=", "number": 107, "title": "Save request.user to an django extra view", "user": {"login": "bobhsr", "id": 1159196, "node_id": "MDQ6VXNlcjExNTkxOTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1159196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobhsr", "html_url": "https://github.com/bobhsr", "followers_url": "https://api.github.com/users/bobhsr/followers", "following_url": "https://api.github.com/users/bobhsr/following{/other_user}", "gists_url": "https://api.github.com/users/bobhsr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobhsr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobhsr/subscriptions", "organizations_url": "https://api.github.com/users/bobhsr/orgs", "repos_url": "https://api.github.com/users/bobhsr/repos", "events_url": "https://api.github.com/users/bobhsr/events{/privacy}", "received_events_url": "https://api.github.com/users/bobhsr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-08-20T17:57:52Z", "updated_at": "2015-12-01T13:45:25Z", "closed_at": "2015-12-01T13:45:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "The example is from Django-Extra-Views. Seems to be working as the example states.\n\nThrows errors if added request.user\n\nhttps://django-extra-views.readthedocs.org/en/latest/views.html\n\n```\nclass OrderCreateView(CreateWithInlinesView):\n    model = Order\n    inlines = [ItemsInline, TagsInline]\n\n    def get_success_url(self):\n        return self.object.get_absolute_url()\n```\n\nThe following have been tried. They do not work.\n\n```\ndef form_valid(self, form):\n    # self.object = form.save()\n    form.instance.owner = self.request.user\n    form.save()\n    return super(OrderCreateView, self).form_valid(form)\n\nthrows error:\n IntegrityError at /add/\n null value in column \"owner_id\" violates not-null constraint\n```\n\nAlso tried adding it form.save\n\n```\ndef save(self,  commit=True):\n    instance = super(OrderCreateView, self).save(commit=False)\n    instance.owner = self.request.user\n    instance.save()\n\n\nthrows \n'OrderForm' object has no attribute 'request'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/101", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/101/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/101/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/101", "id": 84048652, "node_id": "MDU6SXNzdWU4NDA0ODY1Mg==", "number": 101, "title": "RemovedInDjango19Warning: django.utils.unittest will be removed in Django 1.9.", "user": {"login": "riklaunim", "id": 1822699, "node_id": "MDQ6VXNlcjE4MjI2OTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1822699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/riklaunim", "html_url": "https://github.com/riklaunim", "followers_url": "https://api.github.com/users/riklaunim/followers", "following_url": "https://api.github.com/users/riklaunim/following{/other_user}", "gists_url": "https://api.github.com/users/riklaunim/gists{/gist_id}", "starred_url": "https://api.github.com/users/riklaunim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/riklaunim/subscriptions", "organizations_url": "https://api.github.com/users/riklaunim/orgs", "repos_url": "https://api.github.com/users/riklaunim/repos", "events_url": "https://api.github.com/users/riklaunim/events{/privacy}", "received_events_url": "https://api.github.com/users/riklaunim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-06-02T14:29:13Z", "updated_at": "2015-06-15T12:46:44Z", "closed_at": "2015-06-15T12:46:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nRemovedInDjango19Warning: django.utils.unittest will be removed in Django 1.9.\n```\n\nImport needs to be fixed: https://github.com/AndrewIngram/django-extra-views/blob/756fc71491dca74a887811ead4f937fbc1adde94/extra_views/tests/tests.py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/98", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/98/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/98/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/98", "id": 70246966, "node_id": "MDU6SXNzdWU3MDI0Njk2Ng==", "number": 98, "title": "Support \"min_num\" for formset", "user": {"login": "throwable-one", "id": 7673963, "node_id": "MDQ6VXNlcjc2NzM5NjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7673963?v=4", "gravatar_id": "", "url": "https://api.github.com/users/throwable-one", "html_url": "https://github.com/throwable-one", "followers_url": "https://api.github.com/users/throwable-one/followers", "following_url": "https://api.github.com/users/throwable-one/following{/other_user}", "gists_url": "https://api.github.com/users/throwable-one/gists{/gist_id}", "starred_url": "https://api.github.com/users/throwable-one/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/throwable-one/subscriptions", "organizations_url": "https://api.github.com/users/throwable-one/orgs", "repos_url": "https://api.github.com/users/throwable-one/repos", "events_url": "https://api.github.com/users/throwable-one/events{/privacy}", "received_events_url": "https://api.github.com/users/throwable-one/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2", "html_url": "https://github.com/AndrewIngram/django-extra-views/milestone/2", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2/labels", "id": 1447742, "node_id": "MDk6TWlsZXN0b25lMTQ0Nzc0Mg==", "number": 2, "title": "1.0.0", "description": "", "creator": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "open", "created_at": "2015-12-07T14:10:08Z", "updated_at": "2019-12-20T14:50:08Z", "due_on": null, "closed_at": null}, "comments": 2, "created_at": "2015-04-22T22:02:36Z", "updated_at": "2018-11-16T08:41:21Z", "closed_at": "2018-11-16T08:41:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "BaseFormSetMixin has max_num. Cool.\nBut it lacks of min_num.\n\nNow you need to do it manually:\ndef get_factory_kwargs(self):\n        kwargs = super().get_factory_kwargs()\n        kwargs.update({\"min_num\": 1})  \n        return kwargs\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/96", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/96/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/96/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/96", "id": 64799775, "node_id": "MDU6SXNzdWU2NDc5OTc3NQ==", "number": 96, "title": "Find someone to take over ownership of this project", "user": {"login": "AndrewIngram", "id": 35227, "node_id": "MDQ6VXNlcjM1MjI3", "avatar_url": "https://avatars1.githubusercontent.com/u/35227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewIngram", "html_url": "https://github.com/AndrewIngram", "followers_url": "https://api.github.com/users/AndrewIngram/followers", "following_url": "https://api.github.com/users/AndrewIngram/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewIngram/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewIngram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewIngram/subscriptions", "organizations_url": "https://api.github.com/users/AndrewIngram/orgs", "repos_url": "https://api.github.com/users/AndrewIngram/repos", "events_url": "https://api.github.com/users/AndrewIngram/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewIngram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-03-27T16:35:07Z", "updated_at": "2015-12-16T23:09:32Z", "closed_at": "2015-12-01T14:16:13Z", "author_association": "OWNER", "active_lock_reason": null, "body": "As is probably clear from the number of open issues and pull requests, I'm not really paying much attention to this project. The reason is a combination of not really working with formsets (or even Django views) much anymore, and a lack of free time outside of work to commit to the project.\n\nSo I'm looking for someone who is interested in taking over ownership of the project. It could be trialled by me adding the person as a contributor, and letting them look at the open issues and pull requests and getting things down to a reasonable number. Ideally this person would already be a moderately active open source contributor, so that we don't end up back in the current situation but under a different owner.\n\nI expect that once the backlog of issues is cleared, most work will just be related to keeping dependencies updated, and adding compatibility with future Django versions.\n\nAnybody interested?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/95", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/95/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/95/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/95", "id": 60698902, "node_id": "MDU6SXNzdWU2MDY5ODkwMg==", "number": 95, "title": "min_num on InlineFormSetView", "user": {"login": "edwinlunando", "id": 1451080, "node_id": "MDQ6VXNlcjE0NTEwODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1451080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwinlunando", "html_url": "https://github.com/edwinlunando", "followers_url": "https://api.github.com/users/edwinlunando/followers", "following_url": "https://api.github.com/users/edwinlunando/following{/other_user}", "gists_url": "https://api.github.com/users/edwinlunando/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwinlunando/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwinlunando/subscriptions", "organizations_url": "https://api.github.com/users/edwinlunando/orgs", "repos_url": "https://api.github.com/users/edwinlunando/repos", "events_url": "https://api.github.com/users/edwinlunando/events{/privacy}", "received_events_url": "https://api.github.com/users/edwinlunando/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-11T17:47:42Z", "updated_at": "2015-11-30T23:45:17Z", "closed_at": "2015-11-30T23:45:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Nice package. I want to use InlineFormSetView with dynamic min_num parameter on my formsets. How can I achieve that? Thanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/94", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/94/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/94/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/94", "id": 57264754, "node_id": "MDU6SXNzdWU1NzI2NDc1NA==", "number": 94, "title": "Ordering InlineFormSetView's via the queryset", "user": {"login": "aidanlister", "id": 54896, "node_id": "MDQ6VXNlcjU0ODk2", "avatar_url": "https://avatars0.githubusercontent.com/u/54896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidanlister", "html_url": "https://github.com/aidanlister", "followers_url": "https://api.github.com/users/aidanlister/followers", "following_url": "https://api.github.com/users/aidanlister/following{/other_user}", "gists_url": "https://api.github.com/users/aidanlister/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidanlister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidanlister/subscriptions", "organizations_url": "https://api.github.com/users/aidanlister/orgs", "repos_url": "https://api.github.com/users/aidanlister/repos", "events_url": "https://api.github.com/users/aidanlister/events{/privacy}", "received_events_url": "https://api.github.com/users/aidanlister/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-11T01:26:52Z", "updated_at": "2015-03-28T20:14:41Z", "closed_at": "2015-03-28T01:29:57Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to do something like this:\n\n``` python\nclass ServiceContractInlineUpdateView(InlineFormSetView):\n    model = Property\n    inline_model = ServiceContract\n    form_class = ServiceContractInlineForm\n\n    def get_queryset(self):\n        qs = super(ServiceContractInlineUpdateView, self).get_queryset()\n        return qs.order_by('service__name')\n```\n\nBut it doesn't seem to work. get_queryset is called by the ordering of the forms is not affected.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/92", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/92/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/92/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/92", "id": 51939634, "node_id": "MDU6SXNzdWU1MTkzOTYzNA==", "number": 92, "title": "Redirect to model's get_absolute_url in ModelFormSetMixin get_success_url", "user": {"login": "palmeida", "id": 1022116, "node_id": "MDQ6VXNlcjEwMjIxMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1022116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palmeida", "html_url": "https://github.com/palmeida", "followers_url": "https://api.github.com/users/palmeida/followers", "following_url": "https://api.github.com/users/palmeida/following{/other_user}", "gists_url": "https://api.github.com/users/palmeida/gists{/gist_id}", "starred_url": "https://api.github.com/users/palmeida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palmeida/subscriptions", "organizations_url": "https://api.github.com/users/palmeida/orgs", "repos_url": "https://api.github.com/users/palmeida/repos", "events_url": "https://api.github.com/users/palmeida/events{/privacy}", "received_events_url": "https://api.github.com/users/palmeida/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2", "html_url": "https://github.com/AndrewIngram/django-extra-views/milestone/2", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2/labels", "id": 1447742, "node_id": "MDk6TWlsZXN0b25lMTQ0Nzc0Mg==", "number": 2, "title": "1.0.0", "description": "", "creator": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "open", "created_at": "2015-12-07T14:10:08Z", "updated_at": "2019-12-20T14:50:08Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2014-12-15T01:08:47Z", "updated_at": "2018-11-18T08:10:48Z", "closed_at": "2018-11-18T08:10:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think it would be nice to mimic Django's UpdateView and CreateView behavior of redirecting to the model's get_absolute_url in get_success_url. ModelFormSetMixin uses FormSetMixin's behavior of redirecting to success_url, if it's set, and if not to self.request.get_full_path(). It's not \"wrong\", and it's easy to bypass, either by providing get_success_url or redirecting manually, but it surprised me and forces me to do it differently from the other views. This is how Django does it in ModelFormMixin:\n\n``` python\n def get_success_url(self):\n    \"\"\"\n    Returns the supplied URL.\n    \"\"\"\n    if self.success_url:\n        url = self.success_url % self.object.__dict__\n    else:\n        try:\n            url = self.object.get_absolute_url()\n        except AttributeError:\n            raise ImproperlyConfigured(\n                \"No URL to redirect to.  Either provide a url or define\"\n                \" a get_absolute_url method on the Model.\")\n    return url\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/91", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/91/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/91/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/91", "id": 46261222, "node_id": "MDU6SXNzdWU0NjI2MTIyMg==", "number": 91, "title": "extra_views/multi.py separately validate forms", "user": {"login": "timur-orudzhov", "id": 3646772, "node_id": "MDQ6VXNlcjM2NDY3NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/3646772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timur-orudzhov", "html_url": "https://github.com/timur-orudzhov", "followers_url": "https://api.github.com/users/timur-orudzhov/followers", "following_url": "https://api.github.com/users/timur-orudzhov/following{/other_user}", "gists_url": "https://api.github.com/users/timur-orudzhov/gists{/gist_id}", "starred_url": "https://api.github.com/users/timur-orudzhov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timur-orudzhov/subscriptions", "organizations_url": "https://api.github.com/users/timur-orudzhov/orgs", "repos_url": "https://api.github.com/users/timur-orudzhov/repos", "events_url": "https://api.github.com/users/timur-orudzhov/events{/privacy}", "received_events_url": "https://api.github.com/users/timur-orudzhov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-20T11:34:12Z", "updated_at": "2016-07-26T02:03:02Z", "closed_at": "2014-10-24T08:34:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "My case: I have several form on a view and i want validate only currently submitted form. How can i achieve this ? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/89", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/89/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/89/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/89", "id": 41965607, "node_id": "MDU6SXNzdWU0MTk2NTYwNw==", "number": 89, "title": "six upgrade to 1.7.x", "user": {"login": "cdchen", "id": 427313, "node_id": "MDQ6VXNlcjQyNzMxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/427313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdchen", "html_url": "https://github.com/cdchen", "followers_url": "https://api.github.com/users/cdchen/followers", "following_url": "https://api.github.com/users/cdchen/following{/other_user}", "gists_url": "https://api.github.com/users/cdchen/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdchen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdchen/subscriptions", "organizations_url": "https://api.github.com/users/cdchen/orgs", "repos_url": "https://api.github.com/users/cdchen/repos", "events_url": "https://api.github.com/users/cdchen/events{/privacy}", "received_events_url": "https://api.github.com/users/cdchen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-04T17:55:36Z", "updated_at": "2015-06-04T11:13:47Z", "closed_at": "2015-06-04T11:13:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you upgrade six to 1.7.x?? Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/88", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/88/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/88/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/88", "id": 41223895, "node_id": "MDU6SXNzdWU0MTIyMzg5NQ==", "number": 88, "title": "SearchableListMixin functionality could be moved to managers/querysets?", "user": {"login": "jleeothon", "id": 6202537, "node_id": "MDQ6VXNlcjYyMDI1Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6202537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleeothon", "html_url": "https://github.com/jleeothon", "followers_url": "https://api.github.com/users/jleeothon/followers", "following_url": "https://api.github.com/users/jleeothon/following{/other_user}", "gists_url": "https://api.github.com/users/jleeothon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleeothon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleeothon/subscriptions", "organizations_url": "https://api.github.com/users/jleeothon/orgs", "repos_url": "https://api.github.com/users/jleeothon/repos", "events_url": "https://api.github.com/users/jleeothon/events{/privacy}", "received_events_url": "https://api.github.com/users/jleeothon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-26T21:22:24Z", "updated_at": "2018-10-31T08:27:03Z", "closed_at": "2018-10-31T08:27:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "How about the searching funcionality of SearchableListMixin be moved in a way that we can also include it in custom manager or queryset? I'm wondering how difficult that could be.\n\nThe view's `get_queryset` could do something like:\n\n``` Python\ndef get_queryset(self):\n    if hasattr(self.model.objects, 'search'):\n        return self.model.objects.search(q=self.get_search_query())\n        # another possibility\n        # return self.model.objects.search(*self.get_search_query())\n    else:\n        # do the former behaviour\n```\n\nSome advantages I see:\n- Searches can be easily manual-tested outside a view, e.g. from the Django shell.\n- You can reuse the search logic in other kinds of views.\n- Would be following a fat-models-lean-controllers pattern (not really an advantage, but a consequence).\n\nDifficulties:\n- How to make the same behaviour available for two things as different as a view and a manager?\n- This logic should be probably moved to another project for further reusability and we add a dependency (may be disadvantageous?).\n\nWould like to hear you guys' thoughts :smiley:\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/87", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/87/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/87/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/87", "id": 41040154, "node_id": "MDU6SXNzdWU0MTA0MDE1NA==", "number": 87, "title": "InlineFormSet -  Foreign Key -  Exclude", "user": {"login": "osygeek", "id": 8542942, "node_id": "MDQ6VXNlcjg1NDI5NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8542942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osygeek", "html_url": "https://github.com/osygeek", "followers_url": "https://api.github.com/users/osygeek/followers", "following_url": "https://api.github.com/users/osygeek/following{/other_user}", "gists_url": "https://api.github.com/users/osygeek/gists{/gist_id}", "starred_url": "https://api.github.com/users/osygeek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osygeek/subscriptions", "organizations_url": "https://api.github.com/users/osygeek/orgs", "repos_url": "https://api.github.com/users/osygeek/repos", "events_url": "https://api.github.com/users/osygeek/events{/privacy}", "received_events_url": "https://api.github.com/users/osygeek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-08-25T07:55:10Z", "updated_at": "2015-12-01T14:45:37Z", "closed_at": "2015-12-01T14:45:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm working on CreateWithInlinesView, and I need to exclude/hide the foreign key attribute  common between my model and inline_model form. I'm stuck with it, no proper solution still able to find. Here is the Code:\n\nclass AuthInline(InlineFormSet):\n    model = Authentication\n    extra = 3\n    can_delete = False\n    max_num = 3\n    fk_name = ('i_client')\n    exclude = ('i_client')\n\nclass ClientTariffBetterCreateView(CreateWithInlinesView):  \n    model = ClientTariff\n    inlines = [AuthInline]\n    template_name = 'tariffs/client_tariff_create.html'\n    success_url = '../'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/86", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/86/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/86/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/86", "id": 40832146, "node_id": "MDU6SXNzdWU0MDgzMjE0Ng==", "number": 86, "title": "Six compatibility version", "user": {"login": "pjrobertson", "id": 150431, "node_id": "MDQ6VXNlcjE1MDQzMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/150431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjrobertson", "html_url": "https://github.com/pjrobertson", "followers_url": "https://api.github.com/users/pjrobertson/followers", "following_url": "https://api.github.com/users/pjrobertson/following{/other_user}", "gists_url": "https://api.github.com/users/pjrobertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjrobertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjrobertson/subscriptions", "organizations_url": "https://api.github.com/users/pjrobertson/orgs", "repos_url": "https://api.github.com/users/pjrobertson/repos", "events_url": "https://api.github.com/users/pjrobertson/events{/privacy}", "received_events_url": "https://api.github.com/users/pjrobertson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-21T18:12:35Z", "updated_at": "2015-06-04T11:13:47Z", "closed_at": "2015-06-04T11:13:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The requirements.txt specify `six==1.5.2`\n\nIs there a reason this isn't `six>=1.5.2`?\n\nThe current version of six is 1.7.3 so this seems a little outdated :/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/84", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/84/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/84/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/84", "id": 38543360, "node_id": "MDU6SXNzdWUzODU0MzM2MA==", "number": 84, "title": "When will 0.6.5 be released?", "user": {"login": "screendriver", "id": 149248, "node_id": "MDQ6VXNlcjE0OTI0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/149248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/screendriver", "html_url": "https://github.com/screendriver", "followers_url": "https://api.github.com/users/screendriver/followers", "following_url": "https://api.github.com/users/screendriver/following{/other_user}", "gists_url": "https://api.github.com/users/screendriver/gists{/gist_id}", "starred_url": "https://api.github.com/users/screendriver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/screendriver/subscriptions", "organizations_url": "https://api.github.com/users/screendriver/orgs", "repos_url": "https://api.github.com/users/screendriver/repos", "events_url": "https://api.github.com/users/screendriver/events{/privacy}", "received_events_url": "https://api.github.com/users/screendriver/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-23T15:57:14Z", "updated_at": "2014-08-11T12:33:04Z", "closed_at": "2014-08-11T12:33:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the moment I can't use 0.6.4 because of issue #60. Since we / I don't want to / can't reference unstable dependencies I would like to ask when 0.6.5 will be released?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/83", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/83/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/83/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/83", "id": 38410613, "node_id": "MDU6SXNzdWUzODQxMDYxMw==", "number": 83, "title": "ModelFormSetView does not support 1.6 kwargs", "user": {"login": "screendriver", "id": 149248, "node_id": "MDQ6VXNlcjE0OTI0OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/149248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/screendriver", "html_url": "https://github.com/screendriver", "followers_url": "https://api.github.com/users/screendriver/followers", "following_url": "https://api.github.com/users/screendriver/following{/other_user}", "gists_url": "https://api.github.com/users/screendriver/gists{/gist_id}", "starred_url": "https://api.github.com/users/screendriver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/screendriver/subscriptions", "organizations_url": "https://api.github.com/users/screendriver/orgs", "repos_url": "https://api.github.com/users/screendriver/repos", "events_url": "https://api.github.com/users/screendriver/events{/privacy}", "received_events_url": "https://api.github.com/users/screendriver/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2", "html_url": "https://github.com/AndrewIngram/django-extra-views/milestone/2", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2/labels", "id": 1447742, "node_id": "MDk6TWlsZXN0b25lMTQ0Nzc0Mg==", "number": 2, "title": "1.0.0", "description": "", "creator": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "open", "created_at": "2015-12-07T14:10:08Z", "updated_at": "2019-12-20T14:50:08Z", "due_on": null, "closed_at": null}, "comments": 1, "created_at": "2014-07-22T15:20:16Z", "updated_at": "2018-08-29T15:26:03Z", "closed_at": "2018-08-29T15:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Django 1.6 they [introduced](https://docs.djangoproject.com/en/1.6/topics/forms/modelforms/#specifying-widgets-to-use-in-the-form-with-widgets) new kwargs that can be passed to modelformset_factory(). Like _widgets_ und _localized_fields_.\nWould it be possible to add this fields to the ModelFormSetView class? At the moment I am not experienced enough in Django / django-extra-views to make a pull request :worried:\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/79", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/79/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/79/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/79", "id": 35506532, "node_id": "MDU6SXNzdWUzNTUwNjUzMg==", "number": 79, "title": "KeyError with get_initial on UpdateWithInlinesView inline", "user": {"login": "xrmx", "id": 12932, "node_id": "MDQ6VXNlcjEyOTMy", "avatar_url": "https://avatars1.githubusercontent.com/u/12932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xrmx", "html_url": "https://github.com/xrmx", "followers_url": "https://api.github.com/users/xrmx/followers", "following_url": "https://api.github.com/users/xrmx/following{/other_user}", "gists_url": "https://api.github.com/users/xrmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/xrmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xrmx/subscriptions", "organizations_url": "https://api.github.com/users/xrmx/orgs", "repos_url": "https://api.github.com/users/xrmx/repos", "events_url": "https://api.github.com/users/xrmx/events{/privacy}", "received_events_url": "https://api.github.com/users/xrmx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296457018, "node_id": "MDU6TGFiZWwyOTY0NTcwMTg=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Documentation", "name": "Documentation", "color": "fbca04", "default": false, "description": null}, {"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}, {"id": 296456975, "node_id": "MDU6TGFiZWwyOTY0NTY5NzU=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Works%20for%20me", "name": "Works for me", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-06-11T17:26:45Z", "updated_at": "2018-11-14T09:54:57Z", "closed_at": "2018-11-14T09:54:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This fails on GET with key 0 because self.initial_extra is empty, removing the get_initial fixes the issue:\n\n```\nFile \"/venv/local/lib/python2.7/site-packages/bootstrap3/renderers.py\" in render_forms\n  73.         for form in self.formset.forms:\nFile \"/venv/local/lib/python2.7/site-packages/django/utils/functional.py\" in __get__\n  49.         res = instance.__dict__[self.func.__name__] = self.func(instance)\nFile \"/venv/local/lib/python2.7/site-packages/django/forms/formsets.py\" in forms\n  133.         forms = [self._construct_form(i) for i in xrange(self.total_form_count())]\nFile \"/venv/local/lib/python2.7/site-packages/django/forms/models.py\" in _construct_form\n  848.         form = super(BaseInlineFormSet, self)._construct_form(i, **kwargs)\nFile \"/venv/local/lib/python2.7/site-packages/django/forms/models.py\" in _construct_form\n  576.                 kwargs['initial'] = self.initial_extra[i-self.initial_form_count()]\n```\n\nviews.py\n\n```\nfrom extra_views import InlineFormSet, UpdateWithInlinesView\nfrom .models import CommentoLavorazione, Lavorazione\n\nclass CommentoLavorazioneInline(InlineFormSet):\n    model = CommentoLavorazione\n    extra = 1\n\n    def get_initial(self, **kwargs):\n        return {'creato_da': self.request.user}\n\nclass LavorazioneUpdateView(UpdateWithInlinesView):\n    model = Lavorazione\n    inlines = [CommentoLavorazioneInline]\n```\n\ntemplates:\n\n```\n{% for inline_form in inlines %}\n{{ inline_form.as_p }}\n{% comment %}\n{% bootstrap_formset inline_form layout=\"tabular\" %}\n{% endcomment %}\n{% endfor %}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/73", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/73/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/73/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/73", "id": 32474207, "node_id": "MDU6SXNzdWUzMjQ3NDIwNw==", "number": 73, "title": "docs for the mixins in the main sphinx docs", "user": {"login": "henning", "id": 40272, "node_id": "MDQ6VXNlcjQwMjcy", "avatar_url": "https://avatars3.githubusercontent.com/u/40272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henning", "html_url": "https://github.com/henning", "followers_url": "https://api.github.com/users/henning/followers", "following_url": "https://api.github.com/users/henning/following{/other_user}", "gists_url": "https://api.github.com/users/henning/gists{/gist_id}", "starred_url": "https://api.github.com/users/henning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henning/subscriptions", "organizations_url": "https://api.github.com/users/henning/orgs", "repos_url": "https://api.github.com/users/henning/repos", "events_url": "https://api.github.com/users/henning/events{/privacy}", "received_events_url": "https://api.github.com/users/henning/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 296457018, "node_id": "MDU6TGFiZWwyOTY0NTcwMTg=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Documentation", "name": "Documentation", "color": "fbca04", "default": false, "description": null}, {"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-29T18:53:33Z", "updated_at": "2018-11-14T09:54:43Z", "closed_at": "2018-11-14T09:54:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was just looking for the searchable list mixin docs, but was surprised not even find that listet on the read the docs page - so I first thought it was pretty outdated as the date says also 2013 as the year, but it seems there just is not doc of the mixins in the sphinx docs, only a bit in the readme... maybe at least that bit should be mentioned, so people looking into the docs at least are informed that the mixins _exist_ :)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/72", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/72/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/72/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/72", "id": 31671280, "node_id": "MDU6SXNzdWUzMTY3MTI4MA==", "number": 72, "title": "Python 3 Syntax error on install", "user": {"login": "troygrosfield", "id": 1551551, "node_id": "MDQ6VXNlcjE1NTE1NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1551551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troygrosfield", "html_url": "https://github.com/troygrosfield", "followers_url": "https://api.github.com/users/troygrosfield/followers", "following_url": "https://api.github.com/users/troygrosfield/following{/other_user}", "gists_url": "https://api.github.com/users/troygrosfield/gists{/gist_id}", "starred_url": "https://api.github.com/users/troygrosfield/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troygrosfield/subscriptions", "organizations_url": "https://api.github.com/users/troygrosfield/orgs", "repos_url": "https://api.github.com/users/troygrosfield/repos", "events_url": "https://api.github.com/users/troygrosfield/events{/privacy}", "received_events_url": "https://api.github.com/users/troygrosfield/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-16T19:22:42Z", "updated_at": "2014-04-17T12:18:01Z", "closed_at": "2014-04-17T08:57:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When installing using django 1.6.2 and python 3.3.5:\n\n```\n$ pip install django-extra-views\nDownloading/unpacking django-extra-views\n  Downloading django-extra-views-0.6.4.tar.gz\n  Running setup.py (path:/py33_django16/build/django-extra-views/setup.py) egg_info for package django-extra-views\n\nRequirement already satisfied (use --upgrade to upgrade): Django>=1.3 in /py33_django16/lib/python3.3/site-packages (from django-extra-views)\nInstalling collected packages: django-extra-views\n  Running setup.py install for django-extra-views\n\n      File \"/py33_django16/lib/python3.3/site-packages/extra_views/multi.py\", line 35\n        except ValidationError, e:\n                              ^\n    SyntaxError: invalid syntax\n\nSuccessfully installed django-extra-views\nCleaning up...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/71", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/71/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/71/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/71", "id": 31665128, "node_id": "MDU6SXNzdWUzMTY2NTEyOA==", "number": 71, "title": "CreateWithInlinesView doesn't save", "user": {"login": "heliogutierrez", "id": 5084298, "node_id": "MDQ6VXNlcjUwODQyOTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5084298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heliogutierrez", "html_url": "https://github.com/heliogutierrez", "followers_url": "https://api.github.com/users/heliogutierrez/followers", "following_url": "https://api.github.com/users/heliogutierrez/following{/other_user}", "gists_url": "https://api.github.com/users/heliogutierrez/gists{/gist_id}", "starred_url": "https://api.github.com/users/heliogutierrez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heliogutierrez/subscriptions", "organizations_url": "https://api.github.com/users/heliogutierrez/orgs", "repos_url": "https://api.github.com/users/heliogutierrez/repos", "events_url": "https://api.github.com/users/heliogutierrez/events{/privacy}", "received_events_url": "https://api.github.com/users/heliogutierrez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-16T18:07:50Z", "updated_at": "2015-11-30T23:47:37Z", "closed_at": "2015-11-30T23:47:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIm doing a proyect with a master-detail form using CreateWithInlinesView for this functionallity,\n\nbut it doesn't save, simply the page is reloaded but with the same data in screen, and doesnt commit the transaction. \n\nWhen the save button is clicked, nothings happen... any error, any message\n\nSome help will be apreciate please!\n\n**_Models.py**_\n\n```\nclass Rekuest(AuditTable):\n    TYPEOWNER_CHOICES = (\n        ('Empresarial', _(u'Enterprise')),\n        ('Particular', _(u'Private'))        \n    )\n\n    code                = models.CharField(max_length=50, editable=False)\n    bpartner            = models.ForeignKey(BPartner, verbose_name=_(u'Client'))    \n    policy_type         = models.ForeignKey(PolicyType)\n    type_owner          = models.CharField(_(u'Type Owner'), max_length=15, choices = TYPEOWNER_CHOICES)\n    concept             = models.CharField(_(u'Concept'), max_length=60, blank='True')\n    orderdate           = models.DateField(_(u'Order Date'))\n    status              = models.ForeignKey(Status)\n    requestedddate      = models.DateTimeField(_(u'Requested Date'), null=True, blank=True)\n    finisheddate        = models.DateTimeField(_(u'Finished Date'), null=True, blank=True)    \n    promise_date        = models.DateField(_(u'Promise Date'))    \n    email               = models.EmailField(_(u'Email'),null=True,blank=True)\n    is_active           = models.BooleanField(_(u'Active'), default=True)\n\n\n    def get_next_code(self):\n        # Autocalculate next Request code\n        if not self.code and self.id:\n            num = 1\n            try:\n                lastcode = Rekuest.objects.exclude(pk=self.id).order_by('-id')[0].code\n                parts = lastcode.split('-')\n                num = int(parts[1]) + 1\n            except:\n                pass\n\n            return '%d-%03d' % (self.date.year, num)\n        else:\n            return self.code\n\n\n    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):\n        self.code = self.get_next_code()\n        return AuditTable.save(self, force_insert=force_insert, force_update=force_update, using=using, update_fields=update_fields)\n\n    def __unicode__(self):\n        return \"[\" + str(self.id) + \"][\" + str(self.orderdate) + \"] \" + self.bpartner.commercial_name\n\n    class Meta:\n        verbose_name = _('Request')\n        verbose_name_plural = _('Requests')\n\n\nclass RekuestDet(AuditTable):\n    CURRENCY_CHOICES = (\n        ('MXN', _(u'MXN')),\n        ('USD', _(u'USD'))        \n    )\n\n    numrequest          = models.ForeignKey(Rekuest, db_column='Rekuest_id')\n    bpartner_vendor     = models.ForeignKey(BPartner, verbose_name=_(u'Insurance'))\n    currency            = models.CharField(_(u'Currency'), max_length=15, choices = CURRENCY_CHOICES, default='MXN')\n    deductible          = models.DecimalField(_(u'Deductible'), default=0,max_digits=15,decimal_places=2)    \n    contact_name        = models.CharField(_(u'Contact Name'),max_length=60)\n    phone1              = models.CharField(_(u'Phone'),max_length=60,blank='True')\n    paymentterm         = models.ForeignKey(PaymentTerm, null='True')\n    description         = models.TextField(_(u'Description'),max_length=200,null='True',blank='True')\n    num_cotization      = models.TextField(_(u'Cotization No.'),max_length=20,null='True',blank='True')\n    priority            = models.SmallIntegerField(_(u'Priority'),default=0,max_length=2)\n    price               = models.DecimalField(_(u'Price'),default=0,max_digits=15,decimal_places=2)\n    tax                 = models.DecimalField(_(u'Price'),default=0,max_digits=15,decimal_places=2)\n    charges             = models.DecimalField(_(u'Price'),default=0,max_digits=15,decimal_places=2)\n    others_charges      = models.DecimalField(_(u'Price'),default=0,max_digits=15,decimal_places=2)\n    total               = models.DecimalField(_(u'Price'),default=0,max_digits=15,decimal_places=2)\n\n    def get_absolute_url(self):\n        return None\n\n    def save(self, force_insert=False, force_update=False, using=None, update_fields=None):\n        #self.calculate()\n        return AuditTable.save(self, force_insert=force_insert, force_update=force_update, using=using, update_fields=update_fields)\n\n    class Meta:\n        verbose_name = _('Request Detail')\n        verbose_name_plural = _('Request Detail')\n```\n\n**_Forms.py**_\n\n```\nclass RekuestForm(forms.ModelForm):\n\n    orderdate = forms.DateField(widget=AdminDateWidget, initial=datetime.date.today, label=_(u'Date'))    \n    promise_date = forms.DateField(label=_('Promised Date'), initial=datetime.date.today, required=False)\n\n    class Meta:\n        model = Rekuest\n        #exclude = ('company',)\n\n\nclass RekuestDetForm(forms.ModelForm):\n\n    price = forms.DecimalField(localize=True, decimal_places=2)\n    quantity = forms.IntegerField(localize=True)\n\n    class Meta:\n        model = RekuestDet\n\n\nclass RekuestDetInline(InlineFormSet):\n    model = RekuestDet\n    extra = 1  #extra = Numero de renglones del detalle que mostrara al crear un registro del Master  \n    form_class = RekuestDetForm    \n```\n\n**_Views.py**_\n\n```\nclass RekuestCreateView(NamedFormsetsMixin, CreateWithInlinesView):\n    model = Rekuest\n    form_class = RekuestForm\n    template_name = \"op/request_form.html\"\n\n\n    inlines = [RekuestDetInline]\n    inlines_names = ['RekuestDetInline']\n\n    def get_context_data(self, **kwargs):\n        ctx = super(RekuestCreateView, self).get_context_data(**kwargs)\n        ctx['title'] = _(\"Create new Request\")\n        return ctx\n\n    def get_form(self, form_class): \n        form = CreateWithInlinesView.get_form(self, form_class)\n        #Filtra los Socios de Negocio por tipo=Cliente        \n        form.fields['bpartner'].queryset = BPartner.objects.filter(iscustomer='True')\n        return form\n\n    def construct_inlines(self):\n        #Filtra el socio de negocio del detalle por tipo=Proveedor (Aseguradora)\n        inlines = CreateWithInlinesView.construct_inlines(self)\n        RekuestDetInline = inlines[0]                        \n        RekuestDetInline.form.base_fields['bpartner_vendor'].queryset = BPartner.objects.filter(isvendor=True)                    \n        return inlines\n\n    def forms_invalid(self, form, inlines):\n        messages.error(\n            self.request,\n            \"Your submitted data was not valid - please correct the below errors\")\n        return super(RekuestCreateView, self).forms_invalid(form, inlines)\n\n    def forms_valid(self, form, inlines):\n        # Default company\n        #self.object.company = self.request.user.company\n\n        # Save object to recalculate totals\n        out = CreateWithInlinesView.forms_valid(self, form, inlines)\n        self.object.save()\n        messages.success(self.request, \"Request %s saved.\" % (self.object.code,))\n        return out\n```\n\n**_request_form.html**_\n\n```\n<form action=\".\" method=\"post\" id=\"request_form\" class=\"form-horizontal wysiwyg\" enctype=\"multipart/form-data\">\n    {% csrf_token %}\n\n    <fieldset>\n        <div class=\"well\">\n            <legend>\n                Nueva Solicitud\n            </legend>               \n        </div>\n\n        <table border=\"0\" cellspacing=\"5\" cellpadding=\"5\">\n            <tr>\n                <td>{% trans 'Code' %}</td><td><span id=\"code\" class=\"uneditable-input\">{{object.code|default:''}}</span></td>\n                <td>{{form.orderdate.label}}</td><td>{{form.orderdate}}</td>\n            </tr>\n            <tr>\n                <td>{{form.bpartner.label}}</td><td>{{form.bpartner}}</td>\n                <td>{{form.type_owner.label}}</td><td>{{form.type_owner}}</td>\n                <td>{{form.policy_type.label}}</td><td>{{form.policy_type}}</td>\n            </tr>\n            <tr>\n                <td>{{form.concept.label}}</td><td>{{form.concept}}</td>\n                <td>{{form.promise_date.label}}</td><td>{{form.promise_date}}</td>\n                <td>{{form.status.label}}</td><td>{{form.status}}</td>\n            </tr>            \n        </table>\n        <br/>\n\n        <fieldset class=\"module aligned \">\n        <table class=\"table\">\n             <tr>\n                <th>{% trans 'Insurance' %}</th>\n                <th>{% trans 'Agent' %}</th>\n                <th>{% trans 'Currency' %}</th>\n                <th>{% trans 'Payment Term' %}</th>\n                <th>{% trans 'Deductible' %}</th>\n                <th>{% trans 'Delete' %}</th>                \n             </tr>\n             {{ RekuestDetInline.management_form }}\n             {% for f in RekuestDetInline %}\n                  <tr class=\"RekuestDetInline\" id=\"id_{{ RekuestDetInline.prefix }}-{{forloop.counter0}}\">\n                      <td>{{f.id}}                            \n                          {{f.bpartner_vendor.errors.as_ul}}{{f.bpartner_vendor}}</td>\n                      <td>{{f.contact_name.errors.as_ul}}{{f.contact_name|add_class:\"input-small\"}}</td>\n                      <td>{{f.currency.errors.as_ul}}{{f.currency|add_class:\"input-small\"}}</td>\n                      <td>{{f.paymentterm.errors.as_ul}}{{f.paymentterm}}</td>\n\n                      <td class=\"numberfield field-base\"><span>{{f.deductible}}</span></td>\n                      <td>{{f.DELETE}}</td>\n                  </tr>\n             {% endfor %}\n        </table>\n        </fieldset>\n\n    </fieldset>\n    <button class=\"btn btn-primary btn-large\" type=\"submit\">{% trans \"Save\" %}</button>\n\n</form>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/70", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/70/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/70/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/70", "id": 31651321, "node_id": "MDU6SXNzdWUzMTY1MTMyMQ==", "number": 70, "title": "six is missing from install_requires in setup.py", "user": {"login": "avoine", "id": 192043, "node_id": "MDQ6VXNlcjE5MjA0Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/192043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avoine", "html_url": "https://github.com/avoine", "followers_url": "https://api.github.com/users/avoine/followers", "following_url": "https://api.github.com/users/avoine/following{/other_user}", "gists_url": "https://api.github.com/users/avoine/gists{/gist_id}", "starred_url": "https://api.github.com/users/avoine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avoine/subscriptions", "organizations_url": "https://api.github.com/users/avoine/orgs", "repos_url": "https://api.github.com/users/avoine/repos", "events_url": "https://api.github.com/users/avoine/events{/privacy}", "received_events_url": "https://api.github.com/users/avoine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-04-16T15:22:29Z", "updated_at": "2015-06-04T11:14:58Z", "closed_at": "2015-06-04T11:14:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is in your requirements.txt (six==1.5.2) but not in setup.py\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/69", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/69/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/69/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/69", "id": 30816209, "node_id": "MDU6SXNzdWUzMDgxNjIwOQ==", "number": 69, "title": "type object 'FooForm' has no attribute 'get_context_suffix'", "user": {"login": "luzfcb", "id": 807599, "node_id": "MDQ6VXNlcjgwNzU5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/807599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luzfcb", "html_url": "https://github.com/luzfcb", "followers_url": "https://api.github.com/users/luzfcb/followers", "following_url": "https://api.github.com/users/luzfcb/following{/other_user}", "gists_url": "https://api.github.com/users/luzfcb/gists{/gist_id}", "starred_url": "https://api.github.com/users/luzfcb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luzfcb/subscriptions", "organizations_url": "https://api.github.com/users/luzfcb/orgs", "repos_url": "https://api.github.com/users/luzfcb/repos", "events_url": "https://api.github.com/users/luzfcb/events{/privacy}", "received_events_url": "https://api.github.com/users/luzfcb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-03T21:37:09Z", "updated_at": "2015-12-01T14:40:34Z", "closed_at": "2015-12-01T14:40:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was trying to use the non-documented \"extra_views/multi.py\" module, and came across this error.\n\n``` python\nAttributeError at /\ntype object 'UserForm' has no attribute 'get_context_suffix'\nRequest Method: GET\nRequest URL:    http://127.0.0.1:8000/\nDjango Version: 1.6.2\nException Type: AttributeError\nException Value:    \ntype object 'UserForm' has no attribute 'get_context_suffix'\nException Location: /home/sutransdev/1envs_virtualenv/sisposto/local/lib/python2.7/site-packages/extra_views/multi.py in construct_forms, line 92\nPython Executable:  /home/sutransdev/1envs_virtualenv/sisposto/bin/python2.7\nPython Version: 2.7.5\nPython Path:    \n['/home/sutransdev/projetos/posto/sisposto/sisposto',\n '/home/sutransdev/projetos/posto/sisposto',\n '/home/sutransdev/projetos/posto/sisposto/sisposto',\n '/home/sutransdev/1envs_virtualenv/sisposto/lib/python2.7',\n '/home/sutransdev/1envs_virtualenv/sisposto/lib/python2.7/plat-x86_64-linux-gnu',\n '/home/sutransdev/1envs_virtualenv/sisposto/lib/python2.7/lib-tk',\n '/home/sutransdev/1envs_virtualenv/sisposto/lib/python2.7/lib-old',\n '/home/sutransdev/1envs_virtualenv/sisposto/lib/python2.7/lib-dynload',\n '/usr/lib/python2.7',\n '/usr/lib/python2.7/plat-x86_64-linux-gnu',\n '/usr/lib/python2.7/lib-tk',\n '/home/sutransdev/1envs_virtualenv/sisposto/local/lib/python2.7/site-packages']\nServer time:    Qui, 3 Abr 2014 18:33:20 -0300\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/68", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/68/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/68/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/68", "id": 30755023, "node_id": "MDU6SXNzdWUzMDc1NTAyMw==", "number": 68, "title": "passing initial data to a formset, doesn't show data_changed as true / does not save data", "user": {"login": "colinkingswood", "id": 2346088, "node_id": "MDQ6VXNlcjIzNDYwODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2346088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colinkingswood", "html_url": "https://github.com/colinkingswood", "followers_url": "https://api.github.com/users/colinkingswood/followers", "following_url": "https://api.github.com/users/colinkingswood/following{/other_user}", "gists_url": "https://api.github.com/users/colinkingswood/gists{/gist_id}", "starred_url": "https://api.github.com/users/colinkingswood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colinkingswood/subscriptions", "organizations_url": "https://api.github.com/users/colinkingswood/orgs", "repos_url": "https://api.github.com/users/colinkingswood/repos", "events_url": "https://api.github.com/users/colinkingswood/events{/privacy}", "received_events_url": "https://api.github.com/users/colinkingswood/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2", "html_url": "https://github.com/AndrewIngram/django-extra-views/milestone/2", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2/labels", "id": 1447742, "node_id": "MDk6TWlsZXN0b25lMTQ0Nzc0Mg==", "number": 2, "title": "1.0.0", "description": "", "creator": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "open", "created_at": "2015-12-07T14:10:08Z", "updated_at": "2019-12-20T14:50:08Z", "due_on": null, "closed_at": null}, "comments": 8, "created_at": "2014-04-03T08:22:15Z", "updated_at": "2018-11-16T16:43:12Z", "closed_at": "2018-11-16T16:43:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if this is a deeper problem with Django ModelForms, or just this package. \n\nIf I have a ModelFormSetView, to add Persons objects to a Trip object. I want to add some initial data to the forms, default names for each person, \"Person 1\", \"Person 2\" etc. \n\n```\nclass AddPersonsFormSetView(ModelFormSetView):\n    model = Person\n    template_name = 'AddPersons.html'\n    extra = 1\n    success_url = '/trip/%s/expense/add/'\n\n     def get_formset_kwargs(self):\n         kwargs = super(AddPersonsFormSetView, self).get_formset_kwargs()\n         num_persons = self.kwargs['num_persons']\n\n         ## inital data will give the name Person <increment> \n         initial = [ \n             { 'name' : \"Person %s\" % i , 'trip' : self.kwargs['trip_id'] }  for i in range( 1, int(num_persons)+ 1)\n         ]\n\n         kwargs.update({'initial': initial })\n         return kwargs\n```\n\nNow if I change the values in the form, it saves correctly. If I leave the default values as they are,  the PersonForm generated by the factory does not see the data_changed() as True, so doesn't save anything. \n\nI can work around this by creating the form, overriding the has_changed  method, and specifying it in the get_factory_kwargs() method of the AddPersonFormSetView but this isn't an obvious solution until you step through the code.  It doesn't not feel seem correct behaviour to ignore default values. \n\n```\nclass PersonForm(ModelForm):\n    class Meta:\n        model=Person   \n\n    def has_changed(self):\n        \"\"\"\n        Overriding this, as the initial data passed to the form does not get noticed, \n        and so does not get saved, unless it actually changes\n        \"\"\"\n        changed_data = super(ModelForm, self).has_changed()\n        return bool(self.initial or changed_data)\n\n\n\nclass AddPersonsFormSetView(ModelFormSetView):\n    ... \n    ... \n    def get_factory_kwargs(self):\n        kwargs = super(AddPersonsFormSetView, self).get_factory_kwargs()\n        kwargs['form'] = PersonForm\n        return kwargs\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/66", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/66/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/66/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/66", "id": 30624994, "node_id": "MDU6SXNzdWUzMDYyNDk5NA==", "number": 66, "title": "extra_views/multi.py need a documentation", "user": {"login": "luzfcb", "id": 807599, "node_id": "MDQ6VXNlcjgwNzU5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/807599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luzfcb", "html_url": "https://github.com/luzfcb", "followers_url": "https://api.github.com/users/luzfcb/followers", "following_url": "https://api.github.com/users/luzfcb/following{/other_user}", "gists_url": "https://api.github.com/users/luzfcb/gists{/gist_id}", "starred_url": "https://api.github.com/users/luzfcb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luzfcb/subscriptions", "organizations_url": "https://api.github.com/users/luzfcb/orgs", "repos_url": "https://api.github.com/users/luzfcb/repos", "events_url": "https://api.github.com/users/luzfcb/events{/privacy}", "received_events_url": "https://api.github.com/users/luzfcb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-01T18:32:29Z", "updated_at": "2015-12-16T19:00:43Z", "closed_at": "2015-12-01T14:40:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello @AndrewIngram, no documentation was created for \"multi\" module because it is not usable or lack of available time to create it?\nA minimal documentation for this module would be great.\nI'm a little lost on the correct way to use it\n\nnice project, thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/64", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/64/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/64/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/64", "id": 29486253, "node_id": "MDU6SXNzdWUyOTQ4NjI1Mw==", "number": 64, "title": "Be more careful about qs.distinct()", "user": {"login": "aidanlister", "id": 54896, "node_id": "MDQ6VXNlcjU0ODk2", "avatar_url": "https://avatars0.githubusercontent.com/u/54896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidanlister", "html_url": "https://github.com/aidanlister", "followers_url": "https://api.github.com/users/aidanlister/followers", "following_url": "https://api.github.com/users/aidanlister/following{/other_user}", "gists_url": "https://api.github.com/users/aidanlister/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidanlister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidanlister/subscriptions", "organizations_url": "https://api.github.com/users/aidanlister/orgs", "repos_url": "https://api.github.com/users/aidanlister/repos", "events_url": "https://api.github.com/users/aidanlister/events{/privacy}", "received_events_url": "https://api.github.com/users/aidanlister/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-03-15T05:04:11Z", "updated_at": "2014-03-15T05:12:47Z", "closed_at": "2014-03-15T05:12:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Even if nothing is done, SearchableListMixin adds a .distinct() to the QS. In my use case, that incurred a 58% slowdown when viewing the index page without a ?q\n\nhttps://github.com/AndrewIngram/django-extra-views/blob/master/extra_views/contrib/mixins.py#L78\n\nIs it really necessary? If it is, perhaps we could move it up a level so it's only applied if there's something to do?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/63", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/63/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/63/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/63", "id": 28848677, "node_id": "MDU6SXNzdWUyODg0ODY3Nw==", "number": 63, "title": "crispy forms?", "user": {"login": "hampsterx", "id": 1887721, "node_id": "MDQ6VXNlcjE4ODc3MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1887721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hampsterx", "html_url": "https://github.com/hampsterx", "followers_url": "https://api.github.com/users/hampsterx/followers", "following_url": "https://api.github.com/users/hampsterx/following{/other_user}", "gists_url": "https://api.github.com/users/hampsterx/gists{/gist_id}", "starred_url": "https://api.github.com/users/hampsterx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hampsterx/subscriptions", "organizations_url": "https://api.github.com/users/hampsterx/orgs", "repos_url": "https://api.github.com/users/hampsterx/repos", "events_url": "https://api.github.com/users/hampsterx/events{/privacy}", "received_events_url": "https://api.github.com/users/hampsterx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-03-06T04:05:54Z", "updated_at": "2015-06-04T11:14:02Z", "closed_at": "2015-06-04T11:14:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Havent tested it yet... will it work? :8ball: \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/61", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/61/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/61/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/61", "id": 27891242, "node_id": "MDU6SXNzdWUyNzg5MTI0Mg==", "number": 61, "title": "Prefetch related for Create/UpdateWithInlinesView", "user": {"login": "palm86", "id": 3036645, "node_id": "MDQ6VXNlcjMwMzY2NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3036645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palm86", "html_url": "https://github.com/palm86", "followers_url": "https://api.github.com/users/palm86/followers", "following_url": "https://api.github.com/users/palm86/following{/other_user}", "gists_url": "https://api.github.com/users/palm86/gists{/gist_id}", "starred_url": "https://api.github.com/users/palm86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palm86/subscriptions", "organizations_url": "https://api.github.com/users/palm86/orgs", "repos_url": "https://api.github.com/users/palm86/repos", "events_url": "https://api.github.com/users/palm86/events{/privacy}", "received_events_url": "https://api.github.com/users/palm86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-19T17:05:59Z", "updated_at": "2016-02-25T10:52:54Z", "closed_at": "2015-06-04T11:14:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could someone point me in the direction for how to implement prefetch_related with inline formset views? I have tried to manually override querysets, but these seem to get ignored. Am I missing something? I have a model with lots of inlines and loading the page takes very long depending on the size of the model. My other views that do much more intensive querying are almost instantaneous because of prefetch_related and select_related.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/60", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/60/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/60/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/60", "id": 27842802, "node_id": "MDU6SXNzdWUyNzg0MjgwMg==", "number": 60, "title": "Python 3 syntax error", "user": {"login": "troygrosfield", "id": 1551551, "node_id": "MDQ6VXNlcjE1NTE1NTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1551551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troygrosfield", "html_url": "https://github.com/troygrosfield", "followers_url": "https://api.github.com/users/troygrosfield/followers", "following_url": "https://api.github.com/users/troygrosfield/following{/other_user}", "gists_url": "https://api.github.com/users/troygrosfield/gists{/gist_id}", "starred_url": "https://api.github.com/users/troygrosfield/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troygrosfield/subscriptions", "organizations_url": "https://api.github.com/users/troygrosfield/orgs", "repos_url": "https://api.github.com/users/troygrosfield/repos", "events_url": "https://api.github.com/users/troygrosfield/events{/privacy}", "received_events_url": "https://api.github.com/users/troygrosfield/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-19T01:00:21Z", "updated_at": "2014-07-23T15:57:14Z", "closed_at": "2014-04-17T08:56:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to pip install in environment using python 3.3.3, django 1.6.2:\n\n```\n$ pip install django-extra-views\nDownloading/unpacking django-extra-views\n  Downloading django-extra-views-0.6.4.tar.gz\n  Running setup.py (path:/.virtualenvs/py33_django16/build/django-extra-views/setup.py) egg_info for package django-extra-views\n\nRequirement already satisfied (use --upgrade to upgrade): Django>=1.3 in /.virtualenvs/py33_django16/lib/python3.3/site-packages (from django-extra-views)\nInstalling collected packages: django-extra-views\n  Running setup.py install for django-extra-views\n\n      File \"/.virtualenvs/py33_django16/lib/python3.3/site-packages/extra_views/multi.py\", line 35\n        except ValidationError, e:\n                              ^\n    SyntaxError: invalid syntax\n\nSuccessfully installed django-extra-views\nCleaning up...\n```\n\nThis change is rather trivial:\n\n```\nexcept ValidationError as e:\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/59", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/59/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/59/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/59", "id": 27501244, "node_id": "MDU6SXNzdWUyNzUwMTI0NA==", "number": 59, "title": "SuccessMessageMixin is useless with InlineViews", "user": {"login": "pjrobertson", "id": 150431, "node_id": "MDQ6VXNlcjE1MDQzMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/150431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pjrobertson", "html_url": "https://github.com/pjrobertson", "followers_url": "https://api.github.com/users/pjrobertson/followers", "following_url": "https://api.github.com/users/pjrobertson/following{/other_user}", "gists_url": "https://api.github.com/users/pjrobertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/pjrobertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pjrobertson/subscriptions", "organizations_url": "https://api.github.com/users/pjrobertson/orgs", "repos_url": "https://api.github.com/users/pjrobertson/repos", "events_url": "https://api.github.com/users/pjrobertson/events{/privacy}", "received_events_url": "https://api.github.com/users/pjrobertson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-02-13T08:22:37Z", "updated_at": "2018-11-23T22:10:45Z", "closed_at": "2018-11-23T22:10:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using `forms_valid()` and never calling `form_valid()` means that the `SuccessMessageMixin` can't set any success messages. (`form_valid()` is where `SuccessMessageMixin` injects the messages)\n\nTo get round this, I made a new `InlineSuccessMessageMixin`\n\n``` python\nfrom django.contrib import messages\n\n\nclass InlineSuccessMessageMixin(object):\n    \"\"\"\n    Adds a success message on successful form submission.\n    \"\"\"\n    success_message = ''\n\n    def forms_valid(self, form, formset):\n        print \"something\"\n        response = super(InlineSuccessMessageMixin, self).forms_valid(form, formset)\n        success_message = self.get_success_message(form.cleaned_data)\n        if success_message:\n            messages.success(self.request, success_message)\n        return response\n\n    def get_success_message(self, cleaned_data):\n        return self.success_message % cleaned_data\n```\n\nIt's basically just a copy of the django's built in one.\n\nIf you were to implement this, things to note:\n\nIt doesn't pass the formset forms' `cleaned_data` to the success message\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/58", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/58/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/58/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/58", "id": 26797528, "node_id": "MDU6SXNzdWUyNjc5NzUyOA==", "number": 58, "title": "UpdateWithInlines breaks when deleting items on multiple tabs", "user": {"login": "adrianzamorski", "id": 910361, "node_id": "MDQ6VXNlcjkxMDM2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/910361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrianzamorski", "html_url": "https://github.com/adrianzamorski", "followers_url": "https://api.github.com/users/adrianzamorski/followers", "following_url": "https://api.github.com/users/adrianzamorski/following{/other_user}", "gists_url": "https://api.github.com/users/adrianzamorski/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrianzamorski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrianzamorski/subscriptions", "organizations_url": "https://api.github.com/users/adrianzamorski/orgs", "repos_url": "https://api.github.com/users/adrianzamorski/repos", "events_url": "https://api.github.com/users/adrianzamorski/events{/privacy}", "received_events_url": "https://api.github.com/users/adrianzamorski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-03T12:01:53Z", "updated_at": "2016-07-12T10:46:07Z", "closed_at": "2015-12-01T14:37:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. Open 2 tabs with the same formset using UpdateWithInlines\n2. Remove one of the inlines on the first tab and click \"Save\".\n3. Remove the same inline on the second tab and click \"Save\".\n\nRESULT\nInternal Server Error. It could be\n- IndexError 'list index out of range' (when you remove the last item)\n- uncaught ValidationError: 'Select a valid choice. That choice is not one of the available choices' (when you remove other than the last item)\n\nEXPECTED\nI'm not sure what we should expect here, but definitely not uncaught generic exceptions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/53", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/53/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/53/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/53", "id": 21206861, "node_id": "MDU6SXNzdWUyMTIwNjg2MQ==", "number": 53, "title": "can_delete should be False for inline formsets in CreateWithInlinesView", "user": {"login": "palm86", "id": 3036645, "node_id": "MDQ6VXNlcjMwMzY2NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3036645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palm86", "html_url": "https://github.com/palm86", "followers_url": "https://api.github.com/users/palm86/followers", "following_url": "https://api.github.com/users/palm86/following{/other_user}", "gists_url": "https://api.github.com/users/palm86/gists{/gist_id}", "starred_url": "https://api.github.com/users/palm86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palm86/subscriptions", "organizations_url": "https://api.github.com/users/palm86/orgs", "repos_url": "https://api.github.com/users/palm86/repos", "events_url": "https://api.github.com/users/palm86/events{/privacy}", "received_events_url": "https://api.github.com/users/palm86/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293888226, "node_id": "MDU6TGFiZWwyOTM4ODgyMjY=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Ready%20to%20work%20on", "name": "Ready to work on", "color": "009800", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2", "html_url": "https://github.com/AndrewIngram/django-extra-views/milestone/2", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/milestones/2/labels", "id": 1447742, "node_id": "MDk6TWlsZXN0b25lMTQ0Nzc0Mg==", "number": 2, "title": "1.0.0", "description": "", "creator": {"login": "jonashaag", "id": 175722, "node_id": "MDQ6VXNlcjE3NTcyMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/175722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonashaag", "html_url": "https://github.com/jonashaag", "followers_url": "https://api.github.com/users/jonashaag/followers", "following_url": "https://api.github.com/users/jonashaag/following{/other_user}", "gists_url": "https://api.github.com/users/jonashaag/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonashaag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonashaag/subscriptions", "organizations_url": "https://api.github.com/users/jonashaag/orgs", "repos_url": "https://api.github.com/users/jonashaag/repos", "events_url": "https://api.github.com/users/jonashaag/events{/privacy}", "received_events_url": "https://api.github.com/users/jonashaag/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 8, "state": "open", "created_at": "2015-12-07T14:10:08Z", "updated_at": "2019-12-20T14:50:08Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2013-10-18T08:42:55Z", "updated_at": "2019-12-20T14:50:08Z", "closed_at": "2019-12-20T14:50:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "But it should be True for UpdateWithInlinesView. Or am I confused?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/51", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/51/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/51/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/51", "id": 16563279, "node_id": "MDU6SXNzdWUxNjU2MzI3OQ==", "number": 51, "title": "Current PyPI install fails", "user": {"login": "dyve", "id": 82315, "node_id": "MDQ6VXNlcjgyMzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/82315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dyve", "html_url": "https://github.com/dyve", "followers_url": "https://api.github.com/users/dyve/followers", "following_url": "https://api.github.com/users/dyve/following{/other_user}", "gists_url": "https://api.github.com/users/dyve/gists{/gist_id}", "starred_url": "https://api.github.com/users/dyve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dyve/subscriptions", "organizations_url": "https://api.github.com/users/dyve/orgs", "repos_url": "https://api.github.com/users/dyve/repos", "events_url": "https://api.github.com/users/dyve/events{/privacy}", "received_events_url": "https://api.github.com/users/dyve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-07-10T06:59:23Z", "updated_at": "2013-07-10T07:18:41Z", "closed_at": "2013-07-10T07:18:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "( please ignore, looks like my local virtualenv was messed up )\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/50", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/50/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/50/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/50", "id": 16440228, "node_id": "MDU6SXNzdWUxNjQ0MDIyOA==", "number": 50, "title": "Using related_name in a model breaks things", "user": {"login": "bootandy", "id": 311785, "node_id": "MDQ6VXNlcjMxMTc4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/311785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bootandy", "html_url": "https://github.com/bootandy", "followers_url": "https://api.github.com/users/bootandy/followers", "following_url": "https://api.github.com/users/bootandy/following{/other_user}", "gists_url": "https://api.github.com/users/bootandy/gists{/gist_id}", "starred_url": "https://api.github.com/users/bootandy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bootandy/subscriptions", "organizations_url": "https://api.github.com/users/bootandy/orgs", "repos_url": "https://api.github.com/users/bootandy/repos", "events_url": "https://api.github.com/users/bootandy/events{/privacy}", "received_events_url": "https://api.github.com/users/bootandy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-07-07T07:54:36Z", "updated_at": "2013-07-09T18:34:03Z", "closed_at": "2013-07-09T18:34:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using \nrelated_name in a ForeignKey in a model seems to break InlineFormSet\n\nSee issue:\nhttps://github.com/twoscoops/django-admin2/issues/288\n\nadding a related_name in django-admin2 causes the tests to fail.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/49", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/49/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/49/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/49", "id": 16255869, "node_id": "MDU6SXNzdWUxNjI1NTg2OQ==", "number": 49, "title": "Use of ImageFields in inlineformsets", "user": {"login": "stephendwolff", "id": 25349, "node_id": "MDQ6VXNlcjI1MzQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/25349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stephendwolff", "html_url": "https://github.com/stephendwolff", "followers_url": "https://api.github.com/users/stephendwolff/followers", "following_url": "https://api.github.com/users/stephendwolff/following{/other_user}", "gists_url": "https://api.github.com/users/stephendwolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/stephendwolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stephendwolff/subscriptions", "organizations_url": "https://api.github.com/users/stephendwolff/orgs", "repos_url": "https://api.github.com/users/stephendwolff/repos", "events_url": "https://api.github.com/users/stephendwolff/events{/privacy}", "received_events_url": "https://api.github.com/users/stephendwolff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-07-02T09:41:28Z", "updated_at": "2015-12-01T14:46:22Z", "closed_at": "2015-12-01T14:46:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, \n\nThanks for an excellent set of views - they're very handy.\n\nHowever - i don't seem to be able to get new image files to get uploaded when the forms are saved with the UpdateWithInlinesView. I suspect the contents of request.FILES isn't being bound to the model? My form definitely has an enctype=\"multipart/form-data\" attribute.\n\nDo you have any suggestions?\n\nMany thanks,\n\nStephen\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/47", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/47/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/47/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/47", "id": 15719641, "node_id": "MDU6SXNzdWUxNTcxOTY0MQ==", "number": 47, "title": "Multiview: change prefix container to set instead of list.", "user": {"login": "hansonkd", "id": 496914, "node_id": "MDQ6VXNlcjQ5NjkxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/496914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hansonkd", "html_url": "https://github.com/hansonkd", "followers_url": "https://api.github.com/users/hansonkd/followers", "following_url": "https://api.github.com/users/hansonkd/following{/other_user}", "gists_url": "https://api.github.com/users/hansonkd/gists{/gist_id}", "starred_url": "https://api.github.com/users/hansonkd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hansonkd/subscriptions", "organizations_url": "https://api.github.com/users/hansonkd/orgs", "repos_url": "https://api.github.com/users/hansonkd/repos", "events_url": "https://api.github.com/users/hansonkd/events{/privacy}", "received_events_url": "https://api.github.com/users/hansonkd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-18T23:49:31Z", "updated_at": "2015-12-01T14:35:38Z", "closed_at": "2015-12-01T14:35:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `ProcessMultiFormView`:\n\nInstead of having prefixes be a list for this section:\n\n```\n    posted_prefixes = []\n\n    # First we detect which prefixes were POSTed\n    for prefix in self.get_form_definitions().keys():\n        for field in self.request.POST:\n            if field.startswith(prefix):\n                posted_prefixes.append(prefix)\n                break\n\n    # Now we iterated over the groups until we find one that matches the POSTed prefixes\n    for label, prefixes in self.get_groups().iteritems():\n        if label == 'all' or list(prefixes) == posted_prefixes:\n```\n\nWouldn't it make more sense to have prefixes be a set? I was debugging for an hour trying to figure out why things wouldn't work, when I figured out that the computed `posted_prefixes` were something like [\"left_form\", \"right_form\"] and my group's prefixes (that it was comparing it to) were [\"right_form\", \"left_form\"]. Obviously these didn't match and I kept getting a 404 error. Using a set would solve this issue and simplify problems in the future.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/46", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/46/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/46/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/46", "id": 14892693, "node_id": "MDU6SXNzdWUxNDg5MjY5Mw==", "number": 46, "title": "Remove URLs from PyPI per PEP 438", "user": {"login": "treyhunner", "id": 285352, "node_id": "MDQ6VXNlcjI4NTM1Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/285352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treyhunner", "html_url": "https://github.com/treyhunner", "followers_url": "https://api.github.com/users/treyhunner/followers", "following_url": "https://api.github.com/users/treyhunner/following{/other_user}", "gists_url": "https://api.github.com/users/treyhunner/gists{/gist_id}", "starred_url": "https://api.github.com/users/treyhunner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treyhunner/subscriptions", "organizations_url": "https://api.github.com/users/treyhunner/orgs", "repos_url": "https://api.github.com/users/treyhunner/repos", "events_url": "https://api.github.com/users/treyhunner/events{/privacy}", "received_events_url": "https://api.github.com/users/treyhunner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-05-29T14:31:17Z", "updated_at": "2013-05-29T15:47:53Z", "closed_at": "2013-05-29T15:47:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Problem discovered using [pep438](https://github.com/treyhunner/pep438) tool:\n\n```\n$ sudo pip install pep438\n$ pep438 django-extra-views\n\u2717 django-extra-views: 2 URLs\n```\n\nPage showing extra links: http://pypi-externals.caremad.io/django-extra-views/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/45", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/45/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/45/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/45", "id": 14864310, "node_id": "MDU6SXNzdWUxNDg2NDMxMA==", "number": 45, "title": "pagination for modelsetview", "user": {"login": "fission6", "id": 408914, "node_id": "MDQ6VXNlcjQwODkxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/408914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fission6", "html_url": "https://github.com/fission6", "followers_url": "https://api.github.com/users/fission6/followers", "following_url": "https://api.github.com/users/fission6/following{/other_user}", "gists_url": "https://api.github.com/users/fission6/gists{/gist_id}", "starred_url": "https://api.github.com/users/fission6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fission6/subscriptions", "organizations_url": "https://api.github.com/users/fission6/orgs", "repos_url": "https://api.github.com/users/fission6/repos", "events_url": "https://api.github.com/users/fission6/events{/privacy}", "received_events_url": "https://api.github.com/users/fission6/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 293595261, "node_id": "MDU6TGFiZWwyOTM1OTUyNjE=", "url": "https://api.github.com/repos/AndrewIngram/django-extra-views/labels/Patch%20needs%20improvement", "name": "Patch needs improvement", "color": "207de5", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-05-28T22:11:29Z", "updated_at": "2018-10-31T08:30:23Z", "closed_at": "2018-10-31T08:30:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just a crude starting point - the big issue here is that construct_form is called before get_context_data which is where django's multipleobjectmixin does the pagination work and modifies the queryset.\n\nfrom extra_views.formsets import BaseModelFormSetView\nfrom extra_views.compat import ContextMixin\nfrom django.views.generic.list import MultipleObjectTemplateResponseMixin\n\nclass ModelFormSetView(MultipleObjectTemplateResponseMixin, BaseModelFormSetView):\n    \"\"\"\n    A view for displaying a model formset, and rendering a template response\n    \"\"\"\n\n```\ndef get(self, request, *args, **kwargs):\n    self.object_list = self.get_queryset()\n    context = self.get_context_data()\n\n    return self.render_to_response(context)\n\ndef get_context_data(self, **kwargs):\n    \"\"\"\n    Get the context for this view.\n    \"\"\"\n    queryset = kwargs.pop('object_list', self.object_list)\n    page_size = self.get_paginate_by(queryset)\n    context_object_name = self.get_context_object_name(queryset)\n\n    if page_size:\n        paginator, page, queryset, is_paginated = self.paginate_queryset(queryset, page_size)\n        formset = self.construct_formset()\n        context = {\n            'paginator': paginator,\n            'page_obj': page,\n            'is_paginated': is_paginated,\n            'object_list': queryset,\n        }\n    else:\n\n        context = {\n            'paginator': None,\n            'page_obj': None,\n            'is_paginated': False,\n            'object_list': queryset,\n            'formset': formset\n        }\n\n    if context_object_name is not None:\n        context[context_object_name] = queryset\n\n    self.queryset = queryset\n    context['formset'] = self.construct_formset()\n\n    return ContextMixin.get_context_data(self, **context)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/44", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/44/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/44/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/44", "id": 14548278, "node_id": "MDU6SXNzdWUxNDU0ODI3OA==", "number": 44, "title": "Dynamically Adding forms to a Formset", "user": {"login": "iranana", "id": 1245730, "node_id": "MDQ6VXNlcjEyNDU3MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1245730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iranana", "html_url": "https://github.com/iranana", "followers_url": "https://api.github.com/users/iranana/followers", "following_url": "https://api.github.com/users/iranana/following{/other_user}", "gists_url": "https://api.github.com/users/iranana/gists{/gist_id}", "starred_url": "https://api.github.com/users/iranana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iranana/subscriptions", "organizations_url": "https://api.github.com/users/iranana/orgs", "repos_url": "https://api.github.com/users/iranana/repos", "events_url": "https://api.github.com/users/iranana/events{/privacy}", "received_events_url": "https://api.github.com/users/iranana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-05-21T02:30:58Z", "updated_at": "2013-05-21T22:35:52Z", "closed_at": "2013-05-21T08:39:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, this may be out of the scope of what this application is meant to do and it's more of a feature request than an issue. First off, this package is great and it makes creating formsets a breeze, but I've hit a brick wall with dynamically adding forms to a formset. I'm not particularly good with Javascript and I'm wondering if anyone has found a decent solution to this? \n\nAssume, for examples sake, we have a form for an album which can contain a bunch of images. Initially, we would render the album form and 5 image forms. If a user wants to add more than 5 images, they could hit a button that says 'add another' which would then render another image form. \n\nI've found a few things around the place that hint towards how to do this, but as I said, my Javascript isn't very good and I'm terrible with regular expressions so I'm having a lot of trouble matching the form IDs and incrementing them as necessary. Thanks for any help on this :) I'll keep working with what I've got and if I make any breakthroughs I'll post them up in here. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/41", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/41/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/41/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/41", "id": 12547906, "node_id": "MDU6SXNzdWUxMjU0NzkwNg==", "number": 41, "title": "SortableListMixin(ContextMixin) breaks pagination for ListView", "user": {"login": "renyi", "id": 147330, "node_id": "MDQ6VXNlcjE0NzMzMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/147330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renyi", "html_url": "https://github.com/renyi", "followers_url": "https://api.github.com/users/renyi/followers", "following_url": "https://api.github.com/users/renyi/following{/other_user}", "gists_url": "https://api.github.com/users/renyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/renyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renyi/subscriptions", "organizations_url": "https://api.github.com/users/renyi/orgs", "repos_url": "https://api.github.com/users/renyi/repos", "events_url": "https://api.github.com/users/renyi/events{/privacy}", "received_events_url": "https://api.github.com/users/renyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-03-28T04:09:54Z", "updated_at": "2018-10-31T08:27:13Z", "closed_at": "2018-10-31T08:27:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tested in Django 1.4.5\n\n``` python\nclass SortableListMixin(object):\n    # both sorting and pagination works.\n    ....\n\nclass SortableListMixin(ContextMixin):\n    # breaks pagination, but sorting works.\n    ....\n\nclass MyListView(SortableListMixin, ListView): \n    # Sorting works, pagination doesn't\n    paginate_by = 10\n\nclass MyListView(ListView, SortableListMixin):\n    # Pagination works, sorting doesn't\n    paginate_by = 10\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/39", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/39/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/39/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/39", "id": 12079573, "node_id": "MDU6SXNzdWUxMjA3OTU3Mw==", "number": 39, "title": "FormSetView support for multiple formsets?", "user": {"login": "egasimus", "id": 1656054, "node_id": "MDQ6VXNlcjE2NTYwNTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1656054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egasimus", "html_url": "https://github.com/egasimus", "followers_url": "https://api.github.com/users/egasimus/followers", "following_url": "https://api.github.com/users/egasimus/following{/other_user}", "gists_url": "https://api.github.com/users/egasimus/gists{/gist_id}", "starred_url": "https://api.github.com/users/egasimus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egasimus/subscriptions", "organizations_url": "https://api.github.com/users/egasimus/orgs", "repos_url": "https://api.github.com/users/egasimus/repos", "events_url": "https://api.github.com/users/egasimus/events{/privacy}", "received_events_url": "https://api.github.com/users/egasimus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-03-15T20:14:13Z", "updated_at": "2018-10-31T08:27:23Z", "closed_at": "2018-10-31T08:27:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be great if we could have more than one formset per view.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/38", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/38/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/38/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/38", "id": 11875914, "node_id": "MDU6SXNzdWUxMTg3NTkxNA==", "number": 38, "title": "Wrong test-case in InlineFormSetViewTests, GenericInlineFormSetViewTests and ModelWithInlinesTests with postgresql-db", "user": {"login": "kampfschlaefer", "id": 3831860, "node_id": "MDQ6VXNlcjM4MzE4NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3831860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kampfschlaefer", "html_url": "https://github.com/kampfschlaefer", "followers_url": "https://api.github.com/users/kampfschlaefer/followers", "following_url": "https://api.github.com/users/kampfschlaefer/following{/other_user}", "gists_url": "https://api.github.com/users/kampfschlaefer/gists{/gist_id}", "starred_url": "https://api.github.com/users/kampfschlaefer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kampfschlaefer/subscriptions", "organizations_url": "https://api.github.com/users/kampfschlaefer/orgs", "repos_url": "https://api.github.com/users/kampfschlaefer/repos", "events_url": "https://api.github.com/users/kampfschlaefer/events{/privacy}", "received_events_url": "https://api.github.com/users/kampfschlaefer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-03-11T13:11:01Z", "updated_at": "2013-07-28T22:38:13Z", "closed_at": "2013-07-28T22:38:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using a postgresql-db which has transactions.\n\nWhen we run your tests against sqlite3 the above testcases work, when running against postgresql, they fail.\nWhen we use TransactionTestCase instead of TestCase as base-class, the tests work like expected.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/37", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/37/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/37/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/37", "id": 11006537, "node_id": "MDU6SXNzdWUxMTAwNjUzNw==", "number": 37, "title": "The url in your setup.py file is pointing to another repo", "user": {"login": "duduklein", "id": 2512289, "node_id": "MDQ6VXNlcjI1MTIyODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2512289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duduklein", "html_url": "https://github.com/duduklein", "followers_url": "https://api.github.com/users/duduklein/followers", "following_url": "https://api.github.com/users/duduklein/following{/other_user}", "gists_url": "https://api.github.com/users/duduklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/duduklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duduklein/subscriptions", "organizations_url": "https://api.github.com/users/duduklein/orgs", "repos_url": "https://api.github.com/users/duduklein/repos", "events_url": "https://api.github.com/users/duduklein/events{/privacy}", "received_events_url": "https://api.github.com/users/duduklein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-02-14T17:54:34Z", "updated_at": "2013-02-14T19:20:12Z", "closed_at": "2013-02-14T19:20:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "The repository url is pointing to a fork of this project.\n\n url='https://github.com/miguelrestrepo/django-extra-views',\n\nIn pypi, it's showing this one instead of yours.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/35", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/35/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/35/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/35", "id": 10295575, "node_id": "MDU6SXNzdWUxMDI5NTU3NQ==", "number": 35, "title": "Give Inlines access to the view kwargs, and possibly the view instance itself", "user": {"login": "AndrewIngram", "id": 35227, "node_id": "MDQ6VXNlcjM1MjI3", "avatar_url": "https://avatars1.githubusercontent.com/u/35227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewIngram", "html_url": "https://github.com/AndrewIngram", "followers_url": "https://api.github.com/users/AndrewIngram/followers", "following_url": "https://api.github.com/users/AndrewIngram/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewIngram/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewIngram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewIngram/subscriptions", "organizations_url": "https://api.github.com/users/AndrewIngram/orgs", "repos_url": "https://api.github.com/users/AndrewIngram/repos", "events_url": "https://api.github.com/users/AndrewIngram/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewIngram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-01-25T00:24:04Z", "updated_at": "2013-01-29T09:31:12Z", "closed_at": "2013-01-29T09:31:12Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Sometimes we want to pass additional stuff to the inline formset and form constructors based on the view's kwargs, so inlines need to be given access to these variables.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/33", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/33/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/33/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/33", "id": 10102013, "node_id": "MDU6SXNzdWUxMDEwMjAxMw==", "number": 33, "title": "Custom validation in `extra_views.CreateWithInlinesView`", "user": {"login": "mbaechtold", "id": 28220, "node_id": "MDQ6VXNlcjI4MjIw", "avatar_url": "https://avatars3.githubusercontent.com/u/28220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbaechtold", "html_url": "https://github.com/mbaechtold", "followers_url": "https://api.github.com/users/mbaechtold/followers", "following_url": "https://api.github.com/users/mbaechtold/following{/other_user}", "gists_url": "https://api.github.com/users/mbaechtold/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbaechtold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbaechtold/subscriptions", "organizations_url": "https://api.github.com/users/mbaechtold/orgs", "repos_url": "https://api.github.com/users/mbaechtold/repos", "events_url": "https://api.github.com/users/mbaechtold/events{/privacy}", "received_events_url": "https://api.github.com/users/mbaechtold/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-01-18T15:31:59Z", "updated_at": "2013-01-22T15:41:26Z", "closed_at": "2013-01-22T15:41:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Great job, @AndrewIngram, `django-extra-views` is a very useful piece of software. Maybe you could help me on this problem of mine in combination with `django-extra-views`:\n\nIn a `extra_views.CreateWithInlinesView()` I'm trying to have a custom formset validation for my inlines by overriding the `clean()` method of my formset.\n\nApparently there should be a method `non_form_errors()` on the formset but calling `inlines.0.non_form_errors` in my template won't print the errors. \n\nMaybe some dummy code might be helpful to understand this. I stripped the non-important stuff:\n\n``` python\nclass MyModelInlineFormSet(django.forms.models.BaseInlineFormSet):\n   def clean(self):\n       raise django.forms.ValidationError('Foobar')\n\nclass MyModelInline(extra_views.InlineFormSet):\n    model = MyModel\n    extra = 5\n    formset_class = MyModelInlineFormSet\n\nclass MyCreateView(extra_views.CreateWithInlinesView):\n    model = MyParentModel\n    form_class = MyParentModelModelForm\n    inlines = [MyModelInline]\n```\n\nAnd here's the part about the `non_form_errors()` method in the docs: https://docs.djangoproject.com/en/dev/topics/forms/formsets/#custom-formset-validation\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/31", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/31/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/31/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/31", "id": 9810639, "node_id": "MDU6SXNzdWU5ODEwNjM5", "number": 31, "title": "current transaction is aborted, commands ignored until end of transaction block while using CreateWithInlinesView for GenericInlineFormSet", "user": {"login": "herrmendez", "id": 2685624, "node_id": "MDQ6VXNlcjI2ODU2MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2685624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/herrmendez", "html_url": "https://github.com/herrmendez", "followers_url": "https://api.github.com/users/herrmendez/followers", "following_url": "https://api.github.com/users/herrmendez/following{/other_user}", "gists_url": "https://api.github.com/users/herrmendez/gists{/gist_id}", "starred_url": "https://api.github.com/users/herrmendez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/herrmendez/subscriptions", "organizations_url": "https://api.github.com/users/herrmendez/orgs", "repos_url": "https://api.github.com/users/herrmendez/repos", "events_url": "https://api.github.com/users/herrmendez/events{/privacy}", "received_events_url": "https://api.github.com/users/herrmendez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-01-09T16:28:06Z", "updated_at": "2013-01-09T19:38:12Z", "closed_at": "2013-01-09T19:38:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "## view\n\n```\nclass PhoneInline(GenericInlineFormSet):\n    model = Phone\n    max_num = 1\n\nclass ContactCreateView(BaseSingleClient, CreateWithInlinesView):\n    model = UpstreamContactModel\n    inlines = [PhoneInline, ]\n    template_name = 'clients/contact_form.html'\n\n    def get_initial(self):\n        initial = super(ContactCreateView, self).get_initial()\n        initial = initial.copy()\n        initial['client'] = self.kwargs['pk']\n        return initial\n```\n## models\n\n```\nclass Phone(models.Model):\n    TYPES_CHOICES = (\n        ('HOME', 'Home'),\n        ('WORK', 'Work'),\n        ('MOBILE', 'Mobile'),\n        ('HOME_FAX', 'Fax (home)'),\n        ('WORK_FAX', 'Fax (work)'),\n        ('PAGER', 'Pager'),\n        ('OTHER', 'Other')\n    )\n\n    info = models.CharField('Phone Type', max_length=10, choices=TYPES_CHOICES)\n    number = models.CharField('Phone number', max_length=20)\n    content_type = models.ForeignKey(ContentType)\n    object_id = models.PositiveIntegerField()\n    content_object = generic.GenericForeignKey('content_type', 'object_id')\n\nclass UpstreamContactModel(models.Model):\n    client = models.ForeignKey(UpstreamClientModel,\n            related_name='contacts')\n    contact_type = models.CharField(max_length=50, default='Main', \n            blank=True, null=True)\n    name = models.CharField(max_length=100, unique=True)\n    job_title = models.CharField(max_length=50, blank=True, null=True)\n    email = models.EmailField(blank=True, null=True)\n    skype_id = models.CharField(max_length=30, blank=True, null=True)\n    phones = generic.GenericRelation(Phone)\n    notes = models.TextField(blank=True, null=True)\n\n    def __unicode__(self):\n        return self.name\n\n    def get_absolute_url(self):\n        return reverse('client_list')\n\n    class Meta:\n        verbose_name = 'Contact'\n```\n## traceback and debug:\n\n(0.019) SELECT \"clients_upstreamclientmodel\".\"id\",\n\n> \"clients_upstreamclientmodel\".\"client_name\",\n> \"clients_upstreamclientmodel\".\"url\",\n> \"clients_upstreamclientmodel\".\"language\",\n> \"clients_upstreamclientmodel\".\"is_active\" FROM\n> \"clients_upstreamclientmodel\" WHERE \"clients_upstreamclientmodel\".\"id\"\n> = 1 ; args=(1,) DEBUG (0.000) SELECT (1) AS \"a\" FROM \"clients_upstreamclientmodel\" WHERE \"clients_upstreamclientmodel\".\"id\"\n> = 1  LIMIT 1; args=(1,) DEBUG (0.001) SELECT (1) AS \"a\" FROM \"clients_upstreamcontactmodel\" WHERE\n> \"clients_upstreamcontactmodel\".\"name\" = 'saasasa'  LIMIT 1;\n> args=(u'saasasa',) DEBUG (0.001) INSERT INTO\n> \"clients_upstreamcontactmodel\" (\"client_id\", \"contact_type\", \"name\",\n> \"job_title\", \"email\", \"skype_id\", \"notes\") VALUES (1, 'Main',\n> 'saasasa', 'sasasas', '', '', '') RETURNING\n> \"clients_upstreamcontactmodel\".\"id\"; args=(1, u'Main', u'saasasa',\n> u'sasasas', u'', u'', u'') ERROR Internal Server Error:\n> /clients/1/contacts/create/ Traceback (most recent call last):   File\n> \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/core/handlers/base.py\",\n> line 111, in get_response\n>     response = callback(request, _callback_args, *_callback_kwargs)   File\n> \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/views/generic/base.py\",\n> line 48, in view\n>     return self.dispatch(request, _args, *_kwargs)   File \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/utils/decorators.py\",\n> line 25, in _wrapper\n>     return bound_func(_args, *_kwargs)   File \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/contrib/auth/decorators.py\",\n> line 20, in _wrapped_view\n>     return view_func(request, _args, *_kwargs)   File \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/utils/decorators.py\",\n> line 21, in bound_func\n>     return func(self, _args2, *_kwargs2)   File \"/Users/mirkocrocop/workspace/upstream_backend/my_auth/mixins.py\",\n> line 22, in dispatch\n>     return super(LoginRequiredMixin, self).dispatch(_args, *_kwargs)   File\n> \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/views/generic/base.py\",\n> line 69, in dispatch\n>     return handler(request, _args, *_kwargs)   File \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/extra_views/advanced.py\",\n> line 76, in post\n>     return super(BaseCreateWithInlinesView, self).post(request, _args, *_kwargs)   File \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/extra_views/advanced.py\",\n> line 62, in post\n>     return self.forms_valid(form, inlines)   File \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/extra_views/advanced.py\",\n> line 25, in forms_valid\n>     self.object = form.save()   File \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/forms/models.py\",\n> line 364, in save\n>     fail_message, commit, construct=False)   File \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/forms/models.py\",\n> line 86, in save_instance\n>     instance.save()   File \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/db/models/base.py\",\n> line 463, in save\n>     self.save_base(using=using, force_insert=force_insert, force_update=force_update)   File\n> \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/db/models/base.py\",\n> line 551, in save_base\n>     result = manager._insert([self], fields=fields, return_id=update_pk, using=using, raw=raw)   File\n> \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/db/models/manager.py\",\n> line 203, in _insert\n>     return insert_query(self.model, objs, fields, **kwargs)   File \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/db/models/query.py\",\n> line 1593, in insert_query\n>     return query.get_compiler(using=using).execute_sql(return_id)   File\n> \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/django/db/models/sql/compiler.py\",\n> line 910, in execute_sql\n>     cursor.execute(sql, params)   File \"/Users/mirkocrocop/.virtualenvs/upstream_backend/lib/python2.7/site-packages/debug_toolbar/utils/tracking/db.py\",\n> line 152, in execute\n>     'iso_level': conn.isolation_level, InternalError: current transaction is aborted, commands ignored until end of transaction\n> block\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/30", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/30/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/30/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/30", "id": 9705502, "node_id": "MDU6SXNzdWU5NzA1NTAy", "number": 30, "title": "py3k support", "user": {"login": "AndrewIngram", "id": 35227, "node_id": "MDQ6VXNlcjM1MjI3", "avatar_url": "https://avatars1.githubusercontent.com/u/35227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewIngram", "html_url": "https://github.com/AndrewIngram", "followers_url": "https://api.github.com/users/AndrewIngram/followers", "following_url": "https://api.github.com/users/AndrewIngram/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewIngram/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewIngram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewIngram/subscriptions", "organizations_url": "https://api.github.com/users/AndrewIngram/orgs", "repos_url": "https://api.github.com/users/AndrewIngram/repos", "events_url": "https://api.github.com/users/AndrewIngram/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewIngram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-01-05T13:05:53Z", "updated_at": "2015-06-04T10:59:21Z", "closed_at": "2015-06-04T10:59:21Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Main issue I can see is that the hooks in Django related to py3k were introduced in 1.4.2, so I'd need to bump the required version of Django up to that,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/28", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/28/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/28/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/28", "id": 9047926, "node_id": "MDU6SXNzdWU5MDQ3OTI2", "number": 28, "title": "Y U NO PUSH TAGS????", "user": {"login": "codeinthehole", "id": 80975, "node_id": "MDQ6VXNlcjgwOTc1", "avatar_url": "https://avatars1.githubusercontent.com/u/80975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeinthehole", "html_url": "https://github.com/codeinthehole", "followers_url": "https://api.github.com/users/codeinthehole/followers", "following_url": "https://api.github.com/users/codeinthehole/following{/other_user}", "gists_url": "https://api.github.com/users/codeinthehole/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeinthehole/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeinthehole/subscriptions", "organizations_url": "https://api.github.com/users/codeinthehole/orgs", "repos_url": "https://api.github.com/users/codeinthehole/repos", "events_url": "https://api.github.com/users/codeinthehole/events{/privacy}", "received_events_url": "https://api.github.com/users/codeinthehole/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-12-06T09:49:09Z", "updated_at": "2013-01-04T01:54:23Z", "closed_at": "2013-01-04T01:54:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you push your tags from releases to Github, so it's easier to see what changed between releases?\n\n```\ngit push --tags\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/26", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/26/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/26/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/26", "id": 8441306, "node_id": "MDU6SXNzdWU4NDQxMzA2", "number": 26, "title": "Problem with form_valid method at class CreateWithInlinesView", "user": {"login": "rgcarrasqueira", "id": 97540, "node_id": "MDQ6VXNlcjk3NTQw", "avatar_url": "https://avatars1.githubusercontent.com/u/97540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rgcarrasqueira", "html_url": "https://github.com/rgcarrasqueira", "followers_url": "https://api.github.com/users/rgcarrasqueira/followers", "following_url": "https://api.github.com/users/rgcarrasqueira/following{/other_user}", "gists_url": "https://api.github.com/users/rgcarrasqueira/gists{/gist_id}", "starred_url": "https://api.github.com/users/rgcarrasqueira/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rgcarrasqueira/subscriptions", "organizations_url": "https://api.github.com/users/rgcarrasqueira/orgs", "repos_url": "https://api.github.com/users/rgcarrasqueira/repos", "events_url": "https://api.github.com/users/rgcarrasqueira/events{/privacy}", "received_events_url": "https://api.github.com/users/rgcarrasqueira/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-11-17T14:28:50Z", "updated_at": "2012-11-17T14:39:43Z", "closed_at": "2012-11-17T14:39:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nI'm trying to implement a form with inline fields, where I have a field at my form that will be filled after the post, but it is excluded from the form. I do this at form_valid method, as described at my code bellow. I've perceived that form_valid is not woking but CreateWithInlinesView is a derivative from FormView where the method form_valid is native. Can you bring some help with this issue? Thanks so much!\n\n```\nclass CampaignCreateView(CreateWithInlinesView):\n\n     model = Campaign\n     inlines = [CampaignListsInline, ScheduleProgramInline, ManualScheduledSendInline]\n     template_name = \"campaigns/campaign/campaign_add.html\"\n     success_url = '/campaigns/campaign/'\n     form_class = CampaignForm\n\n     def form_valid(self, form):\n        \"\"\" Associate the record to the customer \"\"\"\n        form.instance.customer = self.request.user.get_profile().customer\n        return super(CampaignCreateView, self).form_valid(form)\n\n     @method_decorator(login_required)\n     def dispatch(self, *args, **kwargs):\n        return super(CampaignCreateView, self).dispatch(*args, **kwargs)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/25", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/25/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/25/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/25", "id": 7686088, "node_id": "MDU6SXNzdWU3Njg2MDg4", "number": 25, "title": "contrib missing from django-extra-views (not ng) package", "user": {"login": "mindlace", "id": 19280, "node_id": "MDQ6VXNlcjE5Mjgw", "avatar_url": "https://avatars2.githubusercontent.com/u/19280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mindlace", "html_url": "https://github.com/mindlace", "followers_url": "https://api.github.com/users/mindlace/followers", "following_url": "https://api.github.com/users/mindlace/following{/other_user}", "gists_url": "https://api.github.com/users/mindlace/gists{/gist_id}", "starred_url": "https://api.github.com/users/mindlace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mindlace/subscriptions", "organizations_url": "https://api.github.com/users/mindlace/orgs", "repos_url": "https://api.github.com/users/mindlace/repos", "events_url": "https://api.github.com/users/mindlace/events{/privacy}", "received_events_url": "https://api.github.com/users/mindlace/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-10-18T13:30:52Z", "updated_at": "2012-10-30T11:24:56Z", "closed_at": "2012-10-30T11:24:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "if you do pip install -U django-extra-views , it breaks because contrib is not included. I assume it would break if you just install it, too.\n\nif you pip install django-extra-views-ng, everything is ok.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/24", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/24/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/24/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/24", "id": 7547304, "node_id": "MDU6SXNzdWU3NTQ3MzA0", "number": 24, "title": "Is ModelFormSetView.extra ignored?", "user": {"login": "pgcd", "id": 2361956, "node_id": "MDQ6VXNlcjIzNjE5NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2361956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgcd", "html_url": "https://github.com/pgcd", "followers_url": "https://api.github.com/users/pgcd/followers", "following_url": "https://api.github.com/users/pgcd/following{/other_user}", "gists_url": "https://api.github.com/users/pgcd/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgcd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgcd/subscriptions", "organizations_url": "https://api.github.com/users/pgcd/orgs", "repos_url": "https://api.github.com/users/pgcd/repos", "events_url": "https://api.github.com/users/pgcd/events{/privacy}", "received_events_url": "https://api.github.com/users/pgcd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-10-12T16:21:11Z", "updated_at": "2013-07-02T09:20:36Z", "closed_at": "2013-01-10T23:29:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to integrate extra_views in a project but I stumbled across what appears to be a bug: if I set an \"extra\" attribute for my class, it seems to have no effect. Curiously, I get 5 extra objects - not even the 2 extra objects that appear to be the default for BaseFormSetMixin.\nAm I doing something wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/23", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/23/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/23/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/23", "id": 6170307, "node_id": "MDU6SXNzdWU2MTcwMzA3", "number": 23, "title": "Form for inline on CreateWithInlinesView?", "user": {"login": "pikeas", "id": 686573, "node_id": "MDQ6VXNlcjY4NjU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/686573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pikeas", "html_url": "https://github.com/pikeas", "followers_url": "https://api.github.com/users/pikeas/followers", "following_url": "https://api.github.com/users/pikeas/following{/other_user}", "gists_url": "https://api.github.com/users/pikeas/gists{/gist_id}", "starred_url": "https://api.github.com/users/pikeas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pikeas/subscriptions", "organizations_url": "https://api.github.com/users/pikeas/orgs", "repos_url": "https://api.github.com/users/pikeas/repos", "events_url": "https://api.github.com/users/pikeas/events{/privacy}", "received_events_url": "https://api.github.com/users/pikeas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-08-11T13:48:11Z", "updated_at": "2013-05-22T00:32:07Z", "closed_at": "2013-05-22T00:32:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n#views\nclass FooCreate(CreateWithInlinesView):\n    model = Foo\n    form_class = FooForm\n    inlines = [BarInline]\n\nclass BarInline(InlineFormSet):\n    model = Bar\n\n#forms\n# No BarForm!\n```\n\nCreateWithInlinesView seems to be ignoring the form I created. The above code works with no error, the view will automatically generate the form based on model fields. However, if I create BarForm and add `form_class = BarForm` to BarInline, I get a `TypeError: metaclass conflict`.\n\nHow do I use my own form for an inline?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/21", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/21/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/21/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/21", "id": 5396167, "node_id": "MDU6SXNzdWU1Mzk2MTY3", "number": 21, "title": "Populating files", "user": {"login": "pikeas", "id": 686573, "node_id": "MDQ6VXNlcjY4NjU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/686573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pikeas", "html_url": "https://github.com/pikeas", "followers_url": "https://api.github.com/users/pikeas/followers", "following_url": "https://api.github.com/users/pikeas/following{/other_user}", "gists_url": "https://api.github.com/users/pikeas/gists{/gist_id}", "starred_url": "https://api.github.com/users/pikeas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pikeas/subscriptions", "organizations_url": "https://api.github.com/users/pikeas/orgs", "repos_url": "https://api.github.com/users/pikeas/repos", "events_url": "https://api.github.com/users/pikeas/events{/privacy}", "received_events_url": "https://api.github.com/users/pikeas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-07-02T22:12:35Z", "updated_at": "2012-08-11T13:41:24Z", "closed_at": "2012-08-11T13:41:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a CreateView fails to validate and is redisplayed, inline formsets with data (text, checkbox, etc) are correctly populated. However, an inline formset for file uploads doesn't repopulate. Is there any way to do this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/20", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/20/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/20/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/20", "id": 4795032, "node_id": "MDU6SXNzdWU0Nzk1MDMy", "number": 20, "title": "ManagementForm Missing on CreateWithInlinesView", "user": {"login": "burhan", "id": 603112, "node_id": "MDQ6VXNlcjYwMzExMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/603112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/burhan", "html_url": "https://github.com/burhan", "followers_url": "https://api.github.com/users/burhan/followers", "following_url": "https://api.github.com/users/burhan/following{/other_user}", "gists_url": "https://api.github.com/users/burhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/burhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/burhan/subscriptions", "organizations_url": "https://api.github.com/users/burhan/orgs", "repos_url": "https://api.github.com/users/burhan/repos", "events_url": "https://api.github.com/users/burhan/events{/privacy}", "received_events_url": "https://api.github.com/users/burhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2012-05-29T13:30:57Z", "updated_at": "2018-03-21T19:39:46Z", "closed_at": "2012-05-30T17:45:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "How/Where is the management form in the context? I tried both `{{ inlines.management_form }}` and `{{ form.management_form }}`, but these don't work - hence the form doesn't validate.\n\nUsing the simplest case, almost directly from the documentation:\n\n``` python\nclass SQDetailsInline(InlineFormSet):\n    model = SQDetails\n    fields = ('terminal','merchant',)\n    exclude = ('pk','id','account')\n    can_delete = False\n    fk_name = 'account'\n\nclass CreateOrderView(CreateWithInlinesView):\n    model = SQAccount\n    inlines = [SQDetailsInline]\n    template_name = 'enter-order.html'\n\n    def formset_valid(self,form):\n        print form # this is here to force a 500\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/19", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/19/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/19/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/19", "id": 4712661, "node_id": "MDU6SXNzdWU0NzEyNjYx", "number": 19, "title": "Define sane defaults for required attributes", "user": {"login": "mjtamlyn", "id": 389581, "node_id": "MDQ6VXNlcjM4OTU4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/389581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjtamlyn", "html_url": "https://github.com/mjtamlyn", "followers_url": "https://api.github.com/users/mjtamlyn/followers", "following_url": "https://api.github.com/users/mjtamlyn/following{/other_user}", "gists_url": "https://api.github.com/users/mjtamlyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjtamlyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjtamlyn/subscriptions", "organizations_url": "https://api.github.com/users/mjtamlyn/orgs", "repos_url": "https://api.github.com/users/mjtamlyn/repos", "events_url": "https://api.github.com/users/mjtamlyn/events{/privacy}", "received_events_url": "https://api.github.com/users/mjtamlyn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-05-23T14:32:35Z", "updated_at": "2012-05-28T08:37:50Z", "closed_at": "2012-05-27T22:09:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example the `UpdateWithInlines` needs `inlines` defined and for it to be iterable. It's much easier to spot this if there is a placeholder which is `[]`. Alternatively we could define it as `None` and raise a helpful error, similarly to how django does if you don't define a `Model` or `queryset`.\n\nIn this particular case this may be helped by a `get_inlines` method, which throws `NotYetImplemented` if the attribute is not defined properly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/15", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/15/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/15/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/15", "id": 3555931, "node_id": "MDU6SXNzdWUzNTU1OTMx", "number": 15, "title": "OK - It ALMOST works..", "user": {"login": "rh0dium", "id": 170789, "node_id": "MDQ6VXNlcjE3MDc4OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/170789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rh0dium", "html_url": "https://github.com/rh0dium", "followers_url": "https://api.github.com/users/rh0dium/followers", "following_url": "https://api.github.com/users/rh0dium/following{/other_user}", "gists_url": "https://api.github.com/users/rh0dium/gists{/gist_id}", "starred_url": "https://api.github.com/users/rh0dium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rh0dium/subscriptions", "organizations_url": "https://api.github.com/users/rh0dium/orgs", "repos_url": "https://api.github.com/users/rh0dium/repos", "events_url": "https://api.github.com/users/rh0dium/events{/privacy}", "received_events_url": "https://api.github.com/users/rh0dium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-03-08T04:11:50Z", "updated_at": "2012-03-08T04:50:44Z", "closed_at": "2012-03-08T04:50:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey Andrew,\n\nThanks for the note - So it's working I can see the data going into the db.  But the populated data is not showing back in the view.\n- Start with an empty slate.\n- Confirm no documents are listed.\n- Add a document\n- Confirmed document is showing up in the db.\n\nBut the view doesn't show anything.  It's always empty.  Do you have any pointers.\n\nFWIW - It'a very basic example..\n\n```\nclass CompanyDetailView(InlineFormSetView):\n    \"\"\"Details of the Company Page\"\"\"\n    model = Company\n    inline_model = CompanyDocument\n    fk_name = \"company\"\n    fields=('document', 'description')\n    can_delete=True\n    extra = 1\n```\n\nI suspect this has to do with the fk_name.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/14", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/14/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/14/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/14", "id": 3554268, "node_id": "MDU6SXNzdWUzNTU0MjY4", "number": 14, "title": "Documentation, with recipes", "user": {"login": "AndrewIngram", "id": 35227, "node_id": "MDQ6VXNlcjM1MjI3", "avatar_url": "https://avatars1.githubusercontent.com/u/35227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewIngram", "html_url": "https://github.com/AndrewIngram", "followers_url": "https://api.github.com/users/AndrewIngram/followers", "following_url": "https://api.github.com/users/AndrewIngram/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewIngram/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewIngram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewIngram/subscriptions", "organizations_url": "https://api.github.com/users/AndrewIngram/orgs", "repos_url": "https://api.github.com/users/AndrewIngram/repos", "events_url": "https://api.github.com/users/AndrewIngram/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewIngram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2012-03-08T00:51:27Z", "updated_at": "2015-12-01T14:36:03Z", "closed_at": "2015-12-01T14:36:03Z", "author_association": "OWNER", "active_lock_reason": null, "body": "At the moment this library has no real documentation, and much like Django's own class-based views, it's not obvious how to use it unless you read the source code quite carefully.\n\nQuickest solution is to come up with a list of common use cases for the views and explain how to implement them.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/13", "repository_url": "https://api.github.com/repos/AndrewIngram/django-extra-views", "labels_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/13/comments", "events_url": "https://api.github.com/repos/AndrewIngram/django-extra-views/issues/13/events", "html_url": "https://github.com/AndrewIngram/django-extra-views/issues/13", "id": 3553164, "node_id": "MDU6SXNzdWUzNTUzMTY0", "number": 13, "title": "DetailWithInlineView - Where is it?", "user": {"login": "rh0dium", "id": 170789, "node_id": "MDQ6VXNlcjE3MDc4OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/170789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rh0dium", "html_url": "https://github.com/rh0dium", "followers_url": "https://api.github.com/users/rh0dium/followers", "following_url": "https://api.github.com/users/rh0dium/following{/other_user}", "gists_url": "https://api.github.com/users/rh0dium/gists{/gist_id}", "starred_url": "https://api.github.com/users/rh0dium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rh0dium/subscriptions", "organizations_url": "https://api.github.com/users/rh0dium/orgs", "repos_url": "https://api.github.com/users/rh0dium/repos", "events_url": "https://api.github.com/users/rh0dium/events{/privacy}", "received_events_url": "https://api.github.com/users/rh0dium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-03-07T23:17:02Z", "updated_at": "2012-05-27T22:10:00Z", "closed_at": "2012-05-27T22:10:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Andrew,\n\nHaving spent the day reviewing your code and the tickets over on Django I can't seem to figure out how to define a:\n\nDetailWithInlineView\n\nI see UpdateWithInlinesView and the CreateWithInlinesView but that is for either creating the View or simultaneously updating it.  Coule I ask you to show me how you would do this.  FWIW I am OK with a DetailWithInlinesView (add 's').\n\nFWIW I think you code is way more usable than rasca's enhanced-cbv.  I think you should narrow this scope down to formsets  and submit them into Django.  This is very useful.  I could help if needed.\n", "performed_via_github_app": null, "score": 1.0}]}