{"total_count": 12, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/17", "repository_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework", "labels_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/17/comments", "events_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/17/events", "html_url": "https://github.com/ashleysommer/sanicpluginsframework/issues/17", "id": 564714613, "node_id": "MDU6SXNzdWU1NjQ3MTQ2MTM=", "number": 17, "title": "Shared context loose entries", "user": {"login": "klausmyrseth", "id": 1274704, "node_id": "MDQ6VXNlcjEyNzQ3MDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1274704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klausmyrseth", "html_url": "https://github.com/klausmyrseth", "followers_url": "https://api.github.com/users/klausmyrseth/followers", "following_url": "https://api.github.com/users/klausmyrseth/following{/other_user}", "gists_url": "https://api.github.com/users/klausmyrseth/gists{/gist_id}", "starred_url": "https://api.github.com/users/klausmyrseth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klausmyrseth/subscriptions", "organizations_url": "https://api.github.com/users/klausmyrseth/orgs", "repos_url": "https://api.github.com/users/klausmyrseth/repos", "events_url": "https://api.github.com/users/klausmyrseth/events{/privacy}", "received_events_url": "https://api.github.com/users/klausmyrseth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-13T14:19:51Z", "updated_at": "2020-02-19T23:58:59Z", "closed_at": "2020-02-19T23:58:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Env: Python 3.7.5, Sanic latest stable\r\nI am trying to use contextualize to use the context.shared to track clients to track some values that should not be reinitialized pr request, this gets my avg request time down from 60000 ms to 15 ms, awesome feature :D\r\n\r\nBut I noticed entries dropping from the context now and again, is there a ttl for the dictionary keys and if so how to I override this? I need to do my own cleanup to keep data sane.\r\n\r\nI been trying to reliably reproduce it and currently I cannot put my finger on what makes the values drop but I have a scenario where I have a Server Send Event (sse) stream sending data posted to other endpoints through context.shared, its working as a charm to a point, but when the client reconnects the sse client or drops the connection the shared context tend to drop after a short while.\r\n\r\nFirst I thought it was because i got context.get('shared', None), but after porting to context.shared I still get the same problem. I am trying to use the global shared context for contextualize.\r\n\r\nIt would be great to get some feedback on the issue as I would love to get this up and running properly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/15", "repository_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework", "labels_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/15/comments", "events_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/15/events", "html_url": "https://github.com/ashleysommer/sanicpluginsframework/issues/15", "id": 546632793, "node_id": "MDU6SXNzdWU1NDY2MzI3OTM=", "number": 15, "title": "Change to blueprints middleware handling in Sanic 19.12 breaks SPF and all SPF-based apps", "user": {"login": "ashleysommer", "id": 402468, "node_id": "MDQ6VXNlcjQwMjQ2OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/402468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashleysommer", "html_url": "https://github.com/ashleysommer", "followers_url": "https://api.github.com/users/ashleysommer/followers", "following_url": "https://api.github.com/users/ashleysommer/following{/other_user}", "gists_url": "https://api.github.com/users/ashleysommer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashleysommer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashleysommer/subscriptions", "organizations_url": "https://api.github.com/users/ashleysommer/orgs", "repos_url": "https://api.github.com/users/ashleysommer/repos", "events_url": "https://api.github.com/users/ashleysommer/events{/privacy}", "received_events_url": "https://api.github.com/users/ashleysommer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-08T04:04:58Z", "updated_at": "2020-01-08T23:58:26Z", "closed_at": "2020-01-08T23:58:26Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Related:\r\nhttps://github.com/ashleysommer/sanic-cors/issues/40\r\nhttps://github.com/huge-success/sanic/issues/1749", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/13", "repository_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework", "labels_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/13/comments", "events_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/13/events", "html_url": "https://github.com/ashleysommer/sanicpluginsframework/issues/13", "id": 491700368, "node_id": "MDU6SXNzdWU0OTE3MDAzNjg=", "number": 13, "title": "handling of arguments in SanicPlugin prevents multiple inheritance", "user": {"login": "fmux", "id": 8274667, "node_id": "MDQ6VXNlcjgyNzQ2Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8274667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmux", "html_url": "https://github.com/fmux", "followers_url": "https://api.github.com/users/fmux/followers", "following_url": "https://api.github.com/users/fmux/following{/other_user}", "gists_url": "https://api.github.com/users/fmux/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmux/subscriptions", "organizations_url": "https://api.github.com/users/fmux/orgs", "repos_url": "https://api.github.com/users/fmux/repos", "events_url": "https://api.github.com/users/fmux/events{/privacy}", "received_events_url": "https://api.github.com/users/fmux/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-10T14:13:50Z", "updated_at": "2019-09-11T10:38:43Z", "closed_at": "2019-09-11T10:38:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `__init__()` method of the `SanicPlugin` class checks for the presence of any arguments using the following lines (lines 429-437 in `plugin.py` at tag 0.8.2:\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        # Sometimes __init__ can be called twice.\r\n        # Ignore it on subsequent times\r\n        if self._initialized:\r\n            return\r\n        assert len(args) < 1,\\\r\n            \"Unexpected arguments passed to this Sanic Plugins.\"\r\n        assert len(kwargs) < 1,\\\r\n            \"Unexpected keyword arguments passed to this Sanic Plugins.\"\r\n\r\nHowever, in case of multiple inheritance, it may actually be necessary to pass on arguments to the next class in the method resolution order, as in the following proof-of-concept example:\r\n\r\n```\r\nfrom spf import SanicPlugin\r\n\r\n\r\nclass SecretKeyStore:\r\n    def __init__(self, secret_key, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n        self.secret_key = secret_key\r\n\r\n\r\nclass MyPlugin(SanicPlugin, SecretKeyStore):\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n\r\n\r\n# secret key might be read from a plugin-specific config file\r\nmy_plugin = MyPlugin(secret_key=\"abcd1234\")\r\n```\r\n\r\nNote that in this case it would still be possible to get the code to run by swapping the order of the base classes, however as soon as one has more than one base class that handles arguments the way `SanicPlugin` does, one is out of luck.\r\n\r\nIs there any reason why the two assertions are necessary? If not, I believe they can be simply deleted. If the only remaining class in the method resolution order is `object`, it will complain anyway if there are any arguments that were not accounted for.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/12", "repository_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework", "labels_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/12/comments", "events_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/12/events", "html_url": "https://github.com/ashleysommer/sanicpluginsframework/issues/12", "id": 482850553, "node_id": "MDU6SXNzdWU0ODI4NTA1NTM=", "number": 12, "title": "0.8.2 change, new error", "user": {"login": "jmbott", "id": 7769317, "node_id": "MDQ6VXNlcjc3NjkzMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7769317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmbott", "html_url": "https://github.com/jmbott", "followers_url": "https://api.github.com/users/jmbott/followers", "following_url": "https://api.github.com/users/jmbott/following{/other_user}", "gists_url": "https://api.github.com/users/jmbott/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmbott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmbott/subscriptions", "organizations_url": "https://api.github.com/users/jmbott/orgs", "repos_url": "https://api.github.com/users/jmbott/repos", "events_url": "https://api.github.com/users/jmbott/events{/privacy}", "received_events_url": "https://api.github.com/users/jmbott/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-20T13:08:15Z", "updated_at": "2020-01-08T23:58:41Z", "closed_at": "2020-01-08T23:58:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "On the latest version, `0.8.2` I am getting caught with the error, `App must be running before you can run middleware!`, [here](https://github.com/ashleysommer/sanicpluginsframework/blob/master/spf/framework.py#L533),  but not on previous releases. Using `spf` as a requirement of `Sanic-Cors`. \r\n\r\nOutput:\r\n\r\n```\r\nStarting...\r\n[2019-08-20 07:44:33 -0400] [66363] [DEBUG]\r\n\r\n                 Sanic\r\n         Build Fast. Run Fast.\r\n\r\n\r\n[2019-08-20 07:44:33 -0400] [66363] [INFO] Goin' Fast @ http://0.0.0.0:8000\r\n[2019-08-20 07:44:43 -0400] [66363] [ERROR] Exception occurred while handling uri: 'http://127.0.0.1:8000/'\r\nTraceback (most recent call last):\r\n  File \".../venv/lib/python3.7/site-packages/sanic/app.py\", line 910, in handle_request\r\n    response = await self._run_request_middleware(request)\r\n  File \".../venv/lib/python3.7/site-packages/spf/framework.py\", line 533, in _run_request_middleware\r\n    \"App must be running before you can run middleware!\"\r\nAssertionError: App must be running before you can run middleware!\r\n[2019-08-20 07:44:43 -0400] [66363] [DEBUG] CORS: Request to '/' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['.*'], 'expose_headers': None, 'supports_credentials': False, 'max_age': None, 'send_wildcard': False, 'automatic_options': False, 'vary_header': True, 'resources': '/*', 'intercept_exceptions': True, 'always_send': True}\r\n[2019-08-20 07:44:43 -0400] [66363] [DEBUG] CORS: Cannot find the request context. Is request already finished?\r\n[2019-08-20 07:44:43 -0400] [66363] [DEBUG] CORS: Cannot find the request context. Is request already finished?\r\n[2019-08-20 07:44:43 -0400] - (sanic.access)[INFO][127.0.0.1:54246]: GET http://127.0.0.1:8000/  500 144\r\n[2019-08-20 07:44:48 -0400] [66363] [DEBUG] KeepAlive Timeout. Closing connection.\r\n```\r\n\r\n**Python 3.7.4** (but same error with earlier versions)\r\n\r\n**sanic==19.6.2\r\nSanic-Cors==0.9.8.post3\r\nSanic-Plugins-Framework==0.8.2**\r\n\r\nTest to reproduce error:\r\n\r\n```\r\nfrom sanic import Sanic\r\nfrom sanic.response import json\r\nfrom sanic_cors import CORS\r\n\r\nimport asyncio\r\n\r\napp = Sanic(__name__)\r\n\r\nCORS(app, resources=r'/*')\r\n\r\nasync def hello(request):\r\n    return json({\"hello\": \"world\"})\r\n\r\napp.add_route(\r\n    hello,\r\n    '/',\r\n    methods=['GET', 'POST']\r\n)\r\n\r\ndef run():\r\n    loop = asyncio.get_event_loop()\r\n    srv_coro = app.create_server(\r\n        host='0.0.0.0',\r\n        port=8000,\r\n        return_asyncio_server=True,\r\n        asyncio_server_kwargs=None,\r\n        debug=True\r\n    )\r\n    asyncio.ensure_future(srv_coro)\r\n\r\n    try:\r\n        loop.run_forever()\r\n    except KeyboardInterrupt:\r\n        loop.stop()\r\n\r\n\r\nif __name__ == '__main__':\r\n    print('Starting...')\r\n    run()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/11", "repository_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework", "labels_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/11/comments", "events_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/11/events", "html_url": "https://github.com/ashleysommer/sanicpluginsframework/issues/11", "id": 419057140, "node_id": "MDU6SXNzdWU0MTkwNTcxNDA=", "number": 11, "title": "Memory leak in create_temporary_request_context() method", "user": {"login": "dangusev", "id": 3066740, "node_id": "MDQ6VXNlcjMwNjY3NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3066740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dangusev", "html_url": "https://github.com/dangusev", "followers_url": "https://api.github.com/users/dangusev/followers", "following_url": "https://api.github.com/users/dangusev/following{/other_user}", "gists_url": "https://api.github.com/users/dangusev/gists{/gist_id}", "starred_url": "https://api.github.com/users/dangusev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dangusev/subscriptions", "organizations_url": "https://api.github.com/users/dangusev/orgs", "repos_url": "https://api.github.com/users/dangusev/repos", "events_url": "https://api.github.com/users/dangusev/events{/privacy}", "received_events_url": "https://api.github.com/users/dangusev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-03-09T10:33:17Z", "updated_at": "2019-03-10T07:34:09Z", "closed_at": "2019-03-10T07:34:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @ashleysommer , it seems that there is a memory leak in the handling of the websocket requests. I am able to reproduce it with https://github.com/ashleysommer/sanic-cors \r\n\r\n### Long story short:\r\nThere's a call of `SanicPluginsFramework.create_temporary_request_context` in method `SanicPluginsFramework._run_request_middleware` which preserves a link to the current request in shared context. It seems that this temporary context is intended to be deleted in  `SanicPluginsFramework.delete_temporary_request_context`, but it doesn't happen because method `SanicPluginsFramework._run_response_middleware` won't be called  in case of websockets (response is `None` and response middleware won't be called as well https://github.com/huge-success/sanic/blob/master/sanic/app.py#L950). \r\n\r\n### How to reproduce:\r\n\r\n0. Download [issue.zip](https://github.com/ashleysommer/sanicpluginsframework/files/2948273/issue.zip)\r\n1. Install sanic, sanic_cors, tqdm, aiohttp\r\n2. Run `ws_server.py` (in attached zip)\r\n3. Run `ws_bench.py`\r\n4. Look at `chain.png` in the same directory, there will be a reference graph with stalled reference to random `CIMultiDict` instance\r\n5. Commenting out `SanicPluginsFramework.create_temporary_request_context` fixes the issue\r\n\r\nI briefly looked at the source code but didn't come up with any guess how to fix it. Any ideas? \r\n\r\nThanks a lot!\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/10", "repository_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework", "labels_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/10/comments", "events_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/10/events", "html_url": "https://github.com/ashleysommer/sanicpluginsframework/issues/10", "id": 401533625, "node_id": "MDU6SXNzdWU0MDE1MzM2MjU=", "number": 10, "title": "Example on Readme has incorrect import name", "user": {"login": "autumnjolitz", "id": 270476, "node_id": "MDQ6VXNlcjI3MDQ3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/270476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/autumnjolitz", "html_url": "https://github.com/autumnjolitz", "followers_url": "https://api.github.com/users/autumnjolitz/followers", "following_url": "https://api.github.com/users/autumnjolitz/following{/other_user}", "gists_url": "https://api.github.com/users/autumnjolitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/autumnjolitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/autumnjolitz/subscriptions", "organizations_url": "https://api.github.com/users/autumnjolitz/orgs", "repos_url": "https://api.github.com/users/autumnjolitz/repos", "events_url": "https://api.github.com/users/autumnjolitz/events{/privacy}", "received_events_url": "https://api.github.com/users/autumnjolitz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-21T22:41:20Z", "updated_at": "2019-01-21T23:57:18Z", "closed_at": "2019-01-21T23:57:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Minor typo in Readme example. Apparently it is `from spf import SanicPluginsFramework` (plural) not `from spf import SanicPluginFramework` as illustrated in the readme. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/9", "repository_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework", "labels_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/9/comments", "events_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/9/events", "html_url": "https://github.com/ashleysommer/sanicpluginsframework/issues/9", "id": 380859783, "node_id": "MDU6SXNzdWUzODA4NTk3ODM=", "number": 9, "title": "Use proper semantic version", "user": {"login": "unmade", "id": 9870176, "node_id": "MDQ6VXNlcjk4NzAxNzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9870176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unmade", "html_url": "https://github.com/unmade", "followers_url": "https://api.github.com/users/unmade/followers", "following_url": "https://api.github.com/users/unmade/following{/other_user}", "gists_url": "https://api.github.com/users/unmade/gists{/gist_id}", "starred_url": "https://api.github.com/users/unmade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unmade/subscriptions", "organizations_url": "https://api.github.com/users/unmade/orgs", "repos_url": "https://api.github.com/users/unmade/repos", "events_url": "https://api.github.com/users/unmade/events{/privacy}", "received_events_url": "https://api.github.com/users/unmade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-14T19:50:58Z", "updated_at": "2018-11-15T06:32:23Z", "closed_at": "2018-11-15T06:28:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nCan you please also do release tags like 0.6.4 (without `dev20181101` part)?\r\n\r\nThe thing is when I'm trying to install `sanic-cors` with `pipenv` it can't resolve SPF dependency. \r\nThere is a workaround to specify `pipenv install sanic-cors --pre` to resolve pre-release dependency, BUT this flag affects all other dependencies (for example it will coverage==5.0.3a, etc).\r\n\r\nI saw [previous ticket](https://github.com/ashleysommer/sanicpluginsframework/issues/4)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/8", "repository_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework", "labels_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/8/comments", "events_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/8/events", "html_url": "https://github.com/ashleysommer/sanicpluginsframework/issues/8", "id": 343463366, "node_id": "MDU6SXNzdWUzNDM0NjMzNjY=", "number": 8, "title": "How to use with websocket blueprint?", "user": {"login": "garyo", "id": 139975, "node_id": "MDQ6VXNlcjEzOTk3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/139975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyo", "html_url": "https://github.com/garyo", "followers_url": "https://api.github.com/users/garyo/followers", "following_url": "https://api.github.com/users/garyo/following{/other_user}", "gists_url": "https://api.github.com/users/garyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyo/subscriptions", "organizations_url": "https://api.github.com/users/garyo/orgs", "repos_url": "https://api.github.com/users/garyo/repos", "events_url": "https://api.github.com/users/garyo/events{/privacy}", "received_events_url": "https://api.github.com/users/garyo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-23T02:02:44Z", "updated_at": "2018-11-15T07:23:47Z", "closed_at": "2018-11-15T07:23:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to use the contextualize plugin to add a db engine to my app as in the example, and I have the plugin loading and registered using the `before_server_start` listener.\r\n\r\n```\r\n@contextualize.listener('before_server_start')\r\nasync def setup_db(app, loop, context):\r\n    from sqlalchemy import create_engine\r\n    shared_context = context.shared\r\n    engine = create_engine(app.config.get('DB_URI'))\r\n    shared_context['db'] = engine\r\n    dbsessionmaker = sessionmaker(bind=engine)\r\n    shared_context['dbsessionmaker'] = dbsessionmaker\r\n    logger.debug(f'SPF: setup_db: db is {engine}, dbsession_factory is {dbsessionmaker}')\r\n\r\ndef register_spf(app): # called during app setup\r\n    spf = SanicPluginsFramework(app)\r\n    spf.register_plugin(contextualize)\r\n```\r\n\r\nI'm not clear on how to use contextualize with a websocket blueprint like this (in another file):\r\n```\r\nws_bp = Blueprint('websocket_api', url_prefix='/websock/v1')\r\n\r\n# later...\r\n@ws_bp.websocket('/')\r\nasync def websock(request, ws):\r\n    logger.info(f'Server got websock connection {ws}')\r\n    socket = ClientSocket(ws)\r\n    # ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/6", "repository_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework", "labels_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/6/comments", "events_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/6/events", "html_url": "https://github.com/ashleysommer/sanicpluginsframework/issues/6", "id": 343143151, "node_id": "MDU6SXNzdWUzNDMxNDMxNTE=", "number": 6, "title": "setup.py doesn't install plugins, only spf", "user": {"login": "garyo", "id": 139975, "node_id": "MDQ6VXNlcjEzOTk3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/139975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyo", "html_url": "https://github.com/garyo", "followers_url": "https://api.github.com/users/garyo/followers", "following_url": "https://api.github.com/users/garyo/following{/other_user}", "gists_url": "https://api.github.com/users/garyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyo/subscriptions", "organizations_url": "https://api.github.com/users/garyo/orgs", "repos_url": "https://api.github.com/users/garyo/repos", "events_url": "https://api.github.com/users/garyo/events{/privacy}", "received_events_url": "https://api.github.com/users/garyo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-20T15:06:17Z", "updated_at": "2018-07-22T11:49:21Z", "closed_at": "2018-07-22T11:49:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since SPF now comes with contextualize plugin, it would be good if setup.py installs it. Right now it only installs the 'spf' package.\r\nHowever, it's probably best if the plugins package gets renamed to spf-plugins or put underneath spf, e.g. spf.plugins. I can do this, just let me know which way you prefer.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/5", "repository_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework", "labels_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/5/comments", "events_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/5/events", "html_url": "https://github.com/ashleysommer/sanicpluginsframework/issues/5", "id": 336058021, "node_id": "MDU6SXNzdWUzMzYwNTgwMjE=", "number": 5, "title": "Add context example?", "user": {"login": "garyo", "id": 139975, "node_id": "MDQ6VXNlcjEzOTk3NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/139975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/garyo", "html_url": "https://github.com/garyo", "followers_url": "https://api.github.com/users/garyo/followers", "following_url": "https://api.github.com/users/garyo/following{/other_user}", "gists_url": "https://api.github.com/users/garyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/garyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/garyo/subscriptions", "organizations_url": "https://api.github.com/users/garyo/orgs", "repos_url": "https://api.github.com/users/garyo/repos", "events_url": "https://api.github.com/users/garyo/events{/privacy}", "received_events_url": "https://api.github.com/users/garyo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-06-27T02:46:03Z", "updated_at": "2018-07-19T01:48:49Z", "closed_at": "2018-07-17T22:14:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm trying to use SPF with the built-in Contextualize plugin to add context to my app; specifically I'd like to tie the Sqlalchemy database sessionmaker to the app so anywhere I have the app (I'd like to do this for requests too) I can create a db session. I looked at the Contextualize example but it wasn't clear to me how to add things to the app context (or maybe Contextualize doesn't do that?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/4", "repository_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework", "labels_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/4/comments", "events_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/4/events", "html_url": "https://github.com/ashleysommer/sanicpluginsframework/issues/4", "id": 314638130, "node_id": "MDU6SXNzdWUzMTQ2MzgxMzA=", "number": 4, "title": "Pipenv dependancy resolution error", "user": {"login": "jamesstidard", "id": 1797906, "node_id": "MDQ6VXNlcjE3OTc5MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1797906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesstidard", "html_url": "https://github.com/jamesstidard", "followers_url": "https://api.github.com/users/jamesstidard/followers", "following_url": "https://api.github.com/users/jamesstidard/following{/other_user}", "gists_url": "https://api.github.com/users/jamesstidard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesstidard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesstidard/subscriptions", "organizations_url": "https://api.github.com/users/jamesstidard/orgs", "repos_url": "https://api.github.com/users/jamesstidard/repos", "events_url": "https://api.github.com/users/jamesstidard/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesstidard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-16T12:55:42Z", "updated_at": "2018-04-16T13:35:50Z", "closed_at": "2018-04-16T13:35:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've been using `sanic-cors` via `pipenv` and I've been getting a dependancy resolution error. My thoughts are because the version identifiers contain the string \"dev\", thought I thought python version parsing did allow for that.\r\n\r\nI've opened a main ticket [here](https://github.com/ashleysommer/sanic-cors/issues/17), but would appreciate any help resolving it.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/3", "repository_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework", "labels_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/3/comments", "events_url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/issues/3/events", "html_url": "https://github.com/ashleysommer/sanicpluginsframework/issues/3", "id": 304278161, "node_id": "MDU6SXNzdWUzMDQyNzgxNjE=", "number": 3, "title": "Websocket routes", "user": {"login": "daniel-skog", "id": 11430032, "node_id": "MDQ6VXNlcjExNDMwMDMy", "avatar_url": "https://avatars2.githubusercontent.com/u/11430032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daniel-skog", "html_url": "https://github.com/daniel-skog", "followers_url": "https://api.github.com/users/daniel-skog/followers", "following_url": "https://api.github.com/users/daniel-skog/following{/other_user}", "gists_url": "https://api.github.com/users/daniel-skog/gists{/gist_id}", "starred_url": "https://api.github.com/users/daniel-skog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daniel-skog/subscriptions", "organizations_url": "https://api.github.com/users/daniel-skog/orgs", "repos_url": "https://api.github.com/users/daniel-skog/repos", "events_url": "https://api.github.com/users/daniel-skog/events{/privacy}", "received_events_url": "https://api.github.com/users/daniel-skog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 722024311, "node_id": "MDU6TGFiZWw3MjIwMjQzMTE=", "url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 722024312, "node_id": "MDU6TGFiZWw3MjIwMjQzMTI=", "url": "https://api.github.com/repos/ashleysommer/sanicpluginsframework/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-12T08:29:32Z", "updated_at": "2018-06-16T05:33:33Z", "closed_at": "2018-06-16T05:33:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nThank you for a really nice framework! Really enjoying the context sharing features. One question:\r\nis it possible to use websocket routes with SPF plugins so that context can be shared?", "performed_via_github_app": null, "score": 1.0}]}